<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ay_software.xml" version="5.0" xml:id="CreateProfile-Software">  <title>软件</title>

 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker/>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <para>
    <remark role="fixme">Add a short description</remark>
   </para>

   <sect2 xml:id="Software-Selections-base-product" os="sles;sled">
    <title>产品选择</title>
    <para>
     从 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 15 开始，所有产品都是使用单个安装媒体分发的。因此，您需要使用 <tag class="element">product</tag> 标记选择要安装的产品。
    </para>
    <para>
     可用于 <tag class="element">product</tag> 标记的值包括：
    </para>

    <variablelist>
     <varlistentry>
      <term>SLES</term>
      <listitem>
       <para>
        SUSE Linux Enterprise Server
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>SLE_HPC</term>
      <listitem>
       <para>
        SUSE Linux Enterprise High Performance Computing
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>SLE_RT</term>
      <listitem>
       <para>
        SUSE Linux Enterprise Real Time
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>SLES_SAP</term>
      <listitem>
       <para>
        SUSE Linux Enterprise Server for SAP Applications
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>SLED</term>
      <listitem>
       <para>
        SUSE Linux Enterprise Desktop
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>SUSE-manager-server</term>
      <listitem>
       <para>
        SUSE Manager Server
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>SUSE-manager-retail-branch-server</term>
      <listitem>
       <para>
        SUSE Manager for Retail
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>SUSE-manager-proxy</term>
      <listitem>
       <para>
        SUSE Manager Proxy
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <example>
     <title>显式选择产品</title>
     <para>
      在以下示例中，所选择的产品为 SUSE Linux Enterprise Desktop：
     </para>
<screen>&lt;software&gt;
  &lt;products config:type="list"&gt;
    &lt;product&gt;SLED&lt;/product&gt;
  &lt;/products&gt;
&lt;/software&gt;
</screen>
    </example>
    <para>
     在特殊情况下，媒体可能只包含一个产品。如果是这样，则您无需按上面所述显式选择产品。AutoYaST 将自动选择唯一可用的产品。
    </para>
    <note>
     <title>
      使用先前版本中的 AutoYaST 文件
     </title>
     <para>
      如果您正在使用或迁移旧版 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中的 AutoYaST 配置文件，请注意一些特殊注意事项。有关细节，请参见<xref linkend="sec-ay-12vs15-product-selection"/>。
     </para>
    </note>
   </sect2>

   <sect2 xml:id="Software-Selections-sles10">
    <title>使用 patterns 和 packages 部分选择软件包</title>
    <para>
     模式或软件包的配置如下所示：
    </para>
    <example>
     <title>在控制文件中使用 patterns 和 packages 部分选择软件包</title>
<screen>&lt;software&gt;
  &lt;patterns config:type="list"&gt;
    &lt;pattern&gt;directory_server&lt;/pattern&gt;
  &lt;/patterns&gt;
  &lt;packages config:type="list"&gt;
    &lt;package&gt;apache&lt;/package&gt;
    &lt;package&gt;postfix&lt;/package&gt;
  &lt;/packages&gt;
  &lt;do_online_update config:type="boolean"&gt;true&lt;/do_online_update&gt;
&lt;/software&gt;</screen>
    </example>
    <note>
     <title>软件包和模式名称</title>
     <para>
      这些值是真实的软件包或模式名称。如果软件包名称由于升级而发生更改，则您也需要调整这些设置。
     </para>
    </note>
   </sect2>

   

   <sect2 xml:id="Software-Selections-additional">
    <title>安装其他/自定义的软件包或产品</title>
    <para>
     除了 DVD-ROM 中可供安装的软件包以外，您还可以添加外部软件包（包括自定义的内核）。自定义的内核软件包必须与 SUSE 软件包兼容，并且内核文件必须安装到相同的位置。
    </para>
    <para>
     与先前版本不同，您无需在控制文件中使用特殊的资源即可安装自定义软件包和外部软件包。不过，您需要重新创建软件包数据库，并使用源储存库中的任何新软件包或新软件包版本更新该数据库。
    </para>
    <para>
     我们提供了一个脚本用于完成此任务。该脚本会查询储存库中提供的软件包并创建软件包数据库。使用命令 <command>/usr/bin/create_package_descr</command>。openSUSE Build Service 的 <literal>inst-source-utils</literal> 软件包中提供了此脚本。创建数据库时，所有语言将重设置为英语。
    </para>
    <example>
     <title>使用附加软件包 inst-source-utils.rpm 创建软件包数据库</title>
     <para>
     解压缩的 DVD 位于 <literal>/usr/local/DVDs/LATEST</literal> 中。
     </para>
<screen><prompt>tux &gt; </prompt>cp /tmp/inst-source-utils-2016.7.26-1.2.noarch.rpm /usr/local/DVDs/LATEST/suse/noarch
<prompt>tux &gt; </prompt>cd /usr/local/DVDs/LATEST/suse
<prompt>tux &gt; </prompt>create_package_descr -d /usr/local/CDs/LATEST/suse</screen>
    </example>
    <para>
     在以上示例中，目录 <filename>/usr/local/CDs/LATEST/suse</filename> 包含与体系结构相关的（例如 <literal>x86_64</literal>）以及与体系结构不相关的软件包 (<literal>noarch</literal>)。在其他体系结构上，可能并不相同。
    </para>
    <para>
     此方法的优势是可以保留包含固定软件包和已更新软件包的最新储存库。此外，此方法可以简化自定义 CD-ROM 的创建。
    </para>
    <para>
     要添加您自己的模块，例如 SDK (SUSE Software Development Kit)，请将文件 <filename>add_on_products.xml</filename> 添加到安装源的根目录中。
    </para>
    <para>
     以下示例演示如何将 SDK 模块添加到基础产品储存库。完整的 SDK 储存库将储存在目录 <filename>/sdk</filename> 中。
    </para>
    <example>
     <title><filename>add_on_products.xml</filename>
     </title>
     <para>此文件描述基础产品中包含的 SDK 模块。</para>
<screen>
&lt;?xml version="1.0"?&gt;
&lt;add_on_products xmlns="http://www.suse.com/1.0/yast2ns"
   xmlns:config="http://www.suse.com/1.0/configns"&gt;
   &lt;product_items config:type="list"&gt;
      &lt;product_item&gt;
         &lt;name&gt;SUSE Linux Enterprise Software Development Kit&lt;/name&gt;
         &lt;url&gt;relurl:////sdk?alias=SLE_SDK&lt;/url&gt;
         &lt;path&gt;/&lt;/path&gt;
         &lt;-- Users are asked whether to add such a product --&gt;
         &lt;ask_user config:type="boolean"&gt;false&lt;/ask_user&gt;
         &lt;-- Defines the default state of pre-selected state in case of ask_user used. --&gt;
         &lt;selected config:type="boolean"&gt;true&lt;/selected&gt;
      &lt;/product_item&gt;
   &lt;/product_items&gt;
&lt;/add_on_products&gt;
</screen>
    </example>
    
    <para>
     除这种特殊情况外，在安装 AutoYaST 期间，还几乎可以从其他每个位置添加所有其他模块、扩展和附加产品。
    </para>
    <para>
      在安装期间甚至可以添加没有任何产品或模块信息的储存库。这些储存库称为<literal>其他附加项</literal>。
    </para>
    <remark>
     FIXME: The SLE SDK does not exist anymore, example below needs to be
     updated. - sknorr, 2020-07-02
    </remark>
    <example>
     <title>添加 SDK 扩展和用户定义的储存库</title>
<screen>&lt;add-on&gt;
  &lt;add_on_products config:type="list"&gt;
    &lt;listentry&gt;
      &lt;media_url&gt;cd:///sdk&lt;/media_url&gt;
      &lt;product&gt;sle-sdk&lt;/product&gt;
      &lt;alias&gt;SLE SDK&lt;/alias&gt;
      &lt;product_dir&gt;/&lt;/product_dir&gt;
      &lt;priority config:type="integer"&gt;20&lt;/priority&gt;
      &lt;ask_on_error config:type="boolean"&gt;false&lt;/ask_on_error&gt;
      &lt;confirm_license config:type="boolean"&gt;false&lt;/confirm_license&gt;
      &lt;name&gt;SUSE Linux Enterprise Software Development Kit&lt;/name&gt;
    &lt;/listentry&gt;
  &lt;/add_on_products&gt;
  &lt;add_on_others config:type="list"&gt;
    &lt;listentry&gt;
      &lt;media_url&gt;https://download.opensuse.org/repositories/YaST:/Head/openSUSE_Leap_15.2/&lt;/media_url&gt;
      &lt;alias&gt;yast2_head&lt;/alias&gt;
      &lt;priority config:type="integer"&gt;30&lt;/priority&gt;
      &lt;name&gt;Latest YaST2 packages from OBS&lt;/name&gt;
    &lt;/listentry&gt;
  &lt;/add_on_others&gt;
&lt;/add-on&gt;</screen>
    </example>
    <para>
      <literal>add_on_others</literal> 和 <literal>add_on_products</literal> 部分支持相同的值：
    </para>
    
    <variablelist>
     <varlistentry>
      <term>media_url</term>
      <listitem>
       <para>
        产品 URL。可以包含前缀 <literal>cd:///</literal>、<literal>http://</literal>、<literal>ftp://</literal> 等。此项是必需的。
       </para>
       <para>
        如果您使用 SUSE Linux Enterprise Packages DVD 等多产品媒体，则 URL 路径应指向多产品媒体的根目录。使用 <literal>product_dir</literal> 值选择特定的产品目录（参见下文）。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>product</term>
      <listitem>
       <para>
        内部产品名（如果附加项是产品）。命令 <command>zypper products</command> 显示已安装产品的名称。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>alias</term>
      <listitem>
       <para>
        储存库别名。由用户定义。
       </para>
       
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>product_dir</term>
      <listitem>
       <para>
        可选的子路径。此项只可用于 SUSE Linux Enterprise Packages DVD 等多产品媒体。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>priority</term>
      <listitem>
       <para>
        设置储存库 libzypp 优先级。1 是最高优先级。数字越大，优先级越低。默认值为 99。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>ask_on_error</term>
      <listitem>
       <para>
        在给定的位置找不到储存库时，AutoYaST 可以要求用户提供附加产品、模块或扩展，而不是报告超时错误。请将 <literal>ask_on_error</literal> 设为 <literal>true</literal>（默认值为 <literal>false</literal>）。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>confirm_license</term>
      <listitem>
       <para>
        用户需要确认许可。默认为 <literal>false</literal>。
       </para>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>name</term>
      <listitem>
        <para>
         储存库名称。命令 <command>zypper lr</command> 显示已添加的储存库的名称。
        </para>
      </listitem>
     </varlistentry>
    </variablelist>

    <para>
     要在 AutoYaST 中使用未签名的安装源，请在 AutoYaST 控制文件中使用以下配置关闭检查。
    </para>
    <note>
     <title>未签名的安装源 — 限制</title>
     <para>
      只能在自动安装过程的第一个阶段禁用签名检查。在第二个阶段，已安装系统的配置将优先于 AutoYaST 配置。</para>
    </note>
    <para>
     下面列出的元素必须放在以下 XML 结构中：
    </para>
<screen>&lt;general&gt;
  &lt;signature-handling&gt;
    ...
  &lt;/signature-handling&gt;
&lt;/general&gt;</screen>
    <para>
     所有选项的默认值均为 <literal>false</literal>。如果某个选项设置为 <literal>false</literal>，而某个软件包或储存库未通过相关测试，则会以静默方式忽略而不予安装。请注意，将其中的任何选项设置为 <literal>true</literal> 都有可能带来安全风险。使用源自第三方的软件包或储存库时请勿这样做。
    </para>
    
    <variablelist>
     <varlistentry>
      <term>accept_unsigned_file</term>
      <listitem>
       <para>
        如果设为 <literal>true</literal>，AutoYaST 将接受未签名的文件，例如内容文件。
       </para>
<screen>&lt;accept_unsigned_file config:type="boolean" &gt;true&lt;/accept_unsigned_file&gt;</screen>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>accept_file_without_checksum</term>
      <listitem>
       <para>
        如果设置为 <literal>true</literal>，AutoYaST 将接受内容文件中没有校验和的文件。
       </para>
<screen>&lt;accept_file_without_checksum config:type="boolean" &gt;true&lt;/accept_file_without_checksum&gt;</screen>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>accept_verification_failed</term>
      <listitem>
       <para>
        如果设置为 <literal>true</literal>，即使签名校验失败，AutoYaST 也会接受这些已签名的文件。
       </para>
<screen>&lt;accept_verification_failed config:type="boolean" &gt;true&lt;/accept_verification_failed&gt;</screen>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>accept_unknown_gpg_key</term>
      <listitem>
       <para>
        如果设置为 <literal>true</literal>，AutoYaST 将接受安装源的新 GPG 密钥，例如，用来对内容文件签名的密钥。
       </para>
<screen>&lt;accept_unknown_gpg_key config:type="boolean" &gt;true&lt;/accept_unknown_gpg_key&gt;</screen>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>accept_non_trusted_gpg_key</term>
      <listitem>
       <para>
        将此选项设置为 <literal>true</literal> 会接受您尚未信任的已知密钥。
       </para>
<screen>&lt;accept_non_trusted_gpg_key config:type="boolean" &gt;true&lt;/accept_non_trusted_gpg_key&gt;</screen>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>import_gpg_key</term>
      <listitem>
       <para>
        如果设置为 <literal>true</literal>，AutoYaST 将接受安装源上的新 GPG 密钥并将其导入自身的数据库中。
       </para>
<screen>&lt;import_gpg_key config:type="boolean" &gt;true&lt;/import_gpg_key&gt;</screen>
      </listitem>
     </varlistentry>
     
    </variablelist>
    
    <para>
     可以单独配置每个附加产品、模块或扩展的签名处理。以下元素必须位于各个附加产品、模块或扩展的 <literal>signature-handling</literal> 部分之间。所有设置都是可选的。如果未配置，将使用 <literal>general</literal> 部分中的全局签名处理方式。
    </para>
    
    <variablelist>
     <varlistentry>
      <term>accept_unsigned_file</term>
      <listitem>
       <para>
        如果设为 <literal>true</literal>，AutoYaST 将接受未签名的文件，例如此附加产品的内容文件。
       </para>
<screen>&lt;accept_unsigned_file config:type="boolean" &gt;true&lt;/accept_unsigned_file&gt;</screen>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>accept_file_without_checksum</term>
      <listitem>
       <para>
        如果设置为 <literal>true</literal>，AutoYaST 将接受此附加产品的内容文件中没有校验和的文件。
       </para>
<screen>&lt;accept_file_without_checksum config:type="boolean" &gt;true&lt;/accept_file_without_checksum&gt;</screen>
      </listitem>
     </varlistentry>
      
     <varlistentry>
      <term>accept_verification_failed</term>
      <listitem>
       <para>
        如果设置为 <literal>true</literal>，即使签名校验失败，AutoYaST 也会接受这些已签名的文件。
       </para>
<screen>&lt;accept_verification_failed config:type="boolean" &gt;true&lt;/accept_verification_failed&gt;</screen>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>accept_unknown_gpg_key</term>
      <listitem>
       <para>
        如果 <literal>all</literal> 设置为 <literal>true</literal>，AutoYaST 将接受安装源上的新 GPG 密钥。
       </para>
<screen>&lt;accept_unknown_gpg_key&gt; &lt;all config:type="boolean"&gt;true&lt;/all&gt; &lt;/accept_unknown_gpg_key&gt;</screen>
       <para>
        或者，您可以定义单个密钥：
       </para>
<screen>&lt;accept_unknown_gpg_key&gt; &lt;all config:type="boolean"&gt;false&lt;/all&gt; &lt;keys config:type="list"&gt; &lt;keyid&gt;3B3011B76B9D6523&lt;/keyid&gt; lt;/keys&gt; &lt;/accept_unknown_gpg_key&gt;</screen>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>accept_non_trusted_gpg_key</term>
      <listitem>
       <para>
        这表示密钥已知，但不受您的信任。可以通过添加以下命令来信任所有密钥：
       </para>
<screen>&lt;accept_non_trusted_gpg_key&gt; &lt;all config:type="boolean"&gt;true&lt;/all&gt; &lt;/accept_non_trusted_gpg_key&gt;</screen>
       <para>
        或者，您可以信任特定的密钥：
       </para>
<screen>&lt;accept_non_trusted_gpg_key&gt; &lt;all config:type="boolean"&gt;false&lt;/all&gt; &lt;keys config:type="list"&gt; &lt;keyid&gt;3B3011B76B9D6523&lt;/keyid&gt; &lt;/keys&gt; &lt;/accept_non_trusted_gpg_key&gt;</screen>
      </listitem>
     </varlistentry>
     
     <varlistentry>
      <term>import_gpg_key</term>
      <listitem>
       <para>
        如果 <literal>all</literal> 设置为 <literal>true</literal>，AutoYaST 将接受安装源上的所有新 GPG 密钥并将其导入自身的数据库中。
       </para>
<screen>&lt;import_gpg_key&gt; &lt;all config:type="boolean"&gt;true&lt;/all&gt; &lt;/import_gpg_key&gt;</screen>
       <para>
        只能对特定的密钥执行此操作：
       </para>
<screen>&lt;import_gpg_key&gt; &lt;all config:type="boolean"&gt;false&lt;/all&gt; &lt;keys config:type="list"&gt; &lt;keyid&gt;3B3011B76B9D6523&lt;/keyid&gt; &lt;/keys&gt; &lt;/import_gpg_key&gt;</screen>
      </listitem>
     </varlistentry>
     
    </variablelist>
   </sect2>

   <sect2 xml:id="Software-Selections-kernel">
    <title>内核软件包</title>
    <para>
     内核软件包不在任何选项内。所需内核是在安装期间确定的。如果将内核软件包添加到任何选项或单个软件包选项，安装基本上都会由于冲突而失败。
    </para>
    <para>
     要强制安装特定的内核，请使用 <literal>kernel</literal> 属性。下面是强制安装默认内核的示例。即使需要 SMP 或其他内核，也会安装此内核。
    </para>
    <example>
     <title>在控制文件中选择内核</title>
<screen>&lt;software&gt;
  &lt;kernel&gt;kernel-default&lt;/kernel&gt;
  ...
&lt;/software&gt;</screen>
    </example>
   </sect2>

   <sect2 xml:id="Software-Selections-remove-packs">
    <title>去除自动选择的软件包</title>
    <para>
     某些软件包是由于存在依赖关系或者可供选择而被自动选择的。
    </para>
    <para>
     去除这些软件包可能会破坏系统一致性，除非已获得可提供相同服务的替代软件包，否则不建议去除基本软件包。邮件传输代理 (MTA) 软件包就是其中最典型的示例。默认会选择并安装 <systemitem>postfix</systemitem>。要使用其他 MTA（例如 <systemitem>sendmail</systemitem>），可以使用软件资源中的列表从选定软件包列表中去除 postfix。但请注意，<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 并未随附 sendmail。以下示例演示了如何执行此操作：
    </para>
    <example>
     <title>在控制文件中选择软件包</title>
<screen>&lt;software&gt;
  &lt;packages config:type="list"&gt;
    &lt;package&gt;sendmail&lt;/package&gt;
  &lt;/packages&gt;
  &lt;remove-packages config:type="list"&gt;
    &lt;package&gt;postfix&lt;/package&gt;
  &lt;/remove-packages&gt;
&lt;/software&gt;</screen>
    </example>

    <note>
     <title>软件包去除失败</title>
     <para>
      请注意，无法去除某个模式中的软件包（请参见<xref linkend="Software-Selections-sles10"/>）。如果指定去除此类软件包，安装将会失败并出现以下错误消息：
     </para>
     <screen>The package resolver run failed. Check
      your software section in the AutoYaST profile.</screen>
    </note>

   </sect2>

   <sect2 xml:id="Software-Selections-recommend-packs">
    <title>安装建议的软件包/模式</title>
    <para>
     默认会安装所有建议的软件包/模式。要进行最小安装（仅包括必需的软件包），可以使用标志 <literal>install_recommended</literal> 关闭此行为。请注意，此标志只会影响全新安装，在升级期间将被忽略。
    </para>
<screen>&lt;software&gt;
  &lt;install_recommended config:type="boolean"&gt;false
  &lt;/install_recommended&gt;
&lt;/software&gt;</screen>

    <para>
     <emphasis>默认</emphasis>：如果未在配置文件中设置此标志，将安装<emphasis>所有</emphasis>建议的<literal>软件包</literal>，但<emphasis>不会</emphasis>安装建议的<literal>模式</literal>。
    </para>

   </sect2>

   <sect2 xml:id="Software-Selections-stage2-packs">
    <title>在第 2 个阶段安装软件包</title>
    <para>
     要在第二个阶段重引导后安装软件包，可以使用 <literal>post-packages</literal> 元素：
    </para>
<screen>&lt;software&gt;
  &lt;post-packages config:type="list"&gt;
    &lt;package&gt;yast2-cim&lt;/package&gt;
  &lt;/post-packages&gt;
&lt;/software&gt;</screen>
   </sect2>

   <sect2 xml:id="Software-Selections-stage2-patterns">
    <title>在第 2 个阶段安装模式</title>
    <para>
     您还可以在第 2 个阶段安装模式。为此，请使用 <literal>post-patterns</literal> 元素：
    </para>
<screen>&lt;software&gt;
  &lt;post-patterns config:type="list"&gt;
    &lt;pattern&gt;apparmor&lt;/pattern&gt;
  &lt;/post-patterns&gt;
&lt;/software&gt;</screen>
   </sect2>

   <sect2 xml:id="Software-Selections-stage2-update">
    <title>在第 2 个阶段联机更新</title>
    <para>
     可以在安装结束时执行联机更新。请将 <literal>do_online_update</literal> 布尔值设置为 <literal>true</literal>。当然，仅当您在 suse-register/customer-center 部分或者安装后脚本中添加了联机更新储存库时，此设置才起作用。如果已通过 add-on 部分在第一个阶段提供了联机更新储存库，则 AutoYaST 应已安装了可用的最新软件包。如果内核更新是通过联机更新完成的，则第二个阶段结束时会触发重引导。
    </para>
<screen>&lt;software&gt;
  &lt;do_online_update config:type="boolean"&gt;true&lt;/do_online_update&gt;
&lt;/software&gt;</screen>
   </sect2>
  </sect1>
