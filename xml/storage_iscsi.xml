<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-iscsi" xml:lang="en">
 <title>Mass Storage over IP Networks: iSCSI</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  One of the primary tasks of a computer center, or any site that supports
  servers, is to provide adequate disk capacity. Fibre Channel is often used
  for this purpose. iSCSI (Internet SCSI) solutions provide a lower-cost
  alternative to Fibre Channel that can leverage commodity servers and Ethernet
  networking equipment. Linux iSCSI provides iSCSI initiator and iSCSI LIO
  target software for connecting Linux servers to central storage systems.
 </para>
 <figure>
  <title>iSCSI SAN with an iSNS Server</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="iscsi_san_a.svg" width="80%" format="SVG"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="iscsi_san_a.png" width="100%" format="PNG"/>
   </imageobject>
  </mediaobject>
 </figure>
 <note>
  <title>LIO</title>
  <para>
   LIO (<link xlink:href="http://linux-iscsi.org"/>) is the standard open
   source multiprotocol SCSI target for Linux. LIO replaced the STGT (SCSI
   Target) framework as the standard unified storage target in Linux with Linux
   kernel version 2.6.38 and later. In &productname; 12 the iSCSI LIO Target
   Server replaces the iSCSI Target Server from previous versions.
  </para>
 </note>
 <para>
  iSCSI is a storage networking protocol that simplifies data transfers of SCSI
  packets over TCP/IP networks between block storage devices and servers. iSCSI
  target software runs on the target server and defines the logical units as
  iSCSI target devices. iSCSI initiator software runs on different servers and
  connects to the target devices to make the storage devices available on that
  server.
 </para>
 <para>
  The iSCSI LIO target server and iSCSI initiator servers communicate by
  sending SCSI packets at the IP level in your LAN. When an application running
  on the initiator server starts an inquiry for an iSCSI LIO target device, the
  operating system produces the necessary SCSI commands. The SCSI commands are
  then embedded in IP packets and encrypted as necessary by software that is
  commonly known as the <emphasis>iSCSI initiator</emphasis>. The packets are
  transferred across the internal IP network to the corresponding iSCSI remote
  station, called the <emphasis>iSCSI LIO target server</emphasis>, or simply
  the <emphasis>iSCSI target</emphasis>.
 </para>
 <para>
  Many storage solutions provide access over iSCSI, but it is also possible to
  run a Linux server that provides an iSCSI target. In this case, it is
  important to set up a Linux server that is optimized for file system
  services. For more information about RAID, also see
  <xref linkend="cha-raid" xrefstyle="ChapTitleOnPage"/>.
 </para>
 <sect1 xml:id="sec-iscsi-install">
  <title>Installing the iSCSI LIO Target Server and iSCSI Initiator</title>

  <para>
   While the iSCSI initiator is installed by default (packages
   <systemitem class="resource">open-iscsi</systemitem> and
   <systemitem class="resource">yast2-iscsi-client</systemitem>), the iSCSI LIO
   target packages need to be installed manually.
  </para>

  <important>
   <title>Initiator and Target on the Same Server</title>
   <para>
    While it is possible to run initiator and target in the same system, this
    setup is not recommended.
   </para>
  </important>

  <para>
   To install the iSCSI LIO Target Server, run the following command in a
   terminal console:
  </para>

<screen>&prompt.sudo;zypper in yast2-iscsi-lio-server</screen>

  <para>
   In case you need to install the iSCSI initiator or any of its dependencies,
   run the command <command>sudo zypper in yast2-iscsi-client</command>.
  </para>

  <para>
   Alternatively, use the &yast; Software Management module for installation.
  </para>

  <para>
   Any packages required in addition to the ones mentioned above will either be
   automatically pulled in by the installer, or be installed when you first run
   the respective &yast; module.
  </para>
 </sect1>
 <sect1 xml:id="sec-iscsi-target">
  <title>Setting Up an iSCSI LIO Target Server</title>

  <para>
   This section describes how to use &yast; to configure an iSCSI LIO Target
   Server and set up iSCSI LIO target devices. You can use any iSCSI initiator
   software to access the target devices.
  </para>

  <sect2 xml:id="sec-iscsi-target-start">
   <title>iSCSI LIO Target Service Start-up and Firewall Settings</title>
   <para>
    The iSCSI LIO Target service is by default configured to be started
    manually. You can configure the service to start automatically at boot
    time. If you use a firewall on the server and you want the iSCSI LIO
    targets to be available to other computers, you must open a port in the
    firewall for each adapter that you want to use for target access. TCP port
    3260 is the port number for the iSCSI protocol, as defined by IANA
    (Internet Assigned Numbers Authority).
   </para>
   <procedure>
    <step>
     <para>
      Start &yast; and launch <menuchoice> <guimenu>Network Services</guimenu>
      <guimenu>iSCSI LIO Target</guimenu> </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Switch to the <guimenu>Service</guimenu> tab.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="lio_service_a.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="lio_service_a.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      Under <guimenu>Service Start</guimenu>, specify how you want the iSCSI
      LIO target service to be started:
     </para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <formalpara>
        <title>When Booting:</title>
        <para>
         The service starts automatically on server restart.
        </para>
       </formalpara>
      </listitem>
      <listitem>
       <formalpara>
        <title>Manually:</title>
        <para>
         (Default) You must start the service manually after a server restart
         by running <command>sudo systemctl start targetcli</command>. The target
         devices are not available until you start the service.
        </para>
       </formalpara>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>
      If you use a firewall on the server and you want the iSCSI LIO targets to
      be available to other computers, open port 3260 in the firewall for each
      adapter interface that you want to use for target access. If the port is
      closed for all of the network interfaces, the iSCSI LIO targets are not
      available to other computers.
     </para>
     <para>
      If you do not use a firewall on the server, the firewall settings are
      disabled. In this case skip the following steps and leave the
      configuration dialog with <guimenu>Finish</guimenu> or switch to another
      tab to continue with the configuration.
     </para>
     <substeps performance="required">
      <step>
       <para>
        On the <guimenu>Services</guimenu> tab, select the <guimenu>Open Port
        in Firewall</guimenu> check box to enable the firewall settings.
       </para>
      </step>
      <step>
       <para>
        Click <guimenu>Firewall Details</guimenu> to view or configure the
        network interfaces to use. All available network interfaces are listed,
        and all are selected by default. Deselect all interfaces on which the
        port should <emphasis>not</emphasis> be opened. Save your settings with
        <guimenu>OK</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Click <guimenu>Finish</guimenu> to save and apply the iSCSI LIO Target
      service settings.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-iscsi-target-authenticate">
   <title>Configuring Authentication for Discovery of iSCSI LIO Targets and Initiators</title>
   <para>
    The iSCSI LIO Target Server software supports the PPP-CHAP (Point-to-Point
    Protocol Challenge Handshake Authentication Protocol), a three-way
    authentication method defined in the <citetitle>Internet Engineering Task
    Force (IETF) RFC 1994</citetitle>
    (<link xlink:href="https://tools.ietf.org/rfc/rfc1994.txt"/>). The server uses
    this authentication method for the discovery of iSCSI LIO targets and
    initiators, not for accessing files on the targets. If you do not want to
    restrict the access to the discovery, use <guimenu>No
    Authentication</guimenu>. The <guimenu>No Discovery Authentication</guimenu> option
    is enabled by default. Without requiring authentication all iSCSI LIO
    targets on this server can be discovered by any iSCSI initiator on the same
    network.
   </para>
   <para>
    If authentication is needed for a more secure configuration, you can use
    incoming authentication, outgoing authentication, or both.
    <guimenu>Authentication by Initiators</guimenu> requires an iSCSI initiator to
    prove that it has the permissions to run a discovery on the iSCSI LIO
    target. The initiator must provide the incoming user name and password.
    <guimenu>Authentication by Targets</guimenu> requires the iSCSI LIO target to
    prove to the initiator that it is the expected target. The iSCSI LIO target
    must provide the outgoing user name and password to the iSCSI initiator.
    The password needs to be different for incoming and outgoing discovery. If
    authentication for discovery is enabled, its settings apply to all iSCSI
    LIO target groups.
   </para>
   <important>
    <title>Security</title>
    <para>
     We recommend that you use authentication for target and initiator
     discovery in production environments for security reasons.
    </para>
   </important>
   <para>
    To configure authentication preferences for iSCSI LIO targets:
   </para>
   <procedure>
    <step>
     <para>
      Start &yast; and launch <menuchoice> <guimenu>Network Services</guimenu>
      <guimenu>iSCSI LIO Target</guimenu> </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Switch to the <guimenu>Global</guimenu> tab.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="lio_global_noauth_a.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="lio_global_noauth_a.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      By default, authentication is disabled (<guimenu>No Discovery
      Authentication</guimenu>). To enable Authentication, select
      <guimenu>Authentication by Initiators</guimenu>, <guimenu>Outgoing
      Authentication</guimenu> or both.
     </para>
    </step>
    <step>
     <para>
      Provide credentials for the selected authentication method(s). The user
      name and password pair must be different for incoming and outgoing
      discovery.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Finish</guimenu> to save and apply the settings.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-iscsi-target-storage">
   <title>Preparing the Storage Space</title>
   <para>
    Before you configure LUNs for your iSCSI Target servers, you must prepare
    the storage you want to use. You can use the entire unformatted block
    device as a single LUN, or you can subdivide a device into unformatted
    partitions and use each partition as a separate LUN. The iSCSI target
    configuration exports the LUNs to iSCSI initiators.
   </para>
   <para>
    You can use the Partitioner in &yast; or the command line to set up the
    partitions. Refer to <xref linkend="sec-expert-partitioner"/> for
    details. iSCSI LIO targets can use unformatted partitions with Linux, Linux
    LVM, or Linux RAID file system IDs.
   </para>

   <important>
    <title>Do Not Mount iSCSI Target Devices</title>
    <para>
     After you set up a device or partition for use as an iSCSI target, you
     never access it directly via its local path. Do not mount the partitions
     on the target server.
    </para>
   </important>

   <sect3 xml:id="sec-iscsi-target-storage-vm">
    <title>Partitioning Devices in a Virtual Environment</title>
    <para>
     You can use a virtual machine guest server as an iSCSI LIO Target Server.
     This section describes how to assign partitions to a &xen; virtual
     machine. You can also use other virtual environments that are supported by
     &productname;.
    </para>
    <para>
     In a &xen; virtual environment, you must assign the storage space you want
     to use for the iSCSI LIO target devices to the guest virtual machine, then
     access the space as virtual disks within the guest environment. Each
     virtual disk can be a physical block device, such as an entire disk,
     partition, or volume, or it can be a file-backed disk image where the
     virtual disk is a single image file on a larger physical disk on the &xen;
     host server. For the best performance, create each virtual disk from a
     physical disk or a partition. After you set up the virtual disks for the
     guest virtual machine, start the guest server, then configure the new
     blank virtual disks as iSCSI target devices by following the same process
     as for a physical server.
    </para>
    <para>
     File-backed disk images are created on the &xen; host server, then
     assigned to the &xen; guest server. By default, &xen; stores file-backed
     disk images in the
     <filename>/var/lib/xen/images/<replaceable>VM_NAME</replaceable></filename>
     directory, where <filename><replaceable>VM_NAME</replaceable></filename>
     is the name of the virtual machine.
    </para>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-iscsi-target-target-group">
   <title>Setting Up an iSCSI LIO Target Group</title>
   <para>
    You can use &yast; to configure iSCSI LIO target devices. &yast; uses APIs
    provided by the <command>lio-utils</command> software. iSCSI LIO targets
    can use partitions with Linux, Linux LVM, or Linux RAID file system IDs.
   </para>
   <important>
    <title>Partitions</title>
    <para>
     Before you begin, choose the partitions you wish to use for back-end
     storage. The partitions do not have to be formatted&mdash;the iSCSI client
     can format them when connected, overwriting all existing formatting.
    </para>
   </important>
   <procedure>
    <step>
     <para>
      Start &yast; and launch <menuchoice> <guimenu>Network Services</guimenu>
      <guimenu>iSCSI LIO Target</guimenu> </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Switch to the <guimenu>Targets</guimenu> tab.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="lio_targets_a.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="lio_targets_a.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      Click <guimenu>Add</guimenu>, then define a new iSCSI LIO target group
      and devices:
     </para>
     <para>
      The iSCSI LIO Target software automatically completes the
      <guimenu>Target</guimenu>, <guimenu>Identifier</guimenu>, <guimenu>Portal
      Group</guimenu>, <guimenu>IP Address</guimenu>, and <guimenu>Port
      Number</guimenu> fields. <guimenu>Use Authentication</guimenu> is
      selected by default.
     </para>
     <substeps performance="required">
      <step>
       <para>
        If you have multiple network interfaces, use the IP address drop-down
        box to select the IP address of the network interface to use for this
        target group. To make the server accessible under all addresses, choose
        <guimenu>Bind All IP Addresses</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Deselect <guimenu>Use Authentication</guimenu> if you do not want to
        require initiator authentication for this target group (not
        recommended).
       </para>
      </step>
      <step>
       <para>
        Click <guimenu>Add</guimenu>. Enter the path of the device or partition
        or <guimenu>Browse</guimenu> to add it. Optionally specify a name, then
        click <guimenu>OK</guimenu>. The LUN number is automatically generated,
        beginning with 0. A name is automatically generated if you leave the
        field empty.
       </para>
      </step>
      <step>
       <para>
        (Optional) Repeat the previous steps to add targets to this target
        group.
       </para>
      </step>
      <step>
       <para>
        After all desired targets have been added to the group, click
        <guimenu>Next</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      On the <guimenu>Modify iSCSI Target Initiator Setup</guimenu> page,
      configure information for the initiators that are permitted to access
      LUNs in the target group:
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="lio_target_client_a.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="lio_target_client_a.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
     <para>
      After you specify at least one initiator for the target group, the
      <guimenu>Edit LUN</guimenu>, <guimenu>Edit Auth</guimenu>,
      <guimenu>Delete</guimenu>, and <guimenu>Copy</guimenu> buttons are
      enabled. You can use <guimenu>Add</guimenu> or <guimenu>Copy</guimenu> to
      add initiators for the target group:
     </para>
     <itemizedlist xml:id="il-iscsi-target-target-group-options" mark="bullet" spacing="normal">
      <title>Modify iSCSI Target: Options</title>
      <listitem>
       <formalpara>
        <title>Add:</title>
        <para>
         Add a new initiator entry for the selected iSCSI LIO target group.
        </para>
       </formalpara>
      </listitem>
      <listitem>
       <formalpara>
        <title>Edit LUN:</title>
        <para>
         Configure which LUNs in the iSCSI LIO target group to map to a
         selected initiator. You can map each of the allocated targets to a
         preferred initiator.
        </para>
       </formalpara>
      </listitem>
      <listitem>
       <formalpara>
        <title>Edit Auth:</title>
        <para>
         Configure the preferred authentication method for a selected
         initiator. You can specify no authentication, or you can configure
         incoming authentication, outgoing authentication, or both.
        </para>
       </formalpara>
      </listitem>
      <listitem>
       <formalpara>
        <title>Delete:</title>
        <para>
         Remove a selected initiator entry from the list of initiators
         allocated to the target group.
        </para>
       </formalpara>
      </listitem>
      <listitem>
       <formalpara>
        <title>Copy:</title>
        <para>
         Add a new initiator entry with the same LUN mappings and
         authentication settings as a selected initiator entry. This allows you
         to easily allocate the same shared LUNs, in turn, to each node in a
         cluster.
        </para>
       </formalpara>
      </listitem>
     </itemizedlist>
     <substeps performance="required">
      <step>
       <para>
        Click <guimenu>Add</guimenu>, specify the initiator name, select or
        deselect the <guimenu>Import LUNs from TPG</guimenu> check box, then
        click <guimenu>OK</guimenu> to save the settings.
       </para>
      </step>
      <step>
       <para>
        Select an initiator entry, click <guimenu>Edit LUN</guimenu>, modify
        the LUN mappings to specify which LUNs in the iSCSI LIO target group to
        allocate to the selected initiator, then click <guimenu>OK</guimenu> to
        save the changes.
       </para>
       <para>
        If the iSCSI LIO target group consists of multiple LUNs, you can
        allocate one or multiple LUNs to the selected initiator. By default,
        each of the available LUNs in the group are assigned to an initiator
        LUN.
       </para>
       <para>
        To modify the LUN allocation, perform one or more of the following
        actions:
       </para>
       <itemizedlist mark="bullet" spacing="normal">
        <listitem>
         <formalpara>
          <title>Add:</title>
          <para>
           Click <guimenu>Add</guimenu> to create a new <guimenu>Initiator
           LUN</guimenu> entry, then use the <guimenu>Change</guimenu>
           drop-down box to map a target LUN to it.
          </para>
         </formalpara>
        </listitem>
        <listitem>
         <formalpara>
          <title>Delete:</title>
          <para>
           Select the <guimenu>Initiator LUN</guimenu> entry, then click
           <guimenu>Delete</guimenu> to remove a target LUN mapping.
          </para>
         </formalpara>
        </listitem>
        <listitem>
         <formalpara>
          <title>Change:</title>
          <para>
           Select the <guimenu>Initiator LUN</guimenu> entry, then use the
           <guimenu>Change</guimenu> drop-down box to select which Target LUN
           to map to it.
          </para>
         </formalpara>
        </listitem>
       </itemizedlist>
       <para>
        Typical allocation plans include the following:
       </para>
       <itemizedlist mark="bullet" spacing="normal">
        <listitem>
         <para>
          A single server is listed as an initiator. All of the LUNs in the
          target group are allocated to it.
         </para>
         <para>
          You can use this grouping strategy to logically group the iSCSI SAN
          storage for a given server.
         </para>
        </listitem>
        <listitem>
         <para>
          Multiple independent servers are listed as initiators. One or
          multiple target LUNs are allocated to each server. Each LUN is
          allocated to only one server.
         </para>
         <para>
          You can use this grouping strategy to logically group the iSCSI SAN
          storage for a given department or service category in the data
          center.
         </para>
        </listitem>
        <listitem>
         <para>
          Each node of a cluster is listed as an initiator. All of the shared
          target LUNs are allocated to each node. All nodes are attached to the
          devices, but for most file systems, the cluster software locks a
          device for access and mounts it on only one node at a time. Shared
          file systems (such as OCFS2) make it possible for multiple nodes to
          concurrently mount the same file structure and to open the same files
          with read and write access.
         </para>
         <para>
          You can use this grouping strategy to logically group the iSCSI SAN
          storage for a given server cluster.
         </para>
        </listitem>
       </itemizedlist>
      </step>
      <step>
       <para>
        Select an initiator entry, click <guimenu>Edit Auth</guimenu>, specify
        the authentication settings for the initiator, then click
        <guimenu>OK</guimenu> to save the settings.
       </para>
       <para>
        You can require <guimenu>No Discovery Authentication</guimenu>, or you can
        configure <guimenu>Authentication by Initiators</guimenu>, <guimenu>Outgoing
        Authentication</guimenu>, or both. You can specify only one user name
        and password pair for each initiator. The credentials can be different
        for incoming and outgoing authentication for an initiator. The
        credentials can be different for each initiator.
       </para>
      </step>
      <step>
       <para>
        Repeat the previous steps for each iSCSI initiator that can access this
        target group.
       </para>
      </step>
      <step>
       <para>
        After the initiator assignments are configured, click
        <guimenu>Next</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Click <guimenu>Finish</guimenu> to save and apply the settings.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-iscsi-target-tg-modify">
   <title>Modifying an iSCSI LIO Target Group</title>
   <para>
    You can modify an existing iSCSI LIO target group as follows:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      Add or remove target LUN devices from a target group
     </para>
    </listitem>
    <listitem>
     <para>
      Add or remove initiators for a target group
     </para>
    </listitem>
    <listitem>
     <para>
      Modify the initiator LUN-to-target LUN mappings for an initiator of a
      target group
     </para>
    </listitem>
    <listitem>
     <para>
      Modify the user name and password credentials for an initiator
      authentication (incoming, outgoing, or both)
     </para>
    </listitem>
   </itemizedlist>
   <para>
    To view or modify the settings for an iSCSI LIO target group:
   </para>
   <procedure>
    <step>
     <para>
      Start &yast; and launch <menuchoice> <guimenu>Network Services</guimenu>
      <guimenu>iSCSI LIO Target</guimenu> </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Switch to the <guimenu>Targets</guimenu> tab.
     </para>
    </step>
    <step>
     <para>
      Select the iSCSI LIO target group to be modified, then click
      <guimenu>Edit</guimenu>.
     </para>
    </step>
    <step>
     <para>
      On the Modify iSCSI Target LUN Setup page, add LUNs to the target group,
      edit the LUN assignments, or remove target LUNs from the group. After all
      desired changes have been made to the group, click
      <guimenu>Next</guimenu>.
     </para>
     <para>
      For option information, see
      <xref linkend="il-iscsi-target-target-group-options"/>.
     </para>
    </step>
    <step>
     <para>
      On the Modify iSCSI Target Initiator Setup page, configure information
      for the initiators that are permitted to access LUNs in the target group.
      After all desired changes have been made to the group, click
      <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Finish</guimenu> to save and apply the settings.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-iscsi-target-tg-delete">
   <title>Deleting an iSCSI LIO Target Group</title>
   <para>
    Deleting an iSCSI LIO target group removes the definition of the group, and
    the related setup for initiators, including LUN mappings and authentication
    credentials. It does not destroy the data on the partitions. To give
    initiators access again, you can allocate the target LUNs to a different or
    new target group, and configure the initiator access for them.
   </para>
   <procedure>
    <step>
     <para>
      Start &yast; and launch <menuchoice> <guimenu>Network Services</guimenu>
      <guimenu>iSCSI LIO Target</guimenu> </menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Switch to the <guimenu>Targets</guimenu> tab.
     </para>
    </step>
    <step>
     <para>
      Select the iSCSI LIO target group to be deleted, then click
      <guimenu>Delete</guimenu>.
     </para>
    </step>
    <step>
     <para>
      When you are prompted, click <guimenu>Continue</guimenu> to confirm the
      deletion, or click <guimenu>Cancel</guimenu> to cancel it.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Finish</guimenu> to save and apply the settings.
     </para>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-iscsi-initiator">
  <title>Configuring iSCSI Initiator</title>

  <para>
   The iSCSI initiator can be used to connect to any iSCSI target. This is not
   restricted to the iSCSI target solution explained in
   <xref linkend="sec-iscsi-target" xrefstyle="SectTitleOnPage"/>. The
   configuration of iSCSI initiator involves two major steps: the discovery of
   available iSCSI targets and the setup of an iSCSI session. Both can be done
   with &yast;.
  </para>

  <sect2 xml:id="sec-iscsi-initiator-yast">
   <title>Using &yast; for the iSCSI Initiator Configuration</title>
   <para>
    The iSCSI Initiator Overview in &yast; is divided into three tabs:
   </para>
   <variablelist>
    <varlistentry>
     <term>Service:</term>
     <listitem>
      <para>
       The <guimenu>Service</guimenu> tab can be used to enable the iSCSI
       initiator at boot time. It also offers to set a unique
       <guimenu>Initiator Name</guimenu> and an iSNS server to use for the
       discovery.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Connected Targets:</term>
     <listitem>
      <para>
       The <guimenu>Connected Targets</guimenu> tab gives an overview of the
       currently connected iSCSI targets. Like the <guimenu>Discovered
       Targets</guimenu> tab, it also gives the option to add new targets to
       the system.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Discovered Targets:</term>
     <listitem>
      <para>
       The <guimenu>Discovered Targets</guimenu> tab provides the possibility
       of manually discovering iSCSI targets in the network.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <sect3 xml:id="sec-iscsi-initiator-yast-configuration">
    <title>Configuring the iSCSI Initiator</title>
    <procedure>
     <step>
      <para>
       Start &yast; and launch <menuchoice> <guimenu>Network Services</guimenu>
       <guimenu>iSCSI Initiator</guimenu> </menuchoice>.
      </para>
     </step>
     <step>
      <para>
       Switch to the <guimenu>Services</guimenu> tab.
      </para>
      <informalfigure>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="iscsi_init_service_a.png" width="80%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="iscsi_init_service_a.png" width="100%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </informalfigure>
     </step>
     <step>
      <para>
       Under <guimenu>Service Start</guimenu>, specify how you want the iSCSI
       initiator service to be started:
      </para>
      <itemizedlist mark="bullet" spacing="normal">
       <listitem>
        <formalpara>
         <title>When Booting:</title>
         <para>
          The service starts automatically on server restart.
         </para>
        </formalpara>
       </listitem>
       <listitem>
        <formalpara>
         <title>Manually:</title>
         <para>
          (Default) You must start the service manually after a server restart
          by running <command>sudo systemctl start iscsi iscsid</command>.
         </para>
        </formalpara>
       </listitem>
      </itemizedlist>
     </step>
     <step>
      <para>
       Specify or verify the <guimenu>Initiator Name</guimenu>.
      </para>
      <para>
       Specify a well-formed iSCSI qualified name (IQN) for the iSCSI initiator
       on this server. The initiator name must be globally unique on your
       network. The IQN uses the following general format:
      </para>
<screen>iqn.yyyy-mm.com.mycompany:n1:n2</screen>
      <para>
       where n1 and n2 are alphanumeric characters. For example:
      </para>
<screen>iqn.1996-04.de.suse:01:a5dfcea717a</screen>
      <para>
       The <guimenu>Initiator Name</guimenu> is automatically completed with
       the corresponding value from the
       <filename>/etc/iscsi/initiatorname.iscsi</filename> file on the server.
      </para>
      <para>
       If the server has iBFT (iSCSI Boot Firmware Table) support, the
       <guimenu>Initiator Name</guimenu> is completed with the corresponding
       value in the IBFT, and you are not able to change the initiator name in
       this interface. Use the BIOS Setup to modify it instead. The iBFT is a
       block of information containing various parameters useful to the iSCSI
       boot process, including iSCSI target and initiator descriptions for the
       server.
      </para>
     </step>
     <step>
      <para>
       Use either of the following methods to discover iSCSI targets on the
       network.
      </para>
      <itemizedlist mark="bullet" spacing="normal">
       <listitem>
        <formalpara>
         <title>iSNS:</title>
         <para>
          To use iSNS (Internet Storage Name Service) for discovering iSCSI
          targets, continue with
          <xref linkend="sec-iscsi-initiator-yast-isn" xrefstyle="HeadingOnPage"/>.
         </para>
        </formalpara>
       </listitem>
       <listitem>
        <formalpara>
         <title>Discovered Targets:</title>
         <para>
          To discover iSCSI target devices manually, continue with
          <xref linkend="sec-iscsi-initiator-yast-discovered" xrefstyle="HeadingOnPage"/>.
         </para>
        </formalpara>
       </listitem>
      </itemizedlist>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="sec-iscsi-initiator-yast-isn">
    <title>Discovering iSCSI Targets by Using iSNS</title>
    <para>
     Before you can use this option, you must have already installed and
     configured an iSNS server in your environment. For information, see
     <xref linkend="cha-isns" xrefstyle="ChapTitleOnPage"/>.
    </para>
    <procedure>
     <step>
      <para>
       In &yast;, select<guimenu> iSCSI Initiator</guimenu>, then select the
       <guimenu>Service</guimenu> tab.
      </para>
     </step>
     <step>
      <para>
       Specify the IP address of the iSNS server and port. The default port is
       3205.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>OK</guimenu> to save and apply your changes.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="sec-iscsi-initiator-yast-discovered">
    <title>Discovering iSCSI Targets Manually</title>
    <para>
     Repeat the following process for each of the iSCSI target servers that you
     want to access from the server where you are setting up the iSCSI
     initiator.
    </para>
    <procedure>
     <step>
      <para>
       In &yast;, select <guimenu>iSCSI Initiator</guimenu>, then select the
       <guimenu>Discovered Targets</guimenu> tab.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Discovery</guimenu> to open the iSCSI Initiator Discovery
       dialog.
      </para>
     </step>
     <step>
      <para>
       Enter the IP address and change the port if needed. The default port is
       3260.
      </para>
     </step>
     <step>
      <para>
       If authentication is required, deselect <guimenu>No Discovery
       Authentication</guimenu>, then specify the credentials for
       <guimenu>Authentication by Initiator</guimenu> or
       <guimenu>Authentication by Targets</guimenu>.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Next</guimenu> to start the discovery and connect to the
       iSCSI target server.
      </para>
     </step>
     <step>
      <para>
       If credentials are required, after a successful discovery, use
       <guimenu>Connect</guimenu> to activate the target.
      </para>
      <para>
       You are prompted for authentication credentials to use the selected
       iSCSI target.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Next</guimenu> to finish the configuration.
      </para>
      <para>
       The target now appears in <guimenu>Connected Targets</guimenu> and the
       virtual iSCSI device is now available.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>OK</guimenu> to save and apply your changes.
      </para>
     </step>
     <step>
      <para>
       You can find the local device path for the iSCSI target device by using
       the <command>lsscsi</command> command.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="sec-iscsi-initiator-yast-startup">
    <title>Setting the Start-up Preference for iSCSI Target Devices</title>
    <procedure>
     <step>
      <para>
       In &yast;, select<guimenu> iSCSI Initiator</guimenu>, then select the
       <guimenu>Connected Targets</guimenu> tab to view a list of the iSCSI
       target devices that are currently connected to the server.
      </para>
     </step>
     <step>
      <para>
       Select the iSCSI target device that you want to manage.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Toggle Start-Up</guimenu> to modify the setting:
      </para>
      <formalpara>
       <title>Automatic:</title>
       <para>
        This option is used for iSCSI targets that are to be connected when the
        iSCSI service itself starts up. This is the typical configuration.
       </para>
      </formalpara>
      <formalpara>
       <title>Onboot:</title>
       <para>
        This option is used for iSCSI targets that are to be connected during
        boot; that is, when root (<filename>/</filename>) is on iSCSI. As such,
        the iSCSI target device will be evaluated from the initrd on server
        boots. This option is ignored on platforms that cannot boot from
        iSCSI, such as &zseries;. Therefore it should not be used on these
        platforms; use <guimenu>Automatic</guimenu> instead.
       </para>
      </formalpara>
     </step>
     <step>
      <para>
       Click <guimenu>OK</guimenu> to save and apply your changes.
      </para>
     </step>
    </procedure>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-iscsi-initiator-manually">
   <title>Setting Up the iSCSI Initiator Manually</title>
   <para>
    Both the discovery and the configuration of iSCSI connections require a
    running iscsid. When running the discovery the first time, the internal
    database of the iSCSI initiator is created in the directory
    <filename>/etc/iscsi/</filename>.
   </para>
   <para>
    If your discovery is password protected, provide the authentication
    information to iscsid. Because the internal database does not exist when
    doing the first discovery, it cannot be used now. Instead, the
    configuration file <filename>/etc/iscsid.conf</filename> must be edited to
    provide the information. To add your password information for the
    discovery, add the following lines to the end of
    <filename>/etc/iscsid.conf</filename>:
   </para>
<screen>discovery.sendtargets.auth.authmethod = CHAP
discovery.sendtargets.auth.username = <replaceable>USERNAME</replaceable>
discovery.sendtargets.auth.password = <replaceable>PASSWORD</replaceable></screen>
   <para>
    The discovery stores all received values in an internal persistent
    database. In addition, it displays all detected targets. Run this discovery
    with the following command:
   </para>
<screen>&prompt.sudo;iscsiadm <option>-m discovery --type=st --portal=<replaceable>TARGET_IP</replaceable></option>
</screen>
   <para>
    The output should look like the following:
   </para>
<screen>10.44.171.99:3260,1 iqn.2006-02.com.example.iserv:systems</screen>
   <para>
    To discover the available targets on an <literal>iSNS</literal> server, use
    the following command:
   </para>
<screen>sudo iscsiadm --mode discovery --type isns --portal <replaceable>TARGET_IP</replaceable></screen>
   <para>
    For each target defined on the iSCSI target, one line appears. For more
    information about the stored data, see
    <xref linkend="sec-iscsi-initiator-database" xrefstyle="SectTitleOnPage"/>.
   </para>
   <para>
    The special <option>--login</option> option of <command>iscsiadm</command>
    creates all needed devices:
   </para>
<screen>&prompt.sudo;iscsiadm -m node -n iqn.2006-02.com.example.iserv:systems --login</screen>
   <para>
    The newly generated devices show up in the output of
    <command>lsscsi</command> and can now be mounted.
   </para>
  </sect2>

  <sect2 xml:id="sec-iscsi-initiator-database">
   <title>The iSCSI Initiator Databases</title>
   <para>
    All information that was discovered by the iSCSI initiator is stored in two
    database files that reside in <filename>/etc/iscsi</filename>. There is one
    database for the discovery of targets and one for the discovered nodes.
    When accessing a database, you first must select if you want to get your
    data from the discovery or from the node database. Do this with the
    <option>-m discovery</option> and <option>-m node</option> parameters of
    <command>iscsiadm</command>. Using <command>iscsiadm</command> with one of
    these parameters gives an overview of the stored records:
   </para>
<screen>&prompt.sudo;iscsiadm -m discovery
10.44.171.99:3260,1 iqn.2006-02.com.example.iserv:systems
</screen>
   <para>
    The target name in this example is
    <literal>iqn.2006-02.com.example.iserv:systems</literal>. This name is
    needed for all actions that relate to this special data set. To examine the
    content of the data record with the ID
    <literal>iqn.2006-02.com.example.iserv:systems</literal>, use the following
    command:
   </para>
<screen>&prompt.sudo;iscsiadm -m node --targetname iqn.2006-02.com.example.iserv:systems
node.name = iqn.2006-02.com.example.iserv:systems
node.transport_name = tcp
node.tpgt = 1
node.active_conn = 1
node.startup = manual
node.session.initial_cmdsn = 0
node.session.reopen_max = 32
node.session.auth.authmethod = CHAP
node.session.auth.username = joe
node.session.auth.password = ********
node.session.auth.username_in = <replaceable>EMPTY</replaceable>
node.session.auth.password_in = <replaceable>EMPTY</replaceable>
node.session.timeo.replacement_timeout = 0
node.session.err_timeo.abort_timeout = 10
node.session.err_timeo.reset_timeout = 30
node.session.iscsi.InitialR2T = No
node.session.iscsi.ImmediateData = Yes
....</screen>
   <para>
    To edit the value of one of these variables, use the command
    <command>iscsiadm</command> with the <option>update</option> operation. For
    example, if you want iscsid to log in to the iSCSI target when it
    initializes, set the variable <option>node.startup</option> to the value
    <option>automatic</option>:
   </para>
<screen>sudo iscsiadm -m node -n iqn.2006-02.com.example.iserv:systems \
-p ip:port --op=update --name=node.startup --value=automatic</screen>
   <para>
    Remove obsolete data sets with the <literal>delete</literal> operation. If
    the target <literal>iqn.2006-02.com.example.iserv:systems</literal> is no
    longer a valid record, delete this record with the following command:
   </para>
<screen>&prompt.sudo;iscsiadm -m node -n iqn.2006-02.com.example.iserv:systems \
-p ip:port --op=delete</screen>
   <important>
    <title>No Confirmation</title>
    <para>
     Use this option with caution because it deletes the record without any
     additional confirmation prompt.
    </para>
   </important>
   <para>
    To get a list of all discovered targets, run the <command>sudo iscsiadm -m
    node</command> command.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-iscsi-targetcli">
  <title>Setting Up Software Targets Using targetcli-fb</title>
  <para>
   <systemitem>targetcli</systemitem> is a shell for managing the configuration
   of the LinuxIO (LIO) target subsystem. The shell can be called
   interactively, or you can execute one command at a time, much like a
   conventional shell. Similar to a conventional shell, you can traverse
   the targetcli functional hierarchy using the <command>cd</command> command
   and list contents with the <command>ls</command> command.
  </para>
  <para>
   The available commands depend on the current directory. While each directory
   has its own set of commands, there are also commands that are available in
   all directories (for example, the <command>cd</command> and
   <command>ls</command> commands).
  </para>
  <para>
   <systemitem>targetcli</systemitem> commands have the following format:
  </para>
<screen>
<replaceable>[DIRECTORY]</replaceable> <command>command</command> <replaceable>[ARGUMENTS]</replaceable>
</screen>
   <para>
    You can use the <command>help</command> command in any directory to view a
    list of available commands or information about any command in particular.
   </para>
   <para>
    The <systemitem>targetcli</systemitem> tool is part of the
    <package>targetcli-fb</package> package. This package is available in the
    official &productname; software repository, and it can be installed using
    the following command:
   </para>
<screen>&prompt.sudo;zypper install targetcli-fb</screen>
   <para>
    After the <package>targetcli-fb</package> package has been installed,
    enable the <literal>targetcli</literal> service:
   </para>
<screen>&prompt.sudo;systemctl enable targetcli
&prompt.sudo;systemctl start targetcli</screen>
   <para>
    To switch to the targetcli shell, run the <command>targetcli</command> as root:
   </para>
<screen>&prompt.sudo;targetcli</screen>
   <para>
    You can then run the <command>ls</command> command to see the default
    configuration.
   </para>
<screen>/> ls
o- / ............................ [...]
  o- backstores ................. [...]
  | o- block ..... [Storage Objects: 0]
  | o- fileio .... [Storage Objects: 0]
  | o- pscsi ..... [Storage Objects: 0]
  | o- ramdisk ... [Storage Objects: 0]
  | o- rbd ....... [Storage Objects: 0]
  o- iscsi ............... [Targets: 0]
  o- loopback ............ [Targets: 0]
  o- vhost ............... [Targets: 0]
  o- xen-pvscsi .......... [Targets: 0]
/></screen>
   <para>
    As the output of the <command>ls</command> command indicates, there are no
    configured back-ends. So the first step is to configure one of the
    supported software targets.
   </para>
   <para>
    targetcli supports the following back-ends:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <literal>fileio</literal>, local image file
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>block</literal>, block storage on a dedicated disk or partition
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>pscsi</literal>, SCSI pass-through devices
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>ramdisk</literal>, memory-based back-end
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>rbd</literal>, Ceph RADOS block devices
     </para>
    </listitem>
   </itemizedlist>
   <para>
    To familiarize yourself with the functionality of targetcli, set up a local
    image file as a software target using the <command>create</command> command:
   </para>
<screen>/backstores/fileio create test-disc <replaceable>/alt</replaceable>/test.img 1G</screen>
   <para>
    This creates a 1&nbsp;GB <filename>test.img</filename> image in the
    specified location (in this case <filename>/alt</filename>). Run
    <command>ls</command>, and you should see the following result:
   </para>
<screen>/> ls
o- / ........................................................... [...]
  o- backstores ................................................ [...]
  | o- block .................................... [Storage Objects: 0]
  | o- fileio ................................... [Storage Objects: 1]
  | | o- test-disc ... [/alt/test.img (1.0GiB) write-back deactivated]
  | |   o- alua ......     .......................... [ALUA Groups: 1]
  | |     o- default_tg_pt_gp      .... [ALUA state: Active/optimized]
  | o- pscsi .................................... [Storage Objects: 0]
  | o- ramdisk .................................. [Storage Objects: 0]
  | o- rbd ...................................... [Storage Objects: 0]
  o- iscsi .............................................. [Targets: 0]
  o- loopback ........................................... [Targets: 0]
  o- vhost .............................................. [Targets: 0]
  o- xen-pvscsi ......................................... [Targets: 0]
/></screen>   
   <para>
    The output indicates that there is now a file-based backstore, under the
    <filename>/backstores/fileio</filename> directory, called
    <literal>test-disc</literal>, which is linked to the created file
    <filename>/alt/test.img</filename>. Note that the new backstore is not yet
    activated.
   </para>
   <para>
    The next step is to connect an iSCSI target front-end to the back-end
    storage. Each target must have an <literal>IQN</literal> (iSCSI Qualified
    Name). The most commonly used IQN format is as follows:
   </para>
<screen>iqn.<replaceable>YYYY-MM.NAMING-AUTHORITY:UNIQUE-NAME</replaceable></screen>
   <para>
    The following parts of an IQN are required:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <replaceable>YYYY-MM</replaceable>, the year and month when the naming
      authority was established
     </para>
    </listitem>
    <listitem>
     <para>
      <replaceable>NAMING-AUTHORITY</replaceable>, reverse-syntax of the
      Internet Domain Name of the naming authority
     </para>
    </listitem>
    <listitem>
     <para>
      <replaceable>UNIQUE-NAME</replaceable>, a domain-unique name chosen by the naming authority
     </para>
    </listitem>
   </itemizedlist>
   <para>
    For example, for the domain <literal>open-iscsi.com</literal>, the IQN can
    be as follows:
   </para>
<screen>iqn.2005-03.com.open-iscsi:<replaceable>UNIQUE-NAME</replaceable></screen>
   <para>
    When creating an iSCSI target, the <command>targetcli</command> command
    allows you to assign your own IQN, as long as it follows the specified
    format. You can also let the command create an IQN for you by omitting a
    name when creating the target, for example:
   </para>
<screen>/> iscsi/ create</screen>
   <para>
    Run the <command>ls</command> command again:
   </para>
<screen>/> ls
o- / ............................................................... [...]
  o- backstores .................................................... [...]
  | o- block ........................................ [Storage Objects: 0]
  | o- fileio ....................................... [Storage Objects: 1]
  | | o- test-disc ....... [/alt/test.img (1.0GiB) write-back deactivated]
  | |   o- alua ......................................... [ALUA Groups: 1]
  | |     o- default_tg_pt_gp ............. [ALUA state: Active/optimized]
  | o- pscsi ........................................ [Storage Objects: 0]
  | o- ramdisk ...................................... [Storage Objects: 0]
  | o- rbd .......................................... [Storage Objects: 0]
  o- iscsi .................................................. [Targets: 1]
  | o- iqn.2003-01.org.linux-iscsi.e83.x8664:sn.8b35d04dd456 ... [TPGs: 1]
  |   o- tpg1 ..................................... [no-gen-acls, no-auth]
  |     o- acls ................................................ [ACLs: 0]
  |     o- luns ................................................ [LUNs: 0]
  |     o- portals .......................................... [Portals: 1]
  |       o- 0.0.0.0:3260 ........................................... [OK]
  o- loopback ............................................... [Targets: 0]
  o- vhost .................................................. [Targets: 0]
  o- xen-pvscsi ............................................. [Targets: 0]
/> </screen>
   <para>
    The output shows the created iSCSI target node with its automatically
    generated IQN
    <literal>iqn.2003-01.org.linux-iscsi.e83.x8664:sn.8b35d04dd456</literal>
   </para>
   <para>
    Note that <command>targetcli</command> has also created and enabled the default target portal
    group <literal>tpg1</literal>. This is done because the variables
    <literal>auto_add_default_portal</literal> and
    <literal>auto_enable_tpgt</literal> at the root level are set to
    <literal>true</literal> by default.
   </para>
   <para>
    The command also created the default portal with the
    <literal>0.0.0.0</literal> IPv4 wildcard. This means that any IPv4 address
    can access the configured target.
   </para>
   <para>
    The next step is to create a LUN (Logical Unit Number) for the iSCSI
    target. The best way to do this is to let <command>targetcli</command> assign its name and
    number automatically. Switch to the directory of the
    iSCSI target, and then use the <command>create</command> command in the
    <filename>lun</filename> directory to assign a LUN to the backstore.
   </para>
<screen>/> cd /iscsi/iqn.2003-01.org.linux-iscsi.e83.x8664:sn.8b35d04dd456/
/iscsi/iqn.2003-01.org.linux-iscsi.e83.x8664:sn.8b35d04dd456> cd tpg1
/iscsi/iqn.2003-01.org.linux-iscsi.e83.x8664:sn.8b35d04dd456/tpg1> luns/
create /backstores/fileio/test-disc</screen>
  <para>
   Run the <command>ls</command> command to see the changes:
  </para>
<screen>/iscsi/iqn.2003-01.org.linux-iscsi.e83.x8664:sn.8b35d04dd456/tpg1> ls
o- tpg1 .............................................. [no-gen-acls, no-auth]
      o- acls ..................................................... [ACLs: 0]
      o- luns ..................................................... [LUNs: 1]
      | o- lun0 ....... [fileio/test-disc (/alt/test.img) (default_tg_pt_gp)]
      o- portals ............................................... [Portals: 1]
        o- 0.0.0.0:3260 ................................................ [OK]</screen>
   <para>
    There is now an iSCSI target that has a 1&nbsp;GB file-based backstore. The
    target has the
    <literal>iqn.2003-01.org.linux-iscsi.e83.x8664:sn.8b35d04dd456</literal>
    name, and it can be accessed from any network port of the system.
   </para>
   <para>
    Finally, you need to ensure that initiators have access to the configured
    target. One way to do this is to create an ACL rule for each initiator that
    allows them to connect to the target. In this case, you must list each
    desired initiator using its IQN. The IQNs of the existing initiators can be
    found in the <filename>/etc/iscsi/initiatorname.iscsi</filename> file. Use
    the following command to add the desired initiator (in this case, it's
    <literal>iqn.1996-04.de.suse:01:54cab487975b</literal>):
   </para>
<screen>/iscsi/iqn.2003-01.org.linux-iscsi.e83.x8664:sn.8b35d04dd456/tpg1> acls/ create iqn.1996-04.de.suse:01:54cab487975b
Created Node ACL for iqn.1996-04.de.suse:01:54cab487975b
Created mapped LUN 0.
/iscsi/iqn.2003-01.org.linux-iscsi.e83.x8664:sn.8b35d04dd456/tpg1></screen>
   <para>
    Alternatively, you can run the target in a demo mode with no access
    restrictions. This method is less secure, but it can be useful for
    demonstration purposes and running on closed networks. To enable the demo
    mode, use the following commands:
   </para>
<screen>/iscsi/iqn.2003-01.org.linux-iscsi.e83.x8664:sn.8b35d04dd456/tpg1> set attribute generate_node_acls=1
/iscsi/iqn.2003-01.org.linux-iscsi.e83.x8664:sn.8b35d04dd456/tpg1> set attribute demo_mode_write_protect=0</screen>
   <para>
    The last step is to save the created configuration using the
    <command>saveconfig</command> command available in the root directory:
   </para>
<screen>/> saveconfig /etc/target/example.json</screen>
   <para>
    If at some point you need to restore configuration from the saved file, you
    need to clear the current configuration first. Keep in mind that clearing
    the current configuration results in data loss unless you save your
    configuration first. Use the following command to clear and reload the
    configuration:
   </para>
<screen>/> clearconfig
As a precaution, confirm=True needs to be set
/> clearconfig confirm=true
All configuration cleared
/> restoreconfig /etc/target/example.json
Configuration restored from /etc/target/example.json
/></screen>   
    <para>
     To test whether the configured target is working, connect to it using the
     <package>open-iscsi</package> iSCSI initiator installed on the same
     system (replace <replaceable>HOSTNAME</replaceable> with the hostname of
     the local machine):
    </para>
<screen>&prompt.user;iscsiadm -m discovery -t st -p <replaceable>HOSTNAME</replaceable></screen>
   <para>
    This command returns a list of found targets, for example:
   </para>
<screen>192.168.20.3:3260,1 iqn.2003-01.org.linux-iscsi.e83.x8664:sn.8b35d04dd456</screen>
    <para>
     You can then connect to the listed target using the
     <command>login</command> iSCSI command. This makes the target available as
     a local disk.
    </para>
 </sect1>
 
 <sect1 xml:id="sec-iscsi-installation">
  <title>Using iSCSI Disks when Installing</title>

  <para>
   Booting from an iSCSI disk on AMD64/Intel 64 and IBM &power; architectures
   is supported when iSCSI-enabled firmware is used.
  </para>

  <para>
   To use iSCSI disks during installation, it is necessary to add the following
   parameter to the boot parameter line:
  </para>

<screen>withiscsi=1</screen>

  <para>
   During installation, an additional screen appears that provides the option
   to attach iSCSI disks to the system and use them in the installation
   process.
  </para>

  <note>
   <title>Mount Point Support</title>
   <para>iSCSI devices will appear asynchronously during the
    boot process. While the initrd guarantees that those devices are
    set up correctly for the root file system, there are no such
    guarantees for any other file systems or mount points like
    <filename>/usr</filename>. Hence any system mount points like
    <filename>/usr</filename> or <filename>/var</filename> are not
    supported. To use those devices, ensure correct
    synchronization of the respective services and devices.</para>
  </note>
 </sect1>
 <sect1 xml:id="sec-iscsi-trouble">
  <title>Troubleshooting iSCSI</title>

  <para>
   This section describes some known issues and possible solutions for iSCSI
   target and iSCSI initiator issues.
  </para>

  <sect2 xml:id="sec-iscsi-trouble-no-service">
   <title>Portal Error When Setting Up Target LUNs on an iSCSI LIO Target Server</title>
   <para>
    When adding or editing an iSCSI LIO target group, you get an error:
   </para>
<screen>Problem setting network portal <replaceable>IP_ADDRESS</replaceable>:3260</screen>
   <para>
    The <filename>/var/log/YasT2/y2log</filename> log file contains the
    following error:
   </para>
<screen>find: `/sys/kernel/config/target/iscsi': No such file or directory</screen>
   <para>
    This problem occurs if the iSCSI LIO Target Server software is not
    currently running. To resolve this issue, exit &yast;, manually start iSCSI
    LIO at the command line with <command>systemctl start targetcli</command>,
    then try again.
   </para>
   <para>
    You can also enter the following to check if <command>configfs</command>,
    <command>iscsi_target_mod</command>, and <command>target_core_mod</command>
    are loaded. A sample response is shown.
   </para>
<screen>&prompt.sudo;lsmod | grep iscsi
iscsi_target_mod      295015  0
target_core_mod       346745  4
iscsi_target_mod,target_core_pscsi,target_core_iblock,target_core_file
configfs               35817  3 iscsi_target_mod,target_core_mod
scsi_mod              231620  16
iscsi_target_mod,target_core_pscsi,target_core_mod,sg,sr_mod,mptctl,sd_mod,
scsi_dh_rdac,scsi_dh_emc,scsi_dh_alua,scsi_dh_hp_sw,scsi_dh,libata,mptspi,
mptscsih,scsi_transport_spi</screen>
  </sect2>

  <sect2 xml:id="sec-iscsi-trouble-not-visible">
   <title>iSCSI LIO Targets Are Not Visible from Other Computers</title>
   <para>
    If you use a firewall on the target server, you must open the iSCSI port
    that you are using to allow other computers to see the iSCSI LIO targets.
    For information, see <xref linkend="sec-iscsi-target-start"/>.
   </para>
  </sect2>

  <sect2 xml:id="sec-iscsi-trouble-package-loss">
   <title>Data Packets Dropped for iSCSI Traffic</title>
   <para>
    A firewall might drop packets if it gets too busy. The default for the SUSE
    Firewall is to drop packets after three minutes. If you find that iSCSI
    traffic packets are being dropped, consider configuring the SUSE
    Firewall to queue packets instead of dropping them when it gets too busy.
   </para>
  </sect2>

  <sect2 xml:id="sec-iscsi-trouble-lvm">
   <title>Using iSCSI Volumes with LVM</title>
   <para>
    Use the troubleshooting tips in this section when using LVM on iSCSI
    targets.
   </para>
   <sect3 xml:id="sec-iscsi-trouble-lvm-boot-initiator">
    <title>Check if the iSCSI Initiator Discovery Occurs at Boot</title>
    <para>
     When you set up the iSCSI Initiator, ensure that you enable discovery at
     boot time so that udev can discover the iSCSI devices at boot time and set
     up the devices to be used by LVM.
    </para>
   </sect3>
   <sect3 xml:id="sec-iscsi-trouble-lvm-boot-target">
    <title>Check that iSCSI Target Discovery Occurs at Boot</title>
    <para>
     Remember that <filename>udev</filename> provides the default setup for
     devices. Ensure that all of the applications that create devices are
     started at boot time so that <command>udev</command> can recognize and
     assign devices for them at system start-up. If the application or service
     is not started until later, <command>udev</command> does not create the
     device automatically as it would at boot time.
    </para>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-iscsi-trouble-mount">
   <title>iSCSI Targets Are Mounted When the Configuration File Is Set to Manual</title>
   <para>
    When Open-iSCSI starts, it can mount the targets even if the
    <literal>node.startup</literal> option is set to manual in the
    <filename>/etc/iscsi/iscsid.conf</filename> file if you manually modified
    the configuration file.
   </para>
   <para>
    Check the
    <filename>/etc/iscsi/nodes/<replaceable>TARGET_NAME</replaceable>/<replaceable>IP_ADDRESS</replaceable>,<replaceable>PORT</replaceable>/default</filename>
    file. It contains a <literal>node.startup</literal> setting that overrides
    the <filename>/etc/iscsi/iscsid.conf</filename> file. Setting the mount
    option to manual by using the &yast; interface also sets
    <literal>node.startup = manual</literal> in the
    <filename>/etc/iscsi/nodes/<replaceable>TARGET_NAME</replaceable>/<replaceable>IP_ADDRESS</replaceable>,<replaceable>PORT</replaceable>/default
    </filename>files.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-iscsi-terminology">
  <title>iSCSI LIO Target Terminology</title>

  <variablelist>
   <varlistentry>
    <term>backstore</term>
    <listitem>
     <para>
      A physical storage object that provides the actual storage underlying an
      iSCSI endpoint.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>CDB (command descriptor block)</term>
    <listitem>
     <para>
      The standard format for SCSI commands. CDBs are commonly 6, 10, or 12
      bytes long, though they can be 16 bytes or of variable length.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>CHAP (Challenge Handshake Authentication Protocol)</term>
    <listitem>
     <para>
      A point-to-point protocol (PPP) authentication method used to confirm the
      identity of one computer to another. After the Link Control Protocol
      (LCP) connects the two computers, and the CHAP method is negotiated, the
      authenticator sends a random Challenge to the peer. The peer issues a
      cryptographically hashed Response that depends upon the Challenge and a
      secret key. The authenticator verifies the hashed Response against its
      own calculation of the expected hash value, and either acknowledges the
      authentication or terminates the connection. CHAP is defined in the RFC
      1994.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>CID (connection identifier)</term>
    <listitem>
     <para>
      A 16‐bit number, generated by the initiator, that uniquely identifies a
      connection between two iSCSI devices. This number is presented during the
      login phase.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>endpoint</term>
    <listitem>
     <para>
      The combination of an iSCSI Target Name with an iSCSI TPG (IQN + Tag).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>EUI (extended unique identifier)</term>
    <listitem>
     <para>
      A 64‐bit number that uniquely identifies every device in the world. The
      format consists of 24 bits that are unique to a given company, and 40
      bits assigned by the company to each device it builds.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>initiator</term>
    <listitem>
     <para>
      The originating end of an SCSI session. Typically a controlling device
      such as a computer.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>IPS (Internet Protocol storage)</term>
    <listitem>
     <para>
      The class of protocols or devices that use the IP protocol to move data
      in a storage network. FCIP (Fibre Channel over Internet Protocol), iFCP
      (Internet Fibre Channel Protocol), and iSCSI (Internet SCSI) are all
      examples of IPS protocols.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>IQN (iSCSI qualified name)</term>
    <listitem>
     <para>
      A name format for iSCSI that uniquely identifies every device in the
      world (for example:
      <filename>iqn.5886.com.acme.tapedrive.sn‐a12345678</filename>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ISID (initiator session identifier)</term>
    <listitem>
     <para>
      A 48‐bit number, generated by the initiator, that uniquely identifies a
      session between the initiator and the target. This value is created
      during the login process, and is sent to the target with a Login PDU.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>MCS (multiple connections per session)</term>
    <listitem>
     <para>
      A part of the iSCSI specification that allows multiple TCP/IP connections
      between an initiator and a target.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>MPIO (multipath I/O)</term>
    <listitem>
     <para>
      A method by which data can take multiple redundant paths between a server
      and storage.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>network portal</term>
    <listitem>
     <para>
      The combination of an iSCSI endpoint with an IP address plus a TCP
      (Transmission Control Protocol) port. TCP port 3260 is the port number
      for the iSCSI protocol, as defined by IANA (Internet Assigned Numbers
      Authority).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SAM (SCSI architectural model)</term>
    <listitem>
     <para>
      A document that describes the behavior of SCSI in general terms, allowing
      for different types of devices communicating over various media.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>target</term>
    <listitem>
     <para>
      The receiving end of an SCSI session, typically a device such as a disk
      drive, tape drive, or scanner.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>target group (TG)</term>
    <listitem>
     <para>
      A list of SCSI target ports that are all treated the same when creating
      views. Creating a view can help simplify LUN (logical unit number)
      mapping. Each view entry specifies a target group, host group, and a LUN.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>target port</term>
    <listitem>
     <para>
      The combination of an iSCSI endpoint with one or more LUNs.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>target port group (TPG)</term>
    <listitem>
     <para>
      A list of IP addresses and TCP port numbers that determines which
      interfaces a specific iSCSI target will listen to.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>target session identifier (TSID)</term>
    <listitem>
     <para>
      A 16‐bit number, generated by the target, that uniquely identifies a
      session between the initiator and the target. This value is created
      during the login process, and is sent to the initiator with a Login
      Response PDU (protocol data units).
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-iscsi-info">
  <title>Additional Information</title>

  <para>
   The iSCSI protocol has been available for several years. There are many
   reviews comparing iSCSI with SAN solutions, benchmarking performance, and
   there also is documentation describing hardware solutions. For more
   information, see the Open-iSCSI project home page at
   <link xlink:href="http://www.open-iscsi.com/"/>.
  </para>

  <para>
   Additionally, see the man pages for <command>iscsiadm</command>,
   <command>iscsid</command>, and the example configuration file
   <filename>/etc/iscsid.conf</filename>.
  </para>
  <remark>
   FIXME: Does the ietd command still exist?
   - sknorr, 2017-12-15
  </remark>
 </sect1>
</chapter>
