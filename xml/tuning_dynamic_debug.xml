<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-tuning-dynamic-debug">
  <title>Dynamic debug&mdash;kernel debugging messages</title>
  <info>
    <abstract>
      <para>
        Dynamic debug is a powerful debugging feature in the Linux kernel that
        allows you to enable and disable debugging messages at runtime without
        the need to recompile the kernel or reboot the system.
      </para>
    </abstract>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker></dm:bugtracker>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>
  <para>
    You can use dynamic debugging in several situations, such as:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        Troubleshooting kernel issues
      </para>
    </listitem>
    <listitem>
      <para>
        Developing drivers for new hardware
      </para>
    </listitem>
    <listitem>
      <para>
        Tracing and auditing security events
      </para>
    </listitem>
  </itemizedlist>
  <sect1 xml:id="sec-tuning-dynamic-debug-benefits">
    <title>Benefits of dynamic debugging</title>

    <para>
      Certain benefits of dynamic debugging are listed below:
    </para>

    <variablelist>
      <varlistentry>
        <term>Real-time debugging</term>
        <listitem>
          <para>
            Dynamic debugging enables debugging messages without requiring a
            system reboot. This real-time capability is crucial for diagnosing
            issues in production environments.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Selective debugging</term>
        <listitem>
          <para>
            You can enable debugging messages for specific parts of the kernel
            or even individual modules, allowing you to focus on relevant
            information.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Performance tuning</term>
        <listitem>
          <para>
            Use dynamic debugging to monitor and optimize kernel performance by
            selectively enabling or disabling debugging messages based on the
            current analysis requirements.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>
  <sect1 xml:id="sec-tuning-dynamic-debug-check">
    <title>Checking the status of dynamic debug</title>

    <para>
      For supported kernel versions that are installed by default, dynamic
      debug is already built-in. To check the status of dynamic debug, run the
      following command as the root user:
    </para>

<screen>&prompt.root;<command>zcat /proc/config.gz | grep CONFIG_DYNAMIC_DEBUG</command></screen>

    <para>
      If dynamic debug is compiled into the kernel, you should see an output
      similar to the following:
    </para>

<screen>
CONFIG_DYNAMIC_DEBUG=y
CONFIG_DYNAMIC_DEBUG_CORE=y
</screen>
  </sect1>
  <sect1 xml:id="sec-tuning-dynamic-debug-use">
    <title>Using dynamic debug</title>

    <para>
      To enable specific debug messages or logs within the running kernel, you
      can use the <command>echo</command> command and write to the
      <filename>/sys/kernel/debug/dynamic_debug/control</filename> file.
    </para>

    <para>
      The following examples illustrate certain simple uses of dynamic debug:
    </para>

    <note>
      <para>
        Dynamic debug relies on specific debugging macros, such as
        <systemitem>pr_debug</systemitem>, embedded in the kernel code. These
        macros are used by kernel developers to insert debugging messages into
        the code.
      </para>
      <para>
        The examples in this section assume that the
        <systemitem>pr_debug</systemitem> macro works correctly because dynamic
        debug is allowed for the running kernel.
      </para>
    </note>

    <variablelist>
      <varlistentry>
        <term>Enabling debug messages for a specific kernel source code file</term>
        <listitem>
          <para>
            To enable the debug messages for a specific kernel source code
            file, use the following example:
          </para>
<screen>&prompt.root;<command>echo "file <replaceable>FILE_NAME.c</replaceable> +p" > /sys/kernel/debug/dynamic_debug/control</command></screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Enabling debug messages for a specific kernel module</term>
        <listitem>
          <para>
            To enable debug messages for a specific kernel module, use the
            following example:
          </para>
<screen>&prompt.root;<command>echo "module <replaceable>MODULE_NAME</replaceable> +p" > /sys/kernel/debug/dynamic_debug/control</command></screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Disabling debug messages</term>
        <listitem>
          <para>
            To disable previously enabled debugging messages for a specific
            kernel source code file or a kernel module, run the
            <command>echo</command> command with the <command>-p</command>
            option. For example:
          </para>
<screen>&prompt.root;<command>echo "file <replaceable>FILE_NAME.c</replaceable> -p" > /sys/kernel/debug/dynamic_debug/control</command></screen>
<screen>&prompt.root;<command>echo "module <replaceable>MODULE_NAME</replaceable> -p" > /sys/kernel/debug/dynamic_debug/control</command></screen>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>
      For detailed information about dynamic debug and its use cases, refer to
      its
      <link xlink:href="https://www.kernel.org/doc/html/latest/admin-guide/dynamic-debug-howto.html">official
      documentation</link>.
    </para>
  </sect1>
  <sect1 xml:id="sec-tuning-dynamic-debug-view">
    <title>Viewing the dynamic debug messages</title>

    <para>
      You can view the dynamic debug messages that were generated based on the
      configurations you enabled, by running <command>dmesg</command> and
      filtering the output with <command>grep</command>. For example:
    </para>

<screen>&prompt.root;<command>dmesg | grep -i "<replaceable>FILE_NAME.c</replaceable>"</command></screen>

    <para>
      Optionally, to continuously monitor the system messages as they are
      generated, you can use the <command>tail</command> command with the
      <command>-f</command> option:
    </para>

<screen>&prompt.root;<command>tail -f /var/log/messages</command></screen>
  </sect1>
</chapter>
