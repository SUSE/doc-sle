<?xml version="1.0"?>
<!DOCTYPE chapter [
  <!ENTITY % entities SYSTEM "generic-entities.ent">
  %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec-transactional-udate" xml:lang="en">
  <title>Administration using transactional updates</title>
  <info xmlns:d="http://docbook.org/ns/docbook">
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
    <abstract>
      <para>This chapter describes the usage of the
      <command>transactional-update</command> command.</para>
    </abstract>
  <revhistory xml:id="rh-sec-transactional-udate">
   <revision>
     <date>2023-11-03</date>
     <revdescription>
       <para/>
     </revdescription>
   </revision>
 </revhistory>
</info>
    <warning>
    <para>
      In case you do not reboot your machine before performing further changes,
      the <command>transactional-update</command> command will create a new
      snapshot from the current root file system. This means that you will end
      up with several parallel snapshots, each including that particular change
      but not changes from the other invocations of the command. After reboot,
      the most recently created snapshot will be used as your new root file
      system, and it will not include changes done in the previous snapshots.
    </para>
  </warning>
  <section xml:id="sec-command-list">
    <title><command>transactional-update</command> usage</title>
    <para>
      The <command>transactional-update</command> command enables the atomic
      installation or removal of updates; updates are applied only if all of
      them can be successfully installed.
      <command>transactional-update</command> creates a snapshot of your system
      and uses it to update the system. Later you can restore this snapshot. All
      changes become active only after reboot.
    </para>
    <para>
      The <command>transactional-update</command> command syntax is as follows:
    </para>
<screen>
transactional-update <option>[option]</option> <replaceable>[general_command]</replaceable> <replaceable>[package_command]</replaceable> <replaceable>standalone_command</replaceable>
</screen>
    <note>
      <title>Running <command>transactional-update</command>
      without arguments</title>
      <para>
        If you do not specify any command or option while running the
        <command>transactional-update</command> command, the system updates
        itself.
      </para>
    </note>
    <para>
      Possible command parameters are described further.
    </para>
    <variablelist>
      <title><command>transactional-update</command> options</title>
      <varlistentry>
        <term><literal>--interactive, -i</literal></term>
        <listitem>
          <para>
            Can be used along with a package command to turn on interactive
            mode.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>--non-interactive, -n</literal></term>
        <listitem>
          <para>
            Can be used along with a package command to turn on non-interactive
            mode.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>--continue [<replaceable>number</replaceable>], -c</literal></term>
        <listitem>
          <para>
            The <command>--continue</command> option is for making multiple
            changes to an existing snapshot without rebooting.
          </para>
          <para>
            The default <command>transactional-update</command> behavior is to
            create a new snapshot from the current root file system. If you
            forget something, such as installing a new package, you have to
            reboot to apply your previous changes, run
            <command>transactional-update</command> again to install the
            forgotten package, and reboot again. You cannot run the
            <command>transactional-update</command> command multiple times
            without rebooting to add more changes to the snapshot, because this
            will create separate independent snapshots that do not include
            changes from the previous snapshots.
          </para>
          <para>
            Use the <command>--continue</command> option to make as many
            changes as you want without rebooting. A separate snapshot is made
            each time, and each snapshot contains all the changes you made in
            the previous snapshots, plus your new changes. Repeat this process
            as many times as you want, and when the final snapshot includes
            everything you want, reboot the system, and your final snapshot
            becomes the new root file system.
          </para>
          <para>
            Another useful feature of the <command>--continue</command> option
            is that you may select any existing snapshot as the base for your new
            snapshot. The following example demonstrates running
            <command>transactional-update</command> to install a new package in
            a snapshot based on snapshot 13, and then running it again to
            install another package:
          </para>
<screen>&prompt.root;<command>transactional-update pkg install <replaceable>package_1</replaceable></command></screen>
<screen>&prompt.root;<command>transactional-update --continue 13 pkg install <replaceable>package_2</replaceable></command></screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>--no-selfupdate</literal></term>
        <listitem>
          <para>
            Disables self-updating of <command>transactional-update</command>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>--drop-if-no-change, -d</literal></term>
        <listitem>
          <para>
            Discards the snapshot created by
            <command>transactional-update</command> if there were no changes to
            the root file system. If there are some changes to the
            <filename>/etc</filename> directory, those changes are
            merged back to the current file system.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>--quiet</literal></term>
        <listitem>
          <para>
            The <command>transactional-update</command> command will not output
            to <literal>stdout</literal>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>--help, -h</literal></term>
        <listitem>
          <para>
            Prints help for the <command>transactional-update</command>
            command.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>--version</literal></term>
        <listitem>
          <para>
            Displays the version of the <command>transactional-update</command>
            command.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      The general commands are the following:
    </para>
    <variablelist>
      <title>General commands</title>
      <varlistentry>
        <term><literal>cleanup-snapshots</literal></term>
        <listitem>
          <para>
            The command marks all unused snapshots that are intended to be
            removed.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>cleanup-overlays</literal></term>
        <listitem>
          <para>
            The command removes all unused overlay layers of
            <filename>/etc</filename>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>cleanup</literal></term>
        <listitem>
          <para>
            The command combines the <literal>cleanup-snapshots</literal> and
            <literal>cleanup-overlays</literal> commands. For more
            details, refer to <xref linkend="sec-cleanup-algorithm"/>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>grub.cfg</literal></term>
        <listitem>
          <para>
            Use this command to rebuild the GRUB boot loader configuration
            file.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>bootloader</literal></term>
        <listitem>
          <para>
            The command reinstalls the boot loader.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>initrd</literal></term>
        <listitem>
          <para>
            Use the command to rebuild <literal>initrd</literal>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>kdump</literal></term>
        <listitem>
          <para>
            If you perform changes to your hardware or storage, you may
            need to rebuild the kdump initrd.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>shell</literal></term>
        <listitem>
          <para>
            Opens a read-write shell in the new snapshot before exiting. The
            command is typically used for debugging purposes.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>reboot</literal></term>
        <listitem>
          <para>
            The system reboots after the transactional-update is complete.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>run </literal><replaceable>&lt;command&gt;</replaceable></term>
        <listitem>
          <para>
            Runs the provided command in a new snapshot.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>setup-selinux</literal></term>
        <listitem>
          <para>
            Installs and enables the targeted SELinux policy.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      The package commands are the following:
    </para>
    <important>
      <title>Installing packages outside of the official &productnameshort; repositories</title>
      <para>
        The installation of packages from repositories other than
        the official ones (for example, the &sles; repositories) is
        <emphasis role="bold">not</emphasis> supported and not
        recommended. To use the tools available for &sles;, run the
        <literal>toolbox</literal> container and install the tools inside
        the container. For details about the <literal>toolbox</literal>
        container, refer to <xref linkend="cha-admin-toolbox"/>.
      </para>
    </important>
    <variablelist>
      <title>Package commands</title>
      <varlistentry>
        <term><literal>dup</literal></term>
        <listitem>
          <para>
            Performs an upgrade of your system. The default option for this
            command is <literal>--non-interactive</literal>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>migration</literal></term>
        <listitem>
          <para>
            The command migrates your system to a selected target. Typically, it
            is used to upgrade your system if it has been registered via &scc;.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>patch</literal></term>
        <listitem>
          <para>
            Checks for available patches and installs them. The default option
            for this command is <literal>--non-interactive</literal>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>pkg install</literal></term>
        <listitem>
          <para>
            Installs individual packages from the available channels using the
            <command>zypper install</command> command. This command can also be
            used to install Program Temporary Fix (PTF) RPM files. The default
            option for this command is <literal>--interactive</literal>.
          </para>
<screen>&prompt.root;<command>transactional-update pkg install <replaceable>package_name</replaceable></command></screen>
          <para>
            or
          </para>
<screen>&prompt.root;<command>transactional-update pkg install <replaceable>rpm1 rpm2</replaceable></command></screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>pkg remove</literal></term>
        <listitem>
          <para>
            Removes individual packages from the active snapshot using the
            <command>zypper remove</command> command. This command can also be
            used to remove PTF RPM files. The default option for this command
            is <literal>--interactive</literal>.
          </para>
<screen>&prompt.root;<command>transactional-update pkg remove <replaceable>package_name</replaceable></command></screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>pkg update</literal></term>
        <listitem>
          <para>
            Updates individual packages from the active snapshot using the
            <command>zypper update</command> command. Only packages that are
            part of the snapshot of the base file system can be updated. The
            default option for this command is
            <literal>--interactive</literal>.
          </para>
<screen>&prompt.root;<command>transactional-update pkg update <replaceable>package_name</replaceable></command></screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>register</literal></term>
        <listitem>
          <para>
            The <literal>register</literal> command enables you to
            register/deregister your system. For a complete usage
            description, refer to <xref linkend="sec-register-command"/>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>up</literal></term>
        <listitem>
          <para>
            Updates installed packages to newer versions. The default option
            for this command is <literal>--non-interactive</literal>.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      The standalone commands are the following:
    </para>
    <variablelist>
      <title>Standalone commands</title>
      <varlistentry>
        <term><literal>rollback</literal> <replaceable>&lt;snapshot number&gt;</replaceable></term>
        <listitem>
          <para>
            This sets the default subvolume. The current system is set as the
            new default root file system. If you specify a number, that
            snapshot is used as the default root file system. On a read-only
            file system, it does not create any additional snapshots.
          </para>
<screen>&prompt.root;<command>transactional-update rollback <replaceable>snapshot_number</replaceable></command></screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>rollback last</literal></term>
        <listitem>
          <para>
            This command sets the last known to be working snapshot as the
            default.
          </para>
        </listitem>
      </varlistentry>
     <!-- Is an experimental feature and is disabled starting Micro 5.3
      <varlistentry>
        <term><literal>status</literal></term>
        <listitem>
          <para>
            This prints a list of available snapshots. The currently booted one
            is marked with an asterisk, the default snapshot is marked with a
            plus sign.
          </para>
        </listitem>
      </varlistentry>
    -->
    </variablelist>
    <section xml:id="sec-register-command">
      <title>The <literal>register</literal> command</title>
      <para>
        The <literal>register</literal> command enables you to handle all tasks
        regarding registration and subscription management. You can supply the
        following options:
      </para>
      <variablelist>
        <varlistentry>
          <term><literal>--list-extensions</literal></term>
          <listitem>
            <para>
              With this option, the command will list available extensions for
              your system. You can use the output to find a product identifier
              for product activation.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>-p, --product</literal></term>
          <listitem>
            <para>
              Use this option to specify a product for activation. The product
              identifier has the following format:
              <emphasis>&lt;name&gt;/&lt;version&gt;/&lt;architecture&gt;</emphasis>,
              for example,
              <literal>sle-module-live-patching/15.3/x86_64</literal>. The
              appropriate command will then be the following:
            </para>
<screen>&prompt.root;transactional-update register -p sle-module-live-patching/15.3/x86_64</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>-r, --regcode</literal></term>
          <listitem>
            <para>
              Register your system with the provided registration code. The
              command will register the subscription and enable software
              repositories.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>-d, --de-register</literal></term>
          <listitem>
            <para>
              The option deregisters the system, or when used along with the
              <literal>-p</literal> option, deregisters an extension.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>-e, --email</literal></term>
          <listitem>
            <para>
              Specify an email address that will be used in &scc; for
              registration.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>--url</literal></term>
          <listitem>
            <para>
              Specify the URL of your registration server. The URL is stored in
              the configuration and will be used in subsequent command
              invocations. For example:
            </para>
<screen>&prompt.root;transactional-update register --url https://scc.suse.com</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>-s, --status</literal></term>
          <listitem>
            <para>
              Displays the current registration status in JSON format.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>--write-config</literal></term>
          <listitem>
            <para>
              Writes the provided options value to the
              <filename>/etc/SUSEConnect</filename> configuration file.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>--cleanup</literal></term>
          <listitem>
            <para>
              Removes old system credentials.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>--version</literal></term>
          <listitem>
            <para>
              Prints the version.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>--help</literal></term>
          <listitem>
            <para>
              Displays the usage of the command.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>
  <section xml:id="sec-cleanup-algorithm">
    <title>Snapshots cleanup</title>
    <para>
      If you run the command <command>transactional-update cleanup</command>,
      all old snapshots without a cleanup algorithm will have one set. All
      important snapshots are also marked. The command also removes all
      unreferenced (and thus unused) <filename>/etc</filename> overlay
      directories in <filename>/var/lib/overlay</filename>.
    </para>
    <para>
      The snapshots with the set <literal>number</literal> cleanup algorithm
      will be deleted according to the rules configured in
      <filename>/etc/snapper/configs/root</filename> by the following
      parameters:
    </para>
    <variablelist>
      <varlistentry>
        <term>NUMBER_MIN_AGE</term>
        <listitem>
          <para>
            Defines the minimum age of a snapshot (in seconds) that can be
            automatically removed.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>NUMBER_LIMIT/NUMBER_LIMIT_IMPORTANT</term>
        <listitem>
          <para>
            Defines the maximum count of stored snapshots. The cleaning
            algorithms delete snapshots above the specified maximum value,
            without taking into account the snapshot and file system space. The
            algorithms also delete snapshots above the minimum value until the
            limits for the snapshot and file system are reached.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      The snapshot cleanup is also regularly performed by &systemd;.
    </para>
  </section>
  <section xml:id="sec-rollback-procedure">
    <title>System rollback</title>
    <para>
      GRUB 2 enables booting from btrfs snapshots and thus allows you to use
      any older functional snapshot in case the new snapshot does not work
      correctly.
    </para>
    <para>
      When booting a snapshot, the parts of the file system included in the
      snapshot are mounted read-only; all other file systems and parts that are
      excluded from snapshots are mounted read-write and can be modified.
    </para>
    <tip>
      <title>Rolling back to a specific installation state</title>
      <para>
        An initial bootable snapshot is created at the end of the initial
        system installation. You can go back to that state at any time by
        booting this snapshot. The snapshot can be identified by the
        description <literal>after installation</literal>.
      </para>
    </tip>
    <para>
      There are two methods to perform a system rollback.
    </para>
    <itemizedlist>
      <listitem>
        <para>
          From a running system, you can set the default snapshot, see more in
          <xref linkend="proc-running-snapshot"/>.
        </para>
      </listitem>
      <listitem>
        <para>
          Especially in cases where the current snapshot is broken, you can
          boot into the new snapshot and set it to default. For details, refer
          to <xref linkend="proc-boot-snapshot"/>.
        </para>
      </listitem>
    </itemizedlist>
    <para>
      If your current snapshot is functional, you can use the following
      procedure for a system rollback.
    </para>
    <procedure xml:id="proc-running-snapshot">
      <title>Rollback from a running system</title>
      <step>
        <para>
          Choose the snapshot that should be set as default, run:
        </para>
<screen>&prompt.root;snapper list</screen>
        <para>
          to get a list of available snapshots. Note the number of the snapshot
          to be set as default.
        </para>
      </step>
      <step>
        <para>
          Set the snapshot as default by running:
        </para>
<screen>&prompt.root;transactional-update rollback <replaceable>snapshot_number</replaceable></screen>
        <para>
          If you omit the <replaceable>snapshot number</replaceable>, the
          current snapshot will be set as default.
        </para>
      </step>
      <step>
        <para>
          Reboot your system to boot into the new default snapshot.
        </para>
      </step>
    </procedure>
    <para>
      The following procedure is used in case the current snapshot is broken
      and you are not able to boot into it.
    </para>
    <procedure xml:id="proc-boot-snapshot">
      <title>Rollback to a working snapshot</title>
      <step>
        <para>
          Reboot your system and select <literal>Start bootloader from a
          read-only snapshot</literal>.
        </para>
      </step>
      <step>
        <para>
          Choose a snapshot to boot. The snapshots are sorted according to the
          date of creation, with the latest one at the top.
        </para>
      </step>
      <step>
        <para>
          Log in to your system and check whether everything works as expected.
          The data written to directories excluded from the snapshots will stay
          untouched.
        </para>
      </step>
      <step>
        <para>
          If the snapshot you booted into is not suitable for the rollback,
          reboot your system and choose another one.
        </para>
        <para>
          If the snapshot works as expected, you can perform the rollback by
          running the following command:
        </para>
<screen>&prompt.root;<command>transactional-update rollback</command></screen>
        <para>
          And reboot afterwards.
        </para>
      </step>
    </procedure>
  </section>
  <section xml:id="sec-automatic-updates">
    <title>Managing automatic transactional updates</title>
    <para>
      Automatic updates are controlled by <command>systemd.timer</command>
      that runs once per day. This applies all updates and informs
      <command>rebootmgrd</command> that the machine should be rebooted. You
      may adjust the time when the update runs, see systemd.timer(5)
      documentation.
    </para>
    <para>
      You can disable automatic transactional updates with this command:
    </para>
<screen>&prompt.root;<command>systemctl --now disable transactional-update.timer</command></screen>
  </section>
</chapter>
