<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="storage_multipath.xml" version="5.0" xml:id="cha-multipath" xml:lang="zh-tw">
 <title>管理裝置的多重路徑 I/O</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  本章描述如何透過使用多重路徑 I/O (MPIO) 管理伺服器和區塊儲存裝置間多重路徑的容錯移轉和路徑負載平衡。
 </para>
 <sect1 xml:id="sec-multipath-intro">
  <title>瞭解多重路徑 I/O</title>

  <para>
   多重路徑是指伺服器與相同實體或邏輯區塊儲存裝置在伺服器中的主機匯流排介面卡與裝置的儲存控制器之間、跨多重實體路徑進行通訊的能力，通常是在光纖通道 (FC) 或 iSCSI SAN 環境中進行。
  </para>

  <para>
   Linux 多重路徑提供了連接容錯功能並可在各主動連接之間實現負載平衡。設定並執行多重路徑時，會自動隔離並識別裝置連接失敗，並將 I/O 重新路由至替代連接。
  </para>

  <para>
   多重路徑針對連接故障提供容錯，但不針對儲存裝置本身的故障提供容錯。針對後者的容錯是透過鏡像等互補技術實現的。
  </para>

  <sect2>
   <title>多重路徑的術語</title>
   <variablelist>
    <varlistentry>
     <term>儲存陣列</term>
     <listitem>
      <para>
       包含許多磁碟和多個結構連接 (控制器) 的硬體裝置，為用戶端提供 SAN 儲存空間。儲存陣列通常具備 RAID 和容錯移轉功能，並支援多重路徑。一直以來，主動/被動 (容錯移轉) 和主動/主動 (負載平衡) 儲存陣列的組態是有區別的。這些概念仍然存在，但它們不過是新式硬體所支援的路徑群組和存取狀態概念的特殊情況。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>主機、主機系統</term>
     <listitem>
      <para>
       執行 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 的電腦，用做<emphasis>儲存陣列</emphasis>的用戶端系統。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>多重路徑對應、多重路徑裝置</term>
     <listitem>
      <para>
       一組<emphasis>路徑裝置</emphasis>。它代表儲存陣列上的儲存磁碟區，主機系統將其視為單個區塊裝置。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>路徑裝置</term>
     <listitem>
      <para>
       多重路徑對應的成員，通常是一個 SCSI 裝置。每個路徑裝置代表主機電腦與實際儲存磁碟區之間的唯一連接，例如，來自 iSCSI 工作階段的邏輯單元。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>WWID</term>
     <listitem>
      <para>
       「全球識別碼」<systemitem>multipath-tools</systemitem> 使用 WWID 來確定應將哪些低層級裝置組合到多重路徑對應中。WWID 必須與可設定的<emphasis>對應名稱</emphasis>區分開 (請參閱<xref linkend="sec-multipath-names"/>)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>uevent、udev 事件</term>
     <listitem>
      <para>
       由核心傳送至使用者空間並由 <command>udev</command> 子系統處理的事件。在新增、移除裝置或變更裝置內容時會產生 uevent。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>裝置對應程式</term>
     <listitem>
      <para>
       Linux 核心中用於建立虛擬區塊裝置的架構。對應裝置的 I/O 操作將重新導向至基礎區塊裝置。裝置對應可以堆疊。裝置對應程式實作自身的事件訊號 (也稱為「裝置對應程式事件」或「dm 事件」)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>initramfs</term>
     <listitem>
      <para>
       初始 RAM 檔案系統，由於歷史原因，也稱為「初始 RAM 磁碟」(initrd) (請參閱<xref linkend="sec-boot-terminology"/>)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ALUA</term>
     <listitem>
      <para>
       「非對稱邏輯單元存取」，隨 SCSI 標準 SCSI-3 引入的概念。可以透過多個連接埠存取儲存磁碟區，這些連接埠依不同狀態 (作用中、待命等) 的連接埠群組進行組織。ALUA 定義了用於查詢連接埠群組及其狀態，以及變更連接埠群組狀態的 SCSI 指令。支援 SCSI 的現代儲存陣列通常也支援 ALUA。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-hardware">
  <title>硬體支援</title>

  <para>
   多重路徑驅動程式和工具可在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 支援的所有架構上使用。不區分通訊協定的一般驅動程式適用於市面上大多數支援多重路徑的儲存硬體。一些儲存陣列廠商會提供其自己的多重路徑管理工具。請參閱廠商的硬體文件以決定所需設定。
  </para>

  <sect2 xml:id="sec-multipath-hardware-implementations">
   <title>多重路徑實作：裝置對應程式和 NVMe</title>
   <para>
    Linux 中傳統的一般多重路徑實作使用裝置對應程式架構。對於大多數裝置類型 (例如 SCSI 裝置)，裝置對應程式多重路徑是唯一可用的實作。裝置對應程式多重路徑具有高度設定彈性且非常靈活。
   </para>
   <para>
    Linux <emphasis>NVM Express</emphasis> (NVMe) 核心子系統在核心中原生實作多重路徑。這種實作可以降低 NVMe 裝置 (通常是延遲極低的快速裝置) 的計算負荷。原生 NVMe 多重路徑不需要使用者空間元件。從 SLE 15 開始，原生多重路徑一直是 NVMe 多重路徑裝置的預設功能。如需詳細資訊，請參閱<xref linkend="sec-nvmeof-host-configuration-multipathing"/>。
   </para>
   <para>
    本章介紹裝置對應程式多重路徑及其使用者空間元件 <systemitem>multipath-tools</systemitem>。<systemitem>multipath-tools</systemitem> 也可對原生 NVMe 多重路徑提供有限的支援 (請參閱<xref linkend="sec-multipath-conf-misc"/>)。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-hardware-autodetect">
   <title>針對多重路徑的儲存陣列自動偵測</title>
   <para>
    裝置對應程式多重路徑是一般性的技術。多重路徑裝置偵測只要求核心偵測低層級 (例如 SCSI) 裝置，並要求裝置內容可靠地將多個低層級裝置識別為同一個磁碟區的不同「路徑」，而不是實際不同的裝置。
   </para>
   <para>
    <filename>multipath-tools</filename> 套件依廠商和產品名稱偵測儲存陣列。它提供了多種不同儲存產品的內建組態預設值。請參閱您的儲存陣列的硬體文件：某些廠商為 Linux 多重路徑組態提供了具體的建議。
   </para>
   <para>
    如果您需要對儲存陣列的內建組態套用變更，請參閱<xref linkend="sec-multipath-conf-file"/>。
   </para>
   <important>
    <title>關於內建硬體內容的免責聲明</title>
    <para>
     <filename>multipath-tools</filename> 為許多儲存陣列提供內建預設。給定儲存產品存在此類預設<emphasis>並不意味著</emphasis>該儲存產品的廠商已使用 <systemitem>dm-multipath</systemitem> 測試了該產品，也不意味著該廠商認可或支援對該產品使用 <systemitem>dm-multipath</systemitem>。若有支援相關的問題，請始終參閱原始廠商文件。
    </para>
   </important>
  </sect2>

  <sect2 xml:id="sec-multipath-hardware-handlers">
   <title>需要特定硬體處理器的儲存陣列</title>
   <para>
    對於某些儲存陣列，需要執行特殊指令才能從一個路徑容錯移轉至另一個路徑，或需要使用非標準的錯誤處理方法。這些特殊指令和方法由 Linux 核心中的硬體處理器實作。新式 SCSI 儲存陣列支援 SCSI 標準中定義的「非對稱邏輯單元存取」(ALUA) 硬體處理器。除 ALUA 之外，SLE 核心還包含 Netapp E 系列 (RDAC)、Dell/EMC CLARiiON CX 陣列系列和 HP 傳統陣列的硬體處理器。
   </para>
   <para>
    從 Linux 核心 4.4 開始，Linux 核心已自動偵測到大多數陣列 (包括所有支援 ALUA 的陣列) 的硬體處理器。唯一的要求是在查探相應裝置時載入裝置處理器模組。<systemitem>multipath-tools</systemitem> 套件會安裝適當的組態檔案，來確保符合此要求。一旦裝置處理器關聯到給定裝置，就不能再變更。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-planning">
  <title>規劃多重路徑</title>

  <para>
   使用本節中的準則規劃多重路徑 I/O 解決方案。
  </para>

  <sect2 xml:id="sec-multipath-planning-prereq">
   <title>先決條件</title>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      您用於多重路徑裝置的儲存陣列必須支援多重路徑。如需詳細資訊，請參閱 <xref linkend="sec-multipath-hardware"/>。
     </para>
    </listitem>
    <listitem>
     <para>
      只有在伺服器中的主機匯流排配接器和區塊儲存裝置的主機匯流排控制器之間存在多重實體路徑時，才需要設定多重路徑。
     </para>
    </listitem>
    <listitem>
     <para>
      對於某些儲存陣列，廠商提供了自己的多重路徑軟體來管理陣列之實體和邏輯裝置的多重路徑。在這種情況下，您應根據廠商的指示設定那些裝置的多重路徑。
     </para>
    </listitem>
    <listitem>
     <para>
      在虛擬化環境中使用多重路徑時，將在主機伺服器環境中控制多重路徑。請先設定裝置的多重路徑，然後才能將其指派給虛擬訪客機器。
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-types">
   <title>多重路徑安裝類型</title>
   <para>
    我們根據處理根裝置的方式來區分安裝類型。<xref linkend="sec-multipath-installing"/>介紹了在安裝期間和安裝後如何建立不同的設定。
   </para>
   <sect3 xml:id="sec-multipath-planning-type-root">
    <title>根檔案系統位於多重路徑上 (SAN-boot)</title>
    <para>
     根檔案系統位於多重路徑裝置上。對於僅使用 SAN 儲存空間的無磁碟伺服器，一般都是如此。在此類系統上，需要支援多重路徑才能開機，並且必須在 initramfs 中啟用多重路徑。
    </para>
   </sect3>
   <sect3 xml:id="sec-multipath-planning-type-noroot">
    <title>根檔案系統位於本地磁碟上</title>
    <para>
     根檔案系統 (可能還包括其他某些檔案系統) 位於本地儲存裝置中，例如，位於直連 SATA 磁碟或本地 RAID 上，但系統另外還會使用多重路徑 SAN 儲存空間中的檔案系統。可透過三種不同的方式設定此系統類型：
    </para>
    <variablelist>
     <varlistentry>
      <term>為本地磁碟設定多重路徑</term>
      <listitem>
       <para>
        所有區塊裝置 (包括本地磁碟) 是多重路徑對應的一部分。根裝置會顯示為只有一個路徑的降級多重路徑對應。如果在使用 YaST 進行初始系統安裝期間啟用了多重路徑，則會建立此組態。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vl-multipath-planning-type-noroot-ignore">
      <term>將本地磁碟排除在多重路徑之外</term>
      <listitem>
       <para>
        在此組態中，多重路徑是在 initramfs 中啟用，但根裝置明確排除在多重路徑之外 (請參閱<xref linkend="sec-multipath-blacklist"/>)。<xref linkend="pr-multipath-disable-root"/>介紹了如何設定此組態。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vl-multipath-planning-type-noroot-noinitrd">
      <term>在 initramfs 中停用多重路徑</term>
      <listitem>
       <para>
        如果在使用 YaST 進行初始系統安裝期間未啟用多重路徑，則會建立此設定。這種組態相當脆弱；請考慮改用其他選項之一。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-disks">
   <title>磁碟管理任務</title>
   <para>
    使用協力廠商 SAN 陣列管理工具或儲存陣列的使用者介面來建立邏輯裝置，並將其指定給主機。確定在兩端正確設定主機身分證明。
   </para>
   <para>
    可以在執行中主機上新增或移除磁碟區，但要偵測到相應變更，可能需要重新掃描 SCSI 目標，並在主機上重新設定多重路徑。請參閱 <xref linkend="sec-multipath-best-practice-scandev"/>。
   </para>
   <note>
    <title>儲存處理器</title>
    <para>
     在某些磁碟陣列上，儲存陣列透過儲存處理器管理流量。一個處理器為主動，另外一個為被動，直到發生了失敗。如果您連接到被動儲存處理器，可能會找不到所需的 LUN，或雖然找到了這些 LUN，但在嘗試存取時會發生 I/O 錯誤。
    </para>
    <para>
     如果磁碟陣列有多個儲存處理器，請確定 SAN 交換器已連接到您要存取的 LUN 所屬的主動儲存處理器。
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-raid">
   <title>軟體 RAID 和複雜的儲存堆疊</title>
   <para>
    多重路徑在 SCSI 磁碟等基本儲存裝置的頂層設定。在多層儲存堆疊中，多重路徑始終位於底層。其他層 (例如軟體 RAID、邏輯磁碟區管理、區塊裝置加密等) 排布在多重路徑之上。因此，對於具有多個 I/O 路徑以及要用於軟體 RAID 的每個裝置，必須先將該裝置設定為支援多重路徑，然後才能嘗試建立軟體 RAID 裝置。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-ha">
   <title>高可用性解決方案</title>
   <para>
    叢集儲存資源的高可用性解決方案在每個節點上之多重路徑服務的基礎上執行。確定每個節點上 <filename>/etc/multipath.conf</filename> 檔案中的組態設定在整個叢集中保持一致。
   </para>
   <para>
    確定多重路徑裝置在所有裝置中的名稱都相同。如需詳細資訊，請參閱<xref linkend="sec-multipath-names"/>。
   </para>
   <para>
    用於 LAN 鏡像複製裝置的分散式複製區塊裝置 (DRBD) 高可用性解決方案在多重路徑的基礎上執行。對於每個具有多重 I/O 路徑的裝置和要用於 DRDB 解決方案的裝置來說，您必須先設定多重路徑的裝置，然後才能設定 DRDB。
   </para>
   <para>
    將多重路徑與依賴於使用共用儲存實現圍籬區隔的叢集軟體 (例如包含 <command>pacemaker</command> 的 <command>sbd</command>) 一起使用時必須格外小心。如需詳細資料，請參閱 <xref linkend="sec-multipath-policies-cluster"/>。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-installing">
  <title>在多重路徑系統上安裝 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase></title>

  <para>
   在配有多重路徑硬體的系統上安裝 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 時，不需要指定特殊的安裝參數。
  </para>

  <sect2 xml:id="sec-multipath-installing-nomp">
   <title>在未連接多重路徑裝置的情況下安裝</title>
   <para>
    您可能希望在本地磁碟上執行安裝，而不先設定架構和儲存裝置，以便稍後再將多重路徑 SAN 裝置新增至系統。在此情況下，安裝將如同在非多重路徑系統上一般進行。完成安裝後，雖然會安裝 <systemitem>multipath-tools</systemitem>，但將停用 <systemitem class="daemon">systemd</systemitem> 服務 <filename>multipathd.service</filename>。系統的組態將如<xref linkend="sec-multipath-planning-type-noroot"/>中的<xref linkend="vl-multipath-planning-type-noroot-noinitrd"/>所述。新增 SAN 硬體前，您將需要啟用並啟動 <filename>multipathd.service</filename>。我們建議在 <filename>/etc/multipath.conf</filename> 中為根裝置建立 <literal>blacklist</literal> 項目 (請參閱<xref linkend="sec-multipath-blacklist"/>)。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-installing-mp">
   <title>在連接了多重路徑裝置的情況下安裝</title>
   <para>
    如果安裝時有多重路徑裝置連接到系統，YaST 將偵測到這些裝置，並在進入磁碟分割階段前顯示一個快顯視窗，詢問您是否啟用多重路徑。
   </para>
   <informalfigure>
    <mediaobject>
     <textobject role="description"><phrase>
          YaST multipath dialog</phrase>
     </textobject>
     <imageobject role="fo">
      <imagedata fileref="multipath-popup.png" width="50%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="multipath-popup.png" width="50%"/>
     </imageobject>
    </mediaobject>
   </informalfigure>
   <para>
    如果您在此提示視窗中選取「否」(不建議如此)，安裝將依照<xref linkend="sec-multipath-installing-nomp"/>所述進行。在磁碟分割階段，請勿使用/編輯稍後將成為多重路徑對應一部分的裝置。
   </para>
   <para>
    如果您在多重路徑提示視窗中選取「是」，<command>multipathd</command> 將在安裝期間執行。不會有裝置新增至 <filename>/etc/multipath.conf</filename> 的 <literal>blacklist</literal> 區段，因此，在磁碟分割對話方塊中，所有 SCSI 和 DASD 裝置 (包括本地磁碟) 都將顯示為多重路徑裝置。安裝後，所有 SCSI 和 DASD 裝置都將是多重路徑裝置 (如<xref linkend="sec-multipath-planning-type-root"/>中述)。
   </para>
   <procedure xml:id="pr-multipath-disable-root">
    <title>安裝後對根磁碟停用多重路徑</title>
    <para>
     此程序假定您將系統安裝在本地磁碟上，並在安裝期間啟用了多重路徑，以便根裝置現在位於多重路徑上，但您更希望依照<xref linkend="sec-multipath-planning-type-noroot"/>中的「<xref linkend="vl-multipath-planning-type-noroot-ignore"/>」所述設定系統。
    </para>
    <step>
     <para>
      檢查您的系統，以獲取本地根裝置的 <filename>/dev/mapper/...</filename> 參考，並以裝置不再是多重路徑對應時仍然有效的參考 (請參閱<xref linkend="sec-multipath-referring"/>) 取代它們。如果以下指令未找到參考，您無需套用變更：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> grep -rl /dev/mapper/ /etc</screen>
    </step>
    <step>
     <para>
      切換到 <command>dracut</command> 的 <literal>by-uuid</literal> 永久裝置規則 (請參閱<xref linkend="sec-multipath-initrd-persistent"/>)：
     </para>
<screen><prompt>&gt; </prompt>echo 'persistent_policy="by-uuid"' | \
      sudo tee /etc/dracut.conf.d/10-persistent-policy.conf</screen>
    </step>
    <step>
     <para>
      確定根裝置的 WWID：
     </para>
<screen><prompt>&gt; </prompt>multipathd show paths format "%i %d %w %s"
0:2:0:0 sda 3600605b009e7ed501f0e45370aaeb77f IBM,ServeRAID M5210
...
        </screen>
     <para>
      此指令會列印所有路徑裝置及其 WWID 和廠商/產品資訊。您將能識別根裝置 (此處為 ServeRAID 裝置) 並記下 WWID。
     </para>
    </step>
    <step>
     <para>
      使用您剛剛確定的 WWID 在 <filename>/etc/multipath.conf</filename> 中建立一個黑名單項目 (請參閱<xref linkend="sec-multipath-blacklist"/>)。暫時先<emphasis>不要</emphasis>套用這些設定：
     </para>
<screen>blacklist {
    wwid 3600605b009e7ed501f0e45370aaeb77f
}</screen>
    </step>
    <step>
     <para>
      重建 initramfs：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dracut -f</screen>
    </step>
    <step>
     <para>
      重新開機。您的系統應使用非多重路徑根磁碟開機。
     </para>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-offline-update">
  <title>在多重路徑系統上更新 SLE</title>

  <para>
   從線上更新系統時，您可以依照<xref linkend="cha-upgrade-online"/>所述操作。
  </para>

  <para>
   系統的線下更新過程與<xref linkend="sec-multipath-installing"/>所述的全新安裝類似。系統沒有 <literal>blacklist</literal>，因此，如果使用者選取啟用多重路徑，根裝置將顯示為多重路徑裝置，即使它通常不是多重路徑裝置。當 <command>dracut</command> 在更新過程中建立 initramfs 時，它看到的儲存堆疊與在已開機系統上看到的不同。請參閱<xref linkend="sec-multipath-initrd-persistent"/> 和<xref linkend="sec-multipath-referring"/>。
  </para>
 </sect1>
 <sect1 xml:id="sec-multipath-mpiotools">
  <title>多重路徑管理工具</title>

  <para>
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中的多重路徑支援以 Linux 核心的裝置對應程式多重路徑模組及 <systemitem>multipath-tools</systemitem> 使用者空間套件為基礎。
  </para>

  <para>
   裝置對應程式多重路徑 (DM-MP) 模組負責處理一般多重路徑功能。如需詳細資訊，請參閱<xref linkend="sec-multipath-mpiotools-dm"/>。
  </para>

  <para>
   <systemitem class="resource">multipath-tools</systemitem> 和 <systemitem class="resource">kpartx</systemitem> 套件提供了用於處理自動路徑探查和分組的工具。這些工具如下：
  </para>

  <variablelist>
   <varlistentry>
    <term><command>multipathd</command></term>
    <listitem>
     <para>
      用於設定和監控多重路徑對應的精靈，以及用來與精靈程序通訊的指令列用戶端。請參閱 <xref linkend="sec-multipath-mpiotools-multipathd"/>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>multipath</command></term>
    <listitem>
     <para>
      用於執行多重路徑操作的指令列工具。請參閱 <xref linkend="sec-multipath-mpiotools-multipath"/>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>kpartx</command></term>
    <listitem>
     <para>
      用於管理多重路徑裝置上的「分割區」的指令列工具。請參閱 <xref linkend="sec-multipath-configuration-partitioning"/>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>mpathpersist</command></term>
    <listitem>
     <para>
      用於管理 SCSI 永久保留的指令列工具。請參閱 <xref linkend="sec-multipath-mpiotools-mpathpersist"/>。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <sect2 xml:id="sec-multipath-mpiotools-dm">
   <title>裝置對應程式多重路徑模組</title>
   <para>
    裝置對應程式多重路徑 (DM-MP) 模組 <filename>dm-multipath.ko</filename> 為 Linux 提供了一般多重路徑功能。DM-MPIO 是 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中適用於 SCSI 和 DASD 裝置的首選多重路徑解決方案，它也適用於 NVMe 裝置。
   </para>
   <note>
    <title>將 DM-MP 用於 NVMe 裝置</title>
    <para>
     從 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 15 開始，建議將原生 NVMe 多重路徑 (請參閱<xref linkend="sec-multipath-hardware-implementations"/>) 用於 NVMe，並且預設已使用該功能。若要停用原生 NVMe 多重路徑，並改用裝置對應程式多重路徑 (<emphasis>不建議如此</emphasis>)，請使用核心參數 <literal>nvme-core.multipath=0</literal> 開機。
    </para>
   </note>
   <para>
    裝置對應程式多重路徑模組可處理以下任務：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      在作用中路徑群組內的多個路徑上分散負載。
     </para>
    </listitem>
    <listitem>
     <para>
      注意到路徑裝置上的 I/O 錯誤，並將這些裝置標示為發生故障，這樣就不會向其傳送 I/O。
     </para>
    </listitem>
    <listitem>
     <para>
      當作用中路徑群組中的所有路徑都失敗時切換路徑群組。
     </para>
    </listitem>
    <listitem>
     <para>
      如果所有路徑都失敗，則使多重路徑裝置上的 I/O 失敗或排入佇列，具體取決於組態。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    以下任務由 <systemitem>multipath-tools</systemitem> 套件中的使用者空間元件處理，而不是由裝置對應程式多重路徑模組處理：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      探查代表同一儲存裝置不同路徑的裝置，並基於這些裝置組合多重路徑對應。
     </para>
    </listitem>
    <listitem>
     <para>
      將具有相似內容的路徑裝置收集到路徑群組。
     </para>
    </listitem>
    <listitem>
     <para>
      主動監控路徑裝置是否出現故障或重新具現化。
     </para>
    </listitem>
    <listitem>
     <para>
      監控路徑裝置的新增和移除。
     </para>
    </listitem>
    <listitem>
     <para>
      裝置對應程式多重路徑模組未提供易於使用的設定和組態使用者介面。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    如需 <systemitem>multipath-tools</systemitem> 套件中各元件的詳細資料，請參閱<xref linkend="sec-multipath-mpiotools-multipathd"/>。
   </para>
   <note>
    <title>多重路徑預防的故障</title>
    <para>
     DM-MPIO 預防的是裝置路徑中的故障，而不是裝置自身的故障，例如媒體錯誤。只能透過其他方式來預防後一種錯誤，例如複製。
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-multipathd">
   <title><command>multipathd</command> 精靈</title>
   <para>
    <command>multipathd</command> 是新式 Linux 裝置對應程式多重路徑設定中的最重要部分。通常透過 systemd 服務 <filename>multipathd.service</filename> 來啟動此精靈 (請參閱<xref linkend="sec-multipath-configuration-start"/>)。
   </para>
   <para>
    <command>multipathd</command> 可處理以下任務 (其中一些任務依賴於組態)：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      啟動時，偵測路徑裝置並設定來自偵測到的裝置的多重路徑對應。
     </para>
    </listitem>
    <listitem>
     <para>
      監控 uevent 和裝置對應程式事件，根據需要在多重路徑對應中新增或移除路徑對應，並啟動容錯移轉或容錯回復操作。
     </para>
    </listitem>
    <listitem>
     <para>
      探查到新的路徑裝置時立即設定新對應。
     </para>
    </listitem>
    <listitem>
     <para>
      定期檢查路徑裝置以偵測故障，並測試有故障的路徑，以便在它們恢復正常時將其重新啟用。
     </para>
    </listitem>
    <listitem>
     <para>
      如果所有路徑都發生故障，<command>multipathd</command> 將使對應失敗，或者將對應裝置切換到佇列模式，並使其排入佇列給定的一段時間。
     </para>
    </listitem>
    <listitem>
     <para>
      處理路徑狀態變更，並根據需要切換路徑群組或將路徑重新分組。
     </para>
    </listitem>
    <listitem>
     <para>
      測試路徑的「臨界」狀態，即導致路徑狀態在正常運作與不正常運作之間來回變化的不穩定結構狀況。
     </para>
    </listitem>
    <listitem>
     <para>
      處理路徑裝置的 SCSI 永久保留金鑰 (如果已設定)。請參閱<xref linkend="sec-multipath-mpiotools-mpathpersist"/>。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    <command>multipathd</command> 還可用做指令列用戶端，透過將互動式指令傳送到執行中精靈來處理這些指令。用於向精靈傳送指令的一般語法如下：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipathd <replaceable>COMMAND</replaceable></screen>
   <para>
    或
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipathd -k'<replaceable>COMMAND</replaceable>'</screen>
   <para>
    此精靈還可在互動模式下執行，允許您傳送多個後續指令：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipathd -k</screen>
   <note>
    <title>multipath 和 multipathd 的協作方式</title>
    <para>
     許多 <command>multipathd</command> 指令都有等效的 <command>multipath</command> 指令。例如，<command>multipathd
     show topology</command> 的作用與 <command>multipath
     -ll</command> 相同。兩者的顯著差別在於，multipathd 指令會查詢執行中 <command>multipathd</command> 精靈的內部狀態，而 multipath 則是直接從核心和 I/O 操作獲取資訊。
    </para>
    <para>
     如果多重路徑精靈正在執行，我們建議使用 <command>multipathd</command> 指令對系統進行修改。否則，該精靈可能會注意到組態變更並做出回應。在某些情況下，該精靈甚至可能嘗試復原已套用的變更。如果偵測到執行中的精靈，<command>multipath</command> 會自動將某些可能帶來風險的指令 (例如刪除和衝洗對應) 委派給 <command>multipathd</command>。
    </para>
   </note>
   <para>
    下面的清單介紹了常用的 <command>multipathd</command> 指令：
   </para>
   <variablelist>
    <varlistentry>
     <term>show topology</term>
     <listitem>
      <para>
       顯示目前的對應拓撲和內容。請參閱 <xref linkend="sec-multipath-best-practice-status"/>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show paths</term>
     <listitem>
      <para>
       顯示目前已知的路徑裝置。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show paths format &quot;<replaceable>FORMAT STRING</replaceable>&quot;</term>
     <listitem>
      <para>
       使用格式字串顯示目前已知的路徑裝置。使用 <command>show wildcards</command> 可查看支援的格式指定元清單。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show maps</term>
     <listitem>
      <para>
       顯示目前設定的對應裝置。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show maps format <replaceable>FORMAT STRING</replaceable></term>
     <listitem>
      <para>
       使用格式字串顯示目前設定的對應裝置。使用 <command>show wildcards</command> 可查看支援的格式指定元清單。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show config local</term>
     <listitem>
      <para>
       顯示 multipathd 目前使用的組態。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>reconfigure</term>
     <listitem>
      <para>
       重新讀取組態檔案、重新掃描裝置，並再次設定對應。這基本上等同於重新啟動 <command>multipathd</command>。有幾個選項在不重新啟動的情況下無法修改。手冊頁 <systemitem>multipath.conf(5)</systemitem> 中述及了這些選項。<option>reconfigure</option> 指令只會重新載入發生某種變更的對應裝置。若要強制重新載入每個對應裝置，請使用 <command>reconfigure all</command> (從 SUSE Linux Enterprise Server 15 SP4 開始提供；在先前的版本上，<option>reconfigure</option> 可以重新載入每個對應)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>del map <replaceable>MAP DEVICE NAME</replaceable></term>
     <listitem>
      <para>
       取消設定並刪除給定的對應裝置及其分割區。<replaceable>MAP DEVICE NAME</replaceable> 可以是裝置節點名稱 (例如 <filename>dm-0</filename>)、WWID 或對應名稱。如果該裝置正在使用中，則該指令會失敗。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>switchgroup map <replaceable>MAP DEVICE NAME</replaceable> group <replaceable>N</replaceable></term>
     <listitem>
      <para>
       切換到索引 (從 1 開始) 為指定數字的路徑群組。對於具有手動容錯回復的對應，這很有用 (請參閱<xref linkend="sec-multipath-policies-default"/>)。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    可以使用其他指令來修改路徑狀態、啟用或停用佇列等。如需詳細資料，請參閱 <systemitem>multipathd(8)</systemitem>。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-multipath">
   <title><command>multipath</command> 指令</title>
   <para>
    儘管多重路徑的大部分設定是自動完成並由 <command>multipathd</command> 處理，您仍可使用 <command>multipath</command> 來完成某些管理任務。下面提供了幾個指令用法範例：
   </para>
   <variablelist>
    <varlistentry>
     <term>multipath</term>
     <listitem>
      <para>
       偵測路徑裝置並設定找到的所有多重路徑對應。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -d</term>
     <listitem>
      <para>
       類似於 <command>multipath</command>，但不設定任何對應 (「模擬執行」)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
       設定特定的多重路徑裝置。<replaceable>DEVICENAME</replaceable> 可以使用裝置節點名稱 (<filename>/dev/sdb</filename>) 或 <literal>major:minor</literal> 格式的裝置編號來指定成員路徑裝置。或者，它可以是多重路徑對應的 WWID 或名稱。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -f <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
       取消設定 (「衝洗」) 某個多重路徑對應及其分割區對應。如果該對應或其某個分割區正在使用中，則該指令會失敗。請參閱上文瞭解 <replaceable>DEVICENAME</replaceable> 的可能值。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -F</term>
     <listitem>
      <para>
       取消設定 (「衝洗」) 所有多重路徑對應及其分割區對應。如果這些對應正在使用中，則該指令會失敗。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -ll</term>
     <listitem>
      <para>
       顯示目前設定的所有多重路徑裝置的狀態和拓撲。請參閱 <xref linkend="sec-multipath-best-practice-status"/>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -ll <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
       顯示指定多重路徑裝置的狀態。請參閱上文瞭解 <replaceable>DEVICENAME</replaceable> 的可能值。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -t</term>
     <listitem>
      <para>
       顯示內部硬體表和使用中的多重路徑組態。如需組態參數的詳細資料，請參閱 <systemitem>multipath.conf(5)</systemitem>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -T</term>
     <listitem>
      <para>
       功能與 <command>multipath -t</command> 指令類似，但僅顯示與主機上偵測到的硬體相符的硬體項目。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    選項 <option>-v</option> 控制輸出的詳細程度。提供的值會覆寫 <filename>/etc/multipath.conf</filename> 中的 <option>verbosity</option> 選項。請參閱 <xref linkend="sec-multipath-conf-misc"/>。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-mpathpersist">
   <title>SCSI 永久保留和 <command>mpathpersist</command></title>
   <para>
    <command>mpathpersist</command> 公用程式可用於管理裝置對應程式多重路徑裝置上的 SCSI 永久保留。永久保留用於僅限特定的 SCSI 啟動器存取 SCSI 邏輯單元。在多重路徑組態中，必須對給定磁碟區的所有 I_T 節點 (路徑) 使用相同的保留金鑰；否則，在一部路徑裝置上建立保留會導致其他路徑發生 I/O 錯誤。
   </para>
   <para>
    將此公用程式與 <filename>/etc/multipath.conf</filename> 檔案中的 <literal>reservation_key</literal> 屬性配合使用，可設定 SCSI 裝置的永久保留。當且僅當設定了此選項時，<command>multipathd</command> 精靈才會檢查新探查到的路徑或已重新啟用路徑的永久保留。
   </para>
   <para>
    您可以將該屬性新增至 <filename>multipath.conf</filename> 的 <literal>defaults</literal> 或 <literal>multipaths</literal> 區段。例如：
   </para>
<screen>multipaths {
    multipath {
        wwid             3600140508dbcf02acb448188d73ec97d
        alias            yellow
        reservation_key  0x123abc
    }
}</screen>
   <para>
    為適用於永久管理的所有 mpath 裝置設定 <literal>reservation_key</literal> 參數後，使用 <command>multipathd reconfigure</command> 重新載入組態。
   </para>
   <note>
    <title>使用 “<option>reservation_key file</option>”</title>
    <para>
     如果在 <filename>multipath.conf</filename> 的 <literal>defaults</literal> 區段中使用了特殊值 <literal>reservation_key file</literal>，則可以使用 <command>mpathpersist</command> 以動態方式在檔案 <filename>/etc/multipath/prkeys</filename> 中管理保留金鑰。
    </para>
    <para>
     這是處理多重路徑對應永久保留的建議方法。從 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 12 SP4 開始可以使用這種方法。
    </para>
   </note>
   <para>
    使用指令 <command>mpathpersist</command> 可查詢和設定由 SCSI 裝置組成的多重路徑對應的永久保留。如需詳細資料，請參閱手冊頁 <systemitem>mpathpersist(8)</systemitem>。指令列選項與 <systemitem>sg3_utils</systemitem> 套件中 <command>sg_persist</command> 的選項相同。<systemitem>sg_persist(8)</systemitem> 手冊頁詳細解釋了選項的語意。
   </para>
   <para>
    在以下範例中，<replaceable>DEVICE</replaceable> 表示裝置對應程式多重路徑裝置，例如 <filename>/dev/mapper/mpatha</filename>。以下指令與長選項一起列出，以方便閱讀。可以用單個字母取代所有選項，例如 <command>mpathpersist -oGS 123abc
    <replaceable>DEVICE</replaceable></command>。
   </para>
   <variablelist>
    <varlistentry>
     <term>mpathpersist --in --read-keys <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       讀取裝置的已註冊保留金鑰。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --in --read-reservation <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       顯示裝置的現有保留。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --register --param-sark=123abc <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       為裝置註冊一個保留金鑰。這會為主機上的所有 I_T 聯結 (路徑裝置) 新增保留金鑰。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --reserve --param-rk=123abc --prout-type=5 <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       使用先前註冊的金鑰為裝置建立類型 5 (「獨佔寫入 - 僅限註冊者」) 保留。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --release --param-rk=123abc --prout-type=5 <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       釋放裝置的類型 5 保留。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --register-ignore --param-sark=0 <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       從裝置中刪除現有的保留金鑰。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-config">
  <title>針對多重路徑設定系統</title>

  <para/>

  <sect2 xml:id="sec-multipath-configuration-start">
   <title>啟用、啟動和停止多重路徑服務</title>
   <para>
    若要允許多重路徑服務在開機時啟動，請執行以下指令：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl enable multipathd</screen>
   <para>
    若要在執行中的系統上手動啟動該服務，請輸入：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl start multipathd</screen>
   <para>
    若要重新啟動該服務，請輸入：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl restart multipathd</screen>
   <para>
    在大多數情況下不需要重新啟動該服務。若要簡單地讓 <command>multipathd</command> 重新載入其組態，請執行：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl reload multipathd</screen>
   <para>
    若要檢查該服務的狀態，請輸入：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl status multipathd</screen>
   <para>
    若要停止目前工作階段中的多重路徑服務，請執行：
   </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> systemctl stop multipathd multipathd.socket
   </screen>
   <para>
    停止服務不會移除現有的多重路徑對應。若要移除未使用的對應，請執行以下指令：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath -F</screen>
   <warning>
    <title>將 <filename>multipathd.service</filename> 保持為啟用狀態</title>
    <para>
     我們強烈建議永遠將 <filename>multipathd.service</filename> 保持為啟用狀態，並讓其在配有多重路徑硬體的系統上執行。雖然該服務支援 <command>systemd</command> 的通訊端啟用機制，但我們不建議您依賴於該機制。如果停用該服務，開機期間將不會設定多重路徑對應。
    </para>
   </warning>
   <note xml:id="ann-multipath-configuration-disable">
    <title>停用多重路徑</title>
    <para>
     如果您需要在出現上述警告的情況下停用多重路徑，例如，因為要部署協力廠商多重路徑軟體，請執行以下操作。確定系統不會使用多重路徑裝置的硬式編碼參考 (請參閱<xref linkend="sec-multipath-trouble-ref"/>)。
    </para>
    <para>
     若要<emphasis>僅為單次系統開機</emphasis>停用多重路徑，請使用核心參數 <literal>multipath=off</literal>。這會影響已開機的系統和 initramfs (在這種情況下不需要重建)。
    </para>
    <para>
     若要<emphasis>永久</emphasis>停用 multipathd 服務，使其不會在系統今後開機時啟動，請執行以下指令：
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl disable multipathd multipathd.socket
<prompt>&gt; </prompt><command>sudo</command> dracut --force --omit multipath
</screen>
    <para>
     (每次停用或啟用多重路徑服務後，都需要重建 <systemitem>initramfs</systemitem>。請參閱<xref linkend="sec-multipath-initrd-sync"/>)。
    </para>
    <para>
     如果您想確保不設定多重路徑裝置 (<emphasis>即使是手動執行 <command>multipath</command> 時</emphasis>)，請在重建 initramfs 之前，將以下幾行新增至 <filename>/etc/multipath.conf</filename> 的結尾：
    </para>
<screen>blacklist {
    wwid .*
}</screen>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-configuration-sandevs">
   <title>針對多重路徑準備 SAN 裝置</title>
   <para>
    在為 SAN 裝置設定多重路徑 I/O 之前，請視需要執行以下步驟準備 SAN 裝置：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      使用廠商工具對 SAN 進行設定並分區。
     </para>
    </listitem>
    <listitem>
     <para>
      使用廠商工具設定儲存陣列中主機 LUN 的權限。
     </para>
    </listitem>
    <listitem>
     <para>
      如果 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 未隨附主機匯流排介面卡 (HBA) 的驅動程式，請安裝 HBA 廠商提供的 Linux 驅動程式。如需更多詳細資料，請參閱廠商的特定指示。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    如果偵測到多重路徑裝置且已啟用 <filename>multipathd.service</filename>，系統應該會自動建立多重路徑對應。如果未自動建立，<xref linkend="sec-multipath-trouble-steps"/> 會列出一些可用於檢查該情況的外圍程序指令。如果 HBA 驅動程式無法探查到 LUN，請檢查 SAN 中的區域設定。尤其是要檢查 LUN 遮罩是否處於使用中，且 LUN 是否正確地指定給伺服器。
   </para>
   <para>
    如果 HBA 驅動程式可以探查到 LUN，但未建立相應的區塊裝置，則可能需要使用額外的核心參數。請參閱 <link xlink:href="https://www.suse.com/support/kb/doc.php?id=3955167"/> 上 SUSE 知識庫中的 <citetitle>TID
    3955167: Troubleshooting SCSI (LUN) Scanning Issues</citetitle>。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-configuration-partitioning">
   <title>多重路徑裝置上的分割區和 <command>kpartx</command></title>
   <para>
    多重路徑對應可以像其路徑裝置一樣包含分割區。分割區表掃描以及為分割區建立裝置節點的操作是由 <command>kpartx</command> 工具在使用者空間中執行的。<command>kpartx</command> 由 udev 規則自動呼叫，通常不需要手動執行。請參閱<xref linkend="sec-multipath-referring"/>獲取參考多重路徑分割區的方法。
   </para>
   <note>
    <title>禁止呼叫 <command>kpartx</command></title>
    <para>
     可以在 <filename>/etc/multipath.conf</filename> 中使用 <literal>skip_kpartx</literal> 選項來禁止對選定的多重路徑對應呼叫 <command>kpartx</command>。例如，在虛擬化主機上，這種做法可能很有用。
    </para>
   </note>
   <para>
    使用 YaST 或者 <command>fdisk</command> 或 <command>parted</command> 等工具，可以如常操作多重路徑裝置上的分割區表和分割區。當分割工具退出時，系統會記下套用於分割區表的變更。如果這種方法不起作用 (通常是因為裝置忙碌)，請嘗試執行 <command>multipathd
    reconfigure</command> 或將系統重新開機。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-initrd-sync">
   <title>將 initramfs 與系統保持同步</title>
   <important>
    <para>
     對於所有區塊裝置，是否以及如何使用多重路徑，初始 RAM 檔案系統 (initramfs) 與已開機系統的行為務必要保持一致。套用多重路徑組態變更後重建 initramfs。
    </para>
   </important>
   <para>
    如果在系統中啟用了多重路徑，那麼也需要在 <filename>initramfs</filename> 中啟用多重路徑，反之亦然。此規則的唯一例外情況是<xref linkend="sec-multipath-planning-type-noroot"/>中所述的選項 <xref linkend="vl-multipath-planning-type-noroot-noinitrd"/>。
   </para>
   <para>
    必須在已開機系統與 initramfs 之間同步多重路徑組態。因此，如果您變更 <filename>/etc/multipath.conf</filename>、<filename>/etc/multipath/wwids</filename> 和 <filename>/etc/multipath/bindings</filename> 中的任一檔案，或者其他與裝置識別相關的組態檔案或 udev 規則，請使用以下指令重建 initramfs：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dracut -f</screen>
   <para>
    如果 <filename>initramfs</filename> 與系統不同步，系統將無法正常開機，啟動程序可能會顯示緊急外圍程序。如需如何避免或修復此類情況的說明，請參閱<xref linkend="sec-multipath-trouble"/>。
   </para>
   <sect3 xml:id="sec-multipath-initrd-disable">
    <title>在 initramfs 中啟用或停用多重路徑</title>
    <para>
     如果要在非一般情況下重建 initramfs (例如，從救援系統重建，或使用核心參數 <literal>multipath=off</literal> 開機後重建)，必須格外小心。當且僅當 <command>dracut</command> 在建立 initramfs 期間偵測到根檔案系統位於多重路徑裝置上時，它才會自動在 initramfs 中包含多重路徑支援。在這種情況下，需要明確啟用或停用多重路徑。
    </para>
    <para>
     若要在 <filename>initramfs</filename> 中啟用多重路徑支援，請執行以下指令：
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dracut --force --add multipath</screen>
    <para>
     若要在 <filename>initramfs</filename> 中停用多重路徑支援，請執行以下指令：
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dracut --force --omit multipath</screen>
   </sect3>
   <sect3 xml:id="sec-multipath-initrd-persistent">
    <title>initramfs 中永久裝置的名稱</title>
    <para>
     <command>dracut</command> 產生 initramfs 時，必須參考要永久掛接的磁碟和分割區，以確保系統能夠正常開機。當 <command>dracut</command> 偵測到多重路徑裝置時，出於此目的，它預設將使用 DM-MP 裝置名稱，例如
    </para>
<screen>/dev/mapper/3600a098000aad73f00000a3f5a275dc8-part1</screen>
    <para>
     如果系統<emphasis>永遠</emphasis>以多重路徑模式執行，這樣將不會產生問題。但如果系統在不使用多重路徑的情況下啟動 (如<xref linkend="sec-multipath-initrd-disable"/>所述)，那麽使用這樣的 initramfs 開機時將會失敗，因為 <filename>/dev/mapper</filename> 裝置將不存在。請參閱<xref linkend="sec-multipath-referring"/>，瞭解其他可能的問題情境和一些背景資訊。
    </para>
    <para>
     若要防止此類情況發生，請使用 <option>--persistent-policy</option> 選項變更 <command>dracut</command> 的永久裝置命名規則。我們建議設定 <literal>by-uuid</literal> 使用規則：
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dracut --force --omit multipath --persistent-policy=by-uuid</screen>
    <para>
     另請參閱<xref linkend="pr-multipath-disable-root"/> 與<xref linkend="sec-multipath-trouble-ref"/>。
    </para>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-conf-file">
  <title>多重路徑組態</title>

  <para>
   內建的 <systemitem>multipath-tools</systemitem> 預設值適用於大多數設定。如需進行自訂，需要建立一個組態檔案。主組態檔案為 <filename>/etc/multipath.conf</filename>。此外，還需將 <filename>/etc/multipath/conf.d/</filename> 中的檔案納入考量。如需其他資訊，請參閱 <xref linkend="sec-multipath-conf-file-precedence"/>。
  </para>

  <important>
   <title>廠商建議和內建的硬體預設值</title>
   <para>
    一些儲存廠商在其文件中發佈了多重路徑選項的建議值。這些值通常代表廠商在其環境中測試後認為最適合相應儲存產品的值。請參閱<xref linkend="sec-multipath-hardware-autodetect"/>中的免責聲明。
   </para>
   <para>
    <systemitem>multipath-tools</systemitem> 內建了適用於許多儲存陣列的預設值，這些預設值均源自廠商發佈的建議。請執行 <command>multipath -T</command> 以查看裝置的目前設定，並將其與廠商的建議進行比較。
   </para>
  </important>

  <sect2 xml:id="sec-multipath-conf-file-create">
   <title>建立 <filename>/etc/multipath.conf</filename></title>
   <para>
    建議您建立只包含要變更設定的最小 <filename>/etc/multipath.conf</filename>。在很多情況下，您根本不需要建立 <filename>/etc/multipath.conf</filename>。
   </para>
   <para>
    如果您想要使用包含所有可能組態指令的組態範本，請執行：
   </para>
<screen>multipath -T &gt;/etc/multipath.conf</screen>
   <para>
    另請參閱<xref linkend="sec-multipath-best-practice-config"/>。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-syntax">
   <title><filename>multipath.conf</filename> 語法</title>
   <para>
    <filename>/etc/multipath.conf</filename> 檔案使用由區段、子區段和選項/值組合構成的階層。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      空格會將記號分隔開。多個連續的空格字元將壓縮成一個空格，除非將它們括在引號中 (參閱下文)。
     </para>
    </listitem>
    <listitem>
     <para>
      井號 (<literal>#</literal>) 和驚嘆號 (<literal>!</literal>) 字元會使系統將行中的其餘內容視為註解而予以忽略。
     </para>
    </listitem>
    <listitem>
     <para>
      區段和子區段以區段名稱和同一行中的左大括弧 (<literal>{</literal>) 開頭，以獨立一行中的右大括弧 (<literal>}</literal>) 結尾。
     </para>
    </listitem>
    <listitem>
     <para>
      選項和值撰寫在一行中。不支援行接續。
     </para>
    </listitem>
    <listitem>
     <para>
      選項和區段名稱必須是關鍵字。<systemitem>multipath.conf(5)</systemitem> 中闡述了允許的關鍵字。
     </para>
    </listitem>
    <listitem>
     <para>
      值可以用雙引號 (<literal>"</literal>) 括住。如果值包含空格或備註字元，則必須用引號將其括住。值中的雙引號字元由一組雙引號 (<literal>""</literal>) 表示。
     </para>
    </listitem>
    <listitem>
     <para>
      某些選項的值是 POSIX 規則運算式 (請參閱 <systemitem>regex(7)</systemitem>)。它們區分大小寫且位置不固定，因此，「<literal>bar</literal>」會與「<literal>rhabarber</literal>」相符，但不會與「Barbie」相符。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    以下範例展示了相應語法：
   </para>
<screen>
section {
    subsection {
        option1 value
        option2      "complex value!"
        option3    "value with ""quoted"" word"
    } ! subsection end
} # section end
    </screen>
   <sect3 xml:id="sec-multipath-conf-file-precedence">
    <title>其他組態檔案和優先順序規則</title>
    <para>
     除了 <filename>/etc/multipath.conf</filename>，工具會讀取與 <filename>/etc/multipath.conf.d/*.conf</filename> 模式相符的檔案。其他檔案遵循與 <filename>/etc/multipath.conf</filename> 相同的語法規則。區段和選項可以多次出現。如果在多個檔案中或者在同一檔案的多行中設定了<emphasis>同一個區段的同一個選項</emphasis>，則以最後一個值為準。在 <filename>multipath.conf</filename> 的各個區段之間，採用不同的優先程度規則。請參閱下文。
    </para>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-sections">
   <title><filename>multipath.conf</filename> 中的區段</title>
   <para>
    <filename>/etc/multipath.conf</filename> 檔案由下列區段構成。某些選項可以出現在多個區段中。如需詳細資料，請參閱<systemitem>multipath.conf(5)</systemitem>。
   </para>
   <variablelist>
    <varlistentry>
     <term>defaults</term>
     <listitem>
      <para>
       一般預設設定。
      </para>
      <important>
       <title>覆寫內建裝置內容</title>
       <para>
        內建的硬體特定裝置內容優先於 <literal>defaults</literal> 區段中的設定。因此，所需的變更必須在 <literal>devices</literal> 或 <literal>overrides</literal> 區段中進行。
       </para>
      </important>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>blacklist</term>
     <listitem>
      <para>
       列出要忽略的裝置。請參閱<xref linkend="sec-multipath-blacklist"/>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>blacklist_exceptions</term>
     <listitem>
      <para>
       列出要進行多重路徑處理的裝置，即使它們與黑名單相符。請參閱<xref linkend="sec-multipath-blacklist"/>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>devices</term>
     <listitem>
      <para>
       特定於儲存控制器的設定。此區段是 <literal>device</literal> 子區段的集合。此區段中的值會覆寫 <filename>defaults</filename> 區段中相同選項的值以及 <systemitem>multipath-tools</systemitem> 的內建設定。
      </para>
      <para>
       <literal>devices</literal> 區段中的 <literal>device</literal> 項目將與使用規則運算式的裝置的廠商和產品進行比對。這些項目將會「合併」，為裝置設定相符區段中的所有選項。如果在多個相符 <literal>device</literal> 區段中設定了相同的選項，則以最後一個裝置項目為準，即使它不如之前的項目那麼「符合情況」。此規則還適用於相符項目在不同組態檔案中的情況 (請參閱<xref linkend="sec-multipath-conf-file-precedence"/>)。在以下範例中，裝置 <literal>SOMECORP STORAGE</literal> 將使用 <literal>fast_io_fail_tmo 15</literal>。
      </para>
<screen>
devices {
    device {
        vendor SOMECORP
        product STOR
        fast_io_fail_tmo 10
    }
    device {
        vendor SOMECORP
        product .*
        fast_io_fail_tmo 15
    }
}</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipaths</term>
     <listitem>
      <para>
       個別多重路徑裝置的設定。此區段是 <literal>multipath</literal> 子區段的清單。值會覆寫 <literal>defaults</literal> 和 <literal>devices</literal> 區段。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>overrides</term>
     <listitem>
      <para>
       覆寫所有其他區段中的值的設定。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-apply">
   <title>套用 <filename>multipath.conf</filename> 修改</title>
   <para>
    若要套用組態變更，請執行：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipathd reconfigure</screen>
   <para>
    請不要忘記與 initramfs 中的組態同步。請參閱 <xref linkend="sec-multipath-initrd-sync"/>。
   </para>
   <warning>
    <title>不要使用 <command>multipath</command> 套用設定</title>
    <para>
     當 <command>multipath</command> 正在執行時，請不要使用 <command>multipathd</command> 指令套用新設定。否則可能導致設定不一致甚至損毀。
    </para>
   </warning>
   <note xml:id="sec-multipath-conf-file-verify">
    <title>驗證已修改的設定</title>
    <para>
     在套用已修改的設定之前，可以先執行以下指令對其進行測試：
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath -d -v2</screen>
    <para>
     此指令會顯示要使用建議的拓撲建立的新對應，但不顯示是否會移除/衝洗對應。若要獲得更多資訊，請以更高的詳細程度執行：
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath -d -v3 2&gt;&amp;1 | less</screen>
   </note>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-policies-default">
  <title>設定容錯移轉、排入佇列及容錯回復的規則</title>

  <para>
   多重路徑 I/O 的目的是在儲存系統與伺服器之間提供連接容錯。需要的預設行為視伺服器是獨立伺服器還是高可用性叢集中的節點而定。
  </para>

  <para>
   規則本節介紹用於實現容錯的最重要的 <systemitem>multipath-tools</systemitem> 組態參數。
  </para>

  <variablelist>
   <varlistentry>
    <term>polling_interval</term>
    <listitem>
     <para>
      對路徑裝置進行健康狀態檢查的時間間隔 (以秒為單位)。預設值為 5 秒。將按照此時間間隔檢查有故障的裝置。對於健康狀態良好的裝置，最多可將時間間隔增加到 <literal>max_polling_interval</literal> 秒。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>detect_checker</term>
    <listitem>
     <para>
      如果設定為 <literal>yes</literal> (預設值，建議採用)，<command>multipathd</command> 會自動偵測最佳路徑檢查演算法。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>path_checker</term>
    <listitem>
     <para>
      用於檢查路徑狀態的演算法。如果您需要啟用該檢查程式，請依照下列方式停用 <literal>detect_checker</literal>：
     </para>
<screen>
defaults {
          detect_checker no
}</screen>
     <para>
      下面僅列出了最重要的演算法。如需完整的演算法清單，請參閱 <systemitem>multipath.conf(5)</systemitem>。
     </para>
     <variablelist>
      <varlistentry>
       <term>tur</term>
       <listitem>
        <para>
         傳送 TEST UNIT READY 指令。對於支援 ALUA 的 SCSI 裝置，這是預設設定。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>directio</term>
       <listitem>
        <para>
         使用非同步 I/O (aio) 讀取裝置磁區。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>rdac</term>
       <listitem>
        <para>
         適用於 NetAPP E 系列和類似陣列的裝置特定檢查程式。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>none</term>
       <listitem>
        <para>
         不執行路徑檢查。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>checker_timeout</term>
    <listitem>
     <para>
      如果裝置在給定時間內未回應路徑檢查程式指令，則將其視為發生故障。預設值是裝置核心的 SCSI 指令逾時 (通常為 30 秒)。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>fast_io_fail_tmo</term>
    <listitem>
     <para>
      如果在 SCSI 傳輸層上偵測到錯誤 (例如在光纖通道遠端連接埠上)，核心傳輸層將在傳輸復原前等待此選項所指定的時長 (以秒計)。這段時間過後，路徑裝置將會失敗並顯示為「傳輸離線」狀態。這對多重路徑非常有用，因為它允許對經常發生的一類錯誤快速進行路徑容錯移轉。該值必須與在相應網路架構中進行重新組態所需的一般時間間隔相符。預設值 5 秒對光纖通道而言非常合適。iSCSI 等其他傳輸可能需要更長的逾時。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>dev_loss_tmo</term>
    <listitem>
     <para>
      如果 SCSI 傳輸端點 (例如光纖通道遠端連接埠) 再也無法存取，核心會在連接埠再次出現前等待此選項所指定的時長 (以秒計)，這段時間過後，核心會永久移除 SCSI 裝置節點。移除裝置節點是一項複雜的操作，容易產生競爭狀況或鎖死，因此最好避免此類操作。因此，我們建議將此選項設定為較高的值。支援特殊值 <literal>infinity</literal>。預設值為 10 分鐘。為避免鎖死狀態，<command>multipathd</command> 會確保 I/O 佇列作業 (請參閱 <literal>no_path_retry</literal>) 在 <literal>dev_loss_tmo</literal> 到期前停止。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>no_path_retry</term>
    <listitem>
     <para>
      決定當給定多重路徑對應的所有路徑都失敗時會發生什麼情況。可能的值包括：
     </para>
     <variablelist>
      <varlistentry>
       <term>fail</term>
       <listitem>
        <para>
         使多重路徑對應上的 I/O 失敗。這會導致上層 (例如掛接的檔案系統) 發生 I/O 錯誤。受影響的檔案系統 (也可能是整個主機) 將進入降級模式。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>queue</term>
       <listitem>
        <para>
         多重路徑對應上的 I/O 在裝置對應程式層中排入佇列，並在路徑裝置重新可用時傳送到裝置。這是避免遺失資料的最安全選項，但如果路徑裝置長時間不能恢復，使用該值可能會造成負面影響。從裝置讀取資料的程序將會當機並處於不中斷睡眠 (<literal>D</literal>) 狀態。排入佇列的資料會佔用記憶體，而被佔用的記憶體不可供程序使用。最終，記憶體將會耗盡。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><replaceable>N</replaceable></term>
       <listitem>
        <para>
         <replaceable>N</replaceable> 是一個正整數。使對應裝置保持佇列模式 <replaceable>N</replaceable> 個輪詢間隔。在這段時間過去後，<command>multipathd</command> 將使對應裝置失敗。如果 <literal>polling_interval</literal> 為 5 秒且 <literal>no_path_retry</literal> 為 6，則 <command>multipathd</command> 會將 I/O 排入佇列約 6 * 5 = 30 秒，然後使對應裝置上的 I/O 失敗。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>flush_on_last_del</term>
    <listitem>
     <para>
      如果設定為 <literal>yes</literal>，並且對應的所有路徑裝置均已刪除 (與只是失敗不同)，系統在移除對應前，會使對應內的所有 I/O 失敗。預設值為 <literal>no</literal>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>deferred_remove</term>
    <listitem>
     <para>
      如果設定為 <literal>yes</literal>，並且對應的所有路徑裝置均已刪除，系統會等待佔有者關閉對應裝置的檔案描述子，之後才衝洗並移除對應裝置。如果路徑在最後一個佔有者關閉對應之前重新出現，將會取消延遲移除操作。預設值為 <literal>no</literal>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="vle-failback">
    <term>failback</term>
    <listitem>
     <para>
      如果非作用中路徑群組中發生故障的路徑裝置復原，<command>multipathd</command> 會重新評估所有路徑群組的路徑群組優先程度 (請參閱<xref linkend="sec-multipath-grouping"/>)。重新評估後，優先程度最高的路徑群組有可能會成為目前非作用中的路徑群組之一。此參數決定在此狀況下將發生什麼情況。
     </para>
     <important>
      <title>遵循廠商的建議</title>
      <para>
       最佳容錯回復規則取決於儲存裝置的內容。因此，強烈建議聯絡儲存裝置廠商以確定 <option>failback</option> 設定。
      </para>
     </important>
     <variablelist>
      <varlistentry>
       <term>manual</term>
       <listitem>
        <para>
         除非管理員執行 <command>multipathd
         switchgroup</command>，否則什麼也不會發生 (請參閱<xref linkend="sec-multipath-mpiotools-multipathd"/>)。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>immediate</term>
       <listitem>
        <para>
         立即啟用優先程度最高的路徑群組。這通常可以提升效能，特別是在獨立的伺服器上，但它不應該用於陣列，因為在陣列上變更路徑群組代價很高。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>followover</term>
       <listitem>
        <para>
         與 <literal>immediate</literal> 相似，但僅在剛變為作用中狀態的路徑是其路徑群組中唯一一個健康狀態良好的路徑時，才執行容錯回復。此選項對叢集組態很有用，可以防止某個節點在另一個節點先要求了容錯移轉時自動容錯回復。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><replaceable>N</replaceable></term>
       <listitem>
        <para>
         <replaceable>N</replaceable> 是一個正整數。在啟用優先程度最高的路徑群組之前，等待 <replaceable>N</replaceable> 個輪詢間隔。如果在此期間內優先程度再次變更，則等待期重新開始。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>eh_deadline</term>
    <listitem>
     <para>
      設定一個概略值，以指定在裝置無回應，SCSI 指令逾時且無錯誤回應的情況下，處理 SCSI 錯誤所花時間的上限 (以秒計)。截止期限過後，核心將執行一次完整的 HBA 重設。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   修改 <filename>/etc/multipath.conf</filename> 檔案後，套用您的設定 (請參閱<xref linkend="sec-multipath-conf-file-apply"/>)。
  </para>

  <sect2 xml:id="sec-multipath-policies-standalone">
   <title>獨立伺服器上的排入佇列規則</title>
   <para>
    如果您為獨立伺服器設定了多重路徑 I/O，設定為 <literal>queue</literal> 值的 <literal>no_path_retry</literal> 可使伺服器作業系統在儘可能長的時間內不收到 I/O 錯誤。它會使訊息排入佇列，直至發生多重路徑容錯移轉。如果不需要「無限期」排入佇列 (見上文)，請選取一個您認為足夠高的數值，以便儲存路徑能在正常情況下復原 (見上文)。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-policies-cluster">
   <title>叢集伺服器上的排入佇列規則</title>
   <para>
    為高可用性叢集中的節點設定多重路徑 I/O 時，您希望多重路徑報告 I/O 故障以觸發資源容錯移轉，而不是等待多重路徑容錯移轉得以解決。在叢集環境中，您必須修改 <literal>no_path_retry
    </literal> 設定，以確保在與儲存系統的連接中斷時，叢集節點會收到與叢集驗證程序相關的 I/O 錯誤 (建議設為 heartbeat 容錯的 50%)。此外，您還希望將多重路徑 <literal>failback</literal> 設為 <literal>manual</literal> 或 <literal>followover</literal>，以免因路徑失敗而造成資源的乒乓效應。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-grouping">
  <title>設定路徑分組和優先程度</title>

  <para>
   多重路徑對應中的路徑裝置會歸入<emphasis>路徑群組</emphasis>，也稱為<emphasis>優先程度群組</emphasis>。任何時間只有一個路徑群組接收 I/O。<command>multipathd</command> 可向路徑群組指定<emphasis>優先程度</emphasis>。在包含作用中路徑的路徑群組中，根據為對應設定的容錯回復規則啟用優先程度最高的群組 (請參閱<xref linkend="sec-multipath-policies-default"/>)。路徑群組的優先程度是路徑群組內作用中路徑裝置優先程度的平均值。路徑裝置的優先程度是根據裝置內容計算出的整數值 (請參閱下方 <literal>prio</literal> 選項的描述)。
  </para>

  <para>
   本節介紹了與確定優先程度和進行路徑分組相關的 <filename>multipath.conf</filename> 組態參數。
  </para>

  <variablelist>
   <varlistentry>
    <term>path_grouping_policy</term>
    <listitem>
     <para>
      指定用於將路徑合併成群組的方法。此處僅列出最重要的規則；如需其他不常使用的值，請參閱 <systemitem>multipath.conf(5)</systemitem>。
     </para>
     <variablelist>
      <varlistentry>
       <term>failover</term>
       <listitem>
        <para>
         每個路徑群組一個路徑。對於傳統的「主動/被動」儲存陣列，此設定很有用。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>multibus</term>
       <listitem>
        <para>
         一個路徑群組中的所有路徑。對於傳統的「主動/主動」陣列，此設定很有用。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>group_by_prio</term>
       <listitem>
        <para>
         將路徑優先程度相同的路徑裝置分為一個群組。對於支援非對稱存取狀態 (例如 ALUA) 的新式陣列，此選項很有用。<command>multipathd</command> 設定的優先程度群組與 <literal>alua</literal> 或 <literal>sysfs</literal> 優先程度演算法結合使用時，將與儲存陣列透過 ALUA 相關 SCSI 指令報告的主要目標連接埠組相符。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
     <para>
      使用相同的規則名稱時，可以透過以下指令臨時變更多重路徑對應的路徑分組規則：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath -p <replaceable>POLICY_NAME</replaceable> <replaceable>MAP_NAME</replaceable></screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>marginal_pathgroups</term>
    <listitem>
     <para>
      如果設定為 <literal>on</literal> 或 <literal>fpin</literal>，「臨界」路徑裝置儲存在單獨的路徑群組中。這與所使用的路徑分組演算法無關。請參閱 <xref linkend="sec-multipath-marginal"/>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>detect_prio</term>
    <listitem>
     <para>
      如果設定為 <literal>yes</literal> (預設值，建議採用)，<command>multipathd</command> 會自動偵測用於為儲存裝置設定優先程度的最佳演算法，並會忽略 <literal>prio</literal> 設定。在實際情況中，這表示在偵測到 ALUA 支援時使用 <literal>sysfs</literal> 優先程度演算法。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>prio</term>
    <listitem>
     <para>
      確定獲取路徑裝置優先程度的方法。如果您覆寫此設定，請依照下列方式停用 <literal>detect_prio</literal>：
     </para>
<screen>
defaults {
          detect_prio no
}
        </screen>
     <para>
      下面僅列出了最重要的方法。系統還提供了其他幾種方法，主要用於支援舊版硬體。如需完整的清單，請參閱 <systemitem>multipath.conf(5)</systemitem>。
     </para>
     <variablelist>
      <varlistentry>
       <term>alua</term>
       <listitem>
        <para>
         使用 SCSI-3 ALUA 存取狀態獲取路徑優先程度值。選擇性 <literal>exclusive_pref_bit</literal> 引數可用於變更設定了 ALUA「偏好主要目標連接埠群組」(PREF) 位元的裝置的行為：
        </para>
<screen>
        prio alua
        prio_args exclusive_pref_bit
              </screen>
        <para>
         如果設定了此選項，「偏好」路徑將獲得優先於其他作用中/最佳化路徑的優先程度。否則，將會為所有作用中/最佳化路徑指定相同的優先程度。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>sysfs</term>
       <listitem>
        <para>
         與 <literal>alua</literal> 類似，但它不向裝置傳送 SCSI 指令，而是從 <systemitem>sysfs</systemitem> 獲取存取狀態。這會使 I/O 負載比 <literal>alua</literal> 要少，但並不適用於所有支援 ALUA 的儲存陣列。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>const</term>
       <listitem>
        <para>
         對所有路徑使用常數值。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>path_latency</term>
       <listitem>
        <para>
         測量路徑裝置上的 I/O 延遲 (從 I/O 提交到完成所花的時間)，並為低延遲裝置指定較高的優先程度。如需詳細資料，請參閱<systemitem>multipath.conf(5)</systemitem>。該演算法仍處於實驗階段。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>weightedpath</term>
       <listitem>
        <para>
         根據名稱、序號、Host:Bus:Target:Lun ID (HBTL) 或光纖通道 WWN 為路徑指定優先程度。優先程度值不會隨時間變更。該方法需要 <literal>prio_args</literal> 引數，如需詳細資料，請參閱 <systemitem>multipath.conf(5)</systemitem>。例如：
        </para>
<screen>
        prio weightedpath
        prio_args "hbtl 2:.*:.*:.* 10 hbtl 3:.*:.*:.* 20 hbtl .* 1"
              </screen>
        <para>
         這會為 SCSI 主機 3 上的裝置指定比 SCSI 主機 2 上的裝置更高的優先程度，並為所有其他裝置指定較低的優先程度。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>prio_args</term>
    <listitem>
     <para>
      一些 <literal>prio</literal> 演算法需要額外的引數。這些引數在此選項中指定，其語法取決於演算法。參見上文內容。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>hardware_handler</term>
    <listitem>
     <para>
      核心在切換路徑群組時用來啟用路徑裝置的核心模組名稱。此選項對最新的核心沒有影響，因為系統會自動偵測硬體處理器。請參閱 <xref linkend="sec-multipath-hardware-handlers"/>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>path_selector</term>
    <listitem>
     <para>
      用於在作用中路徑群組的路徑之間平衡負載的核心模組名稱。可用的選項取決於核心組態。由於歷史原因，在 <filename>multipath.conf</filename> 中，名稱必須一律用引號括住並後接一個「0」，如下所示：
     </para>
<screen>    path_selector "queue-length 0"</screen>
     <variablelist>
      <varlistentry>
       <term>service-time</term>
       <listitem>
        <para>
         估算在所有路徑上完成待處理 I/O 所需的時間，並選取值最低的路徑。此為預設選項。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>historical-service-time</term>
       <listitem>
        <para>
         根據歷程服務時間 (系統保留的不斷變更的平均值) 和未完成要求的數量估算未來的服務時間。估算在所有路徑上完成待處理 I/O 所需的時間，並選取值最低的路徑。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>queue-length</term>
       <listitem>
        <para>
         選取目前待處理 I/O 要求數量最少的路徑。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>round-robin</term>
       <listitem>
        <para>
         採用輪替方式切換路徑。可以使用選項 <literal>rr_min_io_rq</literal> 和 <literal>rr_weight</literal> 調整在切換到下一個路徑之前提交到目前路徑的要求數量。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>io-affinity</term>
       <listitem>
        <para>
         此路徑選擇器目前不適用於 <systemitem>multipath-tools</systemitem>。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   修改 <filename>/etc/multipath.conf</filename> 檔案後，套用您的設定 (請參閱<xref linkend="sec-multipath-conf-file-apply"/>)。
  </para>
 </sect1>
 <sect1 xml:id="sec-multipath-select-devices">
  <title>選取要用於多重路徑的裝置</title>

  <para>
   在配有多重路徑裝置的系統上，您可能希望避免在某些裝置 (通常是本地磁碟) 上設定多重路徑對應。<systemitem>multipath-tools</systemitem> 提供了多種方法來設定應視為多重路徑裝置的裝置。
  </para>

  <note>
   <title>本地磁碟上的多重路徑</title>
   <para>
    一般而言，如果在本地磁碟的基礎上僅使用單部裝置設定「降級」多重路徑對應，將不會出現問題。系統可正常運作，且不需要進行額外的組態。然而，一些管理員認為這會造成混亂，或者普遍反對這種不必要的多重路徑。另外，多重路徑層也會造成輕微的效能負擔。另請參閱<xref linkend="sec-multipath-planning-type-noroot"/>。
   </para>
  </note>

  <para>
   修改 <filename>/etc/multipath.conf</filename> 檔案後，套用您的設定 (請參閱<xref linkend="sec-multipath-conf-file-apply"/>)。
  </para>

  <sect2 xml:id="sec-multipath-blacklist">
   <title><filename>multipath.conf</filename> 中的 <literal>blacklist</literal> 區段</title>
   <para>
    <filename>/etc/multipath.conf</filename> 檔案可能包含 <literal>blacklist</literal> 區段，其中會列出 <command>multipathd</command> 和 <command>multipath</command> 應該忽略的所有裝置。以下範例展示了可用於排除裝置的方法：
   </para>
   <informalexample>
<screen>blacklist {
    wwid 3600605b009e7ed501f0e45370aaeb77f <co xml:id="mp-co-bl-wwid"/>
    device {  <co xml:id="mp-co-bl-device"/>
        vendor ATA
        product .*
    }
    protocol scsi:sas <co xml:id="mp-co-bl-prot"/>
    property SCSI_IDENT_LUN_T10 <co xml:id="mp-co-bl-prop"/>
    devnode "!^dasd[a-z]*" <co xml:id="mp-co-bl-devnode"/>
}</screen>
    <calloutlist>
     <callout arearefs="mp-co-bl-wwid">
      <para>
       <literal>wwid</literal> 項目適合用於排除特定裝置，例如根磁碟。
      </para>
     </callout>
     <callout arearefs="mp-co-bl-device">
      <para>
       此 <literal>device</literal> 區段排除了所有 ATA 裝置 (<literal>product</literal> 的規則運算式與任何內容都會相符)。
      </para>
     </callout>
     <callout arearefs="mp-co-bl-prot">
      <para>
       透過 <literal>protocol</literal> 排除，可以排除使用特定匯流排類型 (此處為 SAS) 的裝置。其他常用的通訊協定值為 <literal>scsi:fcp</literal>、<literal>scsi:iscsi</literal> 和 <literal>ccw</literal>。如需更多資訊，請參閱 <systemitem>multipath.conf(5)</systemitem>。若要查看系統中的路徑正在使用的通訊協定，請執行以下指令：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipathd show paths format "%d %P"</screen>
      <para>
       從 <phrase role="productname"><phrase os="sles">SLES</phrase></phrase> 15 SP1 和 <phrase role="productname"><phrase os="sles">SLES</phrase></phrase> 12 SP5 開始支援此格式。
      </para>
     </callout>
     <callout arearefs="mp-co-bl-prop">
      <para>
       這一 <literal>property</literal> 項目會排除具有特定 udev 內容的裝置 (無論該內容的值是什麼)。
      </para>
     </callout>
     <callout arearefs="mp-co-bl-devnode">
      <para>
       建議僅對使用規則運算式的裝置類別採用透過 <literal>devnode</literal> 排除裝置的方法，如此範例中所示，它排除了除 DASD 裝置之外的所有裝置。不建議對個別裝置 (如 <filename>sda</filename>) 使用此方法，因為裝置節點名稱不是永久的。
      </para>
      <para>
       該範例展示了僅在 <literal>blacklist</literal> 和 <literal>blacklist_exceptions</literal> 區段中支援的特殊語法：在規則運算式前加上驚嘆號 (<literal>!</literal>) 會否定該比對。請注意，驚嘆號必須位於雙引號內。
      </para>
     </callout>
    </calloutlist>
   </informalexample>
   <para>
    依預設，<systemitem>multipath-tools</systemitem> 會忽略除 SCSI、DASD 或 NVMe 以外的所有裝置。從技術上講，內建的 devnode 排除清單就是下面這個否定的規則運算式：
   </para>
<screen>    devnode !^(sd[a-z]|dasd[a-z]|nvme[0-9])</screen>
  </sect2>

  <sect2 xml:id="sec-multipath-blacklist-exceptions">
   <title><filename>multipath.conf</filename> 中的 <literal>blacklist exceptions</literal> 區段</title>
   <para>
    有時，需要僅將非常具體的裝置設定為用於多重路徑。在這種情況下，需預設排除裝置，並將應成為多重路徑對應一部分的裝置定義為例外。<literal>blacklist_exceptions</literal> 區段就用於實現此目的。該區段的一般用法如下方範例所示，該範例排除了所有儲存裝置，產品字串為「NETAPP」的儲存裝置除外：
   </para>
<screen>blacklist {
     wwid .*
}
blacklist_exceptions {
     device {
         vendor ^NETAPP$
         product .*
     }
}</screen>
   <para>
    <literal>blacklist_exceptions</literal> 區段支援上文所述適用於 <literal>blacklist</literal> 區段的所有方法。
   </para>
   <para>
    <literal>blacklist_exceptions</literal> 中的 <literal>property</literal> 指令是強制性的，因為每部裝置<emphasis>必須</emphasis>至少具有一個「允許的」udev 內容，才能視為多重路徑的路徑裝置 (內容的值無關緊要)。<literal>property</literal> 的內建預設值為
   </para>
<screen>    property (SCSI_IDENT_|ID_WWN)</screen>
   <para>
    系統只會包含至少具有一個與此規則運算式相符的 udev 內容的裝置。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-device-select-other">
   <title>影響選取裝置的其他選項</title>
   <para>
    除了 <literal>blacklist</literal> 選項外，<filename>/etc/multipath.conf</filename> 中的數個其他設定也會影響哪些裝置可視為多重路徑裝置。
   </para>
   <variablelist>
    <varlistentry>
     <term>find_multipaths</term>
     <listitem>
      <para>
       此選項控制首次遇到未排除的裝置時 <command>multipath</command> 和 <command>multipathd</command> 的行為。可能的值包括：
      </para>
      <variablelist>
       <varlistentry>
        <term>greedy</term>
        <listitem>
         <para>
          將 <filename>/etc/multipath.conf</filename> 中的 <literal>blacklist</literal> 未排除的所有裝置視為多重路徑裝置。這是 SUSE Linux Enterprise 的預設設定。如果此設定處於作用中狀態，則防止將裝置新增至多重路徑對應的唯一方法是將它們設定為排除。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>strict</term>
        <listitem>
         <para>
          排除所有裝置，即使它不在 <filename>/etc/multipath.conf</filename> 的 <literal>blacklist</literal> 區段中，除非裝置的 WWID 列於 <filename>/etc/multipath/wwids</filename> 檔案中。使用者需要手動維護 WWID 檔案 (請參閱下面的備註)。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>yes</term>
        <listitem>
         <para>
          如果裝置符合 <literal>strict</literal> 的條件，或者系統中至少存在一個擁有相同 WWID 的其他裝置，則會將裝置視為多重路徑裝置。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>smart</term>
        <listitem>
         <para>
          首次遇到新的 WWID 時，會暫時將其標示為多重路徑裝置。<command>multipathd</command> 會等待一段時間，看看是否會有擁有相同 WWID 的其他路徑出現。如果這類路徑出現，則會如常設定多重路徑對應。如果沒有出現，當超過逾時時間後，這部裝置就會做為非多重路徑裝置釋放到系統中。使用選項 <option>find_multipaths_timeout</option> 可設定該逾時。
         </para>
         <para>
          此選項相依於 <command>systemd</command> 功能，這些功能僅在 SUSE Linux Enterprise Server 15 上提供。
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
      <note>
       <title>維護 <filename>/etc/multipath/wwids</filename></title>
       <para>
        <systemitem>multipath-tools</systemitem> 會在 <filename>/etc/multipath/wwids</filename> 檔案 (「WWID 檔案」) 中保留之前所設定多重路徑對應的記錄。WWID 列於此檔案中的裝置會視為多重路徑裝置。根據 <option>find_multipaths</option> 的任何值 (<literal>greedy</literal> 除外) 選取多重路徑裝置時，該檔案都必不可少。
       </para>
       <para>
        如果 <option>find_multipaths</option> 設定為 <literal>yes</literal> 或 <literal>smart</literal>，<command>multipathd</command> 會在設定新對應後新增 WWID 至 <filename>/etc/multipath/wwids</filename>，以便日後能夠更快地偵測到這些對應。
       </para>
       <para>
        可以手動修改 WWID 檔案：
       </para>
       <informalexample>
<screen>
<prompt>&gt; </prompt><command>sudo</command> multipath -a 3600a098000aad1e3000064e45f2c2355 <co xml:id="mp-co-wwid-a"/>
<prompt>&gt; </prompt><command>sudo</command> multipath -w /dev/sdf <co xml:id="mp-co-wwid-w"/>
       </screen>
        <calloutlist>
         <callout arearefs="mp-co-wwid-a">
          <para>
           此指令會將給定 WWID 新增至 <filename>/etc/multipath/wwids</filename>。
          </para>
         </callout>
         <callout arearefs="mp-co-wwid-w">
          <para>
           此指令會移除給定裝置的 WWID。
          </para>
         </callout>
        </calloutlist>
       </informalexample>
       <para>
        在 <literal>strict</literal> 模式下，這是新增新多重路徑裝置的唯一方法。修改 WWID 檔案後，執行 <command>multipathd reconfigure</command> 以套用變更。我們建議在套用對 WWID 檔案的變更後重建 initramfs (請參閱<xref linkend="sec-multipath-initrd-sync"/>)。
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>allow_usb_devices</term>
     <listitem>
      <para>
       如果此選項設定為 <literal>yes</literal>，則會考慮將 USB 儲存裝置用於多重路徑。預設值為 <literal>no</literal>。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-names">
  <title>多重路徑裝置名稱和 WWID</title>

  <para>
   <command>multipathd</command> 和 <command>multipath</command> 會在內部使用 WWID 來識別裝置。WWID 還會用做預設的對應名稱。為了方便起見，<systemitem>multipath-tools</systemitem> 支援為多重路徑裝置指定更簡單、更容易記住的名稱。
  </para>

  <sect2 xml:id="sec-multipath-conf-file-wwid">
   <title>WWID 和裝置識別</title>
   <para>
    多重路徑操作必須能夠可靠地偵測代表同一儲存磁碟區各個路徑的裝置。為實現此目的，<systemitem>multipath-tools</systemitem> 使用了裝置的全球通用識別碼 (WWID) (有時也稱為通用唯一 ID (UUID) 或唯一 ID (UID — 請勿與「使用者 ID」混淆))。對應裝置的 WWID 一律與其路徑裝置的 WWID 相同。
   </para>
   <para>
    依預設，系統會從 sysfs 檔案系統讀取裝置屬性，或使用特定的 I/O 指令，來根據裝置 udev 內容 (在 udev 規則中確定) 推斷路徑裝置的 WWID。若要查看裝置的 udev 內容，請執行以下指令：
   </para>
<screen><prompt>&gt; </prompt>udevadm info /dev/<replaceable>sdx</replaceable></screen>
   <para>
    <systemitem>multipath-tools</systemitem> 用於衍生 WWID 的 udev 內容如下：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      對於 SCSI 裝置，使用 <literal>ID_SERIAL</literal> (請勿將此內容與裝置的「序號」混淆)
     </para>
    </listitem>
    <listitem>
     <para>
      對於 DASD 裝置，使用 <literal>ID_UID</literal>
     </para>
    </listitem>
    <listitem>
     <para>
      對於 NVMe 裝置，使用 <literal>ID_WWN</literal>
     </para>
    </listitem>
   </itemizedlist>
   <warning>
    <title>避免變更 WWID</title>
    <para>
     無法變更使用中多重路徑對應的 WWID。如果已對應路徑裝置的 WWID 因組態變更而變更，則需要刪除該對應，並使用新的 WWID 設定新對應。如果舊對應正在使用中，則無法執行此操作。在極端情況下，WWID 變更可能會導致資料損毀。因此，必須<emphasis>嚴格避免</emphasis>套用會導致對應 WWID 變更的組態變更。
    </para>
    <para>
     在 <filename>/etc/multipath.conf</filename> 中啟用 <literal>uid_attrs</literal> 選項可以實現此目的，請參閱<xref linkend="sec-multipath-conf-misc"/>。
    </para>
   </warning>
  </sect2>

  <sect2 xml:id="sec-multipath-alias">
   <title>為多重路徑對應設定別名</title>
   <para>
    可以在 <filename>/etc/multipath.conf</filename> 的 <literal>multipaths</literal> 區段中設定任意對應名稱，如下所示：
   </para>
<screen>multipaths {
    multipath {
        wwid 3600a098000aad1e3000064e45f2c2355
        alias postgres
    }
}</screen>
   <para>
    別名較為易懂，但需要個別將它們指定給每個對應，這在大型系統上可能很麻煩。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-user-friendly-names">
   <title>使用自動產生的使用者易記名稱</title>
   <para>
    <systemitem>multipath-tools</systemitem> 還支援自動產生的別名，即所謂的「使用者易記名稱」。別名的命名方案遵循以下模式：mpath<replaceable>INDEX</replaceable>，其中 <replaceable>INDEX</replaceable> 為小寫字母 (以 <literal>a</literal> 開頭)。因此，首個自動產生的別名為 <literal>mpatha</literal>，下一個別名為 <literal>mpathb</literal>、然後是 <literal>mpathc</literal>，直至 <literal>mpathz</literal>。之後是 <literal>mpathaa</literal>、<literal>mpathab</literal> 等，依此類推。
   </para>
   <para>
    對應名稱只有在永久存在時才有用。<systemitem>multipath-tools</systemitem> 會在 <filename>/etc/multipath/bindings</filename> 檔案 (「bindings 檔案」) 中記錄指定的名稱。建立新對應時，首先會在此檔案中尋找 WWID。如果未找到，則會為對應指定可用性最低的使用者易記名稱。
   </para>
   <para>
    <xref linkend="sec-multipath-alias"/>中所述的明確別名優先於使用者易記名稱。
   </para>
   <para>
    <filename>/etc/multipath.conf</filename> 中的以下選項會影響使用者易記名稱：
   </para>
   <variablelist>
    <varlistentry>
     <term>user_friendly_names</term>
     <listitem>
      <para>
       如果設定為 <literal>yes</literal>，則會指定並使用使用者易記名稱。否則，將使用 WWID 做為對應名稱，除非設定了別名。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>alias_prefix</term>
     <listitem>
      <para>
       用於建立使用者易記名稱的字首，預設為 <literal>mpath</literal>。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <warning>
    <title>高可用性叢集中的對應名稱</title>
    <para>
     對於叢集操作，裝置名稱必須在叢集的所有節點間都相同。<systemitem>multipath-tools</systemitem> 組態必須在節點之間保持同步。如果使用 <literal>user_friendly_names</literal>，<command>multipathd</command> 可以在執行時期修改 <filename>/etc/multipath/bindings</filename> 檔案。此類修改必須動態複製到所有節點。這同樣適用於 <filename>/etc/multipath/wwids</filename> (請參閱<xref linkend="sec-multipath-device-select-other"/>)。
    </para>
   </warning>
   <note>
    <title>在執行時期變更對應名稱</title>
    <para>
     可以在執行時期變更對應名稱。使用本節中所述的任何方法以及執行 <command>multipathd
     reconfigure</command>，均可變更對應名稱，而不會造成系統作業中斷。
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-referring">
   <title>參考多重路徑對應</title>
   <para>
    從技術上講，多重路徑對應是裝置對應程式裝置，其名稱一般採用 <filename>/dev/dm-<replaceable>n</replaceable></filename> 格式，其中 <replaceable>n</replaceable> 為整數。這些名稱不是永久存在的。<emphasis>切勿</emphasis>使用它們來參考多重路徑對應。<command>udev</command> 會建立指向這些裝置的各種符號連結，這些連結更適合做為永久參考。這些連結的不同之處在於它們不會隨特定組態的變更而變化。下面的一般範例展示了所有指向同一裝置的各種符號連結。
   </para>
   <informalexample>
<screen>/dev/disk/by-id/dm-name-mpathb<co xml:id="mp-ref-dm-name"/> -&gt; ../../dm-1
/dev/disk/by-id/dm-uuid-mpath-3600a098000aad73f00000a3f5a275dc8<co xml:id="mp-ref-dm-uuid"/> -&gt; ../../dm-1
/dev/disk/by-id/scsi-3600a098000aad73f00000a3f5a275dc8<co xml:id="mp-ref-scsi"/> -&gt; ../../dm-1
/dev/disk/by-id/wwn-0x600a098000aad73f00000a3f5a275dc8<co xml:id="mp-ref-wwn"/> -&gt; ../../dm-1
/dev/mapper/mpathb<co xml:id="mp-ref-mapper"/> -&gt; ../dm-1</screen>
    <calloutlist>
     <callout arearefs="mp-ref-dm-name mp-ref-mapper">
      <para>
       這兩個連結使用對應名稱來參考對應。因此，如果對應名稱變更 (例如，如果您啟用或停用使用者易記名稱)，連結也會變更。
      </para>
     </callout>
     <callout arearefs="mp-ref-dm-uuid">
      <para>
       此連結使用裝置對應程式 UUID，即 <systemitem>multipath-tools</systemitem> 使用的 WWID 並在前面加上字串 <literal>dm-uuid-mpath-</literal>。它與對應名稱無關。
      </para>
      <para>
       若要確保<emphasis>僅參考多重路徑裝置</emphasis>，最好採用裝置對應程式 UUID。例如，<filename>/etc/lvm/lvm.conf</filename> 中的以下一行會拒絕除多重路徑對應之外的所有裝置：
      </para>
<screen>filter = [ "a|/dev/disk/by-id/dm-uuid-mpath-.*|", "r|.*|" ]</screen>
     </callout>
     <callout arearefs="mp-ref-scsi mp-ref-wwn">
      <para>
       這些連結通常指向路徑裝置。多重路徑裝置會取代這些連結，因為該裝置具有更高的 udev 連結優先程度 (請參閱 <systemitem>udev(7)</systemitem>)。對應刪除或多重路徑關閉時，它們仍然存在，並改為指向路徑裝置之一。這提供了一種透過 WWID 參考裝置的方法，無論多重路徑是否處於作用中狀態。
      </para>
     </callout>
    </calloutlist>
   </informalexample>
   <para>
    對於 <command>kpartx</command> 工具建立的多重路徑對應上的<emphasis role="bold">分割區</emphasis>，存在類似的符號連結，它們源自父裝置名稱或 WWID 和分割區編號：
   </para>
   <informalexample>
<screen>/dev/disk/by-id/dm-name-mpatha-part2 -&gt; ../../dm-5
/dev/disk/by-id/dm-uuid-part2-mpath-3600a098000aad1e300000b4b5a275d45 -&gt; ../../dm-5
/dev/disk/by-id/scsi-3600a098000aad1e300000b4b5a275d45-part2 -&gt; ../../dm-5
/dev/disk/by-id/wwn-0x600a098000aad1e300000b4b5a275d45-part2 -&gt; ../../dm-5
/dev/disk/by-partuuid/1c2f70e0-fb91-49f5-8260-38eacaf7992b -&gt; ../../dm-5
/dev/disk/by-uuid/f67c49e9-3cf2-4bb7-8991-63568cb840a4 -&gt; ../../dm-5
/dev/mapper/mpatha-part2 -&gt; ../dm-5
</screen>
   </informalexample>
   <para>
    請注意，分割區通常也有 <filename>by-uuid</filename> 連結，該連結不參考裝置自身，而是參考裝置包含的檔案系統。一般最好使用這些連結。即使將檔案系統複製到不同的裝置或分割區，這些連接也不會變更。
   </para>
   <warning>
    <title>initramfs 中的對應名稱</title>
    <para>
     當 <command>dracut</command> 建構 initramfs 時，會在 initramfs 中建立裝置的硬式編碼參考，並預設使用 <filename>/dev/mapper/$MAP_NAME</filename> 參考。如果 initramfs 中使用的對應名稱與建構 initramfs 時使用的名稱不符，在開機期間將找不到這些硬式編碼參考，導致開機失敗。這種情況通常不會發生，因為 <command>dracut</command> 會將所有多重路徑組態檔案新增至 initramfs 中。但如果 initramfs 是從不同的環境 (例如，在救援系統中或在離線更新期間) 建構的，就會出現問題。為防止這類開機失敗，請變更 <command>dracut</command> 的 <literal>persistent_policy</literal> 設定 (如<xref linkend="sec-multipath-initrd-persistent"/>所述)。
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-conf-misc">
  <title>其他選項</title>

  <para>
   本節列出了一些到目前為止尚未提及的有用 <filename>multipath.conf</filename> 選項。如需完整清單，請參閱 <systemitem>multipath.conf(5)</systemitem>。
  </para>

  <variablelist>
   <varlistentry>
    <term>verbosity</term>
    <listitem>
     <para>
      控制 <command>multipath</command> 和 <command>multipathd</command> 的記錄詳細程度。指令列選項 <option>-v</option> 可覆寫這兩個指令的此設定。值可以介於 0 (僅限致命錯誤) 到 4 (詳細記錄) 之間。預設值為 2。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>uid_attrs</term>
    <listitem>
     <para>
      此選項可實現 udev 事件處理最佳化，即所謂的「uevent 合併」。它在數百個路徑裝置可能同時發生故障或重新出現的環境中非常有用。為了確保路徑 WWID 不會變更 (請參閱<xref linkend="sec-multipath-conf-file-wwid"/>)，值應該完全依照下方所示設定：
     </para>
<screen>defaults {
     uid_attrs "sd:ID_SERIAL dasd:ID_UID nvme:ID_WWN"
}</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>skip_kpartx</term>
    <listitem>
     <para>
      如果針對多重路徑裝置設定為 <literal>yes</literal> (預設為 <literal>no</literal>)，請勿在給定裝置的基礎上建立分割區裝置 (請參閱<xref linkend="sec-multipath-configuration-partitioning"/>)。可以用於虛擬機器使用的多重路徑裝置。先前的 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 版本使用參數「<literal>features 1 no_partitions</literal>」來實現同樣的效果。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>max_sectors_kb</term>
    <listitem>
     <para>
      限制在多重路徑對應的所有路徑裝置的單個 I/O 要求中傳送的最大資料量。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ghost_delay</term>
    <listitem>
     <para>
      在主動/被動陣列上，可能會發生被動路徑 (處於「ghost」狀態) 先於主動路徑查探到的情況。如果立即啟用對應並傳送 I/O，可能會導致花費很大代價才能啟用路徑。此參數指定在啟用對應之前等待對應的主動路徑出現的時間 (以秒計)。預設值為 <literal>no</literal> (不進行 ghost 延遲)。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>recheck_wwid</term>
    <listitem>
     <para>
      如果設定為 <literal>yes</literal> (預設為 <literal>no</literal>)，則會在失敗後再次檢查已還原路徑的 WWID，並移除已變更的 WWID。這是防止資料損毀的安全措施。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>enable_foreign</term>
    <listitem>
     <para>
      <systemitem>multipath-tools</systemitem> 為除裝置對應程式多重路徑之外的其他多重路徑後端提供外掛程式 API。API 支援使用 <command>multipath -ll</command> 等標準指令來監控和顯示有關多重路徑拓撲的資訊。不支援修改拓撲。
     </para>
     <para>
      <literal>enable_foreign</literal> 的值是用於比對外部程式庫名稱的規則運算式。預設值為“<literal>NONE</literal>”。
     </para>
     <para>
      <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 隨附 <literal>nvme</literal> 外掛程式，新增了原生 NVMe 多重路徑支援 (請參閱<xref linkend="sec-multipath-hardware-implementations"/>)。若要啟用 <literal>nvme</literal> 外掛程式，請設定
     </para>
<screen>defaults {
    enable_foreign nvme
}</screen>
    </listitem>
   </varlistentry>
  </variablelist>

  <sect2 xml:id="sec-multipath-marginal">
   <title>處理不可靠 (「臨界」) 的路徑裝置</title>
   <para>
    架構中的不穩定狀況可能會導致路徑裝置行為不正常。它們頻繁出現 I/O 錯誤、復原然後再次失敗。此類路徑裝置也稱為「臨界」或「不穩定」路徑。本節概述了 <systemitem>multipath-tools</systemitem> 提供的一些可解決此問題的選項。
   </para>
   <note>
    <title>multipathd 的臨界路徑檢查演算法</title>
    <para>
     如果首次失敗後尚未過去 <literal>marginal_path_double_failed_time</literal>，路徑裝置便出現第二次失敗 (從良好轉變為不佳)，<command>multipathd</command> 會開始以每秒 10 次要求的速率監控該路徑，監控期為 <literal>marginal_path_err_sample_time</literal>。如果在監控期內錯誤率超過 <literal>marginal_path_err_rate_threshold</literal>，則會將該路徑歸類為臨界路徑。<literal>marginal_path_err_recheck_gap_time</literal> 過後，該路徑會再次轉變為正常狀態。
    </para>
    <para>
     如果所有四個 <literal>marginal_path_</literal> 數值參數均設定為正值，並且 <literal>marginal_pathgroups</literal> 未設定為 <literal>fpin</literal>，系統便會使用此演算法。從 SUSE Linux Enterprise Server 15 SP1 和 SUSE Linux Enterprise Server 12 SP5 開始，可以使用此演算法。
    </para>
   </note>
   <variablelist>
    <varlistentry>
     <term>marginal_path_double_failed_time</term>
     <listitem>
      <para>
       觸發路徑監控的兩次路徑失敗相隔的最長時間 (以秒計)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>marginal_path_err_sample_time</term>
     <listitem>
      <para>
       路徑監控間隔的時長 (以秒計)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>marginal_path_err_rate_threshold</term>
     <listitem>
      <para>
       最小錯誤率 (每千次 I/O)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>marginal_path_err_recheck_gap_time</term>
     <listitem>
      <para>
       使路徑保持為臨界狀態的時間 (以秒計)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>marginal_pathgroups</term>
     <listitem>
      <para>
       此選項從 <phrase role="productname"><phrase os="sles">SLES</phrase></phrase> 15SP3 開始可用。可能的值：
      </para>
      <variablelist>
       <varlistentry>
        <term>off</term>
        <listitem>
         <para>
          臨界狀態由 <command>multipathd</command> 確定 (見上文)。只要臨界路徑仍處於臨界狀態，就不會恢復這些路徑。這是 SP3 之前的 SUSE Linux Enterprise Server 版本的預設值和行為，在這些版本中，<literal>marginal_pathgroups</literal> 選項不可用。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>on</term>
        <listitem>
         <para>
          與 <literal>off</literal> 選項類似，但不是將它們保持在失敗狀態，而是將臨界路徑移至單獨的路徑群組，為該路徑群組指定的優先程度將低於所有其他路徑群組 (請參閱<xref linkend="sec-multipath-grouping"/>)。僅當其他路徑群組中的所有路徑都失敗時，才會將此路徑群組中的路徑用於 I/O。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>fpin</term>
        <listitem>
         <para>
          此設定從 <phrase role="productname"><phrase os="sles">SLES</phrase></phrase> 15SP4 開始可用。臨界路徑狀態源自 FPIN 事件 (見下文)。臨界路徑會移至單獨的路徑群組中，具體請參閱 <literal>off</literal> 的相關內容。此設定不需要在主機端進行其他組態。建議使用這種方法來處理支援 FPIN 的光纖通道結構上的臨界路徑。
         </para>
         <note>
          <title>基於 FPIN 的臨界路徑偵測</title>
          <para>
           <command>multipathd</command> 可監聽光纖通道效能影響通知 (FPIN)。如果接收到某個路徑裝置的 FPIN-LI (連結完整性) 事件，該路徑便會進入臨界狀態。此狀態將一直持續，直至在連接該裝置的光纖通道介面卡上接收到 RSCN 或連結啟動事件。
          </para>
         </note>
        </listitem>
       </varlistentry>
      </variablelist>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    您也可以使用一種更簡單的演算法，該演算法使用參數 <literal>san_path_err_threshold</literal>、<literal>san_path_err_forget_rate</literal> 和 <literal>san_path_err_recovery time</literal>。建議對 SUSE Linux Enterprise Server 15 (GA) 採用此演算法。請參閱 <systemitem>multipath.conf(5)</systemitem> 中的「不穩定路徑偵測」部分。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-best-practice">
  <title>最佳實務</title>

  <sect2 xml:id="sec-multipath-best-practice-config">
   <title>有關組態的最佳實務</title>
   <para>
    大量的組態指令一開始會令人望而生畏。通常，使用空組態便能獲得較好的結果，除非您處於叢集環境中。
   </para>
   <para>
    下面是一些針對獨立伺服器的一般建議。它們<emphasis>並非強制性</emphasis>要求。如需背景資訊，請參閱前面小節中各參數的相關描述。
   </para>
<screen>
defaults {
    deferred_remove      yes
    find_multipaths      smart
    enable_foreign       nvme
    marginal_pathgroups  fpin    # 15.4 only, if supported by fabric
}
devices {
    # A catch-all device entry.
    device {
        vendor                .*
        product               .*
        dev_loss_tmo          infinity
        no_path_retry         60            # 5 minutes
        path_grouping_policy  group_by_prio
        path_selector         "historical-service-time 0"
        reservation_key       file          # if using SCSI persistent reservations
    }
    # Follow up with specific device entries below, they will take precedence.
}</screen>
   <para>
    修改 <filename>/etc/multipath.conf</filename> 檔案後，套用您的設定 (請參閱<xref linkend="sec-multipath-conf-file-apply"/>)。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-status">
   <title>解讀多重路徑 I/O 狀態</title>
   <para>
    若要快速瞭解多重路徑子系統，請使用 <command>multipath
    -ll</command> 或 <command>multipathd show topology</command>。這些指令的輸出具有相同格式。前一個指令讀取核心狀態，而後一個指令列印多重路徑精靈的狀態。兩個狀態通常是相同的。下面是一個輸出範例：
   </para>
   <informalexample>
<screen><prompt>&gt; </prompt><command>sudo</command> multipathd show topology
mpatha<co xml:id="mp-co-top-name"/> (3600a098000aad1e300000b4b5a275d45<co xml:id="mp-co-top-wwid"/>) dm-0<co xml:id="mp-co-top-dev"/> NETAPP,INF-01-00<co xml:id="mp-co-top-prod"/>
size=64G features='3 queue_if_no_path pg_init_retries 50'<co xml:id="mp-co-top-feat"/> hwhandler='1 alua'<co xml:id="mp-co-top-hwh"/> wp=rw<co xml:id="mp-co-top-wp"/>
|-+- <co xml:id="mp-co-top-pg"/>policy='historical-service-time 2'<co xml:id="mp-co-top-ps"/> prio=50<co xml:id="mp-co-top-prio"/> status=active<co xml:id="mp-co-top-pgst"/>
| |-<co xml:id="mp-co-top-pp"/> 3:0:0:1<co xml:id="mp-co-top-hbtl"/> sdb 8:16<co xml:id="mp-co-top-sd"/> active<co xml:id="mp-co-top-dmst"/> ready<co xml:id="mp-co-top-st"/> running<co xml:id="mp-co-top-devst"/>
| `- 4:0:0:1 sdf 8:80  active ready running
`-+- policy='historical-service-time 2' prio=10 status=enabled
  `- 4:0:1:1 sdj 8:144 active ready running</screen>
    <calloutlist>
     <callout arearefs="mp-co-top-name">
      <para>
       對應名稱。
      </para>
     </callout>
     <callout arearefs="mp-co-top-wwid">
      <para>
       對應 WWID (如果與對應名稱不同)。
      </para>
     </callout>
     <callout arearefs="mp-co-top-dev">
      <para>
       對應裝置的裝置節點名稱。
      </para>
     </callout>
     <callout arearefs="mp-co-top-prod">
      <para>
       廠商和產品名稱。
      </para>
     </callout>
     <callout arearefs="mp-co-top-pg">
      <para>
       路徑群組。路徑群組下方的縮排行列出了屬於該路徑群組的路徑裝置。
      </para>
     </callout>
     <callout arearefs="mp-co-top-ps">
      <para>
       路徑群組使用的路徑選擇器演算法。可以忽略「2」。
      </para>
     </callout>
     <callout arearefs="mp-co-top-prio">
      <para>
       路徑群組的優先程度。
      </para>
     </callout>
     <callout arearefs="mp-co-top-pgst">
      <para>
       路徑群組的狀態 (<literal>active</literal>、<literal>enabled</literal> 或 <literal>disabled</literal>)。作用中路徑群組是 I/O 目前傳送到的路徑群組。
      </para>
     </callout>
     <callout arearefs="mp-co-top-pp">
      <para>
       路徑裝置。
      </para>
     </callout>
     <callout arearefs="mp-co-top-hbtl">
      <para>
       裝置的匯流排 ID (此處為 SCSI Host:Bus:Target:Lun ID)。
      </para>
     </callout>
     <callout arearefs="mp-co-top-sd">
      <para>
       路徑裝置的裝置節點名稱和主要/次要編號。
      </para>
     </callout>
     <callout arearefs="mp-co-top-dmst">
      <para>
       路徑的核心裝置對應程式狀態 (<literal>active</literal> 或 <literal>failed</literal>)。
      </para>
     </callout>
     <callout arearefs="mp-co-top-st">
      <para>
       多重路徑的路徑裝置狀態 (見下文)。
      </para>
     </callout>
     <callout arearefs="mp-co-top-devst">
      <para>
       核心中路徑裝置的狀態。這是與裝置類型相關的值。對於 SCSI，它可以是 <literal>running</literal> 或 <literal>offline</literal>。
      </para>
     </callout>
    </calloutlist>
   </informalexample>
   <para>
    多重路徑的路徑裝置狀態包括：
   </para>
   <informaltable>
    <tgroup cols="2">
     <colspec colwidth="1*"/>
     <colspec colwidth="1*"/>
     <tbody>
      <row>
       <entry>
        <para>
         <literal>ready</literal>
        </para>
       </entry>
       <entry>
        <para>
         路徑正常運作
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <literal>ghost</literal>
        </para>
       </entry>
       <entry>
        <para>
         主動/被動陣列中的被動路徑
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <literal>faulty</literal>
        </para>
       </entry>
       <entry>
        <para>
         路徑已關閉或無法連接
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <literal>i/o timeout</literal>
        </para>
       </entry>
       <entry>
        <para>
         檢查程式指令已逾時
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <literal>i/o pending</literal>
        </para>
       </entry>
       <entry>
        <para>
         等待完成路徑檢查程式指令
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <literal>delayed</literal>
        </para>
       </entry>
       <entry>
        <para>
         延遲路徑重新具現化以避免「擺動」
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <literal>shaky</literal>
        </para>
       </entry>
       <entry>
        <para>
         不可靠的路徑 (僅限 emc 路徑檢查程式)
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </sect2>

  <sect2 xml:id="sec-multipath-lvm">
   <title>在多重路徑裝置上使用 LVM2</title>
   <para>
    LVM2 具有內建的多重路徑裝置偵測支援。<filename>/etc/lvm/lvm.conf</filename> 中預設會啟用該支援：
   </para>
<screen>    multipath_component_detection=1</screen>
   <para>
    僅當 LVM2 也設定為從 udev 獲取有關裝置內容的資訊時，此功能才可靠：
   </para>
<screen>    external_device_info_source="udev"</screen>
   <para>
    這是 SUSE Linux Enterprise 15 SP4 中的預設設定，但早期版本中並非如此。您也可以 (儘管通常沒有必要) 為 LVM2 建立過濾運算式，以忽略除多重路徑裝置之外的所有裝置。請參閱 <xref linkend="sec-multipath-referring"/>。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-io-stalled">
   <title>解決停止的 I/O</title>
   <para>
    如果所有路徑同時失敗，並且 I/O 已排入佇列，應用程式可能會停滯很長時間。若要解決此問題，您可以使用以下程序：
   </para>
   <procedure>
    <step>
     <para>
      在終端機提示符處輸入以下指令：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipathd disablequeueing map <replaceable>MAPNAME</replaceable></screen>
     <para>
      以裝置的正確 WWID 或對應的別名取代 <literal><replaceable>MAPNAME</replaceable></literal>。
     </para>
     <para>
      此指令會立即使所有排入佇列的 I/O 失敗，並將錯誤傳播到呼叫應用程式。檔案系統將監測到 I/O 錯誤並切換到唯讀模式。
     </para>
    </step>
    <step>
     <para>
      輸入下列指令重新啟動佇列：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipathd restorequeueing <replaceable>MAPNAME</replaceable></screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-mdadm">
   <title>多重路徑裝置上的 MD RAID</title>
   <para>
    多重路徑上的 MD RAID 陣列由系統的 udev 規則自動設定。無需在 <filename>/etc/mdadm.conf</filename> 中進行特殊的組態設定。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-scandev">
   <title>在不重新開機的情況下掃描新裝置</title>
   <para>
    如果已將系統設定為啟用多重路徑，並且您需要將儲存裝置新增至 SAN，則可以使用 <command>rescan-scsi-bus.sh</command> 指令碼掃描新裝置。該指令的一般語法如下：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> rescan-scsi-bus.sh [-a] [-r] --hosts=2-3,5</screen>
   <para>
    其中各選項的含義如下：
   </para>
   <variablelist>
    <varlistentry>
     <term>-a</term>
     <listitem>
      <para>
       使用該選項可確保掃描所有 SCSI 目標來查看是否有新 LUN，否則將僅掃描現有目標。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>-r</term>
     <listitem>
      <para>
       使用該選項將允許移除已在儲存端移除的裝置。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>--hosts</term>
     <listitem>
      <para>
       使用該選項可指定要掃描的主機匯流排介面卡清單 (預設為掃描全部)。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    若要獲取其他選項的說明，請執行 <command>rescan-scsi-bus.sh --help</command>。
   </para>
   <para>
    如果 <command>multipathd</command> 在執行中，並且探查到新的 SAN 裝置，系統應該會根據<xref linkend="sec-multipath-select-devices"/>所述的組態，自動將其設定為多重路徑對應。
   </para>
   <warning>
    <title>Dell/EMC PowerPath 環境</title>
    <para>
     在 EMC PowerPath 環境中，請勿使用作業系統隨附的 <filename>rescan-scsi-bus.sh</filename> 公用程式或 HBA 廠商指令碼來掃描 SCSI 匯流排。為了避免潛在的檔案系統損毀，EMC 要求您遵循 EMC PowerPath for Linux 的廠商文件中提供的程序來操作。
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-trouble">
  <title>MPIO 疑難排解</title>

  <para>
   如果某個系統在具有多重路徑的另一個系統上進入到緊急模式，並列印關於遺失裝置的訊息，原因不外乎以下幾種：
  </para>

  <itemizedlist>
   <listitem>
    <para>
     多重路徑裝置選取組態不一致
    </para>
   </listitem>
   <listitem>
    <para>
     使用不存在的裝置參考
    </para>
   </listitem>
  </itemizedlist>

  <sect2 xml:id="sec-multipath-trouble-select">
   <title>瞭解裝置選取問題</title>
   <para>
    區塊裝置要麽做為多重路徑對應的一部分，要麽直接使用 (掛接為檔案系統、做為交換、LVM 實體磁碟區或其他)。如果裝置已掛接，則 multipathd 想要使其成為多重路徑對應一部分的嘗試將失敗，並顯示「裝置或資源正忙」錯誤。反之亦然，如果 <command>systemd</command> 嘗試掛接已成為多重路徑對應一部分的裝置，則會出現相同的錯誤。
   </para>
   <para>
    <command>systemd</command>、<systemitem>udev</systemitem>、<command>multipathd</command> 和其他一些工具之間的複雜互動會處理開機期間的儲存裝置啟用。<systemitem>udev</systemitem> 規則起著核心作用。它們會設定裝置內容，用於指示其他子系統應如何使用裝置。與多重路徑相關的 udev 規則會為選定用於多重路徑的裝置設定以下內容：
   </para>
<screen>SYSTEMD_READY=0
DM_MULTIPATH_DEVICE_PATH=1</screen>
   <para>
    分割區裝置會從其父裝置繼承這些內容。
   </para>
   <para>
    如果這些內容設定得不正確，一些工具會忽視這些內容；如果設定得太晚，則可能會導致 <command>multipathd</command> 與其他一些子系統之間出現競爭狀況。只有一個競爭者能夠勝出；另一個會看到「裝置或資源正忙」錯誤。
   </para>
   <para>
    這種情況下會出現如下問題：LVM2 套件的工具預設不評估 udev 內容。它們依靠自己的邏輯來確定裝置是否為多重路徑元件，這有時與系統其餘部分的邏輯不符。如需規避此問題的方法，請參閱<xref linkend="sec-multipath-lvm"/>。
   </para>
   <note>
    <title>開機鎖死的範例</title>
    <para>
     假設有這樣一個擁有多重路徑的系統，其根裝置未進行多重路徑處理，並且多重路徑中未排除任何裝置 (請參閱<xref linkend="sec-multipath-planning-type-noroot"/>中的「<xref linkend="vl-multipath-planning-type-noroot-noinitrd"/>」)。根檔案系統掛接在 initramfs 中。<command>systemd</command> 切換到根檔案系統，並且 <command>multipathd</command> 啟動。由於裝置已掛接，<command>multipathd</command> 未能為其設定多重路徑對應。由於未在 <literal>blacklist</literal> 中設定根裝置，因此系統會將其視為多重路徑裝置，並為其設定 <literal>SYSTEMD_READY=0</literal>。
    </para>
    <para>
     稍後，在開機過程中，系統會嘗試掛接其他檔案系統，例如 <filename>/var</filename> 和 <filename>/home</filename>。通常，這些檔案系統將與根檔案系統位於同一裝置上，預設做為根檔案系統自身的 BTRFS 子磁碟區。但 systemd 因 <literal>SYSTEMD_READY=0</literal> 無法掛接它們。<emphasis>我們陷入了鎖死狀態</emphasis>：無法建立 dm-multipath 裝置，並且基礎裝置因 systemd 而封鎖。無法掛接其他檔案系統，導致開機失敗。
    </para>
    <para>
     <emphasis role="bold">我們目前已經擁有應對此問題的解決方案。</emphasis> <command>multipathd</command> 會偵測到此情況，並將裝置釋放到 <command>systemd</command>，之後其可繼續掛接檔案系統。儘管如此，瞭解這個普遍性問題很重要，因為它可能仍會以更難以察覺的方式發生。
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-ref">
   <title>瞭解裝置參考問題</title>
   <para>
    <xref linkend="sec-multipath-initrd-persistent"/>中提供了裝置參考問題的範例。通常情況下會有多個符號連結指向一個裝置節點 (請參閱<xref linkend="sec-multipath-referring"/>)。但這些連結並不總是存在；<command>udev</command> 會根據目前的 udev 規則建立它們。例如，如果多重路徑關閉，<filename>/dev/mapper/</filename> 下多重路徑裝置的符號連結將遺失。因此，對 <filename>/dev/mapper/</filename> 裝置的任何參考都將失敗。
   </para>
   <para>
    此類參考可能會出現在許多地方，特別是在 <filename>/etc/fstab</filename> 和 <filename>/etc/crypttab</filename> 中、initramfs 中，甚至是在核心指令列上。
   </para>
   <para>
    若要規避此問題，最安全的方法就是避免使用無法在重新開機後永久保留或相依於系統組態的裝置參考。一般而言，我們建議透過檔案系統自身的內容 (例如 UUID 或標籤) 來參考檔案系統 (以及類似的實體，如交換空間)，而不要透過包含檔案系統的裝置來參考。如果此類參考不可用並且需要裝置參考 (例如，在 <filename>/etc/crypttab</filename> 中)，則應仔細評估選項。例如，在 <xref linkend="sec-multipath-referring"/> 中，最佳選項可能是 <filename>/dev/disk/by-id/wwn-</filename> 連結，因為它也可與 <literal>multipath=off</literal> 配合使用。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-steps">
   <title>緊急模式下的疑難排解步驟</title>
   <para>
    由於存在許多差別非常細微的錯誤情況，因此無法提供逐步復原指南。但憑藉前幾節的背景知識，如果系統因多重路徑問題進入緊急模式，您應該能夠找出問題所在。在您開始除錯前，請確定您已檢查以下問題：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      是否已啟用多重路徑服務？
     </para>
    </listitem>
    <listitem>
     <para>
      initramfs 中是否包含多重路徑 dracut 模組？
     </para>
    </listitem>
    <listitem>
     <para>
      我的根裝置是否設定為多重路徑裝置？如果沒有，根裝置是否如 <xref linkend="sec-multipath-blacklist"/> 所述正確排除在多重路徑之外，或者您是否依賴於 initramfs 中不存在多重路徑模組來實現這一點 (請參閱<xref linkend="sec-multipath-planning-type-noroot"/>)？
     </para>
    </listitem>
    <listitem>
     <para>
      系統進入緊急模式是在切換到真正的根檔案系統之前還是之後？
     </para>
    </listitem>
   </itemizedlist>
   <para>
    如果您不確定最後一個問題的答案，這裡有一個 dracut 緊急提示範例，切換根之前會列印範例所示的內容：
   </para>
<screen>Generating "/run/initramfs/rdsosreport.txt"
Entering emergency mode. Exit the shell to continue.
Type "journalctl" to view system logs.

You might want to save "/run/initramfs/rdsosreport.txt" to a USB stick or /boot
after mounting them and attach it to a bug report.

Give root password for maintenance
(or press Control-D to continue):</screen>
   <para>
    如果提及 <filename>rdsosreport.txt</filename>，即表明系統仍從 initramfs 中執行。如果您仍然不確定，請登入系統並檢查 <filename>/etc/initrd-release</filename> 檔案是否存在。此檔案僅存在於 initramfs 環境中。
   </para>
   <para>
    如果是在切換根之後進入緊急模式，緊急提示內容與此相似，但不會提及 <filename>rdsosreport.txt</filename>：
   </para>
<screen>Timed out waiting for device dev-disk-by\x2duuid-c4a...cfef77d.device.
[DEPEND] Dependency failed for Local File Systems.
[DEPEND] Dependency failed for Postfix Mail Transport Agent.
Welcome to emergency shell
Give root password for maintenance
(or press Control-D to continue):</screen>
   <procedure>
    <title>分析緊急模式下的情況的步驟</title>
    <step>
     <para>
      嘗試檢查失敗的 systemd 單元和日誌來找出失敗的原因。
     </para>
<screen><prompt role="root"># </prompt>systemctl --failed
<prompt role="root"># </prompt>journalctl -b -o short-monotonic</screen>
     <para>
      在查看日誌時，確定<emphasis>第一個</emphasis>失敗的單元。當您發現第一處故障時，請非常仔細地檢查該時間點之前和前後的訊息。是否有任何警告或其他可疑訊息？
     </para>
     <para>
      留意根交換 (「<literal>Switching root.</literal>」) 以及有關 SCSI 裝置、裝置對應程式、多重路徑和 LVM2 的訊息。尋找有關裝置和檔案系統的 <command>systemd</command> 訊息 (「<literal>Found device</literal>…」、「<literal>Mounting</literal>…」、「<literal>Mounted</literal>…」)。
     </para>
    </step>
    <step>
     <para>
      檢查現有裝置，包括低階裝置和裝置對應程式裝置 (請注意，下面的某些指令可能在 initramfs 中不可用)：
     </para>
<screen><prompt role="root"># </prompt>cat /proc/partitions
<prompt role="root"># </prompt>ls -l /sys/class/block
<prompt role="root"># </prompt>ls -l /dev/disk/by-id/* /dev/mapper/*
<prompt role="root"># </prompt>dmsetup ls --tree
<prompt role="root"># </prompt>lsblk
<prompt role="root"># </prompt>lsscsi
</screen>
     <para>
      從以上指令的輸出中，您應該能夠瞭解是否成功查探到低階裝置，以及是否設定了任何多重路徑對應和多重路徑分割區。
     </para>
    </step>
    <step>
     <para>
      如果裝置對應程式多重路徑設定不符合您的預期，請檢查 udev 內容，特別是 <literal>SYSTEMD_READY</literal> (見上文)
     </para>
<screen><prompt role="root"># </prompt>udevadm info -e</screen>
    </step>
    <step>
     <para>
      如果上一步顯示了未預期的 udev 內容，則表示可能在 udev 規則處理期間出現了問題。檢查其他內容，特別是用於識別裝置的內容 (請參閱<xref linkend="sec-multipath-conf-file-wwid"/>)。如果 udev 內容正確，請再次檢查日誌中是否有 <command>multipathd</command> 訊息。尋找「<literal>Device
      or resource busy</literal>」訊息。
     </para>
    </step>
    <step>
     <para>
      如果系統無法掛接或以其他方式啟用裝置，通常可以嘗試以手動方式啟用此裝置：
     </para>
<screen><prompt role="root"># </prompt>mount /var
<prompt role="root"># </prompt>swapon -a
<prompt role="root"># </prompt>vgchange -a y</screen>
     <para>
      大多數情況下，手動啟用都會成功，並允許系統繼續開機 (通常只需登出緊急外圍程序)，以及進一步檢查開機後系統中的情況。
     </para>
     <para>
      如果手動啟用失敗，您可能會看到錯誤訊息，其中會提供有關問題所在的線索。您也可以再次執行這些指令，並指定更高的詳細程度。
     </para>
    </step>
    <step>
     <para>
      此時，您應該知道出了什麼問題 (如果不知道，請聯絡 SUSE 支援部門，並準備好回答上面提出的大部分問題)。
     </para>
     <para>
      執行一些外圍程序指令應該就能解決該問題，然後結束緊急外圍程序，並成功開機。您仍然需要調整您的組態，以確保日後不會再出現同樣的問題。
     </para>
     <para>
      如果無法解決，您需要將救援系統開機，以手動方式設定裝置，以使用 <command>chroot</command> 進入真正的根檔案系統，並嘗試根據您在前面的步驟中瞭解到的情況解決問題。請注意，在這種情況下，根檔案系統的儲存堆疊可能與正常情況不同。根據您的設定，您可能會在建構新 initramfs 時強制新增或省略 dracut 模組。另請參閱<xref linkend="sec-multipath-initrd-disable"/>。
     </para>
    </step>
    <step>
     <para>
      如果問題頻繁發生，或者在每次嘗試開機時都發生，請嘗試以更高的詳細程度開機，以獲取有關失敗的更多資訊。以下核心參數或它們的組合通常很有用：
     </para>
     <informalexample>
<screen>udev.log-priority=debug<co xml:id="mp-co-kparm-udev"/>
systemd.log_level=debug<co xml:id="mp-co-kparm-sl"/>
scsi_mod.scsi_logging_level=020400<co xml:id="mp-co-kparm-sc"/>
rd.debug<co xml:id="mp-co-kparm-rd"/>
          </screen>
      <calloutlist>
       <callout arearefs="mp-co-kparm-udev">
        <para>
         提高 <command>systemd-udevd</command> 和 udev 規則處理的記錄層級。
        </para>
       </callout>
       <callout arearefs="mp-co-kparm-sl">
        <para>
         提高 <command>systemd</command> 的記錄層級。
        </para>
       </callout>
       <callout arearefs="mp-co-kparm-sc">
        <para>
         提高核心 SCSI 子系統的記錄層級。
        </para>
       </callout>
       <callout arearefs="mp-co-kparm-rd">
        <para>
         追蹤 initramfs 中的指令碼。
        </para>
       </callout>
      </calloutlist>
     </informalexample>
     <para>
      此外，您也可以為特定驅動程式啟用記錄，並設定序列主控台以在開機期間擷取輸出。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-tids">
   <title>技術資訊文件</title>
   <para>
    如需 SUSE Linux Enterprise Server 上多重路徑 I/O 問題疑難排解的相關詳細資訊，請參閱 SUSE 知識庫中的下列技術資訊文件 (TID)：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      <link xlink:href="https://www.suse.com/support/kb/doc/?id=000016331"><citetitle>Using
      LVM on local and SAN attached devices</citetitle></link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link xlink:href="https://www.suse.com/support/kb/doc/?id=000017521"><citetitle>Using
      LVM on Multipath (DM MPIO) Devices</citetitle></link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link xlink:href="https://www.suse.com/support/kb/doc/?id=000017762"><citetitle>HOWTO:
      Add, Resize and Remove LUN without restarting SLES</citetitle></link>
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
</chapter>
