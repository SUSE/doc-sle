<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="adm_sudo.xml" version="5.0" xml:id="cha-adm-sudo">
 <title>Conceitos básicos sobre o <command>sudo</command></title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  A execução de determinados comandos exige privilégios de root. No entanto, por questões de segurança e para evitar erros, não é recomendável efetuar login como <systemitem class="username">root</systemitem>. Uma abordagem mais segura é efetuar login como usuário comum e, em seguida, utilizar o <command>sudo</command> para executar comandos com privilégios elevados.
 </para>
 <para>
  No <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase>, o <command>sudo</command> é configurado para funcionar de modo parecido com o <command>su</command>. No entanto, o <command>sudo</command> oferece um mecanismo flexível que permite aos usuários executar comandos com privilégios de qualquer outro usuário. Isso pode ser usado para atribuir funções com privilégios específicos a determinados usuários e grupos. Por exemplo, é possível permitir que os membros do grupo <systemitem class="groupname">users</systemitem> executem um comando com os privilégios do usuário <systemitem class="username">wilber</systemitem>. É possível restringir ainda mais o acesso ao comando quando você não permite nenhuma opção de comando. Enquanto o su sempre requer senha de <systemitem class="username">root</systemitem> para autenticação com PAM, o <command>sudo</command> pode ser configurado para autenticar com suas próprias credenciais. Isso significa que os usuários não precisam compartilhar a senha de <systemitem class="username">root</systemitem>, o que reforça a segurança.
 </para>
 <sect1 xml:id="sec-adm-sudo-usage">
  <title>Uso básico do <command>sudo</command></title>

  <para>
   O capítulo a seguir apresenta uma introdução ao uso básico do <command>sudo</command>.
  </para>

  <sect2 xml:id="sec-adm-sudo-usage-cmd">
   <title>Executando um único comando</title>
   <para>
    Como usuário comum, você pode executar qualquer comando como <systemitem class="username">root</systemitem> inserindo <command>sudo</command> antes do comando. Isso solicitará que você forneça a senha de root. Se a autenticação for bem-sucedida, o comando será executado como <systemitem class="username">root</systemitem>:
   </para>
<screen>
<prompt>&gt; </prompt><command>id -un</command><co xml:id="co-sudo-usage-id"/>
tux
<prompt>&gt; </prompt><command>sudo</command> <command>id -un</command>
root's password:<co xml:id="co-sudo-usage-pw"/>
root
<prompt>&gt; </prompt><command>id -un</command>
tux<co xml:id="co-sudo-usage-after"/>
<prompt>&gt; </prompt><command>sudo</command> <command>id -un</command>
<co xml:id="co-sudo-usage-nopw"/>
root
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-usage-id">
     <para>
      O comando <command>id -un</command> imprime o nome de login do usuário atual.
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-pw">
     <para>
      A senha não aparece ao ser digitada, nem como texto sem criptografia nem como caracteres de mascaramento.
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-after">
     <para>
      Apenas os comandos que começam com <command>sudo</command> são executados com privilégios elevados.
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-nopw">
     <para>
      Os privilégios elevados são mantidos por um determinado período, portanto, você não precisa inserir a senha de <systemitem class="username">root</systemitem> novamente.
     </para>
    </callout>
   </calloutlist>
   <tip>
    <title>Redirecionamento de E/S</title>
    <para>
     Ao usar o <command>sudo</command>, o redirecionamento de E/S não funciona:
    </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> echo s &gt; /proc/sysrq-trigger
bash: /proc/sysrq-trigger: Permission denied
<prompt>&gt; </prompt><command>sudo</command> cat &lt; /proc/1/maps
bash: /proc/1/maps: Permission denied
</screen>
    <para>
     No exemplo acima, apenas os comandos <command>echo</command> e <command>cat</command> são executados com privilégios elevados. O redirecionamento é realizado pelo shell do usuário com os privilégios do usuário. Para realizar o redirecionamento com privilégios elevados, inicie um shell conforme explicado na <xref linkend="sec-sudo-shell"/> ou use o utilitário <command>dd</command>:
    </para>
<screen>
echo s | sudo dd of=/proc/sysrq-trigger
sudo dd if=/proc/1/maps | cat 
</screen>
   </tip>
  </sect2>

  <sect2 xml:id="sec-sudo-shell">
   <title>Iniciando um shell</title>
   <para>
    Nem sempre é prático usar o <command>sudo</command> toda vez para executar um comando com privilégios elevados. Embora você possa usar o comando <command>sudo bash</command>, é recomendável usar um dos mecanismos incorporados para iniciar um shell:
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>sudo -s (&lt;comando&gt;)</literal>
     </term>
     <listitem>
      <para>
       Inicia um shell especificado pela variável de ambiente <envar>SHELL</envar> ou o shell padrão do usuário de destino. Se um comando for especificado, ele será passado para o shell (com a opção <option>&#x2011;c</option>). Do contrário, o shell será executado no modo interativo.
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -s
root's password:
<prompt>root:/home/tux # </prompt>exit
<prompt>tux:~ &gt; </prompt>
</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>sudo -i (&lt;comando&gt;)</literal>
     </term>
     <listitem>
      <para>
       Semelhante ao <option>-s</option>, mas inicia o shell como um shell de login. Isso significa que os arquivos de inicialização do shell (<filename>.profile</filename> etc.) são processados, e o diretório de trabalho atual é definido como o diretório pessoal do usuário de destino.
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:~ # </prompt>exit
<prompt>tux:~ &gt; </prompt>
            </screen>
     </listitem>
    </varlistentry>
   </variablelist>
     <tip>
   <title>Variáveis de ambiente</title>
   <para>
    Por padrão, o <command>sudo</command> não propaga as variáveis de ambiente. É possível mudar esse comportamento com a opção <literal>env_reset</literal> (consulte <xref linkend="tab-adm-sudo-options"/>).
   </para>
  </tip>
  </sect2>

 </sect1>
 <sect1 xml:id="sec-sudo-conf">
  <title>Configurando o <command>sudo</command></title>

  <para>
   O <command>sudo</command> oferece uma ampla variedade de opções configuráveis.
  </para>

  <note>
   <title>Comando sudo bloqueado</title>
   <para>
    Se você se bloqueou por engano fora do <command>sudo</command>, use <command>su -</command> e a senha de <systemitem class="username">root</systemitem> para iniciar um shell de root. Para corrigir o erro, execute <command>visudo</command>.
   </para>
  </note>

  <sect2 xml:id="sec-sudo-conf-edit">
   <title>Editando os arquivos de configuração</title>
   <para>
    O arquivo de configuração de política principal do <command>sudo</command> é <filename>/etc/sudoers</filename>. Já que é possível se bloquear fora do sistema se o arquivo estiver incorreto, é altamente recomendável usar o <command>visudo</command> para edição. Ele evita conflitos de edição e verifica se há erros de sintaxe antes de gravar as modificações.
   </para>
   <para>
    Você pode definir a varável de ambiente <envar>EDITOR</envar> para usar outro editor no lugar do vi, por exemplo:
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo</screen>
   <para>
    Lembre-se de que o arquivo <filename>/etc/sudoers</filename> está incluído nos pacotes de sistema, e as modificações feitas diretamente no arquivo podem danificar as atualizações. Portanto, é recomendável inserir a configuração personalizada nos arquivos no diretório <filename>/etc/sudoers.d/</filename>. Use o seguinte comando para criar ou editar um arquivo:
   </para>
<screen>sudo visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <para>
    O comando a seguir abre o arquivo usando um editor diferente (neste caso, <command>nano</command>):
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <note>
    <title>Arquivos ignorados em <filename>/etc/sudoers.d</filename></title>
    <para>
     A diretiva <literal>#includedir</literal> em <filename>/etc/sudoers</filename> ignora os arquivos que terminam com o caractere <literal>~</literal> (til) ou que contêm o caractere <literal>&#x002E;</literal> (ponto).
    </para>
   </note>
   <para>
    Para obter mais informações sobre o comando <command>visudo</command>, execute <command>man 8 visudo</command>.
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-syntax">
   <title>Sintaxe de configuração básica do sudoers</title>
   <para>
    Os arquivos de configuração sudoers contêm dois tipos de opções: strings e flags. Enquanto as strings podem conter qualquer valor, os flags podem ser ON ou OFF. Veja a seguir as construções de sintaxe mais importantes para os arquivos de configuração sudoers:
   </para>
<screen>
# Everything on a line after # is ignored <co xml:id="co-sudo-syntax-comment"/>
Defaults !insults # Disable the insults flag <co xml:id="co-sudo-syntax-flag"/>
Defaults env_keep += "DISPLAY HOME" # Add DISPLAY and HOME to env_keep
tux ALL = NOPASSWD: /usr/bin/frobnicate, PASSWD: /usr/bin/journalctl <co xml:id="co-sudo-syntax-rule"/>
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-syntax-comment">
     <para>
      Há duas exceções: <literal>#include</literal> e <literal>#includedir</literal> são comandos regulares.
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-flag">
     <para>
      Remova o caractere <literal>!</literal> para definir o flag desejado como ON.
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-rule">
     <para>
      Consulte a <xref linkend="sec-sudo-conf-rule"/>.
     </para>
    </callout>
   </calloutlist>

   <variablelist xml:id="tab-adm-sudo-options"><title>Opções e flags úteis</title>
   <varlistentry>
    <term>
     <literal>targetpw</literal>
    </term>
    <listitem>
     <para>
      Esse flag controla se o usuário que faz a chamada deve digitar a senha do usuário de destino (ON) (por exemplo <systemitem class="username">root</systemitem>) ou do usuário que faz a chamada (OFF).
     </para>
<screen>Defaults targetpw # Turn targetpw flag ON</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <literal>rootpw</literal>
    </term>
    <listitem>
      <para>
       Se definido, o <command>sudo</command> solicitará a senha de <systemitem class="username">root</systemitem>. O padrão é OFF.
      </para>
<screen>Defaults !rootpw # Turn rootpw flag OFF</screen>
    </listitem>
   </varlistentry>
     <varlistentry>
    <term>
     <literal>env_reset</literal>
    </term>
    <listitem>
      <para>
       Se definido, o <command>sudo</command> construirá um ambiente mínimo com <envar>TERM</envar>, <envar>PATH</envar>, <envar>HOME</envar>, <envar>MAIL</envar>, <envar>SHELL</envar>, <envar>LOGNAME</envar>, <envar>USER</envar>, <envar>USERNAME</envar> e <envar>SUDO_*</envar>. Além disso, as variáveis listadas em <literal>env_keep</literal> serão importadas do ambiente de chamada. O padrão é ON.
      </para>
<screen>Defaults env_reset # Turn env_reset flag ON</screen>
     </listitem>
     </varlistentry>
       <varlistentry>
    <term>
     <literal>env_keep</literal>
    </term>
    <listitem>
      <para>
       Lista de variáveis de ambiente para manter quando o flag <literal>env_reset</literal> é ON.
      </para>
<screen>
# Set env_keep to contain EDITOR and PROMPT
Defaults env_keep = "EDITOR PROMPT"
Defaults env_keep += "JRE_HOME" # Add JRE_HOME
Defaults env_keep -= "JRE_HOME" # Remove JRE_HOME
</screen>
    </listitem>
       </varlistentry>
         <varlistentry>
    <term>
     <literal>env_delete</literal>
    </term>
    <listitem>
      <para>
       Lista de variáveis de ambiente para remover quando o flag <literal>env_reset</literal> é OFF.
      </para>
<screen>
# Set env_delete to contain EDITOR and PROMPT
Defaults env_delete = "EDITOR PROMPT"
Defaults env_delete += "JRE_HOME" # Add JRE_HOME
Defaults env_delete -= "JRE_HOME" # Remove JRE_HOME
</screen>
     </listitem>
  </varlistentry>
   </variablelist>

   <para>
    É possível também usar o token <literal>Defaults</literal> para criar álias para uma coleção de usuários, hosts e comandos. Além disso, é possível aplicar uma opção apenas a um conjunto específico de usuários.
   </para>
   <para>
    Para obter informações detalhadas sobre o arquivo de configuração <filename>/etc/sudoers</filename>, consulte <command>man 5 sudoers</command>.
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-rule">
   <title>Regras básicas do sudoers</title>
   <para>
    Cada regra segue o esquema abaixo (<literal>[]</literal> marca as partes opcionais):
   </para>
<screen>
#Who      Where         As whom      Tag                What
User_List Host_List = [(User_List)] [NOPASSWD:|PASSWD:] Cmnd_List
</screen>
   <variablelist>
    <title>Sintaxe da regra do sudoers</title>
    <varlistentry>
     <term><literal>User_List</literal>
     </term>
     <listitem>
      <para>
       Um ou vários identificadores (separados por vírgula): um nome de usuário, um grupo no formato <literal>%GROUPNAME</literal> ou um ID de usuário no formato <literal>#UID</literal>. A negação pode ser especificada com o prefixo <literal>!</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Host_List</literal>
     </term>
     <listitem>
      <para>
       Um ou vários identificadores (separados por vírgula): um nome (completo) do host ou um endereço IP. A negação pode ser especificada com o prefixo <literal>!</literal>. <literal>ALL</literal> é a opção comum para <literal>Host_List</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>NOPASSWD:|PASSWD:</literal>
     </term>
     <listitem>
      <para>
       Não é solicitada uma senha para o usuário ao executar comandos correspondentes a <literal>Cmd_List</literal> após <literal>NOPASSWD:</literal>.
      </para>
      <para>
       <literal>PASSWD</literal> é o padrão. Ele precisa ser especificado apenas quando ambos <literal>PASSWD</literal> e <literal>NOPASSWD</literal> estão na mesma linha:
      </para>
<screen>tux ALL = PASSWD: /usr/bin/foo, NOPASSWD: /usr/bin/bar</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Cmnd_List</literal>
     </term>
     <listitem>
      <para>
       Um ou vários especificadores (separados por vírgula): Um caminho para um executável, seguido de um argumento opcional permitido.
      </para>
<screen>
/usr/bin/foo     # Anything allowed
/usr/bin/foo bar # Only "/usr/bin/foo bar" allowed
/usr/bin/foo ""  # No arguments allowed
</screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    É possível usar <literal>ALL</literal> como <literal>User_List</literal>, <literal>Host_List</literal> e <literal>Cmnd_List</literal>.
   </para>
   <para>
    Uma regra que permite que o <systemitem class="username">tux</systemitem> execute todos os comandos como root sem digitar uma senha:
   </para>
<screen>tux ALL = NOPASSWD: ALL</screen>
   <para>
    Uma regra que permite que o <systemitem class="username">tux</systemitem> execute <command>systemctl restart apache2</command>:
   </para>
<screen>tux ALL = /usr/bin/systemctl restart apache2</screen>
   <para>
    Uma regra que permite que o <systemitem class="username">tux</systemitem> execute <command>wall</command> como <systemitem>admin</systemitem> sem argumentos:
   </para>
<screen>tux ALL = (admin) /usr/bin/wall ""</screen>
   <warning>
    <title>Regras não seguras</title>
    <para>
     <emphasis>Não</emphasis> use regras como <literal>ALL ALL = ALL</literal> sem <literal>Defaults targetpw</literal>. Do contrário, qualquer pessoa pode executar comandos como <systemitem class="username">root</systemitem>.
    </para>
   </warning>
   <important>
   <title>Winbind e sudo</title>
   <para>
   Ao especificar o nome do grupo no arquivo <filename>sudoers</filename>, use o nome do domínio NetBIOS em vez do domínio Kerberos, por exemplo:
   </para>
<screen><replaceable>%DOMAIN</replaceable>\\<replaceable>GROUP_NAME</replaceable> ALL = (ALL) ALL</screen>
   <para>
   Ao usar o winbindd, lembre-se de que o formato também depende da opção <option>winbind separator</option> no arquivo <filename>smb.conf</filename>. O padrão é <literal>\</literal>. Por exemplo, se ele for mudado para <literal>+</literal>, o formato da conta no arquivo <filename>sudoers</filename> deverá ser <literal>DOMAIN+GROUP_NAME</literal>.
   </para>
   </important>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-sudo-usecases">
  <title>Casos de uso do <command>sudo</command></title>

  <para>
   Embora a configuração padrão funcione em cenários de uso padrão, é possível personalizá-la de forma a atender às suas necessidades específicas.
  </para>

  <sect2 xml:id="sec-sudo-usecases-userpw">
   <title>Usando o <command>sudo</command> sem senha de <systemitem class="username">root</systemitem></title>
   <para>
    Por concepção, os membros do grupo <systemitem class="groupname">wheel</systemitem> podem executar todos os comandos com o <command>sudo</command> como root. O procedimento a seguir explica como adicionar uma conta do usuário ao grupo <systemitem class="groupname">wheel</systemitem>.
   </para>
   <procedure>
    <step>
     <para>
      Adicione sua conta do usuário ao grupo <systemitem class="groupname">wheel</systemitem>.
     </para>
     <para>
      Se a sua conta do usuário ainda não é membro do grupo <systemitem class="groupname">wheel</systemitem>, adicione-a usando o comando <command>sudo usermod -a -G wheel <replaceable>USERNAME</replaceable></command>. Efetue logout e login novamente para habilitar a mudança. Verifique se a mudança foi bem-sucedida executando o comando <command>groups <replaceable>USERNAME</replaceable></command>.
     </para>
    </step>
    <step>
     <para>
      Autentique-se com a senha normal da conta do usuário.
     </para>
     <para>
      Crie o arquivo <filename>/etc/sudoers.d/userpw</filename> usando o comando <command>visudo</command> (consulte a <xref linkend="sec-sudo-conf-edit"/>) e adicione o seguinte:
     </para>
<screen>Defaults !targetpw</screen>
    </step>
    <step>
     <para>
      Selecione uma nova regra padrão.
     </para>
     <para>
      Se os usuários tiverem que digitar as senhas novamente, remova o comentário da linha apropriada em <filename>/etc/sudoers</filename> e comente a regra padrão.
     </para>
<screen>
## Uncomment to allow members of group wheel to execute any command
# %wheel ALL=(ALL) ALL

## Same thing without a password
# %wheel ALL=(ALL) NOPASSWD: ALL
</screen>
    </step>
    <step>
     <para>
      Torne a regra padrão mais restritiva.
     </para>
     <para>
      Comente ou remova a regra allow-everything em <filename>/etc/sudoers</filename>:
     </para>
<screen>ALL     ALL=(ALL) ALL   # WARNING! Only use this together with 'Defaults targetpw'!</screen>
     <warning>
      <title>Regra perigosa em sudoers</title>
      <para>
       Não ignore esta etapa. Do contrário, <emphasis>qualquer</emphasis> usuário poderá executar <emphasis>qualquer</emphasis> comando como <systemitem class="username">root</systemitem>!
      </para>
     </warning>
    </step>
    <step>
     <para>
      Teste a configuração.
     </para>
     <para>
      Execute o <command>sudo</command> como membro e não membro do grupo <systemitem class="groupname">wheel</systemitem>.
     </para>
<screen>
<prompt>tux:~ &gt; </prompt>groups
users wheel
<prompt>tux:~ &gt; </prompt>sudo id -un
tux's password:
root
<prompt>wilber:~ &gt; </prompt>groups
users
<prompt>wilber:~ &gt; </prompt>sudo id -un
wilber is not in the sudoers file.  This incident will be reported.
</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-sudo-usecases-xorg">
   <title>Usando o <command>sudo</command> com aplicativos X.Org</title>
   <para>
    Geralmente, ocorre o seguinte erro ao iniciar aplicativos gráficos com o <command>sudo</command>:
   </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> xterm
xterm: Xt error: Can't open display: %s
xterm: DISPLAY is not set
</screen>
   <para>
    Uma solução alternativa simples é usar o xhost para permitir temporariamente que o usuário root acesse a sessão X do usuário local. Para fazer isso, execute o seguinte comando:
   </para>
<screen>xhost si:localuser:root</screen>
   <para>
    O comando a seguir remove o acesso concedido:
   </para>
<screen>xhost -si:localuser:root</screen>
   <warning>
    <title>Possível problema de segurança</title>
    <para>
     A execução de aplicativos gráficos com privilégios de root tem implicações de segurança. É recomendável habilitar o acesso de root para um aplicativo gráfico apenas como uma exceção. Também é recomendável revogar o acesso de root concedido logo após fechar o aplicativo gráfico.
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-adm-sudo-moreinfo">
  <title>Mais informações</title>
  <para>
   O comando <command>sudo --help</command> oferece uma breve visão geral das opções de linha de comando disponíveis. O comando <command>man sudoers</command> fornece informações detalhadas sobre o sudoers e sua configuração.<filename></filename>
  </para>
 </sect1>
</chapter>
