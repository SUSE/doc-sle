<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="storage_nvmeof.xml" version="5.0" xml:id="cha-nvmeof" xml:lang="zh-cn">
  <title>NVMe-oF</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
    <abstract>
      <para>
        本章介绍如何设置 NVMe over Fabrics 主机和目标。
      </para>
    </abstract>
  </info>
  <sect1 xml:id="sec-nvmeof-overview">
    <title>概述</title>

    <para>
      <emphasis><trademark class="registered">NVM
      Express</trademark></emphasis> (<emphasis><trademark class="registered">NVMe</trademark></emphasis>) 是有关访问非易失性存储设备（通常是 SSD 磁盘）的接口标准。与 SATA 相比，NVMe 支持的速度要高得多，并且延迟更低。
    </para>

    <para>
      <emphasis><trademark class="trade">NVMe-oF</trademark></emphasis> 是用于通过不同网络结构访问 NVMe 存储设备的体系结构。这些网络结构包括 <emphasis>RDMA</emphasis>、<emphasis>TCP</emphasis> 或<emphasis>基于光纤通道的 NVMe</emphasis> (<emphasis>FC-NVMe</emphasis>) 等。NVMe-oF 的作用类似于 iSCSI。为提高容错能力，NVMe-oF 内置了多路径支持。NVMe-oF 多路径并非基于传统的 DM 多路径运作。
    </para>

    <para>
      <emphasis>NVMe 主机</emphasis>是指连接到 NVMe 目标的计算机。<emphasis>NVMe 目标</emphasis>是指共享其 NVMe 块设备的计算机。
    </para>

    <para>
      SUSE Linux Enterprise Server <phrase role="productnumber"><phrase os="sles;sled">15 SP6</phrase></phrase> 支持 NVMe，提供了可用于 NVMe 块存储以及 NVMe-oF 目标和主机的内核模块。
    </para>

    <para>
      要查看您的硬件是否有任何特殊注意事项，请参见<xref linkend="sec-nvmeof-hardware"/>。
    </para>
  </sect1>
  <sect1 xml:id="sec-nvmeof-host-configuration">
    <title>设置 NVMe-oF 主机</title>

    <para>
      要使用 NVMe-oF，必须采用支持的联网方法提供目标。支持的方法包括基于光纤通道的 NVMe、TCP 和 RDMA。以下几节介绍如何将主机连接到 NVMe 目标。
    </para>

    <sect2 xml:id="sec-nvmeof-host-configuration-cli">
      <title>安装命令行客户端</title>
      <para>
        要使用 NVMe-oF，需要安装 <command>nvme</command> 命令行工具。请使用 <command>zypper</command> 安装该工具：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> <command>zypper in nvme-cli</command></screen>
      <para>
        使用 <command>nvme --help</command> 可列出所有可用的子命令。我们提供了 <command>nvme</command> 子命令的手册页。执行 <command>man
        nvme-<replaceable>SUBCOMMAND</replaceable></command> 可查阅相关的手册页。例如，要查看 <option>discover</option> 子命令的手册页，请执行 <command>man nvme-discover</command>。
      </para>
    </sect2>

    <sect2 xml:id="sec-nvmeof-host-configuration-target-discovery">
      <title>发现 NVMe-oF 目标</title>
      <para>
        要列出 NVMe-oF 目标上的可用 NVMe 子系统，您需要有发现控制器地址和服务 ID。
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> <command>nvme discover -t <replaceable>TRANSPORT</replaceable> -a <replaceable>DISCOVERY_CONTROLLER_ADDRESS</replaceable> -s <replaceable>SERVICE_ID</replaceable></command></screen>
      <para>
        将 <replaceable>TRANSPORT</replaceable> 替换为底层传输媒体：<option>loop</option>、<option>rdma</option>、<option>tcp</option> 或 <option>fc</option>。将 <replaceable>DISCOVERY_CONTROLLER_ADDRESS</replaceable> 替换为发现控制器的地址。对于 RDMA 和 TCP，此地址应是 IPv4 地址。将 <replaceable>SERVICE_ID</replaceable> 替换为传输服务 ID。如果服务基于 IP（例如 RDMA 或 TCP），则服务 ID 指定端口号。对于光纤通道，不需要提供服务 ID。
      </para>
      <para>
        NVMe 主机只会看到它们有权连接的子系统。
      </para>
      <para>
        示例：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> nvme discover -t tcp -a 10.0.0.3 -s 4420</screen>
      <para>
        对于 FC，其示例如下所示：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> nvme discover --transport=fc \
                --traddr=nn-0x201700a09890f5bf:pn-0x201900a09890f5bf \
                --host-traddr=nn-0x200000109b579ef6:pn-0x100000109b579ef6</screen>
      <para>
        有关细节，请参见<command>man nvme-discover</command>。
      </para>
    </sect2>

    <sect2 xml:id="sec-nvmeof-host-configuration-connect-target">
      <title>连接到 NVMe-oF 目标</title>
      <para>
        识别 NVMe 子系统后，便可以使用 <command>nvme connect</command> 命令来连接它。
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> <command>nvme connect -t <replaceable>transport</replaceable> -a <replaceable>DISCOVERY_CONTROLLER_ADDRESS</replaceable> -s <replaceable>SERVICE_ID</replaceable> -n <replaceable>SUBSYSTEM_NQN</replaceable></command></screen>
      <para>
        将 <replaceable>TRANSPORT</replaceable> 替换为底层传输媒体：<option>loop</option>、<option>rdma</option>、<option>tcp</option> 或 <option>fc</option>。将 <replaceable>DISCOVERY_CONTROLLER_ADDRESS</replaceable> 替换为发现控制器的地址。对于 RDMA 和 TCP，此地址应是 IPv4 地址。将 <replaceable>SERVICE_ID</replaceable> 替换为传输服务 ID。如果服务基于 IP（例如 RDMA 或 TCP），则此 ID 指定端口号。将 <replaceable>SUBSYSTEM_NQN</replaceable> 替换为发现命令找到的所需子系统的 NVMe 限定名称。<emphasis>NQN</emphasis> 是 <emphasis>NVMe 限定名称</emphasis> (NVMe Qualified Name) 的缩写。NQN 必须唯一。
      </para>
      <para>
        示例：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> <command>nvme connect -t tcp -a 10.0.0.3 -s 4420 -n nqn.2014-08.com.example:nvme:nvm-subsystem-sn-d78432</command></screen>
      <para>
        对于 FC，其示例如下所示：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> nvme connect --transport=fc \
             --traddr=nn-0x201700a09890f5bf:pn-0x201900a09890f5bf \
             --host-traddr=nn-0x200000109b579ef6:pn-0x100000109b579ef6 \
             --nqn=nqn.2014-08.org.nvmexpress:uuid:1a9e23dd-466e-45ca-9f43-a29aaf47cb21</screen>
      <para>
        或者，使用 <command>nvme connect-all</command> 连接到发现的所有名称空间。有关高级用法，请参见 <command>man
        nvme-connect</command> 和 <command>man nvme-connect-all</command>。
      </para>
      <para>
        如果发生路径丢失，NVMe 子系统会尝试重新连接一段时间，该时间由 <command>nvme connect</command> 命令的 <literal>ctrl-loss-tmo</literal> 选项定义。在这段时间（默认值为 600s）过后，将去除该路径并通知块层（文件系统）的上层。默认情况下，随后会以只读模式挂载文件系统，这种行为通常不符合预期。因此，建议设置 <literal>ctrl-loss-tmo</literal> 选项，使 NVMe 子系统无限制地持续尝试重新连接。为此，请运行以下命令：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> nvme connect --ctrl-loss-tmo=-1</screen>
      <para>
        要使 NVMe over Fabric 子系统在引导时可用，请在主机上创建一个 <filename>/etc/nvme/discovery.conf</filename> 文件，并在其中包含传递给 <command>discover</command> 命令的参数（请参见<xref linkend="sec-nvmeof-host-configuration-target-discovery"/>）。例如，如果您按如下所示使用 <command>discover</command> 命令：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> nvme discover -t tcp -a 10.0.0.3 -s 4420</screen>
      <para>
        请将 <command>discover</command> 命令的参数添加到 <filename>/etc/nvme/discovery.conf</filename> 文件中：
      </para>
<screen>echo "-t tcp -a 10.0.0.3 -s 4420" | sudo tee -a /etc/nvme/discovery.conf</screen>
      <para>
        然后启用 <guimenu>nvmf-autoconnect</guimenu> 服务：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl enable nvmf-autoconnect.service</screen>
    </sect2>

    <sect2 xml:id="sec-nvmeof-host-configuration-multipathing">
      <title>多路径</title>
      <para>
        NVMe 本机多路径默认处于启用状态。如果在控制器标识设置中设置了 <option>CMIC</option> 选项，则 NVMe 堆栈默认会将 NVMe 驱动器识别为多路径设备。
      </para>
      <para>
        要管理多路径，您可以使用以下命令：
      </para>
      <variablelist>
        <title>管理多路径</title>
        <varlistentry>
          <term><command>nvme list-subsys</command></term>
          <listitem>
            <para>
              打印多路径设备的布局。
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><command>multipath -ll</command></term>
          <listitem>
            <para>
              此命令有兼容模式，可显示 NVMe 多路径设备。请记住，您需要启用 <literal>enable_foreign</literal> 选项才能使用该命令。有关细节，请参见<xref linkend="sec-multipath-conf-misc"/>。
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><option>nvme-core.multipath=N</option></term>
          <listitem>
            <para>
              当作为引导参数添加该选项时，将禁用 NVMe 本机多路径。
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-nvmeof-target-configuration">
    <title>设置 NVMe-oF 目标</title>

    <sect2 xml:id="sec-nvmeof-target-configuration-cli">
      <title>安装命令行客户端</title>
      <para>
        要配置 NVMe-oF 目标，需要安装 <command>nvmetcli</command> 命令行工具。请使用 <command>zypper</command> 安装该工具：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> <command>zypper in nvmetcli</command></screen>
      <para>
        <command>nvmetcli</command> 上提供了 <link xlink:href="https://git.infradead.org/users/hch/nvmetcli.git/blob_plain/HEAD:/Documentation/nvmetcli.txt"/> 的最新文档。
      </para>
    </sect2>

    <sect2 xml:id="sec-nvmeof-target-configuration-steps">
      <title>配置步骤</title>
      <para>
        下面的过程举例说明如何设置 NVMe-oF 目标。
      </para>
      <para>
        配置存储在树型结构中。使用 <command>cd</command> 命令可导航。使用 <command>ls</command> 可列出对象。您可以使用 <command>create</command> 创建新对象。
      </para>
      <procedure>
        <step>
          <para>
            启动 <command>nvmetcli</command> 交互外壳：
          </para>
<screen><prompt>&gt; </prompt><command>sudo</command> <command>nvmetcli</command></screen>
        </step>
        <step>
          <para>
            创建新端口：
          </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>cd ports</command>
<prompt>(nvmetcli)&gt; </prompt><command>create 1</command>
<prompt>(nvmetcli)&gt; </prompt><command>ls 1/</command>
o- 1
  o- referrals
  o- subsystems</screen>
        </step>
        <step>
          <para>
            创建 NVMe 子系统：
          </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>cd /subsystems</command>
<prompt>(nvmetcli)&gt; </prompt><command>create nqn.2014-08.org.nvmexpress:NVMf:uuid:c36f2c23-354d-416c-95de-f2b8ec353a82</command>
<prompt>(nvmetcli)&gt; </prompt><command>cd nqn.2014-08.org.nvmexpress:NVMf:uuid:c36f2c23-354d-416c-95de-f2b8ec353a82/</command>
<prompt>(nvmetcli)&gt; </prompt><command>ls</command>
o- nqn.2014-08.org.nvmexpress:NVMf:uuid:c36f2c23-354d-416c-95de-f2b8ec353a82
  o- allowed_hosts
  o- namespaces</screen>
        </step>
        <step>
          <para>
            创建新的名称空间，并在其中设置 NVMe 设备：
          </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>cd namespaces</command>
<prompt>(nvmetcli)&gt; </prompt><command>create 1</command>
<prompt>(nvmetcli)&gt; </prompt><command>cd 1</command>
<prompt>(nvmetcli)&gt; </prompt><command>set device path=/dev/nvme0n1</command>
Parameter path is now '/dev/nvme0n1'.</screen>
        </step>
        <step>
          <para>
            启用先前创建的名称空间：
          </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>cd ..</command>
<prompt>(nvmetcli)&gt; </prompt><command>enable</command>
The Namespace has been enabled.</screen>
        </step>
        <step>
          <para>
            显示创建的名称空间：
          </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>cd ..</command>
<prompt>(nvmetcli)&gt; </prompt><command>ls</command>
o- nqn.2014-08.org.nvmexpress:NVMf:uuid:c36f2c23-354d-416c-95de-f2b8ec353a82
  o- allowed_hosts
  o- namespaces
    o- 1</screen>
        </step>
        <step>
          <para>
            允许所有主机使用该子系统。只有在安全环境中才可这样做。
          </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>set attr allow_any_host=1</command>
Parameter allow_any_host is now '1'.</screen>
          <para>
            或者，可以只允许特定的主机建立连接：
          </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>cd nqn.2014-08.org.nvmexpress:NVMf:uuid:c36f2c23-354d-416c-95de-f2b8ec353a82/allowed_hosts/</command>
<prompt>(nvmetcli)&gt; </prompt><command>create hostnqn</command></screen>
        </step>
        <step>
          <para>
            列出创建的所有对象：
          </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>cd /</command>
<prompt>(nvmetcli)&gt; </prompt><command>ls</command>
o- /
  o- hosts
  o- ports
  | o- 1
  |   o- referrals
  |   o- subsystems
  o- subsystems
    o- nqn.2014-08.org.nvmexpress:NVMf:uuid:c36f2c23-354d-416c-95de-f2b8ec353a82
      o- allowed_hosts
      o- namespaces
        o- 1</screen>
        </step>
        <step>
          <para>
            使目标可通过 TCP 使用。为 RDMA 使用 <literal>trtype=rdma</literal>：
          </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>cd ports/1/</command>
<prompt>(nvmetcli)&gt; </prompt><command>set addr adrfam=ipv4 trtype=tcp traddr=10.0.0.3 trsvcid=4420</command>
Parameter trtype is now 'tcp'.
Parameter adrfam is now 'ipv4'.
Parameter trsvcid is now '4420'.
Parameter traddr is now '10.0.0.3'.</screen>
          <para>
            或者，使目标可通过光纤通道使用：
          </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>cd ports/1/</command>
<prompt>(nvmetcli)&gt; </prompt><command>set addr adrfam=fc trtype=fc traddr=nn-0x1000000044001123:pn-0x2000000055001123 trsvcid=none</command></screen>
        </step>
        <step>
          <para>
            将子系统链接到该端口：
          </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>cd /ports/1/subsystems</command>
<prompt>(nvmetcli)&gt; </prompt><command>create nqn.2014-08.org.nvmexpress:NVMf:uuid:c36f2c23-354d-416c-95de-f2b8ec353a82</command>
      </screen>
          <para>
            现在，可以使用 <command>dmesg</command> 校验该端口是否已启用：
          </para>
<screen><prompt role="root"># </prompt>dmesg
        ...
[  257.872084] nvmet_tcp: enabling port 1 (10.0.0.3:4420)
      </screen>
        </step>
      </procedure>
    </sect2>

    <sect2 xml:id="sec-nvmeof-target-configuration-backup-configuration">
      <title>备份和恢复目标配置</title>
      <para>
        可使用以下命令在 JSON 文件中保存目标配置：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> <command>nvmetcli</command>
<prompt>(nvmetcli)&gt; </prompt><command>saveconfig nvme-target-backup.json</command></screen>
      <para>
        要恢复配置，请使用：
      </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>restore nvme-target-backup.json</command></screen>
      <para>
        您还可以擦除当前配置：
      </para>
<screen><prompt>(nvmetcli)&gt; </prompt><command>clear</command></screen>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-nvmeof-hardware">
    <title>特殊硬件配置</title>

    <sect2 xml:id="sec-nvmeof-hardware-overview">
      <title>概览</title>
      <para>
        有些硬件需要特殊的配置才能正常工作。请浏览以下章节的标题，确定您是否使用了所提到的设备或供应商。
      </para>
    </sect2>

    <sect2 xml:id="sec-nvmeof-hardware-broadcom">
      <title>Broadcom</title>
      <para>
        如果您使用的是 <emphasis>Broadcom Emulex LightPulse Fibre Channel SCSI</emphasis> 驱动程序，请在 <literal>lpfc</literal> 模块的目标和主机中添加内核配置参数：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> <command>echo "options lpfc lpfc_enable_fc4_type=3" &gt; /etc/modprobe.d/lpfc.conf</command></screen>
      <para>
        确保 Broadcom 适配器固件的版本至少为 11.4.204.33。另外确保已安装最新版 <package>nvme-cli</package>、<package>nvmetcli</package> 和内核。
      </para>
      <para>
        要启用光纤通道端口作为 NVMe 目标，需要额外配置一个模块参数：<option>lpfc_enable_nvmet=<replaceable>
        COMMA_SEPARATED_WWPNS</replaceable></option>。请输入带有前置 <literal>0x</literal> 的 WWPN，例如 <option>lpfc_enable_nvmet=0x2000000055001122,0x2000000055003344</option>。系统只会为目标模式配置列出的 WWPN。可将光纤通道端口配置为目标<emphasis>或</emphasis>发起端。
      </para>
    </sect2>

    <sect2 xml:id="sec-nvmeof-hardware-marvell">
      <title>Marvell</title>
      <para>
        QLE269x 和 QLE27xx 适配器上都支持 FC-NVMe。Marvell® QLogic® QLA2xxx 光纤通道驱动程序中默认会启用 FC-NVMe 支持。
      </para>
      <para>
        要确认 NVMe 是否已启用，请运行以下命令：
      </para>
<screen><prompt>&gt; </prompt>cat /sys/module/qla2xxx/parameters/ql2xnvmeenable</screen>
      <para>
        如果显示 <literal>1</literal>，则表示 NVMe 已启用，显示 <literal>0</literal> 表示 NVMe 已禁用。
      </para>
      <para>
        然后，检查以下命令的输出，确保 Marvell 适配器固件的版本不低于 8.08.204：
      </para>
<screen><prompt>&gt; </prompt>cat /sys/class/scsi_host/host0/fw_version</screen>
      <para>
        最后，确保已安装适用于 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 的最新版 <package>nvme-cli</package>、<package>QConvergeConsoleCLI</package> 和内核。例如，您可以运行
      </para>
<screen><prompt role="root"># </prompt>zypper lu &amp;&amp; zypper pchk</screen>
      <para>
        来检查更新和补丁。
      </para>
      <para>
        有关安装的更多细节，请参考下列 Marvell 用户指南中的 FC-NVMe 部分：
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <link xlink:href="https://driverdownloads.qlogic.com/QLogicDriverDownloads_UI/ShowEula.aspx?resourceid=32769&amp;docid=96728&amp;ProductCategory=39&amp;Product=1259&amp;Os=126"/>
          </para>
        </listitem>
        <listitem>
          <para>
            <link xlink:href="https://driverdownloads.qlogic.com/QLogicDriverDownloads_UI/ShowEula.aspx?resourceid=32761&amp;docid=96726&amp;ProductCategory=39&amp;Product=1261&amp;Os=126"/>
          </para>
        </listitem>
      </itemizedlist>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-nvmeof-boot">
    <title>通过 NVMe-oF over TCP 引导</title>

    <para>
      根据 <link xlink:href="https://nvmexpress.org/wp-content/uploads/NVM-Express-Boot-Specification-2022.11.15-Ratified.pdf">NVM
      Express® Boot Specification 1.0</link>，<phrase role="productname"><phrase os="sles">SLES</phrase></phrase> 支持通过 NVMe-oF over TCP 引导。
    </para>

    <para>
      可以对 UEFI 预引导环境进行配置，以尝试与远程存储服务器建立 NVMe-oF over TCP 连接，并使用这些连接进行引导。预引导环境会创建一个 ACPI 表（即 NVMe 引导固件表 [NBFT]）,来存储用于引导的 NVMe-oF 的配置信息。操作系统会在稍后的引导阶段使用此表来设置网络和 NVMe-oF 连接，以访问根文件系统。
    </para>

    <sect2 xml:id="sec-nvmeof-tcp-requirements">
      <title>系统要求</title>
      <para>
        要通过 NVMe-oF over TCP 引导系统，则必须满足以下要求：
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <phrase role="productname"><phrase os="sles">SLES</phrase></phrase><phrase role="productnumber"><phrase os="sles;sled">15 SP6</phrase></phrase> 或更高版本。
          </para>
        </listitem>
        <listitem>
          <para>
            支持 NVMe-oF over TCP 的 SAN 存储阵列
          </para>
        </listitem>
        <listitem>
          <para>
            配有支持通过 NVMe-oF over TCP 引导的 BIOS 的主机系统。请咨询硬件供应商了解是否支持此功能。目前只有 UEFI 平台支持通过 NVMe-oF over TCP 引导。
          </para>
        </listitem>
      </itemizedlist>
    </sect2>

    <sect2 xml:id="sec-install-nvme-tcp">
      <title>安装</title>
      <para>
        要通过 NVMe-oF over TCP 安装 <phrase role="productname"><phrase os="sles">SLES</phrase></phrase>，请执行以下步骤：
      </para>
      <procedure>
        <step>
          <para>
            使用主机系统的 UEFI 设置菜单配置要在引导时建立的 NVMe-oF 连接。通常，您需要配置网络（本地 IP 地址、网关等）和 NVMe-oF 目标（远程 IP 地址、子系统 NQN 或发现 NQN）。请参见硬件文档获取配置说明。硬件供应商可能会提供集中和远程管理 BIOS 配置的方法。请与硬件供应商联系以获取更多信息。
          </para>
        </step>
        <step>
          <para>
            按<xref linkend="book-deployment"/>中所述准备安装。
          </para>
        </step>
        <step>
          <para>
            使用任何支持的安装方法启动系统安装。您无需使用任何特定的引导参数在 NVMe-oF over TCP 上启用安装。
          </para>
        </step>
        <step>
          <para>
            如果 BIOS 配置正确，YaST 中的磁盘分区对话框将显示由 BIOS 中配置的子系统导出的 NVMe 名称空间。它们将显示为 NVMe 设备，其中字符串 <literal>tcp</literal> 表示设备通过 TCP 传输连接。在这些名称空间上安装操作系统（特别是 EFI 引导分区和根文件系统）。
          </para>
        </step>
        <step>
          <para>
            完成安装。
          </para>
        </step>
      </procedure>
      <para>
        安装后，系统应该会自动通过 NVMe-oF over TCP 引导。如果系统没有引导，请检查 BIOS 设置中是否正确设置了引导优先级。
      </para>
      <para>
        用于引导的网络接口名为 <literal>nbft0</literal>、<literal>nbft1</literal>，依此类推。要获取有关 NVMe-oF 引导的信息，请运行以下命令：
      </para>
<screen><prompt role="root"># </prompt><command>nvme nbft show</command></screen>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-nvmeof-more-information">
    <title>更多信息</title>

    <para>
      有关 <command>nvme</command> 命令各功能的更多细节，请参考 <command>nvme nvme-help</command>。
    </para>

    <para>
      下面的链接提供了 NVMe 和 NVMe-oF 的基本介绍：
    </para>

    <itemizedlist>
      <listitem>
        <para>
          <link xlink:href="https://nvmexpress.org/"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xlink:href="https://www.nvmexpress.org/wp-content/uploads/NVMe_Over_Fabrics.pdf"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xlink:href="https://storpool.com/blog/demystifying-what-is-nvmeof"/>
        </para>
      </listitem>
    </itemizedlist>
  </sect1>
</chapter>
