<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="zypper.xml" version="5.0" xml:id="sec-zypper">
 <title>Zypperの使用</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <para>
  Zypperは、パッケージのインストール、更新、および削除を行うためのコマンドラインパッケージマネージャです。リポジトリの管理も行います。これは特に、リモートソフトウェア管理タスクの実行、またはシェルスクリプトからのソフトウェアの管理で役立ちます。
 </para>

 <sect2 xml:id="sec-zypper-usage">
  <title>一般的な使用方法</title>
  <para>
   Zypperの一般的な構文は次のとおりです。
  </para>
<screen>zypper <option>[--global-options]</option> <replaceable>COMMAND</replaceable> <option> [--command-options]</option> <option>[arguments]</option></screen>

  <para>
   ブラケットで囲まれたコンポーネントは必須ではありません。一般的なオプションおよびすべてのコマンドのリストについては、<command>zypper help</command>を参照してください。特定のコマンドのヘルプを参照するには、「<command>zypper help </command>
   <replaceable>COMMAND</replaceable>」と入力します。
  </para>
  <variablelist>
   <varlistentry>
    <term>Zypperのコマンド</term>
    <listitem>
     <para>
      Zypperを実行する最も簡単な方法は、その名前の後にコマンドを入力することです。たとえば、システムに必要なすべてのパッチを適用するには、次のコマンドを使用します。
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>グローバルオプション</term>
    <listitem>
     <para>
      さらに、グローバルオプションをコマンドの直前に入力することによって、1つ以上のグローバルオプションを選択することもできます。
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper --non-interactive patch</screen>
     <para>
      上の例では、オプション<option>--non-interactive</option>は、確認を一切表示せずにコマンドを実行することを意味します(自動的にデフォルトの回答を適用します)。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>コマンド固有のオプション</term>
    <listitem>
     <para>
      特定のコマンドに固有のオプションを使用する場合は、コマンドの直後にそのオプションを入力します。
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --auto-agree-with-licenses</screen>
     <para>
      上の例では、<option>--auto-agree-with-licenses</option>を使用して、ライセンスの確認を表示せずに、必要なすべてのパッチをシステムに適用します。その代わりに、自動的にライセンスに同意します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>引数</term>
    <listitem>
     <para>
      一部のコマンドでは、1つ以上の引数が必要です。たとえば、コマンド<command>install</command>を使用する場合、「インストール」<emphasis></emphasis>するパッケージを1つまたは複数指定する必要があります。
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install mplayer</screen>
     <para>
      一部のオプションでは、1つの引数が必要です。次のコマンドでは、すべての既知のパターンが表示されます。
     </para>
<screen><prompt>&gt; </prompt>zypper search -t pattern</screen>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   上記のすべてを結合できます。たとえば、次のコマンドは、冗長モードで、<literal>factory</literal>リポジトリから<package>mc</package>と<package>vim</package>パッケージをインストールします。
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper -v install --from factory mc vim</screen>
  <para>
   <option>--from</option>オプションは、指定されたリポジトリからパッケージを要求する際に、すべてのリポジトリを(依存関係の解決のため)有効に保ちます。<option>--repo</option>は、<option>--from</option>のエイリアスで、いずれかのものを使用できます。
  </para>
  <para>
   ほとんどのZypperコマンドには、指定のコマンドのシミュレーションを行う<literal>dry-run</literal>オプションがあります。このオプションは、テストの目的で使用できます。
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper remove --dry-run MozillaFirefox</screen>
  <para>
   Zypperは、グローバルオプション<option>--userdata <replaceable>STRING</replaceable></option>をサポートします。このオプションを使用して文字列を指定することができます。指定した文字列は、Zypperのログファイルとプラグイン(Btrfsプラグインなど)に書き込まれます。これを使用して、ログファイルでトランザクションにマークを付けたり、トランザクションを特定したりできます。
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper --userdata <replaceable>STRING</replaceable> patch</screen>
 </sect2>

 <sect2 xml:id="sec-zypper-subcommands">
  <title>Zypperサブコマンドの使用</title>
  <para>
   Zypperサブコマンドは、<option>zypper_execdir</option>設定オプションで指定されたディレクトリに保存される実行可能ファイルです。デフォルトでは、<filename>/usr/lib/zypper/commands</filename>です。サブコマンドがそこで見つからない場合、Zypperはその$PATHの残りの部分を自動的に検索します。これにより、独自のローカル拡張機能を作成し、ユーザ空間に保存できます。
  </para>
  <para>
   Zypperシェルでのサブコマンドの実行、グローバルZypperオプションの使用はサポートされていません。
  </para>
  <para>
   使用可能なサブコマンドの一覧表示:
  </para>
<screen><prompt>&gt; </prompt>zypper help subcommand
[...]
Available zypper subcommands in '/usr/lib/zypper/commands'

  appstream-cache
  lifecycle
  migration
  search-packages

Zypper subcommands available from elsewhere on your $PATH

  log                   Zypper logfile reader
                            (/usr/sbin/zypper-log)
</screen>
  <para>
   サブコマンドのヘルプ画面の表示
  </para>
<screen>
<prompt>&gt; </prompt>zypper help appstream-cache
</screen>
 </sect2>

 <sect2 xml:id="sec-zypper-softman">
  <title>Zypperを使ったソフトウェアのインストールと削除</title>
  <para>
   パッケージをインストールまたは削除するには、次のコマンドを使用します。
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install <replaceable>PACKAGE_NAME</replaceable>
<prompt>&gt; </prompt><command>sudo</command> zypper remove <replaceable>PACKAGE_NAME</replaceable></screen>

  <warning>
   <title>必須システムパッケージは削除しないでください</title>
   <para>
    <package>glibc</package>、<package>zypper</package>、<package>kernel</package>などの必須システムパッケージは削除しないでください。これらを削除すると、システムが不安定になったり、まったく動作しなくなったりする可能性があります。
   </para>
  </warning>
  <sect3 xml:id="sec-zypper-selectpackage">
   <title>インストールまたは削除するパッケージの選択</title>
   <para>
    コマンド<command>zypper install</command>および<command>zypper remove</command>でパッケージを指定するには、さまざまな方法があります。
   </para>
   <variablelist>
    <varlistentry>
     <term>正確なパッケージ名を指定する</term>
     <listitem>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install MozillaFirefox</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>正確なパッケージ名およびバージョン番号を指定する</term>
     <listitem>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install MozillaFirefox-52.2</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>リポジトリエイリアスおよびパッケージ名を指定する</term>
     <listitem>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install mozilla:MozillaFirefox</screen>
      <para>
       ここで<literal>mozilla</literal>は、インストールするリポジトリのエイリアスです。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ワイルドカードを使用してパッケージ名を指定する</term>
     <listitem>
      <para>
       名前が特定の文字列で始まるか、特定の文字列で終わるパッケージをすべて選択できます。特にパッケージを削除する場合は、ワイルドカードの使用には注意が必要です。次のコマンドでは、名前の先頭に<quote>Moz</quote>が付くすべてのパッケージがインストールされます。
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install 'Moz*'</screen>
      <tip>
       <title>すべての<filename>-debuginfo</filename>パッケージを削除</title>
       <para>
        問題をデバッグする際、実行中のプロセスに関する情報を多く得るために、一時的に多数の<filename>-debuginfo</filename>パッケージをインストールする場合があります。デバッグセッションが終了したら、この環境を消去する必要があります。それには以下を実行します。
       </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper remove '*-debuginfo'</screen>
      </tip>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>機能によって指定する</term>
     <listitem>
      <para>
       たとえば、名前がわからないパッケージをインストールする場合は、機能による指定が便利です。次のコマンドは、パッケージ<package>MozillaFirefox</package>をインストールします。
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install firefox</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>機能、ハードウェアアーキテクチャ、またはバージョンによって指定する</term>
     <listitem>
      <para>
       機能とともに、ハードウェアアーキテクチャとバージョンを指定できます。
      </para>
      <itemizedlist>
       <listitem>
        <para>
         機能の後にピリオドを付けて、その後に目的のハードウェアアーキテクチャの名前を追加します。たとえば、AMD64/Intel 64アーキテクチャ(Zypperでの名前は<literal>x86_64</literal>)を指定するには、次のコマンドを使用します。
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install 'firefox.x86_64'</screen>
       </listitem>
       <listitem>
        <para>
         バージョンは文字列の最後に追加し、バージョンの前に演算子を付ける必要があります。使用できる演算子は、<literal>&lt;</literal>(より小さい)、<literal>&lt;=</literal>(以下)、<literal>=</literal>(等しい)、<literal>&gt;=</literal>(以上)、<literal>&gt;</literal>(より大きい)です。
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install 'firefox&gt;=74.2'</screen>
       </listitem>
       <listitem>
        <para>
         必要なハードウェアアーキテクチャとバージョンを組み合わせて指定することもできます。
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install 'firefox.x86_64&gt;=74.2'</screen>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>RPMファイルのパスによって指定する</term>
     <listitem>
      <para>
       また、パッケージに対するローカルパスまたはリモートパスを指定できます。
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install /tmp/install/MozillaFirefox.rpm
<prompt>&gt; </prompt><command>sudo</command> zypper install http://download.example.com/MozillaFirefox.rpm</screen>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3 xml:id="sec-zypper-combineinstall">
   <title>パッケージのインストールと削除の結合</title>
   <para>
    パッケージのインストールと削除を同時に行うには、<literal>+/-</literal>修飾子を使用します。<package>emacs</package>のインストールと<package>vim</package>の削除を同時に行うには、次のコマンドを使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install emacs -vim</screen>
   <para>
    <package>emacs</package>の削除と<package>vim</package>のインストールを同時に行うには、次のコマンドを使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper remove emacs +vim</screen>
   <para>
    名前の先頭に<literal>-</literal>が付くパッケージ名がコマンドオプションとして解釈されないようにするには、常に第2引数としてその名前を使用します。これが可能でない場合は、名前の前に<literal>--</literal>を付けます。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install -emacs +vim       # Wrong
<prompt>&gt; </prompt><command>sudo</command> zypper install vim -emacs        # Correct
<prompt>&gt; </prompt><command>sudo</command> zypper install -- -emacs +vim    # Correct
<prompt>&gt; </prompt><command>sudo</command> zypper remove emacs +vim         # Correct</screen>
  </sect3>
  <sect3 xml:id="sec-zypper-clean">
   <title>削除されたパッケージの依存関係のクリーンアップ</title>
   <para>
    指定したパッケージの削除後に、不要になったパッケージも自動的に削除されるようにしたい場合は、<option>--clean-deps</option>オプションを使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper rm --clean-deps <replaceable>PACKAGE_NAME</replaceable></screen>
  </sect3>
  <sect3 xml:id="sec-zypper-script">
   <title>スクリプトでのZypperの使用</title>
   <para>
    Zypperではデフォルトで、選択したパッケージのインストールまたは削除の前に、あるいは問題が発生した際には、確認が求められます。この動作は、<option>--non-interactive</option>オプションを使用することで上書きされます。このオプションは、次のように、実際のコマンド(<command>install</command>、<command>remove</command>、<command>patch</command>)の前に指定する必要があります。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper <option>--non-interactive</option> install <replaceable>PACKAGE_NAME</replaceable></screen>
   <para>
    このオプションは、スクリプトおよびcronジョブでZypperを使用できます。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-softman-sources">
   <title>ソースパッケージのインストールまたはダウンロード</title>
   <para>
    パッケージの対応するソースパッケージをインストールするには、次のコマンドを使用します。
   </para>
<screen><prompt>&gt; </prompt>zypper source-install <replaceable>PACKAGE_NAME</replaceable></screen>
   <para>
    ソースパッケージをインストールするデフォルトの場所は、<systemitem class="username">root</systemitem>として実行する場合は<filename>/usr/src/packages/</filename>、ユーザとして実行する場合は<filename>~/rpmbuild</filename>になります。これらの値はローカルの<command>rpm</command>設定で変更できます。
   </para>
   <para>
    このコマンドにより、指定したパッケージのビルド依存関係もインストールされます。この処理が必要でない場合は、次のようにスイッチ<literal>-D</literal>を追加します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper source-install -D <replaceable>PACKAGE_NAME</replaceable></screen>
   <para>
    ビルドの依存関係のみをインストールするには、<literal>-d</literal>を使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper source-install -d <replaceable>PACKAGE_NAME</replaceable></screen>
   <para>
    もちろん、リポジトリリストで有効にしたソースパッケージを含むリポジトリが存在する場合にのみ動作します(ソースパッケージはデフォルトで追加されますが、有効にはなりません)。リポジトリの管理の詳細については、<xref linkend="sec-zypper-instrepo"/>を参照してください。
   </para>
   <para>
    リポジトリで使用可能なすべてのソースパッケージのリストは、次のコマンドで参照できます。
   </para>
<screen><prompt>&gt; </prompt>zypper search -t srcpackage</screen>
   <para>
    また、すべてのインストール済みパッケージのソースパッケージをローカルディレクトリにダウンロードすることもできます。ソースパッケージをダウンロードするには、以下を使用します。
   </para>
<screen><prompt>&gt; </prompt>zypper source-download</screen>
   <para>
    デフォルトのダウンロードディレクトリは<filename>/var/cache/zypper/source-download</filename>です。これは、<option>--directory</option>オプションを使って変更できます。ダウンロードや削除を行わず、不足パッケージや不要パッケージの表示のみを行う場合は、<option>--status</option>オプションを使用します。不要なソースパッケージを削除するには、<option>--delete</option>オプションを使用します。削除を無効にするには、<option>--no-delete</option>オプションを使用します。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-softman-pluscontent">
   <title>無効にされたリポジトリからのパッケージのインストール</title>
   <para>
    通常、パッケージのインストールや更新は、有効化されたリポジトリからしかできません。<option>--plus-content <replaceable>TAG</replaceable></option>オプションを使用すると、リポジトリをリフレッシュし、現在のZypperセッション中のみ一時的に有効にして、終了したら無効にすることができます。
   </para>
   <para>
    たとえば、追加の<filename>-debuginfo</filename>パッケージまたは<filename>-debugsource</filename>パッケージを提供するリポジトリを有効にするには、<option>--plus-content debug</option>を使用します。このオプションは複数回指定できます。 
   </para>
   <para>
    そうした「デバッグ」リポジトリを一時的に有効にして、特定の<filename>-debuginfo</filename>パッケージをインストールするには、次のオプションを使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper --plus-content debug \
   install "debuginfo(build-id)=eb844a5c20c70a59fc693cd1061f851fb7d046f4"</screen>
   <para>
    debuginfoパッケージがないと、<literal>build-id</literal>文字列が、<command>gdb</command>によって報告されます。
   </para>
   <note>
    <title>無効なインストールメディア</title>
    <para>
     <remark>cwickert 2019-04-18: JSC#SLE-3191</remark>
     <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>インストールメディアのリポジトリは引き続き設定されていますが、インストールが正常に完了すると無効になります。<option>--plus-content</option>オプションを使用して、オンラインリポジトリの代わりにインストールメディアからパッケージをインストールできます。<command>zypper</command>を呼び出す前に、DVDをコンピュータのドライブに挿入するなどして、メディアが使用可能であることを確認してください。
    </para>
   </note>
  </sect3>
  <sect3 xml:id="sec-zypper-softman-util">
   <title>ユーティリティ</title>
   <para>
    すべての依存関係が依然として満たされていることを確認し、欠如する依存関係を修復するには、次のコマンドを使用します。
   </para>
<screen><prompt>&gt; </prompt>zypper verify</screen>
   <para>
    必要とされる依存関係に加えて、一部のパッケージでは他のパッケージが<quote>推奨されます</quote>。これらの推奨対象パッケージは、実際に使用可能でインストール可能な場合のみインストールされます。推奨側のパッケージがインストールされた後で、(パッケージまたはハードウェアの追加により)推奨対象パッケージが使用可能になった場合は、次のコマンドを使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install-new-recommends</screen>
   <para>
    このコマンドは、WebカメラまたはWi-Fiデバイスを接続した後で非常に役に立ちます。このコマンドは、デバイスのドライバと関連ソフトウェアが利用できる場合には、それらをインストールします。ドライバと関連ソフトウェアは、一定のハードウェア依存関係が満たされている場合のみインストールできます。
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="sec-zypper-softup">
  <title>Zypperによるソフトウェアの更新</title>
  <para>
   Zypperを使用してソフトウェアを更新するには3つの方法があります。パッチをインストールする、パッケージの新しいバージョンをインストールする、または配布全体を更新する方法です。最後の方法は、<command>zypper dist-upgrade</command>で行うことができます。<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>のアップグレードについては、<phrase os="sles;sled"><xref linkend="cha-upgrade-paths"/></phrase>を参照してください。
  </para>
  <sect3 xml:id="sec-zypper-softup-patch">
   <title>必要なすべてのパッチのインストール</title>
   <para>
    SUSE Linux Enterpriseへの「パッチ適用」は、インストールされたパッケージの新しいバージョンをインストールする最も信頼できる方法です。<emphasis></emphasis>これにより、正しいバージョンを持つ必要なすべてのパッケージがインストールされ、「競合している」とみなされるパッケージバージョンが確実に除外されます。<emphasis></emphasis> 
   </para>
   <para>
    システムに適用される、正式にリリースされたすべてのパッチをインストールするには、次のコマンドを実行します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch</screen>
   <para>
    コンピュータに設定されているリポジトリから使用可能なすべてのパッチが、インストール環境に関係があるかどうかが確認されます。関係がある場合(および<literal>optional</literal>または<literal>feature</literal>として分類されていない場合)、パッチはただちにインストールされます。<command>zypper patch</command>が成功すると、例外を確認しない限り、脆弱なバージョンパッケージがインストールされないことが保証されます。<phrase os="sles;sled">正式な更新リポジトリは<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>のインストールを登録した後でのみ使用可能であることに注意してください。</phrase>
   </para>
   <para>
    インストールするパッチにシステムの再起動が必要な変更が含まれる場合、事前に警告が表示されます。
   </para>
   <para>
    プレーンの<command>zypper patch</command>コマンドでは、サードパーティリポジトリからのパッチは適用されません。サードパーティリポジトリも更新するには、次のように<literal>with-update</literal>コマンドオプションを使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --with-update</screen>
   <para>
    オプションのパッチもインストールするには、次のコマンドを使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --with-optional</screen>
   <remark>
    The structure here is a bit unfortunate: We explain how to use the
    --cve/--bugzilla options in more detail below ("Listing Patches").
    However, the first bit people get is the very brief intro immediately below.
    Not sure whether to replicate all the information from "Listing Patches"
    here.
    - sknorr, 2016-04-25
   </remark>
   <para>
    Bugzillaの特定の問題に関連するすべてのパッチをインストールするには、次のコマンドを使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --bugzilla=<replaceable>NUMBER</replaceable></screen>
   <para>
    特定のCVEデータベースエントリに関連するすべてのパッチをインストールするには、次のコマンドを使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --cve=<replaceable>NUMBER</replaceable></screen>
   <para>
    たとえば、CVE番号が<literal>CVE-2010-2713</literal>のセキュリティパッチをインストールするには、次のコマンドを実行します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --cve=CVE-2010-2713</screen>
   <para>
    Zypperおよびパッケージ管理自体に影響するパッチのみをインストールするには、次のコマンドを使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --updatestack-only</screen>
   <para>
    <literal>updatestack-only</literal>コマンドオプションを使用する場合、ほかのリポジトリも更新しようとしてそれ以外のコマンドオプションを指定すると、そのコマンドオプションは削除されます。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-softup-listpatch">
   <title>パッチのリストの表示</title>
   <para>
    パッチが使用可能かどうかを確認するため、Zypperでは次の情報を参照できます。
   </para>
   <variablelist>
    <varlistentry>
     <term>必要なパッチの数</term>
     <listitem>
      <para>
       必要なパッチ(システムに適用されるパッチであってもまだインストールされていないもの)の数のリストを表示するには、<command>patch-check</command>を使用します。
      </para>
<screen><prompt>&gt; </prompt>zypper patch-check
Loading repository data...
Reading installed packages...
5 patches needed (1 security patch)</screen>
      <para>
       このコマンドを<option>--updatestack-only</option>オプションと組み合わせて使用すると、Zypperおよびパッケージ管理自体に影響するパッチのみのリストを表示できます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>必要なパッチのリスト</term>
     <listitem>
      <para>
       必要なすべてのパッチ(システムに適用されるパッチであってもまだインストールされていないもの)のリストを表示するには、<command>zypper list-patches</command>を使用します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>すべてのパッチのリスト</term>
     <listitem>
      <para>
       インストール済みかどうか、およびインストール環境に適用されるかどうかに関係なく、<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>で使用可能なすべてのパッチのリストを表示するには、<command>zypper patches</command>を使用します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    また、特定の問題に関連するパッチを表示およびインストールすることもできます。特定のパッチを表示するには、次のオプションで<command>zypper list-patches</command>コマンドを使用します。
   </para>
   <variablelist>
    <varlistentry>
     <term>Bugzillaの問題によって指定する</term>
     <listitem>
      <para>
       Bugzillaの問題に関連する、必要なすべてのパッチのリストを表示するには、オプション<option>--bugzilla</option>を使用します。
      </para>
      <para>
       特定のバグに対応するパッチのリストを表示するには、<option>--bugzilla=<replaceable>NUMBER</replaceable></option>のようにバグ番号を指定することもできます。Bugzillaの複数の問題に関連するパッチを検索するには、次の例のように、バグ番号の間にカンマを追加します。
      </para>
<screen><prompt>&gt; </prompt>zypper list-patches --bugzilla=972197,956917</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>CVE番号によって指定する</term>
     <listitem>
      <para>
       CVE(Common Vulnerabilities and Exposures)データベースのエントリに関連する、必要なすべてのパッチのリストを表示するには、オプション<option>--cve</option>を使用します。
      </para>
      <para>
       特定のCVEデータベースエントリに対応するパッチのリストを表示するには、<option>--cve=<replaceable>NUMBER</replaceable></option>のようにCVE番号を指定することもできます。複数のCVEデータベースエントリに関連するパッチを検索するには、次の例のように、CVE番号の間にカンマを追加します。
      </para>
<screen><prompt>&gt; </prompt>zypper list-patches --cve=CVE-2016-2315,CVE-2016-2324</screen>
     </listitem>
     </varlistentry>
     <varlistentry>
      <term>撤回されたパッチを一覧表示する</term>
      <listitem>
        <para>
          SUSE Linux Enterprise 15のコードストリームでは、一部のパッチが自動的に撤回されます。アップデートに新しいバグが含まれるリスクがあるため、保守アップデートは慎重にテストされます。アップデートにバグが含まれていることが判明した場合、バグのあるアップデートを元に戻すために新しいアップデート(バージョン番号が大きい)が発行され、バグのあるアップデートは再度インストールされないようにブロックされます。撤回されたパッチを<command>zypper</command>で一覧表示できます。
        </para>
        <screen><prompt>&gt; </prompt><command>zypper lp --all |grep retracted</command>
SLE-Module-Basesystem15-SP3-Updates | SUSE-SLE-Module-Basesystem-15-SP3-2021-1965 
 | recommended | important | ---    | retracted  | Recommended update for multipath-tools 
SLE-Module-Basesystem15-SP3-Updates | SUSE-SLE-Module-Basesystem-15-SP3-2021-2689 
 | security    | important | ---    | retracted  | Security update for cpio
SLE-Module-Basesystem15-SP3-Updates | SUSE-SLE-Module-Basesystem-15-SP3-2021-3655 
 | security    | important | reboot | retracted  | Security update for the Linux Kernel</screen> 
        <para>
          撤回された(または任意の)パッチに関する詳細情報を参照してください。
        </para>
        <screen><prompt>&gt; </prompt><command>zypper patch-info SUSE-SLE-Product-SLES-15-2021-2689</command>
Loading repository data...
Reading installed packages...

Information for patch SUSE-SLE-Product-SLES-15-2021-2689:
---------------------------------------------------------
Repository  : SLE-Product-SLES15-LTSS-Updates
Name        : SUSE-SLE-Product-SLES-15-2021-2689
Version     : 1
Arch        : noarch
Vendor      : maint-coord@suse.de
Status      : retracted
Category    : security
Severity    : important
Created On  : Mon 16 Aug 2021 03:44:00 AM PDT
Interactive : ---
Summary     : Security update for cpio
Description : 
    This update for cpio fixes the following issues:

    It was possible to trigger Remote code execution due to a integer overflow 
    (CVE-2021-38185, bsc#1189206)

    UPDATE:
    This update was buggy and could lead to hangs, so it has been retracted. 
    There will be a follow up update.
    [...]</screen>   
      </listitem>
     </varlistentry>
     <varlistentry>
       <term>競合するパッケージのパッチ</term>
       <listitem>
<screen>
Information for patch openSUSE-SLE-15.3-2022-333:
-------------------------------------------------
Repository  : Update repository with updates from SUSE Linux Enterprise 15
Name        : openSUSE-SLE-15.3-2022-333
Version     : 1
Arch        : noarch
Vendor      : maint-coord@suse.de
Status      : needed
Category    : security
Severity    : important
Created On  : Fri Feb  4 09:30:32 2022
Interactive : reboot
Summary     : Security update for xen
Description :
    This update for xen fixes the following issues:

    - CVE-2022-23033: Fixed guest_physmap_remove_page not removing the p2m mappings. (XSA-393) (bsc#1194576)
    - CVE-2022-23034: Fixed possible DoS by a PV guest Xen while unmapping a grant. (XSA-394) (bsc#1194581)
    - CVE-2022-23035: Fixed insufficient cleanup of passed-through device IRQs. (XSA-395) (bsc#1194588)
Provides    : patch:openSUSE-SLE-15.3-2022-333 = 1
Conflicts   : [22]
    xen.src &lt; 4.14.3_06-150300.3.18.2
    xen.noarch &lt; 4.14.3_06-150300.3.18.2
    xen.x86_64 &lt; 4.14.3_06-150300.3.18.2
    xen-devel.x86_64 &lt; 4.14.3_06-150300.3.18.2
    xen-devel.noarch &lt; 4.14.3_06-150300.3.18.2
[...]
</screen>
        <para>
         上記のパッチは、影響を受けるバージョンまたは脆弱なバージョンの22パッケージと競合します。これらの影響を受けるパッケージまたは脆弱なパッケージのいずれかがインストールされると、競合が発生し、パッチは「必要」に応じて分類されます。<emphasis></emphasis><command>zypper patch</command>は、利用可能なすべてのパッチをインストールしようとします。問題が発生した場合は、問題が報告され、すべてのアップデートがインストールされるわけではないことが通知されます。この競合は、影響を受けるパッケージまたは脆弱なパッケージを更新するか、それらを削除することで解決できます。SUSEアップデートリポジトリには固定パッケージも付属しているため、アップデートは競合を解決するための標準的な方法です。依存関係の問題やパッケージのロックなどにより、パッケージを更新できない場合は、ユーザの承認後に削除されます。
        </para>
       </listitem>
      </varlistentry>
    </variablelist>
   <para>
    必要かどうかに関係なくすべてのパッチのリストを表示するには、追加でオプション<option>--all</option>を使用します。たとえば、CVE番号が割り当てられたすべてのパッチのリストを表示するには、次のコマンドを使用します。
   </para>
<screen><?dbsuse-fo font-size="0.70em"?>
<prompt>&gt; </prompt>zypper list-patches --all --cve
Issue | No.           | Patch             | Category    | Severity  | Status
------+---------------+-------------------+-------------+-----------+----------
cve   | CVE-2019-0287 | SUSE-SLE-Module.. | recommended | moderate  | needed
cve   | CVE-2019-3566 | SUSE-SLE-SERVER.. | recommended | moderate  | not needed
[...]</screen>
  </sect3>
  <sect3 xml:id="sec-zypper-softup-update">
   <title>新規パッケージパージョンのインストール</title>
   <para>
    リポジトリに新しいパッケージのみが存在し、パッチが提供されていない場合は、<command>zypper patch</command>は無効です。インストールされているパッケージをすべて新しく入手可能なバージョンで更新するには、次のコマンドを使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper update</screen>
<important>
 <para>
  <command>zypper update</command>は問題のあるパッケージを無視します。たとえば、パッケージがロックされている場合、<command>zypper update</command>は、より新しいバージョンのパッケージが利用可能であってもそのパッケージを除外します。逆に、パッケージが脆弱であるとみなされた場合、<command>zypper patch</command>は競合を報告します。
 </para>
</important>
   <para>
    個別のパッケージをアップデートするには、updateコマンドまたはinstallコマンドのいずれかでパッケージを指定します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper update <replaceable>PACKAGE_NAME</replaceable>
<prompt>&gt; </prompt><command>sudo</command> zypper install <replaceable>PACKAGE_NAME</replaceable></screen>
   <para>
    インストール可能なすべての新しいパッケージのリストを、次のコマンドで取得できます。
   </para>
<screen><prompt>&gt; </prompt>zypper list-updates</screen>
   <para>
    ただし、このコマンドで表示されるのは、次の条件に一致するパッケージのみです。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      すでにインストール済みのパッケージと同じベンダである
     </para>
    </listitem>
    <listitem>
     <para>
      すでにインストール済みのパッケージと同等以上の優先度をもつリポジトリによって提供される
     </para>
    </listitem>
    <listitem>
     <para>
      インストール可能である(すべての依存関係が満たされている)
     </para>
    </listitem>
   </itemizedlist>
   <para>
    次のコマンドを使用すると、(インストール可能かどうかに関わらず)<emphasis>すべての</emphasis>新しい使用可能なパッケージのリストを取得できます。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper list-updates --all</screen>
   <para>
    新しいパッケージをインストールできない理由を見つけるには、上で説明されているように、<command>zypper install</command>コマンドまたは<command>zypper update</command>コマンドを使用します。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-softup-orphaned">
   <title>孤立パッケージの特定</title>
   <para>
    Zypperからリポジトリを削除する場合や、システムをアップグレードする場合には、いくつかのパッケージが<quote>孤立</quote>状態になる可能性があります。これらの<emphasis>孤立</emphasis>パッケージは、どのアクティブなリポジトリにも属していません。次のコマンドで、これらのリストを表示できます。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper packages --orphaned</screen>
   <para>
    このリストを使用して、パッケージが引き続き必要か、それとも削除しても安全かを判断できます。
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="sec-zypper-ps">
  <title>削除されたファイルを使用しているプロセスとサービスの特定</title>
  <para>
   パッケージにパッチを適用したり、パッケージを更新または削除したりした場合、更新または削除によって削除されたファイルを引き続き使用している実行中のプロセスがシステムに存在することがあります。削除されたファイルを使用しているプロセスのリストを表示するには、<command>zypper ps</command>を使用します。プロセスが既知のサービスに属している場合は、サービス名のリストが表示され、そのサービスを容易に再起動できます。デフォルトでは、<command>zypper ps</command>は次のような表を表示します。
  </para>
<screen><?dbsuse-fo font-size="0.70em"?>
<prompt>&gt; </prompt>zypper ps
PID   | PPID | UID | User  | Command      | Service      | Files
------+------+-----+-------+--------------+--------------+-------------------
814   | 1    | 481 | avahi | avahi-daemon | avahi-daemon | /lib64/ld-2.19.s-&gt;
      |      |     |       |              |              | /lib64/libdl-2.1-&gt;
      |      |     |       |              |              | /lib64/libpthrea-&gt;
      |      |     |       |              |              | /lib64/libc-2.19-&gt;
[...]</screen>
  <simplelist><member><emphasis role="bold"></emphasis>PID: プロセスのID
   </member><member><emphasis role="bold"></emphasis>PPID: 親プロセスのID
   </member><member><emphasis role="bold"></emphasis>UID: プロセスを実行しているユーザのID
   </member><member><emphasis role="bold"></emphasis>UID: プロセスを実行しているユーザのログイン名
   </member><member><emphasis role="bold"></emphasis>Command: プロセスを実行するために使用されるコマンド
   </member><member><emphasis role="bold"></emphasis>Service: サービス名(コマンドがシステムサービスに関連付けられている場合にのみ)
   </member><member><emphasis role="bold"></emphasis>Files: 削除されたファイルのリスト
   </member>
  </simplelist>
  <para>
   次のように指定することで、<command>zypper ps</command>の出力フォーマットを制御できます。
  </para>
  <variablelist>
   <varlistentry>
    <term><command>zypper ps</command><option>-s</option></term>
    <listitem>
     <para>
      削除されたファイルを表示しない短い表を作成します。
     </para>
<screen><?dbsuse-fo font-size="0.70em"?>
<prompt>&gt; </prompt>zypper ps -s
PID   | PPID | UID  | User    | Command      | Service
------+------+------+---------+--------------+--------------
814   | 1    | 481  | avahi   | avahi-daemon | avahi-daemon
817   | 1    | 0    | root    | irqbalance   | irqbalance
1567  | 1    | 0    | root    | sshd         | sshd
1761  | 1    | 0    | root    | master       | postfix
1764  | 1761 | 51   | postfix | pickup       | postfix
1765  | 1761 | 51   | postfix | qmgr         | postfix
2031  | 2027 | 1000 | tux     | bash         |</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>zypper ps</command><option>-ss</option></term>
    <listitem>
     <para>
      システムサービスに関連付けられているプロセスのみを表示します。
     </para>
<screen>PID   | PPID | UID  | User    | Command      | Service
------+------+------+---------+--------------+--------------
814   | 1    | 481  | avahi   | avahi-daemon | avahi-daemon
817   | 1    | 0    | root    | irqbalance   | irqbalance
1567  | 1    | 0    | root    | sshd         | sshd
1761  | 1    | 0    | root    | master       | postfix
1764  | 1761 | 51   | postfix | pickup       | postfix
1765  | 1761 | 51   | postfix | qmgr         | postfix</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>zypper ps</command><option>-sss</option></term>
    <listitem>
     <para>
      削除されたファイルを使用しているシステムサービスのみを表示します。
     </para>
<screen>avahi-daemon
irqbalance
postfix
sshd</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>zypper ps</command><option>--print &quot;systemctl status %s&quot;</option></term>
    <listitem>
     <para>
      再起動が必要な可能性があるサービスのステータス情報を取得するコマンドを表示します。
     </para>
<screen>systemctl status avahi-daemon
systemctl status irqbalance
systemctl status postfix
systemctl status sshd</screen>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   サービスの処理の詳細については、<xref linkend="cha-systemd"/>を参照してください。
  </para>
 </sect2>


 <sect2 xml:id="sec-zypper-instrepo">
  <title>Zypperによるリポジトリの管理</title>
  <para>
   Zypperのすべてのインストールまたはパッチのコマンドは、既知のリポジトリのリストに応じて異なります。システムで既知のすべてのリポジトリのリストを表示するには、次のコマンドを使用します。
  </para>
<screen><prompt>&gt; </prompt>zypper repos</screen>
  <para>
   結果は、次の出力のようになります。
  </para>
  <example xml:id="ex-zypper-repos">
   <title>Zypper - 既知のリポジトリのリスト</title>
<screen os="sles;sled"><prompt>&gt; </prompt>zypper repos
# | Alias        | Name          | Enabled | Refresh
--+--------------+---------------+---------+--------
1 | SLEHA-15-GEO | SLEHA-15-GEO  | Yes     | No
2 | SLEHA-15     | SLEHA-15      | Yes     | No
3 | SLES15       | SLES15        | Yes     | No</screen>

  </example>
  <para>
   各種コマンドのリポジトリを指定するには、エイリアス、URI、またはリポジトリ番号を<command>zypper repos</command>コマンド出力から使用できます。リポジトリの別名は、リポジトリ操作コマンド用の短いリポジトリ名です。ただし、リポジトリリストの変更後に、リポジトリ番号が変わる可能性があります。エイリアスは変更されることはありません。
  </para>
  <para>
   デフォルトでは、URIやリポジトリの優先度など、詳細情報は表示されません。すべての詳細を表示するには、次のコマンドを使用します。
  </para>
<screen><prompt>&gt; </prompt>zypper repos -d</screen>
  <sect3 xml:id="sec-zypper-instrepo-add">
   <title>リポジトリの追加</title>
   <para>
    リポジトリを追加するには、次を実行します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper addrepo <replaceable>URI</replaceable> <replaceable>ALIAS</replaceable></screen>
   <para>
    <replaceable>URI</replaceable>は、インターネットリポジトリ、ネットワークリソース、ディレクトリ、CDまたはDVDのいずれかです(詳細については、<link xlink:href="https://en.opensuse.org/openSUSE:Libzypp_URIs"/>を参照してください)。<replaceable>ALIAS</replaceable>は、リポジトリの短い固有のIDです。このIDは、固有である必要があること以外は自由に選択できます。すでに使用されているエイリアスを指定した場合、Zypperでは警告が発行されます。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-instrepo-refresh">
   <title>リポジトリの更新</title>
   <para>
    <command>zypper</command>は、設定されているリポジトリからパッケージの変更点をフェッチできます。変更点をフェッチするには、次のコマンドを実行します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper refresh</screen>
   <note>
    <title><command>zypper</command>のデフォルトの動作</title>
    <para>
     一部のコマンドではデフォルトで<command>refresh</command>が自動的に実行されるため、ユーザがこのコマンドを明示的に実行する必要はありません。
    </para>
   </note>
   <para>
    <command>refresh</command>コマンドと<literal>--plus-content</literal>オプションを使用すると、無効になっているリポジトリ内の変更点も表示できます。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper --plus-content refresh</screen>
   <para>
    このオプションは、リポジトリ内の変更点をフェッチしますが、無効になっているリポジトリは同じ状態(無効)のままにします。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-instrepo-rm">
   <title>リポジトリの削除</title>
   <para>
    リストからリポジトリを削除するには、コマンド<command>zypper removerepo</command>を使用し、削除するリポジトリのエイリアスまたは番号を指定します。たとえば、<xref linkend="ex-zypper-repos"/>から<literal os="sles;sled">SLEHA-12-GEO</literal>リポジトリを削除するには、次のコマンドのいずれかを使用します。
   </para>
<screen os="sles;sled"><prompt>&gt; </prompt><command>sudo</command> zypper removerepo 1
<prompt>&gt; </prompt><command>sudo</command> zypper removerepo "SLEHA-12-GEO"</screen>

  </sect3>
  <sect3 xml:id="sec-zypper-instrepo-mofify">
   <title>リポジトリの変更</title>
   <para>
    <command>zypper modifyrepo</command>によりリポジトリを有効または無効にします。また、このコマンドにより、リポジトリのプロパティ(動作、名前、優先度の更新など)を変更できます。次のコマンドは、<literal>updates</literal>という名前のリポジトリを有効にし、自動更新をオンにし、リポジトリの優先度を 20に設定します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper modifyrepo -er -p 20 'updates'</screen>
   <para>
    リポジトリを変更する場合、1つのリポジトリだけなく、リポジトリのグループも操作できます。
   </para>
   <simplelist><member><option>-a</option>: すべてのリポジトリ</member><member><option>-l</option>: ローカルリポジトリ</member><member><option>-t</option>: リモートリポジトリ</member><member><option>-m <replaceable>タイプ</replaceable></option>:特定のタイプのリポジトリ(ここで、<replaceable>タイプ</replaceable>には、次のいずれかを指定できます: 。<literal>http</literal>、<literal>https</literal>、<literal>ftp</literal>、<literal>cd</literal>、<literal>dvd</literal>、<literal>dir</literal>、<literal>file</literal>、<literal>cifs</literal>、<literal>smb</literal>、<literal>nfs</literal>、<literal>hd</literal>、<literal>iso</literal>) </member>
   </simplelist>
   <para>
    リポジトリエイリアスの名前を変更するには、<literal>renamerepo</literal>コマンドを使用します。次の例では、エイリアスを<literal>Mozilla Firefox</literal>から<literal>firefox</literal>に変更しています。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper renamerepo 'Mozilla Firefox' firefox</screen>
  </sect3>
 </sect2>

 <sect2 xml:id="sec-zypper-query">
  <title>Zypperによるリポジトリおよびパッケージのクエリ</title>
  <para>
   Zypperでは、リポジトリまたはパッケージをクエリするためのさまざまな方法が提供されています。使用可能なすべての製品、パターン、パッケージ、またはパッチのリストを取得するには、次のコマンドを使用します。
  </para>
<screen><prompt>&gt; </prompt>zypper products
<prompt>&gt; </prompt>zypper patterns
<prompt>&gt; </prompt>zypper packages
<prompt>&gt; </prompt>zypper patches</screen>
  <para>
   特定のパッケージについてすべてのリポジトリをクエリするには、<literal>search</literal>を使用します。特定のパッケージに関する情報を取得するには、<literal>info</literal>コマンドを使用します。
  </para>
  <sect3 xml:id="sec-zypper-query-search">
   <title>ソフトウェアの検索</title>
   <para>
    <command>zypper search</command>コマンドは、パッケージ名に対して機能し、オプションでパッケージの概要と説明に対しても機能します。<literal>/</literal>でラップされた文字列は、正規表現として解釈されます。デフォルトでは、検索で大文字と小文字は区別されません。
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>fire</literal>を含むパッケージ名の単純な検索</term>
     <listitem>
<screen><prompt>&gt; </prompt>zypper search "fire"</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>正確なパッケージ<literal>MozillaFirefox</literal>の単純な検索</term>
     <listitem>
<screen><prompt>&gt; </prompt>zypper search --match-exact "MozillaFirefox"</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>パッケージの説明とサマリも検索</term>
     <listitem>
<screen><prompt>&gt; </prompt>zypper search -d fire</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>まだインストールしていないパッケージのみ表示</term>
     <listitem>
<screen><prompt>&gt; </prompt>zypper search -u fire</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>文字列<literal>fir</literal>を含み、この後に<literal>e</literal>が続かないパッケージの表示</term>
     <listitem>
<screen><prompt>&gt; </prompt>zypper se "/fir[^e]/"</screen>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3 xml:id="sec-zypper-query-search-packages" os="sles;sled">
   <title>すべてのSLEモジュール間のパッケージの検索</title>
   <para>
    現在有効なSLEモジュールの内部または外部の両方のパッケージを検索するには、<command>search-packages</command>サブコマンドを使用します。このコマンドは、SUSEカスタマーセンターに連絡し、次のように一致するパッケージのすべてのモジュールを検索します。
   </para>
<screen><prompt>&gt; </prompt>zypper search-packages <replaceable>package1</replaceable> <replaceable>package2</replaceable></screen>
   <para>
    <command>zypper search-packages</command>では、次のオプションを提供します。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      検索文字列の完全一致を検索: <option>-x</option>, <option>--match-exact</option>
     </para>
    </listitem>
    <listitem>
     <para>
      モジュール別に結果をグループ化(デフォルト: パッケージ別にグループ化): <option>-g,</option> <option>--group-by-module</option>
     </para>
    </listitem>
    <listitem>
     <para>
      パッケージに関する詳細を表示: <option>-d</option>, <option>--details</option>
     </para>
    </listitem>
    <listitem>
     <para>
      検索結果をXMLで表示: <option>--xmlout</option>
     </para>
    </listitem>
   </itemizedlist>
  </sect3>
  <sect3 xml:id="sec-zypper-query-what-provides">
   <title>特定の機能の検索</title>
   <para>
    特定の機能を提供するパッケージを検索するには、コマンド<literal>what-provides</literal>を使用します。たとえば、どのパッケージがPerlモジュール<literal>SVN::Core</literal>を提供するか確認したい場合は、次のコマンドを使用します。
   </para>
<screen><prompt>&gt; </prompt>zypper what-provides 'perl(SVN::Core)'</screen>
   <para>
    <literal>what-provides <replaceable>PACKAGE_NAME</replaceable></literal>は<command>rpm -q --whatprovides </command>
    <replaceable>PACKAGE_NAME</replaceable>に似ていますが、RPMではRPMデータベース(つまり、すべてのインストール済みパッケージのデータベース)のみを問い合わせることができます。それに対してZypperは、インストール済みのパッケージだけでなく、すべてのリポジトリから機能のプロバイダに関する情報を表示します。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-query-info">
   <title>パッケージ情報の表示</title>
   <para>
    単一のパッケージをクエリするには、<command>info</command>を使用し、引数として正確なパッケージ名を指定します。パッケージに関する詳細情報を表示します。パッケージ名がリポジトリのどのパッケージ名にも一致しない場合は、パッケージ以外に一致するものの詳細情報を出力します。特定のタイプを要求して(<literal>-t</literal>オプションを使用)、そのタイプが存在しない場合は、使用可能なほかの一致を出力しますが、詳細な情報は出力しません。
   </para>
   <para>
    ソースパッケージを指定した場合、そのソースパッケージからビルドされたバイナリパッケージを表示します。バイナリパッケージを指定した場合、そのバイナリパッケージをビルドするために使用されたソースパッケージを出力します。
   </para>
   <para>
    パッケージの要求や推奨も表示するには、<option>--requires</option>オプションや<option>--recommends</option>オプションを使用します。
   </para>
<screen><prompt>&gt; </prompt>zypper info --requires MozillaFirefox</screen>
  </sect3>
 </sect2>

 <sect2 xml:id="sec-zypper-lifecycle" os="sles;sled">
  <title>ライフサイクル情報の表示</title>
  <para>
   SUSE製品は一般的に10年間サポートされています。多くの場合、3年間のサポートを追加するSUSEの拡張サポート提供を利用して、この標準的なライフサイクルを延長することができます。製品によっては、正確なサポートライフサイクルを<link xlink:href="https://www.suse.com/lifecycle"/>で見つけることができます。
  </para>
  <para>
   製品とサポートされているパッケージのライフサイクルを確認するには、以下のように<command>zypper lifecycle</command>コマンドを使用します。
  </para>
<screen><prompt role="root"># </prompt><command>zypper lifecycle</command>
    Product end of support
Codestream: SUSE Linux Enterprise Server 15             2028-07-31
    Product: SUSE Linux Enterprise Server 15 SP3        n/a*

Module end of support
Basesystem Module                                       n/a*
Desktop Applications Module                             n/a*
Server Applications Module                              n/a*

Package end of support if different from product:
autofs                                   Now, installed 5.1.3-7.3.1, update available 5.1.3-7.6.1
</screen>
 </sect2>

 <sect2 xml:id="sec-zypper-configure">
  <title>Zypperの設定</title>
  <para>
   Zypperには、現在、設定ファイルが付属しています。この設定ファイルを使用すれば、Zypperの動作を(システム全体またはユーザ固有のでどちらかで)永続的に変更できます。システム全体に渡って変更する場合は、<filename>/etc/zypp/zypper.conf</filename>を編集します。ユーザ固有に変更する場合は、<filename>~/.zypper.conf</filename>を編集します。<filename>~/.zypper.conf</filename>がまだ存在していない場合は、テンプレートとして<filename>/etc/zypp/zypper.conf</filename>を使用できます。このテンプレートを<filename>~/.zypper.conf</filename>にコピーして、好みに合わせて調整してください。利用できるオプションのヘルプについては、ファイル内のコメントを参照してください。
  </para>
 </sect2>

 <sect2 xml:id="sec-zypper-trouble">
  <title>トラブルシューティング</title>
  <para>
   設定済みのリポジトリからのパッケージへのアクセスに問題がある場合(たとえば、特定のパッケージがリポジトリの1つに存在することを知っていても、Zypperでそのパッケージを見つけられない場合など)は、次のコマンドでリポジトリを更新すると有効なことがあります。
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper refresh</screen>
  <para>
   それも役に立たない場合は、次のコマンドを試してください。
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper refresh -fdb</screen>
  <para>
   このコマンドは、生メタデータの強制ダウンロードを含むデータベースの完全な更新と再構築を強制します。
  </para>
 </sect2>

 <sect2 xml:id="sec-zypper-rollback">
  <title>BtrfsファイルシステムでのZypperロールバック機能</title>
  <para>
   ルートパーティションでBtrfsファイルシステムが使用され、<command>snapper</command>がインストールされている場合に、ファイルシステムに対する変更をコミットして適切なファイルシステムスナップショットを作成すると、Zypperは自動的に<command>snapper</command>を呼び出します。これらのスナップショットは、Zypperによって行われた変更を元に戻す場合に使用できます。詳細については、<xref linkend="cha-snapper"/>を参照してください。
  </para>
 </sect2>

 <sect2 xml:id="sec-zypper-more">
  <title>詳細情報</title>
  <para>
   コマンドラインからのソフトウェア管理の詳細については、「<command>zypper help</command>」、「<command>zypper help </command>
   <replaceable>COMMAND</replaceable>」と入力するか、<command>zypper(8)</command>のマニュアルページを参照してください。詳しいコマンドリファレンス、最も重要なコマンドの<literal>早見表</literal>、およびスクリプトやアプリケーションにおけるZypperの詳しい使い方については、<link xlink:href="https://en.opensuse.org/SDB:Zypper_usage"/>を参照してください。<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>の最新バージョンにおけるソフトウェアの変更点のリストについては、<link xlink:href="https://en.opensuse.org/openSUSE:Zypper_versions"/>を参照してください。
  </para>
 </sect2>
</sect1>
