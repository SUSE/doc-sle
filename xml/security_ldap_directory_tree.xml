<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec-security-ldap-tree">

  <title>Structure of an LDAP directory tree</title>
<!--
  taroth 2019-02-27: acc. to wbrown the content of this section is still correct,
  but the section should be revised in the future - for input, see
  https://fy.blackhats.net.au/blog/html/pages/ldap_guide_part_1_foundations.html
-->
   <para>
   This section introduces the layout of an LDAP directory tree, and provides
   the basic terminology used with regard to LDAP. <phrase os="sles;osuse">If
    you are familiar with LDAP, read on at <xref linkend="sec-security-ldap-server"/>.
   </phrase>
  </para>

  <para>
   An LDAP directory has a tree structure. All entries (called objects) of
   the directory have a defined position within this hierarchy. This
   hierarchy is called the <emphasis>directory information tree</emphasis>
   (DIT). The complete path to the desired entry, which unambiguously
   identifies it, is called the <emphasis>distinguished name</emphasis> or
   DN. An object in the tree is identified by its <emphasis>relative distinguished
   name</emphasis> (RDN). The distinguished name is built from the RDNs of all
   entries on the path to the entry.
  </para>

  <para>
   The relations within an LDAP directory tree become more evident in the
   following example, shown in <xref linkend="fig-ldap-tree"/>.
  </para>

  <figure xml:id="fig-ldap-tree">
   <title>Structure of an LDAP directory</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ldap_tree.svg" width="85%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ldap_tree.png" width="85%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   The complete diagram is a fictional directory information tree. The
   entries on three levels are depicted. Each entry corresponds to one box
   in the image. The complete, valid <emphasis>distinguished name</emphasis>
   for the fictional employee <systemitem class="username">Geeko
   Linux</systemitem>, in this case, is <literal>cn=Geeko
   Linux,ou=doc,dc=example,dc=com</literal>. It is composed by adding the
   RDN <literal>cn=Geeko Linux</literal> to the DN of the preceding entry
   <literal>ou=doc,dc=example,dc=com</literal>.
  </para>

<!-- ke: yes, these things are called "Schema" -->

  <para>
   The types of objects that can be stored in the DIT are globally
   determined following a <emphasis>Schema</emphasis>. The type of an object
   is determined by the <emphasis>object class</emphasis>. The object class
   determines what attributes the relevant object must or may be assigned.
   The Schema contains all object classes and attributes which can be used by
   the LDAP server. Attributes are a structured data type. Their syntax, ordering
   and other behavior is defined by the Schema. LDAP servers supply a core set of
   Schemas which can work in a broad variety of environments. If a custom Schema
   is required, you can upload it to an LDAP server.
  </para>

  <para>
   <xref linkend="tab-ldap-schema"/> offers a small overview of the object
   classes from <filename>00core.ldif</filename> and
   <filename>06inetorgperson.ldif</filename> used in the example, including
   required attributes (Req. Attr.) and valid attribute values. After installing
   &ds389;, these can be found in
   <filename>/usr/share/dirsrv/schema</filename>.
<!-- intro abbrev "Req. Attr." too shorten the table header -->
  </para>

  <table xml:id="tab-ldap-schema">
   <title>Commonly used object classes and attributes</title>
   <tgroup cols="4">
    <colspec colname="c1" colwidth="30*"/>
    <colspec colname="c2" colwidth="40*"/>
    <colspec colname="c3" colwidth="16*"/>
    <colspec colname="c4" colwidth="14*"/>
    <thead>
     <row>
      <entry>
       <para>
        Object Class
       </para>
      </entry>
      <entry>
       <para>
        Meaning
       </para>
      </entry>
      <entry>
       <para>
        Example Entry
       </para>
      </entry>
      <entry>
       <para>
        Req. Attr.
       </para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>
        <literal>domain</literal>
       </para>
      </entry>
      <entry>
       <para>
        name components of the domain
       </para>
      </entry>
      <entry>
       <para>
        example
       </para>
      </entry>
      <entry>
       <para>
        displayName
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <literal>organizationalUnit</literal>
       </para>
      </entry>
      <entry>
       <para>
        organizational unit
       </para>
      </entry>
      <entry>
       <para>
        <literal>documentationdept</literal>
       </para>
      </entry>
      <entry>
       <para>
        <literal>ou</literal>
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <literal>nsPerson</literal>
       </para>
      </entry>
      <entry>
       <para>
        person-related data for the
        intranet or Internet
       </para>
      </entry>
      <entry>
       <para>
        <literal>&exampleuserfull;</literal>
       </para>
      </entry>
      <entry>
       <para>
        <literal>cn</literal>
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   <xref linkend="aus-ldap-schema-help"/> shows an excerpt from a Schema
   directive with explanations.
  </para>

  <example xml:id="aus-ldap-schema-help">
   <title>Excerpt from CN=schema</title>
<screen>attributetype (1.2.840.113556.1.2.102 NAME 'memberOf' <co xml:id="co-ldap-schema-core-att-type"/>
       DESC 'Group that the entry belongs to' <co xml:id="co-ldap-schema-core-desc"/>
       SYNTAX 1.3.6.1.4.1.1466.115.121.1.12 <co xml:id="co-ldap-schema-core-syntax"/>
       X-ORIGIN 'Netscape Delegated Administrator') <co xml:id="co-ldap-schema-core-xorigin"/>

objectclass (2.16.840.1.113730.3.2.333 NAME 'nsPerson' <co xml:id="co-ldap-schema-core-oc"/>
       DESC 'A representation of a person in a directory server' <co xml:id="co-ldap-schema-core-desc-oc"/>
       SUP top STRUCTURAL <co xml:id="co-ldap-schema-core-sup-oc"/>
       MUST ( displayName $ cn ) <co xml:id="co-ldap-schema-core-must-oc"/>
       MAY ( userPassword $ seeAlso $ description $ legalName $ mail \
             $ preferredLanguage ) <co xml:id="co-ldap-schema-core-may-oc"/>
       X-ORIGIN '389 Directory Server Project'
  ...</screen>
  </example>
  <calloutlist>
   <callout arearefs="co-ldap-schema-core-att-type">
    <para>
     The name of the attribute, its unique <emphasis>object
     identifier</emphasis> (OID, numerical), and the abbreviation of the
     attribute.
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-desc">
    <para>
     A brief description of the attribute with <literal>DESC</literal>. The
     corresponding RFC, on which the definition is based, may also mentioned
     here.
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-syntax">
    <para>
      The type of data that can be held in the attribute. In this case, it is a
      case-insensitive directory string.
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-xorigin">
    <para>
     The source of the schema element (for example, the name of the project).
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-oc">
    <para>
     The definition of the object class <literal>nsPerson</literal> begins with
     an OID and the name of the object class (like the definition of
     the attribute).
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-desc-oc">
    <para>
     A brief description of the object class.
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-sup-oc">
    <para>
     The <literal>SUP top</literal> entry indicates that this object class
     is not subordinate to another object class.
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-must-oc">
    <para>
     With <literal>MUST</literal>, list all attribute types that must be used
     with an object of the type
     <literal>nsPerson</literal>.
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-may-oc">
    <para>
     With <literal>MAY</literal>, list all attribute types that are optionally
     permitted with this object class.
    </para>
   </callout>
  </calloutlist>
 </sect1>
