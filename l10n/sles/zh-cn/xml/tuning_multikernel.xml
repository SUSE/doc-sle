<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="tuning_multikernel.xml" version="5.0" xml:id="cha-tuning-multikernel">
 <title>安装多个内核版本</title>
 <info>
  <abstract>
   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 支持多个内核版本的平行安装。安装第二个内核时，将自动创建一个引导项和一个 initrd，因此无需做进一步的手动配置。重引导计算机时，新添加的内核可用作附加的引导参数。
   </para>

   <para>
    使用此功能，您可以安全测试内核更新，同时，还始终能够回退到已经过验证的前一内核。执行此操作时，请不要使用更新工具（例如 YaST 联机更新或更新小程序），而应该遵照本章中所述的过程。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <warning os="sles;sled">

  <title>支持权利</title>
  <para>
   请注意，如果您安装自行编译的内核或第三方内核，则会失去所有的支持权利。仅支持 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 随附的内核，以及通过官方更新渠道为 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 提供的内核。
  </para>
 </warning>
 <tip>
  <title>检查引导加载程序配置内核</title>
  <para>
   建议在安装其他内核后检查您的引导加载程序配置，以设置您选择的默认引导项。有关更多信息，请参见<xref linkend="sec-grub2-yast2-config"/>。
  </para>
 </tip>
 <sect1 xml:id="sec-tuning-multikernel-enable">
  <title>启用和配置多版本支持</title>



  <para>
   从 <phrase os="sles;sled"> SUSE Linux Enterprise Server 12</phrase> 开始，系统默认支持安装软件包的多个版本（多版本支持）。要验证此设置，请按如下所示继续：
  </para>

  <procedure>
   <step>
    <para>
     以 <systemitem class="username">root</systemitem> 身份使用所选的编辑器打开 <filename>/etc/zypp/zypp.conf</filename>。
    </para>
   </step>
   <step>
    <para>
     搜索字符串 <literal>multiversion</literal>。如果为所有支持此功能的内核软件包启用多版本，以下行可能会取消注释：
    </para>
<screen>multiversion = provides:multiversion(kernel)</screen>
   </step>
   <step>
    <para>
     要对特定的内核类型限制多版本支持，请将逗号分隔的软件包名称列表添加到 <filename>/etc/zypp/zypp.conf</filename> 中的 <literal>multiversion</literal> 选项 — 例如
    </para>
<screen>multiversion = kernel-default,kernel-default-base,kernel-source
</screen>
   </step>
   <step>
    <para>
     保存所做的更改。
    </para>
   </step>
  </procedure>

  <warning>
   <title>内核模块软件包 (KMP)</title>
   <para>
    确保也为更新后的新内核安装了由供应商提供的必需的内核模块（内核模块软件包）。内核更新过程不会发出有关最终缺少内核模块的警告，因为系统上保留的旧内核仍能满足软件包要求。
   </para>
  </warning>

  <sect2 xml:id="sec-tuning-multikernel-enable-keep">
   <title>自动删除未使用的内核</title>
   <para>
    如果您经常测试已启用多版本支持的新内核，引导菜单很快就会变得无序。由于 <filename>/boot</filename> 分区的空间通常有限，因此，您还可能会遇到 <filename>/boot</filename> 溢出的问题。您可以使用 YaST 或 Zypper 手动删除未使用的内核版本（如下文所述），也可以将 <systemitem class="library">libzypp</systemitem> 配置为自动删除不再使用的内核。默认情况下不会删除内核。
   </para>
   <procedure>
    <step>
     <para>
      以 <systemitem class="username">root</systemitem> 身份使用所选的编辑器打开 <filename>/etc/zypp/zypp.conf</filename>。
     </para>
    </step>
    <step>
     <para>
      搜索字符串 <literal>multiversion.kernels</literal>，并通过取消注释对应的行来激活此选项。此选项将会使用包含以下值的逗号分隔列表：
     </para>
     <formalpara>
      <title><literal><replaceable>5.3.18-53.3</replaceable></literal>：</title>
      <para>
       保留具有指定版本号的内核
      </para>
     </formalpara>
     <formalpara>
      <title><literal>latest</literal>：</title>
      <para>
       保留具有最高版本号的内核
      </para>
     </formalpara>
     <formalpara>
      <title><literal>latest-N</literal>：</title>
      <para>
       保留版本号排在第 N 位的内核
      </para>
     </formalpara>
     <formalpara>
      <title><literal>running</literal>：</title>
      <para>
       保留正在运行的内核
      </para>
     </formalpara>
     <formalpara>
      <title><literal>oldest</literal>：</title>
      <para>
       保留具有最低版本号的内核（最初 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 随附的内核）
      </para>
     </formalpara>
     <formalpara>
      <title><literal>oldest+N</literal></title>
      <para>
       保留版本号排在倒数第 N 位的内核
      </para>
     </formalpara>
     <para>
      以下是一些示例
     </para>
     <variablelist>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,running</literal>
       </term>
       <listitem>
        <para>
         保留最新内核以及当前正在运行的内核。这相当于不启用多版本功能，不过，旧内核将会在<emphasis>下一次重引导后</emphasis>去除，而不是在安装后立即去除。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,latest-1,running </literal>
       </term>
       <listitem>
        <para>
         保留最新的两个内核，以及当前正在运行的内核。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,running,<replaceable>5.3.18-53.3</replaceable></literal>
       </term>
       <listitem>
        <para>
         保留最新的内核、当前正在运行的内核，以及 <replaceable>5.3.18-53.3</replaceable>。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
     <tip>
      <title>保留正在运行的内核</title>
      <para>
       除非您使用的是特殊的设置，否则始终将内核标记为 <literal>running</literal>。
      </para>
      <para>
       如果不保留正在运行的内核，系统在更新内核时会将其删除。而这意味着正在运行的内核的所有模块也会被删除，并且无法再装载。
      </para>
      <para>
       如果您决定不保留正在运行的内核，则在内核升级后始终应立即重引导，以免模块发生问题。
      </para>
     </tip>
    </step>
   </procedure>
  </sect2>
  <sect2 xml:id="sec-tuning-multikernel-deleteoldkernel">
   <title>用例：仅在重引导后删除旧内核</title>
   <para>
    您想要确保只在系统成功用新内核重引导之后才删除旧内核。
   </para>
   <para>
    更改 <filename>/etc/zypp/zypp.conf</filename> 中的下面一行：
   </para>
<screen>multiversion.kernels = latest,running</screen>
   <para>
    上面的参数告知系统要保留最新内核以及正在运行的内核（前提是两者不同）。
   </para>
  </sect2>

  <sect2 xml:id="sec-tuning-multikernel-fallback">
   <title>用例：保留较旧内核作为回退内核</title>
   <para>
    您想要保留一个或多个内核版本，以便有一个或多个<quote>备用的</quote>内核。
   </para>
   <para>
    如果您需要使用内核进行测试，则这样做可能十分有用。如果出现了故障（例如，您的计算机不能引导），您仍可使用一个或多个已知正常的内核版本。
   </para>
   <para>
    更改 <filename>/etc/zypp/zypp.conf</filename> 中的下面一行：
   </para>
<screen>multiversion.kernels = latest,latest-1,latest-2,running</screen>
   <para>
    安装新内核之后，当您重引导系统时，系统将保留三个内核：当前内核（配置为 <literal>latest,running</literal>）以及它的前两任（配置为 <literal>latest-1</literal> 和 <literal>latest-2</literal>）。
   </para>
  </sect2>

  <sect2 xml:id="sec-tuning-multikernel-specificversion">
   <title>用例：保留特定的内核版本</title>
   <para>
    您要执行定期系统更新和安装新的内核版本。但是，您还要编译自己的内核版本，并想要确保系统保留这些版本。
   </para>
   <para>
    更改 <filename>/etc/zypp/zypp.conf</filename> 中的下面一行：
   </para>
<screen>multiversion.kernels = latest,5.3.18-53.3,running</screen>
   <para>
    在安装新内核后重引导系统时，系统将保留两个内核：新的且正在运行的内核（配置为 <literal>latest,running</literal>），以及您自己编译的内核（配置为 <literal>5.3.18-53.3</literal>）。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-tuning-multikernel-yast">
  <title>使用 YaST 安装/去除多个内核版本</title>
  <para>
   可以使用 YaST 安装或去除多个内核：
  </para>
  <procedure>
   <step>
    <para>
     启动 YaST，然后通过<menuchoice>
     <guimenu>软件</guimenu> <guimenu> 软件管理</guimenu>
     </menuchoice>打开软件管理器。
    </para>
   </step>
   <step>
    <para>
     选择<menuchoice> <guimenu>视图</guimenu> <guimenu>软件包分类</guimenu>
     <guimenu>多版本软件包</guimenu> </menuchoice>，以列出能够提供多个版本的所有软件包。
    </para>
    <figure>
     <title>YaST 软件管理器：多版本视图</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_sw_multiversion.png" width="90%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="yast2_sw_multiversion.png" width="90%"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     在底部窗格的左侧选择一个软件包并打开其<guimenu>版本</guimenu>选项卡。
    </para>
   </step>
   <step>
    <para>
     要安装某个软件包，请单击它旁边的复选框。绿色选中标记表示已选择对应的软件包进行安装。
    </para>
    <para>
     要去除某个已安装的软件包（带有白色选中标记），请单击它旁边的复选框，直到出现红色的 <literal>X</literal>，这表示已选择去除该软件包。
    </para>
   </step>
   <step>
    <para>
     单击<guimenu>接受</guimenu>开始安装。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-tuning-multikernel-zypper">
  <title>使用 Zypper 安装/去除多个内核版本</title>
  <para>
   可以使用 <command>zypper</command> 安装或去除多个内核：
  </para>
  <procedure>
   <step>
    <para>
     使用命令 <command>zypper se -s &apos;kernel*&apos;</command> 显示所有可用内核软件包的列表：
    </para>
<screen><?dbsuse-fo font-size="7pt"?>

S  | Name                 | Type    | Version           | Arch   | Repository
---+----------------------+---------+-------------------+--------+------------------------------------------------------
i+ | kernel-default              | package | 5.14.21-150400.6.3              | x86_64 | SLE-Module-Basesystem15-SP4-Pool
   | kernel-default-base         | package | 5.14.21-150400.6.3.150400.22.27 | x86_64 | SLE-Module-Basesystem15-SP4-Pool
   | kernel-default-devel        | package | 5.14.21-150400.6.3              | x86_64 | SLE-Module-Basesystem15-SP4-Pool
   | kernel-devel                | package | 5.14.21-150400.6.4              | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-all         | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-amdgpu      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-ath10k      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-ath11k      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-atheros     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-bluetooth   | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-bnx2        | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-brcm        | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-chelsio     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-dpaa2       | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-i915        | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-intel       | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-iwlwifi     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-liquidio    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-marvell     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-media       | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-mediatek    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-mellanox    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-mwifiex     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-network     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-nfp         | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-nvidia      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-platform    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-prestera    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-qcom        | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-qlogic      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-radeon      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-realtek     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-serial      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-sound       | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-ti          | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-ueagle      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-usb-network | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
   | kernel-macros               | package | 5.14.21-150400.6.4              | noarch | SLE-Module-Basesystem15-SP4-Pool
</screen>
   </step>
   <step>
    <para>
     安装时指定确切的版本：
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper in kernel-default-5.3.18-53.3</screen>
   </step>
   <step>
    <para>
     卸装内核时，使用命令 <command>zypper se -si &apos;kernel*&apos;</command> 可以列出安装的所有内核，使用 <command>zypper rm</command> <replaceable>PACKAGENAME-VERSION</replaceable> 可以去除该软件包。
    </para>
   </step>
  </procedure>
 </sect1>
 
</chapter>
