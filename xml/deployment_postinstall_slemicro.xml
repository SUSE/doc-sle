<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha-postintall-registration"
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Post-deployment steps</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
  <abstract>
    <para>
      The chapter describes registration of &slema; and covers extensions available for &slema;.
    </para>
  </abstract>
 </info>
 <sect1 xml:id="sec-images-registration">
  <title>Registration</title>

  <para>
   Registering the system is possible from the command line using the
   <command>transactional-update register</command> command. For information that goes beyond the scope
   of this section, refer to the inline documentation with <command>SUSEConnect
   --help</command>
  </para>

  <procedure>
   <title>Product registration with SUSEConnect</title>
   <step>
    <para>
     To register &productname; with &scc;, run <command>transactional-update register</command>
     as follows:
    </para>
<screen>&prompt.root;transactional-update register -r <replaceable>REGISTRATION_CODE</replaceable> -e <replaceable>EMAIL_ADDRESS</replaceable></screen>
    <para>
     To register with a local registration server, additionally provide the URL
     to the server:
    </para>
<screen>&prompt.root;transactional-update register -r <replaceable>REGISTRATION_CODE</replaceable> -e <replaceable>EMAIL_ADDRESS</replaceable> \
--url "https://suse_register.&exampledomain;/"</screen>
    <para>
     Replace <replaceable>REGISTRATION_CODE</replaceable> with the registration
     code you received with your copy of &productname;. Replace
     <replaceable>EMAIL_ADDRESS</replaceable> with the e-mail address
     associated with the &suse; account you or your organization uses to manage
     subscriptions.
    </para>
   </step>
   <step>
    <para>
     &productname; is now registered.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-adding-extension">
  <title>Managing extensions</title>

  <para>
   &slema; supports the kernel live patching extension. Bear in mind that the
   extension might require an additional subscription.
  </para>

  <note>
   <title><literal>SUSE Linux Enterprise Live Patching</literal> availability</title>
   <para>
    The <literal>SUSE Linux Enterprise Live Patching</literal> extension is
    available only for the &x86; (except for the real-time kernel) and
    &zseries; architectures.
   </para>
  </note>

  <para>
   As the extension activation or deactivation is performed as a
   transactional-update and thus creates a new snapshot, you need to restart
   your system to boot to the new snapshot and apply the changes.
  </para>

  <sect2 xml:id="sec-slemicro-live-patching">
   <title>Activating <literal>SUSE Linux Enterprise Live Patching</literal></title>
   <para>
    If you need to activate the live patching extension, list available
    extensions by running:
   </para>
<screen>&prompt.root;transactional-update --quiet register -list-extensions</screen>
   <para>
    The output provides you with a command regarding how to activate the live patching
    extension:
   </para>
<screen>
&prompt.root;transactional-update register -p sle-module-live-patching/15.3/x86_64 \
  -r <replaceable>registration code</replaceable>
</screen>
   <para>
    After activating the <literal>SUSE Linux Enterprise Live Patching</literal>
    extension, configure <literal>libzypp</literal> in the
    <filename>/etc/zypp/zypp.conf</filename> file as follows:
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>multiversion = provides:multiversion(kernel)</literal></term>
     <listitem>
      <para>
       to keep the current kernel running while patching the system, otherwise
       you may get dependency conflicts while kernel updates are being applied.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>multiversion.kernels = latest</literal></term>
     <listitem>
      <para>
       after applying the live patch, a cleanup of kernels is performed in the
       new snapshot. If not set, the snapshot keeps the previous kernel and
       performs kernel updates also on the previous kernel.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    Additionally, set <literal>LIVEPATCH_KERNEL='always'</literal> in the
    <filename>/etc/sysconfig/livepatching</filename> file.
   </para>
   <note>
    <title>Matching version of the <literal>kernel-default-livepatch</literal> and kernel</title>
    <para>
     To ensure that the live patches will be installed even after the kernel
     upgrade, install the matching version of the
     <literal>kernel-default-livepatch</literal> package.
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-disable-live-patching">
   <title>Deactivating <literal>SUSE Linux Enterprise Live Patching</literal></title>
   <para>
    To deactivate the extension, run the following command:
   </para>
<screen>
&prompt.root;transactional-update register -d \
  -p sle-module-live-patching/15.3/x86_64
</screen>
  </sect2>
 </sect1>
</chapter>