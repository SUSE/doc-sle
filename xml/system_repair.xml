<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect2
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<sect2 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec.trouble.data.recover.rescue">
 <title>Using the Rescue System</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  There are several reasons a system could fail to come up and run properly. A
  corrupted file system following a system crash, corrupted configuration
  files, or a corrupted boot loader configuration are the most common ones.
 </para>
 <para>
  To help you to resolve these situations, &productname; contains a rescue
  system that you can boot. The rescue system is a small Linux system that can
  be loaded into a RAM disk and mounted as root file system, allowing you to
  access your Linux partitions from the outside. Using the rescue system, you
  can recover or modify any important aspect of your system.
 </para>
 <itemizedlist mark="bullet" spacing="normal">
  <listitem>
   <para>
    Manipulate any type of configuration file.
   </para>
  </listitem>
  <listitem>
   <para>
    Check the file system for defects and start automatic repair processes.
   </para>
  </listitem>
  <listitem>
   <para>
    Access the installed system in a <quote>change root</quote> environment.
   </para>
  </listitem>
  <listitem>
   <para>
    Check, modify, and re-install the boot loader configuration.
   </para>
  </listitem>
  <listitem>
   <para>
    Recover from a badly installed device driver or unusable kernel.
   </para>
  </listitem>
  <listitem>
   <para>
    Resize partitions using the parted command. Find more information about
    this tool at the GNU Parted Web site
    <link xlink:href="http://www.gnu.org/software/parted/parted.html"/>.
   </para>
  </listitem>
 </itemizedlist>
 <para>
  The rescue system can be loaded from various sources and locations. The
  simplest option is to boot the rescue system from the original installation
  medium.
 </para>
 <note os="sles" arch="zseries">
  <title>IBM &zseries; Starting the Rescue System</title>
  <para>
   On IBM &zseries; the installation system can be used for rescue purposes. To
   start the rescue system follow the instructions in
   <xref linkend="sec.zseries.rescue"/>.
  </para>
 </note>
 <procedure>
  <step>
   <para>
    Insert the installation medium into your DVD drive.
   </para>
  </step>
  <step>
   <para>
    Reboot the system.
   </para>
  </step>
  <step>
   <para>
    At the boot screen, press <keycap>F4</keycap> and choose
    <guimenu>DVD-ROM</guimenu>. Then choose <guimenu>Rescue System</guimenu>
    from the main menu.
   </para>
  </step>
  <step>
   <para>
    Enter <literal>root</literal> at the <literal>Rescue:</literal> prompt. A
    password is not required.
   </para>
  </step>
 </procedure>
 <procedure xml:id="proc.trouble.data.recover.rescue.network">
  <para>
   If your hardware setup does not include a DVD drive, you can boot the rescue
   system from a network source. The following example applies to a remote boot
   scenario&mdash;if using another boot medium, such as a DVD, modify the
   <filename>info</filename> file accordingly and boot as you would for a
   normal installation.
  </para>
  <step>
   <para>
    Enter the configuration of your PXE boot setup and add the lines
    <literal>install=<replaceable>PROTOCOL</replaceable>://<replaceable>INSTSOURCE</replaceable></literal>
    and <literal>rescue=1</literal>. If you need to start the repair system,
    use <literal>repair=1</literal> instead. As with a normal installation,
    <replaceable>PROTOCOL</replaceable> stands for any of the supported network
    protocols (NFS, HTTP, FTP, etc.) and <replaceable>INSTSOURCE</replaceable>
    for the path to your network installation source.
   </para>
  </step>
  <step>
   <para>
    Boot the system using <quote>Wake on LAN</quote><phrase os="sles;sled">, as
    described in <xref
    linkend="sec.deployment.prep_boot.wol"/></phrase>.
   </para>
  </step>
  <step>
   <para>
    Enter <literal>root</literal> at the <literal>Rescue:</literal> prompt. A
    password is not required.
   </para>
  </step>
 </procedure>
 <para>
  Once you have entered the rescue system, you can use the virtual consoles
  that can be reached with
  <keycombo><keycap function="alt"/><keycap>F1</keycap></keycombo> to
  <keycombo><keycap function="alt"/><keycap>F6</keycap></keycombo>.
 </para>
 <para>
  A shell and other useful utilities, such as the mount program, are
  available in the <filename>/bin</filename> directory. The
  <filename>/sbin</filename> directory contains important file and network
  utilities for reviewing and repairing the file system. This directory also
  contains the most important binaries for system maintenance, such as
  <command>fdisk</command>, <command>mkfs</command>, <command>mkswap</command>,
  <command>mount</command>, and <command>shutdown</command>,
  <command>ip</command> and <command>ss</command> for maintaining the network.
  The directory <filename>/usr/bin</filename> contains the vi editor, find,
  less, and SSH.
 </para>
 <para>
  To see the system messages, either use the command <command>dmesg</command>
  or view the system log with <command>journalctl</command>.
 </para>
 <sect3 xml:id="sec.trouble.data.recover.rescue.file">
  <title>Checking and Manipulating Configuration Files</title>
  <para>
   As an example for a configuration that might be fixed using the rescue
   system, imagine you have a broken configuration file that prevents the
   system from booting properly. You can fix this using the rescue system.
  </para>
  <procedure>
   <para>
    To manipulate a configuration file, proceed as follows:
   </para>
   <step>
    <para>
     Start the rescue system using one of the methods described above.
    </para>
   </step>
   <step>
    <para>
     To mount a root file system located under <filename>/dev/sda6</filename>
     to the rescue system, use the following command:
    </para>
<screen>mount /dev/sda6 /mnt</screen>
    <para>
     All directories of the system are now located under
     <filename>/mnt</filename>
    </para>
   </step>
   <step>
    <para>
     Change the directory to the mounted root file system:
    </para>
<screen>cd /mnt</screen>
   </step>
   <step>
    <para>
     Open the problematic configuration file in the vi editor. Adjust and save
     the configuration.
    </para>
   </step>
   <step>
    <para>
     Unmount the root file system from the rescue system:
    </para>
<screen>umount /mnt</screen>
   </step>
   <step>
    <para>
     Reboot the machine.
    </para>
   </step>
  </procedure>
 </sect3>
 <sect3 xml:id="sec.trouble.data.recover.rescue.filesystem">
  <title>Repairing and Checking File Systems</title>
  <para>
   Generally, file systems cannot be repaired on a running system. If you
   encounter serious problems, you may not even be able to mount your root file
   system and the system boot may end with a <quote>kernel panic</quote>. In
   this case, the only way is to repair the system from the outside. The system
   contains the utilities to check and repair the <literal>btrfs</literal>,
   <literal>ext2</literal>, <literal>ext3</literal>, <literal>ext4</literal>,
   <literal>xfs</literal>, <literal>dosfs</literal>, and <literal>vfat</literal>
   file systems. Look for the command <command>fsck.</command>
   <replaceable>FILESYSTEM</replaceable>, for example, if you need a file system
   check for <literal>btrfs</literal>, use <command>fsck.btrfs</command>.
  </para>
<!-- TODO: Add FATE#315126 -->
 </sect3>
 <sect3 xml:id="sec.trouble.data.recover.rescue.access">
  <title>Accessing the Installed System</title>
  <para>
   If you need to access the installed system from the rescue system, you need
   to do this in a <emphasis>change root</emphasis> environment. For example,
   to modify the boot loader configuration, or to execute a hardware
   configuration utility.
  </para>
  <para>
   To set up a change root environment based on the installed system, proceed
   as follows:
  </para>
  <procedure>
   <step>
    <tip>
     <title>Import LVM Volume Groups</title>
     <para>
      If you are using a LVM setup (refer to <xref os="sles"
       linkend="part.lvm"/><xref os="sled;osuse" linkend="sec.yast.system.lvm"/> for more
      general details), import all existing volume groups in order to be able to
      find and mount the device(s):
     </para>
<screen>&rootuser;vgimport -a</screen>
    </tip>
    <para>
     Run <command>lsblk</command> to check which node corresponds to the root
     partition. It is <filename>/dev/sda2</filename> in our example:
    </para>
<screen>lsblk
NAME        MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINT
sda           8:0    0 149,1G  0 disk
├─sda1        8:1    0     2G  0 part  [SWAP]
├─sda2        8:2    0    20G  0 part  /
└─sda3        8:3    0   127G  0 part
  └─cr_home 254:0    0   127G  0 crypt /home</screen>
   </step>
   <step>
    <para>
     Mount the root partition from the installed system:
    </para>
<screen>mount /dev/sda2 /mnt</screen>
   </step>
   <step>
    <para>
     Mount <filename>/proc</filename>, <filename>/dev</filename>, and
     <filename>/sys</filename> partitions:
    </para>
<screen>mount -t proc none /mnt/proc
mount --rbind /dev /mnt/dev
mount --rbind /sys /mnt/sys</screen>
   </step>
   <step>
    <para>
     Now you can <quote>change root</quote> into the new environment, keeping
     the <systemitem>bash</systemitem> shell:
    </para>
<screen>chroot /mnt /bin/bash</screen>
   </step>
   <step>
    <para>
     Finally, mount the remaining partitions from the installed system:
    </para>
<screen>mount -a</screen>
   </step>
   <step>
    <para>
     Now you have access to the installed system. Before rebooting the system,
     unmount the partitions with <command>umount</command> <option>-a</option>
     and leave the <quote>change root</quote> environment with
     <command>exit</command>.
    </para>
   </step>
  </procedure>
  <warning>
   <title>Limitations</title>
   <para>
    Although you have full access to the files and applications of the
    installed system, there are some limitations. The kernel that is running is
    the one that was booted with the rescue system, not with the change root
    environment. It only supports essential hardware and it is not possible to
    add kernel modules from the installed system unless the kernel versions are
    identical. Always check the version of the currently running (rescue)
    kernel with <command>uname -r</command> and then find out if a matching
    subdirectory exists in the <filename>/lib/modules</filename> directory in
    the change root environment. If yes, you can use the installed modules,
    otherwise you need to supply their correct versions on other media, such as
    a flash disk. Most often the rescue kernel version differs from the
    installed one &mdash; then you cannot simply access a sound card, for
    example. It is also not possible to start a graphical user interface.
   </para>
   <para>
    Also note that you leave the <quote>change root</quote> environment when
    you switch the console with
    <keycombo><keycap function="alt"/><keycap>F1</keycap></keycombo> to
    <keycombo><keycap function="alt"/><keycap>F6</keycap></keycombo>.
   </para>
  </warning>
 </sect3>
 <sect3 xml:id="sec.trouble.data.recover.rescue.grub">
  <title>Modifying and Re-installing the Boot Loader</title>
  <para>
   Sometimes a system cannot boot because the boot loader configuration is
   corrupted. The start-up routines cannot, for example, translate physical
   drives to the actual locations in the Linux file system without a working
   boot loader.
  </para>
  <para>
   To check the boot loader configuration and re-install the boot loader,
   proceed as follows:
  </para>
  <procedure>
   <step>
    <para>
     Perform the necessary steps to access the installed system as described in
     <xref linkend="sec.trouble.data.recover.rescue.access"/>.
    </para>
   </step>
   <step>
    <para>
     Check that the GRUB 2 boot loader is installed on the system. If not,
     install the package <systemitem>grub2</systemitem> and run
    </para>
<screen>grub2-install /dev/sda</screen>
   </step>
   <step>
    <para>
     Check whether the following files are correctly configured according to
     the &grub; configuration principles outlined in
     <xref linkend="cha.grub2"/> and apply fixes if necessary.
    </para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       <filename>/etc/default/grub</filename>
      </para>
     </listitem>
     <listitem>
      <para>
       <filename>/boot/grub2/device.map</filename> (optional file, only present
       if created manually)
      </para>
     </listitem>
     <listitem>
      <para>
       <filename>/boot/grub2/grub.cfg</filename> (this file is generated, do
       not edit)
      </para>
     </listitem>
     <listitem>
      <para>
       <filename>/etc/sysconfig/bootloader</filename>
      </para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     Re-install the boot loader using the following command sequence:
    </para>
<screen>grub2-mkconfig -o /boot/grub2/grub.cfg</screen>
   </step>
   <step>
    <para>
     Unmount the partitions, log out from the <quote>change root</quote>
     environment, and reboot the system:
    </para>
<screen>umount -a
exit
reboot</screen>
   </step>
  </procedure>
 </sect3>
 <sect3 xml:id="sec.trouble.data.recover.rescue.dud">
  <title>Fixing Kernel Installation</title>
  <para>
   A kernel update may introduce a new bug which can impact the operation of
   your system. For example a driver for a piece of hardware in your system may
   be faulty, which prevents you from accessing and using it. In this case,
   revert to the last working kernel (if available on the system) or install
   the original kernel from the installation media.
  </para>
  <tip>
   <title>How to Keep Last Kernels after Update</title>
   <para>
    To prevent failures to boot after a faulty kernel update, use the kernel
    multiversion feature and tell <systemitem>libzypp</systemitem> which
    kernels you want to keep after the update.
   </para>
   <para>
    For example to always keep the last two kernels and the currently running
    one, add
   </para>
<screen>multiversion.kernels = latest,latest-1,running</screen>
   <para>
    to the <filename>/etc/zypp/zypp.conf</filename> file. See
    <xref linkend="cha.tuning.multikernel"/> for more information.
   </para>
  </tip>
  <para>
   A similar case is when you need to re-install or update a broken driver for
   a device not supported by &productname;. For example when a hardware vendor
   uses a specific device, such as a hardware RAID controller, which needs a
   binary driver to be recognized by the operating system. The vendor typically
   releases a Driver Update Disk (DUD) with the fixed or updated version of the
   required driver.
  </para>
  <para>
   In both cases you need to access the installed system in the rescue mode and
   fix the kernel related problem, otherwise the system may fail to boot
   correctly:
  </para>
  <procedure>
   <step>
    <para>
     Boot from the &productname; installation media.
    </para>
   </step>
   <step>
    <para>
     If you are recovering after a faulty kernel update, skip this step. If you
     need to use a driver update disk (DUD), press <keycap>F6</keycap> to load
     the driver update after the boot menu appears, and choose the path or URL
     to the driver update and confirm with <guimenu>Yes</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Choose <guimenu>Rescue System</guimenu> from the boot menu and press
     <keycap function="enter"/>. If you chose to use DUD, you will be asked to
     specify where the driver update is stored.
    </para>
   </step>
   <step>
    <para>
     Enter <literal>root</literal> at the <literal>Rescue:</literal> prompt. A
     password is not required.
    </para>
   </step>
   <step>
    <para>
     Manually mount the target system and <quote>change root</quote> into the
     new environment. For more information, see
     <xref linkend="sec.trouble.data.recover.rescue.access"/>.
    </para>
   </step>
   <step>
    <para>
     If using DUD, install/re-install/update the faulty device driver package.
     Always make sure the installed kernel version exactly matches the version
     of the driver you are installing.
    </para>
    <para>
     If fixing faulty kernel update installation, you can install the original
     kernel from the installation media with the following procedure.
    </para>
    <substeps performance="required">
     <step>
      <para>
       Identify your DVD device with <command>hwinfo --cdrom</command> and
       mount it with <command>mount /dev/sr0 /mnt</command>.
      </para>
     </step>
     <step>
      <para>
       Navigate to the directory where your kernel files are stored on the DVD,
       for example <command>cd /mnt/suse/x86_64/</command>.
      </para>
     </step>
     <step>
      <para>
       Install required <systemitem>kernel-*</systemitem>,
       <systemitem>kernel-*-base</systemitem>, and
       <systemitem>kernel-*-extra</systemitem> packages of your flavor with the
       <command>rpm -i</command> command.
      </para>
     </step>
<!-- fs 2014-02-19:
     Commenting, since there is currently no convenient way to check this with
     GRUB 2 (rather than manually checking grub.cfg or looking into the YaST
     grub module

      <step>
       <para>
        After the installation finishes, check that a new menu entry
        relevant for the newly installed kernel was added to the boot loader
        configuration file. (<filename>/boot/grub/menu.lst</filename> for
        <systemitem>grub</systemitem>).
       </para>
      </step>
-->
    </substeps>
   </step>
   <step>
    <para>
     Update configuration files and reinitialize the boot loader if needed. For
     more information, see
     <xref linkend="sec.trouble.data.recover.rescue.grub"/>.
    </para>
   </step>
   <step>
    <para>
     Remove any bootable media from the system drive and reboot.
    </para>
   </step>
  </procedure>
 </sect3>
</sect2>
