<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.rmt_mirroring">
<!-- ==================================================================== -->
 <title>Mirroring Repositories on the &rmt; Server</title>
 <info/>
 <para>
  You can mirror the installation and update repositories on the &rmt;
  server. This way, you do not need to download updates on each machine, which saves time and bandwidth.
 </para>
 <important>
  <title>&sls; 11 Clients</title>
  <para>
   &rmt; does not support clients with &sls; versions 11 and below.
  </para>
 </important>
 <sect1 xml:id="sec.rmt_mirroring.credentials">
  <title>Mirroring Credentials</title>

  <para>
   Before you create a local mirror of the repositories, you need appropriate
   organization credentials. You can obtain the credentials from &scc;.
  </para>

  <para>
   To get the credentials from &scc;, follow these steps:
  </para>

  <procedure>
   <step>
    <para>
     Visit &scc; at <link xlink:href="http://scc.suse.com"/> and log in.
    </para>
   </step>
   <step>
    <para>
     If you are member of multiple organizations, chose the organization you
     want to work with from the sidebar on the left.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Organization</guimenu> in the top menu.
    </para>
   </step>
   <step>
    <para>
     Switch to the <guimenu>Organizational credentials</guimenu> section.
    </para>
   </step>
   <step>
    <para>
     To see the password, click <guimenu>Show password</guimenu>.
    </para>
   </step>
  </procedure>

  <para>
   The obtained credentials should be set with the &yast; &rmt; Server
   Configuration module or added directly to the
   <filename>/etc/rmt.conf</filename> file. For more information about the
   <filename>/etc/rmt.conf</filename> file, see
   <xref linkend="sec.rmt_config.rmtconf"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec.rmt_mirroring.synchronization">
  <title>Synchronizing Repository Metadata</title>
  <para>
   The local &rmt; database needs to be updated periodically with the
   information downloaded from &scc;. This includes available products
   and repositories.
  </para>
  <para>
   The synchronization is done with the &systemd; timer
   <literal>rmt-server-sync.timer</literal>. To view the status, for
   example the next running time, use <command>systemctl status</command>:
  </para>
<screen>&prompt.root;<command>systemctl status rmt-server-sync.timer</command>
● rmt-server-sync.timer - RMT Sync timer
   Loaded: loaded (/usr/lib/systemd/system/rmt-server-sync.timer; enabled; vendor preset: disabled)
   Active: active (waiting) since Fri 2018-06-22 04:22:34 EDT; 2h 34min ago
  Trigger: Sat 2018-06-23 03:53:00 EDT; 20h left

Jun 22 04:22:34 d31 systemd[1]: Started RMT Sync timer.</screen>
  <para>
   To update the &rmt; database manually, use the <command>rmt-cli sync</command>
   command. For details, see <xref linkend="sec.rmt.tools.rmt-cli.sync"/>.
  </para>
 </sect1>

 <sect1 xml:id="sec.rmt_mirroring.mirroring">
  <title>Mirroring Packages</title>
  <para>
   Packages for enabled repositories are mirrored on your &rmt; server.
   The download of the packages is done periodically but can also be
   triggered manually.
  </para>
  <para>
   The periodic mirroring is done by the &systemd; timer
   <literal>rmt-server-mirror.timer</literal>. To show the status, for
   example the next running time, use <command>systemctl
   status</command>:
  </para>
<screen>&prompt.root;<command>systemctl status rmt-server-mirror.timer</command>
● rmt-server-mirror.timer - RMT Mirror timer
   Loaded: loaded (/usr/lib/systemd/system/rmt-server-mirror.timer; enabled; vendor preset: disabled)
   Active: active (waiting) since Fri 2018-06-22 04:22:34 EDT; 2h 34min ago
  Trigger: Sat 2018-06-23 02:17:57 EDT; 19h left

Jun 22 04:22:34 d31 systemd[1]: Started RMT Mirror timer.</screen>
  <para>
   To update the mirrored packages manually, use the <command>rmt-cli
   mirror</command> command. For details, see <xref
   linkend="sec.rmt_tools.rmt-cli.mirror"/>.
  </para>
 </sect1>

 <sect1 xml:id="sec.rmt_mirroring.enable_disable">
  <title>Enabling and Disabling Mirroring of Repositories</title>
  <para>
   Repositories can be enabled or disabled individually or by
   stating a product. To enable or disable mirroring of repositories, you either
   need the product name or ID, or the repository name or ID. In
   general, enabling or disabling a product is desired, because this
   automatically enables or disables all repositories associated with
   the product.
  </para>
  <sect2 xml:id="sec.rmt_mirroring.enable_disable.product">
   <title>Using Products</title>
   <para>
    To enable or disable all repositories of a product, use the
    <command>rmt-cli product enable
    <replaceable>ID</replaceable></command> and <command>rmt-cli product
    disable <replaceable>ID</replaceable></command> commands. To
    retrieve an ID for a disabled but available product, use the
    <command>rmt-cli product list --all</command> command. To retrieve an
    ID for an enabled product, use the <command>rmt-cli product
    list</command> command.
   </para>
   <para>
    Example:
   </para>
<screen>&prompt.sudo;<command>rmt-cli products list --all</command>
+------+------------------+---------+--------------+----------------------+---------------+---------+---------------+
| ID   | Name             | Version | Architecture | Product string       | Release stage | Mirror? | Last mirrored |
+------+------------------+---------+--------------+----------------------+---------------+---------+---------------+
[...]
| 1743 | SUSE Package Hub | 15      | x86_64       | PackageHub/15/x86_64 | released      | false   |               |
[...]
+------+------------------+---------+--------------+----------------------+---------------+---------+---------------+

&prompt.sudo;<command>rmt-cli product enable 1743</command>
2 repo(s) successfully enabled.

&prompt.sudo;<command>rmt-cli product disable 1743</command>
2 repo(s) successfully disabled.</screen>
  </sect2>
  <sect2 xml:id="sec.rmt_mirroring.enable_disable.repository">
   <title>Using Repositories</title>
   <para>
    To enable or disable mirroring of specific repositories, use the
    <command>rmt-cli repo enable
    <replaceable>ID</replaceable></command> and <command>rmt-cli repo
    disable <replaceable>ID</replaceable></command> commands. To
    retrieve an ID for a disabled but available repository, use the
    <command>rmt-cli repo list --all</command> command. To retrieve an
    ID for an enabled repository, use the <command>rmt-cli repo
    list</command> command.
   </para>
   <para>
    Example:
   </para>
<screen>&prompt.sudo;<command>rmt-cli repo list --all</command>
+--------+-------------------------+-------------------------------------------+------------+---------+---------------+
| SCC ID | Name                    | Description                               | Mandatory? | Mirror? | Last mirrored |
+--------+-------------------------+-------------------------------------------+------------+---------+---------------+
[...]
| 3061   | SUSE-PackageHub-15-Pool | SUSE-PackageHub-15-Pool for sle-15-x86_64 | true       | false   |               |
[...]
+--------+-------------------------+-------------------------------------------+------------+---------+---------------+

&prompt.sudo;<command>rmt-cli repo enable 3061</command>
Repository successfully enabled.

&prompt.sudo;<command>rmt-cli repo disable 3061</command>
Repository successfully disabled.</screen>
  </sect2>
 </sect1>

 <sect1 xml:id="sec.rmt_mirroring.delete">
  <title>Deleting Mirrored Data</title>
  <para>
   After you disable mirroring of a repository or product as described in <xref linkend="sec.rmt_mirroring.enable_disable"/>, the mirrored data still remains on your local hard disk. This includes the mirrored RPM packages.
   To remove the data, manually remove the corresponding directory:
  </para>
  <screen>&prompt.sudo;<command>rm -r /usr/share/rmt/public/repo/SUSE/Products/<replaceable>MODULE</replaceable>/<replaceable>VERSION</replaceable>/<replaceable>ARCHITECTURE</replaceable>/</command></screen>
 </sect1>

 <sect1 xml:id="sec.rmt_mirroring.custom_repository">
  <title>Adding Custom Repositories</title>
  <para>
   You can mirror custom repositories with the &rmt;
   server. These repositories are not provided by the &scc;.
   Repositories can be from the &obs;, from third party vendors, or
   created with <command>createrepo</command>.
  </para>
  <para>
   Custom repositories can be attached to products. This makes allows
   you to directly connect several repositories on a client registered
   to the &rmt; server.
  </para>
  <para>
   The following example procedure illustrates the mirroring of a
   third-party repository.
  </para>
  <procedure>
   <step>
    <para>
     Add the remote repository to the &rmt; server. Replace <replaceable>URL</replaceable> with the URL to the repository.
     Replace <replaceable>NAME</replaceable> with a name of your choice for the repository.
    </para>
    <screen>&prompt.root;<command>rmt-cli repos custom add <replaceable>URL</replaceable> <replaceable>NAME</replaceable></command></screen>
   </step>
   <step>
    <para>
     List all custom repositories to get the ID of the new repository.
    </para>
    <screen>&prompt.root;<command>rmt-cli repos custom list</command></screen>
   </step>
   <step>
    <para>
     Optionally attach the new custom repository to a product. For
     example, if the new custom repository is required by all desktop
     clients, it can be attached to the <literal>&sled;</literal> product.
    </para>
    <screen>&prompt.root;<command>rmt-cli repos custom attach <replaceable>REPOSITORY_ID</replaceable> <replaceable>PRODUCT_ID</replaceable></command></screen>
    <para>
     Replace <replaceable>REPOSITORY_ID</replaceable> with the ID of
     the new custom repository. Replace
     <replaceable>PRODUCT_ID</replaceable> with the ID of a product you
     want the repository attached to. If you need to retrieve the
     <replaceable>PRODUCT_ID</replaceable>, use the command
     <command>rmt-cli products list --all</command>.
    </para>
   </step>
   <step>
    <para>
     Enable mirroring of the new custom repository.
    </para>
    <screen>&prompt.root;<command>rmt-cli repos custom enable <replaceable>REPOSITORY_ID</replaceable></command></screen>
   </step>
  </procedure>
  <para>
   To get a list of all available custom repositories commands, see
   <xref linkend="sec.rmt_tools.rmt-cli.repos" />.
  </para>
 </sect1>

 <sect1 xml:id="sec.rmt_mirroring.export_import">
  <title>Exporting and Importing Repositories</title>
  <para>
   &rmt; has built-in functions to import and export data about
   available repositories and the mirrored packages. For example, this
   can be used to speed up the setup of a new &rmt; server by locally
   copying already mirrored RPM packages.
  </para>
  <para>
   Another use case is the <emphasis>offline mode</emphasis>. It allows
   transferring data to a disconnected &rmt; server, for example to
   provide updates to computers in an air-gapped network.
  </para>
  <para>
   The following procedure describes the transfer of data and mirrored
   RPMs between two &rmt; servers with a USB drive. The server
   <literal>sun</literal> is connected to the &scc;, while
   <literal>sirius</literal> is a server in an air-gapped network.
  </para>
  <procedure>
   <step>
    <para>
     Log in on the server <literal>sun</literal>.
    </para>
<screen>&prompt.root.sun;<command>rmt-cli sync</command>
&prompt.root.sun;<command>rmt-cli mirror</command></screen>
   </step>
   <step>
    <para>
     Connect a USB drive, assumed to be <filename>/dev/sda</filename> and mount it, for example in
     <filename>/mnt/external</filename>.
    </para>
    <screen>&prompt.root.sun;<command>mount /dev/sdb1 /mnt/external</command></screen>
   </step>
   <step>
    <substeps>
     <step>
      <para>
       Export the data about available repositories and products.
      </para>
      <screen>&prompt.root.sun;<command>rmt-cli export data /mnt/external/</command></screen>
     </step>
     <step>
      <para>
       Export the list of enabled repositories. The exported file is
       required for exporting the repositories in the next step.
      </para>
      <screen>&prompt.root.sun;<command>rmt-cli export settings /mnt/external/</command></screen>
     </step>
     <step>
      <para>
       Export mirrored RPM packages. Depending on the size of mirrored
       repositories, this can take a long time.
      </para>
      <screen>&prompt.root.sun;<command>rmt-cli export repos /mnt/external/</command></screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Unmount and unplug the disk from <literal>sun</literal> and go to
     <literal>sirius</literal>.
    </para>
    <screen>&prompt.root.sun;<command>umount /mnt/external</command></screen>
   </step>
   <step>
    <para>
     Connect the USB drive to <literal>sirius</literal> and
     mount it in <filename>/mnt/external</filename>.
    </para>
    <screen>&prompt.root.sirius;<command>mount /dev/sdb1 /mnt/external</command></screen>
   </step>
   <step>
    <substeps>
     <step>
      <para>
       Import the meta data about available repositories and products.
      </para>
      <screen>&prompt.root.sirius;<command>rmt-cli import data /mnt/external/</command></screen>
     </step>
     <step>
      <para>
       Import mirrored RPM packages. Depending on the size of mirrored
       repositories, this can take a long time.
      </para>
      <screen>&prompt.root.sirius;<command>rmt-cli import repos /mnt/external/</command></screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Enable repositories as required on the <literal>sirius</literal>.
     For details, see <xref linkend="sec.rmt_mirroring.enable_disable"
     />.
    </para>
   </step>
  </procedure>
 </sect1>
</chapter>
