<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha.adm.sudo"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>sudo <!-- TODO: Better title --></title>
  <info>
    <abstract>
      <para>
          <quote>With great power comes great responsibility</quote>:
          <command>sudo</command> provides the means to only
          use the power of the super user when needed.
      </para>
    </abstract>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker></dm:bugtracker>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>

  <sect1 xml:id="sec.adm.sudo.intro">
    <title>What is <command>sudo</command>?</title>
    <para>
Many commands and system utilities need to be run as &rootuser;
to modify files and/or perform tasks that only the super user is allowed to.

For security purposes and to avoid running dangerous commands accidentially,
it is generally disregarded to log in as &rootuser; directly.
Instead, it is recommended to work as a normal, unprivileged, user and
use the <command>sudo</command> command to run commands with elevated privileges.
    </para>
  </sect1>

  <sect1 xml:id="sec.adm.sudo.usage">
    <title>Basic <command>sudo</command> usage</title>
    <sect2>
      <title>Running a single command</title>
      <para>
        Logged in as normal user, you can run any command as &rootuser; by prepending it with <command>sudo</command>.
        It will prompt for the root password and, if authenticated sucessfully, run the command as &rootuser;:
        <screen>
          &prompt.user;id -un
          tux
          &prompt.user;sudo id -un
          root's password:<co xml:id="sudo.usage.pw"/>
          root
          &prompt.user;id -un
          tux<co xml:id="sudo.usage.after"/>
          &prompt.user;sudo id -un
          <co xml:id="sudo.usage.nopw"/>
          root
        </screen>
        <calloutlist>
          <callout arearefs="sudo.usage.pw">
            <para>The password is not shown during input, neither as clear text nor as bullets.</para>
          </callout>
          <callout arearefs="sudo.usage.after">
            <para>Only the single command is run with elevated privileges, those after <command>sudo</command>
            are run as normal user again.</para>
          </callout>
          <callout arearefs="sudo.usage.nopw">
            <para>For a limited amount of time you do not need to enter the &rootuser; password again.</para>
          </callout>
        </calloutlist>
      </para>
    </sect2>

    <sect2>
      <title>Starting a shell</title>
      <para>
        Having to prepend <command>sudo</command> to every command can be cumbersome.
        While you can specify a shell as a command: <command>sudo bash</command>,
        there are two options specifically for this purpose.

        <variablelist>
          <varlistentry>
            <term>
              <literal>sudo -s (&lt;command&gt;)</literal>
            </term>
            <listitem>
              <para>
                Starts a shell specified by the <envar>SHELL</envar> environment variable or the target user's settings.
                If a command is given, it is passed to the shell (with the <option>-c</option> option),
                else the shell is run in interactive mode.
              </para>
              <screen>
                <prompt>&exampleuser;:~ &gt; </prompt>sudo -i
                root's password:
                <!-- FIXME: Use entity here and below! 
                --><prompt>root:/home/tux # </prompt>exit
                <prompt>&exampleuser;:~ &gt; </prompt>
              </screen>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>
              <literal>sudo -i (&lt;command&gt;)</literal>
            </term>
            <listitem>
              <para>
                Like <option>-s</option>, but start the shell as login shell.
                This means that the shell's startup files (<filename>.profile</filename> etc.) are read
                and the current working directory is set to the target user's <envar>HOME</envar>.
              </para>
              <screen>
                <prompt>&exampleuser;:~ &gt; </prompt>sudo -i
                root's password:
                <prompt>root:~ # </prompt>exit
                <prompt>&exampleuser;:~ &gt; </prompt>
              </screen>
            </listitem>
          </varlistentry>
        </variablelist>
        
        Another reason for running a command with a shell is to make use of command redirection:
        
        
      </para>
    </sect2>
  </sect1>

  <sect1>
    <title>Advanced use cases and configuration</title>
    <sect2>
      <title>The <filename>/etc/sudoers</filename> file</title>
      <para>
        The main configuration file for <command>sudo</command> 
      </para>
    </sect2>

    <sect2>
      <title>Environment variables</title>
      <para>By default, <command>sudo</command> does not propagate environment variables:
        <screen>
          &prompt.user;ENVVAR=test env | grep ENVVAR
          ENVVAR=test
          &prompt.user;ENVVAR=test sudo env | grep ENVVAR
          root's password:
          <co xml:id="sudo.env.novar"/>
          &prompt.user;
        </screen>
        <calloutlist>
          <callout arearefs="sudo.env.novar">
            <para>
              The empty output shows that the environment variable <envar>ENVVAR</envar>
              did not exist in the context of the command run with <command>sudo</command>.
            </para>
          </callout>
        </calloutlist>
        </para>
    </sect2>

    <sect2>
      <title>Use case: <command>sudo</command> without &rootuser; password</title>
      <para>
        In some scenarios it is favourable
      </para>
    </sect2>
  </sect1>
    
  <sect1 xml:id="sec.adm.sudo.moreinfo">
    <title>More Information</title>

    <para>
    A quick overview about the available commandline switches can be retrieved
    by <command>sudo --help</command>. An explanation and other important information
    can be found in the man page: <command>man sudo</command>.
    More about this topic can be found in the following list:
    </para>
    <!-- TODO: List. -->
  </sect1>
</chapter>
