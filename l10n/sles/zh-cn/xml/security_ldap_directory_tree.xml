<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="security_ldap_directory_tree.xml" version="5.0" xml:id="sec-security-ldap-tree">
 <info>
  <title>LDAP 目录树的结构</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

   <para>
   本节介绍 LDAP 目录树的布局，并提供 LDAP 相关的基本术语。<phrase os="sles;osuse">如果您熟悉 LDAP，请继续阅读<xref linkend="sec-security-ldap-server"/>。</phrase>
  </para>

  <para>
   LDAP 目录具有树形结构。目录中的所有项（称为对象）在此层次结构中都有确定的位置。此层次结构称为<emphasis>目录信息树</emphasis> (DIT)。所需项的完整路径（可以明确标识该项）称为<emphasis>判别名</emphasis> (DN)。树中的对象由其<emphasis>相对判别名</emphasis> (RDN) 标识。判别名是基于项路径中的所有项的 RDN 构建的。
  </para>

  <para>
   LDAP 目录树中的关系在下例中尤为明显，如<xref linkend="fig-ldap-tree"/>所示。
  </para>

  <figure xml:id="fig-ldap-tree">
   <title>LDAP 目录的结构</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ldap_tree.svg" width="85%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ldap_tree.png" width="85%"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   完整的图是一个虚构的目录信息树。其中描述了三个层次上的项。每个项对应于图中的一个框。在本例中，虚构员工 <systemitem class="username">Geeko
   Linux</systemitem> 的完整有效<emphasis>判别名</emphasis>为 <literal>cn=Geeko
   Linux,ou=doc,dc=example,dc=com</literal>。该名称是通过将 RDN <literal>cn=Geeko Linux</literal> 添加到前置项 <literal>ou=doc,dc=example,dc=com</literal> 的 DN 来构成的。
  </para>



  <para>
   可储存在 DIT 中的对象类型是按照<emphasis>纲要</emphasis>全局确定的。对象类型由<emphasis>对象类</emphasis>决定。对象类确定必须或可以指派给相关对象的属性。纲要包含 LDAP 服务器可以使用的所有对象类和属性。属性是结构化数据类型。其语法、顺序和其他行为由纲要定义。LDAP 服务器会提供一组可在各种环境中工作的核心纲要。如果您需要使用自定义纲要，可以将其上载到 LDAP 服务器。
  </para>

  <para>
   <xref linkend="tab-ldap-schema"/> 提供了示例中所用 <filename>00core.ldif</filename> 和 <filename>06inetorgperson.ldif</filename> 中的对象类的简单概览，包括必需的属性（必需属性）和有效的属性值。安装 389 Directory Server 后，可以在 <filename>/usr/share/dirsrv/schema</filename> 中找到这些项。

  </para>

  <table xml:id="tab-ldap-schema">
   <title>常用对象类和属性</title>
   <tgroup cols="4">
    <colspec colname="c1" colwidth="30*"/>
    <colspec colname="c2" colwidth="40*"/>
    <colspec colname="c3" colwidth="16*"/>
    <colspec colname="c4" colwidth="14*"/>
    <thead>
     <row>
      <entry>
       <para>
        对象类
       </para>
      </entry>
      <entry>
       <para>
        含义
       </para>
      </entry>
      <entry>
       <para>
        示例项
       </para>
      </entry>
      <entry>
       <para>
        必需属性
       </para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>
        <literal>domain</literal>
       </para>
      </entry>
      <entry>
       <para>
        域的名称组成部分
       </para>
      </entry>
      <entry>
       <para>
        示例
       </para>
      </entry>
      <entry>
       <para>
        displayName
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <literal>organizationalUnit</literal>
       </para>
      </entry>
      <entry>
       <para>
        组织单元
       </para>
      </entry>
      <entry>
       <para>
        <literal>documentationdept</literal>
       </para>
      </entry>
      <entry>
       <para>
        <literal>ou</literal>
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <literal>nsPerson</literal>
       </para>
      </entry>
      <entry>
       <para>
        内部网或互联网中与个人相关的数据
       </para>
      </entry>
      <entry>
       <para>
        <literal>Tux Linux</literal>
       </para>
      </entry>
      <entry>
       <para>
        <literal>cn</literal>
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   <xref linkend="aus-ldap-schema-help"/>显示了某个纲要指令的摘录及其解释。
  </para>

  <example xml:id="aus-ldap-schema-help">
   <title>CN=schema 的摘录</title>
<screen>attributetype (1.2.840.113556.1.2.102 NAME 'memberOf' <co xml:id="co-ldap-schema-core-att-type"/>
       DESC 'Group that the entry belongs to' <co xml:id="co-ldap-schema-core-desc"/>
       SYNTAX 1.3.6.1.4.1.1466.115.121.1.12 <co xml:id="co-ldap-schema-core-syntax"/>
       X-ORIGIN 'Netscape Delegated Administrator') <co xml:id="co-ldap-schema-core-xorigin"/>

objectclass (2.16.840.1.113730.3.2.333 NAME 'nsPerson' <co xml:id="co-ldap-schema-core-oc"/>
       DESC 'A representation of a person in a directory server' <co xml:id="co-ldap-schema-core-desc-oc"/>
       SUP top STRUCTURAL <co xml:id="co-ldap-schema-core-sup-oc"/>
       MUST ( displayName $ cn ) <co xml:id="co-ldap-schema-core-must-oc"/>
       MAY ( userPassword $ seeAlso $ description $ legalName $ mail \
             $ preferredLanguage ) <co xml:id="co-ldap-schema-core-may-oc"/>
       X-ORIGIN '389 Directory Server Project'
  ...</screen>
  </example>
  <calloutlist>
   <callout arearefs="co-ldap-schema-core-att-type">
    <para>
     属性的名称、其唯一<emphasis>对象标识符</emphasis>（OID，数字格式）和属性的缩写。
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-desc">
    <para>
     通过 <literal>DESC</literal> 对该属性提供的简要说明。在此还可以指出定义所基于的相应 RFC。
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-syntax">
    <para>
      可保存在该属性中的数据类型。在本例中，它是一个不区分大小写的目录字符串。
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-xorigin">
    <para>
     纲要元素（例如项目的名称）的来源。
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-oc">
    <para>
     对象类 <literal>nsPerson</literal> 的定义以 OID 以及该对象类的名称开头（与属性的定义类似）。
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-desc-oc">
    <para>
     对象类的简要说明。
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-sup-oc">
    <para>
     <literal>SUP top</literal> 项指示此对象类不从属于另一个对象类。
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-must-oc">
    <para>
     <literal>MUST</literal> 列出必须对 <literal>nsPerson</literal> 类型的对象使用的所有属性类型。
    </para>
   </callout>
   <callout arearefs="co-ldap-schema-core-may-oc">
    <para>
     <literal>MAY</literal> 列出可选择对此对象类使用的所有属性类型。
    </para>
   </callout>
  </calloutlist>
 </sect1>
