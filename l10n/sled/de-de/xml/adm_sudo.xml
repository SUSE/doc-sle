<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="adm_sudo.xml" version="5.0" xml:id="cha-adm-sudo">
  <title><command>sudo</command> Grundlagen</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>
  <para>
    Für bestimmte Befehle sind root-Berechtigungen erforderlich. Die Anmeldung als <systemitem class="username">root</systemitem> ist aus Sicherheitsgründen und zur Vermeidung von Fehlern jedoch nicht zu empfehlen. Es ist sicherer, sich als normaler Benutzer anzumelden und dann mit <command>sudo</command> Befehle mit höheren Rechten auszuführen.
  </para>
  <para>
    Auf <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase> ist <command>sudo</command> standardmäßig auf eine ähnliche Funktionsweise wie <command>su</command> konfiguriert. <command>sudo</command> ist jedoch eine flexible Methode, mit der Benutzer Befehle mit den Rechten eines beliebigen anderen Benutzers ausführen können. Dies kann dazu genutzt werden, Rollen mit bestimmten Berechtigungen bestimmten Benutzern und Gruppen zuzuweisen. Es ist beispielsweise möglich, Mitgliedern der Gruppe <systemitem class="groupname">users</systemitem> das Ausführen eines Befehls mit den Berechtigungen des Benutzers <systemitem class="username">wilber</systemitem> zu erlauben. Der Zugriff auf den Befehl wird weiter eingeschränkt, wenn Befehlsoptionen nicht zugelassen werden. Während „su“ immer das <systemitem class="username">root</systemitem>-Passwort für die Authentifizierung mit PAM erfordert, kann <command>sudo</command> für die Authentifizierung mit Ihren eigenen Berechtigungsnachweisen konfiguriert werden. Benutzer müssen folglich ihr <systemitem class="username">root</systemitem>-Passwort nicht bekanntgeben, was die Sicherheit erhöht.
  </para>
  <sect1 xml:id="sec-adm-sudo-usage">
    <title>Grundlegende Verwendung von <command>sudo</command></title>

    <para>
      Im folgenden Kapitel wird die grundlegende Verwendung von <command>sudo</command> vorgestellt.
    </para>

    <sect2 xml:id="sec-adm-sudo-usage-cmd">
      <title>Ausführung eines einzelnen Befehls</title>
      <para>
        Als normaler Benutzer können Sie alle Befehle als <systemitem class="username">root</systemitem> ausführen, indem Sie <command>sudo</command> vor den Befehl setzen. Dadurch werden Sie aufgefordert, das root-Passwort anzugeben. Bei erfolgreicher Authentifizierung wird daraufhin der Befehl als <systemitem class="username">root</systemitem> ausgeführt:
      </para>
<screen>
<prompt>&gt; </prompt><command>id -un</command><co xml:id="co-sudo-usage-id"/>
tux
<prompt>&gt; </prompt><command>sudo</command> <command>id -un</command>
root's password:<co xml:id="co-sudo-usage-pw"/>
root
<prompt>&gt; </prompt><command>id -un</command>
tux<co xml:id="co-sudo-usage-after"/>
<prompt>&gt; </prompt><command>sudo</command> <command>id -un</command>
<co xml:id="co-sudo-usage-nopw"/>
root
</screen>
      <calloutlist>
        <callout arearefs="co-sudo-usage-id">
          <para>
            Der Befehl <command>id -un</command> druckt den Anmeldenamen des aktuellen Benutzers.
          </para>
        </callout>
        <callout arearefs="co-sudo-usage-pw">
          <para>
            Das Passwort wird bei der Eingabe weder als Klartext noch durch maskierende Zeichen angezeigt.
          </para>
        </callout>
        <callout arearefs="co-sudo-usage-after">
          <para>
            Nur Kommandos, die mit <command>sudo</command> beginnen, werden mit höheren Rechten ausgeführt.
          </para>
        </callout>
        <callout arearefs="co-sudo-usage-nopw">
          <para>
            Die erhöhten Rechte bleiben für bestimmte Zeit erhalten, sodass Sie das <systemitem class="username">root</systemitem>-Passwort nicht erneut eingeben müssen.
          </para>
        </callout>
      </calloutlist>
      <tip>
        <title>E/A-Umleitung</title>
        <para>
          Die E/A-Umleitung funktioniert nicht mit <command>sudo</command>:
        </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> echo s &gt; /proc/sysrq-trigger
bash: /proc/sysrq-trigger: Permission denied
<prompt>&gt; </prompt><command>sudo</command> cat &lt; /proc/1/maps
bash: /proc/1/maps: Permission denied
</screen>
        <para>
          Im oben genannten Beispiel werden nur die Befehle <command>echo</command> und <command>cat</command> mit erhöhten Rechten ausgeführt. Die Umleitung wird von der Shell des Benutzers mit Benutzerrechten ausgeführt. Für eine Umleitung mit erhöhten Rechten müssen Sie eine Shell starten wie in <xref linkend="sec-sudo-shell"/> beschrieben oder das <command>dd</command>-Dienstprogramm verwenden:
        </para>
<screen>
echo s | sudo dd of=/proc/sysrq-trigger
sudo dd if=/proc/1/maps | cat 
</screen>
      </tip>
    </sect2>

    <sect2 xml:id="sec-sudo-shell">
      <title>Starten einer Shell</title>
      <para>
        Es ist nicht immer praktisch, <command>sudo</command> jedes mal zur Ausführung eines Kommandos mit erhöhten Rechten zu verwenden. Sie können zwar den Befehl <command>sudo
        bash</command> verwenden, doch zum Starten einer Shell empfiehlt sich die Verwendung einer der integrierten Methoden:
      </para>
      <variablelist>
        <varlistentry>
          <term><literal>sudo -s (&lt;command&gt;)</literal></term>
          <listitem>
            <para>
              Startet eine von der Umgebungsvariablen<envar>SHELL</envar> angegebene Shell oder die Standard-Shell des Zielbenutzers. Falls ein Befehl angegeben ist, wird es (mit der Option <option>-c</option>) an die Shell übergeben. Andernfalls wird die Shell im interaktiven Modus ausgeführt. 
            </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -s
root's password:
<prompt>root:/home/tux # </prompt>exit
<prompt>tux:~ &gt; </prompt>
</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>sudo -i (&lt;command&gt;)</literal></term>
          <listitem>
            <para>
              Ähnlich wie <option>-s</option>, doch die Shell wird als Login-Shell gestartet. Dies bedeutet, dass die Startdateien (<filename>.profile</filename> etc.) der Shell verarbeitet werden und das aktuelle Arbeitsverzeichnis auf das Home-Verzeichnis des Zielbenutzers festgelegt wird.
            </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:~ # </prompt>exit
<prompt>tux:~ &gt; </prompt>
            </screen>
          </listitem>
        </varlistentry>
      </variablelist>
      <tip>
        <title>Umgebungsvariablen</title>
        <para>
          Standardmäßig gibt <command>sudo</command> keine Umgebungsvariablen weiter. Dieses Verhalten kann mit der Option <literal>env_reset</literal> geändert werden (weitere Informationen finden Sie unter <xref linkend="tab-adm-sudo-options"/>).
        </para>
      </tip>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-sudo-conf">
    <title>Konfigurieren von <command>sudo</command></title>

    <para>
      <command>sudo</command> umfasst eine breite Palette an konfigurierbaren Optionen.
    </para>

    <note>
      <title>Versehentliches Aussperren aus sudo</title>
      <para>
        Wenn Sie sich versehentlich aus <command>sudo</command> ausgesperrt haben, starten Sie mit <command>su
        -</command> und dem <systemitem class="username">root</systemitem>-Passwort eine Root-Shell. Beheben Sie den Fehler mit <command>visudo</command>.
      </para>
    </note>
    
    <warning>
      <title>Beispielkonfigurationen dienen ausschließlich zur Veranschaulichung</title>
      <para>
        Die unten dargelegten Beispielregeln dienen ausschließlich zur Veranschaulichung. Hiermit soll die allgemeine Syntax der <command>sudo</command>-Konfigurationsdateien erläutert werden. Verwenden Sie diese Regeln nicht im realen Einsatz, da sie der Komplexität dieser Umgebungen nicht gerecht werden.
      </para>
    </warning>
    <sect2 xml:id="sudo-creating-custom-configuration-bp">
      <title>Bewährte Verfahren für die <command>sudo</command>-Konfiguration</title>
      <para>
        Machen Sie sich zunächst mit einigen grundlegenden Regeln für die Verwaltung von <command>sudo</command>-Konfigurationen vertraut:
      </para>
      <variablelist>
        <varlistentry>
          <term>Immer <command>visudo</command> für die Bearbeitung von <command>sudo</command>-Konfigurationsdateien verwenden</term>
          <listitem>
            <para>
              Alle Änderungen an der <command>sudo</command>-Konfiguration sollten mit dem Kommando <command>visudo</command> vorgenommen werden. <command>visudo</command> ist ein maßgeschneidertes Tool, mit dem Sie die <command>sudo</command>-Konfigurationsdateien bearbeiten und grundlegende Syntaxprüfungen durchführen können, um sicherzustellen, dass die Konfiguration intakt und funktionsfähig bleibt. Eine fehlerhafte <command>sudo</command>-Konfiguration kann dazu führen, dass ein Benutzer aus dem eigenen System ausgesperrt wird.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Immer benutzerdefinierte Konfigurationen unter <filename>/etc/sudoers.d/</filename> erstellen</term>
          <listitem>
            <para>
              Benutzerdefinierte Konfigurationen müssen unter <filename>/etc/sudoers.d/</filename> abgelegt werden, damit sie von <command>sudo</command> abgerufen werden können. Die Einstellungen in den benutzerdefinierten Konfigurationen haben Vorrang vor den Einstellungen in der Standardkonfiguration unter <filename>/etc/sudoers</filename>. 
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Immer die Reihenfolge beachten, in der die Konfigurationen ausgelesen werden</term>
          <listitem>
            <para>
              Damit die benutzerdefinierten Konfigurationen in der richtigen Reihenfolge ausgelesen werden, stellen Sie ihnen eine Zahl voran. Verwenden Sie bei Bedarf auch führende Nullen. So wird <filename>01_myfirstconfig</filename> beispielsweise vor <filename>10_myotherconfig</filename> analysiert. Wenn eine Direktive in einer Datei festgelegt wurde, die vor einer anderen Datei mit dazu widersprüchlichen Informationen gelesen wird, wird die zuletzt gelesene Direktive angewendet. 
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Immer beschreibende Dateinamen verwenden</term>
          <listitem>
            <para>
              Legen Sie Dateinamen fest, aus denen Sie schließen können, was die Konfigurationsdatei bewirkt. So können Sie leichter nachverfolgen, was das <command>sudo</command>-Setup bezwecken soll.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <sect2 xml:id="sudo-creating-custom-config-single-user">
      <title>Erstellen einer benutzerspezifischen Konfigurationsdatei</title>
      <para>
        Erstellen Sie eine <command>sudo</command>-Konfigurationsdatei, mit der ein normaler Benutzer (<systemitem class="username">tux</systemitem>) das Kommando <command>useradd</command> mit seinem eigenen Passwort statt mit dem <systemitem class="username">root</systemitem>-Passwort ausführen kann. 
      </para>
      <example xml:id="ex-sudo-custom-config-user">
        <title>Erstellen einer benutzerspezifischen Konfigurationsdatei</title>
        <procedure>
          <step>
            <para>
              Erstellen Sie als Systemadministrator (<systemitem class="username">root</systemitem>) eine benutzerdefinierte Konfigurationsdatei, in die die neuen benutzerspezifischen Direktiven aufgenommen werden sollen. Starten Sie hierzu <command>visudo</command>. Verwenden Sie sowohl eine Nummerierung als auch einen beschreibenden Namen:
            </para>
            <screen>
  <prompt role="root"># </prompt><command>visudo -f /etc/sudoers.d/02_usermanagement</command>
            </screen>
          </step>
          <step>
            <para>
              Erstellen Sie eine Regel, mit der <systemitem class="username">tux</systemitem> die Binärdatei <command>/usr/sbin/useradd</command> in der gesamten Umgebung ausführen kann, für die diese <command>sudo</command>-Konfiguration gilt:
            </para>
            <screen>
  tux<co xml:id="co-who"/> ALL<co xml:id="co-where"/> = /usr/sbin/useradd<co xml:id="co-what"/>
            </screen>
            <calloutlist>
              <callout arearefs="co-who">
                <para>
                  Legen Sie den Benutzer oder die Gruppe fest. Listen Sie Benutzer nach Namen oder <literal>#UID</literal> und Gruppen nach <literal>%GROUPNAME</literal> auf. Mehrere Elemente müssen durch Kommas voneinander getrennt werden. Sollen Einträge negiert werden, verwenden Sie <literal>!</literal>.
                </para>
              </callout>
              <callout arearefs="co-where">
                <para>
                  Geben Sie einen oder mehrere (durch Komma getrennte) Hosts an. Verwenden Sie (vollqualifizierte) Hostnamen oder IP-Adressen. Mit <literal>ALL</literal> wird diese Einstellung global auf allen Hosts erzwungen. Eine Negierung geben Sie mit <literal>!</literal> an.
                </para>
              </callout>
              <callout arearefs="co-what">
                <para>
                  Geben Sie eine oder mehrere (durch Komma getrennte) ausführbare Dateien an. Beachten Sie dabei die folgenden Regeln:
                </para>
                <variablelist>
                  <varlistentry>
                    <term><command>/usr/sbin/useradd</command></term>
                    <listitem>
                      <para>
                        Werden keine zusätzlichen Optionen angegeben, kann jedes mögliche <command>useradd</command>-Kommando ausgeführt werden.
                      </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term><command>/usr/sbin/useradd -c</command></term>
                    <listitem>
                      <para>
                        Wenn Sie explizit eine Option angeben, ist ausschließlich diese Option zulässig. Andere Optionen stehen dem oben angegebenen Benutzer dann nicht zur Verfügung.
                      </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term><command>/usr/sbin/useradd ""</command></term>
                    <listitem>
                      <para>
                        Damit kann der Benutzer lediglich <command>useradd</command> ohne jegliche Optionen aufrufen. 
                      </para>
                    </listitem>
                  </varlistentry>
                </variablelist>
                <para>
                  Im Beispiel oben möchten Sie entweder alle Optionen und Unterbefehle zulassen oder sie aus Sicherheitsgründen auf einige wenige beschränken, aber einem Benutzer zu verbieten, überhaupt eine Option anzugeben, wäre in diesem Kontext sinnlos.
                </para>
              </callout>
            </calloutlist>
          </step>
          <step>
            <para>
              Damit der Benutzer sein eigenes Passwort anstelle des <systemitem class="username">root</systemitem>-Passworts verwenden kann, fügen Sie die folgende Zeile hinzu:
            </para>
            <screen>Defaults:tux !targetpw
            </screen>
            <para>
              Wenn dieses Flag aktiv ist, muss der Benutzer das Passwort des Zielbenutzers eingeben, das <systemitem class="username">root</systemitem> lautet. Dieses Flag ist standardmäßig auf allen <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase>-Systemen aktiviert. Negieren Sie es mit <literal>!</literal>, um den Benutzer aufzufordern, statt des <systemitem class="username">root</systemitem>-Passworts nur sein eigenes Passwort einzugeben.
            </para>
          </step>
          <step>
            <para>
              Speichern Sie die Konfiguration, verlassen Sie den Editor und öffnen Sie eine zweite Shell, um zu testen, ob Ihre neue Konfiguration von <command>sudo</command> beachtet wird.
            </para>
          </step>
        </procedure>
      </example>
    </sect2>

    <sect2 xml:id="sudo-creating-custom-config-group">
      <title>Erstellen von benutzerdefinierten Konfigurationen durch Gruppieren von Elementen</title>
      <para>
        Bearbeiten Sie die Konfiguration aus <xref linkend="ex-sudo-custom-config-user"/>, damit eine Gruppe benannter Benutzer das Kommando <command>useradd</command> ausführen kann, ohne das <systemitem class="username">root</systemitem>-Passwort eingeben zu müssen. Fügen Sie außerdem das <command>usermod</command> und <command>userdel</command> zur Liste der Kommandos hinzu, die dieser Gruppe zur Verfügung stehen.
      </para>
      <example xml:id="ex-sudo-custom-config-group">
        <title>Erstellen von benutzerdefinierten Konfigurationen durch Gruppieren von Elementen</title>
        <procedure>
          <step>
            <para>
              Zum Bearbeiten der Beispielkonfiguration öffnen Sie sie als Systemadministrator mit <command>visudo</command>:
            </para>
            <screen><prompt role="root"># </prompt><command>visudo /etc/sudoers.d/02_usermanagement</command>
            </screen>
          </step>
          <step>
            <para>
              Fügen Sie der Regel zusätzliche Benutzer in einer durch Kommas getrennten Liste hinzu:
            </para>
            <screen>tux, wilber ALL = /usr/sbin/useradd
            </screen>
          </step>
          <step>
            <para>
              Damit die angegebenen Benutzer eine Liste von Kommandos ausführen können, geben Sie die Kommandos als durch Kommas getrennte Liste an:
            </para>
            <screen>tux, wilber ALL = /usr/sbin/useradd, /usr/sbin/usermod, /usr/sbin/userdel
            </screen>
          </step>
          <step>
            <para>
              Damit die aufgeführten Benutzer ihr eigenes Passwort anstelle des <systemitem class="username">root</systemitem>-Passworts verwenden können, fügen Sie die folgende Zeile hinzu:
            </para>
            <screen>Defaults:tux, wilber !targetpw
            </screen>
            <para>
              Wenn dieses Flag aktiv ist, müssen die aufgelisteten Benutzer das Passwort des Zielbenutzers eingeben, das <systemitem class="username">root</systemitem> lautet. Dieses Flag ist standardmäßig auf allen <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase>-Systemen aktiviert. Negieren Sie es mit <literal>!</literal>, um die aufgeführten Benutzer aufzufordern, statt des <systemitem class="username">root</systemitem>-Passworts nur das eigene Passwort einzugeben.
            </para>
          </step>
          <step>
            <para>
              Speichern Sie die Konfiguration, verlassen Sie den Editor und öffnen Sie eine zweite Shell, um zu testen, ob Ihre neue Konfiguration von <command>sudo</command> beachtet wird.
            </para>
          </step>
        </procedure>
      </example>
    </sect2>

    <sect2 xml:id="sudo-creating-custom-config-aliases">
      <title>Vereinfachen der Konfigurationen mithilfe von Aliasen</title>
      <para>
        Mithilfe von Aliasen können Sie die benutzerdefinierte Konfiguration aus <xref linkend="ex-sudo-custom-config-group"/> noch weiter vereinfachen. Die Gruppierung von Elementen ist bis zu einem gewissen Grad hilfreich, aber die Verwendung globaler Aliasnamen für Benutzer, Kommandos und Hosts ist der effizienteste Weg, um eine übersichtliche und schlanke <command>sudo</command>-Konfiguration zu erhalten.
      </para>
      <para>
        Es ist viel besser, Aliasnamen und Gruppen anstelle von Listen zu verwenden, um Änderungen in Ihrer Einrichtung zu berücksichtigen. Sollte ein Benutzer ausscheiden, entfernen Sie ihn einfach aus der globalen <literal>User_Alias</literal>-Deklaration in Ihrer Alias-Deklarationsdatei, anstatt alle separaten benutzerdefinierten Konfigurationsdateien zu durchsuchen. Das gleiche Verfahren gilt für alle anderen Arten von Aliasnamen (<literal>Host_Alias</literal>, <literal>Cmnd_Alias</literal> und <literal>Runas_Alias</literal>).
      </para>
      <example xml:id="ex-sudo-custom-config-alias">
        <title>Vereinfachen der Konfigurationen mithilfe von Aliasen</title>
        <procedure>
          <step>
            <para>
              Erstellen Sie eine neue Datei, die Ihre globalen Alias-Definitionen enthält:
            </para>
            <screen><prompt role="root"># </prompt><command>visudo /etc/sudoers.d/01_aliases</command>
  </screen>
          </step>
          <step>
            <para>
              Fügen Sie die folgende Zeile hinzu, um den <literal>TEAMLEADERS</literal>-Alias zu erstellen:
            </para>
            <screen>User_Alias    TEAMLEADERS = tux, wilber
            </screen>
          </step>
          <step>
            <para>
              Fügen Sie die folgende Zeile hinzu, um den <literal>USERMANAGEMENT</literal>-Alias zu erstellen:
            </para>
            <screen>Cmnd_Alias    USERMANAGEMENT = /usr/sbin/useradd, /usr/sbin/usermod, /usr/sbin/userdel
            </screen>
          </step>
          <step>
            <para>
              Speichern Sie Ihre Änderungen und beenden Sie <command>visudo</command>.
            </para>
          </step>
          <step>
            <para>
              Starten Sie <command>visudo</command> als Systemadministrator und bearbeiten Sie die Beispielkonfigurationsdatei:
            </para>
            <screen><prompt role="root"># </prompt><command>visudo -f /etc/sudoers.d/02_usermanagement</command>
            </screen>
          </step>
          <step>
            <para>
              Löschen Sie die vorherige Regel und ersetzen Sie sie durch die folgende Regel mit den oben definierten Aliasnamen:
            </para>
            <screen>TEAMLEADERS ALL = USERMANAGEMENT
            </screen>
          </step>
          <step>
            <para>
              Damit alle durch <literal>User_Alias</literal> definierten Benutzer ihr eigenes Passwort anstelle des <systemitem class="username">root</systemitem>-Passworts verwenden können, fügen Sie die folgende Zeile hinzu:
            </para>
            <screen>Defaults:TEAMLEADERS !targetpw</screen>
          </step>
          <step>
            <para>
              Speichern Sie die Konfiguration, verlassen Sie den Editor und öffnen Sie eine zweite Shell, um zu testen, ob Ihre neue Konfiguration von <command>sudo</command> beachtet wird.
            </para>
          </step>
        </procedure>
      </example>
    </sect2>

    <sect2 xml:id="sec-sudo-conf-syntax">
      <title>Basiskonfigurationssyntax von sudoers</title>
      <para>
        Die sudoers-Konfigurationsdateien enthalten zwei Optionstypen: Zeichenketten und Flags. Zeichenketten können beliebige Werte enthalten, Flags hingegen können nur aktiviert (ON) oder deaktiviert (OFF) werden. Die wichtigsten Syntaxkonstrukte für sudoers-Konfigurationsdateien sind:
      </para>
<screen>
# Everything on a line after # is ignored <co xml:id="co-sudo-syntax-comment"/>
Defaults !insults # Disable the insults flag <co xml:id="co-sudo-syntax-flag"/>
Defaults env_keep += "DISPLAY HOME" # Add DISPLAY and HOME to env_keep
tux ALL = NOPASSWD: /usr/bin/frobnicate, PASSWD: /usr/bin/journalctl <co xml:id="co-sudo-syntax-rule"/>
</screen>
      <calloutlist>
        <callout arearefs="co-sudo-syntax-comment">
          <para>
            Es gibt zwei Ausnahmen: <literal>#include</literal> und <literal>#includedir</literal> sind normale Kommandos.
          </para>
        </callout>
        <callout arearefs="co-sudo-syntax-flag">
          <para>
            Entfernen Sie das Zeichen <literal>!</literal>, um das gewünschte Flag zu aktivieren (ON).
          </para>
        </callout>
        <callout arearefs="co-sudo-syntax-rule">
          <para>
            Weitere Informationen hierzu finden Sie in <xref linkend="sec-sudo-conf-rule"/>.
          </para>
        </callout>
      </calloutlist>
      <variablelist xml:id="tab-adm-sudo-options">
        <title>Hilfreiche Flags und Optionen</title>
        <varlistentry>
          <term><literal>targetpw</literal></term>
          <listitem>
            <para>
              Dieses Flag steuert, ob der aufrufende Benutzer das Passwort des Zielbenutzers (ON) (beispielsweise <systemitem class="username">root</systemitem>) oder des aufrufenden Benutzers (OFF) eingeben muss.
            </para>
<screen>Defaults targetpw # Turn targetpw flag ON</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>rootpw</literal></term>
          <listitem>
            <para>
              Bei diesem Flag fordert <command>sudo</command> zur Eingabe des <systemitem class="username">root</systemitem>-Passworts auf. Die Standardeinstellung ist “OFF”.
            </para>
<screen>Defaults !rootpw # Turn rootpw flag OFF</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>env_reset</literal></term>
          <listitem>
            <para>
              Bei dieser Einstellung erstellt <command>sudo</command> eine Mindestumgebung mit <envar>TERM</envar>, <envar>PATH</envar>, <envar>HOME</envar>, <envar>MAIL</envar>, <envar>SHELL</envar>, <envar>LOGNAME</envar>, <envar>USER</envar>, <envar>USERNAME</envar> und <envar>SUDO_*</envar>. Zusätzlich werden Variablen, die in <literal>env_keep</literal> aufgelistet sind, aus der aufrufenden Umgebung importiert. Standardmäßig ist ON festgelegt.
            </para>
<screen>Defaults env_reset # Turn env_reset flag ON</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>env_keep</literal></term>
          <listitem>
            <para>
              Eine Liste der Umgebungsvariablen, die beizubehalten sind, wenn für das Flag <literal>env_reset</literal> ON festgelegt ist.
            </para>
<screen>
# Set env_keep to contain EDITOR and PROMPT
Defaults env_keep = "EDITOR PROMPT"
Defaults env_keep += "JRE_HOME" # Add JRE_HOME
Defaults env_keep -= "JRE_HOME" # Remove JRE_HOME
</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>env_delete</literal></term>
          <listitem>
            <para>
              Eine Liste der Umgebungsvariablen, die zu löschen sind, wenn für das Flag <literal>env_reset</literal> OFF festgelegt ist.
            </para>
<screen>
# Set env_delete to contain EDITOR and PROMPT
Defaults env_delete = "EDITOR PROMPT"
Defaults env_delete += "JRE_HOME" # Add JRE_HOME
Defaults env_delete -= "JRE_HOME" # Remove JRE_HOME
</screen>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
        Das Token <literal>Defaults</literal> kann auch zum Erstellen von Aliassen für eine Sammlung von Benutzern, Hosts oder Befehlen verwendet werden. Außerdem ist es möglich, eine Option anzuwenden, die nur für eine bestimmte Reihe von Benutzern gültig ist.
      </para>
      <para>
        Genauere Informationen zur sudoers-Konfigurationsdatei erhalten Sie mit <command>man 5
        sudoers</command>.
      </para>
    </sect2>

    <sect2 xml:id="sec-sudo-conf-rule">
      <title>Grundlegende sudoers-Regeln</title>
      <para>
        Jede Regel befolgt folgendes Schema (<literal>[]</literal> markiert optionale Teile):
      </para>
<screen>
#Who      Where         As whom      Tag                What
User_List Host_List = [(User_List)] [NOPASSWD:|PASSWD:] Cmnd_List
</screen>
      <variablelist>
        <title>sudoers-Regelsyntax</title>
        <varlistentry>
          <term><literal>User_List</literal></term>
          <listitem>
            <para>
              Eine oder mehrere (durch Komma getrennte) Kennungen: entweder einen Benutzernamen, eine Gruppe im Format <literal>%GROUPNAME</literal> oder eine Benutzer-ID im Format <literal>#UID</literal>. Eine Negierung wird mit dem Präfix <literal>!</literal> angegeben.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>Host_List</literal></term>
          <listitem>
            <para>
              Eine oder mehrere (durch Komma getrennte) Kennungen: Entweder ein (vollständig qualifizierter) Hostname oder eine IP-Adresse. Eine Negierung wird mit dem Präfix <literal>!</literal> angegeben. <literal>ALL</literal> ist eine häufige Wahl für <literal>Host_List</literal>.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>NOPASSWD:|PASSWD:</literal></term>
          <listitem>
            <para>
              Der Benutzer wird nicht aufgefordert, ein Passwort einzugeben, wenn Kommandos ausgeführt werden, die <literal>Cmd_List</literal> nach <literal>NOPASSWD:</literal> : entsprechen.
            </para>
            <para>
              <literal>PASSWD</literal> ist die Standardeinstellung. Es muss nur angegeben werden, wenn sich sowohl <literal>PASSWD</literal> als auch <literal>NOPASSWD</literal> in derselben Zeile befinden:
            </para>
<screen>tux ALL = PASSWD: /usr/bin/foo, NOPASSWD: /usr/bin/bar</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>Cmnd_List</literal></term>
          <listitem>
            <para>
              Einen oder mehrere (durch Komma getrennte) Bezeichner: ein Pfad zu einer ausführbaren Datei, gefolgt von einem optionalen zulässigen Argument.
            </para>
<screen>
/usr/bin/foo     # Anything allowed
/usr/bin/foo bar # Only "/usr/bin/foo bar" allowed
/usr/bin/foo ""  # No arguments allowed
</screen>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
        <literal>ALL</literal> Kann als <literal>User_List</literal>, <literal>Host_List</literal> und <literal>Cmnd_List</literal> verwendet werden.
      </para>
      <para>
        Eine Regel, die es <systemitem class="username">tux</systemitem> erlaubt, alle Befehle als „root“ ohne Eingabe des Passworts auszuführen:
      </para>
<screen>tux ALL = NOPASSWD: ALL</screen>
      <para>
        Eine Regel, die es <systemitem class="username">tux</systemitem> erlaubt, <command>systemctl restart
        apache2</command> auszuführen:
      </para>
<screen>tux ALL = /usr/bin/systemctl restart apache2</screen>
      <para>
        Eine Regel, die es <systemitem class="username">tux</systemitem> erlaubt, <command>wall</command> als <systemitem>admin</systemitem> ohne Argumente auszuführen:
      </para>
<screen>tux ALL = (admin) /usr/bin/wall ""</screen>
      <warning>
        <title>Unsichere Regeln</title>
        <para>
          Verwenden Sie <emphasis>keine</emphasis> Regeln wie <literal>ALL ALL =
          ALL</literal> ohne <literal>Defaults targetpw</literal>. Andernfalls kann jeder Benutzer Befehle als <systemitem class="username">root</systemitem> ausführen.
        </para>
      </warning>
      <important>
        <title>„winbind“ und „sudo“</title>
        <para>
          Wenn Sie den Gruppennamen in der Datei <filename>sudoers</filename> angeben, verwenden Sie den NetBIOS-Domänennamen statt des Bereichs, beispielsweise:
        </para>
<screen><replaceable>%DOMAIN</replaceable>\\<replaceable>GROUP_NAME</replaceable> ALL = (ALL) ALL</screen>
        <para>
          Denken Sie bei winbindd daran, dass das Format auch von der Option <option>winbind separator</option> in der Datei <filename>smb.conf</filename> abhängt. Die Standardeinstellung ist <literal>\</literal>. Wird sie beispielsweise in <literal>+</literal> geändert, muss das Kontoformat in der Datei <filename>sudoers</filename> entsprechend <literal>DOMAIN+GROUP_NAME</literal> lauten.
        </para>
      </important>
    </sect2>
  </sect1>

  <sect1 xml:id="sec-sudo-usecases-xorg">
    <title>Verwenden von <command>sudo</command> mit X.Org-Anwendungen</title>
    <para>
      Werden grafische Anwendungen mit <command>sudo</command> gestartet, führt dies normalerweise zu folgendem Fehler:
    </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> xterm
xterm: Xt error: Can't open display: %s
xterm: DISPLAY is not set
</screen>
    <para>
      Eine einfache Behelfslösung ist xhost. Damit wird dem root-Benutzer vorübergehend der Zugriff auf die X-Sitzung des lokalen Benutzers gestattet. Dies erfolgt mit folgendem Befehl:
    </para>
<screen>xhost si:localuser:root</screen>
    <para>
      Folgender Befehl entfernt den gewährten Zugriff:
    </para>
<screen>xhost -si:localuser:root</screen>
    <warning>
      <title>Potenzielles Sicherheitsproblem</title>
      <para>
        Die Ausführung grafischer Anwendungen mit root-Rechten beeinträchtigt die Sicherheit. Es wird empfohlen, den root-Zugriff für eine grafische  Anwendung nur in Ausnahmefällen zu aktivieren. Außerdem sollte der gewährte root-Zugriff sofort nach Schließen der grafischen Anwendung entzogen werden.
      </para>
    </warning>
  </sect1>
  <sect1 xml:id="sec-adm-sudo-moreinfo">
    <title>Weitere Informationen</title>

    <para>
      Der Befehl <command>sudo --help</command> bietet einen kurzen Überblick über die verfügbaren Befehlszeilenoptionen und der Befehl <command>man sudoers</command> bietet detaillierte Informationen zu <filename>sudoers</filename> und dessen Konfiguration.
    </para>
  </sect1>
</chapter>
