<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec-rpm">
 <title>RPM&mdash;the package manager</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <para>
  RPM (RPM Package Manager) is used for managing software packages. Its main
  commands are <command>rpm</command> and <command>rpmbuild</command>. The
  powerful RPM database can be queried by the users, system administrators and
  package builders for detailed information about the installed software.
 </para>

 <para>
  <command>rpm</command> has five modes: installing, uninstalling
  (or updating) software packages, rebuilding the RPM database, querying RPM
  bases or individual RPM archives, integrity checking of packages and signing
  packages. <command>rpmbuild</command> can be used to build installable
  packages from pristine sources.
 </para>

 <para>
  Installable RPM archives are packed in a special binary format. These
  archives consist of the program files to install and certain meta information
  used during the installation by <command>rpm</command> to configure the
  software package or stored in the RPM database for documentation purposes.
  RPM archives normally have the extension <filename>.rpm</filename>.
 </para>

 <tip>
  <title>Software development packages</title>
  <para>
   For several packages, the components needed for software development
   (libraries, headers, include files, etc.) have been put into separate
   packages. These development packages are only needed if you want to compile
   software yourself (for example, the most recent &gnome; packages). They can
   be identified by the name extension <literal>-devel</literal>, such as the
   packages <systemitem class="resource">alsa-devel</systemitem> and
   <systemitem class="resource">gimp-devel</systemitem>.
  </para>
 </tip>

 <sect2 xml:id="sec-rpm-package-auth">
  <title>Verifying package authenticity</title>
  <para>
   RPM packages have a &gpg; signature. To verify the signature of an RPM
   package, use the command <command>rpm --checksig&nbsp;</command>
   <replaceable>PACKAGE</replaceable>-1.2.3.rpm to determine whether the
   package originates from &suse; or from another trustworthy facility. This is
   especially recommended for update packages from the Internet.
  </para>
<!--taroth 2015-06-01: fix for https://bugzilla.suse.com/show_bug.cgi?id=927292-->
  <para os="sles;sled">
   While fixing issues in the operating system, you might need to install a
   Problem Temporary Fix (PTF) into a production system. The packages provided
   by &suse; are signed against a special PTF key. However, in contrast to
   &sle; 11, this key is not imported by default on &sle; 12 systems. To
   manually import the key, use the following command:
  </para>
  <screen os="sles;sled">&prompt.sudo;rpm --import \
/usr/share/doc/packages/suse-build-key/suse_ptf_key.asc</screen>
  <para os="sles;sled">
   After importing the key, you can install PTF packages on your system.
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-packages-manage">
  <title>Managing packages: install, update, and uninstall</title>
  <para>
   Normally, the installation of an RPM archive is quite simple: <command>rpm
   -i</command> <replaceable>PACKAGE</replaceable>.rpm. With this command the
   package is installed, but only if its dependencies are fulfilled and if
   there are no conflicts with other packages. With an error message,
   <command>rpm</command> requests those packages that need to be installed to
   meet dependency requirements. In the background, the RPM database ensures
   that no conflicts arise&mdash;a specific file can only belong to one
   package. By choosing different options, you can force <command>rpm</command>
   to ignore these defaults, but this is only for experts. Otherwise, you risk
   compromising the integrity of the system and possibly jeopardize the ability
   to update the system.
  </para>
  <para>
   The options <option>-U</option> or <option>--upgrade</option> and
   <option>-F</option> or <option>--freshen</option> can be used to update a
   package (for example, <command>rpm -F</command>
   <replaceable>PACKAGE</replaceable>.rpm). This command removes the files of
   the old version and immediately installs the new files. The difference
   between the two versions is that <option>-U</option> installs packages that
   previously did not exist in the system, while <option>-F</option> merely
   updates previously installed packages. When updating, <command>rpm</command>
   updates configuration files carefully using the following strategy:
  </para>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     If a configuration file was not changed by the system administrator,
     <command>rpm</command> installs the new version of the appropriate file.
     No action by the system administrator is required.
    </para>
   </listitem>
   <listitem>
    <para>
     If a configuration file was changed by the system administrator before the
     update, <command>rpm</command> saves the changed file with the extension
     <filename>.rpmorig</filename> or <filename>.rpmsave</filename> (backup
     file) and installs the version from the new package. This is done only if
     the originally installed file and the newer version are different. If this is
     the case, compare the backup file (<filename>.rpmorig</filename> or
     <filename>.rpmsave</filename>) with the newly installed file and make your
     changes again in the new file. Afterward, delete all
     <filename>.rpmorig</filename> and <filename>.rpmsave</filename> files to
     avoid problems with future updates.
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>.rpmnew</filename> files appear if the configuration file
     already exists <emphasis>and</emphasis> if the <option>noreplace</option>
     label was specified in the <filename>.spec</filename> file.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   Following an update, <filename>.rpmsave</filename> and
   <filename>.rpmnew</filename> files should be removed after comparing them,
   so they do not obstruct future updates. The <filename>.rpmorig</filename>
   extension is assigned if the file has not previously been recognized by the
   RPM database.
  </para>
  <para>
   Otherwise, <filename>.rpmsave</filename> is used. In other words,
   <filename>.rpmorig</filename> results from updating from a foreign format to
   RPM. <filename>.rpmsave</filename> results from updating from an older RPM
   to a newer RPM. <filename>.rpmnew</filename> does not disclose any
   information to whether the system administrator has made any changes to the
   configuration file. A list of these files is available in
   <filename>/var/adm/rpmconfigcheck</filename>. Some configuration files (like
   <filename>/etc/httpd/httpd.conf</filename>) are not overwritten to allow
   continued operation.
  </para>
  <para>
   The <option>-U</option> switch is <emphasis>not</emphasis> only an
   equivalent to uninstalling with the <option>-e</option> option and
   installing with the <option>-i</option> option. Use <option>-U</option>
   whenever possible.
  </para>
  <para>
   To remove a package, enter <command>rpm -e</command>
   <replaceable>PACKAGE</replaceable>. This command only deletes the package if
   there are no unresolved dependencies. It is theoretically impossible to
   delete Tcl/Tk, for example, as long as another application requires it. Even
   in this case, RPM calls for assistance from the database. If such a deletion
   is, for whatever reason, impossible (even if <emphasis>no</emphasis>
   additional dependencies exist), it may be helpful to rebuild the RPM
   database using the option <option>--rebuilddb</option>.
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-delta">
  <title>Delta RPM packages</title>
  <para>
   Delta RPM packages contain the difference between an old and a new version
   of an RPM package. Applying a delta RPM onto an old RPM results in a
   completely new RPM. It is not necessary to have a copy of the old RPM
   because a delta RPM can also work with an installed RPM. The delta RPM
   packages are even smaller in size than patch RPMs, which is an advantage
   when transferring update packages over the Internet. The drawback is that
   update operations with delta RPMs involved consume considerably more CPU
   cycles than plain or patch RPMs.
  </para>
  <para>
   The <command>makedeltarpm</command> and <command>applydelta</command>
   binaries are part of the delta RPM suite (package
   <systemitem>deltarpm</systemitem>) and help you create and apply delta RPM
   packages. With the following commands, you can create a delta RPM called
   <filename>new.delta.rpm</filename>. The following command assumes that
   <filename>old.rpm</filename> and <filename>new.rpm</filename> are present:
  </para>
<screen>&prompt.sudo;makedeltarpm old.rpm new.rpm new.delta.rpm</screen>
  <para>
   Using <command>applydeltarpm</command>, you can reconstruct the new RPM from
   the file system if the old package is already installed:
  </para>
<screen>&prompt.sudo;applydeltarpm new.delta.rpm new.rpm</screen>
  <para>
   To derive it from the old RPM without accessing the file system, use the
   <option>-r</option> option:
  </para>
<screen>&prompt.sudo;applydeltarpm -r old.rpm new.delta.rpm new.rpm</screen>
  <para>
   See <filename>/usr/share/doc/packages/deltarpm/README</filename> for
   technical details.
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-query">
  <title>RPM queries</title>
  <para>
   With the <option>-q</option> option <command>rpm</command> initiates
   queries, making it possible to inspect an RPM archive (by adding the option
   <option>-p</option>) and to query the RPM database of installed packages.
   Several switches are available to specify the type of information required.
   See <xref linkend="tab-rpm-query"/>.
  </para>
  <table xml:id="tab-rpm-query">
   <title>The most important RPM query options</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry>
       <para>
        <option>-i</option>
       </para>
      </entry>
      <entry>
       <para>
        Package information
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-l</option>
       </para>
      </entry>
      <entry>
       <para>
        File list
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-f FILE</option>
       </para>
      </entry>
      <entry>
       <para>
        Query the package that contains the file
        <replaceable>FILE</replaceable> (the full path must be specified with
        <replaceable>FILE</replaceable>)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-s</option>
       </para>
      </entry>
      <entry>
       <para>
        File list with status information (implies <option>-l</option>)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-d</option>
       </para>
      </entry>
      <entry>
       <para>
        List only documentation files (implies <literal>-l</literal>)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-c</option>
       </para>
      </entry>
      <entry>
       <para>
        List only configuration files (implies <option>-l</option>)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--dump</option>
       </para>
      </entry>
      <entry>
       <para>
        File list with complete details (to be used with <option>-l</option>,
        <option>-c</option>, or <option>-d</option>)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--provides</option>
       </para>
      </entry>
      <entry>
       <para>
        List features of the package that another package can request with
        <option>--requires</option>
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--requires</option>, <option>-R</option>
       </para>
      </entry>
      <entry>
       <para>
        Capabilities the package requires
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--scripts</option>
       </para>
      </entry>
      <entry>
       <para>
        Installation scripts (preinstall, postinstall, uninstall)
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   For example, the command <command>rpm -q -i wget</command> displays the
   information shown in <xref linkend="aus-update-rpm-i"/>.
  </para>
  <example xml:id="aus-update-rpm-i">
   <title><command>rpm -q -i wget</command></title>
<screen os="osuse"><?dbsuse-fo font-size="0.70em"?>Name        : wget
Name        : wget
Version     : 1.19.5
Release     : lp151.4.1
Architecture: x86_64
Install Date: Tue 30 Jul 2019 02:26:21 PM PDT
Group       : Productivity/Networking/Web/Utilities
Size        : 2881903
License     : GPL-3.0+
Signature   : RSA/SHA256, Thu 11 Apr 2019 02:23:42 AM PDT, Key ID b88b2fd43dbdc284
Source RPM  : wget-1.19.5-lp151.4.1.src.rpm
Build Date  : Thu 11 Apr 2019 02:23:27 AM PDT
Build Host  : cloud114
Relocations : (not relocatable)
Packager    : https://bugs.opensuse.org
Vendor      : openSUSE
URL         : https://www.gnu.org/software/wget/
Summary     : A Tool for Mirroring FTP and HTTP Servers
Description :
Wget enables you to retrieve WWW documents or FTP files from a server.
This can be done in script files or via the command line.
Distribution: openSUSE Leap 15.1
</screen>
<screen os="sles;sled"><?dbsuse-fo font-size="0.70em"?>
Name        : wget
Version     : 1.14
Release     : 17.1
Architecture: x86_64
Install Date: Mon 30 Jan 2017 14:01:29 CET
Group       : Productivity/Networking/Web/Utilities
Size        : 2046483
License     : GPL-3.0+
Signature   : RSA/SHA256, Thu 08 Dec 2016 07:48:44 CET, Key ID 70af9e8139db7c82
Source RPM  : wget-1.14-17.1.src.rpm
Build Date  : Thu 08 Dec 2016 07:48:34 CET
Build Host  : sheep09
Relocations : (not relocatable)
Packager    : https://www.suse.com/
Vendor      : SUSE LLC &lt;https://www.suse.com/&gt;
URL         : http://www.gnu.org/software/wget/
Summary     : A Tool for Mirroring FTP and HTTP Servers
Description :
Wget enables you to retrieve WWW documents or FTP files from a server.
This can be done in script files or via the command line.
Distribution: SUSE Linux Enterprise 15
</screen>
  </example>
  <para>
   The option <option>-f</option> only works if you specify the complete file
   name with its full path. Provide as many file names as desired. For example:
  </para>
<screen>&prompt.user;rpm -q -f /bin/rpm /usr/bin/wget
rpm-4.14.1-lp151.13.10.x86_64
wget-1.19.5-lp151.4.1.x86_64
</screen>
  <para>
   If only part of the file name is known, use a shell script as shown in
   <xref linkend="dat-rpm-search"/>. Pass the partial file name to the script
   shown as a parameter when running it.
  </para>
  <example xml:id="dat-rpm-search">
   <title>Script to search for packages</title>
<screen>#! /bin/sh
for i in $(rpm -q -a -l | grep $1); do
    echo "\"$i\" is in package:"
    rpm -q -f $i
    echo ""
done</screen>
  </example>
  <para>
   The command <command>rpm -q --changelog</command>
   <replaceable>PACKAGE</replaceable> displays a detailed list of change
   information about a specific package, sorted by date.
  </para>
  <para>
   With the installed RPM database, verification checks can be made. Initiate
   these with <option>-V</option>, or <option>--verify</option>. With this
   option, <command>rpm</command> shows all files in a package that have been
   changed since installation. <command>rpm</command> uses eight character
   symbols to give some hints about the following changes:
  </para>
  <table xml:id="tab-rpm-verify">
   <title>RPM verify options</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry>
       <para>
        <option>5</option>
       </para>
      </entry>
      <entry>
       <para>
        MD5 check sum
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>S</option>
       </para>
      </entry>
      <entry>
       <para>
        File size
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>L</option>
       </para>
      </entry>
      <entry>
       <para>
        Symbolic link
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>T</option>
       </para>
      </entry>
      <entry>
       <para>
        Modification time
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>D</option>
       </para>
      </entry>
      <entry>
       <para>
        Major and minor device numbers
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>U</option>
       </para>
      </entry>
      <entry>
       <para>
        Owner
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>G</option>
       </para>
      </entry>
      <entry>
       <para>
        Group
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>M</option>
       </para>
      </entry>
      <entry>
       <para>
        Mode (permissions and file type)
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   In the case of configuration files, the letter <option>c</option> is
   printed. For example, for changes to <filename>/etc/wgetrc</filename>
   (<systemitem class="resource">wget</systemitem> package):
  </para>
<screen>&prompt.user;rpm -V wget
S.5....T c /etc/wgetrc</screen>
  <para>
   The files of the RPM database are placed in
   <filename>/var/lib/rpm</filename>. If the partition
   <filename>/usr</filename> has a size of 1&nbsp;GB, this database can occupy
   nearly 30&nbsp;MB, especially after a complete update. If the database is
   much larger than expected, it is useful to rebuild the database with the
   option <option>--rebuilddb</option>. Before doing this, make a backup of the
   old database. The <command>cron</command> script
   <command>cron.daily</command> makes daily copies of the database (packed
   with gzip) and stores them in <filename>/var/adm/backup/rpmdb</filename>.
   The number of copies is controlled by the variable
   <systemitem>MAX_RPMDB_BACKUPS</systemitem> (default: <option>5</option>) in
   <filename>/etc/sysconfig/backup</filename>. The size of a single backup is
   approximately 1&nbsp;MB for 1&nbsp;GB in <filename>/usr</filename>.
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-sources">
  <title>Installing and compiling source packages</title>
  <para>
   All source packages carry a <filename>.src.rpm</filename> extension (source
   RPM).
  </para>
  <note>
   <title>Installed source packages</title>
   <para>
    Source packages can be copied from the installation medium to the hard disk
    and unpacked with &yast;. They are not, however, marked as installed
    (<literal>[i]</literal>) in the package manager. This is because the source
    packages are not entered in the RPM database. Only
    <emphasis>installed</emphasis> operating system software is listed in the
    RPM database. When you <quote>install</quote> a source package, only the
    source code is added to the system.
   </para>
  </note>
  <para>
   The following directories must be available for <command>rpm</command> and
   <command>rpmbuild</command> in <filename>/usr/src/packages</filename>
   (unless you specified custom settings in a file like
   <filename>/etc/rpmrc</filename>):
  </para>
  <variablelist>
   <varlistentry>
    <term><filename>SOURCES</filename>
    </term>
    <listitem>
     <para>
      for the original sources (<filename>.tar.bz2</filename> or
      <filename>.tar.gz</filename> files, etc.) and for distribution-specific
      adjustments (mostly <filename>.diff</filename> or
      <filename>.patch</filename> files)
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>SPECS</filename>
    </term>
    <listitem>
     <para>
      for the <filename>.spec</filename> files, similar to a meta Makefile,
      which control the <emphasis>build</emphasis> process
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>BUILD</filename>
    </term>
    <listitem>
     <para>
      all the sources are unpacked, patched and compiled in this directory
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>RPMS</filename>
    </term>
    <listitem>
     <para>
      where the completed binary packages are stored
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>SRPMS</filename>
    </term>
    <listitem>
     <para>
      here are the source RPMs
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   When you install a source package with &yast;, all the necessary components
   are installed in <filename>/usr/src/packages</filename>: the sources and the
   adjustments in <filename>SOURCES</filename> and the relevant
   <filename>.spec</filename> file in <filename>SPECS</filename>.
  </para>
  <warning>
   <title>System integrity</title>
   <para>
    Do not experiment with system components
    (<systemitem class="resource">glibc</systemitem>,
    <systemitem class="resource">rpm</systemitem>, etc.), because this
    endangers the stability of your system.
   </para>
  </warning>
  <para>
   The following example uses the <filename>wget.src.rpm</filename> package.
   After installing the source package, you should have files similar to those
   in the following list:
  </para>
<screen>/usr/src/packages/SOURCES/wget-1.19.5.tar.bz2
/usr/src/packages/SOURCES/wgetrc.patch
/usr/src/packages/SPECS/wget.spec</screen>
  <para>
   <command>rpmbuild</command> <option>-b<replaceable>X</replaceable></option>
   <filename>/usr/src/packages/SPECS/wget.spec</filename> starts the
   compilation. <replaceable>X</replaceable> is a wild card for various stages
   of the build process (see the output of <option>--help</option> or the RPM
   documentation for details). The following is merely a brief explanation:
  </para>
  <variablelist>
   <varlistentry>
    <term><option>-bp</option>
    </term>
    <listitem>
     <para>
      Prepare sources in <filename>/usr/src/packages/BUILD</filename>: unpack
      and patch.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bc</option>
    </term>
    <listitem>
     <para>
      Do the same as <option>-bp</option>, but with additional compilation.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bi</option>
    </term>
    <listitem>
     <para>
      Do the same as <option>-bp</option>, but with additional installation of
      the built software. Caution: if the package does not support the
      BuildRoot feature, you might overwrite configuration files.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bb</option>
    </term>
    <listitem>
     <para>
      Do the same as <option>-bi</option>, but with the additional creation of
      the binary package. If the compile was successful, the binary should be
      in <filename>/usr/src/packages/RPMS</filename>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-ba</option>
    </term>
    <listitem>
     <para>
      Do the same as <option>-bb</option>, but with the additional creation of
      the source RPM. If the compilation was successful, the binary should be
      in <filename>/usr/src/packages/SRPMS</filename>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>--short-circuit</option>
    </term>
    <listitem>
     <para>
      Skip some steps.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   The binary RPM created can now be installed with <command>rpm</command>
   <option>-i</option> or, preferably, with <command>rpm</command>
   <option>-U</option>. Installation with <command>rpm</command> makes it
   appear in the RPM database.
  </para>
  <para>
   Keep in mind, the <literal>BuildRoot</literal> directive in the spec file is
   deprecated since &productname; <phrase os="sles;sled">12</phrase><phrase
   os="osuse">42.1</phrase>. If you still need this feature, use the
   <option>--buildroot</option> option as a workaround. <phrase
   os="sles;sled">For more detailed background information, see the support
    database at <link
   xlink:href="https://www.suse.com/support/kb/doc?id=7017104"/>.</phrase>
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-build">
  <title>Compiling RPM packages with build</title>
  <para>
   The danger with many packages is that unwanted files are added to the
   running system during the build process. To prevent this use
   <systemitem>build</systemitem>, which creates a defined environment in which
   the package is built. To establish this chroot environment, the
   <command>build</command> script must be provided with a complete package
   tree. This tree can be made available on the hard disk, via NFS, or from
   DVD. Set the position with <command>build --rpms</command>
   <replaceable>DIRECTORY</replaceable>. Unlike <command>rpm</command>, the
   <command>build</command> command looks for the <filename>.spec</filename>
   file in the source directory. To build <filename>wget</filename> (like in
   the above example) with the DVD mounted in the system under
   <filename>/media/dvd</filename>, use the following commands as
   &rootuser;:
  </para>
<screen>&prompt.root;cd /usr/src/packages/SOURCES/
&prompt.root;mv ../SPECS/wget.spec .
&prompt.root;build --rpms /media/dvd/suse/ wget.spec</screen>
  <para>
   Subsequently, a minimum environment is established at
   <filename>/var/tmp/build-root</filename>. The package is built in this
   environment. Upon completion, the resulting packages are located in
   <filename>/var/tmp/build-root/usr/src/packages/RPMS</filename>.
  </para>
  <para>
   The <command>build</command> script offers several additional options. For
   example, cause the script to prefer your own RPMs, omit the initialization
   of the build environment or limit the <command>rpm</command> command to one
   of the above-mentioned stages. Access additional information with
   <command>build</command> <option>--help</option> and by reading the
   <command>build</command> man page.
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-tools">
  <title>Tools for RPM archives and the RPM database</title>
  <para>
   Midnight Commander (<command>mc</command>) can display the contents of RPM
   archives and copy parts of them. It represents archives as virtual file
   systems, offering all usual menu options of Midnight Commander. Display the
   <filename>HEADER</filename> with <keycap>F3</keycap>. View the archive
   structure with the cursor keys and <keycap function="enter"/>. Copy archive
   components with <keycap>F5</keycap>.
  </para>
  <para>
   A full-featured package manager is available as a &yast; module. For
   details, see <xref linkend="cha-yast-software"/>.
  </para>
<!--
  -->
 </sect2>
</sect1>
