<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter version="5.0" role="General" 
  xml:id="cha-common-criteria"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Common Criteria</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info> 
    <para>
    Common Criteria is the best known and most widely used methodology to
    evaluate and measure the security value of an IT product. The methodology
    aims to be independent, as an independent laboratory conducts the
    evaluation, which a certification body will certify afterward. Security
    Functional Requirements (SFR) are summarized in so-called Protection
    Profiles (PP). If the definition of a Security Target (ST) and the
    Evaluation Assurance Levels (EAL) are comparable, this allows the comparison of
    security functions of different products. (The definition of a Security Target
    typically references the PP&mdash;if one exists that fits the purpose
    of the product.)
   </para>

  <sect1 xml:id="sec-common-criteria-introduction">
   <title>Introduction</title>

   <para>
    A clear definition of security in IT products is challenging. Security
    should be considered a process that never ends, not a static condition
    that can be met or not. A Common Criteria certificate (below EAL7) does not
    make a clear statement about the error-proneness of the system, but it adds
    an important value to the product that
    cannot be described with the presence of technology alone: That someone
    has independently inspected the design of the system in such way that it
    corresponds to the claims that are made, and that explicit care has been
    taken in producing and maintaining the product.
   </para>

   <para>
    The certificate states a degree of maturity of both the product with its
    security functions and the processes of the company that has designed,
    built and engineered the product, and that will maintain the product
    across its lifecycle. As such, Common Criteria aims to be fairly holistic
    with its approach to take everything into account that is relevant for the
    security of an IT product.
   </para>
  </sect1>
  <sect1 xml:id="sec-common-criteria-eal">
   <title>Evaluation Assurance Level (EAL)</title>
   <para>
    The Evaluation Assurance Level denotes the degree of confidence
    that the product fulfills the described claims. The levels are from 1
    through 7:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      EAL1: Functionally tested
     </para>
    </listitem>
    <listitem>
     <para>
      EAL2: Structurally tested
     </para>
    </listitem>
    <listitem>
     <para>
      EAL3: Methodically tested and checked
     </para>
    </listitem>
    <listitem>
     <para>
      EAL4: Methodically designed, tested and reviewed
     </para>
    </listitem>
    <listitem>
     <para>
      EAL5: Semi-formally designed and tested
     </para>
    </listitem>
    <listitem>
     <para>
      EAL6: Semi-formally verified design and tested
     </para>
    </listitem>
    <listitem>
     <para>
      EAL7: Formally verified design and tested
     </para>
    </listitem>
   </itemizedlist>

   <para>
    While EAL1 only provides basic assurance for products to meet security
    requirements, EAL2 to 4 are medium assurance levels. EAL5-EAL7 describe
    medium-to-high and high assurance. EAL4 is expected to be the highest
    level of assurance that a product can have if it has not been designed
    from the start to achieve a higher level of assurance.
   </para>
  </sect1>

  <sect1 xml:id="sec-common-criteria-principles">
   <title>Generic Guiding Principles</title>

   <para>
   Much of the advice in this guide is based on the following guidelines.
   Consider them when defining your own security processes or deciding about
   configurations that are not explicitly covered here.
   </para>

   <variablelist>
    <varlistentry>
     <term>Use Data Encryption Whenever Possible</term>
     <listitem>
      <para>
       Refer to the <!-- TODO<xref linkend="pre-hardening-about"/> section of this
       guide. In <xref linkend="pre-hardening-about-assumptions"/>-->, the
       limitations of cryptography are briefly outlined.
      </para>
      <para>
       Be aware that cryptography is certainly useful, but only for the
       specific purposes that it is good for. Using cryptography is not a generic recipe for
       better security in a system, its use may even impose additional risk on
       the system. Make informed decisions about the use of cryptography, and
       feel obliged to have a reason for your decisions. A false sense of security can be more
       harmful than the weakness itself.
      </para>

      <para>
       &productname; supports encryption for:
      </para>
      <itemizedlist>
       <listitem>
        <para>
         Network connections (the
         <command>openssl</command> command,
         <command>stunnel</command>), for remote login
         (<command>openssh</command>, <command>man ssh(1)</command>)
        </para>
       </listitem>
       <listitem>
        <para>
         Files (<command>gpg</command>)
        </para>
       </listitem>
       <listitem>
        <para>
         Entire file systems at block layer
         (<literal>dm-crypt</literal>, <command>cryptsetup</command>)
        </para>
       </listitem>
       <listitem>
        <para>
         VPN (<command>ipsec</command>, <command>openvpn</command>)
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Minimal Package Installation</term>
     <listitem>
     <para>
       It is useful to restrict the installed packages in your system
       to a minimum. Binaries not installed cannot be executed.
      </para>
      <para>
       During installation of the system, you can limit the set of packages that
       is installed. For example, you can deselect all packages and select only
       those that you want to use. For example, the selection of the
       <systemitem>apache2-mod_perl</systemitem>
       package in &yast; would automatically cause all packages to be selected
       for installation that are needed for the Apache package to operate.
       Dependencies have often been artificially cut down to handle the system's
       dependency tree more flexibly. You can chose the minimal system, and
       build the dependency tree from there with your (leaf) package selection.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Service Isolation&mdash;Run Different Services on Separate
     Systems</term>
     <listitem>
      <para>
       Whenever possible, a server should be dedicated to serving exactly one
       service or application. This limits the number of other services that
       could be compromised if an attacker can successfully exploit
       a software flaw in one service (assuming that flaw allows access to
       others).
      </para>
      <para>
       The use of AppArmor for services that are provided on a system is an
       effective means of containment. For more information, see
       <xref linkend="part-apparmor"/> and the man page of
       <command>apparmor</command>.
      </para>
      <para>
       The use of virtualization technology is supported with &productname;.
       While virtualization is generally designed for server consolidation purposes,
       it is also usefulness for service isolation. However, virtualization
       technology <emphasis>cannot</emphasis> match or substitute the separation
       strength that is given by running services on different physical
       machines! Be aware that the capability of the hypervisor to separate
       virtual machines is not higher or stronger than the Linux kernel's
       capability to separate processes and their address spaces.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      System Fingerprinting and Backups
     </term>
     <listitem>
      <para>
       Doing regular backups and having a fingerprint of your system is vital,
       especially in the case of a successful attack against your system.
       Make it an integral part of your security routine to verify that your
       backups work.
      </para>
      <para>
       A fast and directly accessible backup adds confidence about
       the integrity of your system. However, it is important that the backup
       mechanism/solution has adequate versioning support so that you can
       trace changes in the system. As an example: The installation times of
       packages (<command>rpm</command> <option>-q</option>
       <option>--queryformat='%{INSTALLTIME} %{NAME}\n'</option>
       <replaceable>PACKAGE NAME</replaceable>) must correspond to the changed
       files in the backup log files.
      </para>
      <para>
       Several tools exist on &productname; &productnumber; which can be
       used for the detection of unknown, yet successful attacks. It does not
       take much effort to configure them.
      </para>
      <para>
       In particular, we recommend using the file and directory integrity checker
       <systemitem class="resource">AIDE</systemitem> (Advanced Intrusion Detection Environment).
       When run for initialization, it creates a hash database of all files in the system that
       are listed in its configuration file. This allows verifying the integrity
       of all cataloged files at a later time.
      </para>
      <warning>
       <title>Backdoors</title>
       <para>
        If you use AIDE, copy the hash database to a place that
        is inaccessible for potential attackers. Otherwise, the attacker may
        modify the integrity database after planting a backdoor, thereby
        defeating the purpose of the integrity measurement.
       </para>
       <para>
        An attacker may also have planted a backdoor in the kernel. Apart from
        being very hard to detect,
        the kernel-based backdoor can effectively remove all traces of the
        system compromise, so system alterations become almost invisible.
        Consequently, an integrity check needs to be done from a
        rescue system (or any other independent system with the target system's
        file systems mounted manually).
       </para>
      </warning>
       <para>
        Be aware that the application of security updates invalidates the integrity
        database. <command>rpm</command> <option>-qlv packagename</option>
        lists the files that are contained in a package. The RPM subsystem is
        very powerful with the data that it maintains. It is accessible with the
        <option>--queryformat</option> command line option. A differential
        update of integrity database with the changed files becomes more
        manageable with some fine-grained usage of RPM.
       </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect1>
  <sect1 xml:id="sec-common-criteria-more">
   <title>For More Information</title>
   <para>
    The Common Criteria evaluations inspect a specific configuration of the
    product in an evaluated setup. How to install and configure the reference
    system that was used as baseline in the Common Criteria evaluation
    is documented in the <quote>Administrator's Guide</quote> part of
    the Common Criteria evaluation documentation.
   </para>

   <para>
    However, it would be incorrect to understand the evaluated configuration as
    a <emphasis>hardened</emphasis> configuration. The removal of setuid bits
    and the prescription of administrative procedures after installation help to
    reach a specific configuration that is sane. But this is not sufficient
    for a hardening claim.
   </para>
  <itemizedlist>
   <listitem>
     <para>
      For more information about &productname; security certifications and
      features, see <link
      xlink:href="https://www.suse.com/support/security/certifications/"/>.
     </para>
   </listitem>
   <listitem>
    <para>
    Find a list of &suse; security resources at
    <link xlink:href="https://www.suse.com/support/security/"/>.
    </para>
   </listitem>
   <listitem>
    <para>
    Apart from the documentation that comes with the Common Criteria
    effort, see also the following manual pages:
    </para>
    <simplelist>
     <member>pam(8), pam(5)</member>
     <member>apparmor(7) and referred man pages</member>
     <member>rsyslogd(8), syslog(8), syslogd(8)</member>
     <member>fstab(5), mount(8), losetup(8), cryptsetup(8)</member>
     <member>haveged(8), random(4)</member>
     <member>ssh(1), sshd(8), ssh_config(5), sshd_config(5), ssh-agent(1),
     ssh-add(1), ssh-keygen(1)</member>
     <member>cron(1), crontab(5), at(1), atd(8)</member>
     <member>systemctl(1), daemon(7), systemd.unit(5), systemd.special(5),
             kernel-command-line(7), bootup(7), systemd.directives</member>
    </simplelist>
   </listitem>
  </itemizedlist>
 </sect1>
 </chapter>