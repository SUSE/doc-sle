msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-08-18 22:17+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Put one translator per line, in the form NAME <EMAIL>, YEAR1, YEAR2
msgctxt "_"
msgid "translator-credits"
msgstr "translator-credits"

#. (itstool) path: sect1/title
#: xml/vt_io.xml:9
msgid "I/O Virtualization"
msgstr "I/O Virtualization"

#. (itstool) path: sect1/para
#: xml/vt_io.xml:17
msgid ""
"VM Guests not only share CPU and memory resources of the host system, but "
"also the I/O subsystem. Because software I/O virtualization techniques "
"deliver less performance than bare metal, hardware solutions that deliver "
"almost <quote>native</quote> performance have been developed recently. "
"<phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</"
"phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os="
"\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE "
"Linux Enterprise Real Time Extension</phrase></phrase> supports the "
"following I/O virtualization techniques:"
msgstr ""
"VM Guests not only share CPU and memory resources of the host system, but "
"also the I/O subsystem. Because software I/O virtualization techniques "
"deliver less performance than bare metal, hardware solutions that deliver "
"almost <quote>native</quote> performance have been developed recently. "
"<phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</"
"phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os="
"\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE "
"Linux Enterprise Real Time Extension</phrase></phrase> supports the "
"following I/O virtualization techniques:"

#. (itstool) path: varlistentry/term
#: xml/vt_io.xml:27
msgid "Full Virtualization"
msgstr "Full Virtualization"

#. (itstool) path: listitem/para
#: xml/vt_io.xml:29
msgid ""
"Fully Virtualized (FV) drivers emulate widely supported real devices, which "
"can be used with an existing driver in the VM Guest. The guest is also "
"called <emphasis>Hardware Virtual Machine</emphasis> (HVM). Since the "
"physical device on the VM Host Server may differ from the emulated one, the "
"hypervisor needs to process all I/O operations before handing them over to "
"the physical device. Therefore all I/O operations need to traverse two "
"software layers, a process that not only significantly impacts I/O "
"performance, but also consumes CPU time."
msgstr ""
"Fully Virtualized (FV) drivers emulate widely supported real devices, which "
"can be used with an existing driver in the VM Guest. The guest is also "
"called <emphasis>Hardware Virtual Machine</emphasis> (HVM). Since the "
"physical device on the VM Host Server may differ from the emulated one, the "
"hypervisor needs to process all I/O operations before handing them over to "
"the physical device. Therefore all I/O operations need to traverse two "
"software layers, a process that not only significantly impacts I/O "
"performance, but also consumes CPU time."

#. (itstool) path: varlistentry/term
#: xml/vt_io.xml:42
msgid "Paravirtualization"
msgstr "Paravirtualization"

#. (itstool) path: listitem/para
#: xml/vt_io.xml:44
msgid ""
"Paravirtualization (PV) allows direct communication between the hypervisor "
"and the VM Guest. With less overhead involved, performance is much better "
"than with full virtualization. However, paravirtualization requires either "
"the guest operating system to be modified to support the paravirtualization "
"API or paravirtualized drivers. <phrase os=\"sles;sled\">See <xref linkend="
"\"sec.kvm.requires.guests.virt_drivers\"/> for a list of guest operating "
"systems supporting paravirtualization.</phrase>"
msgstr ""
"Paravirtualization (PV) allows direct communication between the hypervisor "
"and the VM Guest. With less overhead involved, performance is much better "
"than with full virtualization. However, paravirtualization requires either "
"the guest operating system to be modified to support the paravirtualization "
"API or paravirtualized drivers. <phrase os=\"sles;sled\">See <xref linkend="
"\"sec.kvm.requires.guests.virt_drivers\"/> for a list of guest operating "
"systems supporting paravirtualization.</phrase>"

#. (itstool) path: varlistentry/term
#: xml/vt_io.xml:57
msgid "PVHVM"
msgstr "PVHVM"

#. (itstool) path: listitem/para
#: xml/vt_io.xml:59
msgid ""
"This type of virtualization enhances HVM (see <xref linkend=\"vt.io.fullv\"/"
">) with paravirtualized (PV) drivers, and PV interrupt and timer handling."
msgstr ""
"This type of virtualization enhances HVM (see <xref linkend=\"vt.io.fullv\"/"
">) with paravirtualized (PV) drivers, and PV interrupt and timer handling."

#. (itstool) path: varlistentry/term
#: xml/vt_io.xml:67
msgid "VFIO"
msgstr "VFIO"

#. (itstool) path: listitem/para
#: xml/vt_io.xml:69
msgid ""
"VFIO stands for <emphasis>Virtual Function I/O</emphasis> and is a new user-"
"level driver framework for Linux. It replaces the traditional KVM PCI Pass-"
"Through device assignment. The VFIO driver exposes direct device access to "
"user space in a secure memory (<xref linkend=\"gloss.vt.acronym.iommu\"/>) "
"protected environment. With VFIO, a VM Guest can directly access hardware "
"devices on the VM Host Server (pass-through), avoiding performance issues "
"caused by emulation in performance critical paths. This method does not "
"allow to share devices—each device can only be assigned to a single VM "
"Guest. VFIO needs to be supported by the VM Host Server CPU, chipset and the "
"BIOS/EFI."
msgstr ""
"VFIO stands for <emphasis>Virtual Function I/O</emphasis> and is a new user-"
"level driver framework for Linux. It replaces the traditional KVM PCI Pass-"
"Through device assignment. The VFIO driver exposes direct device access to "
"user space in a secure memory (<xref linkend=\"gloss.vt.acronym.iommu\"/>) "
"protected environment. With VFIO, a VM Guest can directly access hardware "
"devices on the VM Host Server (pass-through), avoiding performance issues "
"caused by emulation in performance critical paths. This method does not "
"allow to share devices—each device can only be assigned to a single VM "
"Guest. VFIO needs to be supported by the VM Host Server CPU, chipset and the "
"BIOS/EFI."

#. (itstool) path: listitem/para
#: xml/vt_io.xml:82
msgid ""
"Compared to the legacy KVM PCI device assignment, VFIO has the following "
"advantages:"
msgstr ""
"Compared to the legacy KVM PCI device assignment, VFIO has the following "
"advantages:"

#. (itstool) path: listitem/para
#: xml/vt_io.xml:88
msgid "Resource access is compatible with secure boot."
msgstr "Resource access is compatible with secure boot."

#. (itstool) path: listitem/para
#: xml/vt_io.xml:93
msgid "Device is isolated and its memory access protected."
msgstr "Device is isolated and its memory access protected."

#. (itstool) path: listitem/para
#: xml/vt_io.xml:98
msgid ""
"Offers a user space device driver with more flexible device ownership model."
msgstr ""
"Offers a user space device driver with more flexible device ownership model."

#. (itstool) path: listitem/para
#: xml/vt_io.xml:104
msgid ""
"Is independent of KVM technology, and not bound to x86 architecture only."
msgstr ""
"Is independent of KVM technology, and not bound to x86 architecture only."

#. (itstool) path: listitem/para
#: xml/vt_io.xml:110
msgid ""
"As of <phrase os=\"sles;sled\">SUSE Linux Enterprise Server 12 SP2</"
"phrase><phrase os=\"osuse\">openSUSE 42.2</phrase>, the USB and PCI Pass-"
"through methods of device assignment are considered deprecated and were "
"superseded by the VFIO model."
msgstr ""
"As of <phrase os=\"sles;sled\">SUSE Linux Enterprise Server 12 SP2</"
"phrase><phrase os=\"osuse\">openSUSE 42.2</phrase>, the USB and PCI Pass-"
"through methods of device assignment are considered deprecated and were "
"superseded by the VFIO model."

#. (itstool) path: varlistentry/term
#: xml/vt_io.xml:119
msgid "SR-IOV"
msgstr "SR-IOV"

#. (itstool) path: listitem/para
#: xml/vt_io.xml:121
msgid ""
"The latest I/O virtualization technique, Single Root I/O Virtualization SR-"
"IOV combines the benefits of the aforementioned techniques—performance and "
"the ability to share a device with several VM Guests. SR-IOV requires "
"special I/O devices, that are capable of replicating resources so they "
"appear as multiple separate devices. Each such <quote>pseudo</quote> device "
"can be directly used by a single guest. However, for network cards for "
"example the number of concurrent queues that can be used is limited, "
"potentially reducing performance for the VM Guest compared to "
"paravirtualized drivers. On the VM Host Server, SR-IOV must be supported by "
"the I/O device, the CPU and chipset, the BIOS/EFI and the hypervisor—for "
"setup instructions see <xref linkend=\"sec.libvirt.config.pci\"/>."
msgstr ""
"The latest I/O virtualization technique, Single Root I/O Virtualization SR-"
"IOV combines the benefits of the aforementioned techniques—performance and "
"the ability to share a device with several VM Guests. SR-IOV requires "
"special I/O devices, that are capable of replicating resources so they "
"appear as multiple separate devices. Each such <quote>pseudo</quote> device "
"can be directly used by a single guest. However, for network cards for "
"example the number of concurrent queues that can be used is limited, "
"potentially reducing performance for the VM Guest compared to "
"paravirtualized drivers. On the VM Host Server, SR-IOV must be supported by "
"the I/O device, the CPU and chipset, the BIOS/EFI and the hypervisor—for "
"setup instructions see <xref linkend=\"sec.libvirt.config.pci\"/>."

#. (itstool) path: important/title
#: xml/vt_io.xml:143
msgid "Requirements for VFIO and SR-IOV"
msgstr "Requirements for VFIO and SR-IOV"

#. (itstool) path: important/para
#: xml/vt_io.xml:144
msgid ""
"To be able to use the VFIO and SR-IOV features, the VM Host Server needs to "
"fulfill the following requirements:"
msgstr ""
"To be able to use the VFIO and SR-IOV features, the VM Host Server needs to "
"fulfill the following requirements:"

#. (itstool) path: listitem/para
#: xml/vt_io.xml:150
msgid "IOMMU needs to be enabled in the BIOS/EFI."
msgstr "IOMMU needs to be enabled in the BIOS/EFI."

#. (itstool) path: listitem/para
#: xml/vt_io.xml:155
msgid ""
"For Intel CPUs, the kernel parameter <literal>intel_iommu=on</literal> needs "
"to be provided on the kernel command line. For more information, see <xref "
"linkend=\"sec.grub2.yast2.config.advanced.tab2\"/>."
msgstr ""
"For Intel CPUs, the kernel parameter <literal>intel_iommu=on</literal> needs "
"to be provided on the kernel command line. For more information, see <xref "
"linkend=\"sec.grub2.yast2.config.advanced.tab2\"/>."

#. (itstool) path: listitem/para
#: xml/vt_io.xml:162
msgid ""
"The VFIO infrastructure needs to be available. This can be achieved by "
"loading the kernel module <systemitem class=\"resource\">vfio_pci</"
"systemitem>. For more information, see <xref linkend=\"sec.boot.systemd."
"advanced.kernel_modules\"/>."
msgstr ""
"The VFIO infrastructure needs to be available. This can be achieved by "
"loading the kernel module <systemitem class=\"resource\">vfio_pci</"
"systemitem>. For more information, see <xref linkend=\"sec.boot.systemd."
"advanced.kernel_modules\"/>."
