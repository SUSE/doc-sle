msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-08-18 23:23+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Put one translator per line, in the form NAME <EMAIL>, YEAR1, YEAR2
msgctxt "_"
msgid "translator-credits"
msgstr ""

#. (itstool) path: chapter/title
#: xml/bootconcept.xml:9
msgid "Introduction to the Booting Process"
msgstr ""

#. (itstool) path: abstract/para
#: xml/bootconcept.xml:12
msgid "Booting a Linux system involves different components and tasks. The hardware itself is initialized by the BIOS or the UEFI, which starts the kernel by means of a boot loader. After this point, the boot process is completely controlled by the operating system and handled by <systemitem class=\"daemon\">systemd</systemitem>. <systemitem class=\"daemon\">systemd</systemitem> provides a set of <quote>targets</quote> that boot setups for everyday usage, maintenance or emergencies."
msgstr ""

#. (itstool) path: docmanager/translation
#: xml/bootconcept.xml:23
msgid "yes"
msgstr ""

#. (itstool) path: sect1/title
#: xml/bootconcept.xml:27
msgid "The Linux Boot Process"
msgstr ""

#. (itstool) path: sect1/para
#: xml/bootconcept.xml:29
msgid "The Linux boot process consists of several stages, each represented by a different component. The following list briefly summarizes the boot process and features all the major components involved:"
msgstr ""

#. (itstool) path: formalpara/title
#: xml/bootconcept.xml:38
msgid "BIOS/UEFI"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/bootconcept.xml:39
msgid "After turning on the computer, the BIOS or the UEFI initializes the screen and keyboard, and tests the main memory. Up to this stage, the machine does not access any mass storage media. Subsequently, the information about the current date, time, and the most important peripherals are loaded from the CMOS values. When the first hard disk and its geometry are recognized, the system control passes from the BIOS to the boot loader. If the BIOS supports network booting, it is also possible to configure a boot server that provides the boot loader. On AMD64/Intel 64 systems, PXE boot is needed. Other architectures commonly use the BOOTP protocol to get the boot loader. For more information on UEFI, refer to <xref linkend=\"cha.uefi\"/>."
msgstr ""

#. (itstool) path: formalpara/title
#: xml/bootconcept.xml:56
msgid "Boot Loader"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/bootconcept.xml:57
msgid "The first physical 512-byte data sector of the first hard disk is loaded into the main memory and the <emphasis>boot loader</emphasis> that resides at the beginning of this sector takes over. The commands executed by the boot loader determine the remaining part of the boot process. Therefore, the first 512 bytes on the first hard disk are called the <emphasis>Master Boot Record</emphasis> (MBR). The boot loader then passes control to the actual operating system, in this case, the Linux kernel. More information about GRUB 2, the Linux boot loader, can be found in <xref linkend=\"cha.grub2\"/>. For a network boot, the BIOS acts as the boot loader. It gets the boot image from the boot server and starts the system. This is completely independent of local hard disks."
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:71
msgid "If the root file system fails to mount from within the boot environment, it must be checked and repaired before the boot can continue. The file system checker will be automatically started for Ext3 and Ext4 file systems. The repair process is not automated for XFS and Btrfs file systems, and the user is be presented with information describing the options available to repair the file system. When the file system has been successfully repaired, exiting the boot environment will cause the system to retry mounting the root file system. If successful, the boot will continue normally."
msgstr ""

#. (itstool) path: formalpara/title
#: xml/bootconcept.xml:85
msgid "Kernel and <systemitem>initramfs</systemitem>"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/bootconcept.xml:86
msgid "To pass system control, the boot loader loads both the kernel and an initial RAM-based file system (<systemitem>initramfs</systemitem>) into memory. The contents of the <systemitem>initramfs</systemitem> can be used by the kernel directly. <systemitem>initramfs</systemitem> contains a small executable called <systemitem>init</systemitem> that handles the mounting of the real root file system. If special hardware drivers are needed before the mass storage can be accessed, they must be in <systemitem>initramfs</systemitem>. For more information about <systemitem>initramfs</systemitem>, refer to <xref linkend=\"sec.boot.initrd\"/>. If the system does not have a local hard disk, the <systemitem>initramfs</systemitem> must provide the root file system for the kernel. This can be done using a network block device like iSCSI or SAN, but it is also possible to use NFS as the root device."
msgstr ""

#. (itstool) path: note/title
#: xml/bootconcept.xml:105
msgid "The <systemitem>init</systemitem> Process Naming"
msgstr ""

#. (itstool) path: note/para
#: xml/bootconcept.xml:106
msgid "Two different programs are commonly named <quote>init</quote>:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:111
msgid "the <systemitem>initramfs</systemitem> process mounting the root file system"
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:117
msgid "the operating system process setting up the system"
msgstr ""

#. (itstool) path: note/para
#: xml/bootconcept.xml:122
msgid "In this chapter we will therefore refer to them as <quote><systemitem>init</systemitem> on <systemitem>initramfs</systemitem></quote> and <quote><systemitem class=\"daemon\">systemd</systemitem></quote>, respectively."
msgstr ""

#. (itstool) path: formalpara/title
#: xml/bootconcept.xml:132
msgid "<systemitem>init</systemitem> on <systemitem>initramfs</systemitem>"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/bootconcept.xml:133
msgid "This program performs all actions needed to mount the proper root file system. It provides kernel functionality for the needed file system and device drivers for mass storage controllers with <systemitem class=\"service\">udev</systemitem>. After the root file system has been found, it is checked for errors and mounted. If this is successful, the <systemitem>initramfs</systemitem> is cleaned and the <systemitem class=\"daemon\">systemd</systemitem> daemon on the root file system is executed. For more information about <systemitem>init</systemitem> on <systemitem>initramfs</systemitem>, refer to <xref linkend=\"sec.boot.linuxrc\"/>. Find more information about <systemitem class=\"service\">udev</systemitem> in <xref linkend=\"cha.udev\"/>."
msgstr ""

#. (itstool) path: formalpara/title
#: xml/bootconcept.xml:151
msgid "<systemitem class=\"daemon\">systemd</systemitem>"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/bootconcept.xml:152
msgid "By starting services and mounting file systems, <systemitem class=\"daemon\">systemd</systemitem> handles the actual booting of the system. <systemitem class=\"daemon\">systemd</systemitem> is described in <xref linkend=\"cha.systemd\"/>."
msgstr ""

#. (itstool) path: sect1/title
#: xml/bootconcept.xml:162
msgid "<systemitem>initramfs</systemitem>"
msgstr ""

#. (itstool) path: sect1/para
#: xml/bootconcept.xml:164
msgid "<systemitem>initramfs</systemitem> is a small cpio archive that the kernel can load into a RAM disk. It provides a minimal Linux environment that enables the execution of programs before the actual root file system is mounted. This minimal Linux environment is loaded into memory by BIOS or UEFI routines and does not have specific hardware requirements other than sufficient memory. The <systemitem>initramfs</systemitem> archive must always provide an executable named <systemitem>init</systemitem> that executes the <systemitem class=\"daemon\">systemd</systemitem> daemon on the root file system for the boot process to proceed."
msgstr ""

#. (itstool) path: sect1/para
#: xml/bootconcept.xml:176
msgid "Before the root file system can be mounted and the operating system can be started, the kernel needs the corresponding drivers to access the device on which the root file system is located. These drivers may include special drivers for certain kinds of hard disks or even network drivers to access a network file system. The needed modules for the root file system may be loaded by <systemitem>init</systemitem> on <systemitem>initramfs</systemitem>. After the modules are loaded, <systemitem class=\"service\">udev</systemitem> provides the <systemitem>initramfs</systemitem> with the needed devices. Later in the boot process, after changing the root file system, it is necessary to regenerate the devices. This is done by the <systemitem class=\"daemon\">systemd</systemitem> unit <filename>udev.service</filename> with the command <command>udevtrigger</command>."
msgstr ""

#. (itstool) path: sect1/para
#: xml/bootconcept.xml:192
msgid "If you need to change hardware (for example, hard disks), and this hardware requires different drivers to be in the kernel at boot time, you must update the <systemitem>initramfs</systemitem> file. This is done by calling <command>dracut</command> <option>-f</option> (the option <option>-f</option> overwrites the existing initramfs file). To add a driver for the new hardware, edit <filename>/etc/dracut.conf.d/01-dist.conf</filename> and add the following line."
msgstr ""

#. (itstool) path: sect1/screen
#: xml/bootconcept.xml:202
#, no-wrap
msgid ""
"force_drivers+=\"<replaceable>DRIVER1</replaceable>\""
msgstr ""

#. (itstool) path: sect1/para
#: xml/bootconcept.xml:204
msgid "Replace <replaceable>DRIVER1</replaceable> with the module name of the driver. If you need to add more than one driver, list them space-separated (<literal><replaceable>DRIVER1</replaceable> <replaceable>DRIVER2</replaceable></literal>)."
msgstr ""

#. (itstool) path: important/title
#: xml/bootconcept.xml:212
msgid "Updating <systemitem>initramfs</systemitem> or <systemitem>init</systemitem>"
msgstr ""

#. (itstool) path: important/para
#: xml/bootconcept.xml:213
msgid "The boot loader loads <systemitem>initramfs</systemitem> or <systemitem>init</systemitem> in the same way as the kernel. It is not necessary to re-install GRUB 2 after updating <systemitem>initramfs</systemitem> or <systemitem>init</systemitem>, because GRUB 2 searches the directory for the right file when booting."
msgstr ""

#. (itstool) path: tip/title
#: xml/bootconcept.xml:223
msgid "Changing Kernel Variables"
msgstr ""

#. (itstool) path: tip/para
#: xml/bootconcept.xml:224
msgid "If you change the values of kernel variables via the <command>sysctl</command> interface by editing related files (<filename>/etc/sysctl.conf</filename> or <filename>/etc/sysctl.d/*.conf</filename>), the change will be lost on the next system reboot. Even if you load the values with <command>sysctl --system</command> at runtime, the changes are not saved into the initramfs file. You need to update it by calling <command>dracut</command> <option>-f</option> (the option <option>-f</option> overwrites the existing initramfs file)."
msgstr ""

#. (itstool) path: sect1/title
#: xml/bootconcept.xml:238
msgid "Init on <systemitem>initramfs</systemitem>"
msgstr ""

#. (itstool) path: sect1/para
#: xml/bootconcept.xml:240
msgid "The main purpose of <systemitem>init</systemitem> on <systemitem>initramfs</systemitem> is to prepare the mounting of and access to the real root file system. Depending on your system configuration, <systemitem>init</systemitem> on <systemitem>initramfs</systemitem> is responsible for the following tasks."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/bootconcept.xml:250
msgid "Loading Kernel Modules"
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:252
msgid "Depending on your hardware configuration, special drivers may be needed to access the hardware components of your computer (the most important component being your hard disk). To access the final root file system, the kernel needs to load the proper file system drivers."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/bootconcept.xml:261
msgid "Providing Block Special Files"
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:263
msgid "For each loaded module, the kernel generates device events. <systemitem class=\"service\">udev</systemitem> handles these events and generates the required special block files on a RAM file system in <filename>/dev</filename>. Without those special files, the file system and other devices would not be accessible."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/bootconcept.xml:273
msgid "Managing RAID and LVM Setups"
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:275
msgid "If you configured your system to hold the root file system under RAID or LVM, <systemitem>init</systemitem> on <systemitem>initramfs</systemitem> sets up LVM or RAID to enable access to the root file system later."
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:280
msgid "To change your <filename>/usr</filename> or <systemitem>swap</systemitem> partitions directly without the help of YaST, further actions are needed. If you forget these steps, your system will start in emergency mode. To avoid starting in emergency mode, perform the following steps:"
msgstr ""

#. (itstool) path: procedure/title
#: xml/bootconcept.xml:288
msgid "Updating Init RAM Disk When Switching to Logical Volumes"
msgstr ""

#. (itstool) path: step/para
#: xml/bootconcept.xml:290
msgid "Edit the corresponding entry in <filename>/etc/fstab</filename> and replace your previous partitions with the logical volume."
msgstr ""

#. (itstool) path: step/para
#: xml/bootconcept.xml:296
msgid "Execute the following commands:"
msgstr ""

#. (itstool) path: step/screen
#: xml/bootconcept.xml:299
#, no-wrap
msgid ""
"<prompt role=\"root\">root # </prompt><command>mount</command> -a\n"
"<prompt role=\"root\">root # </prompt><command>swapon</command> -a"
msgstr ""

#. (itstool) path: step/para
#: xml/bootconcept.xml:303
msgid "Regenerate your initial RAM disk (initramfs) with <command>mkinitrd</command> or <command>dracut</command>."
msgstr ""

#. (itstool) path: step/para
#: xml/bootconcept.xml:309
msgid "For z Systems, additionally run <command>grub2-install</command>."
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:314
msgid "Find more information about RAID and LVM in <xref linkend=\"cha.advdisk\"/>."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/bootconcept.xml:322
msgid "Managing Network Configuration"
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:324
msgid "If you configured your system to use a network-mounted root file system (mounted via NFS), <systemitem>init</systemitem> on <systemitem>initramfs</systemitem> must make sure that the proper network drivers are loaded and that they are set up to allow access to the root file system."
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:331
msgid "If the file system resides on a network block device like iSCSI or SAN, the connection to the storage server is also set up by <systemitem>init</systemitem> on <systemitem>initramfs</systemitem>. <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> supports booting from a secondary iSCSI target if the primary target is not available. <phrase os=\"sles\">For more details regarding configuration of the booting iSCSI target refer to <xref linkend=\"sec.iscsi.initiator.yast\"/></phrase>."
msgstr ""

#. (itstool) path: sect1/para
#: xml/bootconcept.xml:344
msgid "When <systemitem>init</systemitem> on <systemitem>initramfs</systemitem> is called during the initial boot as part of the installation process, its tasks differ from those mentioned above:"
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/bootconcept.xml:352
msgid "Finding the Installation Medium"
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:354
msgid "When starting the installation process, your machine loads an installation kernel and a special <systemitem>init</systemitem> containing the YaST installer. The YaST installer is running in a RAM file system and needs to have information about the location of the installation medium to access it for installing the operating system."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/bootconcept.xml:364
msgid "Initiating Hardware Recognition and Loading Appropriate Kernel Modules"
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:368
msgid "As mentioned in <xref linkend=\"sec.boot.initrd\"/>, the boot process starts with a minimum set of drivers that can be used with most hardware configurations. <systemitem>init</systemitem> starts an initial hardware scanning process that determines the set of drivers suitable for your hardware configuration. These drivers are used to generate a custom <systemitem>initramfs</systemitem> that is needed to boot the system. If the modules are not needed for boot but for coldplug, the modules can be loaded with <systemitem class=\"daemon\">systemd</systemitem>; for more information, see <xref linkend=\"sec.boot.systemd.advanced.kernel_modules\"/>."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/bootconcept.xml:385
msgid "Loading the Installation System"
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:387
msgid "When the hardware is properly recognized, the appropriate drivers are loaded. The <systemitem class=\"service\">udev</systemitem> program creates the special device files and <systemitem>init</systemitem> starts the installation system with the YaST installer."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/bootconcept.xml:396
msgid "Starting YaST"
msgstr ""

#. (itstool) path: listitem/para
#: xml/bootconcept.xml:398
msgid "Finally, <systemitem>init</systemitem> starts YaST, which starts package installation and system configuration."
msgstr ""

