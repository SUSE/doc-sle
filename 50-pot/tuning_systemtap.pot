msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-08-18 22:19+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Put one translator per line, in the form NAME <EMAIL>, YEAR1, YEAR2
msgctxt "_"
msgid "translator-credits"
msgstr ""

#. (itstool) path: chapter/title
#: xml/tuning_systemtap.xml:49
msgid "SystemTapâ€”Filtering and Analyzing System Data"
msgstr ""

#. (itstool) path: chapter/para
#: xml/tuning_systemtap.xml:66
msgid "SystemTap provides a command line interface and a scripting language to examine the activities of a running Linux system, particularly the kernel, in fine detail. SystemTap scripts are written in the SystemTap scripting language, are then compiled to C-code kernel modules and inserted into the kernel. The scripts can be designed to extract, filter and summarize data, thus allowing the diagnosis of complex performance problems or functional problems. SystemTap provides information similar to the output of tools like <command>netstat</command>, <command>ps</command>, <command>top</command>, and <command>iostat</command>. However, more filtering and analysis options can be used for the collected information."
msgstr ""

#. (itstool) path: sect1/title
#: xml/tuning_systemtap.xml:108
msgid "Conceptual Overview"
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:110
msgid "Each time you run a SystemTap script, a SystemTap session is started. Several passes are done on the script before it is allowed to run. Then, the script is compiled into a kernel module and loaded. If the script has been executed before and no system components have changed (for example, different compiler or kernel versions, library paths, or script contents), SystemTap does not compile the script again. Instead, it uses the <filename>*.c</filename> and <filename>*.ko</filename> data stored in the SystemTap cache (<filename>~/.systemtap</filename>)."
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:120
msgid "The module is unloaded when the tap has finished running. For an example, see the test run in <xref linkend=\"sec.tuning.systemtap.setup\"/> and the respective explanation."
msgstr ""

#. (itstool) path: sect2/title
#: xml/tuning_systemtap.xml:128
msgid "SystemTap Scripts"
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:129
msgid "SystemTap usage is based on SystemTap scripts (<filename>*.stp</filename>). They tell SystemTap which type of information to collect, and what to do once that information is collected. The scripts are written in the SystemTap scripting language that is similar to AWK and C. For the language definition, see <link xlink:href=\"http://sourceware.org/systemtap/langref/\"/>. A lot of useful example scripts are available from <link xlink:href=\"http://www.sourceware.org/systemtap/examples/\"/>."
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:139
msgid "The essential idea behind a SystemTap script is to name <literal>events</literal>, and to give them <literal>handlers</literal>. When SystemTap runs the script, it monitors for certain events. When an event occurs, the Linux kernel runs the handler as a sub-routine, then resumes. Thus, events serve as the triggers for handlers to run. Handlers can record specified data and print it in a certain manner."
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:147
msgid "The SystemTap language only uses a few data types (integers, strings, and associative arrays of these), and full control structures (blocks, conditionals, loops, functions). It has a lightweight punctuation (semicolons are optional) and does not need detailed declarations (types are inferred and checked automatically)."
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:154
msgid "For more information about SystemTap scripts and their syntax, refer to <xref linkend=\"sec.tuning.systemtap.syntax\"/> and to the <command>stapprobes</command> and <command>stapfuncs</command> man pages, that are available with the <systemitem class=\"resource\">systemtap-docs</systemitem> package."
msgstr ""

#. (itstool) path: sect2/title
#: xml/tuning_systemtap.xml:164
msgid "Tapsets"
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:165
msgid "Tapsets are a library of pre-written probes and functions that can be used in SystemTap scripts. When a user runs a SystemTap script, SystemTap checks the script's probe events and handlers against the tapset library. SystemTap then loads the corresponding probes and functions before translating the script to C. Like SystemTap scripts themselves, tapsets use the file name extension <filename>*.stp</filename>."
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:178
msgid "However, unlike SystemTap scripts, tapsets are not meant for direct execution. They constitute the library from which other scripts can pull definitions. Thus, the tapset library is an abstraction layer designed to make it easier for users to define events and functions. Tapsets provide aliases for functions that users could want to specify as an event. Knowing the proper alias is often easier than remembering specific kernel functions that might vary between kernel versions."
msgstr ""

#. (itstool) path: sect2/title
#: xml/tuning_systemtap.xml:190
msgid "Commands and Privileges"
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:191
msgid "The main commands associated with SystemTap are <command>stap</command> and <command>staprun</command>. To execute them, you either need <systemitem class=\"username\">root</systemitem> privileges or must be a member of the <systemitem class=\"groupname\">stapdev</systemitem> or <systemitem class=\"groupname\">stapusr</systemitem> group."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:200
msgid "<command>stap</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:203
msgid "SystemTap front-end. Runs a SystemTap script (either from file, or from standard input). It translates the script into C code, compiles it, and loads the resulting kernel module into a running Linux kernel. Then, the requested system trace or probe functions are performed."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:213
msgid "<command>staprun</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:216
msgid "SystemTap back-end. Loads and unloads kernel modules produced by the SystemTap front-end."
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:224
msgid "For a list of options for each command, use <option>--help</option>. For details, refer to the <command>stap</command> and the <command>staprun</command> man pages."
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:244
msgid "To avoid giving <systemitem class=\"username\">root</systemitem> access to users solely to enable them to work with SystemTap, use one of the following SystemTap groups. They are not available by default on <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>, but you can create the groups and modify the access rights accordingly. Also adjust the permissions of the <command>staprun</command> command if the security implications are appropriate for your environment."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:255
msgid "<systemitem class=\"groupname\">stapdev</systemitem>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:258
msgid "Members of this group can run SystemTap scripts with <command>stap</command>, or run SystemTap instrumentation modules with <command>staprun</command>. As running <command>stap</command> involves compiling scripts into kernel modules and loading them into the kernel, members of this group still have effective <systemitem class=\"username\">root</systemitem> access."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:269
msgid "<systemitem class=\"groupname\">stapusr</systemitem>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:272
msgid "Members of this group are only allowed to run SystemTap instrumentation modules with <command>staprun</command>. In addition, they can only run those modules from <filename>/lib/modules/<replaceable>KERNEL_VERSION</replaceable>/systemtap/</filename>. This directory must be owned by <systemitem class=\"username\">root</systemitem> and must only be writable for the <systemitem class=\"username\">root</systemitem> user."
msgstr ""

#. (itstool) path: sect2/title
#: xml/tuning_systemtap.xml:286
msgid "Important Files and Directories"
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:287
msgid "The following list gives an overview of the SystemTap main files and directories."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:293
msgid "<filename>/lib/modules/<replaceable>KERNEL_VERSION</replaceable>/systemtap/</filename>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:296
msgid "Holds the SystemTap instrumentation modules."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:302
msgid "<filename>/usr/share/systemtap/tapset/</filename>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:305
msgid "Holds the standard library of tapsets."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:311
msgid "<filename>/usr/share/doc/packages/systemtap/examples</filename>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:314
msgid "Holds several example SystemTap scripts for various purposes. Only available if the <systemitem class=\"resource\">systemtap-docs</systemitem> package is installed."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:323
msgid "<filename>~/.systemtap/cache</filename>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:326
msgid "Data directory for cached SystemTap files."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:332
msgid "<filename>/tmp/stap*</filename>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:335
msgid "Temporary directory for SystemTap files, including translated C code and kernel object."
msgstr ""

#. (itstool) path: sect1/title
#: xml/tuning_systemtap.xml:407
msgid "Installation and Setup"
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:409
msgid "As SystemTap needs information about the kernel, some additional kernel-related packages must be installed. For each kernel you want to probe with SystemTap, you need to install a set of the following packages. This set should exactly match the kernel version and flavor (indicated by <literal>*</literal> in the overview below)."
msgstr ""

#. (itstool) path: important/title
#: xml/tuning_systemtap.xml:421
msgid "Repository for Packages with Debugging Information"
msgstr ""

#. (itstool) path: important/para
#: xml/tuning_systemtap.xml:422
msgid "If you subscribed your system for online updates, you can find <quote>debuginfo</quote> packages in the <literal>*-Debuginfo-Updates</literal> online installation repository relevant for <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> <phrase role=\"productnumber\"><phrase os=\"osuse\">42.3</phrase><phrase os=\"sles;sled;slerte\">12 SP3</phrase></phrase>. Use YaST to enable the repository."
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:446
msgid "For the classic SystemTap setup, install the following packages (using either YaST or <command>zypper</command>)."
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:454
msgid "<systemitem class=\"resource\">systemtap</systemitem>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:459
msgid "<systemitem class=\"resource\">systemtap-server</systemitem>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:464
msgid "<systemitem class=\"resource\">systemtap-docs</systemitem> (optional)"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:469
msgid "<systemitem class=\"resource\">kernel-*-base</systemitem>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:476
msgid "<systemitem class=\"resource\">kernel-*-debuginfo</systemitem>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:481
msgid "<systemitem class=\"resource\">kernel-*-devel</systemitem>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:486
msgid "<systemitem class=\"resource\">kernel-source-*</systemitem>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:491
msgid "<systemitem class=\"resource\">gcc</systemitem>"
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:500
msgid "To get access to the man pages and to a helpful collection of example SystemTap scripts for various purposes, additionally install the <systemitem class=\"resource\">systemtap-docs</systemitem> package."
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:506
msgid "To check if all packages are correctly installed on the machine and if SystemTap is ready to use, execute the following command as <systemitem class=\"username\">root</systemitem>."
msgstr ""

#. (itstool) path: sect1/screen
#: xml/tuning_systemtap.xml:512
#, no-wrap
msgid ""
"stap -v -e 'probe vfs.read {printf(\"read performed\\n\"); exit()}'"
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:514
msgid "It probes the currently used kernel by running a script and returning an output. If the output is similar to the following, SystemTap is successfully deployed and ready to use:"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/tuning_systemtap.xml:520
#, no-wrap
msgid ""
"Pass <co xml:id=\"co.tuning.stap.pass1\"/>: parsed user script and 59 library script(s) in 80usr/0sys/214real ms.\n"
"Pass <co xml:id=\"co.tuning.stap.pass2\"/>: analyzed script: 1 probe(s), 11 function(s), 2 embed(s), 1 global(s) in\n"
" 140usr/20sys/412real ms.\n"
"Pass <co xml:id=\"co.tuning.stap.pass3\"/>: translated to C into\n"
" \"/tmp/stapDwEk76/stap_1856e21ea1c246da85ad8c66b4338349_4970.c\" in 160usr/0sys/408real ms.\n"
"Pass <co xml:id=\"co.tuning.stap.pass4\"/>: compiled C into \"stap_1856e21ea1c246da85ad8c66b4338349_4970.ko\" in\n"
" 2030usr/360sys/10182real ms.\n"
"Pass <co xml:id=\"co.tuning.stap.pass5\"/>: starting run.\n"
" read performed\n"
"Pass <xref linkend=\"co.tuning.stap.pass5\"/>: run completed in 10usr/20sys/257real ms. "
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:533
msgid "Checks the script against the existing tapset library in <filename>/usr/share/systemtap/tapset/</filename> for any tapsets used. Tapsets are scripts that form a library of pre-written probes and functions that can be used in SystemTap scripts."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:541
msgid "Examines the script for its components."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:546
msgid "Translates the script to C. Runs the system C compiler to create a kernel module from it. Both the resulting C code (<filename>*.c</filename>) and the kernel module (<filename>*.ko</filename>) are stored in the SystemTap cache, <filename>~/.systemtap</filename>."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:555
msgid "Loads the module and enables all the probes (events and handlers) in the script by hooking into the kernel. The event being probed is a Virtual File System (VFS) read. As the event occurs on any processor, a valid handler is executed (prints the text <literal>read performed</literal>) and closed with no errors."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:564
msgid "After the SystemTap session is terminated, the probes are disabled, and the kernel module is unloaded."
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:571
msgid "In case any error messages appear during the test, check the output for hints about any missing packages and make sure they are installed correctly. Rebooting and loading the appropriate kernel may also be needed."
msgstr ""

#. (itstool) path: sect1/title
#: xml/tuning_systemtap.xml:1241
msgid "Script Syntax"
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1243
msgid "SystemTap scripts consist of the following two components:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1252
msgid "Name the kernel events at the associated handler should be executed. Examples for events are entering or exiting a certain function, a timer expiring, or starting or terminating a session."
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1263
msgid "Series of script language statements that specify the work to be done whenever a certain event occurs. This normally includes extracting data from the event context, storing them into internal variables, or printing results."
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1273
msgid "An event and its corresponding handler is collectively called a <literal>probe</literal>. SystemTap events are also called <literal>probe points</literal>. A probe's handler is also called a <literal>probe body</literal>."
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1280
msgid "Comments can be inserted anywhere in the SystemTap script in various styles: using either <literal>#</literal>, <literal>/* */</literal>, or <literal>//</literal> as marker."
msgstr ""

#. (itstool) path: sect2/title
#: xml/tuning_systemtap.xml:1287
msgid "Probe Format"
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:1288
msgid "A SystemTap script can have multiple probes. They must be written in the following format:"
msgstr ""

#. (itstool) path: sect2/screen
#: xml/tuning_systemtap.xml:1292
#, no-wrap
msgid ""
"probe <replaceable>EVENT</replaceable> {<replaceable>STATEMENTS</replaceable>}"
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:1293
msgid "Each probe has a corresponding statement block. This statement block must be enclosed in <literal>{ }</literal> and contains the statements to be executed per event."
msgstr ""

#. (itstool) path: example/title
#: xml/tuning_systemtap.xml:1299
msgid "Simple SystemTap Script"
msgstr ""

#. (itstool) path: example/para
#: xml/tuning_systemtap.xml:1300
msgid "The following example shows a simple SystemTap script."
msgstr ""

#. (itstool) path: example/screen
#: xml/tuning_systemtap.xml:1303
#, no-wrap
msgid ""
"probe<co xml:id=\"co.tuning.stap.probe\"/> begin<co xml:id=\"co.tuning.stap.event.begin\"/>\n"
"{<co xml:id=\"co.tuning.stap.handler.start\"/>\n"
"   printf<co xml:id=\"co.tuning.stap.handler.function.printf\"/> (\"hello world\\n\")<co xml:id=\"co.tuning.stap.handler.string\"/>\n"
"   exit ()<co xml:id=\"co.tuning.stap.handler.function.exit\"/>\n"
"}<co xml:id=\"co.tuning.stap.handler.end\"/>"
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:1310
msgid "Start of the probe."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:1315
msgid "Event <literal>begin</literal> (the start of the SystemTap session)."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:1320
msgid "Start of the handler definition, indicated by <literal>{</literal>."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:1325
msgid "First function defined in the handler: the <literal>printf</literal> function."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:1331
msgid "String to be printed by the <literal>printf</literal> function, followed by a line break (<literal>/n</literal>)."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:1337
msgid "Second function defined in the handler: the <literal>exit()</literal> function. Note that the SystemTap script will continue to run until the <literal>exit()</literal> function executes. If you want to stop the execution of the script before, stop it manually by pressing <keycombo> <keycap function=\"control\"/> <keycap>C</keycap> </keycombo>."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:1347
msgid "End of the handler definition, indicated by <literal>}</literal>."
msgstr ""

#. (itstool) path: example/para
#: xml/tuning_systemtap.xml:1352
msgid "The event <literal>begin</literal> <xref linkend=\"co.tuning.stap.event.begin\" xrefstyle=\"select:label nopage\"/> (the start of the SystemTap session) triggers the handler enclosed in <literal>{ }</literal>. Here, that is the <literal>printf</literal> function <xref linkend=\"co.tuning.stap.handler.function.printf\" xrefstyle=\"select:label nopage\"/>. In this case, it prints <literal>hello world</literal> followed by a new line <xref linkend=\"co.tuning.stap.handler.string\" xrefstyle=\"select:label nopage\"/>. Then, the script exits."
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:1365
msgid "If your statement block holds several statements, SystemTap executes these statements in sequenceâ€”you do not need to insert special separators or terminators between multiple statements. A statement block can also be nested within another statement blocks. Generally, statement blocks in SystemTap scripts use the same syntax and semantics as in the C programming language."
msgstr ""

#. (itstool) path: sect2/title
#: xml/tuning_systemtap.xml:1376
msgid "SystemTap Events (Probe Points)"
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:1377
msgid "SystemTap supports several built-in events."
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:1380
msgid "The general event syntax is a dotted-symbol sequence. This allows a breakdown of the event namespace into parts. Each component identifier may be parametrized by a string or number literal, with a syntax like a function call. A component may include a <literal>*</literal> character, to expand to other matching probe points. A probe point may be followed by a <literal>?</literal> character, to indicate that it is optional, and that no error should result if it fails to expand. Alternately, a probe point may be followed by a <literal>!</literal> character to indicate that it is both optional and sufficient."
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:1394
msgid "SystemTap supports multiple events per probeâ€”they need to be separated by a comma (<literal>,</literal>). If multiple events are specified in a single probe, SystemTap will execute the handler when any of the specified events occur."
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:1400
msgid "In general, events can be classified into the following categories:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1405
msgid "Synchronous events: Occur when any process executes an instruction at a particular location in kernel code. This gives other events a reference point (instruction address) from which more contextual data may be available."
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1411
msgid "An example for a synchronous event is <literal>vfs.<replaceable>FILE_OPERATION</replaceable></literal>: The entry to the <replaceable>FILE_OPERATION</replaceable> event for Virtual File System (VFS). For example, in <xref linkend=\"sec.tuning.systemtap.setup\"/>, <literal>read</literal> is the <replaceable>FILE_OPERATION</replaceable> event used for VFS."
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1427
msgid "Asynchronous events: Not tied to a particular instruction or location in code. This family of probe points consists mainly of counters, timers, and similar constructs."
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1432
msgid "Examples for asynchronous events are: <literal>begin</literal> (start of a SystemTap sessionâ€”when a SystemTap script is run, <literal>end</literal> (end of a SystemTap session), or timer events. Timer events specify a handler to be executed periodically, like <literal>example timer.s(<replaceable>SECONDS</replaceable>)</literal>, or <literal>timer.ms(<replaceable>MILLISECONDS</replaceable>)</literal>."
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1441
msgid "When used together with other probes that collect information, timer events allow you to print periodic updates and see how that information changes over time."
msgstr ""

#. (itstool) path: example/title
#: xml/tuning_systemtap.xml:1449
msgid "Probe with Timer Event"
msgstr ""

#. (itstool) path: example/para
#: xml/tuning_systemtap.xml:1450
msgid "For example, the following probe would print the text <quote>hello world</quote> every 4 seconds:"
msgstr ""

#. (itstool) path: example/screen
#: xml/tuning_systemtap.xml:1454
#, no-wrap
msgid ""
"probe timer.s(4)\n"
"{\n"
"   printf(\"hello world\\n\")\n"
"}"
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:1459
msgid "For detailed information about supported events, refer to the <command>stapprobes</command> man page. The <citetitle>See Also</citetitle> section of the man page also contains links to other man pages that discuss supported events for specific subsystems and components."
msgstr ""

#. (itstool) path: sect2/title
#: xml/tuning_systemtap.xml:1469
msgid "SystemTap Handlers (Probe Body)"
msgstr ""

#. (itstool) path: sect2/para
#: xml/tuning_systemtap.xml:1470
msgid "Each SystemTap event is accompanied by a corresponding handler defined for that event, consisting of a statement block."
msgstr ""

#. (itstool) path: sect3/title
#: xml/tuning_systemtap.xml:1475
msgid "Functions"
msgstr ""

#. (itstool) path: sect3/para
#: xml/tuning_systemtap.xml:1476
msgid "If you need the same set of statements in multiple probes, you can place them in a function for easy reuse. Functions are defined by the keyword <literal>function</literal> followed by a name. They take any number of string or numeric arguments (by value) and may return a single string or number."
msgstr ""

#. (itstool) path: sect3/screen
#: xml/tuning_systemtap.xml:1483
#, no-wrap
msgid ""
"function <replaceable>FUNCTION_NAME</replaceable>(<replaceable>ARGUMENTS</replaceable>) {<replaceable>STATEMENTS</replaceable>}\n"
"probe <replaceable>EVENT</replaceable> {<replaceable>FUNCTION_NAME</replaceable>(<replaceable>ARGUMENTS</replaceable>)}"
msgstr ""

#. (itstool) path: sect3/para
#: xml/tuning_systemtap.xml:1485
msgid "The statements in <replaceable>FUNCTION_NAME</replaceable> are executed when the probe for <replaceable>EVENT</replaceable> executes. The <replaceable>ARGUMENTS</replaceable> are optional values passed into the function."
msgstr ""

#. (itstool) path: sect3/para
#: xml/tuning_systemtap.xml:1491
msgid "Functions can be defined anywhere in the script. They may take any"
msgstr ""

#. (itstool) path: sect3/para
#: xml/tuning_systemtap.xml:1494
msgid "One of the functions needed very often was already introduced in <xref linkend=\"ex.tuning.stap.simple\"/>: the <literal>printf</literal> function for printing data in a formatted way. When using the <literal>printf</literal> function, you can specify how arguments should be printed by using a format string. The format string is included in quotation marks and can contain further format specifiers, introduced by a <literal>%</literal> character."
msgstr ""

#. (itstool) path: sect3/para
#: xml/tuning_systemtap.xml:1503
msgid "Which format strings to use depends on your list of arguments. Format strings can have multiple format specifiersâ€”each matching a corresponding argument. Multiple arguments can be separated by a comma."
msgstr ""

#. (itstool) path: example/title
#: xml/tuning_systemtap.xml:1509
msgid "<literal>printf</literal> Function with Format Specifiers"
msgstr ""

#. (itstool) path: example/screen
#: xml/tuning_systemtap.xml:1510
#, no-wrap
msgid ""
"printf (\"<co xml:id=\"co.tuning.stap.formatstring.start\"/>%s<co xml:id=\"co.tuning.stap.string.spec\"/>(%d<co xml:id=\"co.tuning.stap.int.spec\"/>) open\\n<co xml:id=\"co.tuning.stap.formatstring.end\"/>\", execname(), pid())"
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:1513
msgid "Start of the format string, indicated by <literal>\"</literal>."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:1518
msgid "String format specifier."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:1523
msgid "Integer format specifier."
msgstr ""

#. (itstool) path: callout/para
#: xml/tuning_systemtap.xml:1528
msgid "End of the format string, indicated by <literal>\"</literal>."
msgstr ""

#. (itstool) path: sect3/para
#: xml/tuning_systemtap.xml:1534
msgid "The example above prints the current executable name (<literal>execname()</literal>) as a string and the process ID (<literal>pid()</literal>) as an integer in brackets. Then, a space, the word <literal>open</literal> and a line break follow:"
msgstr ""

#. (itstool) path: sect3/screen
#: xml/tuning_systemtap.xml:1540
#, no-wrap
msgid ""
"[...]\n"
"vmware-guestd(2206) open\n"
"hald(2360) open\n"
"[...]\n"
"   "
msgstr ""

#. (itstool) path: sect3/para
#: xml/tuning_systemtap.xml:1545
msgid "Apart from the two functions <literal>execname()</literal>and <literal>pid()</literal>) used in <xref linkend=\"ex.tuning.stap.printf.formatspec\"/>, a variety of other functions can be used as <literal>printf</literal> arguments."
msgstr ""

#. (itstool) path: sect3/para
#: xml/tuning_systemtap.xml:1551
msgid "Among the most commonly used SystemTap functions are the following:"
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1556
msgid "tid()"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1558
msgid "ID of the current thread."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1564
msgid "pid()"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1566
msgid "Process ID of the current thread."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1572
msgid "uid()"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1574
msgid "ID of the current user."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1580
msgid "cpu()"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1582
msgid "Current CPU number."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1588
msgid "execname()"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1590
msgid "Name of the current process."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1596
msgid "gettimeofday_s()"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1598
msgid "Number of seconds since Unix epoch (January 1, 1970)."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1604
msgid "ctime()"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1606
msgid "Convert time into a string."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1612
msgid "pp()"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1614
msgid "String describing the probe point currently being handled."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1620
msgid "thread_indent()"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1622
msgid "Useful function for organizing print results. It (internally) stores an indentation counter for each thread (<literal>tid()</literal>). The function takes one argument, an indentation delta, indicating how many spaces to add or remove from the thread's indentation counter. It returns a string with some generic trace data along with an appropriate number of indentation spaces. The generic data returned includes a time stamp (number of microseconds since the initial indentation for the thread), a process name, and the thread ID itself. This allows you to identify what functions were called, who called them, and how long they took."
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1634
msgid "Call entries and exits often do not immediately precede each other (otherwise it would be easy to match them). In between a first call entry and its exit, usually other call entries and exits are made. The indentation counter helps you match an entry with its corresponding exit as it indents the next function call in case it is <emphasis>not</emphasis> the exit of the previous one. For an example SystemTap script using <literal>thread_indent()</literal> and the respective output, refer to the <citetitle>SystemTap Tutorial</citetitle>: <link xlink:href=\"http://sourceware.org/systemtap/tutorial/Tracing.html#fig:socket-trace\"/>."
msgstr ""

#. (itstool) path: sect3/para
#: xml/tuning_systemtap.xml:1649
msgid "For more information about supported SystemTap functions, refer to the <command>stapfuncs</command> man page."
msgstr ""

#. (itstool) path: sect3/title
#: xml/tuning_systemtap.xml:1655
msgid "Other Basic Constructs"
msgstr ""

#. (itstool) path: sect3/para
#: xml/tuning_systemtap.xml:1656
msgid "Apart from functions, you can use other common constructs in SystemTap handlers, including variables, conditional statements (like <literal>if</literal>/<literal>else</literal>, <literal>while</literal> loops, <literal>for</literal> loops, arrays or command line arguments."
msgstr ""

#. (itstool) path: sect4/title
#: xml/tuning_systemtap.xml:1663
msgid "Variables"
msgstr ""

#. (itstool) path: sect4/para
#: xml/tuning_systemtap.xml:1664
msgid "Variables may be defined anywhere in the script. To define one, simply choose a name and assign a value from a function or expression to it:"
msgstr ""

#. (itstool) path: sect4/screen
#: xml/tuning_systemtap.xml:1668
#, no-wrap
msgid ""
"foo = gettimeofday( )"
msgstr ""

#. (itstool) path: sect4/para
#: xml/tuning_systemtap.xml:1669
msgid "Then you can use the variable in an expression. From the type of values assigned to the variable, SystemTap automatically infers the type of each identifier (string or number). Any inconsistencies will be reported as errors. In the example above, <literal>foo</literal> would automatically be classified as a number and could be printed via <literal>printf()</literal> with the integer format specifier (<literal>%d</literal>)."
msgstr ""

#. (itstool) path: sect4/para
#: xml/tuning_systemtap.xml:1678
msgid "However, by default, variables are local to the probe they are used in: They are initialized, used and disposed of at each handler evocation. To share variables between probes, declare them global anywhere in the script. To do so, use the <literal>global</literal> keyword outside of the probes:"
msgstr ""

#. (itstool) path: example/title
#: xml/tuning_systemtap.xml:1686
msgid "Using Global Variables"
msgstr ""

#. (itstool) path: example/screen
#: xml/tuning_systemtap.xml:1687
#, no-wrap
msgid ""
"global count_jiffies, count_ms\n"
"probe timer.jiffies(100) { count_jiffies ++ }\n"
"probe timer.ms(100) { count_ms ++ }\n"
"probe timer.ms(12345)\n"
"{\n"
"  hz=(1000*count_jiffies) / count_ms\n"
"  printf (\"jiffies:ms ratio %d:%d =&gt; CONFIG_HZ=%d\\n\",\n"
"    count_jiffies, count_ms, hz)\n"
"  exit ()\n"
"  }"
msgstr ""

#. (itstool) path: example/para
#: xml/tuning_systemtap.xml:1697
msgid "This example script computes the CONFIG_HZ setting of the kernel by using timers that count jiffies and milliseconds, then computing accordingly. (A jiffy is the duration of one tick of the system timer interrupt. It is not an absolute time interval unit, since its duration depends on the clock interrupt frequency of the particular hardware platform). With the <literal>global</literal> statement it is possible to use the variables <literal>count_jiffies</literal> and <literal>count_ms</literal> also in the probe <literal>timer.ms(12345)</literal>. With <literal>++</literal> the value of a variable is incremented by <literal>1</literal>."
msgstr ""

#. (itstool) path: sect4/title
#: xml/tuning_systemtap.xml:1712
msgid "Conditional Statements"
msgstr ""

#. (itstool) path: sect4/para
#: xml/tuning_systemtap.xml:1713
msgid "There are several conditional statements that you can use in SystemTap scripts. The following are probably the most common:"
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1719
msgid "If/Else Statements"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1721
#: xml/tuning_systemtap.xml:1750
msgid "They are expressed in the following format:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/tuning_systemtap.xml:1724
#, no-wrap
msgid ""
"if (<replaceable>CONDITION</replaceable>)<co xml:id=\"co.tuning.systemtap.cond.if\"/><replaceable>STATEMENT1</replaceable><co xml:id=\"co.tuning.systemtap.cond.if.statement1\"/>\n"
"else<co xml:id=\"co.tuning.systemtap.cond.else\"/><replaceable>STATEMENT2</replaceable><co xml:id=\"co.tuning.systemtap.cond.if.statement2\"/>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1726
msgid "The <literal>if</literal> statement compares an integer-valued expression to zero. If the condition expression <xref linkend=\"co.tuning.systemtap.cond.if\" xrefstyle=\"select:label nopage\"/> is non-zero, the first statement <xref linkend=\"co.tuning.systemtap.cond.if.statement1\" xrefstyle=\"select:label nopage\"/> is executed. If the condition expression is zero, the second statement <xref linkend=\"co.tuning.systemtap.cond.if.statement2\" xrefstyle=\"select:label nopage\"/> is executed. The else clause (<xref linkend=\"co.tuning.systemtap.cond.else\" xrefstyle=\"select:label nopage\"/> and <xref linkend=\"co.tuning.systemtap.cond.if.statement2\" xrefstyle=\"select:label nopage\"/>) is optional. Both <xref linkend=\"co.tuning.systemtap.cond.if.statement1\" xrefstyle=\"select:label nopage\"/> and <xref linkend=\"co.tuning.systemtap.cond.if.statement2\" xrefstyle=\"select:label nopage\"/> can also be statement blocks."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1748
msgid "While Loops"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/tuning_systemtap.xml:1753
#, no-wrap
msgid ""
"while (<replaceable>CONDITION</replaceable>)<co xml:id=\"co.tuning.systemtap.cond.while\"/><replaceable>STATEMENT</replaceable><co xml:id=\"co.tuning.systemtap.cond.while.statement\"/>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1754
msgid "As long as <literal>condition</literal> is non-zero, the statement <xref linkend=\"co.tuning.systemtap.cond.while.statement\" xrefstyle=\"select:label nopage\"/> is executed. <xref linkend=\"co.tuning.systemtap.cond.while.statement\" xrefstyle=\"select:label nopage\"/> can also be a statement block. It must change a value so <literal>condition</literal> will eventually be zero."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1765
msgid "For Loops"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1767
msgid "They are a shortcut for <literal>while</literal> loops and are expressed in the following format:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/tuning_systemtap.xml:1771
#, no-wrap
msgid ""
"for (<replaceable>INITIALIZATION</replaceable><co xml:id=\"co.tuning.systemtap.cond.for.init\"/>; <replaceable>CONDITIONAL</replaceable><co xml:id=\"co.tuning.systemtap.cond.for.cond\"/>; <replaceable>INCREMENT</replaceable><co xml:id=\"co.tuning.systemtap.cond.for.increment\"/>) statement"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1772
msgid "The expression specified in <xref linkend=\"co.tuning.systemtap.cond.for.init\" xrefstyle=\"select:label nopage\"/> is used to initialize a counter for the number of loop iterations and is executed before execution of the loop starts. The execution of the loop continues until the loop condition <xref linkend=\"co.tuning.systemtap.cond.for.cond\" xrefstyle=\"select:label nopage\"/> is false. (This expression is checked at the beginning of each loop iteration). The expression specified in <xref linkend=\"co.tuning.systemtap.cond.for.increment\" xrefstyle=\"select:label nopage\"/> is used to increment the loop counter. It is executed at the end of each loop iteration."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/tuning_systemtap.xml:1788
msgid "Conditional Operators"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1790
msgid "The following operators can be used in conditional statements:"
msgstr ""

#. (itstool) path: formalpara/title
#: xml/tuning_systemtap.xml:1794
msgid "==:"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/tuning_systemtap.xml:1795
msgid "Is equal to"
msgstr ""

#. (itstool) path: formalpara/title
#: xml/tuning_systemtap.xml:1800
msgid "!=:"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/tuning_systemtap.xml:1801
msgid "Is not equal to"
msgstr ""

#. (itstool) path: formalpara/title
#: xml/tuning_systemtap.xml:1806
msgid "&gt;=:"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/tuning_systemtap.xml:1807
msgid "Is greater than or equal to"
msgstr ""

#. (itstool) path: formalpara/title
#: xml/tuning_systemtap.xml:1812
msgid "&lt;=:"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/tuning_systemtap.xml:1813
msgid "Is less than or equal to"
msgstr ""

#. (itstool) path: sect1/title
#: xml/tuning_systemtap.xml:1825
msgid "Example Script"
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1827
msgid "If you have installed the <systemitem class=\"resource\">systemtap-docs</systemitem> package, you can find several useful SystemTap example scripts in <filename>/usr/share/doc/packages/systemtap/examples</filename>."
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1834
msgid "This section describes a rather simple example script in more detail: <filename>/usr/share/doc/packages/systemtap/examples/network/tcp_connections.stp</filename>."
msgstr ""

#. (itstool) path: example/title
#: xml/tuning_systemtap.xml:1840
msgid "Monitoring Incoming TCP Connections with <literal>tcp_connections.stp</literal>"
msgstr ""

#. (itstool) path: example/screen
#: xml/tuning_systemtap.xml:1841
#, no-wrap
msgid ""
"#! /usr/bin/env stap\n"
"\n"
"probe begin {\n"
"  printf(\"%6s %16s %6s %6s %16s\\n\",\n"
"         \"UID\", \"CMD\", \"PID\", \"PORT\", \"IP_SOURCE\")\n"
"}\n"
"\n"
"probe kernel.function(\"tcp_accept\").return?,\n"
"      kernel.function(\"inet_csk_accept\").return? {\n"
"  sock = $return\n"
"  if (sock != 0)\n"
"    printf(\"%6d %16s %6d %6d %16s\\n\", uid(), execname(), pid(),\n"
"           inet_get_local_port(sock), inet_get_ip_source(sock))\n"
"}"
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1857
msgid "This SystemTap script monitors the incoming TCP connections and helps to identify unauthorized or unwanted network access requests in real time. It shows the following information for each new incoming TCP connection accepted by the computer:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1866
msgid "User ID (<literal>UID</literal>)"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1871
msgid "Command accepting the connection (<literal>CMD</literal>)"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1876
msgid "Process ID of the command (<literal>PID</literal>)"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1881
msgid "Port used by the connection (<literal>PORT</literal>)"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1886
msgid "IP address from which the TCP connection originated (<literal>IP_SOUCE</literal>)"
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1893
msgid "To run the script, execute"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/tuning_systemtap.xml:1897
#, no-wrap
msgid ""
"stapÂ /usr/share/doc/packages/systemtap/examples/network/tcp_connections.stp"
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1899
msgid "and follow the output on the screen. To manually stop the script, press <keycombo> <keycap function=\"control\"/> <keycap>C</keycap> </keycombo>."
msgstr ""

#. (itstool) path: sect1/title
#: xml/tuning_systemtap.xml:1906
msgid "User Space Probing"
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1908
msgid "For debugging user space applications (like DTrace can do), <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> <phrase role=\"productnumber\"><phrase os=\"osuse\">42.3</phrase><phrase os=\"sles;sled;slerte\">12 SP3</phrase></phrase> supports user space probing with SystemTap: Custom probe points can be inserted in any user space application. Thus, SystemTap lets you use both kernel space and user space probes to debug the behavior of the whole system."
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1919
msgid "To get the required utrace infrastructure and the uprobes kernel module for user space probing, you need to install the <systemitem class=\"resource\">kernel-trace</systemitem> package in addition to the packages listed in <xref linkend=\"sec.tuning.systemtap.setup\"/>."
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1927
msgid "<command>utrace</command> implements a framework for controlling user space tasks. It provides an interface that can be used by various tracing <quote>engines</quote>, implemented as loadable kernel modules. The engines register callback functions for specific events, then attach to whichever thread they want to trace. As the callbacks are made from <quote>safe</quote> places in the kernel, this allows for great leeway in the kinds of processing the functions can do. Various events can be watched via utrace, for example, system call entry and exit, fork(), signals being sent to the task, etc. More details about the utrace infrastructure are available at <link xlink:href=\"http://sourceware.org/systemtap/wiki/utrace\"/>."
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1941
msgid "SystemTap includes support for probing the entry into and return from a function in user space processes, probing predefined markers in user space code, and monitoring user-process events."
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1947
msgid "To check if the currently running kernel provides the needed utrace support, use the following command:"
msgstr ""

#. (itstool) path: sect1/screen
#: xml/tuning_systemtap.xml:1952
#, no-wrap
msgid ""
" grep CONFIG_UTRACE /boot/config-`uname -r`"
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1954
msgid "For more details about user space probing, refer to <link xlink:href=\"https://sourceware.org/systemtap/SystemTap_Beginners_Guide/userspace-probing.html\"/>."
msgstr ""

#. (itstool) path: sect1/title
#: xml/tuning_systemtap.xml:1960
msgid "For More Information"
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:1962
msgid "This chapter only provides a short SystemTap overview. Refer to the following links for more information about SystemTap:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1972
msgid "SystemTap project home page."
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1981
msgid "Huge collection of useful information about SystemTap, ranging from detailed user and developer documentation to reviews and comparisons with other tools, or Frequently Asked Questions and tips. Also contains collections of SystemTap scripts, examples and usage stories and lists recent talks and papers about SystemTap."
msgstr ""

#. (itstool) path: listitem/para
#: xml/tuning_systemtap.xml:1994
msgid "Features a <citetitle>SystemTap Tutorial</citetitle>, a <citetitle>SystemTap Beginner's Guide</citetitle>, a <citetitle>Tapset Developer's Guide</citetitle>, and a <citetitle>SystemTap Language Reference</citetitle> in PDF and HTML format. Also lists the relevant man pages."
msgstr ""

#. (itstool) path: sect1/para
#: xml/tuning_systemtap.xml:2005
msgid "You can also find the SystemTap language reference and SystemTap tutorial in your installed system under <filename>/usr/share/doc/packages/systemtap</filename>. Example SystemTap scripts are available from the <filename>example</filename> subdirectory."
msgstr ""

