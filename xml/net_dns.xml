<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.dns">
 <title>The Domain Name System</title>
 <info>
  <abstract>
   <para>
    DNS (domain name system) is needed to resolve the domain names and host
    names into IP addresses. In this way, the IP address &wsIip; is assigned to
    the host name <literal>&wsI;</literal>, for example. Before setting up your
    own name server, read the general information about DNS in
    <xref linkend="sec.network.nameres"/>. The following configuration
    examples refer to BIND, the default DNS server.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <sect1 xml:id="sec.dns.basic">
  <title>DNS Terminology</title>

  <variablelist>
   <varlistentry>
    <term>Zone</term>
    <listitem>
     <para>
      The domain name space is divided into regions called zones. For example,
      if you have <literal>&exampledomain;</literal>, you have the
      <literal>example</literal> section (or zone) of the
      <literal>com</literal> domain.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>DNS server</term>
    <listitem>
     <para>
      The DNS server is a server that maintains the name and IP information for
      a domain. You can have a primary DNS server for master zone, a secondary
      server for slave zone, or a slave server without any zones for caching.
     </para>
     <variablelist>
      <varlistentry>
       <term>Master zone DNS server</term>
       <listitem>
        <para>
         The master zone includes all hosts from your network and a DNS server
         master zone stores up-to-date records for all the hosts in your
         domain.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>Slave zone DNS server</term>
       <listitem>
        <para>
         A slave zone is a copy of the master zone. The slave zone DNS server
         obtains its zone data with zone transfer operations from its master
         server. The slave zone DNS server responds authoritatively for the
         zone as long as it has valid (not expired) zone data. If the slave
         cannot obtain a new copy of the zone data, it stops responding for the
         zone.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Forwarder</term>
    <listitem>
     <para>
      Forwarders are DNS servers to which your DNS server should send queries
      it cannot answer. To enable different configuration sources in one
      configuration, <literal>netconfig</literal> is used (see also
      <command>man 8 netconfig</command>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Record</term>
    <listitem>
     <para>
      The record is information about name and IP address. Supported records
      and their syntax are described in BIND documentation. Some special
      records are:
     </para>
     <variablelist>
      <varlistentry>
       <term>NS record</term>
       <listitem>
        <para>
         An NS record tells name servers which machines are in charge of a
         given domain zone.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>MX record</term>
       <listitem>
        <para>
         The MX (mail exchange) records describe the machines to contact for
         directing mail across the Internet.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>SOA record</term>
       <listitem>
        <para>
         SOA (Start of Authority) record is the first record in a zone file.
         The SOA record is used when using DNS to synchronize data between
         multiple computers.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
<!-- ================================================================== -->
 <sect1 xml:id="sec.dns.install">
  <title>Installation</title>

  <para>
   To install a DNS server, start &yast; and select
   <menuchoice><guimenu>Software</guimenu> <guimenu>Software
   Management</guimenu></menuchoice>. Choose
   <menuchoice><guimenu>View</guimenu> <guimenu>Patterns</guimenu></menuchoice>
   and select <guimenu>DHCP and DNS Server</guimenu>. Confirm the installation
   of the dependent packages to finish the installation process.
  </para>
  <para>
   Alternatively use the following command on the command line:
  </para>
  <screen>&prompt.sudo;zypper in -t pattern dhcp_dns_server</screen>
 </sect1>
<!-- ================================================================== -->
 <sect1 xml:id="sec.dns.yast">
  <title>Configuration with &yast;</title>

  <para>
   Use the &yast; DNS module to configure a DNS server for the local network.
   When starting the module for the first time, a wizard starts, prompting you
   to make a few decisions concerning administration of the server. Completing
   this initial setup produces a basic server configuration. Use the expert
   mode to deal with more advanced configuration tasks, such as setting up
   ACLs, logging, TSIG keys, and other options.
  </para>

  <sect2 xml:id="sec.dns.yast.wizard">
   <title>Wizard Configuration</title>
<!-- note to myself (ke): -->
<!-- remove /var/lib/YaST2/dns_server to enforce wizard mode -->
   <para>
    The wizard consists of three steps or dialogs. At the appropriate places
    in the dialogs, you can enter the expert configuration mode.
   </para>
   <procedure>
    <step>
     <para>
<!-- 2014-04-24, ke: bnc#875014: asking for clarification -->
<!-- ATM, it is rather generic -->
<!-- 2014-05-13, ke: Thus far (beta6), it is still somehow open... -->
      When starting the module for the first time, the <guimenu>Forwarder
      Settings</guimenu> dialog, shown in
      <xref linkend="fig.yast2.dnsinst.forwarders"/>, opens. The <guimenu>Local
      DNS Resolution Policy</guimenu> allows to set the following options:
     </para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        <guimenu>Merging forwarders is disabled</guimenu>
<!-- (= disable DNS configuration updates via netconfig by setting
             NETCONFIG_DNS_POLICY='') -->
       </para>
      </listitem>
      <listitem>
       <para>
        <guimenu>Automatic merging</guimenu>
<!-- (= enable automatic DNS configuration updates via netconfig
             by setting NETCONFIG_DNS_POLICY='auto'; behavior depends on
             nw in use or not;
             netconfig will update resolv.conf with info (forwarder
             list) provided by dhcp/ppp)
        -->
       </para>
      </listitem>
      <listitem>
<!-- FIXME -->
<!-- bnc#875014: 'static' is invalid -->
       <para>
        <guimenu>Merging forwarders is enabled</guimenu>
<!-- (NETCONFIG_DNS_POLICY='static') -->
       </para>
      </listitem>
      <listitem>
       <para>
<!-- (NETCONFIG_DNS_POLICY='STATIC').-->
        <guimenu>Custom configuration</guimenu>&mdash;If <guimenu>Custom
        configuration</guimenu> is selected, <guimenu>Custom policy</guimenu>
        can be specified; by default (with <guimenu>Automatic merging</guimenu>
        selected), <guimenu>Custom policy</guimenu> is set to
        <literal>auto</literal>, but here you can either set interface names or
        select from the two special policy names <literal>STATIC</literal> and
        <literal>STATIC_FALLBACK</literal>.
       </para>
      </listitem>
     </itemizedlist>
<!--
      The
      <guimenu>Netconfig DNS Policy</guimenu> decides which devices should
      provide forwarders or whether you want to supply your own
      <guimenu>Forwarder List</guimenu>.
     -->
     <para>
      In <guimenu>Local DNS Resolution Forwarder</guimenu>, specify which
      service to use: <guimenu>Using system name servers</guimenu>,
      <guimenu>This name server (bind)</guimenu>, or <guimenu>Local dnsmasq
      server</guimenu>.
     </para>
     <para>
      For more information about all these settings, see <command>man 8
      netconfig</command>.
     </para>
     <figure xml:id="fig.yast2.dnsinst.forwarders">
      <title>DNS Server Installation: Forwarder Settings</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata width="75%" fileref="yast2_dns_wiz_forw.png" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata width="75%" fileref="yast2_dns_wiz_forw.png" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
     <para>
      Forwarders are DNS servers to which your DNS server sends queries it
      cannot answer itself. Enter their IP address and click
      <guimenu>Add</guimenu>.
     </para>
    </step>
    <step>
     <para>
      The <guimenu>DNS Zones</guimenu> dialog consists of several parts and is
      responsible for the management of zone files, described in
      <xref linkend="sec.dns.zonefile"/>. For a new zone, provide a name for it
      in <guimenu>Name</guimenu>. To add a reverse zone, the name must end in
      <literal>.in-addr.arpa</literal>. Finally, select the
      <guimenu>Type</guimenu> (master, slave, or forward). See
      <xref linkend="fig.yast2.dnsinst.zones"/>. Click <guimenu>Edit </guimenu>
      to configure other settings of an existing zone. To remove a zone, click
      <guimenu>Delete</guimenu>.
     </para>
     <figure xml:id="fig.yast2.dnsinst.zones">
      <title>DNS Server Installation: DNS Zones</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata width="72%" fileref="yast2_dns_wiz_zone.png" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata width="75%" fileref="yast2_dns_wiz_zone.png" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      In the final dialog, you can open the DNS port in the firewall by
      clicking <guimenu>Open Port in Firewall</guimenu>. Then decide whether to
      start the DNS server when booting (<guimenu>On</guimenu> or
      <guimenu>Off</guimenu>). You can also activate LDAP support. See
      <xref linkend="fig.yast2.dnsinst.finish"/>.
     </para>
     <figure xml:id="fig.yast2.dnsinst.finish">
      <title>DNS Server Installation: Finish Wizard</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata width="72%" fileref="yast2_dns_wiz_finish.png" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata width="75%" fileref="yast2_dns_wiz_finish.png" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec.dns.yast.expert">
   <title>Expert Configuration</title>
   <para>
    After starting the module, &yast; opens a window displaying several
    configuration options. Completing it results in a DNS server configuration
    with the basic functions in place:
   </para>
   <sect3 xml:id="sec.dns.yast.expert.startup">
    <title>Start-Up</title>
    <para>
     Under <guimenu>Start-Up</guimenu>, define whether the DNS server should be
     started when the booting the system or manually. To start the DNS server
     immediately, click <guimenu>Start DNS Server Now</guimenu>. To stop the
     DNS server, click <guimenu>Stop DNS Server Now</guimenu>. To save the
     current settings, select <guimenu>Save Settings and Reload DNS Server
     Now</guimenu>.
<!--
      <figure id="fig.yast2.dns.startup">
       <title>DNS Server: Start-up</title>
       <screenshot>
        <mediaobject>
         <imageobject role="fo">
          <imagedata width="75%" fileref="yast2_dns_def_startup.png" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata width="75%" fileref="yast2_dns_def_startup.png" format="PNG"/>
         </imageobject>
        </mediaobject>
       </screenshot>
      </figure>
-->
     You can open the DNS port in the firewall with <guimenu>Open Port in
     Firewall</guimenu> and modify the firewall settings with <guimenu>Firewall
     Details</guimenu>.
    </para>
    <para>
     By selecting <guimenu>LDAP Support Active</guimenu>, the zone files are
     managed by an LDAP database. Any changes to zone data written to the LDAP
     database are picked up by the DNS server when it is restarted or prompted
     to reload its configuration.
    </para>
   </sect3>
   <sect3 xml:id="sec.dns.yast.expert.forwarders">
    <title>Forwarders</title>
    <para>
     If your local DNS server cannot answer a request, it tries to forward the
     request to a <guimenu>Forwarder</guimenu>, if configured so. This
     forwarder may be added manually to the <guimenu>Forwarder List</guimenu>.
     If the forwarder is not static like in dial-up connections,
     <guimenu>netconfig</guimenu> handles the configuration. For more
     information about netconfig, see <command>man 8 netconfig</command>.
    </para>
   </sect3>
   <sect3 xml:id="sec.dns.yast.expert.basics">
    <title>Basic Options</title>
    <para>
     In this section, set basic server options. From the
     <guimenu>Option</guimenu> menu, select the desired item then specify the
     value in the corresponding text box. Include the new entry by selecting
     <guimenu>Add</guimenu>.
    </para>
<!--
      <figure id="fig.yast2.dns.basicoptions">
       <title>DNS Server: Basic Options</title>
       <screenshot>
        <mediaobject>
         <imageobject role="fo">
          <imagedata width="75%" fileref="yast2_dns_def_basicoptions.png" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata width="75%" fileref="yast2_dns_def_basicoptions.png" format="PNG"/>
         </imageobject>
        </mediaobject>
       </screenshot>
      </figure>
-->
   </sect3>
   <sect3 xml:id="sec.dns.yast.expert.logging">
    <title>Logging</title>
    <para>
     To set what the DNS server should log and how, select
     <guimenu>Logging</guimenu>. Under <guimenu>Log Type</guimenu>, specify
     where the DNS server should write the log data. Use the system-wide log by
     selecting <guimenu>System Log</guimenu> or specify a different file by
     selecting <guimenu>File</guimenu>. In the latter case, additionally
     specify a name, the maximum file size in megabytes and the number of log
     file versions to store.
    </para>
    <para>
     Further options are available under <guimenu>Additional Logging</guimenu>.
     Enabling <guimenu>Log All DNS Queries</guimenu> causes
     <emphasis>every</emphasis> query to be logged, in which case the log file
     could grow extremely large. For this reason, it is not a good idea to
     enable this option for other than debugging purposes. To log the data
     traffic during zone updates between DHCP and DNS server, enable
     <guimenu>Log Zone Updates</guimenu>. To log the data traffic during a zone
     transfer from master to slave, enable <guimenu>Log Zone
     Transfer</guimenu>. See <xref linkend="fig.yast2.dns.logging"/>.
    </para>
    <figure xml:id="fig.yast2.dns.logging">
     <title>DNS Server: Logging</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata width="75%" fileref="yast2_dns_def_logging.png" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata width="75%" fileref="yast2_dns_def_logging.png" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
   </sect3>
   <sect3 xml:id="sec.dns.yast.expert.acls">
    <title>ACLs</title>
    <para>
     Use this dialog to define ACLs (access control lists) to enforce access
     restrictions. After providing a distinct name under
     <guimenu>Name</guimenu>, specify an IP address (with or without netmask)
     under <guimenu>Value</guimenu> in the following fashion:
    </para>
<screen>{ 192.168.1/24; }</screen>
    <para>
     The syntax of the configuration file requires that the address ends with a
     semicolon and is put into curly braces.
    </para>
<!--
      <figure id="fig.yast2.dns.acl">
       <title>DNS Server: ACLs</title>
       <screenshot>
        <mediaobject>
         <imageobject role="fo">
          <imagedata width="75%" fileref="yast2_dns_def_acl.png" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata width="75%" fileref="yast2_dns_def_acl.png" format="PNG"/>
         </imageobject>
        </mediaobject>
       </screenshot>
      </figure>
-->
   </sect3>
   <sect3 xml:id="sec.dns.yast.expert.tsig">
    <title>TSIG Keys</title>
    <para>
     The main purpose of TSIGs (transaction signatures) is to secure
     communications between DHCP and DNS servers. They are described in
     <xref linkend="sec.dns.tsig"/>.
    </para>
    <para>
     To generate a TSIG key, enter a distinctive name in the field labeled
     <guimenu>Key ID</guimenu> and specify the file where the key should be
     stored (<guimenu>Filename</guimenu>). Confirm your choices with
     <guimenu>Generate</guimenu>.
    </para>
    <para>
     To use a previously created key, leave the <guimenu>Key ID</guimenu> field
     blank and select the file where it is stored under
     <guimenu>Filename</guimenu>. After that, confirm with
     <guimenu>Add</guimenu>.
    </para>
<!--
    <figure id="fig.yast2_dns_def_tsig">
    <title>DNS Server: TSIG Keys</title>
    <screenshot>
        <mediaobject>
         <imageobject role="fo">
          <imagedata width="75%" fileref="yast2_dns_def_tsig.png" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata width="75%" fileref="yast2_dns_def_tsig.png" format="PNG"/>
         </imageobject>
        </mediaobject>
       </screenshot>
      </figure>
-->
   </sect3>
   <sect3 xml:id="sec.dns.yast.expert.add_slave">
    <title>DNS Zones (Adding a Slave Zone)</title>
    <para>
     To add a slave zone, select <guimenu>DNS Zones</guimenu>, choose the zone
     type <guimenu>Slave</guimenu>, write the name of the new zone, and click
     <guimenu>Add</guimenu>.
    </para>
    <para>
     In the <guimenu>Zone Editor</guimenu> sub-dialog under <guimenu>Master DNS
     Server IP</guimenu>, specify the master from which the slave should pull
     its data. To limit access to the server, select one of the ACLs from the
     list.
<!-- See <xref linkend="fig.yast2.dns.zoneeditor"/>. -->
    </para>
<!--
    <figure id="fig.yast2.dns.zoneeditor">
     <title>DNS Server: Slave Zone Editor</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata width="75%" fileref="yast2_dns_def_zoneeditor.png" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata width="75%" fileref="yast2_dns_def_zoneeditor.png" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure> -->
   </sect3>
   <sect3 xml:id="sec.dns.yast.expert.add_master">
    <title>DNS Zones (Adding a Master Zone)</title>
    <para>
     To add a master zone, select <guimenu>DNS Zones</guimenu>, choose the zone
     type <guimenu>Master</guimenu>, write the name of the new zone, and click
     <guimenu>Add</guimenu>. When adding a master zone, a reverse zone is also
     needed. For example, when adding the zone
     <systemitem>example.com</systemitem> that points to hosts in a subnet
     <literal>192.168.1.0/24</literal>, you should also add a reverse zone for
     the IP-address range covered. By definition, this should be named
     <literal>1.168.192.in-addr.arpa</literal>.
    </para>
   </sect3>
   <sect3 xml:id="sec.dns.yast.expert.edit_master">
    <title>DNS Zones (Editing a Master Zone)</title>
    <para>
     To edit a master zone, select <guimenu>DNS Zones</guimenu>, select the
     master zone from the table, and click <guimenu>Edit</guimenu>. The dialog
     consists of several pages: <guimenu>Basics</guimenu> (the one opened
     first), <guimenu>NS Records</guimenu>, <guimenu>MX Records</guimenu>,
     <guimenu>SOA</guimenu>, and <guimenu>Records</guimenu>.
    </para>
    <para os="sles;osuse">
     The basic dialog, shown in <xref linkend="fig.yast2.dns.ddns"/>, lets you
     define settings for dynamic DNS and access options for zone transfers to
     clients and slave name servers. To permit the dynamic updating of zones,
     select <guimenu>Allow Dynamic Updates</guimenu> and the
     corresponding TSIG key. The key must have been defined before the update
     action starts. To enable zone transfers, select the corresponding ACLs.
     ACLs must have been defined already.
    </para>
    <para>
     In the <guimenu>Basics</guimenu> dialog, select whether to enable zone
     transfers. Use the listed ACLs to define who can download zones.
    </para>
    <figure xml:id="fig.yast2.dns.ddns" os="sles;osuse">
     <title>DNS Server: Zone Editor (Basics)</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata width="65%" fileref="yast2_dns_def_ddns.png" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata width="65%" fileref="yast2_dns_def_ddns.png" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
    <variablelist>
     <varlistentry>
      <term>Zone Editor (NS Records)</term>
      <listitem>
       <para>
        The <guimenu>NS Records</guimenu> dialog allows you to define
        alternative name servers for the zones specified. Make sure that your
        own name server is included in the list. To add a record, enter its
        name under <guimenu>Name Server to Add</guimenu> then confirm with
        <guimenu>Add</guimenu>. See <xref linkend="fig.yast2.dns.nsrec"/>.
       </para>
       <figure xml:id="fig.yast2.dns.nsrec">
        <title>DNS Server: Zone Editor (NS Records)</title>
        <mediaobject>
         <imageobject role="fo">
          <imagedata width="65%" fileref="yast2_dns_def_nsrec.png" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata width="65%" fileref="yast2_dns_def_nsrec.png" format="PNG"/>
         </imageobject>
        </mediaobject>
       </figure>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Zone Editor (MX Records)</term>
      <listitem>
       <para>
        To add a mail server for the current zone to the existing list, enter
        the corresponding address and priority value. After doing so, confirm
        by selecting <guimenu>Add</guimenu>. See
        <xref linkend="fig.yast2.dns.mxrec"/>.
       </para>
       <figure xml:id="fig.yast2.dns.mxrec">
        <title>DNS Server: Zone Editor (MX Records)</title>
        <mediaobject>
         <imageobject role="fo">
          <imagedata width="72%" fileref="yast2_dns_def_mxrec.png" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata width="75%" fileref="yast2_dns_def_mxrec.png" format="PNG"/>
         </imageobject>
        </mediaobject>
       </figure>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Zone Editor (SOA)</term>
      <listitem>
       <para>
        This page allows you to create SOA (start of authority) records. For an
        explanation of the individual options, refer to
        <xref linkend="ex.welt.zone"/>. <phrase os="sles;osuse">Changing SOA
        records is not supported for dynamic zones managed via LDAP.</phrase>
       </para>
       <figure xml:id="fig.yast2.dns.soa">
        <title>DNS Server: Zone Editor (SOA)</title>
        <mediaobject>
         <imageobject role="fo">
          <imagedata width="75%" fileref="yast2_dns_def_soa.png" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata width="75%" fileref="yast2_dns_def_soa.png" format="PNG"/>
         </imageobject>
        </mediaobject>
       </figure>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Zone Editor (Records)</term>
      <listitem>
       <para>
        This dialog manages name resolution. In <guimenu>Record Key</guimenu>,
        enter the host name then select its type. The <guimenu>A</guimenu> type
        represents the main entry. The value for this should be an IP address
        (IPv4). Use <guimenu>AAAA</guimenu> for IPv6 addresses.
        <guimenu>CNAME</guimenu> is an alias. Use the types
        <guimenu>NS</guimenu> and <guimenu>MX</guimenu> for detailed or partial
        records that expand on the information provided in the <guimenu>NS
        Records</guimenu> and <guimenu>MX Records</guimenu> tabs. These three
        types resolve to an existing <literal>A</literal> record.
        <guimenu>PTR</guimenu> is for reverse zones. It is the opposite of an
        <literal>A</literal> record, for example:
       </para>
<screen>hostname.example.com. IN A 192.168.0.1
1.0.168.192.in-addr.arpa IN PTR hostname.example.com.</screen>
      </listitem>
     </varlistentry>
    </variablelist>
    <sect4 xml:id="sec.dns.yast.expert.edit_master.rev">
     <title>Adding Reverse Zones</title>
     <para>
      To add a reverse zone, follow this procedure:
     </para>
     <procedure>
      <step>
       <para>
        Start <menuchoice><guimenu>&yast;</guimenu><guimenu>DNS
        Server</guimenu><guimenu>DNS Zones</guimenu></menuchoice>.
       </para>
      </step>
      <step>
       <para>
        If you have not added a master forward zone, add it and
        <guimenu>Edit</guimenu> it.
       </para>
      </step>
      <step>
       <para>
        In the <guimenu>Records</guimenu> tab, fill the corresponding
        <guimenu>Record Key</guimenu> and <guimenu>Value</guimenu>, then add
        the record with <guimenu>Add</guimenu> and confirm with
        <guimenu>OK</guimenu>. If &yast; complains about a non-existing record
        for a name server, add it in the <guimenu>NS Records</guimenu> tab.
       </para>
       <figure>
        <title>Adding a Record for a Master Zone</title>
        <mediaobject>
         <imageobject role="fo">
          <imagedata fileref="yast2_dns_revzone1.png" width="70%" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata fileref="yast2_dns_revzone1.png" width="70%" format="PNG"/>
         </imageobject>
        </mediaobject>
       </figure>
      </step>
      <step>
       <para>
        Back in the <guimenu>DNS Zones</guimenu> window, add a reverse master
        zone.
       </para>
       <figure>
        <title>Adding a Reverse Zone</title>
        <mediaobject>
         <imageobject role="fo">
          <imagedata fileref="yast2_dns_revzone2.png" width="70%" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata fileref="yast2_dns_revzone2.png" width="70%" format="PNG"/>
         </imageobject>
        </mediaobject>
       </figure>
      </step>
      <step>
       <para>
        <guimenu>Edit</guimenu> the reverse zone, and in the
        <guimenu>Records</guimenu> tab, you can see the <guimenu>PTR: Reverse
        translation</guimenu> record type. Add the corresponding
        <guimenu>Record Key</guimenu> and <guimenu>Value</guimenu>, then click
        <guimenu>Add</guimenu> and confirm with <guimenu>OK</guimenu>.
       </para>
       <figure>
        <title>Adding a Reverse Record</title>
        <mediaobject>
         <imageobject role="fo">
          <imagedata fileref="yast2_dns_revzone3.png" width="70%" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata fileref="yast2_dns_revzone3.png" width="70%" format="PNG"/>
         </imageobject>
        </mediaobject>
       </figure>
       <para>
        Add a name server record if needed.
       </para>
      </step>
     </procedure>
     <tip>
      <title>Editing the Reverse Zone</title>
      <para>
       After adding a forward zone, go back to the main menu and select the
       reverse zone for editing. There in the tab <guimenu>Basics</guimenu>
       activate the check box <guimenu>Automatically Generate Records
       From</guimenu> and select your forward zone. That way, all changes to
       the forward zone are automatically updated in the reverse zone.
      </para>
     </tip>
    </sect4>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.dns.bind">
  <title>Starting the BIND Name Server</title>

  <para>
   On a &productnamereg; system, the name server BIND (<emphasis>Berkeley
   Internet Name Domain</emphasis>) comes preconfigured, so it can be started
   right after installation without any problems. Normally, if you already have an Internet connection and entered
   <systemitem class="ipaddress">127.0.0.1</systemitem> as the name server
   address for <systemitem class="domainname">localhost</systemitem> in
   <filename>/var/run/netconfig/resolv.conf</filename>, you already have a working
   name resolution without needing to know the DNS of the provider. BIND
   carries out name resolution via the root name server, a notably slower
   process. Normally, the DNS of the provider should be entered with its IP
   address in the configuration file <filename>/etc/named.conf</filename> under
   <systemitem>forwarders</systemitem> to ensure effective and secure name
   resolution. If this works so far, the name server runs as a pure
   <emphasis>caching-only</emphasis> name server. Only when you configure its
   own zones it becomes a proper DNS. Find a simple example documented in
   <filename>/usr/share/doc/packages/bind/config</filename>.
  </para>

  <tip>
   <title>Automatic Adaptation of the Name Server Information</title>
   <para>
    Depending on the type of Internet connection or the network connection, the
    name server information can automatically be adapted to the current
    conditions. To do this, set the
    <systemitem>NETCONFIG_DNS_POLICY</systemitem> variable in the
    <filename>/etc/sysconfig/network/config</filename> file to
    <literal>auto</literal>.
   </para>
  </tip>

  <para>
   However, do not set up an official domain until one is assigned to you by
   the responsible institution. Even if you have your own domain and it is
   managed by the provider, you are better off not using it, because BIND would
   otherwise not forward requests for this domain. The Web server at the
   provider, for example, would not be accessible for this domain.
  </para>

  <para>
   To start the name server, enter the command <command>systemctl start
   named</command> as <systemitem class="username">root</systemitem>. Check
   with <command>systemctl status named</command> whether named (as the name
   server process is called) has been started successfully. Test the name
   server immediately on the local system with the <command>host</command> or
   <command>dig</command> programs, which should return
   <systemitem class="domainname">localhost</systemitem> as the default server
   with the address <systemitem class="ipaddress">127.0.0.1</systemitem>. If
   this is not the case, <filename>/var/run/netconfig/resolv.conf</filename> probably
   contains an incorrect name server entry or the file does not exist. For the
   first test, enter <command>host</command>&nbsp;<option>127.0.0.1</option>,
   which should always work. If you get an error message, use
   <command>systemctl status named</command> to see whether the server is
   actually running. If the name server does not start or behaves unexpectedly,
   check the output of <command>journalctl -e</command>.
  </para>



  <para>
   To use the name server of the provider (or one already running on your
   network) as the forwarder, enter the corresponding IP address or addresses
   in the <systemitem>options</systemitem> section under
   <systemitem>forwarders</systemitem>. The addresses included in
   <xref linkend="ex.forward"/> are examples only. Adjust these entries to your
   own setup.
  </para>

  <example xml:id="ex.forward">
   <title>Forwarding Options in named.conf</title>
<!--adjust to standard network example-->
<!--hmm should be ok ... we did not define WAN DNS servers .. and this is not
too easy to do. -->
<screen>options {
        directory "/var/lib/named";
        forwarders { 10.11.12.13; 10.11.12.14; };
        listen-on { 127.0.0.1; &dnsip;; };
        allow-query { 127/8; 192.168/16 };
        notify no;
};</screen>
  </example>

  <para>
   The <systemitem>options</systemitem> entry is followed by entries for the
   zone, <systemitem class="domainname">localhost</systemitem>, and
   <systemitem>0.0.127.in-addr.arpa</systemitem>. The <literal>type
   hint</literal> entry under <quote>.</quote> should always be present. The
   corresponding files do not need to be modified and should work as they are.
   Also make sure that each entry is closed with a <quote>;</quote> and that
   the curly braces are in the correct places. After changing the configuration
   file <filename>/etc/named.conf</filename> or the zone files, tell BIND to
   reread them with <command>systemctl reload named</command>. Achieve the same
   by stopping and restarting the name server with <command>systemctl restart
   named</command>. Stop the server at any time by entering <command>systemctl
   stop named</command>.
  </para>
 </sect1>
 <sect1 xml:id="sec.dns.named">
  <title>The /etc/named.conf Configuration File</title>

  <para>
   All the settings for the BIND name server itself are stored in the
   <filename>/etc/named.conf</filename> file. However, the zone data for the
   domains to handle (consisting of the host names, IP addresses, and so on)
   are stored in separate files in the <filename>/var/lib/named</filename>
   directory. The details of this are described later.
  </para>

  <para>
   <filename>/etc/named.conf</filename> is roughly divided into two areas. One
   is the <systemitem>options</systemitem> section for general settings and the
   other consists of <systemitem>zone</systemitem> entries for the individual
   domains. A <systemitem>logging</systemitem> section and
   <systemitem>acl</systemitem> (access control list) entries are optional.
   Comment lines begin with a <literal>#</literal> sign or
   <literal>//</literal>. A minimal <filename>/etc/named.conf</filename> is
   shown in <xref linkend="ex.named.mini"/>.
  </para>

  <example xml:id="ex.named.mini">
   <title>A Basic /etc/named.conf</title>
<screen>options {
        directory "/var/lib/named";
        forwarders { 10.0.0.1; };
        notify no;
};

zone "localhost" in {
       type master;
       file "localhost.zone";
};

zone "0.0.127.in-addr.arpa" in {
        type master;
        file "127.0.0.zone";
};

zone "." in {
        type hint;
        file "root.hint";
};</screen>
  </example>

  <sect2 xml:id="sec.dns.named.options">
   <title>Important Configuration Options</title>
   <variablelist>
    <varlistentry>
     <term>directory "<replaceable>FILENAME</replaceable>";</term>
     <listitem>
      <para>
       Specifies the directory in which BIND can find the files containing the
       zone data. Usually, this is <filename>/var/lib/named</filename>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>forwarders { <replaceable>IP-ADDRESS</replaceable>; };</term>
     <listitem>
      <para>
       Specifies the name servers (mostly of the provider) to which DNS
       requests should be forwarded if they cannot be resolved directly.
       Replace <replaceable>IP-ADDRESS</replaceable> with an IP address like
       <literal>&dnsip;</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>forward first;</term>
     <listitem>
      <para>
       Causes DNS requests to be forwarded before an attempt is made to resolve
       them via the root name servers. Instead of <systemitem>forward
       first</systemitem>, <systemitem>forward only</systemitem> can be written
       to have all requests forwarded and none sent to the root name servers.
       This makes sense for firewall configurations.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>listen-on port 53 { 127.0.0.1; <replaceable>IP-ADDRESS</replaceable>; };</term>
     <listitem>
      <para>
       Tells BIND on which network interfaces and port to accept client
       queries. <literal>port 53</literal> does not need to be specified
       explicitly, because <literal>53</literal> is the default port. Enter
       <literal>127.0.0.1</literal> to permit requests from the local host. If
       you omit this entry entirely, all interfaces are used by default.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>listen-on-v6 port 53 {any; };</term>
     <listitem>
      <para>
       Tells BIND on which port it should listen for IPv6 client requests. The
       only alternative to <literal>any</literal> is <literal>none</literal>.
       As far as IPv6 is concerned, the server only accepts wild card
       addresses.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>query-source address * port 53;</term>
     <listitem>
      <para>
       This entry is necessary if a firewall is blocking outgoing DNS requests.
       This tells BIND to post requests externally from port 53 and not from
       any of the high ports above 1024.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>query-source-v6 address * port 53;</term>
     <listitem>
      <para>
       Tells BIND which port to use for IPv6 queries.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>allow-query { 127.0.0.1; <replaceable>NET</replaceable>; };</term>
     <listitem>
      <para>
       Defines the networks from which clients can post DNS requests. Replace
       <replaceable>NET</replaceable> with address information like
       <literal>&subnetIImask;</literal>. The <systemitem>/24</systemitem> at
       the end is an abbreviated expression for the netmask (in this case
       <systemitem class="netmask">255.255.255.0</systemitem>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>allow-transfer  ! *;;</term>
     <listitem>
      <para>
       Controls which hosts can request zone transfers. In the example, such
       requests are completely denied with <systemitem>! *</systemitem>.
       Without this entry, zone transfers can be requested from anywhere
       without restrictions.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>statistics-interval 0;</term>
     <listitem>
      <para>
       In the absence of this entry, BIND generates several lines of
       statistical information per hour in the system's journal. Set it to 0 to
       suppress these statistics completely or set an interval in minutes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cleaning-interval 720;</term>
     <listitem>
      <para>
       This option defines at which time intervals BIND clears its cache. This
       triggers an entry in the system's journal each time it occurs. The time
       specification is in minutes. The default is 60 minutes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>interface-interval 0;</term>
     <listitem>
      <para>
       BIND regularly searches the network interfaces for new or nonexistent
       interfaces. If this value is set to <systemitem>0</systemitem>, this is
       not done and BIND only listens at the interfaces detected at start-up.
       Otherwise, the interval can be defined in minutes. The default is sixty
       minutes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>notify no;</term>
     <listitem>
      <para>
       <option>no</option> prevents other name servers from being informed when
       changes are made to the zone data or when the name server is restarted.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    For a list of available options, read the manual page <command>man 5
    named.conf</command>.
   </para>
  </sect2>

  <sect2 xml:id="sec.dns.named.log">
   <title>Logging</title>
   <para>
    What, how, and where logging takes place can be extensively configured in
    BIND. Normally, the default settings should be sufficient.
    <xref linkend="ex.no.log"/>, shows the simplest form of such an entry and
    completely suppresses any logging.
   </para>
   <example xml:id="ex.no.log">
    <title>Entry to Disable Logging</title>
<screen>logging {
        category default { null; };
};</screen>
   </example>
  </sect2>

  <sect2 xml:id="sec.dns.named.zones">
   <title>Zone Entries</title>
   <example xml:id="ex.meine.domain">
    <title>Zone Entry for example.com</title>
<screen>zone "example.com" in {
      type master;
      file "example.com.zone";
      notify no;
};</screen>
   </example>
   <para>
    After <systemitem>zone</systemitem>, specify the name of the domain to
    administer (<systemitem class="domainname">example.com</systemitem>)
    followed by <systemitem>in</systemitem> and a block of relevant options
    enclosed in curly braces, as shown in <xref linkend="ex.meine.domain"/>. To
    define a <emphasis>slave zone</emphasis>, switch the
    <systemitem>type</systemitem> to <literal>slave</literal> and specify a
    name server that administers this zone as <literal>master</literal> (which,
    in turn, may be a slave of another master), as shown in
    <xref linkend="ex.andere.domain"/>.
   </para>
   <example xml:id="ex.andere.domain">
    <title>Zone Entry for &exampledomain1;</title>
<screen>zone "&exampledomain1;" in {
      type slave;
      file "slave/&exampledomain1;.zone";
      masters { 10.0.0.1; }; <!-- network scheme: What is this external DNS' IP supposed to be?
      bg: we still did not define the addresses of a public internet.-->
};</screen>
   </example>
   <para>
    The zone options:
   </para>
   <variablelist>
    <varlistentry>
     <term>type master;</term>
     <listitem>
      <para>
       By specifying <literal>master</literal>, tell BIND that the zone is
       handled by the local name server. This assumes that a zone file has been
       created in the correct format.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>type slave;</term>
     <listitem>
      <para>
       This zone is transferred from another name server. It must be used
       together with <systemitem>masters</systemitem>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>type hint;</term>
     <listitem>
      <para>
       The zone <literal>.</literal> of the <literal>hint</literal> type is
       used to set the root name servers. This zone definition can be left as
       is.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>file <filename>&exampledomain;.zone</filename> or file
      <quote>slave/&exampledomain1;.zone</quote>;</term>
     <listitem>
      <para>
       This entry specifies the file where zone data for the domain is located.
       This file is not required for a slave, because this data is pulled from
       another name server. To differentiate master and slave files, use the
       directory <filename>slave</filename> for the slave files.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>masters { <replaceable>SERVER_IP_ADDRESS</replaceable>; };</term>
     <listitem>
      <para>
       This entry is only needed for slave zones. It specifies from which name
       server the zone file should be transferred.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>allow-update {! *; };</term>
     <listitem>
      <para>
       This option controls external write access, which would allow clients to
       make a DNS entry&mdash;something not normally desirable for security
       reasons. Without this entry, zone updates are not allowed. The above
       entry achieves the same because <literal>! *</literal> effectively bans
       any such activity.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.dns.zonefile">
  <title>Zone Files</title>

  <para>
   Two types of zone files are needed. One assigns IP addresses to host names
   and the other does the reverse: it supplies a host name for an IP address.
  </para>

  <tip>
   <title>Using the Dot (Period, Fullstop) in Zone Files</title>
   <para>
    The <literal>"."</literal> has an important meaning in the zone files. If
    host names are given without a final dot (<literal>.</literal>), the zone
    is appended. Complete host names specified with a full domain name must end
    with a dot (<literal>.</literal>) to avoid having the domain added to it
    again. A missing or wrongly placed "." is probably the most frequent cause
    of name server configuration errors.
   </para>
  </tip>

<!-- comment from Lucas Ocilka
> g) page 437 - TIP - Using the Dot in Zone Files
> - - - example zone "new.example.com" - - -
> $TTL 2d
> @               IN SOA          wizard.suse.cz. root.wizard.suse.cz. (
> 2005030101      ; serial
> 3h              ; refresh
> 1h              ; retry
> 1w              ; expiry
> 1d )            ; minimum
>
> new.example.com.        IN NS           wizard.suse.cz.
> wizard          IN A            10.88.0.1
> doe             IN A            10.88.0.3
> jeff            IN CNAME        joe
> $ORIGIN example.com.
> joe.new         IN A            10.88.0.2
> - - - example zone "new.example.com" - - -
> The TIP says that when some record is not finished with a dot ".", the zone is
> appended. It is only a part of truth, the "$ORIGIN" record would rewrite the
> appended string.
> In this case "joe.new"+$ORIGIN is "joe.new.example.com."
> `dig A jeff.new.example.com. @server`
> - - - returns - - -
> ;; ANSWER SECTION:
> jeff.new.example.com.   172800  IN      CNAME   joe.new.example.com.
> joe.new.example.com.    172800  IN      A       10.88.0.2
> - - - returns - - -
> More docu: http://www.zytrax.com/books/dns/apa/dot.html
- - -
> Syntactical issue: "." dot could be quoted... (ke: done)
-->

  <para>
   The first case to consider is the zone file
   <filename>&exampledomain;.zone</filename>, responsible for the domain
   <filename>&exampledomain;</filename>, shown in
   <xref linkend="ex.welt.zone"/>.
  </para>

  <example xml:id="ex.welt.zone">
   <title>The /var/lib/named/&exampledomain;.zone File</title>
   <screen>$TTL 2D <co xml:id="welt.zone.ttl"/>
&exampledomain;. IN SOA      dns  root.&exampledomain;. ( <co xml:id="welt.zone.soa_start"/>
             2003072441  ; serial <co xml:id="welt.zone.serial_no"/>
             1D          ; refresh <co xml:id="welt.zone.refresh"/>
             2H          ; retry <co xml:id="welt.zone.retry"/>
             1W          ; expiry <co xml:id="welt.zone.expire"/>
             2D )        ; minimum <co xml:id="welt.zone.caching_time"/>

             IN NS       dns <co xml:id="welt.zone.inns"/>
             IN MX       10 mail dns <co xml:id="welt.zone.mx"/>
gate         IN A        &gateip; <co xml:id="welt.zone.ips"/>
             IN A        10.0.0.1
dns          IN A        &dnsip;
mail         IN A        &mailip;
&wsI;      IN A        &wsIip;
&wsII;        IN A        &wsIIip;
&wsIII;       IN A        &wsIIIip;
&wsIV;      IN A        &wsIVip;
ntp          IN CNAME    dns <co xml:id="welt.zone.ntp"/>
dns6         IN A6  0    &dnsipv6;</screen>
<!--
   removed:
   As it makes no sense with 'www' as a normal host name.
   removed:
   moon        IN A        192.168.0.3
   earth       IN A        192.168.1.2
   mars        IN A        192.168.1.3
   -->
  </example>

  <calloutlist>
   <callout arearefs="welt.zone.ttl">
    <para>
     <systemitem>$TTL</systemitem> defines the default time to live that
     should apply to all the entries in this file. In this example, entries
     are valid for a period of two days (<literal>2 D</literal>).
    </para>
   </callout>
   <callout arearefs="welt.zone.soa_start">
    <para>
     This is where the SOA (start of authority) control record begins:
    </para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       The name of the domain to administer is
       <literal>&exampledomain;</literal> in the first position. This ends
       with <literal>"."</literal>, because otherwise the zone would be
       appended a second time. Alternatively, <literal>@</literal> can be
       entered here, in which case the zone would be extracted from the
       corresponding entry in <filename>/etc/named.conf</filename>.
      </para>
     </listitem>
     <listitem>
      <para>
       After <systemitem>IN SOA</systemitem> is the name of the name server in
       charge as master for this zone. The name is expanded from
       <literal>dns</literal> to <literal>&dnsname;</literal>, because it does
       not end with a <literal>"."</literal>.
      </para>
     </listitem>
     <listitem>
      <para>
       An e-mail address of the person in charge of this name server follows.
       Because the <literal>@</literal> sign already has a special meaning,
       <literal>"."</literal> is entered here instead. For
       <systemitem>root@&exampledomain;</systemitem> the entry must read
       <systemitem>root.&exampledomain;.</systemitem>. The
       <literal>"."</literal> must be included at the end to prevent the zone
       from being added.
      </para>
     </listitem>
     <listitem>
      <para>
       The <literal>(</literal> includes all lines up to <literal>)</literal>
       into the SOA record.
      </para>
     </listitem>
    </itemizedlist>
   </callout>
   <callout arearefs="welt.zone.serial_no">
    <para>
     The <systemitem>serial number</systemitem> is a 10 digit number. It must
     be changed each time this file is changed. It is needed to inform the
     secondary name servers (slave servers) of changes. For this, a 10 digit
     number of the date and run number, written as YYYYMMDDNN, has become the
     customary format (YYYY = year, MM = month and DD = day. NN is a
     sequence number in case you update it more than once on the given day).
    </para>
   </callout>
   <callout arearefs="welt.zone.refresh">
    <para>
     The <systemitem>refresh rate</systemitem> specifies the time interval at
     which the secondary name servers verify the zone <systemitem>serial
     number</systemitem>. In this case, one day.
    </para>
   </callout>
   <callout arearefs="welt.zone.retry">
    <para>
     The <systemitem>retry rate</systemitem> specifies the time interval at
     which a secondary name server, in case of error, attempts to contact the
     primary server again. Here, two hours.
    </para>
   </callout>
   <callout arearefs="welt.zone.expire">
    <para>
     The <systemitem>expiration time</systemitem> specifies the time frame
     after which a secondary name server discards the cached data if it has
     not regained contact to the primary server. Here, a week.
    </para>
   </callout>
   <callout arearefs="welt.zone.caching_time">
    <para>
     The last entry in the SOA record specifies the <systemitem>negative
     caching TTL</systemitem>&mdash;the time for which results of unresolved
     DNS queries from other servers may be cached.
    </para>
   </callout>
   <callout arearefs="welt.zone.inns">
    <para>
     The <systemitem>IN NS</systemitem> specifies the name server responsible
     for this domain. <systemitem>dns</systemitem> is extended to
     <systemitem>&dnsname;</systemitem> because it does not end with a
     <literal>"."</literal>. There can be several lines like this&mdash;one for
     the primary and one for each secondary name server. If
     <systemitem>notify</systemitem> is not set to <option>no</option> in
     <filename>/etc/named.conf</filename>, all the name servers listed here are
     informed of the changes made to the zone data.
    </para>
   </callout>
   <callout arearefs="welt.zone.mx">
    <para>
     The MX record specifies the mail server that accepts, processes, and
     forwards e-mails for the domain <systemitem
     class="domainname">&exampledomain;</systemitem>. In this example, this is
     the host <systemitem class="domainname">&mailname;</systemitem>. The
     number in front of the host name is the preference value. If there are
     multiple MX entries, the mail server with the smallest value is taken
     first. If mail delivery to this server fails, the entry with the
     next-smallest value is used.
    </para>
   </callout>
   <callout arearefs="welt.zone.ips">
    <para>
     This and the following lines are the actual address records where one or more IP addresses are
      assigned to host names. The names are listed here without a
      <literal>"."</literal> because they do not include their domain, so
      <systemitem class="domainname">&exampledomain;</systemitem> is added to
      all of them. Two IP addresses are assigned to the host
      <systemitem>gate</systemitem>, as it has two network cards.
<!-- looks as if we don't support A6 at least with YAST -->
      Wherever the host address is a traditional one (IPv4), the record is
      marked with <literal>A</literal>. If the address is an IPv6 address, the
      entry is marked with <literal>AAAA</literal>.
<!-- The previous token
      for IPv6 addresses was only <literal>AAAA</literal>, which is now
      obsolete. -->
     </para>
<!-- bug 63609-->
<!-- bg: see RFC 1886, RFC 2874 -->
     <note>
      <title>IPv6 Syntax</title>
      <para>
       The IPv6 record has a slightly different syntax than IPv4. Because of
       the fragmentation possibility, it is necessary to provide information
       about missed bits before the address. To fill up the IPv6 address with
       the needed number of <quote>0</quote>, add two colons at the correct
       place in the address.
<!-- You must provide this
       information even if you want to use a completely unfragmented
       address. For the AAAA record with the syntax -->
      </para>
<screen>pluto     AAAA 2345:00C1:CA11::1234:5678:9ABC:DEF0
pluto     AAAA 2345:00D2:DA11::1234:5678:9ABC:DEF0</screen>
<!--      <para>
       You need to add information about missing bits in IPv6 format.
       Because the example above is complete (does not miss any bits), the
       A6 format of this record is:
      </para>
<screen>pluto  IN            A6 0 2345:00C1:CA11:0001:1234:5678:9ABC:DEF0
 pluto  IN            A6 0 2345:00D2:DA11:0001:1234:5678:9ABC:DEF0</screen> -->
     </note>
   </callout>
   <callout  arearefs="welt.zone.ntp">
    <para>
     The alias <literal>ntp</literal> can be used to address
     <literal>dns</literal> (<systemitem>CNAME</systemitem> means
     <emphasis>canonical name</emphasis>).
    </para>
   </callout>
  </calloutlist>

<!-- jh: I shortened the prefix to two octets to encompass the whole network. -->

  <para>
   The pseudo domain <literal>in-addr.arpa</literal> is used for the reverse
   lookup of IP addresses into host names. It is appended to the network part
   of the address in reverse notation. So
   <systemitem class="ipaddress">192.168</systemitem> is resolved into
   <systemitem>168.192.in-addr.arpa</systemitem>. See
   <xref linkend="dat.arpa"/>.
  </para>

<!-- make some sense in the reverse lookup - maybe do just 168.192. ... ? -->

  <example xml:id="dat.arpa">
   <title>Reverse Lookup</title>
   <screen>$TTL 2D <co xml:id="data.arpa.ttl"/>
168.192.in-addr.arpa.   IN SOA &dnsname;. root.&exampledomain;. ( <co xml:id="data.arpa.soa"/>
                        2003072441      ; serial
                        1D              ; refresh
                        2H              ; retry
                        1W              ; expiry
                        2D )            ; minimum

                        IN NS           &dnsname;. <co xml:id="data.arpa.inns"/>

1.5                     IN PTR          &gatename;. <co xml:id="data.arpa.ips"/>
100.3                   IN PTR          &wwwname;.
253.2                   IN PTR          &cupsname;.</screen>
  </example>

  <calloutlist>
   <callout arearefs="data.arpa.ttl">
    <para>
     $TTL defines the standard TTL that applies to all entries here.
    </para>
   </callout>
   <callout  arearefs="data.arpa.soa">
    <para>
     The configuration file should activate reverse lookup for the network
     <systemitem class="ipaddress">192.168</systemitem>. Given
     that the zone is called <systemitem>168.192.in-addr.arpa</systemitem>, it
     should not be added to the host names. Therefore, all host names are
     entered in their complete form&mdash;with their domain and with a
     <literal>"."</literal> at the end. The remaining entries correspond to
     those described for the previous <systemitem>&exampledomain;</systemitem>
     example.
    </para>
    <para>
     See <xref linkend="ex.welt.zone"/> for detail on the entries within this
     record.
    </para>
   </callout>
   <callout arearefs="data.arpa.inns">
    <para>
     This line specifies the name server responsible for this zone. This time,
     however, the name is entered in its complete form with the domain and a
     <literal>"."</literal> at the end.
    </para>
   </callout>
   <callout arearefs="data.arpa.ips">
    <para>
     This, and the following lines, are the pointer records hinting at the IP
     addresses on the respective hosts. Only the last part of the IP address is
     entered at the beginning of the line, without the <literal>"."</literal>
     at the end.  Appending the zone to this (without the
     <systemitem>.in-addr.arpa</systemitem>) results in the complete IP address
     in reverse order.
    </para>
   </callout>
  </calloutlist>
  <para>
   Normally, zone transfers between different versions of BIND should be
   possible without any problems.
  </para>
 </sect1>
<!--rw-trans moved section up from later in this file-->
 <sect1 xml:id="sec.dns.dynupdate">
  <title>Dynamic Update of Zone Data</title>

  <para>
   The term <emphasis>dynamic update</emphasis> refers to operations by which
   entries in the zone files of a master server are added, changed, or deleted.
   This mechanism is described in RFC&nbsp;2136. Dynamic update is configured
   individually for each zone entry by adding an optional
   <systemitem>allow-update</systemitem> or
   <systemitem>update-policy</systemitem> rule. Zones to update dynamically
   should not be edited by hand.
  </para>

  <para>
   Transmit the entries to update to the server with the command
   <command>nsupdate</command>. For the exact syntax of this command, check the
   manual page for nsupdate (<command>man</command>&nbsp;<option>8
   nsupdate</option>). For security reasons, any such update should be
   performed using TSIG keys as described in <xref linkend="sec.dns.tsig"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec.dns.tsig">
  <title>Secure Transactions</title>

  <para>
   Secure transactions can be made with transaction signatures (TSIGs) based on
   shared secret keys (also called TSIG keys). This section describes how to
   generate and use such keys.
  </para>

  <para>
   Secure transactions are needed for communication between different servers
   and for the dynamic update of zone data. Making the access control dependent
   on keys is much more secure than merely relying on IP addresses.
  </para>

  <para>
   Generate a TSIG key with the following command (for details, see
   <command>man</command>&nbsp;<option>dnssec-keygen</option>):
  </para>

<screen>&prompt.sudo;dnssec-keygen -a hmac-md5 -b 128 -n HOST host1-host2</screen>

  <para>
   This creates two files with names similar to these:
  </para>

<screen>Khost1-host2.+157+34265.private Khost1-host2.+157+34265.key</screen>

  <para>
   The key itself (a string like <literal>ejIkuCyyGJwwuN3xAteKgg==</literal>)
   is found in both files. To use it for transactions, the second file
   (<filename>Khost1-host2.+157+34265.key</filename>) must be transferred to
   the remote host, preferably in a secure way (using scp, for example). On the
   remote server, the key must be included in the
   <filename>/etc/named.conf</filename> file to enable a secure communication
   between <literal>host1</literal> and <literal>host2</literal>:
  </para>

<screen>key host1-host2 {
 algorithm hmac-md5;
 secret "ejIkuCyyGJwwuN3xAteKgg==";
};</screen>

  <warning>
   <title>File Permissions of <filename>/etc/named.conf</filename></title>
   <para>
    Make sure that the permissions of <filename>/etc/named.conf</filename> are
    properly restricted. The default for this file is <literal>0640</literal>,
    with the owner being <systemitem class="username">root</systemitem> and the
    group <systemitem class="username">named</systemitem>. As an alternative,
    move the keys to an extra file with specially limited permissions, which is
    then included from <filename>/etc/named.conf</filename>. To include an
    external file, use:
   </para>
<screen>include  "filename"</screen>
   <para>
    Replace <option>filename</option> with an absolute path to your file with
    keys.
   </para>
  </warning>

  <para>
<!--adjust to standard network example-->
<!-- network schema: We have no 2xDNS setup, i used a disjoint network for -->
<!-- this. Is this a problem? After all, this is just an illustration of how -->
<!-- to put a key for a host, and not a beginner topic. Anyway, we'd need a -->
<!-- secondary server. -->
   To enable the server <literal>host1</literal> to use the key for
   <literal>host2</literal> (which has the address <literal>10.1.2.3</literal>
   in this example), the server's <filename>/etc/named.conf</filename> must
   include the following rule:
  </para>

<screen>server 10.1.2.3 {
  keys { host1-host2. ;};
};</screen>

  <para>
   Analogous entries must be included in the configuration files of
   <literal>host2</literal>.
  </para>

  <para>
   Add TSIG keys for any ACLs (access control lists, not to be confused with
   file system ACLs) that are defined for IP addresses and address ranges to
   enable transaction security. The corresponding entry could look like this:
  </para>

<screen>allow-update { key host1-host2. ;};</screen>

  <para>
   This topic is discussed in more detail in the <emphasis>BIND Administrator
   Reference Manual</emphasis> under <literal>update-policy</literal>.
  </para>
 </sect1>
 <sect1 xml:id="sec.dns.dnssec">
  <title>DNS Security</title>

  <para>
   DNSSEC, or DNS security, is described in RFC&nbsp;2535. The tools available
   for DNSSEC are discussed in the BIND Manual.
  </para>

  <para>
   A zone considered secure must have one or several zone keys associated with
   it. These are generated with <command>dnssec-keygen</command>, as are the
   host keys. The DSA encryption algorithm is currently used to generate these
   keys. The public keys generated should be included in the corresponding zone
   file with an <systemitem>$INCLUDE</systemitem> rule.
  </para>

  <para>
   With the command <command>dnssec-signzone</command>, you can create sets of
   generated keys (<literal>keyset-</literal> files), transfer them to the
   parent zone in a secure manner, and sign them. This generates the files to
   include for each zone in <filename>/etc/named.conf</filename>.
  </para>

<!-- 2011-08-30, toba: dnssec-makekeyset and dnssec-signkey are gone in 11 SP2
  <para>
   With the command <command>dnssec-makekeyset</command>, all keys generated
   are packaged into one set, which must then be transferred to the parent
   zone in a secure manner. On the parent, the set is signed with
   <command>dnssec-signkey</command>. The files generated by this command
   are then used to sign the zones with <command>dnssec-signzone</command>,
   which in turn generates the files to include for each zone in
   <filename>/etc/named.conf</filename>.
  </para>
  -->
 </sect1>
 <sect1 xml:id="sec.dns.info">
  <title>For More Information</title>

  <para>
   For more information, see the <emphasis>BIND Administrator Reference
   Manual</emphasis> from the
   <systemitem class="resource">bind-doc</systemitem> package, which is
   installed under <filename>/usr/share/doc/packages/bind/arm</filename>.
   Consider additionally consulting the RFCs referenced by the manual and the
   manual pages included with BIND.
   <filename>/usr/share/doc/packages/bind/README.SUSE</filename> contains
   up-to-date information about BIND in &productname;.
  </para>
 </sect1>
</chapter>
