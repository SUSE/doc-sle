<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
    [
<!ENTITY % entities SYSTEM "generic-entities.ent">
%entities;
]>
<chapter xml:id="cha-bci" xml:lang="en"
    xmlns="http://docbook.org/ns/docbook" version="5.0"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>&bci;s</title>
 </info>
 <sect1 xml:id="sec-bci-variants">
  <title>BCI-Base, BCI-Minimal, BCI-Micro, and BCI-BusyBox</title>

  <para>
   &suse; offers several general-purpose &bci;s that are intended as deployment
   targets or as foundations for creating customized images: BCI-Base,
   BCI-Minimal, BCI-Micro, and BCI-BusyBox. These images share the common
   &slsa; base, and none of them ship with a specific language or an
   application stack. All images feature the RPM database (even if the specific
   image does not include the RPM package manager) that can be used to verify
   the provenance of every file in the image. Each image includes the &slsa;
   certificate bundle, which allows the deployed applications to use the
   system's certificates to verify TLS connections.
  </para>

  <sect2 xml:id="bci-variants-table">
   <title>Quick overview</title>
   <para>
    The table below provides a quick overview of the differences between
    BCI-Base, BCI-Minimal, BCI-Micro, and BCI-BusyBox.
   </para>
   <informalfigure>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="bci-variants.png" width="80%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="bci-variants.png" width="100%"/>
     </imageobject>
    </mediaobject>
   </informalfigure>
  </sect2>

  <sect2 xml:id="bci-variants-base">
   <title>BCI-Base and BCI-Init: When you need flexibility</title>
   <para>
    This &bci; comes with the Zypper package manager and a free SLE-BCI
    repository. This allows you to install software available in the repository
    and customize the image during the build. The downside is the size of the
    image. It is the largest of the general-purpose &bci;s, so it is not always
    the best choice for a deployment image.
   </para>
   <para>
    A variant of BCI-Base called BCI-Init comes with systemd preinstalled. The
    BCI-Init container image can be useful in scenarios requiringÂ systemd for
    managing services in a single container.
   </para>
  </sect2>

  <sect2 xml:id="bci-variants-minimal">
   <title>BCI-Minimal: When you do not need Zypper</title>
   <para>
    This is a stripped-down version of the BCI-Base image. BCI-Minimal comes
    without Zypper, but it does have the RPM package manager installed. This
    significantly reduces the size of the image. However, while RPM can install
    and remove packages, it lacks support for repositories and automated
    dependency resolution. The BCI-Minimal image is therefore intended for
    creating deployment containers, and then installing the desired RPM
    packages inside the containers. Although you can install the required
    dependencies, you need to download and resolve them manually. However, this
    approach is not recommended as it is prone to errors.
   </para>
  </sect2>

  <sect2 xml:id="bci-variants-micro">
   <title>BCI-Micro: When you need to deploy static binaries</title>
   <para>
    This image is similar to BCI-Minimal but without the RPM package manager.
    The primary use case for the image is deploying static binaries produced
    externally or during multi-stage builds. As there is no straightforward way
    to install additional dependencies inside the container image, we recommend
    deploying a project using the BCI-Minimal image only when the final build
    artifact bundles all dependencies and has no external runtime requirements
    (like Python or Ruby).
   </para>
  </sect2>

  <sect2 xml:id="bci-variants-busybox">
   <title>BCI-BusyBox: When you need the smallest and GPLv3-free image</title>
   <para>
    Similar to BCI-Micro, the BCI-BusyBox image comes with the most basic tools
    only. However, these tools are provided by the BusyBox project. This has
    the benefit of further size reduction. Furthermore, the image contains no
    GPLv3 licensed software. When using the image, keep in mind that there are
    certain differences between the BusyBox tools and the GNU Coreutils. So
    scripts written for a system that uses GNU Coreutils may require
    modification to work with BusyBox.
   </para>
  </sect2>

  <sect2 xml:id="bci-variants-size">
   <title>Approximate sizes</title>
   <para>
    For your reference, the list below provides an approximate size of each
    &bci;. Keep in mind that the provided numbers are rough estimations.
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <literal>BCI-Base</literal> ~94&nbsp;MB
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>BCI-Minimal</literal> ~42&nbsp;MB
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>BCI-Micro</literal> ~26&nbsp;MB
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>BCI-BusyBox</literal> ~14&nbsp;MB
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
</chapter>
