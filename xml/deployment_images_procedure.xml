<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha-images-procedure"
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Procedure for deployment of raw images</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  &productname; provides raw images that can be directly deployed to your
  device storage: A memory card, a USB flash drive, or a hard disk. The options
  for which type of device you can deploy the image to depend on your
  particular hardware; follow your vendor documentation.
 </para>
 <para>
  To initially configure the deployed image, you need to prepare the
  configuration data as described in
  <xref linkend="pro-preparing-configuration-device"/> and you need to copy the
  configuration data to a device (e.g. a USB disk). The device needs to be
  connected to your host running &slema; during its first boot.
 </para>
 <para>
  To prepare the setup, you will need two separate devices. One for the raw
  disk image, where &slema; will run, and another one that serves as a
  configuration medium.
 </para>
 <procedure xml:id="proc-prepare-image">
  <title>Preparing the raw disk image</title>
  <step>
   <para>
    Download the raw image and decompress it:
   </para>
<screen>&prompt.user;xz -d &lt;downloaded_image.raw.xz&gt;</screen>
  </step>
  <step>
   <para>
    Write the decompressed image to the device where &slema; will run:
   </para>
<screen>&prompt.user;dd if=&lt;downloaded_image.raw&gt; of=/dev/sdX</screen>
  </step>
 </procedure>
 <para>
  The following procedure describes how to prepare the configuration device
  (usually a USB flash disk).
 </para>
 <procedure xml:id="pro-preparing-configuration-device">
  <title>Preparing the configuration device</title>
  <step>
   <para>
    Format the disk to any file system supported by &slema; (FAT, ext4, etc.):
   </para>
<screen>
&prompt.user;sudo mkfs.ext4 /dev/sdY
</screen>
  </step>
  <step>
   <para>
    Set the device label to either <literal>ignition</literal> or
    <literal>combustion</literal>. For the ext4 file system:
   </para>
<screen>&prompt.user;sudo e2label /dev/sdY ignition</screen>
   <para>
    You can use any type of configuration storage media that your
    virtualization system or your hardware supports: An ISO image, a USB
    flash disk, etc.
   </para>
  </step>
  <step>
   <para>
    Mount the device:
   </para>
<screen>
&prompt.user;sudo mount /dev/sdY /mnt
</screen>
  </step>
  <step>
   <para>
    Create the directory structure as mentioned in <xref
    linkend="cha-images-ignition"/> or <xref
     linkend="cha-images-combustion"/>, depending on the configuration
    tool used:
   </para>
<screen>
&prompt.user;sudo mkdir -p /mnt/ignition/
</screen>
   <para>
    or:
   </para>
<screen>
&prompt.user;sudo mkdir -p /mnt/combustion/
</screen>
  </step>
  <step>
   <para>
    Prior to booting for the first time, prepare all elements of the
    configuration that will be used by
    <xref linkend="cha-images-ignition" xrefstyle="template:Ignition"/> or
    <xref linkend="cha-images-combustion" xrefstyle="template:Combustion"/>.
    The minimal configuration must provide a password for &rootuser;, otherwise
    the system will not be accessible after the first boot.
   </para>
  </step>
 </procedure>
 <para>
  After the first boot, you need to register your &slem; instance by using the
  command line tool <command>SUSEConnect</command>. For details, refer to
  <xref linkend="sec-images-registration"/>.
 </para>
 <para>
  &slema; has an extension for live patching available. To use this extension,
  you need to add the extension to your subscirption from the installed system.
  For details, refer to <xref linkend="sec-adding-extension"/>.
 </para>
 <sect1 xml:id="sec-images-registration">
  <title>Registration</title>

  <para>
   Registering the system is possible from the command line using
   <command>SUSEConnect</command>. More information goes beyond the scope
   of this section, so please refer to the inline documentation with
   <command>SUSEConnect --help</command>
  </para>

  <procedure>
   <title>Product registration with SUSEConnect</title>
   <step>
    <para>
     To register &productname; with &scc;, run <command>SUSEConnect</command>
     as follows:
    </para>
<screen>&prompt.root;SUSEConnect -r <replaceable>REGISTRATION_CODE</replaceable> -e <replaceable>EMAIL_ADDRESS</replaceable></screen>
    <para>
     To register with a local registration server, additionally provide the URL
     to the server:
    </para>
<screen>&prompt.root;SUSEConnect -r <replaceable>REGISTRATION_CODE</replaceable> -e <replaceable>EMAIL_ADDRESS</replaceable> \
--url "https://suse_register.&exampledomain;/"</screen>
    <para>
     Replace <replaceable>REGISTRATION_CODE</replaceable> with the registration
     code you received with your copy of &productname;. Replace
     <replaceable>EMAIL_ADDRESS</replaceable> with the email address
     associated with the &suse; account you or your organization uses to manage
     subscriptions.
    </para>
   </step>
   <step>
    <para>
     &productname; is now registered.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-adding-extension">
  <title>Adding extensions</title>

  <para>
   In case you need to activate the live patching extension, list the available
   extensions by first running:
  </para>

<screen>
 &prompt.root;transactional-update --quiet register -list-extensions
 </screen>

  <para>
   The output provides you with a command how to activate the live patching
   extension:
  </para>

<screen>
 &prompt.root;transactional-update register -p sle-module-live-patching/15.3/x86_64 -r <replaceable>registration code</replaceable>
 </screen>

  <para>
   To deactivate the extension, run the following command:
  </para>

<screen>
 &prompt.root;transactional-update register -d -p sle-module-live-patching/15.3/x86_64
 </screen>

  <note>
   <title>Rebooting after activating/deactivating extensions</title>
   <para>
    As the extension activation or deactivation is performed as a
    transactional-update and thus creates a new snapshot, you need to restart
    your system to boot to the new snapshot and apply the changes.
   </para>
  </note>
 </sect1>
</chapter>
