msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-08-18 22:23+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Put one translator per line, in the form NAME <EMAIL>, YEAR1, YEAR2
msgctxt "_"
msgid "translator-credits"
msgstr ""

#. (itstool) path: chapter/title
#: xml/storage_filesystems.xml:9
msgid "Overview of File Systems in Linux"
msgstr ""

#. (itstool) path: docmanager/translation
#: xml/storage_filesystems.xml:13
msgid "yes"
msgstr ""

#. (itstool) path: abstract/para
#: xml/storage_filesystems.xml:16
msgid "<phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> ships with different file systems from which to choose, including Btrfs, Ext4, Ext3, Ext2, ReiserFS and XFS. Each file system has its own advantages and disadvantages. For a side-by-side feature comparison of the major operating systems in <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>, see <link xlink:href=\"http://www.suse.com/products/server/technical-information/#FileSystem\"/> (File System Support and Sizes). This chapter contains an overview of how these file systems work and what advantages they offer."
msgstr ""

#. (itstool) path: chapter/para
#: xml/storage_filesystems.xml:28
msgid "With SUSE Linux Enterprise 12, Btrfs is the default file system for the operating system and XFS is the default for all other use cases. SUSE also continues to support the Ext family of file systems, ReiserFS and OCFS2. By default, the Btrfs file system will be set up with subvolumes. Snapshots will be automatically enabled for the root file system using the snapper infrastructure. For more information about snapper, refer to <xref linkend=\"cha.snapper\"/>."
msgstr ""

#. (itstool) path: chapter/para
#: xml/storage_filesystems.xml:36
msgid "Professional high-performance setups might require a highly available storage system. To meet the requirements of high-performance clustering scenarios, <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> includes OCFS2 (Oracle Cluster File System 2) and the Distributed Replicated Block Device (DRBD) in the High Availability Extension add-on. These advanced storage systems are not covered in this guide. For information, see the <citetitle>SUSE Linux Enterprise High Availability Extension <citetitle>Administration Guide</citetitle></citetitle> at <link xlink:href=\"http://www.suse.com/doc\"/>."
msgstr ""

#. (itstool) path: chapter/para
#: xml/storage_filesystems.xml:45
msgid "It is very important to remember that no file system best suits all kinds of applications. Each file system has its particular strengths and weaknesses, which must be taken into account. In addition, even the most sophisticated file system cannot replace a reasonable backup strategy."
msgstr ""

#. (itstool) path: chapter/para
#: xml/storage_filesystems.xml:51
msgid "The terms <emphasis>data integrity</emphasis> and <emphasis>data consistency</emphasis>, when used in this section, do not refer to the consistency of the user space data (the data your application writes to its files). Whether this data is consistent must be controlled by the application itself."
msgstr ""

#. (itstool) path: chapter/para
#: xml/storage_filesystems.xml:58
msgid "Unless stated otherwise in this section, all the steps required to set up or change partitions and file systems can be performed by using the YaST Partitioner (which is also strongly recommended). For information, see <xref linkend=\"cha.advdisk\"/>."
msgstr ""

#. (itstool) path: sect1/title
#: xml/storage_filesystems.xml:65
msgid "Terminology"
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/storage_filesystems.xml:69
msgid "metadata"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:71
msgid "A data structure that is internal to the file system. It ensures that all of the on-disk data is properly organized and accessible. Essentially, it is <quote>data about the data.</quote> Almost every file system has its own structure of metadata, which is one reason the file systems show different performance characteristics. It is extremely important to maintain metadata intact, because otherwise all data on the file system could become inaccessible."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/storage_filesystems.xml:83
msgid "inode"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:85
msgid "A data structure on a file system that contains a variety of information about a file, including size, number of links, pointers to the disk blocks where the file contents are actually stored, and date and time of creation, modification, and access."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/storage_filesystems.xml:94
msgid "journal"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:96
msgid "In the context of a file system, a journal is an on-disk structure containing a type of log in which the file system stores what it is about to change in the file systemâ€™s metadata. Journaling greatly reduces the recovery time of a file system because it has no need for the lengthy search process that checks the entire file system at system start-up. Instead, only the journal is replayed."
msgstr ""

#. (itstool) path: sect1/title
#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:109
#: xml/storage_filesystems.xml:1544
msgid "Btrfs"
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:111
msgid "Btrfs is a copy-on-write (COW) file system developed by Chris Mason. It is based on COW-friendly B-trees developed by Ohad Rodeh. Btrfs is a logging-style file system. Instead of journaling the block changes, it writes them in a new location, then links the change in. Until the last write, the new changes are not committed."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:120
msgid "Key Features"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:121
msgid "Btrfs provides fault tolerance, repair, and easy management features, such as the following:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:127
msgid "Writable snapshots that allow you to easily roll back your system if needed after applying updates, or to back up files."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:133
msgid "Subvolume support: Btrfs creates a default subvolume in its assigned pool of space. It allows you to create additional subvolumes that act as individual file systems within the same pool of space. The number of subvolumes is limited only by the space allocated to the pool."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:141
msgid "The online check and repair functionality <command>scrub</command> is available as part of the Btrfs command line tools. It verifies the integrity of data and metadata, assuming the tree structure is fine. You can run scrub periodically on a mounted file system; it runs as a background process during normal operation."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:150
msgid "Different RAID levels for metadata and user data."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:155
msgid "Different checksums for metadata and user data to improve error detection."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:161
msgid "Integration with Linux Logical Volume Manager (LVM) storage objects."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:166
msgid "Integration with the YaST Partitioner and AutoYaST on <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>. This also includes creating a Btrfs file system on Multiple Devices (MD) and Device Mapper (DM) storage configurations."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:173
msgid "Offline migration from existing Ext2, Ext3, and Ext4 file systems."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:178
msgid "Boot loader support for <filename>/boot</filename>, allowing to boot from a Btrfs partition."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:185
msgid "Multivolume Btrfs is supported in RAID0, RAID1, and RAID10 profiles in <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> <phrase role=\"productnumber\"><phrase os=\"osuse\">42.3</phrase><phrase os=\"sles;sled;slerte\">12 SP3</phrase></phrase>. Higher RAID levels are not supported yet, but might be enabled with a future service pack."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:192
msgid "Use Btrfs commands to set up transparent compression."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:200
msgid "The Root File System Setup on <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:201
msgid "By default, <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> is set up using Btrfs and snapshots for the root partition. Snapshots allow you to easily roll back your system if needed after applying updates, or to back up files. Snapshots can easily be managed with the SUSE Snapper infrastructure as explained in <xref linkend=\"cha.snapper\"/>. For general information about the SUSE Snapper project, see the Snapper Portal wiki at OpenSUSE.org (<link xlink:href=\"http://snapper.io\"/>)."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:210
msgid "When using a snapshot to roll back the system, it must be ensured that data such as user's home directories, Web and FTP server contents or log files do not get lost or overwritten during a roll back. This is achieved by using Btrfs subvolumes on the root file system. Subvolumes can be excluded from snapshots. The default root file system setup on <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> as proposed by YaST during the installation contains the following subvolumes. They are excluded from snapshots for the reasons given below."
msgstr ""

#. (itstool) path: warning/title
#: xml/storage_filesystems.xml:221
msgid "Support for Rollbacks"
msgstr ""

#. (itstool) path: warning/para
#: xml/storage_filesystems.xml:222
msgid "Rollbacks are only supported by the SUSE support if you do not remove any of the preconfigured subvolumes. You may, however, add additional subvolumes using the YaST Partitioner."
msgstr ""

#. (itstool) path: sect3/title
#: xml/storage_filesystems.xml:229
msgid "Mounting Compressed Btrfs File Systems"
msgstr ""

#. (itstool) path: note/title
#: xml/storage_filesystems.xml:232
msgid "GRUBÂ 2 and LZO Compressed Root"
msgstr ""

#. (itstool) path: note/para
#: xml/storage_filesystems.xml:233
msgid "GRUBÂ 2 cannot read an lzo compressed root. You need a separate <filename>/boot</filename> partition to use compression."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:238
msgid "Since SLE12 SP1, compression for Btrfs file systems is supported. Use the <option>compress</option> or <option>compress-force</option> option and select the compression algorithm, <literal>lzo</literal> or <literal>zlib</literal> (the default). The zlib compression has a higher compression ratio while lzo is faster and takes less CPU load."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:245
msgid "For example:"
msgstr ""

#. (itstool) path: sect3/screen
#: xml/storage_filesystems.xml:248
#, no-wrap
msgid ""
"<prompt role=\"root\">root # </prompt>mount -o compress /dev/sdx /mnt"
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:249
msgid "In case you create a file, write to it, and the compressed result is greater or equal to the uncompressed size, Btrfs will skip compression for future write operations forever for this file. If you do not like this behavior, use the <option>compress-force</option> option. This can be useful for files that have some initial uncompressible data."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:256
msgid "Note, compression takes effect for new files only. Files that were written without compression are not compressed when the file system is mounted with the <option>compress</option> or <option>compress-force</option> option. Furthermore, files with the <option>nodatacow</option> attribute never get their extents compressed:"
msgstr ""

#. (itstool) path: sect3/screen
#: xml/storage_filesystems.xml:263
#, no-wrap
msgid ""
"<prompt role=\"root\">root # </prompt><command>chattr</command> +C <replaceable>FILE</replaceable>\n"
"<prompt role=\"root\">root # </prompt><command>mount</command> -o nodatacow  /dev/sdx /mnt"
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:265
msgid "In regard to encryption, this is independent from any compression. After you have written some data to this partition, print the details:"
msgstr ""

#. (itstool) path: sect3/screen
#: xml/storage_filesystems.xml:269
#, no-wrap
msgid ""
"<prompt role=\"root\">root # </prompt>btrfs filesystem show /mnt\n"
"btrfs filesystem show /mnt\n"
"Label: 'Test-Btrfs'  uuid: 62f0c378-e93e-4aa1-9532-93c6b780749d\n"
"        Total devices 1 FS bytes used 3.22MiB\n"
"      devid    1 size 2.00GiB used 240.62MiB path /dev/sdb1"
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:274
msgid "If you want this to be permanent, add the <option>compress</option> or <option>compress-force</option> option into the <filename>/etc/fstab</filename> configuration file. For example:"
msgstr ""

#. (itstool) path: sect3/screen
#: xml/storage_filesystems.xml:279
#, no-wrap
msgid ""
"UUID=1a2b3c4d /home btrfs subvol=@/home,<emphasis role=\"strong\">compress</emphasis> 0 0"
msgstr ""

#. (itstool) path: sect3/title
#: xml/storage_filesystems.xml:282
msgid "Mounting Subvolumes"
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:283
msgid "A system rollback from a snapshot on <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> is performed by booting from the snapshot first. This allows you to check the snapshot while running before doing the rollback. Being able to boot from snapshots is achieved by mounting the subvolumes (which would normally not be necessary)."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:290
msgid "In addition to the subvolumes listed in <xref linkend=\"sec.filesystems.major.btrfs.suse\"/> a volume named <literal>@</literal> exists. This is the default subvolume that will be mounted as the root partition (<filename>/</filename>). The other subvolumes will be mounted into this volume."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:297
msgid "When booting from a snapshot, not the <literal>@</literal> subvolume will be used, but rather the snapshot. The parts of the file system included in the snapshot will be mounted read-only as <filename>/</filename>. The other subvolumes will be mounted writable into the snapshot. This state is temporary by default: the previous configuration will be restored with the next reboot. To make it permanent, execute the <command>snapper rollback</command> command. This will make the snapshot that is currently booted the new <emphasis>default</emphasis> subvolume, which will be used after a reboot."
msgstr ""

#. (itstool) path: sect3/title
#: xml/storage_filesystems.xml:310
msgid "Checking for Free Space"
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:311
msgid "File system usage is usually checked by running the <command>df</command> command. On a Btrfs file system, the output of <command>df</command> can be misleading, because in addition to the space the raw data allocates, a Btrfs file system also allocates and uses space for metadata."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:317
msgid "Consequently a Btrfs file system may report being out of space even though it seems that plenty of space is still available. In that case, all space allocated for the metadata is used up. Use the following commands to check for used and available space on a Btrfs file system:"
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/storage_filesystems.xml:325
msgid "<command>btrfs filesystem show</command>"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/storage_filesystems.xml:328
#, no-wrap
msgid ""
"<prompt>tux &gt; </prompt>sudo btrfs filesystem show /\n"
"Label: 'ROOT'  uuid: 52011c5e-5711-42d8-8c50-718a005ec4b3\n"
"        Total devices 1 FS bytes used 10.02GiB\n"
"        devid    1 size 20.02GiB used 13.78GiB path /dev/sda3"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:332
msgid "Shows the total size of the file system and its usage. If these two values in the last line match, all space on the file system has been allocated."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/storage_filesystems.xml:340
msgid "<command>btrfs filesystem df</command>"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/storage_filesystems.xml:343
#, no-wrap
msgid ""
"<prompt>tux &gt; </prompt>sudo btrfs filesystem df /\n"
"Data, single: total=13.00GiB, used=9.61GiB\n"
"System, single: total=32.00MiB, used=16.00KiB\n"
"Metadata, single: total=768.00MiB, used=421.36MiB\n"
"GlobalReserve, single: total=144.00MiB, used=0.00B"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:348
msgid "Shows values for allocated (<literal>total</literal>) and used space of the file system. If the values for <literal>total</literal> and <literal>used</literal> for the metadata are almost equal, all space for metadata has been allocated."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/storage_filesystems.xml:357
msgid "<command>btrfs filesystem usage</command>"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/storage_filesystems.xml:360
#, no-wrap
msgid ""
"<prompt>tux &gt; </prompt>sudo btrfs filesystem usage /\n"
"Overall:\n"
"    Device size:                  20.02GiB\n"
"    Device allocated:             13.78GiB\n"
"    Device unallocated:            6.24GiB\n"
"    Device missing:                  0.00B\n"
"    Used:                         10.02GiB\n"
"    Free (estimated):              9.63GiB      (min: 9.63GiB)\n"
"    Data ratio:                       1.00\n"
"    Metadata ratio:                   1.00\n"
"    Global reserve:              144.00MiB      (used: 0.00B)\n"
"\n"
"             Data     Metadata  System\n"
"Id Path      single   single    single   Unallocated\n"
"-- --------- -------- --------- -------- -----------\n"
" 1 /dev/sda3 13.00GiB 768.00MiB 32.00MiB     6.24GiB\n"
"-- --------- -------- --------- -------- -----------\n"
"   Total     13.00GiB 768.00MiB 32.00MiB     6.24GiB\n"
"   Used       9.61GiB 421.36MiB 16.00KiB"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:379
msgid "Shows data similar to that of the two previous commands combined."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:385
msgid "For more information refer to <command>man 8 btrfs-filesystem</command> and <link xlink:href=\"https://btrfs.wiki.kernel.org/index.php/FAQ\"/>."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:393
msgid "Migration from Ext and ReiserFS File Systems to Btrfs"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:394
msgid "You can migrate data volumes from existing Ext (Ext2, Ext3, or Ext4) or ReiserFS to the Btrfs file system. The conversion process occurs offline and in place on the device. The file system needs at least 15% of available free space on the device."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:400
msgid "To convert the file system to Btrfs, take the file system offline, then enter:"
msgstr ""

#. (itstool) path: sect2/screen
#: xml/storage_filesystems.xml:404
#, no-wrap
msgid ""
"sudo btrfs-convert <replaceable>DEVICE</replaceable>"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:405
msgid "To roll back the migration to the original file system, take the file system offline, then enter:"
msgstr ""

#. (itstool) path: sect2/screen
#: xml/storage_filesystems.xml:409
#, no-wrap
msgid ""
"sudo btrfs-convert -r <replaceable>DEVICE</replaceable>"
msgstr ""

#. (itstool) path: warning/title
#: xml/storage_filesystems.xml:411
msgid "Root File System Conversion not Supported"
msgstr ""

#. (itstool) path: warning/para
#: xml/storage_filesystems.xml:412
msgid "Converting the root file system to Btrfs is not supported. Either keep the existing file system or re-install the whole system from scratch."
msgstr ""

#. (itstool) path: important/title
#: xml/storage_filesystems.xml:418
msgid "Possible Loss of Data"
msgstr ""

#. (itstool) path: important/para
#: xml/storage_filesystems.xml:419
msgid "When rolling back to the original file system, all data will be lost that you added after the conversion to Btrfs. That is, only the original data is converted back to the previous file system."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:428
msgid "Btrfs Administration"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:429
msgid "Btrfs is integrated in the YaST Partitioner and AutoYaST. It is available during the installation to allow you to set up a solution for the root file system. You can use the YaST Partitioner after the installation to view and manage Btrfs volumes."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:435
msgid "Btrfs administration tools are provided in the <filename>btrfsprogs</filename> package. For information about using Btrfs commands, see the <command>man 8 btrfs</command>, <command>man 8 btrfsck</command>, and <command>man 8 mkfs.btrfs</command> commands. For information about Btrfs features, see the <citetitle>Btrfs wiki</citetitle> at <link xlink:href=\"http://btrfs.wiki.kernel.org\"/>."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:446
msgid "Btrfs Quota Support for Subvolumes"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:447
msgid "The Btrfs root file system subvolumes <filename>/var/log</filename>, <filename>/var/crash</filename> and <filename>/var/cache</filename> can use all of the available disk space during normal operation, and cause a system malfunction. To help avoid this situation, <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> now offers Btrfs quota support for subvolumes. If you set up the root file system by using the respective YaST proposal, it is prepared accordingly: quota groups (<literal>qgroup</literal>) for all subvolumes are already set up. To set a quota for a subvolume in the root file system, proceed as follows:"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:459
msgid "Enable quota support:"
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:462
#, no-wrap
msgid ""
"sudo btrfs quota enable /"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:465
msgid "Get a list of subvolumes:"
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:468
#, no-wrap
msgid ""
"sudo btrfs subvolume list /"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:469
msgid "Quotas can only be set for existing subvolumes."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:474
msgid "Set a quota for one of the subvolumes that was listed in the previous step. A subvolume can either be identified by path (for example <filename>/var/tmp</filename>) or by <literal>0/<replaceable>SUBVOLUME ID</replaceable></literal> (for example <literal>0/272</literal>). The following example sets a quota of five GB for <filename>/var/tmp</filename>."
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:482
#, no-wrap
msgid ""
"sudo btrfs qgroup limit 5G /var/tmp"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:483
msgid "The size can either be specified in bytes (5000000000), kilobytes (5000000K), megabytes (5000M), or gigabytes (5G). The resulting values in bytes slightly differ, since 1024 Bytes = 1 KiB, 1024 KiB = 1 MiB, etc."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:490
msgid "To list the existing quotas, use the following command. The column <literal>max_rfer</literal> shows the quota in bytes."
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:494
#, no-wrap
msgid ""
"sudo btrfs qgroup show -r /"
msgstr ""

#. (itstool) path: tip/title
#: xml/storage_filesystems.xml:498
msgid "Nullifying a Quota"
msgstr ""

#. (itstool) path: tip/para
#: xml/storage_filesystems.xml:499
msgid "In case you want to nullify an existing quota, set a quota size of <literal>none</literal>:"
msgstr ""

#. (itstool) path: tip/screen
#: xml/storage_filesystems.xml:503
#, no-wrap
msgid ""
"sudo btrfs qgroup limit none /var/tmp"
msgstr ""

#. (itstool) path: tip/para
#: xml/storage_filesystems.xml:504
msgid "To disable quota support for a partition and all its subvolumes, use <command>btrfs quota disable</command>:"
msgstr ""

#. (itstool) path: tip/screen
#: xml/storage_filesystems.xml:508
#, no-wrap
msgid ""
"sudo btrfs quota disable /"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:510
msgid "See the <command>man 8 btrfs-qgroup</command> and <command>man 8 btrfs-quota</command> for more details. The <citetitle>UseCases</citetitle> page on the Btrfs wiki (<link xlink:href=\"https://btrfs.wiki.kernel.org/index.php/UseCases\"/>) also provides more information."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:520
msgid "Btrfs send/receive"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:521
msgid "Btrfs allows to make snapshots to capture the state of the file system. Snapper, for example, uses this feature to create snapshots before and after system changes, allowing a rollback. However, together with the send/receive feature, snapshots can also be used to create and maintain copies of a file system in a remote location. This feature can, for example, be used to do incremental backups."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:529
msgid "A <command>btrfs send</command> operation calculates the difference between two read-only snapshots from the same subvolume and sends it to a file or to STDOUT. A <command>Btrfs receive</command> operation takes the result of the send command and applies it to a snapshot."
msgstr ""

#. (itstool) path: sect3/title
#: xml/storage_filesystems.xml:536
msgid "Prerequisites"
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:537
msgid "To use Btrfs's send/receive feature, the following requirements need to be met:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:543
msgid "A Btrfs file system is required on the source side (<literal>send</literal>) and on the target side (<literal>receive</literal>)."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:550
msgid "Btrfs send/receive operates on snapshots, therefore the respective data needs to reside in a Btrfs subvolume."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:556
msgid "Snapshots on the source side need to be read-only."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:561
msgid "SUSE Linux Enterprise 12 SP2 or better. Earlier versions of SUSE Linux Enterprise do not support send/receive."
msgstr ""

#. (itstool) path: sect3/title
#: xml/storage_filesystems.xml:569
msgid "Incremental Backups"
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:570
msgid "The following procedure shows the basic usage of Btrfs send/receive using the example of creating incremental backups of <filename>/data</filename> (source side) in <filename>/backup/data</filename> (target side). <filename>/data</filename> needs to be a subvolume."
msgstr ""

#. (itstool) path: procedure/title
#: xml/storage_filesystems.xml:577
msgid "Initial Setup"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:579
msgid "Create the initial snapshot (called <literal>snapshot_0</literal> in this example) on the source side and make sure it is written to the disk:"
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:584
#, no-wrap
msgid ""
"sudo btrfs subvolume snapshot -r /data /data/bkp_data\n"
"sync"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:586
msgid "A new subvolume <filename>/data/bkp_data</filename> is created. It will be used as the basis for the next incremental backup and should be kept as a reference."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:593
msgid "Send the initial snapshot to the target side. Since this is the initial send/receive operation, the complete snapshot needs to be sent:"
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:597
#, no-wrap
msgid ""
"sudo bash -c 'btrfs send /data/bkp_data | btrfs receive /backup'"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:598
msgid "A new subvolume <filename>/backup/bkp_data</filename> is created on the target side."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:604
msgid "When the initial setup has been finished, you can create incremental backups and send the differences between the current and previous snapshots to the target side. The procedure is always the same:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:611
msgid "Create a new snapshot on the source side."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:616
msgid "Send the differences to the target side."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:621
msgid "Optional: Rename and/or clean up snapshots on both sides."
msgstr ""

#. (itstool) path: procedure/title
#: xml/storage_filesystems.xml:627
msgid "Performing an Incremental Backup"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:629
msgid "Create a new snapshot on the source side and make sure it is written to the disk. In the following example the snapshot is named bkp_data_<replaceable>CURRENT_DATE</replaceable>:"
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:634
#, no-wrap
msgid ""
"sudo btrfs subvolume snapshot -r /data /data/bkp_data_$(date +%F)\n"
"sync"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:636
msgid "A new subvolume, for example <filename>/data/bkp_data_2016-07-07</filename>, is created."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:642
msgid "Send the difference between the previous snapshot and the one you have created to the target side. This is achieved by specifying the previous snapshot with the option <option>-p <replaceable>SNAPSHOT</replaceable></option>."
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:648
#, no-wrap
msgid ""
"sudo bash -c 'btrfs send -p /data/bkp_data /data/bkp_data_2016-07-07 \\\n"
"| btrfs receive /backup'"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:650
msgid "A new subvolume <filename>/backup/bkp_data_2016-07-07</filename> is created."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:656
msgid "As a result four snapshots, two on each side, exist:"
msgstr ""

#. (itstool) path: simplelist/member
#: xml/storage_filesystems.xml:660
msgid "<filename>/data/bkp_data</filename>"
msgstr ""

#. (itstool) path: simplelist/member
#: xml/storage_filesystems.xml:662
msgid "<filename>/data/bkp_data_2016-07-07</filename>"
msgstr ""

#. (itstool) path: simplelist/member
#: xml/storage_filesystems.xml:664
msgid "<filename>/backup/bkp_data</filename>"
msgstr ""

#. (itstool) path: simplelist/member
#: xml/storage_filesystems.xml:666
msgid "<filename>/backup/bkp_data_2016-07-07</filename>"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:669
msgid "Now you have three options for how to proceed:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:674
msgid "Keep all snapshots on both sides. With this option you can roll back to any snapshot on both sides while having all data duplicated at the same time. No further action is required. When doing the next incremental backup, keep in mind to use the next-to-last snapshot as parent for the send operation."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:683
msgid "Only keep the last snapshot on the source side and all snapshots on the target side. Also allows to roll back to any snapshot on both sidesâ€”to do a rollback to a specific snapshot on the source side, perform a send/receive operation of a complete snapshot from the target side to the source side. Do a delete/move operation on the source side."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:693
msgid "Only keep the last snapshot on both sides. This way you have a backup on the target side that represents the state of the last snapshot made on the source side. It is not possible to roll back to other snapshots. Do a delete/move operation on the source and the target side."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:704
msgid "To only keep the last snapshot on the source side, perform the following commands:"
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:708
#, no-wrap
msgid ""
"sudo btrfs subvolume delete /data/bkp_data\n"
"sudo mv /data/bkp_data_2016-07-07 /data/bkp_data"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:710
msgid "The first command will delete the previous snapshot, the second command renames the current snapshot to <filename>/data/bkp_data</filename>. This ensures that the last snapshot that was backed up is always named <filename>/data/bkp_data</filename>. As a consequence, you can also always use this subvolume name as a parent for the incremental send operation."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:721
msgid "To only keep the last snapshot on the target side, perform the following commands:"
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:725
#, no-wrap
msgid ""
"sudo btrfs subvolume delete /backup/bkp_data\n"
"sudo mv /backup/bkp_data_2016-07-07 /backup/bkp_data"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:727
msgid "The first command will delete the previous backup snapshot, the second command renames the current backup snapshot to <filename>/backup/bkp_data</filename>. This ensures that the latest backup snapshot is always named <filename>/backup/bkp_data</filename>."
msgstr ""

#. (itstool) path: tip/title
#: xml/storage_filesystems.xml:738
msgid "Sending to a Remote Target Side"
msgstr ""

#. (itstool) path: tip/para
#: xml/storage_filesystems.xml:739
msgid "To send the snapshots to a remote machine, use SSH:"
msgstr ""

#. (itstool) path: tip/screen
#: xml/storage_filesystems.xml:742
#, no-wrap
msgid ""
"btrfs send /data/bkp_data | ssh root@jupiter.example.com 'btrfs receive /backup'"
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:748
msgid "Data Deduplication Support"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:749
msgid "Btrfs supports data deduplication by replacing identical blocks in the file system with logical links to a single copy of the block in a common storage location. <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> provides the tool <command>duperemove</command> for scanning the file system for identical blocks. When used on a Btrfs file system, it can also be used to deduplicate these blocks. <command>duperemove</command> is not installed by default. To make it available, install the package <package>duperemove</package> ."
msgstr ""

#. (itstool) path: note/title
#: xml/storage_filesystems.xml:761
msgid "Use Cases"
msgstr ""

#. (itstool) path: note/para
#: xml/storage_filesystems.xml:762
msgid "As of <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> <phrase role=\"productnumber\"><phrase os=\"osuse\">42.3</phrase><phrase os=\"sles;sled;slerte\">12 SP3</phrase></phrase> duperemove is not suited to deduplicate the entire file system. It is intended to be used to deduplicate a set of 10 to 50 large files that possibly have lots of blocks in common, such as virtual machine images."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:769
msgid "<command>duperemove</command> can either operate on a list of files or recursively scan a directory:"
msgstr ""

#. (itstool) path: sect2/screen
#: xml/storage_filesystems.xml:773
#, no-wrap
msgid ""
"sudo duperemove <replaceable>OPTIONS</replaceable> file1 file2 file3\n"
"sudo duperemove -r <replaceable>OPTIONS</replaceable> directory"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:775
msgid "It operates in two modes: read-only and de-duping. When run in read-only mode (that is without the <option>-d</option> switch), it scans the given files or directories for duplicated blocks and prints them. This works on any file system."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:781
msgid "Running <command>duperemove</command> in de-duping mode is only supported on Btrfs file systems. After having scanned the given files or directories, the duplicated blocks will be submitted for deduplication."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:786
msgid "For more information see <command>man 8 duperemove</command>."
msgstr ""

#. (itstool) path: sect1/title
#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:792
#: xml/storage_filesystems.xml:1630
msgid "XFS"
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:794
msgid "Originally intended as the file system for their IRIX OS, SGI started XFS development in the early 1990s. The idea behind XFS was to create a high-performance 64-bit journaling file system to meet extreme computing challenges. XFS is very good at manipulating large files and performs well on high-end hardware. XFS is the default file system for data partitions in <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>."
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:806
msgid "A quick review of XFSâ€™s key features explains why it might prove to be a strong competitor for other journaling file systems in high-end computing."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:812
msgid "High Scalability by Using Allocation Groups"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:813
msgid "At the creation time of an XFS file system, the block device underlying the file system is divided into eight or more linear regions of equal size. Those are called <emphasis>allocation groups</emphasis>. Each allocation group manages its own inodes and free disk space. Practically, allocation groups can be seen as file systems in a file system. Because allocation groups are rather independent of each other, more than one of them can be addressed by the kernel simultaneously. This feature is the key to XFSâ€™s great scalability. Naturally, the concept of independent allocation groups suits the needs of multiprocessor systems."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:827
msgid "High Performance through Efficient Management of Disk Space"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:828
msgid "Free space and inodes are handled by B<superscript>+</superscript> trees inside the allocation groups. The use of B<superscript>+</superscript> trees greatly contributes to XFSâ€™s performance and scalability. XFS uses <emphasis>delayed allocation</emphasis>, which handles allocation by breaking the process into two pieces. A pending transaction is stored in RAM and the appropriate amount of space is reserved. XFS still does not decide where exactly (in file system blocks) the data should be stored. This decision is delayed until the last possible moment. Some short-lived temporary data might never make its way to disk, because it is obsolete by the time XFS decides where actually to save it. In this way, XFS increases write performance and reduces file system fragmentation. Because delayed allocation results in less frequent write events than in other file systems, it is likely that data loss after a crash during a write is more severe."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:847
msgid "Preallocation to Avoid File System Fragmentation"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:848
msgid "Before writing the data to the file system, XFS <emphasis>reserves</emphasis> (preallocates) the free space needed for a file. Thus, file system fragmentation is greatly reduced. Performance is increased because the contents of a file are not distributed all over the file system."
msgstr ""

#. (itstool) path: note/title
#: xml/storage_filesystems.xml:856
msgid "The new XFS On-disk Format"
msgstr ""

#. (itstool) path: note/para
#: xml/storage_filesystems.xml:857
msgid "Starting with version 12, <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> supports the new <quote>on-disk format</quote> (v5) of the XFS file system. XFS file systems created by YaST will use this new format. The main advantages of this format are automatic checksums of all XFS metadata, file type support, and support for a larger number of access control lists for a file."
msgstr ""

#. (itstool) path: note/para
#: xml/storage_filesystems.xml:864
msgid "Note that this format is <emphasis>not</emphasis> supported by SUSE Linux Enterprise kernels older than version 3.12, by xfsprogs older than version 3.2.0, and GRUBÂ 2 versions released before SUSE Linux Enterprise 12. This will be problematic if the file system should also be used from systems not meeting these prerequisites."
msgstr ""

#. (itstool) path: note/para
#: xml/storage_filesystems.xml:871
msgid "If you require interoperability of the XFS file system with older SUSE systems or other Linux distributions, format the file system manually using the <command>mkfs.xfs</command> command. This will create an XFS file system in the old format (unless you use the <option>-m crc=1</option> option)."
msgstr ""

#. (itstool) path: sect1/title
#: xml/storage_filesystems.xml:882
msgid "Ext2"
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:884
msgid "The origins of Ext2 go back to the early days of Linux history. Its predecessor, the Extended File System, was implemented in April 1992 and integrated in Linux 0.96c. The Extended File System underwent several modifications and, as Ext2, became the most popular Linux file system for years. With the creation of journaling file systems and their short recovery times, Ext2 became less important."
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:893
msgid "A brief summary of Ext2â€™s strengths might help understand why it wasâ€”and in some areas still isâ€”the favorite Linux file system of many Linux users."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/storage_filesystems.xml:901
msgid "Solidity and Speed"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:903
msgid "Being an <quote>old-timer</quote>, Ext2 underwent many improvements and was heavily tested. This might be the reason people often refer to it as rock-solid. After a system outage when the file system could not be cleanly unmounted, e2fsck starts to analyze the file system data. Metadata is brought into a consistent state and pending files or data blocks are written to a designated directory (called <filename>lost+found</filename>). In contrast to journaling file systems, e2fsck analyzes the entire file system and not only the recently modified bits of metadata. This takes significantly longer than checking the log data of a journaling file system. Depending on file system size, this procedure can take half an hour or more. Therefore, it is not desirable to choose Ext2 for any server that needs high availability. However, because Ext2 does not maintain a journal and uses less memory, it is sometimes faster than other file systems."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/storage_filesystems.xml:922
msgid "Easy Upgradability"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:924
msgid "Because Ext3 is based on the Ext2 code and shares its on-disk format and its metadata format, upgrades from Ext2 to Ext3 are very easy."
msgstr ""

#. (itstool) path: sect1/title
#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:933
#: xml/storage_filesystems.xml:1561
msgid "Ext3"
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:935
msgid "Ext3 was designed by Stephen Tweedie. Unlike all other next-generation file systems, Ext3 does not follow a completely new design principle. It is based on Ext2. These two file systems are very closely related to each other. An Ext3 file system can be easily built on top of an Ext2 file system. The most important difference between Ext2 and Ext3 is that Ext3 supports journaling. In summary, Ext3 has three major advantages to offer:"
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:945
msgid "Easy and Highly Reliable Upgrades from Ext2"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:946
msgid "The code for Ext2 is the strong foundation on which Ext3 could become a highly acclaimed next-generation file system. Its reliability and solidity are elegantly combined in Ext3 with the advantages of a journaling file system. Unlike transitions to other journaling file systems, such as ReiserFS or XFS, which can be quite tedious (making backups of the entire file system and re-creating it from scratch), a transition to Ext3 is a matter of minutes. It is also very safe, because re-creating an entire file system from scratch might not work flawlessly. Considering the number of existing Ext2 systems that await an upgrade to a journaling file system, you can easily see why Ext3 might be of some importance to many system administrators. Downgrading from Ext3 to Ext2 is as easy as the upgrade. Perform a clean unmount of the Ext3 file system and remount it as an Ext2 file system."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:964
msgid "Reliability and Performance"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:965
msgid "Some other journaling file systems follow the <quote>metadata-only</quote> journaling approach. This means your metadata is always kept in a consistent state, but this cannot be automatically guaranteed for the file system data itself. Ext3 is designed to take care of both metadata and data. The degree of <quote>care</quote> can be customized. Enabling Ext3 in the <option>data=journal</option> mode offers maximum security (data integrity), but can slow down the system because both metadata and data are journaled. A relatively new approach is to use the <option>data=ordered</option> mode, which ensures both data and metadata integrity, but uses journaling only for metadata. The file system driver collects all data blocks that correspond to one metadata update. These data blocks are written to disk before the metadata is updated. As a result, consistency is achieved for metadata and data without sacrificing performance. A third option to use is <option>data=writeback</option>, which allows data to be written to the main file system after its metadata has been committed to the journal. This option is often considered the best in performance. It can, however, allow old data to reappear in files after crash and recovery while internal file system integrity is maintained. Ext3 uses the <option>data=ordered</option> option as the default."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:989
msgid "Converting an Ext2 File System into Ext3"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:990
msgid "To convert an Ext2 file system to Ext3:"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:995
msgid "Create an Ext3 journal by running <command>tune2fs -j</command> as the <systemitem class=\"username\">root</systemitem> user."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:999
msgid "This creates an Ext3 journal with the default parameters."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1002
msgid "To specify how large the journal should be and on which device it should reside, run <command>tune2fs</command> <option>-J</option> instead together with the desired journal options <option>size=</option> and <option>device=</option>. More information about the <command>tune2fs</command> program is available in the <command>tune2fs</command> man page."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1012
msgid "Edit the file <filename>/etc/fstab</filename> as the <systemitem class=\"username\">root</systemitem> user to change the file system type specified for the corresponding partition from <literal>ext2</literal> to <literal>ext3</literal>, then save the changes."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1018
msgid "This ensures that the Ext3 file system is recognized as such. The change takes effect after the next reboot."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1024
msgid "To boot a root file system that is set up as an Ext3 partition, add the modules <literal>ext3</literal> and <literal>jbd</literal> in the <filename>initrd</filename>. Do so by"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1031
msgid "adding the following line to <filename>/etc/dracut.conf.d/01-dist.conf</filename>:"
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:1035
#, no-wrap
msgid ""
"force_drivers+=\"ext3 jbd\""
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1038
msgid "and running the <command>dracut</command> <option>-f</option> command."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1045
msgid "Reboot the system."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:1053
msgid "Ext3 File System Inode Size and Number of Inodes"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:1054
msgid "An inode stores information about the file and its block location in the file system. To allow space in the inode for extended attributes and ACLs, the default inode size for Ext3 was increased from 128 bytes on SLES 10 to 256 bytes on SLES 11. As compared to SLES 10, when you make a new Ext3 file system on SLES 11, the default amount of space preallocated for the same number of inodes is doubled, and the usable space for files in the file system is reduced by that amount. Thus, you must use larger partitions to accommodate the same number of inodes and files than were possible for an Ext3 file system on SLES 10."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:1065
msgid "When you create a new Ext3 file system, the space in the inode table is preallocated for the total number of inodes that can be created. The bytes-per-inode ratio and the size of the file system determine how many inodes are possible. When the file system is made, an inode is created for every bytes-per-inode bytes of space:"
msgstr ""

#. (itstool) path: sect2/screen
#: xml/storage_filesystems.xml:1072
#, no-wrap
msgid ""
"number of inodes = total size of the file system divided by the number of bytes per inode"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:1073
msgid "The number of inodes controls the number of files you can have in the file system: one inode for each file. To address the increased inode size and reduced usable space available, the default for the bytes-per-inode ratio was increased from 8192 bytes on SLES 10 to 16384 bytes on SLES 11. The doubled ratio means that the number of files that can be created is one-half of the number of files possible for an Ext3 file system on SLES 10."
msgstr ""

#. (itstool) path: important/title
#: xml/storage_filesystems.xml:1083
msgid "Changing the Inode Size of an Existing Ext3 File System"
msgstr ""

#. (itstool) path: important/para
#: xml/storage_filesystems.xml:1084
msgid "After the inodes are allocated, you cannot change the settings for the inode size or bytes-per-inode ratio. No new inodes are possible without re-creating the file system with different settings, or unless the file system gets extended. When you exceed the maximum number of inodes, no new files can be created on the file system until some files are deleted."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:1092
msgid "When you make a new Ext3 file system, you can specify the inode size and bytes-per-inode ratio to control inode space usage and the number of files possible on the file system. If the blocks size, inode size, and bytes-per-inode ratio values are not specified, the default values in the <filename>/etc/mked2fs.conf</filename> file are applied. For information, see the <filename>mke2fs.conf(5)</filename> man page."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:1100
msgid "Use the following guidelines:"
msgstr ""

#. (itstool) path: formalpara/title
#: xml/storage_filesystems.xml:1106
msgid "Inode size:"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/storage_filesystems.xml:1107
msgid "The default inode size is 256 bytes. Specify a value in bytes that is a power of 2 and equal to 128 or larger in bytes and up to the block size, such as 128, 256, 512, and so on. Use 128 bytes only if you do not use extended attributes or ACLs on your Ext3 file systems."
msgstr ""

#. (itstool) path: formalpara/title
#: xml/storage_filesystems.xml:1117
msgid "Bytes-per-inode ratio:"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/storage_filesystems.xml:1118
msgid "The default bytes-per-inode ratio is 16384 bytes. Valid bytes-per-inode ratio values must be a power of 2 equal to 1024 or greater in bytes, such as 1024, 2048, 4096, 8192, 16384, 32768, and so on. This value should not be smaller than the block size of the file system, because the block size is the smallest chunk of space used to store data. The default block size for the Ext3 file system is 4 KB."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:1127
msgid "In addition, you should consider the number of files and the size of files you need to store. For example, if your file system will have many small files, you can specify a smaller bytes-per-inode ratio, which increases the number of inodes. If your file system will have very large files, you can specify a larger bytes-per-inode ratio, which reduces the number of possible inodes."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:1135
msgid "Generally, it is better to have too many inodes than to run out of them. If you have too few inodes and very small files, you could reach the maximum number of files on a disk that is practically empty. If you have too many inodes and very large files, you might have free space reported but be unable to use it because you cannot create new files in space reserved for inodes."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:1145
msgid "If you do not use extended attributes or ACLs on your Ext3 file systems, you can restore the SLES 10 behavior specifying 128 bytes as the inode size and 8192 bytes as the bytes-per-inode ratio when you make the file system. Use any of the following methods to set the inode size and bytes-per-inode ratio:"
msgstr ""

#. (itstool) path: formalpara/title
#: xml/storage_filesystems.xml:1155
msgid "Modifying the default settings for all new Ext3 files:"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/storage_filesystems.xml:1156
msgid "In a text editor, modify the <literal>defaults</literal> section of the <filename>/etc/mke2fs.conf</filename> file to set the <literal>inode_size</literal> and <literal>inode_ratio</literal> to the desired default values. The values apply to all new Ext3 file systems. For example:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/storage_filesystems.xml:1164
#, no-wrap
msgid ""
"blocksize = 4096\n"
"inode_size = 128\n"
"inode_ratio = 8192"
msgstr ""

#. (itstool) path: formalpara/title
#: xml/storage_filesystems.xml:1170
msgid "At the command line:"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/storage_filesystems.xml:1171
msgid "Pass the inode size (<literal>-I 128</literal>) and the bytes-per-inode ratio (<literal>-i 8192</literal>) to the <command>mkfs.ext3(8)</command> command or the <command>mke2fs(8)</command> command when you create a new Ext3 file system. For example, use either of the following commands:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/storage_filesystems.xml:1179
#, no-wrap
msgid ""
"sudo mkfs.ext3 -b 4096 -i 8092 -I 128 /dev/sda2\n"
"sudo mke2fs -t ext3 -b 4096 -i 8192 -I 128 /dev/sda2"
msgstr ""

#. (itstool) path: formalpara/title
#: xml/storage_filesystems.xml:1184
msgid "During installation with YaST:"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/storage_filesystems.xml:1185
msgid "Pass the inode size and bytes-per-inode ratio values when you create a new Ext3 file system during the installation. In the YaST Partitioner on the <guimenu>Edit Partition</guimenu> page under<guimenu> Formatting Options</guimenu>, select <guimenu>Format partition</guimenu><guimenu>Ext3</guimenu>, then click <guimenu>Options</guimenu>. In the <guimenu>File system options</guimenu> dialog, select the desired values from the <guimenu>Block Size in Bytes</guimenu>, <guimenu>Bytes-per-inode</guimenu>, and <guimenu>Inode Size</guimenu> drop-down box."
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:1198
msgid "For example, select 4096 for the <guimenu>Block Size in Bytes</guimenu> drop-down box, select 8192 from the <guimenu>Bytes per inode</guimenu> drop-down box, select 128 from the <guimenu>Inode Size</guimenu> drop-down box, then click <guimenu>OK</guimenu>."
msgstr ""

#. (itstool) path: imageobject/imagedata
#. This is a reference to an external file such as an image or video. When
#. the file changes, the md5 hash will change to let you know you need to
#. update your localized copy. The msgstr is not used at all. Set it to
#. whatever you like once you have updated your copy of the file.
#: xml/storage_filesystems.xml:1207
#: xml/storage_filesystems.xml:1210
msgctxt "_"
msgid "external ref='ext3_inode_yast_a.png' md5='__failed__'"
msgstr ""

#. (itstool) path: formalpara/title
#: xml/storage_filesystems.xml:1217
msgid "During installation with AutoYaST:"
msgstr ""

#. (itstool) path: formalpara/para
#: xml/storage_filesystems.xml:1218
msgid "In an AutoYaST profile, you can use the <literal>fs_options </literal>tag to set the <literal>opt_bytes_per_inode</literal> ratio value of 8192 for -i and the <literal>opt_inode_density</literal> value of 128 for -I:"
msgstr ""

#. (itstool) path: listitem/screen
#: xml/storage_filesystems.xml:1224
#, no-wrap
msgid ""
"\n"
"&lt;partitioning config:type=\"list\"&gt;\n"
"  &lt;drive&gt;\n"
"    &lt;device&gt;/dev/sda&lt;/device&gt;\n"
"    &lt;initialize config:type=\"boolean\"&gt;true&lt;/initialize&gt;\n"
"    &lt;partitions config:type=\"list\"&gt;\n"
"      &lt;partition&gt;\n"
"        &lt;filesystem config:type=\"symbol\"&gt;ext3&lt;/filesystem&gt;\n"
"        &lt;format config:type=\"boolean\"&gt;true&lt;/format&gt;\n"
"        &lt;fs_options&gt;\n"
"          &lt;opt_bytes_per_inode&gt;\n"
"            &lt;option_str&gt;-i&lt;/option_str&gt;\n"
"            &lt;option_value&gt;8192&lt;/option_value&gt;\n"
"          &lt;/opt_bytes_per_inode&gt;\n"
"          &lt;opt_inode_density&gt;\n"
"            &lt;option_str&gt;-I&lt;/option_str&gt;\n"
"            &lt;option_value&gt;128&lt;/option_value&gt;\n"
"          &lt;/opt_inode_density&gt;\n"
"        &lt;/fs_options&gt;\n"
"        &lt;mount&gt;/&lt;/mount&gt;\n"
"        &lt;partition_id config:type=\"integer\"&gt;131&lt;/partition_id&gt;\n"
"        &lt;partition_type&gt;primary&lt;/partition_type&gt;\n"
"        &lt;size&gt;25G&lt;/size&gt;\n"
"      &lt;/partition&gt;\n"
"    &lt;/partitions&gt;\n"
"  &lt;/drive&gt;\n"
"&lt;partitioning&gt;"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:1253
msgid "For information, see <link xlink:href=\"http://www.suse.com/support/kb/doc.php?id=7009075\"/> (<citetitle>SLES11 ext3 partitions can only store 50% of the files that can be stored on SLES10</citetitle> [Technical Information Document 7009075])."
msgstr ""

#. (itstool) path: sect1/title
#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1262
#: xml/storage_filesystems.xml:1578
msgid "Ext4"
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:1264
msgid "In 2006, Ext4 started as a fork from Ext3. It eliminates some storage limitations of Ext3 by supporting volumes with a size of up to 1 exbibyte, files with a size of up to 16 tebibytes and an unlimited number of subdirectories. It also introduces several performance enhancements such as delayed block allocation and a much faster file system checking routine. Ext4 is also more reliable by supporting journal checksums and by providing time stamps measured in nanoseconds. Ext4 is fully backward compatible to Ext2 and Ext3â€”both file systems can be mounted as Ext4."
msgstr ""

#. (itstool) path: sect1/title
#: xml/storage_filesystems.xml:1276
msgid "ReiserFS"
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:1278
msgid "Officially one of the key features of the 2.4 kernel release, ReiserFS has been available as a kernel patch for 2.2.x SUSE kernels since version 6.4. ReiserFS was designed by Hans Reiser and the Namesys development team. It has proven itself to be a powerful alternative to Ext2. Its key assets are better disk space usage, better disk access performance, faster crash recovery, and reliability through data journaling."
msgstr ""

#. (itstool) path: important/title
#: xml/storage_filesystems.xml:1288
msgid "Support of ReiserFS in <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> 12"
msgstr ""

#. (itstool) path: important/para
#: xml/storage_filesystems.xml:1289
msgid "Existing ReiserFS partitions are supported for the lifetime of <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> 12 specifically for migration purposes. Support for creating new ReiserFS file systems has been removed starting with <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> 12."
msgstr ""

#. (itstool) path: sect1/title
#: xml/storage_filesystems.xml:1297
msgid "Other Supported File Systems"
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:1299
msgid "<xref linkend=\"tab.filesystems.other\" xrefstyle=\"TableXRef\"/> summarizes some other file systems supported by Linux. They are supported mainly to ensure compatibility and interchange of data with different kinds of media or foreign operating systems."
msgstr ""

#. (itstool) path: table/title
#: xml/storage_filesystems.xml:1307
msgid "File System Types in Linux"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1314
msgid "File System Type"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1319
msgid "Description"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1328
msgid "<systemitem>cramfs</systemitem>"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1333
msgid "Compressed ROM file system: A compressed read-only file system for ROMs."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1341
msgid "<systemitem>hpfs</systemitem>"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1346
msgid "High Performance File System: The IBM OS/2 standard file system. Only supported in read-only mode."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1354
msgid "<systemitem>iso9660</systemitem>"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1359
msgid "Standard file system on CD-ROMs."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1366
msgid "<systemitem>minix</systemitem>"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1371
msgid "This file system originated from academic projects on operating systems and was the first file system used in Linux. Today, it is used as a file system for floppy disks."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1380
msgid "<systemitem>msdos</systemitem>"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1385
msgid "<filename>fat</filename>, the file system originally used by DOS, is today used by various operating systems."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1393
msgid "<systemitem>nfs</systemitem>"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1398
msgid "Network File System: Here, data can be stored on any machine in a network and access might be granted via a network."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1406
msgid "<systemitem>ntfs</systemitem>"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1411
msgid "WindowsÂ NT file system; read-only."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1418
msgid "<systemitem>smbfs</systemitem>"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1423
msgid "Server Message Block is used by products such as Windows to enable file access over a network."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1431
msgid "<systemitem>sysv</systemitem>"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1436
msgid "Used on SCO Unix, Xenix, and Coherent (commercial Unix systems for PCs)."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1444
msgid "<systemitem>ufs</systemitem>"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1449
msgid "Used by BSD, SunOS, and NextStep. Only supported in read-only mode."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1456
msgid "<systemitem>umsdos</systemitem>"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1461
msgid "Unix on MS-DOS: Applied on top of a standard <filename>fat</filename> file system, achieves Unix functionality (permissions, links, long file names) by creating special files."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1470
msgid "<systemitem>vfat</systemitem>"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1475
msgid "Virtual FAT: Extension of the <literal>fat</literal> file system (supports long file names)."
msgstr ""

#. (itstool) path: sect1/title
#: xml/storage_filesystems.xml:1486
msgid "Large File Support in Linux"
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:1488
msgid "Originally, Linux supported a maximum file size of 2Â GiB (2<superscript>31</superscript> bytes). Unless a file system comes with large file support, the maximum file size on a 32-bit system is 2 GiB."
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:1494
msgid "Currently, all of our standard file systems have LFS (large file support), which gives a maximum file size of 2<superscript>63</superscript> bytes in theory. <xref linkend=\"tab.filesystems.maxsize\" xrefstyle=\"TableXRef\"/> offers an overview of the current on-disk format limitations of Linux files and file systems. The numbers in the table assume that the file systems are using 4 KiB block size, which is a common standard. When using different block sizes, the results are different. The maximum file sizes in <xref linkend=\"tab.filesystems.maxsize\" xrefstyle=\"TableXRef\"/> can be larger than the file system's actual size when using sparse blocks."
msgstr ""

#. (itstool) path: note/title
#: xml/storage_filesystems.xml:1507
msgid "Binary Multiples"
msgstr ""

#. (itstool) path: note/para
#: xml/storage_filesystems.xml:1508
msgid "In this document: 1024 Bytes = 1 KiB; 1024 KiB = 1 MiB; 1024 MiB = 1 GiB; 1024 GiB = 1 TiB; 1024 TiB = 1 PiB; 1024 PiB = 1 EiB (see also <link xlink:href=\"http://physics.nist.gov/cuu/Units/binary.html\"><citetitle>NIST: Prefixes for Binary Multiples</citetitle></link>."
msgstr ""

#. (itstool) path: table/title
#: xml/storage_filesystems.xml:1517
msgid "Maximum Sizes of Files and File Systems (On-Disk Format, 4 KiB Block Size)"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1525
msgid "File System (4 KiB Block Size)"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1530
msgid "Maximum File System Size"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1535
msgid "Maximum File Size"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1549
#: xml/storage_filesystems.xml:1554
msgid "16 EiB"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1566
#: xml/storage_filesystems.xml:1588
#: xml/storage_filesystems.xml:1601
#: xml/storage_filesystems.xml:1618
msgid "16 TiB"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1571
msgid "2 TiB"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1583
#: xml/storage_filesystems.xml:1606
#: xml/storage_filesystems.xml:1623
msgid "1 EiB"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1595
msgid "OCFS2 (a cluster-aware file system available in the High Availability Extension)"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1613
msgid "ReiserFS v3.6"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1635
#: xml/storage_filesystems.xml:1640
#: xml/storage_filesystems.xml:1652
#: xml/storage_filesystems.xml:1669
#: xml/storage_filesystems.xml:1674
msgid "8 EiB"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1647
msgid "NFSv2 (client side)"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1657
msgid "2 GiB"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1664
msgid "NFSv3/NFSv4 (client side)"
msgstr ""

#. (itstool) path: important/title
#: xml/storage_filesystems.xml:1684
msgid "Limitations"
msgstr ""

#. (itstool) path: important/para
#: xml/storage_filesystems.xml:1685
msgid "<xref linkend=\"tab.filesystems.maxsize\" xrefstyle=\"TableXRef\"/> describes the limitations regarding the on-disk format. The Linux kernel imposes its own limits on the size of files and file systems handled by it. These are as follows:"
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/storage_filesystems.xml:1693
msgid "File Size"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:1695
msgid "On 32-bit systems, files cannot exceed 2 TiB (2<superscript>41</superscript> bytes)."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/storage_filesystems.xml:1702
msgid "File System Size"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:1704
msgid "File systems can be up to 2<superscript>73</superscript> bytes in size. However, this limit is still out of reach for the currently available hardware."
msgstr ""

#. (itstool) path: sect1/title
#: xml/storage_filesystems.xml:1715
msgid "Linux Kernel Storage Limitations"
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:1717
msgid "<xref linkend=\"tab.filesystems.stor_limits\" xrefstyle=\"TableXRef\"/> summarizes the kernel limits for storage associated with <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>."
msgstr ""

#. (itstool) path: table/title
#: xml/storage_filesystems.xml:1723
msgid "Storage Limitations"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1730
msgid "Storage Feature"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1735
msgid "Limitation"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1744
msgid "Maximum number of LUNs supported"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1749
msgid "16384 LUNs per target."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1756
msgid "Maximum number of paths per single LUN"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1761
msgid "No limit by default. Each path is treated as a normal LUN."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1764
msgid "The actual limit is given by the number of LUNs per target and the number of targets per HBA (16777215 for a Fibre Channel HBA)."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1772
msgid "Maximum number of HBAs"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1777
msgid "Unlimited. The actual limit is determined by the amount of PCI slots of the system."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1785
msgid "Maximum number of paths with device-mapper-multipath (in total) per operating system"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1791
msgid "Approximately 1024. The actual number depends on the length of the device number strings. It is a compile-time variable within multipath-tools, which can be raised if this limit poses a problem."
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1800
msgid "Maximum size per block device"
msgstr ""

#. (itstool) path: entry/para
#: xml/storage_filesystems.xml:1805
msgid "Up to 8 EiB."
msgstr ""

#. (itstool) path: sect1/title
#: xml/storage_filesystems.xml:1815
msgid "Troubleshooting File Systems"
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:1817
msgid "This section describes some known issues and possible solutions for file systems."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:1823
msgid "Btrfs Error: No space is left on device"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:1824
msgid "The root (<filename>/</filename>) partition using the Btrfs file system stops accepting data. You receive the error <quote><literal>No space left on device</literal></quote>."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:1829
msgid "See the following sections for information about possible causes and prevention of this issue."
msgstr ""

#. (itstool) path: sect3/title
#: xml/storage_filesystems.xml:1834
msgid "Disk Space Consumed by Snapper Snapshots"
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:1835
msgid "If Snapper is running for the Btrfs file system, the <quote><literal>No space left on device</literal></quote> problem is typically caused by having too much data stored as snapshots on your system."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:1840
msgid "You can remove some snapshots from Snapper, however, the snapshots are not deleted immediately and might not free up as much space as you need."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:1844
msgid "To delete files from Snapper:"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1849
msgid "Open a terminal console."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1854
msgid "At the command prompt, enter <command>btrfs filesystem show</command>, for example:"
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:1858
#, no-wrap
msgid ""
"<prompt>tux &gt; </prompt>sudo btrfs filesystem show\n"
"Label: none uuid: 40123456-cb2c-4678-8b3d-d014d1c78c78\n"
" Total devices 1 FS bytes used 20.00GB\n"
" devid 1 size 20.00GB used 20.00GB path /dev/sda3"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1864
msgid "Enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:1867
#, no-wrap
msgid ""
"sudo btrfs fi balance start <replaceable>MOUNTPOINT</replaceable> -dusage=5"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1868
msgid "This command attempts to relocate data in empty or near-empty data chunks, allowing the space to be reclaimed and reassigned to metadata. This can take a while (many hours for 1 TB) although the system is otherwise usable during this time."
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1876
msgid "List the snapshots in Snapper. Enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:1879
#, no-wrap
msgid ""
"sudo snapper -c root list"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1882
msgid "Delete one or more snapshots from Snapper. Enter"
msgstr ""

#. (itstool) path: step/screen
#: xml/storage_filesystems.xml:1885
#, no-wrap
msgid ""
"sudo snapper -c root delete <replaceable>SNAPSHOT_NUMBER(S)</replaceable>"
msgstr ""

#. (itstool) path: step/para
#: xml/storage_filesystems.xml:1886
msgid "Ensure that you delete the oldest snapshots first. The older a snapshot is, the more disk space it occupies."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:1892
msgid "To help prevent this problem, you can change the Snapper cleanup algorithms. See <xref linkend=\"sec.snapper.manage.metadata.cleanup\"/> for details. The configuration values controlling snapshot cleanup are <envar>EMPTY_*</envar>, <envar>NUMBER_*</envar>, and <envar>TIMELINE_*</envar>."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:1899
msgid "If you use Snapper with Btrfs on the file system disk, it is advisable to reserve twice the amount of disk space than the standard storage proposal. The YaST Partitioner automatically proposes twice the standard disk space in the Btrfs storage proposal for the root file system."
msgstr ""

#. (itstool) path: sect3/title
#: xml/storage_filesystems.xml:1907
msgid "Disk Space Consumed by Log, Crash, and Cache Files"
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:1908
msgid "If the system disk is filling up with data, you can try deleting files from <filename>/var/log</filename>, <filename>/var/crash</filename>, <filename>/var/lib/systemd/coredump</filename> and <filename>/var/cache</filename>."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:1914
msgid "The Btrfs <systemitem class=\"username\">root</systemitem> file system subvolumes <filename>/var/log</filename>, <filename>/var/crash</filename> and <filename>/var/cache</filename> can use all of the available disk space during normal operation, and cause a system malfunction. To help avoid this situation, <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> offers Btrfs quota support for subvolumes. See <xref linkend=\"sec.filesystems.major.btrfs.quota\"/> for details."
msgstr ""

#. (itstool) path: sect3/para
#: xml/storage_filesystems.xml:1922
msgid "On test and development machines, especially if you have frequent crashes of applications, you may also want to have a look at <filename>/var/lib/systemd/coredump</filename> where the coredumps are stored."
msgstr ""

#. (itstool) path: sect2/title
#: xml/storage_filesystems.xml:1932
msgid "Freeing Unused File System Blocks"
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:1933
msgid "On solid-state drives (SSDs) and thinly provisioned volumes it is useful to trim blocks not in use by the file system. <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> fully supports <literal>unmap</literal> or <literal>trim</literal> operations on all file systems supporting these methods."
msgstr ""

#. (itstool) path: sect2/para
#: xml/storage_filesystems.xml:1939
msgid "The recommended way to trim a supported file system on <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> is to run <command>/sbin/wiper.sh</command>. Make sure to read <filename>/usr/share/doc/packages/hdparm/README.wiper</filename> before running this script. For most desktop and server systems the sufficient trimming frequency is once a week. Mounting a file system with <option>-o discard</option> comes with a performance penalty and may negatively affect the lifetime of SSDs and is not recommended."
msgstr ""

#. (itstool) path: sect1/title
#: xml/storage_filesystems.xml:1951
msgid "Additional Information"
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:1953
msgid "Each of the file system projects described above maintains its own home page on which to find mailing list information, further documentation, and FAQs:"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:1960
msgid "The Btrfs Wiki on Kernel.org: <link xlink:href=\"https://btrfs.wiki.kernel.org/\"/>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:1966
msgid "E2fsprogs: Ext2/3/4 File System Utilities: <link xlink:href=\"http://e2fsprogs.sourceforge.net/\"/>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:1972
msgid "Introducing Ext3: <link xlink:href=\"http://www.ibm.com/developerworks/linux/library/l-fs7/\"/>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:1978
msgid "XFS: A High-Performance Journaling File System: <link xlink:href=\"http://oss.sgi.com/projects/xfs/\"/>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/storage_filesystems.xml:1984
msgid "The OCFS2 Project: <link xlink:href=\"http://oss.oracle.com/projects/ocfs2/\"/>"
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:1991
msgid "A comprehensive multi-part tutorial about Linux file systems can be found at IBMÂ developerWorks in the <citetitle>Advanced File System Implementorâ€™s Guide</citetitle> (<link xlink:href=\"https://www.ibm.com/developerworks/linux/library/l-fs/\"/>)."
msgstr ""

#. (itstool) path: sect1/para
#: xml/storage_filesystems.xml:1998
msgid "An in-depth comparison of file systems (not only Linux file systems) is available from the Wikipedia project in Comparison of File Systems (<link xlink:href=\"http://en.wikipedia.org/wiki/Comparison_of_file_systems#Comparison\"/>)."
msgstr ""

