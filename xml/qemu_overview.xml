<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-qemu-overview">
  <title>&qemu; overview</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker></dm:bugtracker>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>
  <para>
    &qemu; is a fast, cross-platform open source machine emulator which can
    emulate many hardware architectures. &qemu; lets you run a complete
    unmodified operating system (&vmguest;) on top of your existing system
    (&vmhost;). You can also use &qemu; for debugging purposes&mdash;you can
    easily stop your running virtual machine, inspect its state, and save and
    restore it later.
  </para>
  <para>
    &qemu; mainly consists of the following parts:
  </para>
  <itemizedlist mark="bullet" spacing="normal">
    <listitem>
      <para>
        Processor emulator.
      </para>
    </listitem>
    <listitem>
      <para>
        Emulated devices, such as graphic card, network card, hard disks, or
        mouse.
      </para>
    </listitem>
    <listitem>
      <para>
        Generic devices used to connect the emulated devices to the related
        host devices.
      </para>
    </listitem>
    <listitem>
      <para>
        Debugger.
      </para>
    </listitem>
    <listitem>
      <para>
        User interface used to interact with the emulator.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    &qemu; is central to &kvm; and &xen; Virtualization, where it provides the
    general machine emulation. &xen;'s usage of &qemu; is partially hidden from
    the user, while &kvm;'s usage exposes most &qemu; features transparently.
    If the &vmguest; hardware architecture is the same as the &vmhost;'s
    architecture, &qemu; can use the &kvm; acceleration (&suse; only supports
    &qemu; with the &kvm; acceleration loaded).
  </para>
  <para>
    Apart from providing a core virtualization infrastructure and
    processor-specific drivers, &qemu; also provides an architecture-specific
    user space program for managing &vmguest;s. Depending on the architecture
    this program is one of:
  </para>
  <itemizedlist mark="bullet" spacing="normal">
    <listitem>
      <para>
        <command>qemu-system-i386</command>
      </para>
    </listitem>
    <listitem>
      <para>
        <command>qemu-system-s390x</command>
      </para>
    </listitem>
    <listitem>
      <para>
        <command>qemu-system-x86_64</command>
      </para>
    </listitem>
    <listitem>
      <para>
        <command>qemu-system-aarch64</command>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    In the following this command is called &qemusystemarch;; in examples the
    <command>qemu-system-x86_64</command> command is used.
  </para>
</chapter>
