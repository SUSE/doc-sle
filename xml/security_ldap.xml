<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.security.ldap">
 <title>LDAP&mdash;A Directory Service</title>
 <info>
      <abstract>
        <para>
    The Lightweight Directory Access Protocol (LDAP) is a set of protocols
    designed to access and maintain information directories. LDAP can be
    used for user and group management, system configuration management,
    address management, and more. This chapter provides a basic
    understanding of how LDAP works.
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
    </info>

 <para>
  In a network environment, it is crucial to keep important information
  structured and to serve it quickly. A directory service keeps information
  available in a well-structured and searchable form.
 </para>
 <para>
  Ideally, a central server stores the data in a directory and distributes
  it to all clients using a well-defined protocol. The structured data allow
  a wide range of applications to access them. A central repository reduces
  the necessary administrative effort. The use of an open and standardized
  protocol like LDAP ensures that as many client applications as
  possible can access such information.
 </para>
 <para>
  A directory in this context is a type of database optimized for quick and
  effective reading and searching:
 </para>
 <itemizedlist mark="bullet" spacing="normal">
  <listitem>
   <remark condition="clarity">
    2011-02-18 - fs: the number is limited? and why limit reads?
   </remark>
   <para>
    To make multiple concurrent reading accesses possible, the number of
    updates is usually very low. The number of read and write accesses is
    often limited to a few users with administrative privileges. In
    contrast, conventional databases are optimized for accepting the largest
    possible data volume in a short time.
   </para>
  </listitem>
  <listitem>
   <para>
    When static data is administered, updates of the existing data sets are
    very rare. When working with dynamic data, especially when data sets
    like bank accounts or accounting are concerned, the consistency of the
    data is of primary importance. If an amount should be subtracted from
    one place to be added to another, both operations must happen
    concurrently, within one <emphasis>transaction</emphasis>, to ensure
    balance over the data stock. Traditional relational databases usually
    have a very strong focus on data consistency, such as the referential
    integrity support of transactions. Conversely, short-term
    inconsistencies are usually acceptable in LDAP directories. LDAP
    directories often do not have the same strong consistency requirements
    as relational databases.
   </para>
  </listitem>
 </itemizedlist>
 <para>
  The design of a directory service like LDAP is not laid out to support
  complex update or query mechanisms. All applications are guaranteed to
  access this service quickly and easily.
 </para>


  <para>
   Unlike NIS, the LDAP service is not restricted to pure Unix networks.
   Windows&trade; servers support LDAP as a directory service.
  </para>

 <sect1 xml:id="sec.security.ldap.tree">
  <title>Structure of an LDAP Directory Tree</title>
<!--
  taroth 2019-02-27: acc. to wbrown the content of this section is still correct,
  but the section should be revised in the future - for input, see
  https://fy.blackhats.net.au/blog/html/pages/ldap_guide_part_1_foundations.html
-->
  <para>
   To get background knowledge on how an LDAP server works and how the data
   is stored, it is vital to understand the way the data is organized on the
   server and how this structure enables LDAP to provide fast access to the
   data. To successfully operate an LDAP setup, you also need to be familiar
   with some basic LDAP terminology. This section introduces the basic
   layout of an LDAP directory tree and provides the basic terminology used
   with regard to LDAP. Skip this introductory section if you already have
   some LDAP background knowledge and only want to learn how to set up an
   LDAP environment in &productname;.
  </para>

  <para>
   An LDAP directory has a tree structure. All entries (called objects) of
   the directory have a defined position within this hierarchy. This
   hierarchy is called the <emphasis>directory information tree</emphasis>
   (DIT). The complete path to the desired entry, which unambiguously
   identifies it, is called the <emphasis>distinguished name</emphasis> or
   DN. A single node along the path to this entry is called
   <emphasis>relative distinguished name</emphasis> or RDN.
  </para>

  <para>
   The relations within an LDAP directory tree become more evident in the
   following example, shown in <xref linkend="fig.ldap.tree"/>.
  </para>

  <figure xml:id="fig.ldap.tree">
   <title>Structure of an LDAP Directory</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ldap_tree.svg" width="85%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ldap_tree.png" width="85%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   The complete diagram is a fictional directory information tree. The
   entries on three levels are depicted. Each entry corresponds to one box
   in the image. The complete, valid <emphasis>distinguished name</emphasis>
   for the fictional employee <systemitem class="username">Geeko
   Linux</systemitem>, in this case, is <literal>cn=Geeko
   Linux,ou=doc,dc=example,dc=com</literal>. It is composed by adding the
   RDN <literal>cn=Geeko Linux</literal> to the DN of the preceding entry
   <literal>ou=doc,dc=example,dc=com</literal>.
  </para>

<!-- ke: yes, these things are called "Schema" -->

  <para>
   The types of objects that can be stored in the DIT are globally
   determined following a <emphasis>Schema</emphasis>. The type of an object
   is determined by the <emphasis>object class</emphasis>. The object class
   determines what attributes the relevant object must or can be assigned.
   The Schema, therefore, must contain definitions of all object classes and
   attributes used in the desired application scenario. There are a few
   common Schemas (see RFC 2252 and 2256). The LDAP RFC defines a few
   commonly used Schemas (see for example, RFC4519). Additionally, Schemas
   are available for many other use cases (for example, Samba or NIS
   replacement). It is, however, possible to create custom Schemas or to use
   multiple Schemas complementing each other (if this is required by the
   environment in which the LDAP server should operate).
  </para>

  <para>
   <xref linkend="tab.ldap.schema"/> offers a small overview of the object
   classes from <filename>core.schema</filename> and
   <filename>inetorgperson.schema</filename> used in the example, including
   required attributes (Req. Attr.) and valid attribute values.
<!-- intro abbrev "Req. Attr." too shorten the table header -->
  </para>

  <table xml:id="tab.ldap.schema">
   <title>Commonly Used Object Classes and Attributes</title>
   <tgroup cols="4">
    <colspec colname="c1" colwidth="30*"/>
    <colspec colname="c2" colwidth="40*"/>
    <colspec colname="c3" colwidth="16*"/>
    <colspec colname="c4" colwidth="14*"/>
    <thead>
     <row>
      <entry>
       <para>
        Object Class
       </para>
      </entry>
      <entry>
       <para>
        Meaning
       </para>
      </entry>
      <entry>
       <para>
        Example Entry
       </para>
      </entry>
      <entry>
       <para>
        Req. Attr.
       </para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>
        <literal>dcObject</literal>
       </para>
      </entry>
      <entry>
       <para>
        <emphasis>domainComponent</emphasis> (name components of the domain)
       </para>
      </entry>
      <entry>
       <para>
        example
       </para>
      </entry>
      <entry>
       <para>
        dc
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <literal>organizationalUnit</literal>
       </para>
      </entry>
      <entry>
       <para>
        <emphasis>organizationalUnit</emphasis> (organizational unit)
       </para>
      </entry>
      <entry>
       <para>
        doc
       </para>
      </entry>
      <entry>
       <para>
        ou
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <literal>inetOrgPerson</literal>
       </para>
      </entry>
      <entry>
       <para>
        <emphasis>inetOrgPerson</emphasis> (person-related data for the
        intranet or Internet)
       </para>
      </entry>
      <entry>
       <para>
        Geeko Linux
       </para>
      </entry>
      <entry>
       <para>
        sn and cn
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   <xref linkend="aus.ldap.schema.help"/> shows an excerpt from a Schema
   directive with explanations.
  </para>

  <example xml:id="aus.ldap.schema.help">
   <title>Excerpt from schema.core</title>
<screen>attributetype (2.5.4.11 NAME ( 'ou' 'organizationalUnitName') <co xml:id="co.ldap.schema.core.att_type"/>
       DESC 'RFC2256: organizational unit this object belongs to' <co xml:id="co.ldap.schema.core.desc"/>
       SUP name ) <co xml:id="co.ldap.schema.core.sup"/>

objectclass ( 2.5.6.5 NAME 'organizationalUnit' <co xml:id="co.ldap.schema.core.oc"/>
       DESC 'RFC2256: an organizational unit' <co xml:id="co.ldap.schema.core.desc.oc"/>
       SUP top STRUCTURAL <co xml:id="co.ldap.schema.core.sup.oc"/>
       MUST ou <co xml:id="co.ldap.schema.core.must.oc"/>
MAY (userPassword $ searchGuide $ seeAlso $ businessCategory <co xml:id="co.ldap.schema.core.may.oc"/>
  $ x121Address $ registeredAddress $ destinationIndicator
  $ preferredDeliveryMethod $ telexNumber
  $ teletexTerminalIdentifier $ telephoneNumber
  $ internationaliSDNNumber $ facsimileTelephoneNumber
  $ street $ postOfficeBox $ postalCode $ postalAddress
  $ physicalDeliveryOfficeName
  $ st $ l $ description) )
  ...</screen>
  </example>

  <para>
   The attribute type <literal>organizationalUnitName</literal> and the
   corresponding object class <literal>organizationalUnit</literal> serve as
   an example here.
  </para>

  <calloutlist>
   <callout arearefs="co.ldap.schema.core.att_type">
    <para>
     The name of the attribute, its unique OID (<emphasis>object
     identifier</emphasis>) (numerical), and the abbreviation of the
     attribute.
    </para>
   </callout>
   <callout arearefs="co.ldap.schema.core.desc">
    <para>
     A brief description of the attribute with <literal>DESC</literal>. The
     corresponding RFC, on which the definition is based, is also mentioned
     here.
    </para>
   </callout>
   <callout arearefs="co.ldap.schema.core.sup">
    <para>
     <literal>SUP</literal> indicates a superordinate attribute type to
     which this attribute belongs.
    </para>
   </callout>
   <callout arearefs="co.ldap.schema.core.oc">
    <para>
     The definition of the object class
     <literal>organizationalUnit</literal> begins&mdash;the same as in
     the definition of the attribute&mdash;with an OID and the name of
     the object class.
    </para>
   </callout>
   <callout arearefs="co.ldap.schema.core.desc.oc">
    <para>
     A brief description of the object class.
    </para>
   </callout>
   <callout arearefs="co.ldap.schema.core.sup.oc">
    <para>
     The <literal>SUP top</literal> entry indicates that this object class
     is not subordinate to another object class.
    </para>
   </callout>
   <callout arearefs="co.ldap.schema.core.must.oc">
    <para>
     With <literal>MUST</literal> list all attribute types that must be used
     with an object of the type
     <literal>organizationalUnit</literal>.
    </para>
   </callout>
   <callout arearefs="co.ldap.schema.core.may.oc">
    <para>
     With <literal>MAY</literal> list all attribute types that are permitted
     with this object class.
    </para>
   </callout>
  </calloutlist>
 </sect1>

 <sect1 xml:id="sec.security.ldap.server" os="sles;osuse">
  <title>Manually Configuring a &ds389;</title>
  <para>
   <remark>taroth 2019-02-25: ToDo: add some introductory blurb</remark>
  </para>
  <para>
   The &ds389; is controlled by 3 primary commands:
  </para>
  <variablelist>
   <varlistentry>
    <term><command>dsctl</command></term>
    <listitem>
     <para>
      Manages a local instance and requires &rootuser; permissions. Requires you
      to be connected to a terminal which is running the directory server instance.
      Used for starting, stopping, backing up the database and more.
     </para>
    </listitem>
   </varlistentry>
    <varlistentry>
     <term><command>dsconf</command></term>
     <listitem>
      <para>
       The primary tool used for administration and configuration of the server.
       Manages an instances configuration via its external interfaces. This allows
       you to make configuration changes remotely on the instance.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>dsidm</command></term>
     <listitem>
      <para>
       Used for identity management (manage users, groups, passwords etc.).
       The permissions are granted by access controls, so users can reset their
       own password or change details of their own account, for example.
      </para>
     </listitem>
    </varlistentry>
  </variablelist>

  <!--taroth 2019-02-25: the following note and para are 'leftovers' of the former
   section, check with wbrown if we need to keep them-->
  <note>
   <title>LDAP Server Is Part of the Authentication Server</title>
   <para>
    <remark>taroth 2019-02-25: @wbrown: is this note still valid?</remark>
    Basic LDAP Server initialization and configuration can be done within
    the Authentication Server &yast; module. For more information, see
    <xref linkend="sec.security.auth.yast"/>.
   </para>
  </note>

  <para>
   Installing and setting up the &ds389; takes the following basic steps:
  </para>
  <!--replace steps with xrefs to procedure titles when ready-->
  <procedure>
   <step>
    <para>
     Installing the Software
    </para>
   </step>
   <step>
    <para>
     Creating the Directory Server Instance
     <!--also mention how to remove-->
    </para>
   </step>
   <step>
    <para>
     Configuring Admin Credentials for Remote/Local Access
    </para>
   </step>
   <step>
    <para>
    Configuring Users and Groups
    </para>
   </step>
  </procedure>

  <sect2 xml:id="sec.security.ldap.server.setup">
  <title>Installation and Basic Setup</title>
   <para>
    The <systemitem>389-ds</systemitem> package contains the &ds389; and the
    administration tools. If the package is not installed yet, install it with
    the following command:</para>
  <screen>&prompt.sudo;zypper install 389-ds</screen>
 <procedure>
  <title>Setting up the &ds389; Instance</title>
    <para>
     You create the instance with the <command>dscreate</command> command.
     It can take a configuration file (<filename>*.inf</filename>) which
     defines the instance configuration settings. Alternatively, it can be run
     in an interactive mode. To create a template <filename>*.inf</filename> file,
     use the <option>create-template</option> option. The template is commented
     and pre-filled, so you can adjust its variables to your needs. For more
     details, see the man page of <command>dscreate</command>.
    </para>
    <para>
     If you want to set up a trial instance, you can use the following
     example <filename>*.inf</filename> file as a starting point:
    </para>
    <example>
     <title>
      <filename>Basic Instance Configuration File</filename>
     </title>
     <screen># /tmp/istance.inf
[general]
config_version = 2

[slapd]
root_password = <replaceable>YOUR_PASSWORD_FOR_CN=DIRECTORY_MANAGER</replaceable>

[backend-userroot]
sample_entries = yes
suffix = dc=example,dc=com</screen>
    </example>
   <para>
    Before you use this file in the following, edit the <varname>root_password</varname>
    variable and set it to the password for the directory server &rootuser; user.
    The password is used for LDAP server administration only.
   </para>
   <step>
    <para>
     To create the &ds389; instance from the <filename>/tmp/instance.inf</filename>
     above, run:
    </para>
    <screen>&prompt.sudo;dscreate from-file /tmp/instance.inf</screen>
    <para>This creates a working LDAP server. If not specified otherwise in the
     instance configuration file, the default instance name is <literal>localhost</literal>. 
     It cannot be changed after the instance has been created. </para>
   </step>
   <step>
    <para>
     Check the status of the server with:
    </para>
    <screen>&prompt.sudo;dsctl localhost status
instance 'Localhost' is running</screen>
    <para>
     </para>
   </step>
  <!--
   taroth 2018-02-27: ToDo: mention the following in a troubleshooting section
   at the end:
   "If you have any issues, re-run the installer with verbose to help identify the cause:
    # dscreate -v from-file /root/instance.inf
  -->
 </procedure>
 <!-- taroth 2019-02-27: updated till here, more to follow tomorrow-->
  </sect2>
 </sect1>
<!-- ==================================================================== -->
 <sect1 xml:id="sec.security.ldap.data" os="sles;osuse">
  <title>Manually Administering LDAP Data</title>
<!--taroth 2019-02-25: let's see where to move/integrate the content from this
    section in the end-->
  <para>
   <remark>taroth 2019-02-21: @wbrown: the overall content or examples in this
   section may still apply, but I guess that the commands, files etc. have to be
   replaced with new ones, please check and provide input what needs to
   be replaced - wbrown 2019-02-26: I suspect a lot of this will change as 389-ds
   supplies the dsidm command, which makes the need for ldapsearch/ldapmodify a
   rare occurance. A personal goal in 389-ds is so I never have to see ldapmodify
   again as it's super hard to use and confusing.</remark>
   LDAP offers a series of tools for the administration of data in the
   LDAP directory. The four most important tools for adding to, deleting
   from, searching through and modifying the data stock are explained in
   this section.
  </para>

  <sect2 xml:id="sec.security.ldap.data.add">
   <title>Inserting Data into an LDAP Directory</title>
   <para>
    Once your LDAP server
<!--in
    <filename>/etc/openldap/slapd.conf</filename>-->
    is correctly configured (it features appropriate entries for
    <literal>suffix</literal>, <literal>directory</literal>,
    <literal>rootdn</literal>, <literal>rootpw</literal> and
    <literal>index</literal>), proceed to entering records. OpenLDAP offers
    the <command>ldapadd</command> command for this task. If possible, add
    the objects to the database in bundles (for practical reasons). LDAP
    can process the LDIF format (LDAP data interchange format) for this.
    An LDIF file is a simple text file that can contain an arbitrary number
    of attribute and value pairs. LDAP works with UTF-8 (Unicode).
<!-- Refer
    to the Schema files declared in <filename>slapd.conf</filename> for the
    available object classes and attributes.-->
    The LDIF file for creating a rough framework for the example in
    <xref linkend="fig.ldap.tree"/> would look like the one in
    <xref linkend="dat.ldap.ldif"/>.
   </para>
   <example xml:id="dat.ldap.ldif">
    <title>An LDIF File</title>
<screen># The Organization
dn: dc=example,dc=com
objectClass: dcObject
objectClass: organization
o: Example dc: example

# The organizational unit development (devel)
dn: ou=devel,dc=example,dc=com
objectClass: organizationalUnit
ou: devel

# The organizational unit documentation (doc)
dn: ou=doc,dc=example,dc=com
objectClass: organizationalUnit
ou: doc

# The organizational unit internal IT (it)
dn: ou=it,dc=example,dc=com
objectClass: organizationalUnit
ou: it</screen>
   </example>
   <para>
    Save the file with the <filename>.ldif</filename> suffix then pass it to
    the server with the following command:
   </para>
<screen>&prompt.user;ldapadd -x -D <replaceable>DN_OF_THE_ADMINISTRATOR</replaceable> -W -f <replaceable>FILE</replaceable>.ldif</screen>
   <para>
    <literal>-x</literal> switches off the authentication with SASL in this
    case. <literal>-D</literal> declares the user that calls the operation.
    The valid DN of the administrator is entered here, as it has been
    configured in <filename>slapd.conf</filename>. In the current example,
    this is <literal>cn=Administrator,dc=example,dc=com</literal>.
    <literal>-W</literal> circumvents entering the password on the command
    line (in clear text) and activates a separate password prompt.
<!-- This
    password was previously determined in <filename>slapd.conf</filename>
    with <literal>rootpw</literal>. -->
    The <literal>-f</literal> option passes the file name. See the details
    of running <command>ldapadd</command> in
    <xref linkend="aus.ldap.addentry"/>.
   </para>
   <example xml:id="aus.ldap.addentry">
    <title>ldapadd with example.ldif</title>
<screen>&prompt.user;ldapadd -x -D cn=Administrator,dc=example,dc=com -W -f example.ldif

Enter LDAP password:
adding new entry "dc=example,dc=com"
adding new entry "ou=devel,dc=example,dc=com"
adding new entry "ou=doc,dc=example,dc=com"
adding new entry "ou=it,dc=example,dc=com"</screen>
   </example>
   <para>
    The user data of individuals can be prepared in separate LDIF files.
    <xref linkend="aus.ldap.addtux"/> adds
    <systemitem class="username">Tux</systemitem> to the new LDAP directory.
   </para>
   <example xml:id="aus.ldap.addtux">
    <title>LDIF Data for Tux</title>
<screen># coworker Tux
dn: cn=Tux Linux,ou=devel,dc=example,dc=com
objectClass: inetOrgPerson
cn: Tux Linux
givenName: Tux
sn: Linux
mail: tux@example.com
uid: tux
telephoneNumber: +49 1234 567-8</screen>
   </example>
   <para>
    An LDIF file can contain an arbitrary number of objects. It is possible
    to pass directory branches (entirely or in part) to the server in one
    go, as shown in the example of individual objects. If it is necessary to
    modify some data relatively often, a fine subdivision of single objects
    is recommended.
   </para>
  </sect2>

  <sect2 xml:id="sec.security.ldap.data.change">
   <title>Modifying Data in the LDAP Directory</title>
   <para>
    The tool <command>ldapmodify</command> is provided for modifying the
    data stock. The easiest way to do this is to modify the corresponding
    LDIF file and pass the modified file to the LDAP server. To change the
    telephone number of colleague Tux from <literal>+49 1234 567-8</literal>
    to <literal>+49 1234 567-10</literal>, edit the LDIF file like in
    <xref linkend="aus.ldap.ldif.tux"/>.
   </para>
   <example xml:id="aus.ldap.ldif.tux">
    <title>Modified LDIF File tux.ldif</title>
<screen># coworker Tux
dn: cn=Tux Linux,ou=devel,dc=example,dc=com
changetype: modify
replace: telephoneNumber
telephoneNumber: +49 1234 567-10</screen>
   </example>
   <para>
    Import the modified file into the LDAP directory with the following
    command:
   </para>
<screen>&prompt.user;ldapmodify -x -D cn=Administrator,dc=example,dc=com -W -f tux.ldif</screen>
   <para>
    Alternatively, pass the attributes to change directly to
    <command>ldapmodify</command> as follows:
   </para>
   <procedure>
    <step>
     <para>
      Start <command>ldapmodify</command> and enter your password:
     </para>
<screen>&prompt.user;ldapmodify -x -D cn=Administrator,dc=example,dc=com -W
Enter LDAP password:</screen>
    </step>
    <step>
     <para>
      Enter the changes while carefully complying with the syntax in the
      order presented below:
     </para>
<screen>dn: cn=Tux Linux,ou=devel,dc=example,dc=com
changetype: modify
replace: telephoneNumber
telephoneNumber: +49 1234 567-10</screen>
    </step>
   </procedure>
   <para>
    For more information about <command>ldapmodify</command> and its syntax,
    see the <command>ldapmodify</command> man page.
   </para>
  </sect2>

  <sect2 xml:id="sec.security.ldap.data.search">
   <title>Searching or Reading Data from an LDAP Directory</title>
   <para>
    OpenLDAP provides, with <command>ldapsearch</command>, a command line
    tool for searching data within an LDAP directory and reading data from
    it. This is a simple query:
   </para>
<screen>&prompt.user;ldapsearch -x -b dc=example,dc=com "(objectClass=*)"</screen>
   <para>
    The <option>-b</option> option determines the search base (the section
    of the tree within which the search should be performed). In the current
    case, this is <literal>dc=example,dc=com</literal>. To perform a more
    finely-grained search in specific subsections of the LDAP directory (for
    example, only within the <literal>devel</literal> department), pass this
    section to <command>ldapsearch</command> with <option>-b</option>.
    <option>-x</option> requests activation of simple authentication.
    <literal>(objectClass=*)</literal> declares that all objects contained
    in the directory should be read. This command option can be used after
    the creation of a new directory tree to verify that all entries have
    been recorded correctly and the server responds as desired. For more
    information about the use of <command>ldapsearch</command>, see the
    <systemitem>ldapsearch(1)</systemitem> man page.
   </para>
  </sect2>

  <sect2 xml:id="sec.security.ldap.data.del">
   <title>Deleting Data from an LDAP Directory</title>
   <para>
    Delete unwanted entries with <command>ldapdelete</command>. The syntax
    is similar to that of the other commands. To delete, for example, the
    complete entry for <literal>Tux Linux</literal>, issue the following
    command:
   </para>
<screen>&prompt.user;ldapdelete -x -D cn=Administrator,dc=example,dc=com -W cn=Tux \
Linux,ou=devel,dc=example,dc=com</screen>
  </sect2>
 </sect1>

<sect1 xml:id="sec.security.ldap.yast.usergr">
  <title>Configuring LDAP Users and Groups in &yast;</title>
<!--taroth 2019-02-25: let's see where to move/integrate the content from this
    section in the end-->

  <procedure>
   <step>
    <para>
     Access the &yast; user administration with <menuchoice>
     <guimenu>Security and Users</guimenu><guimenu>User and Group
     Management</guimenu></menuchoice>.
    </para>
   </step>
   <step>
    <para>
     To view and manage LDAP users, click the <guimenu>Users</guimenu> tab.
    </para>
   </step>
   <step>
    <para>
     Select <menuchoice><guimenu>Set Filter</guimenu>
     <guimenu>LDAP Users</guimenu></menuchoice> and enter the password for
     Root DN.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Add</guimenu> to enter the user configuration. A dialog
     with four tabs opens:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Specify the user's name, login name, and password in the
       <guimenu>User Data</guimenu> tab.
      </para>
     </step>
     <step>
      <para>
       Check the <guimenu>Details</guimenu> tab for the group membership,
       login shell, and home directory of the new user. If necessary, change
       the default to values that better suit your needs.
<!-- The default values
       (as well as those of the password settings) can be defined with the
       procedure described in
       <xref linkend="sec.security.auth.yast.client.conf.mod"/>.-->
      </para>
     </step>
     <step>
      <para>
       Modify or accept the default <guimenu>Password Settings</guimenu>.
      </para>
     </step>
     <step>
      <para>
       Enter the <guimenu>Plug-Ins</guimenu> tab, select the LDAP plug-in,
       and click <guimenu>Launch</guimenu> to configure additional LDAP
       attributes assigned to the new user.
<!-- (see
       <xref linkend="fig.ldap.y2.adset"/>).-->
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Click <guimenu>OK</guimenu> to apply your settings and leave the user
     configuration.
    </para>
   </step>
  </procedure>

 <para>
  You can administer groups in a similar way on the <guimenu>Groups</guimenu>
  tab.
</para>
<!--
  <figure id="fig.ldap.y2.adset">
   <title>&yast;: Additional LDAP Settings</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ldap_y2_adset.png" width="75%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ldap_y2_adset.png" width="75%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  -->

  <para>
   The initial input form of user administration offers <guimenu>LDAP
   Options</guimenu>. This allows you to apply LDAP search filters to the
   set of available users. Alternatively open the module for configuring
   LDAP users and groups by selecting <guimenu>LDAP User and Group
   Configuration</guimenu>.
  </para>
 </sect1>

<sect1 xml:id="sec.security.ldap.yast.client">
  <title>Configuring an LDAP Client with &yast;</title>
<!--taroth 2019-02-25: let's see where to move/integrate the content from this
    section in the end-->
  <para>
   &yast; includes the module <guimenu>LDAP and Kerberos Client</guimenu>
   that helps define authentication scenarios involving either LDAP or Kerberos.
  </para>
  <para>
   It can also be used to join Kerberos and LDAP separately. However, in
   many such cases, using this module may not be the first choice, such as
   for joining &ad; (which uses a combination of LDAP and Kerberos). For
   more information, see <xref linkend="sec.security.auth.yast.client"/>.
  </para>
  <para>
   Start the module by selecting
   <menuchoice> <guimenu>Network Services</guimenu> <guimenu>LDAP and
   Kerberos Client</guimenu> </menuchoice>.
  </para>
  <figure xml:id="fig.yast2.ldapkerberos.ldap">
   <title><guimenu>LDAP and Kerberos Client</guimenu> Window</title>
   <mediaobject>
    <imageobject role="html">
     <imagedata fileref="yast2_auth_client_config.png" width="65%" format="PNG"/>
    </imageobject>
    <imageobject role="fo">
     <imagedata fileref="yast2_auth_client_config.png" width="65%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   To configure an LDAP client, follow the procedure below:
  </para>
  <procedure xml:id="pro.security.auth.ldap">
   <step>
    <para>
     In the window <guimenu>LDAP and Kerberos Client</guimenu>, click
     <guimenu>Change Settings</guimenu>.
    </para>
    <para>
     Make sure that the tab <guimenu>Use a Directory as Identity Provider
     (LDAP)</guimenu> is chosen.
    </para>
    <informalfigure>
     <mediaobject>
      <imageobject role="html">
       <imagedata fileref="yast2_auth_client_ldap.png" width="65%" format="PNG"/>
      </imageobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_auth_client_ldap.png" width="65%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
   </step>
   <step>
    <para>
     <!--
      wbrown 2019-02-25: URLs or hostnames only. IP address would break TLS
      cn/san checking.
     -->
     Specify one or more LDAP server URLs or host names under
     <guimenu>Enter LDAP server locations</guimenu>. For security reasons, we
     recommend to use <literal>LDAPS://</literal> URLs only. When specifying
     multiple addresses, separate them with spaces.
    </para>
   </step>
   <step>
    <para>
     Specify the appropriate LDAP distinguished name (DN) under
     <guimenu>DN of Search Base</guimenu>. For example, a valid entry could
     be <literal>dc=example,dc=com</literal>.
    </para>
   </step>
   <step>
    <para>
     If your LDAP server supports TLS encryption, choose the appropriate
     security option under <guimenu>Secure LDAP Connection</guimenu>.
    </para>
    <para>
     To first ask the server whether it supports TLS encryption and be able
     to downgrade to an unencrypted connection if it does not, use
     <guimenu>Secure Communication via StartTLS</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Activate other options as necessary:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       You can <guimenu>Allow users to authenticate via LDAP</guimenu> and
       <guimenu>Automatically Create Home Directories</guimenu> on the local
       computer for them.
      </para>
     </listitem>
     <listitem>
      <para>
       If you want to cache LDAP entries locally, use <guimenu>Cache LDAP Entries
        For Faster Response</guimenu>.
      </para>
      <warning>
       <title>Potential Security Risk with Caching</title>
       <para>
        Using the cache bears security risks, depending on the used mechanism.
       </para>
       <formalpara>
        <title>nscd</title>
        <para>
         If you define an authorization rule (for example, members of group
         <literal>admin</literal> can log in), and you remove a user from that
         group, the client cache will not see that change until the cache expires
         or refreshes. So a user whose account has been revoked can still log in
         for a period of time later.
        </para>
       </formalpara>
       <formalpara>
        <title>sssd</title>
        <para>
         This caching mechanism constantly checks if group memberships are still
         valid. Thus the cache risk only exists if the <literal>sssd</literal>
         daemon is disconnected from the LDAP server for any reason.</para>
       </formalpara>
      </warning>
     </listitem>
     <listitem>
      <para>
       Specify the types of data that should be used from the LDAP source,
       such as
       <guimenu>Users</guimenu> and <guimenu>Groups</guimenu>,
       <guimenu>Super-User Commands</guimenu>, and <guimenu>Network Disk
       Locations</guimenu> (network-shared drives that can be automatically
       mounted on request).
      </para>
     </listitem>
     <listitem>
      <para>
       Specify the distinguished name (DN) and password of the user under
       whose name you want to bind to the LDAP directory in <guimenu>DN of
       Bind User</guimenu> and <guimenu>Password of the Bind User</guimenu>.
      </para>
      <para>
       Otherwise, if the server supports it, you can also leave both text
       boxes empty to bind anonymously to the server.
      </para>
      <warning>
       <title>Authentication Without Encryption</title>
       <para>
        When using authentication without enabling transport encryption
        using TLS or StartTLS, the password will be transmitted in the clear.
       </para>
       <!--for the records:
        sknorr, 2017-03-01: Is the YaST dialog compatible with SASL in any way?
        wbrown 2019-02-26: SASL is too complicated for a setup like this,
        not worth including.
       -->
      </warning>
     </listitem>
    </itemizedlist>
    <para>
     <remark>wbrown 2019-02-26: This is a client timeout? - taroth 2019-02-26:
     no idea, need to check with the YaST team</remark>
     Under <guimenu>Extended Options</guimenu>, you can additionally
     configure timeouts for BIND operations.
    </para>
   </step>
   <step>
    <para>
     To check whether the LDAP connection works, click
     <guimenu>Test Connection</guimenu>.
    </para>
   </step>
   <step>
    <para>
     To leave the dialog, click <guimenu>OK</guimenu>. Then wait for the
     setup to complete.
    </para>
    <para>
     Finally, click <guimenu>Finish</guimenu>.
    </para>
   </step>
  </procedure>
 </sect1>

<sect1 xml:id="sec.security.ldap.info">
  <title>For More Information</title>

  <para>
   Find a detailed general introduction to the basic principles of LDAP in
   <link xlink:href="http://www.redbooks.ibm.com/redbooks/pdfs/sg244986.pdf"/>.
  </para>
  <para>
   Printed literature about LDAP:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <citetitle>LDAP System Administration</citetitle> by Gerald Carter
     (ISBN 1-56592-491-6)
    </para>
   </listitem>
   <listitem>
    <para>
     <citetitle>Understanding and Deploying LDAP Directory
     Services</citetitle> by Howes, Smith, and Good (ISBN 0-672-32316-8)
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The ultimate reference material for the subject of LDAP are the
   corresponding RFCs (request for comments), 2251 to 2256.
  </para>
 </sect1>
</chapter>
