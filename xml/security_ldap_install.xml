<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec-security-ldap-server-install">
  <title>Installing &ds389;</title>
   <para>
    Install it with the following command:
    </para>
    <screen>&prompt.sudo;zypper install 389-ds</screen>
    <para>
      This installs the <package>389-ds</package> and 
      <package>lib389</package> packages. After installation, set up the        
      server 
     <phrase os="sles;osuse">as described in 
       <xref linkend="sec-security-ldap-server"
      xrefstyle="select:label"/>.</phrase>      
    </para>

 <sect2 xml:id="sec-security-ldap-server">
  <title>Setting up a new &ds389; instance</title>
  <para>
      You will use the <command>dscreate</command> command to create new
      &ds389; instances, and the <command>dsctl</command> command to cleanly
      remove them.
  </para>
  <para>
      There are two ways to configure and create a new instance: from a custom
      configuration file, and from an auto-generated template file.
      You may use the auto-generated template without changes for a test instance,
      though for a production system you must carefully review it and make 
      necessary changes.
  </para>
  <para>
      Then you will set up administration credentials, manage users and groups,
      and configure identity services.
  </para>
  <para>
      Follow these steps to set up a simple instance for testing and development, 
      populated with a small set of sample entries.
  </para>
  <procedure>
   <step>
    <para>
     <!--Creating the Directory Server Instance from inf file-->
     <xref linkend="sec-security-ldap-server-instance" xrefstyle="select:title"/>
    </para>
   </step>
   <step>
    <para>
     <!--Creating the Directory Server Instance from a template-->
     <xref linkend="sec-security-ldap-server-template" xrefstyle="select:title"/>
    </para>
   </step>
   <step>
    <para>
     <!--Configuring Admin Credentials for Local Access-->
      <xref linkend="sec-security-ldap-server-credentials" xrefstyle="select:title"/>
    </para>
   </step>
   <step>
    <para>
    <!--Configuring Users and Groups-->
     <xref linkend="sec-security-ldap-server-users" xrefstyle="select:title"/>
    </para>
   </step>
   <step>
    <para>
    <!--Configuring SSSD-->
     <xref linkend="sec-security-ldap-server-sssd" xrefstyle="select:title"/>
    </para>
   </step>
   <step>
     <para>
       <!-- Managing Modules -->
       <xref linkend="sec-security-ldap-modules" xrefstyle="select:title"/>
     </para>
   </step>
    <step>
     <para>
       <!--Using CA Certificates for TLS Connections -->
      <xref linkend="sec-security-ldap-server-ca" xrefstyle="select:title"/>
     </para>
    </step>
  </procedure>
  <para>
   <remark>taroth 2019-06-19: some topics like 'configuring other applications'
    and 'backup and restore' to be added later on</remark>
  </para>
   <!--
    *  configuring other applications (showing "dsidm instance client_config display")
    * backup and restore
   -->
   <para>
   The &ds389; is controlled by three primary commands:
  </para>
  <variablelist>
   <varlistentry>
    <term><command>dsctl</command></term>
    <listitem>
     <para>
      Manages a local instance and requires &rootuser; permissions. Requires you
      to be connected to a terminal which is running the directory server instance.
      Used for starting, stopping, backing up the database, and more.
     </para>
    </listitem>
   </varlistentry>
    <varlistentry>
     <term><command>dsconf</command></term>
     <listitem>
      <para>
       The primary tool used for administration and configuration of the server.
       Manages an instance's configuration via its external interfaces. This allows
       you to make configuration changes remotely on the instance.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>dsidm</command></term>
     <listitem>
      <para>
       Used for identity management (managing users, groups, passwords etc.).
       The permissions are granted by access controls, so, for example, users can
       reset their own password or change details of their own account.
      </para>
     </listitem>
    </varlistentry>
  </variablelist>
</sect2>
 
    <sect2 xml:id="sec-security-ldap-server-instance">
  <title>Creating a &ds389; instance with a custom configuration file</title>
    <para>
     You may create a new &ds389; instance from a simple custom configuration
     file. This file must be in the INF format, and you may name it anything you
     like.
    </para>
    <para>
       The default instance name is <literal>localhost</literal>. The instance 
       name cannot be changed after it has been created. It is better
       to create your own instance name, rather than using the default, to avoid 
       confusion and to enable a better understanding of how it all works.
    </para>
    <para>
     <xref linkend="ex-ldap-389-ds-inf" xrefstyle="select:label"/> shows an
     example configuration file that you can use to create a new &ds389; instance.
     You may copy and use this file, though be sure to create your own password.
    </para>
   <procedure>
    <step>
     <para>
      Copy the following example file, <filename>ldap1.inf</filename>, to 
      your home directory:
     </para>
     <example xml:id="ex-ldap-389-ds-inf">
      <title>Minimal &ds389; instance configuration file</title>
      <screen># <replaceable>ldap1.inf</replaceable>
        
[general]
config_version = 2 <co xml:id="co-ldap-389-ds-config-version"/>

[slapd]
root_password = <replaceable>password</replaceable><co xml:id="co-ldap-389-ds-rootpasswd"/>
self_sign_cert = True <co xml:id="co-ldap-389-ds-cert"/>
instance_name = <replaceable>ldap1</replaceable>

[backend-userroot]
sample_entries = yes <co xml:id="co-ldap-389-ds-sample-entries"/>
suffix = <replaceable>dc=ldap1,dc=com</replaceable></screen>

      <calloutlist>
       <callout arearefs="co-ldap-389-ds-config-version">
        <para>
         This line is required, indicating that this is a version 2 setup INF
         file.
        </para>
       </callout>
       <callout arearefs="co-ldap-389-ds-rootpasswd">
        <para>
         Create a <varname>root_password</varname> for
         the ldap user <literal>cn=Directory Manager</literal>. This user is for
         connecting (binding) to the directory.
        </para>
       </callout>
       <callout arearefs="co-ldap-389-ds-cert">
        <para>
         Create self-signed server certificates in 
         <filename>/etc/dirsrv/slapd-<replaceable>instance-name</replaceable></filename>.
        </para>
       </callout>
       <callout arearefs="co-ldap-389-ds-sample-entries">
        <para>
         Populate the new instance with sample user and group entries.
        </para>
       </callout>       
      </calloutlist>
     </example>
   </step>
   <step>
    <para>
     To create the &ds389; instance from <xref linkend="ex-ldap-389-ds-inf" xrefstyle="select:label"/>, run the following command:
    </para>
    <screen>&prompt.sudo;dscreate -v from-file <replaceable>ldap1.inf</replaceable> | tee <replaceable>ldap1-output.txt</replaceable></screen>
    <para>
     This shows all activity during the instance creation, stores all the messages in
     <filename>ldap1-output.txt</filename>, and creates a working 
     LDAP server in about a minute. The verbose output contains a lot of useful
     information. If you do not want to save it then delete the 
     <literal>| tee <replaceable>ldap1-output.txt</replaceable></literal>
     portion of the command.
    </para>
   </step>
   <step>
    <para>
     If the <command>dscreate</command> command should fail, the messages will 
     tell you why. After correcting any issues remove the instance 
     (see <xref linkend="sec-security-ldap-server-remove"/>) and create a
     new instance.    
    </para>
   </step>
   <step>
    <para>
     A successful installation reports "<literal>Completed installation for 
       <replaceable>ldap1</replaceable></literal>". Check the status of your
     new server:
    </para>
    <screen>&prompt.sudo;dsctl <replaceable>ldap1</replaceable> status
Instance "ldap1" is running</screen>
   </step>
   <step xml:id="sec-security-ldap-server-remove">
    <para>
     The following commands are for cleanly removing the instance. The first 
     command performs a dry-run and does not remove the instance. When are you 
     sure you want to remove it, use the second command with the
     <command>--do-it</command> option:
    </para>
    <screen>&prompt.sudo;dsctl <replaceable>ldap1</replaceable> remove
Not removing: if you are sure, add --do-it

&prompt.sudo;dsctl <replaceable>ldap1</replaceable> remove --do-it</screen>
    <para>
     This command also removes partially-installed or corrupted instances. You 
     may reliably create and remove instances as much as you want.
    </para>
   </step>
  </procedure>
  <para>
    If you forget the name of your instance, use <command>dsctl</command> to 
    list all instances:
  </para>
  <screen>&prompt.user;/usr/sbin/dsctl -l
slapd-ldap1</screen>    
 </sect2>
 
 <sect2 xml:id="sec-security-ldap-server-template">
   <title>Creating a &ds389; instance from a template</title>
   <para>
       You may auto-create a template for a new &ds389; instance with the
       <command>dscreate</command> command. This creates a template that you
       may use without making any changes, and you may change it to suit your own
       requirements. All of the defaults are documented in the template file,
       and commented out. To make changes, uncomment the default and enter your
       own value. All options are well-documented.
   </para>
   <para>
       The following example prints the template to stdout:
   </para>
   <screen>&prompt.user;dscreate create-template</screen>
   <para>
       This is good for a quick review of the template, but you must create a
       file to use in creating your new &ds389; instance. You may name this file
       anything you want:
   </para>
   <screen>&prompt.user;dscreate create-template <replaceable>ldap1-template.txt</replaceable></screen>
   <para>
       This is a snippet from the new file:
   </para>
   <screen># full_machine_name (str)
# Description: Sets the fully qualified hostname (FQDN) of this system. When 
# installing this instance with GSSAPI authentication behind a load balancer, set 
# this parameter to the FQDN of the load balancer and, additionally, set 
# "strict_host_checking" to "false".
# Default value: ldapserver1.test.net
;full_machine_name = ldapserver1.test.net

# selinux (bool)
# Description: Enables SELinux detection and integration during the installation 
# of this instance. If set to "True", dscreate auto-detects whether SELinux is 
# enabled. Set this parameter only to "False" in a development environment.
# Default value: True 
;selinux = True</screen>

   <para>
    You see how it automatically configures the defaults from your existing
    environment. Use this file with no changes to create a new instance:
   </para>
   <screen>&prompt.sudo;dscreate from-file <replaceable>ldap1-template.txt</replaceable></screen>
   <para>
       This creates a new instance named <literal>localhost</literal>, and 
       automatically starts it after creation:
   </para>
   <screen>&prompt.sudo;dsctl <replaceable>localhost</replaceable> status
Instance "localhost" is running</screen>
    <para>
        The default values create a fully-operational instance, but there are
        some values you might want to change.
    </para>
    <para>
        The instance name cannot be changed after it has been created. It is 
        better to create your own instance name, rather than using the default, 
        to avoid confusion and to enable a better understanding of how it all 
        works. To do this, uncomment the 
        <literal>;instance_name = localhost</literal> line and change
        <literal>localhost</literal> to your chosen name. In the following
        examples the instance name is <replaceable>ldap1</replaceable>.
    </para>
    <para>
        Another useful change is to populate your new instance with sample
        users and groups. Uncomment <literal>;sample_entries = no</literal> and
        change <literal>no</literal> to <literal>yes</literal>.
    </para>
    <para>
        Set your own password by uncommenting <literal>;root_password</literal>,
        and replacing the default password with your own.
    </para>
    <para>
        The template does not create a default suffix, so you should
        configure your own on the <literal>suffix</literal> line, like 
        this example:
    </para>    
    <screen>suffix = <replaceable>dc=ldap1,dc=com</replaceable></screen>
    <para>
       You may cleanly remove any instance and start over with 
       <command>dsctl</command>:
    </para>
    <screen>&prompt.sudo;dsctl <replaceable>ldap1</replaceable> remove --do-it</screen>
 </sect2>
 
 <sect2 xml:id="sec-security-ldap-server-stop-start">
     <title>Stopping and Starting &ds389;</title>
     <para>
         Use &systemd; to manage your &ds389; instance. Get the
         status of your server:
     </para>
     <screen>&prompt.user;systemctl status --no-pager --full <replaceable>dirsrv@ldap1.service</replaceable>       
   ● dirsrv@ldap1.service - 389 Directory Server ldap1.
     Loaded: loaded (/usr/lib/systemd/system/dirsrv@.service; enabled; vendor preset: disabled)
     Active: active (running) since Thu 2021-03-11 08:55:28 PST; 2h 7min ago
    Process: 4451 ExecStartPre=/usr/lib/dirsrv/ds_systemd_ask_password_acl /etc/dirsrv/slapd-ldap1/dse.ldif (code=exited, status=0/SUCCESS)
   Main PID: 4456 (ns-slapd)
     Status: "slapd started: Ready to process requests"
      Tasks: 26
     CGroup: /system.slice/system-dirsrv.slice/dirsrv@ldap1.service
             └─4456 /usr/sbin/ns-slapd -D /etc/dirsrv/slapd-ldap1 -i /run/dirsrv/slapd-ldap1.pid
</screen>
   <para>
       Start and stop your server:
   </para>
   <screen>&prompt.sudo;systemctl start <replaceable>dirsrv@ldap1.service</replaceable>
&prompt.sudo;systemctl stop <replaceable>dirsrv@ldap1.service</replaceable></screen>
   <para>
       See <xref linkend="cha-systemd"/> for more information on using 
       <command>systemctl</command>.
   </para>
   <para>
       The <command>dsctl</command> command also starts and stops your server:
   </para>
   <screen>&prompt.sudo;dsctl <replaceable>ldap1</replaceable> status
&prompt.sudo;dsctl <replaceable>ldap1</replaceable> stop
&prompt.sudo;dsctl <replaceable>ldap1</replaceable> restart
&prompt.sudo;dsctl <replaceable>ldap1</replaceable> start
</screen>
</sect2>

 <sect2 xml:id="sec-security-ldap-server-credentials">
  <title>Configuring admin credentials for local administration</title>
   <para>
    For local administration of the &ds389;, you can create a
    <filename>.dsrc</filename> configuration file in the <filename>/root</filename>
    directory, allowing root and sudo users to administer the server without
    typing connection details with every command. 
    <xref linkend="ex-security-ldap-server-credentials-local" xrefstyle="select:label"/> 
    shows an example for local administration on the server, using 
    <replaceable>ldap1</replaceable> and <replaceable>com</replaceable> for 
    the base DN.
   </para>
   <para>
     After creating your <filename>/root/.dsrc</filename> file, try a few
     administration commands, such as creating new users (see 
     <xref linkend="sec-security-ldap-server-users"/>).
   </para>
   <example xml:id="ex-security-ldap-server-credentials-local">
    <title>A <filename>.dsrc</filename> file for local administration</title>
     <screen># /root/.dsrc file for administering the ldap1 instance
         
[<replaceable>ldap1</replaceable>] <co xml:id="co-ldap-server-dsrc-instance-name"/>

uri = ldapi://<replaceable>%%2fvar%%2frun%%2fslapd-ldap1.socket</replaceable> <co xml:id="co-ldap-server-dsrc-remote-ldapi"/>
basedn = <replaceable>dc=ldap1,dc=com</replaceable>
binddn = cn=Directory Manager
</screen>
   <calloutlist>
    <callout arearefs="co-ldap-server-dsrc-instance-name">
      <para>
        This must specify your exact instance name.
      </para>
    </callout>       
    <callout arearefs="co-ldap-server-dsrc-remote-ldapi">
      <para>
        <literal>ldapi</literal> detects the UID and GID of the user attempting 
        to log in to the server. If the UID/GID are <literal>0/0</literal> or
        <literal>dirsrv:dirsrv</literal>, <literal>ldapi</literal> binds the user 
        as the directory server root dn, which is 
        <literal>cn=Directory Manager</literal>.
      </para>
      <para>
        In the URI the slashes are replaced with <literal>%%2f</literal>, so
        in this example the path is 
        <filename>/var/run/slapd-ldap1.socket</filename>.
      </para> 
    </callout>
   </calloutlist>
  </example>
 </sect2>
</sect1>