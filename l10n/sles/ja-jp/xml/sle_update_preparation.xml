<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="sle_update_preparation.xml" version="5.0" xml:id="cha-update-preparation">
 <title>アップグレードの準備</title>
 <info>
  <abstract>
   <para>
    アップグレード手順を開始する前に、システムが正しく準備されていることを確認します。準備内容には、データのバックアップとリリースノートの確認などがあります。以下の章では、順を追って手順を説明します。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
<remark>jufa 2021-02-09: suggestion to give this chapter a facelift: 
 Chapter 3: Preparing the upgrade - Intro - Procedure w check system version,
 release notes, back-up, listing packages, create proposal</remark>
 <sect1 xml:id="sec-update-preparation-update">
  <title>現在のシステムが最新であることを確認する</title>
  <para>
   <remark>jufa 2021-02-09: add what to do if the system is older? check what
    is meant with patch level. check if update path is supported,
    link to sec-upgrade-path-supported</remark>システムのアップグレードは、最新のパッチレベルからのみサポートされます。<command>zypper patch</command>を実行するか、YaSTモジュール<guimenu>オンライン更新</guimenu>を実行して、最新のシステムの更新がインストールされていることを確認します。
  </para>
 </sect1>

 <sect1 xml:id="sec-update-preparation-relnotes">
  <title>リリースノートの確認</title>
  <para>
   <link xlink:href="https://www.suse.com/releasenotes/">リリースノート</link>ですべての変更点、新機能、および既知の問題のリストを確認してください。<filename>docu</filename>ディレクトリのインストールメディアからもリリースノートを確認できます。
  </para>
   <para>
   通常、リリースノートにはそれに続く2つのリリースの変更しか記載されていません。サービスパックを1つ以上スキップする場合は、スキップするサービスパックのリリースノートも確認します。
  </para>
  <para>
   リリースノートを参照して以下を確認します。
  </para>
  <itemizedlist>
   <listitem>
    <para>
     使用しているハードウェアに特別な配慮が必要かどうか
    </para>
   </listitem>
   <listitem>
    <para>
     使用しているソフトウェアパッケージに大幅な変更があるかどうか
    </para>
   </listitem>
   <listitem>
    <para>
     インストールのために特別な予防措置が必要かどうか
    </para>
   </listitem>
  </itemizedlist>

 </sect1>
 <sect1 xml:id="sec-update-preparation-backup">
  <title>バックアップの作成</title>
  <para>
   アップグレードの前に、既存の設定ファイルを別のメディア(テープデバイスやリムーバブルハードディスクなど)にコピーして、データをバックアップしてください。主に、<filename>/etc</filename>に保存されているファイル、および<filename>/var</filename>と<filename>/opt</filename>のディレクトリとファイルの一部に当てはまります。さらに、<filename>/home</filename> (<envar>HOME</envar>ディレクトリ)下のユーザデータをバックアップメディアに書き込むようにします。
  </para>
  <para>
   すべてのデータは、<systemitem class="username">root</systemitem>ユーザでバックアップします。<systemitem class="username">root</systemitem>のみに、すべてのローカルファイルに関する十分なパーミッションがあります。
  </para>
  <para>
   <remark>jufa 2021-02-09: check if backup function still exists and how it
    works. rework para accordingly: alternative for data back up</remark>YaSTのインストールモードとして<guimenu>既存システムの更新</guimenu>を選択している場合は、もっと後の時点で(システム)バックアップを実行することができます。変更されたすべてのファイルと<filename>/etc/sysconfig</filename>ディレクトリにあるファイルを含めることができます。ただし、これは完全なバックアップではありません。前述したその他の重要なディレクトリがすべて含まれていないからです。<filename>/var/adm/backup</filename>ディレクトリでバックアップを見つけます。
  </para>
 </sect1>
 <sect1 xml:id="sec-update-preparation-packagelist">
  <title>インストール済みパッケージとリポジトリの一覧</title>
  <para>
   <remark>jufa 2021-02-08: explain importance and purposeof this list.
    Clarify if requirement or suggestion?
    Used for reverting changes or to set-up new system?</remark>インストール済みパッケージのリストを記録できます。たとえば、新しいメジャーSLEリリースを新規インストールする場合や、旧バージョンに戻す場合などです。
  </para>
  <note>
   <para>
    <remark>jufa: check if manual editing isstill relevant 2021-02-09</remark>インストール済みパッケージまたは使用中のリポジトリの中にはSUSE Linux Enterpriseの最新リリースで利用できないものもあることに注意してください。名前が変更されていたり、ほかのパッケージやリリースに置き換えられていたりすることもあります。また、レガシ目的で引き続き提供されていても、デフォルトでは別のパッケージが使用されるパッケージもあります。したがって、ファイルを多少手動で編集しなければならない場合があります。これはテキストエディタで実行できます。
   </para>
  </note>

  <procedure>
   <step>
    <para>
     使用中のすべてのリポジトリのリストを記述した<filename>repositories.bak.repo</filename>という名前のファイルを作成します。
    </para>
    <screen><prompt role="root">root # </prompt><command>zypper</command> lr -e repositories.bak</screen>
   </step>
   <step>
    <para>
    さらに、すべてのインストール済みパッケージのリストを記述した<filename>installed-software.bak</filename>という名前のファイルも作成します。</para>
    <screen><prompt role="root">root # </prompt><command>rpm</command> -qa --queryformat '%{NAME}\n' &gt;
     installed-software.bak</screen>
   </step>
   <step>
   <para>
   両方のファイルをバックアップします。これらのリポジトリとインストール済みパッケージは、次のコマンドで復元できます。
  </para>
  <screen><prompt role="root">root # </prompt><command>zypper</command> ar repositories.bak.repo
<prompt role="root">root # </prompt><command>zypper</command> install $(cat installed-software.bak)
  </screen>
    <note xml:id="note-update-prep-backup-package-amount">
     <title>新しいメジャーリリースへの更新によりパッケージ数が増える</title>
     <para>
      新しいメジャーバージョン(SLE <replaceable>X+1</replaceable>)にアップグレードされるシステムには、最初のシステム(SLE <replaceable>X</replaceable>)より多くのパッケージが含まれる場合があります。同じパターンを選択したSLE <replaceable>X+1</replaceable>の新規インストールよりも多くのパッケージが含まれる場合もあります。その理由は次のとおりです。
     </para>
     <itemizedlist>
      <listitem>
       <para>
        パッケージをより細かく選択できるように、パッケージが分割されています。たとえば、SLE 11の37個の <package>texlive</package> パッケージは、SLE 15では3000個のパッケージに分割されました。
       </para>
      </listitem>
      <listitem>
       <para>
        パッケージが分割された際、以前のバージョンと同じ機能を保つために、新しいパッケージはすべて、アップグレードとしてインストールされるようになりました。ただし、SLE <replaceable>X+1</replaceable>の新規インストールの新しいデフォルトでは、すべてのパッケージをインストールしない場合があります。
       </para>
      </listitem>
      <listitem>
       <para>
        SLE <replaceable>X</replaceable>からの古いパッケージが、互換性の理由で保持されている可能性があります。
       </para>
      </listitem>
      <listitem>
       <para>
        パッケージの依存関係およびパターンの範囲が変更されている可能性があります。
       </para>
      </listitem>
     </itemizedlist>
    </note>
   </step>
  </procedure>
 </sect1>

 <sect1 os="sles" xml:id="sec-update-preparation-sle11">
  <title><phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 11 SP4からのアップグレード</title>
  <para>
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 11 SP4でMySQL、PostgreSQL、またはJava MD5ベースの証明書を使用している場合は、次のセクションの説明に従ってシステムを準備してください。また、この章の他のセクションも参照して、さらに必要な準備を確認してください。
  </para>

  <sect2 xml:id="sec-update-preparation-sle11-postgresql">
   <title>PostgreSQLデータベースのマイグレート</title>
   
   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 11でPostgreSQLデータベースを使用している場合は、データベースのアップグレードが必要です。詳細については、<xref linkend="sec-update-preparation-postgresql"/>を参照してください。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-preparation-sle11-mariadb">
   <title>MySQLデータベースのマイグレート</title>
   <remark>toms 2015-09-03: already reviewed by Ondrej and Kristýna.</remark>
   <para>
    SUSE Linux Enterprise 12では、SUSEは、MySQLからMariaDBに切り替えました。アップグレードを開始する前に、データベースのバックアップを取得することを強くお勧めします。
   </para>
   <para>
    データベースマイグレーションを実行するには、次の手順を実行します。
   </para>
   <procedure>
    <step>
     <para>
      ご使用のSUSE Linux Enterprise 11マシンにログインします。
     </para>
    </step>
    <step>
     <para>
      ダンプファイルを作成します。
     </para>
     <screen><prompt role="root">root # </prompt><command>mysqldump</command> -u root -p --all-databases &gt; mysql_backup.sql</screen>
     <para>
      デフォルトでは、<command>mysqldump</command>は、<literal>INFORMATION_SCHEMA</literal>、または<literal>performance_schema</literal>データベースをダンプしません。詳細については、<link xlink:href="https://dev.mysql.com/doc/refman/5.5/en/mysqldump.html"/>を参照してください。
     </para>
    </step>
    <step>
     <para>
      ダンプファイル、環境設定ファイル、<filename>/etc/my.cnf</filename>、およびディレクトリ、<filename>/etc/mysql/</filename>を後で調べることができるように(インストールのためではありません)<emphasis/>安全な場所に保存します。
     </para>
    </step>
    <step>
     <para>
      <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>のアップグレードを実行します。アップグレードが終わっても、前の環境設定ファイル、<filename>/etc/my.cnf</filename>は前のままです。新しい設定は、<filename>/etc/my.cnf.rpmnew</filename>ファイルで確認できます。
     </para>
    </step>
    <step>
     <para>
      必要に応じて、MariaDBデータベースを設定します。以前の環境設定ファイルとディレクトリを使わないでください<emphasis/>。これらは、リマインダとして使用し、活用するだけです。
     </para>
    </step>
    <step>
     <para>
      MariaDBサーバを起動して確認してください。
     </para>
     <screen><prompt role="root">root # </prompt><command>systemctl</command> start mariadb</screen>
     <para>
      ブートのたびにMariaDBサーバを起動する場合は、そのサービスを有効にします。
     </para>
     <screen><prompt role="root">root # </prompt><command>systemctl</command> enable mariadb</screen>
    </step>
    <step>
     <para>
      MariaDBが適切に稼働していることを、データベースに接続して確認します。
     </para>
     <screen><prompt role="root">root # </prompt><command>mariadb</command> -u root -p</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-preparation-sle11-ssl">
   <title>JavaアプリケーションのMD5以外のサーバ証明書の作成</title>
   <remark>toms 2016-07-27: from bsc#970153, c#24</remark>
   <remark>jufa 2021-02-09: FIXME check if still relevant, check which versions are affected</remark>
   <para>
    SP1からSP2に更新するときに、MD5ベースの証明書はセキュリティ修正の一環として無効にされました。MD5として作成された証明書を持っている場合、次の手順で証明書を再作成してください。
   </para>
   <procedure>
    <step>
     <para>
      端末を開いて、<systemitem class="username">root</systemitem>としてログインします。
     </para>
    </step>
    <step>
     <para>
      秘密鍵を作成します。
     </para>
     <screen><prompt role="root">root # </prompt><command>openssl</command> genrsa -out server.key 1024</screen>
     <para>
      より強力な鍵が必要な場合、<literal>1024</literal>を<literal>4096</literal>などの大きい数に置き換えます。
     </para>
    </step>
    <step>
     <para>
      証明書署名要求(CSR)を作成します。
     </para>
     <screen><prompt role="root">root # </prompt><command>openssl</command> req -new -key server.key -out server.csr</screen>
    </step>
    <step>
     <para>
      証明書を自己署名します。
     </para>
     <screen><prompt role="root">root # </prompt><command>openssl</command> x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</screen>
    </step>
    <step>
     <para>
      PEMファイルを作成します。
     </para>
     <screen><prompt role="root">root # </prompt><command>cat</command> server.key server.crt &gt; server.pem</screen>
    </step>
    <step>
     <para>ファイル<filename>server.crt</filename>、<filename>server.csr</filename>、<filename>server.key</filename>、および<filename>server.pem</filename>を鍵が見つかったそれぞれのディレクトリに配置します。たとえばTomcatの場合、このディレクトリは<filename>/etc/tomcat/ssl/</filename>です。
     </para>
    </step>
   </procedure>
  </sect2>

 </sect1>

 <sect1 os="sles" xml:id="sec-update-preparation-postgresql">
  <title>PostgreSQLデータベースのマイグレート</title>
  <para>
   
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> <phrase role="productnumber"><phrase os="sles;sled">15 SP3</phrase></phrase>は、PostgreSQLデータベースのバージョン10、12、13とともに出荷されます。デフォルトはバージョン13です。ただし、古いバージョンの<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>からアップグレードするための<literal>レガシ</literal>モジュールにはバージョン10と12が含まれます。
  </para>
  <para>
   データベースのマイグレーション作業が必要であることから、自動アップグレードプロセスはありません。そのため、あるバージョンから別のバージョンへの切り替えは手動で行う必要があります。
  </para>
  <para>
   マイグレーションプロセスは、<command>pg_upgrade</command>コマンドで行います。このコマンドは、従来のdumpとreloadコマンドに代わる方式です。<quote>dump &amp; reload</quote>方式と比べて<command>pg_upgrade</command>の方がマイグレーション時間が短くなります。
  </para>
  <para>
   各PostgreSQLバージョンのプログラムファイルは、異なる、バージョン依存のディレクトリに格納されます。たとえば、バージョン9.6の場合は<filename>/usr/lib/postgresql96/</filename>、バージョン10の場合は<filename>/usr/lib/postgresql10/</filename>、バージョン12の場合は<filename>/usr/lib/postgres12/</filename>に格納されます。PostgreSQLのバージョニングポリシーが、メジャーバージョン9.6と10の間で変更されていることに注意してください。詳細については、<link xlink:href="https://www.postgresql.org/support/versioning/"/>を参照してください。
  </para>
  <important>
   <title>SLE 11からのアップグレード</title>
    <para>
     SLE 11からアップグレードする場合、<systemitem>postgresql94</systemitem>がアンインストールされ、PostgreSQLのより高いバージョンにデータベースをマイグレーションするために使用できません。したがって、この場合、システムをアップグレードする「前に」PostgreSQLデータベースをマイグレートしてください。<emphasis/>
   </para>
  </important>
  <para>
   以下の手順は、バージョン9.6から10へのデータベースマイグレーションについて説明しています。スタートまたはターゲットとして異なるバージョンを使用する場合は、それに応じてバージョン番号を置き換えます。
  </para>
  <para>
   データベースマイグレーションを実行するには、次の手順を実行します。
  </para>
  <procedure>
   <step>
    <para>
     以下の前提条件が満たされていることを確認します。
    </para>
    <itemizedlist>
     <listitem>
      <para>
       満たされていない場合、保守アップデートで、古いPostgreSQLバージョンを最新リリースにアップグレードします。
      </para>
     </listitem>
     <listitem>
      <para>
       既存のデータベースのバックアップを作成します。
      </para>
     </listitem>
     <listitem>
      <para>
       新規のPostgreSQLのメジャーバージョンのパッケージをインストールします。SLES15 SP3の場合、これは
       <package>postgresql10-server</package>
       およびそれが依存するすべてのパッケージのインストールを意味します。
      </para>
     </listitem>
     <listitem>
      <para>
       パッケージ
       <package>postgresql10-contrib</package>
       をインストールします。これには、<command>pg_upgrade</command>コマンドが含まれています。
      </para>
     </listitem>
     <listitem>
      <para>
       ご使用のPostgreSQLデータ領域(デフォルトでは<filename>/var/lib/pgsql/data</filename>)に十分な空き容量があることを確認します。容量が厳しい場合、次のSQLコマンドをデータベースごとに実行して、サイズを縮小します(長時間要する場合があります)。
      </para>
      <screen>VACUUM FULL</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     以下のいずれかでPostgreSQLサーバを停止します。
    </para>
<screen><prompt role="root">root # </prompt><command>/usr/sbin/rcpostgresql</command> stop</screen>
   <para>あるいは、</para>
<screen><prompt role="root">root # </prompt>systemctl stop postgresql.service</screen>
   <para>(アップグレードのスタートバージョンとして使用するSLEバージョンによって異なる)。</para>
   </step>
   <step>
    <para>
     古いデータディレクトリの名前を変更します。
    </para>
    <screen><prompt role="root">root # </prompt><command>mv</command> /var/lib/pgsql/data /var/lib/pgsql/data.old</screen>
   </step>
   <step>
    <para>
     新規のデータベースインスタンスを初期化します。<command>initdb</command>を使用して手動で実行するか、PostgreSQLを起動、停止することで自動的に実行します。
    </para>
<screen><prompt role="root">root # </prompt><command>/usr/sbin/rcpostgresql</command> start
<prompt role="root">root # </prompt><command>/usr/sbin/rcpostgresql</command> stop</screen>
    <para>あるいは、</para>
<screen><prompt role="root">root # </prompt>systemctl start postgresql.service
<prompt role="root">root # </prompt>systemctl stop postgresql.service</screen>
    <para>(アップグレードのスタートバージョンとして使用するSLEバージョンによって異なる)。</para>
   </step>
   <step>
    <para>
     古いバージョンの設定ファイルを変更している場合は、これらの変更を新しい設定ファイルに転送することを検討します。これは、<filename>postgresql.auto.conf</filename>、<filename>postgresql.conf</filename>、<filename>pg_hba.conf</filename>、および<filename>pg_ident.conf</filename>ファイルに影響する場合があります。これらのファイルの古いバージョンは<filename>/var/lib/pgsql/data.old/</filename>にあり、新しいバージョンは<filename>/var/lib/pgsql/data</filename>で見つけることができます。
    </para>
    <para>
     古い設定ファイルをコピーすることは推奨されないことに注意してください。コピーすることにより、新しいオプション、新しいデフォルト、および変更されたコメントが上書きされる場合があるためです。
    </para>
   </step>
   <step>
    <para>
     ユーザの<systemitem class="username">postgres</systemitem>としてマイグレーションプロセスを開始します。
    </para>
    <screen><prompt role="root">root # </prompt>su - postgres
postgres &gt; <command>pg_upgrade</command> \
 --old-datadir "/var/lib/pgsql/data.old" \
 --new-datadir "/var/lib/pgsql/data" \
 --old-bindir "/usr/lib/postgresql96/bin/" \
 --new-bindir "/usr/lib/postgresql10/bin/"</screen>
   </step>
   <step>
    <para>
     新しいデータベースインスタンスを次のいずれかを使用して開始します。
    </para>
<screen><prompt role="root">root # </prompt><command>/usr/sbin/rcpostgresql</command> start</screen>
    <para>あるいは、</para>
<screen><prompt role="root">root # </prompt>systemctl start postgresql.service</screen>
    <para>(アップグレードのスタートバージョンとして使用するSLEバージョンによって異なる)。</para>
   </step>
   <step>
    <para>
     マイグレーションが成功したかどうか確認します。テスト範囲はユースケースによって異なり、このステップを自動化する汎用ツールはありません。
    </para>
   </step>
   <step>
    <para>
     すべての古いPostgreSQLパッケージと古いデータディレクトリを削除します。
    </para>
<screen><prompt role="root">root # </prompt><command>zypper</command> search -s postgresql96 | xargs zypper rm -u
<prompt role="root">root # </prompt><command>rm</command> -rf /var/lib/pgsql/data.old</screen>
   </step>
  </procedure>
  <para>
   データベースのアップグレード、または論理レプリケーションなどの代替方法の使用の詳細については、PostgreSQLの公式ドキュメント(<link xlink:href="https://www.postgresql.org/docs/10/upgrading.html"/>)を参照してください。
  </para>
 </sect1>

 <sect1 xml:id="sec-update-preparation-vms">
  <title>仮想マシンゲストのシャットダウン</title>
  <para>
   お使いのマシンがKVMまたはXenのVMホストサーバとして機能している場合、アップデートの前には、実行中のすべてのVMゲストを正しくシャットダウンするようにします。そうでないと、更新後にゲストにアクセスできなくなる可能性があります。
  </para>
 </sect1>

 <sect1 xml:id="sec-update-preparation-rmt">
  <title>SMTクライアントセットアップの調整</title>
  <para>
   アップグレードするマシンがSMTサーバに対してクライアントとして登録されている場合は、次のことに注意してください。
  </para>
  <para>
   ホストの<command>clientSetup4SMT.sh</command>スクリプトのバージョンが最新であるかどうかを確認します。古いバージョンのSMTの<command>clientSetup4SMT.sh</command>はSMT 12クライアントを管理できません。SMTサーバにソフトウェアパッチを定期的に適用している場合、常に最新バージョンの<command>clientSetup4SMT.sh</command>を<filename>&lt;SMT_HOSTNAME&gt;/repo/tools/clientSetup4SMT.sh</filename>で見つけることができます。
  </para>
  <para>
   新しいバージョンの<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>へのマシンのアップグレードが失敗する場合は、<xref linkend="pro-sec-update-prep-smt-de-register" xrefstyle="select:label"/>の説明に従って、SMTサーバからマシンの登録を解除します。その後、アップグレードプロセスを再開します。</para>
  <procedure xml:id="pro-sec-update-prep-smt-de-register">
   <title>SMTサーバからSUSE Linux Enterpriseクライアントの登録を解除する</title>
    <step>
     <para>
      クライアントマシンにログインします。
     </para>
    </step>
    <step>
    <para>次のステップは、クライアントの現在のオペレーティングシステムによって異なります。</para>
    <itemizedlist>
     <listitem>
      <para>
       SUSE Linux Enterprise 11の場合、次のコマンドを実行します。
      </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> suse_register -E
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/SUSEConnect
<prompt>tux &gt; </prompt><command>sudo</command> rm -rf /etc/zypp/credentials.d/*
<prompt>tux &gt; </prompt><command>sudo</command> rm -rf /etc/zypp/repos.d/*
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/zypp/services.d/*
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /var/cache/SuseRegister/*
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/suseRegister*
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /var/cache/SuseRegister/lastzmdconfig.cache
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/zmd/deviceid
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/zmd/secret</screen>
     </listitem>
     <listitem>
      <para>
       SUSE Linux Enterprise 12の場合、次のコマンドを実行します。
      </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> SUSEConnect --de-register
<prompt>tux &gt; </prompt><command>sudo</command> SUSEConnect --cleanup
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/SUSEConnect
<prompt>tux &gt; </prompt><command>sudo</command> rm -rf /etc/zypp/credentials.d/*
<prompt>tux &gt; </prompt><command>sudo</command> rm -rf /etc/zypp/repos.d/*
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/zypp/services.d/*</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     SMTサーバにログインします。
    </para>
   </step>
   <step>
    <para>
     すべてのクライアントの登録を一覧にして、クライアントが正常に登録解除されているかどうかを確認します。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> smt-list-registrations</screen>
   </step>
   <step>
    <para>
     クライアントのホスト名がまだこのコマンドの出力に一覧表示されている場合は、最初の列からクライアントの<literal>固有のID</literal>を取得します。(クライアントは複数のIDで一覧表示されている場合があります。)
    </para>
   </step>
   <step>
    <para>
     このクライアントの登録を削除します。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> smt-delete-registration -g <replaceable>UNIQUE_ID</replaceable></screen>
   </step>
    <step>
    <para>
     クライアントが複数のIDで一覧表示されている場合は、その固有のIDのそれぞれについてこのステップを繰り返します。
    </para>
   </step>
   <step>
    <para>
     次のコマンドを再実行して、クライアントが正常に登録解除されているかどうかを確認します。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> smt-list-registrations</screen>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec-update-preparation-disk">
  <title>ディスクスペース</title>

  <para>
   ソフトウェアは、バージョンが上がるたびに増加する傾向があります。そのため、更新する前に、使用可能名パーティションの容量を調べてください。ディスク容量が不足する可能性がある場合は、データをバックアップしてから、パーティションのサイズを変更するなどして、使用可能な容量を増やしてください。各パーティションに必要な容量を決定する一般的なルールはありません。必要な容量は、特定のパーティションプロファイルおよび選択したソフトウェアによって異なります。
  </para>

  <note>
   <title>YaSTでの十分な容量の自動確認</title>
   <para>
    更新手順の実行中に、YaSTは空きディスク容量を確認し、インストールで使用可能な容量を超える可能性がある場合は、ユーザに警告を表示します。その場合、更新を実行すると、「システムが使用できなくなる」<emphasis/>ことがあります。操作の内容を(事前のテストによって)確実に把握している場合にのみ、この警告をスキップして更新を続行できます。
   </para>
  </note>
  
  <sect2 xml:id="sec-update-preparation-disk-space">
   <title>Btrfs以外のファイルシステムにおける空きディスク容量の確認</title>
   <para>
    <command>df</command>コマンドを使用して、使用可能なディスク容量を表示できます。たとえば、<xref linkend="ex-update-df"/>では、ルートパーティションは<filename>/dev/hda3</filename>です(<filename>/</filename>としてマウントされています)。
   </para>
   <example xml:id="ex-update-df">
    <title><command>df -h</command>の出力例</title>

<screen os="sles">Filesystem     Size  Used Avail Use% Mounted on
/dev/sda3       74G   22G   53G  29% /
tmpfs          506M     0  506M   0% /dev/shm
/dev/sda5      116G  5.8G  111G   5% /home
/dev/sda1       44G    4G   40G   9% /data</screen>
   </example>
  </sect2>

  <sect2 xml:id="sec-update-preparation-disk-btrfs-on-root">
   <title>Btrfsファイルシステムの空きディスク容量の確認</title>
   
   <para>
     Btrfsファイルシステムでは、<command>df</command>の出力は誤解を招く可能性があります。生データが割り当てる領域とは別に、Btrfsファイルシステムもメタデータ用の領域を割り当てて使用するからです。
    </para>
    <para>
     その結果、まだ大量の領域を使用できるように見えても、Btrfsファイルシステムによって領域不足がレポートされることがあります。その場合、メタデータ用に割り当てられた領域はすべて使用されています。<phrase os="sles">Btrfsファイルシステムでの使用済みおよび使用可能なスペースを確認する方法の詳細については、<xref linkend="sec-filesystems-major-btrfs-suse-space"/>を参照してください。</phrase>詳細については、<command>man 8 btrfs-filesystem</command>および<link xlink:href="https://btrfs.wiki.kernel.org/index.php/FAQ"/>を参照してください。
   </para>
   <para>
    マシンでBtrfsをルートファイルシステムとして使用している場合、十分な空き容量があることを確認します。すべてのマウント済みパーティションの使用可能なスペースを確認します。多くの場合、アップグレードには、新しいスナップショット用に、現在のルートファイルシステムと同じディスク容量が必要になります(<filename>/.snapshot</filename>がない場合)。
   </para>
   <para>
    効果が実証されている推奨事項は次のとおりです。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Btrfsを含めてすべてのファイルシステムで、大きなRPMをダウンロードし、インストールできるだけの空きディスク容量が必要です。古いRPMが使用している容量は、新しいRPMのインストール後にのみ解放されます。
     </para>
    </listitem>
    <listitem>
     <para>
      スナップショットがあるBtrfsの場合、現在のインストールで使用している容量と同じだけの空き容量が最低でも必要です。現在のインストール環境の2倍の空き容量を確保することを推奨します。
     </para>
     <para>
      十分な空き容量がない場合、<command>snapper</command>を使用して古いスナップショットを削除することができます。
     </para>
<screen><prompt role="root">root # </prompt><command>snapper</command> list
<prompt role="root">root # </prompt><command>snapper</command> delete NUMBER</screen>
     <para>
      しかし、すべてのケースでこの方法が役立つとは限りません。マイグレーションの前には、大半のスナップショットが占めている容量はごくわずかです。
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-autoyast-profiles" os="sles">
  <title>SLE 12から15へAutoYaSTプロファイルの変更</title>
  <para>
   AutoYaSTプロファイルのマイグレート方法については、<xref linkend="appendix-ay-12vs15"/>を参照してください。
  </para>
 </sect1>

 <sect1 xml:id="sec-update-preparation-smt-to-rmt" os="sles">
  <title>登録管理ツール(SMT)サーバのアップグレード</title>
  <para>
   SMTを実行しているサーバには特別なアップグレード手順が必要です。『<citetitle>Repository Management Tool Guide</citetitle>』の<xref linkend="cha-rmt-migrate"/>を参照してください。
  </para>
 </sect1>
 <sect1 xml:id="sec-update-preparation-multiversion">
  <title>カーネルのマルチバージョンサポートの一時的な無効化</title>
  <para>
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>では、<filename>/etc/zypp/zypp.conf</filename>の各設定を有効にすることで、複数のカーネルバージョンをインストールできます。特定のサービスパックにアップグレードする場合、この機能のサポートを一時的に無効化する必要があります。更新が正常に完了したら、マルチバージョンサポートを再び有効にできます。マルチバージョンサポートを無効にするには、<filename>/etc/zypp/zypp.conf</filename>の各行をコメント化します。結果は次のようになります。
  </para>
<screen>#multiversion = provides:multiversion(kernel)
#multiversion.kernels = latest,running</screen>
  <para>
   更新が正常に完了した後にこの機能を再アクティブ化するには、コメント記号を削除します。マルチバージョンサポートの詳細については、<xref linkend="sec-tuning-multikernel-enable"/>を参照してください。
  </para>
 </sect1>
 <sect1 xml:id="sec-update-preparation-zseries" os="sles">
  <title>IBM Zでのアップグレード</title>
  <para>IBM ZにインストールされたSUSE Linux Enterpriseをアップグレードするには、parmfileなどでカーネルパラメータ<command>Upgrade=1</command>を使用する必要があります。<xref linkend="sec-appdendix-parm" xrefstyle="HeadingOnPage"/>を参照してください。
  </para>
 </sect1>
 <sect1 xml:id="sec-update-preparation-ppc" os="sles" arch="power">
  <title>IBM POWER: Xサーバの起動</title>
  <para>
   SLES 12 for IBM POWERでは、ディスプレイマネージャがローカルのXサーバを起動しないように、デフォルトで設定されています。SLES 12 SP1ではこの設定は逆になっています。今は、ディスプレイマネージャはXサーバを起動します。
  </para>
  <para>
   アップグレード時に問題が発生するのを避けるため、<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>の設定は自動的には変更されません。アップグレード後にディスプレイマネージャにXサーバを起動させたい場合は、<filename>/etc/sysconfig/displaymanager</filename>で<envar>DISPLAYMANAGER_STARTS_XSERVER</envar>の設定を次のように変更します。
  </para>
  <screen>DISPLAYMANAGER_STARTS_XSERVER="yes"</screen>
 </sect1>
</chapter>
