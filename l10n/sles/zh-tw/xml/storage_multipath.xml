<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="storage_multipath.xml" version="5.0" xml:id="cha-multipath" xml:lang="zh-tw">
 <title>管理裝置的多重路徑 I/O</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  本章描述如何透過使用多重路徑 I/O (MPIO) 管理伺服器和區塊儲存裝置間多重路徑的容錯移轉和路徑負載平衡。
 </para>
 <sect1 xml:id="sec-multipath-intro">
  <title>瞭解多重路徑 I/O</title>

  <para>
   多重路徑是指伺服器與相同實體或邏輯區塊儲存裝置在伺服器中的主機匯流排介面卡與裝置的儲存控制器之間、跨多重實體路徑進行通訊的能力，通常是在光纖通道 (FC) 或 iSCSI SAN 環境中進行。
  </para>

  <para>
   Linux 多重路徑提供了連接容錯功能並可在各主動連接之間實現負載平衡。設定並執行多重路徑時，會自動隔離並識別裝置連接失敗，並將 I/O 重新路由至替代連接。
  </para>

  <para>
    多重路徑針對連接故障提供容錯，但不針對儲存裝置本身的故障提供容錯。針對後者的容錯是透過鏡像等互補技術實現的。
  </para>

  <sect2>
    <title>多重路徑的術語</title>
    <variablelist>
      <varlistentry>
	<term>
	  儲存陣列
	</term>
	<listitem>
	  <para>
	    包含許多磁碟和多個結構連接 (控制器) 的硬體裝置，為用戶端提供 SAN 或 NAS 儲存。儲存陣列通常具備 RAID 和容錯移轉功能並支援多重路徑。一直以來，主動/被動 (容錯移轉) 和主動/主動 (負載平衡) 儲存陣列的組態是有區別的。這些概念仍舊存在，但它們不過是新式硬體所支援的路徑群組和存取狀態概念的特殊情況。
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  主機、主機系統
	</term>
	<listitem>
	  <para>
	    執行 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 的電腦，用做<emphasis>儲存陣列</emphasis>的用戶端系統。
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  多重路徑對應、多重路徑裝置
	</term>
	<listitem>
	  <para>
	  一組<emphasis>路徑裝置</emphasis>。它代表儲存陣列上的儲存磁碟區，主機系統將其視為單個區塊裝置。
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  路徑裝置、低層級裝置
	</term>
	<listitem>
	  <para>
	    多重路徑對應的成員，通常是一個 SCSI 裝置。每個路徑裝置代表主機電腦與實際儲存磁碟區之間的唯一連接，例如，來自 iSCSI 工作階段的邏輯單位。在 Linux 裝置對應程式多重路徑下，路徑裝置在主機系統中保持可見且可存取。
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  WWID、UID、UUID
	</term>
	<listitem>
	  <para>
	    「全球通用識別碼」、「唯一識別碼」、「通用唯一識別碼」。WWID 是儲存磁碟區的一個內容，因此，它在多重路徑對應的所有路徑裝置之間保持相同。<filename>multipath-tools</filename> 使用 WWID 來確定應將哪些低層級裝置組合到多重路徑對應中。多重路徑依賴使用 <command>udev</command> 來確定路徑裝置的 WWID。多重路徑對應的 WWID 永遠不會變更。可以透過 <filename>/dev/disk/by-id/dm-uuid-mpath-<replaceable>WWID</replaceable></filename> 可靠存取多重路徑裝置。
	  </para>
	  <para>
	    WWID 應與可設定的<emphasis>對應名稱</emphasis>相區分 (請參閱<xref linkend="sec-multipath-names" xrefstyle="SectTitleOnPage"/>)。
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  uevent、udev 事件
	</term>
	<listitem>
	  <para>
	    由核心傳送至使用者空間並由 <command>udev</command> 子系統處理的事件。在新增、移除裝置或變更裝置內容時會產生 uevent。
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  裝置對應程式
	</term>
	<listitem>
	  <para>
	    Linux 核心中用於建立虛擬區塊裝置的架構。對應裝置的 I/O 操作將重新導向至基礎區塊裝置。裝置對應可以堆疊。裝置對應程式實作自身的事件訊號 (也稱為「裝置對應程式事件」或「dm 事件」)。
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
 </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-hardware">
  <title>硬體支援</title>

  <para>
   多重路徑驅動程式和工具可在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 支援的所有架構上使用。不區分通訊協定的一般驅動程式適用於市面上大多數支援多重路徑的儲存硬體。一些儲存陣列廠商會提供其自己的多重路徑管理工具。請參閱廠商的硬體文件以決定所需設定。
  </para>

  <sect2 xml:id="sec-multipath-hardware-implementations">
    <title>多重路徑實作：裝置對應程式和 NVMe</title>

    <para>
      Linux 中傳統的一般多重路徑實作使用裝置對應程式架構。對於大多數裝置類型 (例如 SCSI 裝置)，裝置對應程式多重路徑是唯一可用的實作。裝置對應程式多重路徑可自由設定，且非常靈活。
    </para>
    <para>
      Linux <emphasis>NVM Express</emphasis> (NVMe) 核心子系統在核心中原生實作多重路徑。這種實作可以降低 NVMe 裝置 (通常是延遲極低的快速裝置) 的計算負荷。原生 NVMe 多重路徑不需要使用者空間元件。從 SLE 15 開始，原生多重路徑一直是 NVMe 多重路徑裝置的預設功能。
    </para>
    <para>
      本章的其餘內容介紹裝置對應程式多重路徑。
    </para>
  </sect2>

  <sect2 xml:id="sec-multipath-hardware-autodetect">
    <title>針對多重路徑的儲存陣列自動偵測</title>
    <para>
      裝置對應程式多重路徑是一般性的技術。多重路徑裝置偵測只要求核心偵測低層級 (例如 SCSI) 裝置，並要求裝置內容可靠地將多個低層級裝置識別為同一個磁碟區的不同「路徑」，而不是實際不同的裝置。
    </para>
    <para>
      <filename>multipath-tools</filename> 套件依廠商和產品名稱偵測儲存陣列。它已驗證多種不同儲存產品的內建組態預設值。請參閱儲存陣列的硬體文件；某些廠商為 Linux 多重路徑組態提供了具體的建議。若要查看在系統上偵測到的內建儲存設定，請執行指令 <command>multipath -T</command>，具體請參閱<xref linkend="sec-multipath-mpiotools-multipath" xrefstyle="SectTitleOnPage"/>。
    </para>
   <para>
    如果您需要對儲存陣列的內建組態套用變更，請建立並設定 <filename>/etc/multipath.conf</filename> 檔案。請參閱<xref linkend="sec-multipath-conf-file" xrefstyle="SectTitleOnPage"/>。
   </para>
   <note>
     <para>
       <filename>multipath-tools</filename> 為許多儲存陣列提供內建預設。給定儲存產品存在此類預設<emphasis>並不意味著</emphasis>該儲存產品的廠商已使用 <systemitem>dm-multipath</systemitem> 測試了該產品，也不意味著該廠商認可或支援對該產品使用 <systemitem>dm-multipath</systemitem>。若有支援相關的問題，請始終參閱原始廠商文件。
     </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-hardware-handlers">
   <title>需要特定硬體處理器的儲存陣列</title>
   <para>
    某些儲存陣列需要執行特殊指令才能從一個路徑容錯移轉至另一個路徑，或需要使用非標準的錯誤處理方法。這些特殊指令和方法由 Linux 核心中的硬體處理器實作。新式 SCSI 儲存陣列支援 SCSI 標準中定義的「非對稱邏輯單位存取」(ALUA) 硬體處理器。除 ALUA 之外，SLE 核心還包含 Netapp E 系列 (RDAC)、Dell/EMC CLARiiON CX 陣列系列和 HP 傳統陣列的硬體處理器。從 Linux 核心 4.4 開始，Linux 核心已自動偵測到大多數陣列 (包括所有支援 ALUA 的陣列) 的硬體處理器。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-planning">
  <title>規劃多重路徑</title>

  <para>
   使用本節中的準則規劃多重路徑 I/O 解決方案。
  </para>

  <sect2 xml:id="sec-multipath-planning-prereq">
   <title>先決條件</title>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      您用於多重路徑裝置的儲存陣列必須支援多重路徑。如需詳細資訊，請參閱 <xref linkend="sec-multipath-hardware" xrefstyle="SectTitleOnPage"/>。
     </para>
    </listitem>
    <listitem>
     <para>
      只有在伺服器中的主機匯流排配接器和區塊儲存裝置的主機匯流排控制器之間存在多重實體路徑時，才需要設定多重路徑。
     </para>
    </listitem>
    <listitem>
     <para>
      對於某些儲存陣列，廠商提供了自己的多重路徑軟體來管理陣列之實體和邏輯裝置的多重路徑。在這種情況下，您應根據廠商的指示設定那些裝置的多重路徑。
     </para>
    </listitem>
    <listitem>
     <para>
      在虛擬化環境中使用多重路徑時，將在主機伺服器環境中控制多重路徑。請先設定裝置的多重路徑，然後才能將其指派給虛擬訪客機器。
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-types">
    <title>多重路徑安裝類型和 initramfs</title>
    <sect3 xml:id="sec-multipath-planning-type-root">
      <title>根檔案系統位於多重路徑上 (SAN-boot)</title>
      <para>
	根檔案系統位於多重路徑裝置上 (通常，所有其他檔案系統也位於多重路徑儲存上)。對於僅使用 SAN 或 NAS 儲存的無磁碟伺服器，情況往往如此。在此類系統上，需要支援多重路徑才能開機，並且必須在 initramfs (initrd) 中啟用多重路徑。請參閱<xref linkend="sec-multipath-initrd-sync" xrefstyle="SectTitleOnPage"/>。
      </para>
    </sect3>
    <sect3 xml:id="sec-multipath-planning-type-noroot">
      <title>根檔案系統位於本地磁碟上</title>
      <para>
	根檔案系統 (可能還包括其他某些檔案系統) 位於本地儲存中，例如，位於直接附加的 SATA 磁碟或本地 RAID 上，但系統額外使用多重路徑 SAN 或 NAS 儲存中的檔案系統。可透過三種不同的方式設定此系統類型：
      </para>
      <variablelist>
      <varlistentry>
      <term>使用 root-on-multipath 設定</term>
      
	<listitem>
	  <para>
	  
	  所有區塊裝置 (包括本地磁碟) 是多重路徑對應的一部分。然後，此類設定將顯示為只有一個路徑的降級多重路徑對應。如果在使用 YaST 進行初始系統安裝期間啟用了多重路徑，則會建立此組態。這是最簡單的組態，但會產生效能負荷。
	  </para>
	</listitem>
	</varlistentry>
	<varlistentry>
	<term><systemitem>multipath-tools</systemitem> 忽略本地磁碟 </term>
	<listitem>
	  <para>
	    在此組態中，多重路徑在 initramfs 中啟用。可以在安裝後透過黑名單或 <literal>find_multipaths</literal> 組態參數實現這種組態。
	  </para>
	</listitem>
	</varlistentry>
	<varlistentry xml:id="vl-multipath-planning-type-noroot-noinitrd">
	<term>在 initramfs 中停用多重路徑</term>
	<listitem>
	  <para>
	  如果在使用 YaST 進行初始系統安裝期間未啟用多重路徑 (原因是 YaST 未偵測到多重路徑裝置，或者使用者在安裝期間選擇不啟用多重路徑)，則會建立此設定。這是 <xref linkend="sec-multipath-initrd-sync" xrefstyle="SectTitleOnPage"/> 不適用的唯一一種情況。
	  </para>
	</listitem>
      </varlistentry>
      </variablelist>
      <para>
	
	
      </para>
    </sect3>
    <sect3 xml:id="sec-multipath-initrd-sync">
      <title>使初始 RAM 磁碟保持同步</title>
      <important>
	<para>
	  確定初始 RAM 磁碟和開機的系統在對所有區塊裝置使用多重路徑方面保持一致行為。套用多重路徑組態變更後重建 initramfs。
	</para>
      </important>
      <para>如果在系統中啟用了多重路徑，那麼也需要在 <filename>initramfs</filename> 中啟用多重路徑，反之亦然。此規則的唯一例外情況是<xref linkend="sec-multipath-planning-type-noroot" xrefstyle="SectTitleOnPage"/>中所述的選項 <xref linkend="vl-multipath-planning-type-noroot-noinitrd"/>。
      </para>
      <para>
  多重路徑組態必須在開機的系統與 initrd 之間同步。因此，如果 <filename>/etc/multipath.conf</filename>、<filename>/etc/multipath/wwids</filename>、<filename>/etc/multipath/bindings</filename> 或者其他與裝置識別相關的組態檔案或 udev 規則發生變更，則需要使用以下指令重建初始 RAM FS：
</para>
  <screen><prompt>&gt; </prompt><command>sudo</command> dracut -f</screen>
      <para>
  如果 <filename>initrd</filename> 與系統不同步，系統將無法正常開機，啟動程序可能顯示應急外圍程序。如需如何避免或修復此類情況的說明，請參閱<xref linkend="sec-multipath-trouble-root"/>。
      </para>
      <para>
  若要在非一般情況下重建初始 RAM 磁碟 (例如，從救援系統重建，或使用核心參數 <literal>multipath=off</literal> 開機後重建)，必須格外小心。當且僅當 <command>dracut</command> 在建立 initrd 期間偵測到根檔案系統位於多重路徑裝置上時，它才會自動在初始 RAM 磁碟中包含多重路徑支援。在這種情況下，需要明確啟用或停用多重路徑。
      </para>
      <para>
      若要在 <filename>initrd</filename> 中啟用多重路徑支援，請執行以下指令：
      </para>
      <screen>
<prompt>&gt; </prompt><command>sudo</command> dracut --force --add multipath
</screen>
<para>
若要在 <filename>initrd</filename> 中停用多重路徑支援，請執行以下指令：
</para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> dracut --force --omit multipath
</screen>
    </sect3>
  </sect2>
  <sect2 xml:id="sec-multipath-planning-disks">
   <title>磁碟管理任務</title>
   <para>
     使用協力廠商 SAN 陣列管理工具或儲存陣列的使用者介面來建立邏輯裝置，並將其指定給主機。確定在兩端正確設定主機身分證明。
   </para>
   <para>
     可以在執行中的主機上新增或移除磁碟區，但偵測變更時可能需要重新掃描 SCSI 目標並在主機上重新設定多重路徑。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-raid">
    <title>軟體 RAID 和複雜的儲存堆疊</title>
    <para>
      多重路徑在 SCSI 磁碟等基本儲存裝置的頂層設定。在多層儲存堆疊中，多重路徑始終位於底層。其他層 (例如軟體 RAID、邏輯磁碟區管理、區塊裝置加密等) 排布在多重路徑之上。因此，對於每個具有多重 I/O 路徑的裝置和要用於軟體 RAID 的裝置來說，您必須先設定多重路徑的裝置，然後才能嘗試建立軟體 RAID 裝置。
   </para>
   <para>
    如需為現有軟體 RAID 設定多重路徑的相關資訊，請參閱<xref linkend="sec-multipath-raid" xrefstyle="SectTitleOnPage"/>。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-ha">
   <title>高可用性解決方案</title>
   <para>
    叢集儲存資源的高可用性解決方案在每個節點上之多重路徑服務的基礎上執行。請確定每個節點上 <filename>/etc/multipath.conf</filename> 檔案中的組態設定在整個叢集中保持一致。
   </para>
   <para>
    確定多重路徑裝置在所有裝置中的名稱都相同。如需詳細資訊，請參閱<xref linkend="sec-multipath-names-ha"/>。
   </para>
   <para>
    用於 LAN 鏡像複製裝置的分散式複製區塊裝置 (DRBD) 高可用性解決方案在多重路徑的基礎上執行。對於每個具有多重 I/O 路徑的裝置和要用於 DRDB 解決方案的裝置來說，您必須先設定多重路徑的裝置，然後才能設定 DRDB。
   </para>
   <para>
     將多重路徑與依賴於使用共用儲存實現圍籬區隔的叢集軟體 (例如包含 <command>sbd</command> 的 <command>pacemaker</command>) 一起使用時必須格外小心。如需詳細資料，請參閱<xref linkend="sec-multipath-policies-default"/>。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-mpiotools">
  <title>多重路徑管理工具</title>

  <para>
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中的多重路徑支援以 Linux 核心的裝置對應程式多重路徑模組及 <systemitem>multipath-tools</systemitem> 使用者空間套件為基礎。使用多裝置管理公用程式 (<command>multipath</command>) 可以檢視多重路徑裝置的狀態。
  </para>

  <sect2 xml:id="sec-multipath-mpiotools-dm">
   <title>裝置對應程式多重路徑模組</title>
   <para>
    裝置對應程式多重路徑 (DM-MP) 模組為 Linux 提供了一般多重路徑功能。DM-MPIO 是 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中適用於 SCSI 和 DASD 裝置的慣用多重路徑解決方案，它也適用於 NVMe 裝置。 
   </para>
   <note>
     <title>將 DM-MP 用於 NVMe 裝置</title>
     <para>
       從 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 15 開始，建議將原生 NVMe 多重路徑 (請參閱<xref linkend="sec-multipath-hardware-implementations"/>) 用於 NVMe，並且預設已使用該功能。若要停用原生 NVMe 多重路徑並改用裝置對應程式多重路徑，請使用核心參數 <literal>nvme-core.multipath=0</literal> 開機。
     </para>
   </note>
   <para>
    DM-MPIO 可自動設定多重路徑子系統的多種設定。
   </para>
   <para>
    多重路徑精靈 <command>multipathd</command> 會自動探查路徑並進行分組，還會自動重新測試路徑，以便在先前發生故障的路徑恢復正常時，能自動重新啟用該路徑。這樣會將管理員對生產環境的關注需求降到最低。
   </para>
   <para>
    DM-MPIO 防範的是裝置路徑中的失敗，而不是裝置本身的失敗。如果其中一個主動路徑遺失 (例如網路卡損壞或光纖纜線被移開)，則 I/O 會重新導向到其餘的路徑。如果所有主動路徑均發生故障，則必須喚醒非主動的次要路徑，因此容錯移轉最多會延遲 30 秒，具體視儲存陣列的內容而定。
   </para>
   <para>
    如果指向給定裝置的每個路徑都發生故障，則傳送至此裝置的 I/O 可能會在核心中排入佇列給定的時間，甚至無限期排入佇列 (在這種情況下，排入佇列的 IO 總量會受到系統記憶體的限制)。
   </para>
   <para>
    如果磁碟陣列有多個儲存處理器，請確保 SAN 交換器已連接到您要存取的 LUN 所屬的儲存處理器。在大多數磁碟陣列中，所有 LUN 都屬於兩個儲存處理器，因此兩個連接都處於主動模式。
   </para>
   <note>
    <title>儲存處理器</title>
    <para>
     在有些磁碟陣列中，儲存陣列透過儲存處理器來管理流量，因此每次只會顯示一個儲存處理器。一個處理器為主動，另外一個為被動，直到發生了失敗。如果您連接到錯誤的儲存處理器 (路徑為被動的處理器)，則可能找不到所需的 LUN，或雖然找到了 LUN，但在嘗試存取時會發生錯誤。
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-io-management">
   <title>多重路徑 I/O 管理工具</title>
   <para>
    套件 <systemitem class="resource">multipath-tools</systemitem> 和 <systemitem class="resource">kpartx</systemitem> 提供了執行自動路徑探查和分組的工具。
   </para>
   <variablelist>
     <varlistentry>
       <term>
	 <command>multipathd</command>
       </term>
       <listitem>
	 <para>
	   用於設定和監控多重路徑對應的精靈，以及用來與精靈程序通訊的指令行用戶端。請參閱<xref linkend="sec-multipath-mpiotools-multipathd" xrefstyle="SectTitleOnPage"/>。
	 </para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term>
	 <command>multipath</command>
       </term>
       <listitem>
	 <para>
	   用於執行多重路徑操作的指令行工具。請參閱<xref linkend="sec-multipath-mpiotools-multipath" xrefstyle="SectTitleOnPage"/>。
	 </para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term>
	 <command>kpartx</command>
       </term>
       <listitem>
	 <para>
	   用於管理多重路徑裝置上的「分割區」的指令行工具。請參閱<xref linkend="sec-multipath-configuration-partitioning" xrefstyle="SectTitleOnPage"/>。
	 </para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term>
	 <command>mpathpersist</command>
       </term>
       <listitem>
	 <para>
	   用於管理 SCSI 永久保留的指令行工具。請參閱<xref linkend="sec-multipath-mpiotools-mpathpersist" xrefstyle="SectTitleOnPage"/>。
	 </para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term>
       </term>
       <listitem>
	 <para>
	 </para>
       </listitem>
     </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-mdadm">
   <title>多重路徑裝置上的 MD RAID</title>
   <para>
     多重路徑上的 MD RAID 陣列由系統的 udev 規則自動設定。不需要在 <filename>/etc/mdadm.conf</filename> 中進行特殊的組態設定。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-multipathd">
    <title><command>multipathd</command> 精靈和 <command>multipath</command> 指令</title>
    <para>
      <command>multipathd</command> 是新式 Linux 裝置對應程式多重路徑設定中的最重要部分。此精靈通常是透過 systemd 服務 <filename>multipathd.service</filename> 啟動的。支援透過 <filename>multipathd.socket</filename> 啟用通訊端，但<emphasis>強烈建議</emphasis>在包含多重路徑硬體的系統上啟用 <filename>multipathd.service</filename>。
    </para>
    <para>
      <command>multipathd</command> 可處理以下任務 (其中一些任務依賴於組態)：
    </para>
      <itemizedlist>
	<listitem>
	  <para>
	    啟動時，偵測路徑裝置並設定從偵測到的裝置的多重路徑對應。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    監控 uevent 和裝置對應程式事件，根據需要在多重路徑對應中新增或移除路徑對應，並啟動容錯移轉或錯誤回復操作。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    探查到新的路徑裝置時立即設定新對應。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    定期檢查路徑裝置以偵測故障，並測試有故障的路徑，以便在它們恢復正常時將其重新啟用。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    如果所有路徑都發生故障，<command>multipathd</command> 將使對應失敗，或者將對應裝置切換到佇列模式，並使其排入佇列給定的一段時間。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    處理路徑狀態變更，並根據需要切換路徑群組或重新分組路徑。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    測試路徑的「臨界」狀態，即導致路徑狀態在正常運作與不正常運作之間來回變化的不穩定結構狀況。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    處理路徑裝置的 SCSI 永久保留金鑰 (如果已設定)。請參閱<xref linkend="sec-multipath-mpiotools-mpathpersist" xrefstyle="SectTitleOnPage"/>。
	  </para>
	</listitem>
      </itemizedlist>
    
    <para>
      <command>multipathd</command> 還用做指令行用戶端，透過將互動式指令傳送至執行中的精靈來處理這些指令。用於向精靈傳送指令的一般語法如下：
      </para>
      <screen>multipathd <replaceable>COMMAND</replaceable></screen>
      <para>
      或
      </para>
      <screen>multipathd -k"<replaceable>COMMAND</replaceable>"</screen>
     <para>
       若要進入與精靈交互的模式，請執行：
      </para>
      <screen>multipathd -k</screen>
      <note>
	<title>multipath 和 multipathd 如何協同運作</title>
	<para>
	  許多 <command>multipathd</command> 指令都有等同的 <command>multipath</command> 指令。例如，<command>multipathd show topology</command> 的作用與 <command>multipath -ll</command> 相同。兩者的明顯差別在於，multipathd 指令會查詢執行中 <command>multipathd</command> 精靈的內部狀態，而 multipath 則是直接從核心和 I/O 操作取得資訊。
	</para>
	<para>
	  如果多重路徑精靈正在執行，建議使用 <command>multipathd</command> 指令對系統進行修改。否則，該精靈可能會注意到組態變更並做出回應。在某些情況下，該精靈甚至可能嘗試復原已套用的變更。因此，如果偵測到執行中的精靈，<command>multipath</command> 會自動將某些可能有害的指令 (例如銷毀和衝洗對應) 委派給 <command>multipathd</command>。
	</para>
      </note>
   <para>下面的清單描述了常用的 <command>multipathd</command> 指令：</para>
   <variablelist>
    <varlistentry>
     <term>show topology</term>
     <listitem>
      <para>
	顯示目前的對應拓撲和內容。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show paths</term>
     <listitem>
      <para>
	顯示目前已知的路徑裝置。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show paths format &quot;<replaceable>FORMAT STRING</replaceable>&quot;</term>
     <listitem>
      <para>
	使用格式字串顯示目前已知的路徑裝置。使用 <command>show wildcards</command> 可查看支援的格式指定元清單。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show maps</term>
     <listitem>
      <para>
	顯示目前設定的對應裝置。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show maps format <replaceable>FORMAT STRING</replaceable></term>
     <listitem>
      <para>
	使用格式字串顯示目前設定的對應裝置。使用 <command>show wildcards</command> 可查看支援的格式指定元清單。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show config local</term>
     <listitem>
      <para>
	顯示 multipathd 目前使用的組態。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>reconfigure</term>
     <listitem>
      <para>
	重新讀取組態檔案、重新掃描裝置，並再次設定對應。這基本上等同於重新啟動 <command>multipathd</command>。有幾個選項在不重新啟動的情況下無法修改。man 頁面 <systemitem>multipath.conf(5)</systemitem> 中述及了這些選項。<option>reconfigure</option> 指令只會重新載入發生某種變更的對應裝置。若要強制重新載入每個對應裝置，請使用 <command>reconfigure all</command>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>del map <replaceable>MAP DEVICE NAME</replaceable></term>
     <listitem>
      <para>
	取消設定並刪除給定的對應裝置及其分割區。<replaceable>MAP DEVICE NAME</replaceable> 可以是裝置節點名稱 (例如 <filename>dm-0</filename>)、WWID 或對應名稱。如果該裝置正在使用中，則該指令會失敗。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
     可以使用其他指令來修改路徑狀態、啟用或停用佇列等。如需詳細資料，請參閱 <systemitem>multipathd(8)</systemitem>。
   </para>
  </sect2>
  <sect2 xml:id="sec-multipath-mpiotools-multipath">
   <title>multipath 指令</title>
   <para>
     雖然多重路徑設定大部分是自動完成的，並由 <command>multipathd</command> 處理，但 <command>multipath</command> 對於某些管理任務仍然很有用。下面提供了幾個指令用法範例：
   </para>
   <variablelist>
    <varlistentry>
     <term>multipath</term>
     <listitem>
      <para>
       偵測路徑裝置並設定找到的所有多重路徑對應。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -d</term>
     <listitem>
      <para>
	類似於 <command>multipath</command>，但不設定任何對應 (「模擬執行」)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
       設定特定的多重路徑裝置。<replaceable>DEVICENAME</replaceable> 可按照裝置節點名稱 (<filename>/dev/sdb</filename>) 或者按照 <literal>major:minor</literal> 格式的裝置號碼來表示成員路徑裝置。或者，它可以是多重路徑對應的 WWID 或名稱。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -f <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
	取消設定 (「衝洗」) 多重路徑對應及其分割區對應。如果該對應或其某個分割區正在使用中，則該指令會失敗。請參閱上文瞭解 <replaceable>DEVICENAME</replaceable> 的可能值。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -F</term>
     <listitem>
      <para>
	取消設定 (「衝洗」) 所有多重路徑對應及其分割區對應。如果這些對應正在使用中，則該指令會失敗。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -ll</term>
     <listitem>
      <para>
	顯示所有目前設定的多重路徑裝置的狀態和拓撲。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -ll <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
       顯示指定多重路徑裝置的狀態。請參閱上文瞭解 <replaceable>DEVICENAME</replaceable> 的可能值。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -t</term>
     <listitem>
      <para>
       顯示內部硬體表和使用中的多重路徑組態。如需組態參數的詳細資料，請參閱 <systemitem>multipath.conf(5)</systemitem>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -T</term>
     <listitem>
      <para>
	功能與 <command>multipath -t</command> 指令類似，但僅顯示在主機上偵測到的硬體的硬體項目。
      </para>
     </listitem>
    </varlistentry>
  </variablelist>
  <para>
    選項 <option>-v</option> 控制輸出的詳細程度。您可以使用介於 0 (僅限嚴重錯誤) 和 4 (詳細記錄) 之間的值。預設值為 <option>-v2</option>。可以在 <filename>/etc/multipath.conf</filename> 中使用 <option>verbosity</option> 選項來變更 <command>multipath</command> 和 <command>multipathd</command> 的預設詳細程度。
  </para>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-mpathpersist">
   <title>mpathpersist 公用程式</title>
   <para>
    <command>mpathpersist</command> 公用程式可用於管理裝置對應程式多重路徑裝置上的 SCSI 永久保留。永久保留用於僅限特定的 SCSI 啟動器存取 SCSI 邏輯單位。在多重路徑組態中，必須對給定磁碟區的所有 I_T 聯結 (路徑) 使用相同的保留金鑰；否則，在一個路徑上建立保留可能會導致其他路徑發生故障。
   </para>
   <para>
    將此公用程式與 <filename>/etc/multipath.conf</filename> 檔案中的 <literal>reservation_key</literal> 屬性配合使用，可設定 SCSI 裝置的永久保留。當且僅當設定了此選項時，<command>multipathd</command> 精靈才會檢查新探查到的路徑或重新啟用之路徑的永久保留。
   </para>
   <para>
    您可以將該屬性新增至 <filename>multipath.conf</filename> 的 <literal>defaults</literal> 區段或 <literal>multipaths</literal> 區段。例如：
   </para>
   <screen>multipaths {
    multipath {
        wwid             3600140508dbcf02acb448188d73ec97d
        alias            yellow
        reservation_key  0x123abc
    }
}</screen>
   <para>
    為適用於永久管理的所有 mpath 裝置設定 <literal>reservation_key</literal> 參數後，使用 <command>multipathd reconfigure</command> 重新載入組態。
   </para>
   <note>
     <title>
       使用「<option>reservation_key file</option>」
     </title>
     <para>
       如果在 <filename>multipath.conf</filename> 的 <literal>defaults</literal> 區段中使用了特殊值 <literal>reservation_key file</literal>，可以在檔案 <filename>/etc/multipath/prkeys</filename> 中使用 <command>mpathpersist</command> 動態管理保留金鑰。
     </para>
     <para>
       這是處理多重路徑對應永久保留的建議方法。從 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 12 SP4 開始可以使用這種方法。
     </para>
   </note>
   <para>
    使用指令 <command>mpathpersist</command> 查詢和設定由 SCSI 裝置組成的多重路徑對應的永久保留。如需詳細資料，請參閱手冊頁 <systemitem>mpathpersist(8)</systemitem>。指令行選項與 <systemitem>sg3_utils</systemitem> 套件中 <command>sg_persist</command> 的選項相同。<systemitem>sg_persist(8)</systemitem> 手冊頁詳細解釋了選項的語意。
   </para>
  
   <para>
     在以下範例中，<replaceable>DEVICE</replaceable> 表示裝置對應程式多重路徑裝置，例如 <filename>/dev/mapper/mpatha</filename>。以下指令與長選項一起列出，以方便閱讀。可以用單個字母取代所有選項，例如 <command>mpathpersist -oGS 123abc <replaceable>DEVICE</replaceable></command>。
   </para>
   <variablelist>
    <varlistentry>
     <term>mpathpersist --in --read-keys <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       讀取裝置的已註冊保留金鑰。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --in --read-reservation <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       顯示裝置的現有保留。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --register --param-sark=123abc <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       為裝置註冊一個保留金鑰。這會為主機上的所有 I_T 聯結 (路徑裝置) 新增保留金鑰。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --reserve --param-rk=123abc --prout-type=5 <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       使用先前註冊的金鑰為裝置建立類型 5 (「獨佔寫入 - 僅限註冊者」) 保留。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --release --param-rk=123abc --prout-type=5 <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       釋放裝置的類型 5 保留。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --register-ignore --param-sark=0 <replaceable>DEVICE</replaceable></term>
     <listitem>
       <para>
	 從裝置中刪除現有的保留金鑰。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-config">
  <title>針對多重路徑設定系統</title>

  <para/>

  <sect2 xml:id="sec-multipath-configuration-start">
   <title>啟用、啟動和停止多重路徑服務</title>
   <para>
    若要允許多重路徑服務在開機時啟動，請執行以下指令：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl enable multipathd</screen>
   <para>
    若要在執行中的系統上手動啟動該服務，請輸入：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl start multipathd</screen>
   <para>
    若要重新啟動該服務，請輸入：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl restart multipathd</screen>
   <para>
    在大多數情況下不需要重新啟動該服務。若要簡單地讓 <command>multipathd</command> 重新載入其組態，請執行：
   </para>
   <screen><prompt>&gt; </prompt><command>sudo</command> systemctl reload multipathd</screen>
   <para>
    若要檢查該服務的狀態，請輸入：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl status multipathd</screen>
   <para>
    若要停止目前工作階段中的多重路徑服務，請執行：
   </para>
   <screen>
<prompt>&gt; </prompt><command>sudo</command> systemctl stop multipathd
<prompt>&gt; </prompt><command>sudo</command> systemctl stop multipathd.socket
   </screen>
   <warning xml:id="ann-multipath-configuration-disable">
    <title>停用 multipathd</title>
    <para>
      強烈建議始終在可存取多重路徑硬體的每部主機上啟用並執行 <filename>multipathd.service</filename>。但是，有時可能由於移除了多重路徑硬體、要部署其他一些多重路徑軟體或出於疑難排解目的，而需要停用該服務。
    </para>
     <para>
       若要<emphasis>僅為單次系統開機</emphasis>停用多重路徑，請使用核心參數 <literal>multipath=off</literal>。這會影響開機的系統和初始 ramfs (在這種情況下不需要重建初始 ramfs)。
     </para>
     <para>
      若要<emphasis>永久</emphasis>停用 multipathd 服務，使其不會在系統今後開機時啟動，請執行以下指令：
     </para>
    <screen><prompt>&gt; </prompt><command>sudo</command> systemctl disable multipathd
<prompt>&gt; </prompt><command>sudo</command> systemctl disable multipathd.socket
<prompt>&gt; </prompt><command>sudo</command> dracut --force --omit multipath
</screen>
    <para>
      (每次停用或啟用多重路徑服務後，都需要重建 <systemitem>initrd</systemitem>。請參閱<xref linkend="sec-multipath-initrd-sync" xrefstyle="SectTitleOnPage"/>)。
    </para>
    <para>
     (選擇性) 此外，如果您還想確定不會設定多重路徑裝置 (即使是手動執行 <command>multipath</command> 時)，請在重建 initrd 之前，將以下行新增至 <filename>/etc/multipath.conf</filename> 的末尾：
    </para>
<screen>blacklist {
    wwid .*
}</screen>
   </warning>
  </sect2>

  <sect2 xml:id="sec-multipath-configuration-sandevs">
   <title>針對多重路徑準備 SAN 裝置</title>
   <para>
    在為 SAN 裝置設定多重路徑 I/O 之前，請視需要執行以下步驟準備 SAN 裝置：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      使用廠商工具對 SAN 進行設定並分區。
     </para>
    </listitem>
    <listitem>
     <para>
      使用廠商工具設定儲存陣列中主機 LUN 的權限。
     </para>
    </listitem>
    <listitem>
     <para>
       如果 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 未隨附主機匯流排介面卡 (HBA) 的驅動程式，請安裝 HBA 廠商提供的 Linux 驅動程式。如需更多詳細資料，請參閱廠商的特定指示。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    如果已偵測到多重路徑裝置並已啟用 <filename>multipathd.service</filename>，則應會自動建立多重路徑對應。如果未自動建立，請使用 <command>lsscsi</command> 之類的指令檢查低層級裝置的查探。另外，請使用 <command>journalctl -b</command> 檢查系統記錄。如果 HBA 驅動程式無法探查到 LUN，請檢查 SAN 中的區域設定。尤其是要檢查 LUN 遮罩是否處於使用中，且 LUN 是否正確地指定給伺服器。
   </para>
   <para>
    如果 HBA 驅動程式可以探查到 LUN，但未建立相應的區塊裝置，則可能需要使用額外的核心參數。請參閱 SUSE 知識庫中的 <citetitle>TID 3955167：Troubleshooting SCSI (LUN) Scanning Issues</citetitle> (SCSI (LUN) 掃描問題疑難排解)，網址為 <link xlink:href="https://www.suse.com/support/kb/doc.php?id=3955167"/>。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-configuration-partitioning">
    <title>多重路徑裝置上的分割區</title>
    <para>
      多重路徑對應可以像其路徑裝置一樣包含分割區。分割區表掃描以及為分割區建立裝置節點的操作是由 <command>kpartx</command> 工具在使用者空間中執行的。<command>kpartx</command> 由 udev 規則自動呼叫，通常不需要手動執行。從技術上講，kpartx 建立的「分割區」裝置也是裝置對應程式裝置，這些裝置只會對應父裝置中線性範圍的區塊。可以透過 <filename>/dev/disk/by-id/dm-uuid-part<replaceable>N</replaceable>-mpath-<replaceable>WWID</replaceable></filename> 可靠地存取多重路徑裝置的、具有已知 WWID 的第 <replaceable>N</replaceable> 個分割區。
    </para>
    <note>
      <title>停用 <command>kpartx</command> 呼叫</title>
      <para>
	可以在 <filename>/etc/multipath.conf</filename> 中使用 <literal>skip_kpartx</literal> 選項來停用對選定的多重路徑對應呼叫 <command>kpartx</command>。例如，在虛擬化主機上，這種做法可能很有用。
      </para>
    </note>
    <para>
      可以使用 YaST 或者使用 <command>fdisk</command> 或 <command>parted</command> 等工具來如常操作多重路徑裝置上的分割區表和分割區。當分割工具退出時，系統會記下套用於分割區表的變更。如果這種方法不起作用 (通常是因為裝置忙碌)，請嘗試執行 <command>multipathd reconfigure</command> 或將系統重新開機。
    </para>
    <para>
      不能以其他方式使用分割的多重路徑裝置。例如，不能從分割的裝置建立 LVM 實體磁碟區。在執行此操作之前，需要抹除分割區表。
    </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-conf-file">
  <title>多重路徑組態</title>

  <para>
    內建的 <systemitem>multipath-tools</systemitem> 預設值適用於大多數設定。如需進行自訂，需要建立一個組態檔案。主組態檔案是 <filename>/etc/multipath.conf</filename>。此外，與模式 <filename>/etc/multipath/conf.d/*.conf</filename> 相符的檔案將依字母順序讀取。如需瞭解優先順序規則，請參閱<xref linkend="sec-multipath-conf-file-syntax" xrefstyle="SectTitleOnPage"/>。
  </para>
  <note>
    <title>
      產生的組態檔案
    </title>
    <para>
      檔案 <filename>/etc/multipath/wwids</filename>、<filename>/etc/multipath/bindings</filename> 和 <filename>/etc/multipath/prkeys</filename> 由 <systemitem>multipath-tools</systemitem> 維護，分別用於儲存關於先前建立的多重路徑對應、對應名稱和 SCSI 永久保留之保留金鑰的永久資訊。請不要編輯產生的這些組態檔案。
      
    </para>
  </note>
  <note>
    <title>可設定的路徑</title>
    <para>
      除 <filename>/etc/multipath.conf</filename> 之外的其他組態目錄和檔案的路徑均可設定，但強烈建議不要變更這些路徑。
    </para>
  </note>

  <sect2 xml:id="sec-multipath-conf-file-create">
    <title>建立 /etc/multipath.conf 檔案</title>
   <para>
     您可以從內建預設值產生 <filename>multipath.conf</filename> 範本。這會使所有預設設定變為明確的設定。除非修改產生的檔案，否則 <systemitem>multipath-tools</systemitem> 的行為不會變更。若要產生組態範本，請執行：
   </para>
   <screen>multipath -T &gt;/etc/multipath.conf</screen>
   <para>
     或者，可以建立一個精簡的 <filename>/etc/multipath.conf</filename>，其中僅包含您要變更的設定。該行為等同於僅修改所產生範本中的相應行。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-syntax">
    <title>multipath.conf 語法</title>
    <para>
      <filename>/etc/multipath.conf</filename> 檔案使用由區段、子區段和屬性/值對組成的階層。
    </para>
    <itemizedlist>
      <listitem>
	<para>
	  記號由空格分隔。除非用引號括住 (參閱下文)，否則連續的空格字元將摺疊成一個空格。
	</para>
      </listitem>
      <listitem>
	<para>
	  使用井號 (<literal>#</literal>) 和驚嘆號 (<literal>! </literal>) 字元會導致將行中的其餘內容作為備註丟棄。
	</para>
      </listitem>
      <listitem>
	<para>
	  區段和子區段在同一行中以區段名稱和左大括號 (<literal>{</literal>) 開頭，並在獨立的一行中以右大括號 (<literal>}</literal>) 結尾。
	</para>
      </listitem>
      <listitem>
	<para>
	  屬性和值編寫在一行中。不支援行接續。
	</para>
      </listitem>
      <listitem>
	<para>
	  屬性和區段名稱必須是關鍵字。<systemitem>multipath.conf(5)</systemitem> 中闡述了允許的關鍵字。
	</para>
      </listitem>
      <listitem>
	<para>
	  值可以用雙引號 (<literal>&quot;</literal>) 括住。如果值包含空格或備註字元，則必須用引號將其括住。值中的雙引號字元由一對雙引號 (<literal>&quot;&quot;</literal>) 表示。
	</para>
      </listitem>
      <listitem>
	<para>
	  某些屬性的值是 POSIX 規則運算式 (請參閱 <systemitem>regex(7)</systemitem>)。它們區分大小寫且位置不固定，例如，「<literal>bar</literal>」與「<literal>rhabarber</literal>」相符。
	</para>
      </listitem>
    </itemizedlist>
    <bridgehead>語法範例</bridgehead>
    <screen>
section {
    subsection {
        attr1 value
	   attr2      "complex value!"
	attr3    "value with ""quoted"" word"
    } ! subsection end
} # section end
    </screen>
    <bridgehead>優先順序規則</bridgehead>
    <para>
      如<xref linkend="sec-multipath-conf-file" xrefstyle="HeadingOnPage"/>的開頭所述，可以建立多個組態檔案。其他檔案遵循與 <filename>/etc/multipath.conf</filename> 相同的語法規則。區段和屬性可以多次出現。如果在多個檔案中或者在同一檔案的多行中設定了同一個屬性，則讀取的最後一個值優先。
    </para>
  </sect2>
  <sect2 xml:id="sec-multipath-conf-file-sections">
   <title><filename>/etc/multipath.conf</filename> 區段</title>
   <para>
    <filename>/etc/multipath.conf</filename> 檔案由下列區段構成。某些屬性可以出現在多個區段中。如需詳細資料，請參閱<systemitem>multipath.conf(5)</systemitem>。
   </para>
   <variablelist>
    <varlistentry>
     <term>defaults</term>
     <listitem>
      <para>
       一般預設設定。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>blacklist</term>
     <listitem>
      <para>
       列出要忽略的裝置。請參閱<xref linkend="sec-multipath-blacklist" xrefstyle="HeadingOnPage"/>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>blacklist_exceptions</term>
     <listitem>
      <para>
       列出要進行多重路徑處理的裝置，即使它們與黑名單相符。請參閱<xref linkend="sec-multipath-blacklist" xrefstyle="HeadingOnPage"/>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>devices</term>
     <listitem>
      <para>
	特定於儲存控制器的設定。此區段是 <literal>device</literal> 子區段的集合。此區段中的值會覆寫 <filename>defaults</filename> 區段中相同屬性的值。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipaths</term>
     <listitem>
      <para>
	個別多重路徑裝置的設定。此區段是 <literal>multipath</literal> 子區段的清單。值將覆寫 <literal>defaults</literal> 和 <literal>devices</literal> 區段。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>overrides</term>
     <listitem>
       <para>
	 覆寫所有其他區段中的值的設定。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-apply">
   <title>套用 <filename>/etc/multipath.conf</filename> 修改</title>
   <para>
     若要套用組態變更，請執行
   </para>
   <screen><prompt>&gt; </prompt><command>sudo</command> multipathd reconfigure</screen>
   <para>
     請不要忘記與 initrd 中的組態同步。請參閱<xref linkend="sec-multipath-initrd-sync" xrefstyle="SectTitleOnPage"/>。
   </para>
   <warning>
     <title>不要使用 <command>multipath</command> 套用設定</title>
     <para>
       當 <command>multipathd</command> 正在執行時，請不要使用 <command>multipath</command> 指令套用新設定。否則可能導致設定不一致甚至損壞。
     </para>
   </warning>
   <note xml:id="sec-multipath-conf-file-verify">
     <title>驗證已修改的設定</title>
     <para>
       在套用已修改的設定之前，可以先執行以下指令對其進行測試：
     </para>
     <screen>multipath -d -v2</screen>
     <para>
       此指令顯示要使用建議的拓撲建立的新對應。但是，該指令不顯示是否會移除/衝洗對應。如需更多資訊，請執行以下指令：
     </para>
     <screen>multipath -d -v3 2&gt;&amp;1 | less</screen>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-wwid">
   <title>產生 WWID</title>
   <para>
    為了在不同的路徑上識別裝置，多重路徑使用每部裝置的全球通用識別碼 (WWID)。如果兩個裝置路徑的 WWID 相同，則假定它們代表同一部裝置。除非有絕對的理由，否則建議不要變更產生 WWID 的方法。如需詳細資料，請參閱 <command>man multipath.conf</command>。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-policies-default">
  <title>設定輪詢、排入佇列和錯誤回復的規則</title>

  <para>
   規則本節介紹用於實現容錯的最重要的 <systemitem>multipath-tools</systemitem> 組態參數。
  </para>
  <variablelist>
    <varlistentry>
      <term>polling_interval</term>
      <listitem>
	<para>
	  對路徑裝置進行狀態檢查的時間間隔 (以秒為單位)。預設值為 5 秒。將按照此時間間隔檢查有故障的裝置。對於正常的裝置，最多可將時間間隔增大至 <literal>max_polling_interval</literal> 秒。
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
     <term>no_path_retry</term>
     <listitem>
       <para>
	 確定當給定多重路徑對應的所有路徑都發生故障或消失時會發生什麼情況。可能的值包括：
       </para>
       <variablelist>
	 <varlistentry>
	   <term>fail</term>
	   <listitem>
	     <para>
	       使多重路徑對應上的 I/O 失敗。這會導致上層 (例如掛接的檔案系統) 發生 I/O 錯誤。受影響的檔案系統 (也可能是整個主機) 將進入降級模式。
	     </para>
	   </listitem>
	 </varlistentry>
	 <varlistentry>
	   <term>queue</term>
	   <listitem>
	     <para>
	       多重路徑對應上的 I/O 在裝置對應程式層中排入佇列，並在路徑裝置重新可用時傳送至裝置。這是避免遺失資料的最安全選項，但如果路徑裝置長時間不能恢復，則使用該值可能會造成負面影響。從裝置讀取資料的程序將會當機並處於不中斷睡眠 (<literal>D</literal>) 狀態。排入佇列的資料會佔用記憶體，而被佔用的記憶體不可供程序使用。最終，記憶體將會耗盡。
	     </para>
	   </listitem>
	 </varlistentry>
	 <varlistentry>
	   <term><replaceable>N</replaceable></term>
	   <listitem>
	     <para>
	       <replaceable>N</replaceable> 是一個正整數。使對應裝置保持佇列模式 <replaceable>N</replaceable> 個輪詢間隔。在這段時間過去後，<command>multipathd</command> 將使對應裝置失敗。如果 <literal>polling_interval</literal> 為 5 秒且 <literal>no_path_retry</literal> 為 6，則 <command>multipathd</command> 會將 I/O 排入佇列大約 6 * 5 = 30 秒，然後使對應裝置上的 I/O 失敗。用心選擇超時值通常可以在<literal>使 I/O 失敗</literal>與<literal>排入佇列</literal>之間合理權衡。
	     </para>
	   </listitem>
	 </varlistentry>
       </variablelist>
     </listitem>
    </varlistentry>
  </variablelist>
  <para>
   多重路徑 I/O 的目的是在儲存系統與伺服器之間提供連接容錯。需要的預設行為視伺服器是獨立伺服器還是高可用性叢集中的節點而定。
  </para>

  <para>
   如果您為獨立伺服器設定了多重路徑 I/O，<literal>no_path_retry</literal> 設定可使伺服器作業系統在盡可能長的時間內不收到 I/O 錯誤。它將訊息排入佇列，直到多重路徑容錯移轉發生並提供有效的連接為止。
  </para>

  <para>
   為高可用性叢集中的節點設定多重路徑 I/O 時，您希望多重路徑報告 I/O 故障以觸發資源容錯移轉，而不是等待多重路徑容錯移轉得以解決。在叢集環境中，您必須修改 <literal>no_path_retry</literal> 設定，以確保在與儲存系統的連接中斷時，叢集節點會收到與叢集驗證程序相關的 I/O 錯誤 (建議設為 heartbeat 容錯的 50%)。此外，您還希望將多重路徑 I/O 錯誤回復設為手動，以避免因路徑故障而造成資源的乒乓效應。
  </para>

  <para>
   <filename>/etc/multipath.conf</filename> 檔案應包含 <command>defaults</command> 區段，您可在其中指定輪詢、排入佇列和錯誤回復的預設行為。如果 <command>device</command> 區段中沒有指定此欄位，系統會為該 SAN 組態套用預設設定。
  </para>

  <para>
   以下各項是已編譯的預設設定。除非您透過建立並設定個人化的 <filename>/etc/multipath.conf</filename> 檔案來覆寫這些值，否則將會使用它們。
  </para>

<screen>defaults {
  verbosity 2
#  udev_dir is deprecated in SLES 11 SP3
#  udev_dir              /dev
  polling_interval      5
#  path_selector default value is service-time in SLES 11 SP3
#  path_selector         "round-robin 0"
  path selector         "service-time 0"
  path_grouping_policy  failover
#  getuid_callout is deprecated in SLES 11 SP3 and replaced with uid_attribute
#  getuid_callout        "/usr/lib/udev/scsi_id --whitelisted --device=/dev/%n"
#  uid_attribute is new in SLES 11 SP3
  uid_attribute         "ID_SERIAL"
  prio                  "const"
  prio_args             ""
  features              "0"
  path_checker          "tur"
  alias_prefix          "mpath"
  rr_min_io_rq          1
  max_fds               "max"
  rr_weight             "uniform"
  queue_without_daemon  "yes"
  flush_on_last_del     "no"
  user_friendly_names   "no"
  fast_io_fail_tmo      5
  bindings_file         "/etc/multipath/bindings"
  wwids_file            "/etc/multipath/wwids"
  log_checker_err       "always"

  retain_attached_hw_handler  "no"
  detect_prio           "no"
  failback              "manual"
  no_path_retry         "fail"
  }</screen>

  <para>
   如需設定輪詢、排入佇列和錯誤回復規則的相關資訊，請參閱<xref linkend="sec-multipath-policies-failover" xrefstyle="SectTitleOnPage"/> 中的下列參數：
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <xref linkend="vle-polling-interval" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="vle-no-path-retry" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="vle-failback" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
  </itemizedlist>

  <para>
   修改 <filename>/etc/multipath.conf</filename> 檔案後，必須在系統上執行 <command>dracut</command> <option>-f</option> 重新建立 <filename>initrd</filename>，然後重新啟動伺服器，變更才會生效。如需詳細資料，請參閱<xref linkend="sec-multipath-conf-file-apply"/>。
  </para>
 </sect1>
 <sect1 xml:id="sec-multipath-blacklist">
  <title>將非多重路徑裝置加入黑名單</title>

  <para>
   <filename>/etc/multipath.conf</filename> 檔案可能包含 <command>blacklist</command> 區段，其中會列出所有非多重路徑裝置。您可以透過 WWID (<literal>wwid</literal> 關鍵字)、裝置名稱 (<literal>devnode</literal> 關鍵字) 或裝置類型 (<literal>device</literal> 區段) 將裝置列入黑名單。您還可以使用 <literal>blacklist_exceptions</literal> 區段，對透過 <literal>blacklist</literal> 區段中所用的正規表示式列入黑名單的一些裝置啟用多重路徑。
  </para>

  <note>
   <title>偏好的加入黑名單方法</title>
   <para>
    將裝置加入黑名單的慣用方法是透過 <emphasis>WWID</emphasis> 或透過<emphasis>廠商和產品</emphasis>進行。建議不要透過 <emphasis>devnode</emphasis> 加入黑名單，因為裝置節點可能會發生變化，因此對長久識別裝置無幫助。
   </para>
  </note>

  <warning>
   <title>multipath.conf 中的規則運算式</title>
   <para>
    <filename>/etc/multipath.conf</filename> 中的規則運算式一般情況下<emphasis>不</emphasis>會運作。僅在與通用字串比對時，它們才會運作。不過，多重路徑的標準組態已包含許多裝置和廠商的規則運算式。將這些規則運算式與其他規則運算式比對並不會運作。請務必僅與執行 <command>multipath -t</command> 後所顯示的字串比對。
   </para>
  </warning>

  <para>
   您一般可能會忽略非多重路徑裝置，例如 <literal>hpsa</literal>、<literal>fd</literal>、<literal>hd</literal>、<literal>md</literal>、<literal>dm</literal>、<literal>sr</literal>、<literal>scd</literal>、<literal>st</literal>、<literal>ram</literal>、<literal>raw</literal> 和 <literal>loop</literal>。例如，本地 SATA 硬碟和隨身碟沒有多重路徑。如果您希望 <command>multipath</command> 忽略單路徑裝置，請將它們加入 <command>blacklist</command> 區段中。
  </para>

  <note>
   <title>相容性</title>
   <para>
    關鍵字 <literal>devnode_blacklist</literal> 已被關鍵字 <literal>blacklist</literal> 取代。
   </para>
   <para>
    在 SUSE Linux Enterprise Server 12 中使用 glibc 提供的正規表示式。若要與任意字串相符，現在必須使用<literal>「.*」</literal>，而不是僅使用<literal>「*」</literal>。
   </para>
  </note>

  <para>
   例如，若要將本地裝置與 <filename>hpsa</filename> 驅動程式中的所有陣列列入黑名單，以免受到多重路徑的管理，則 <command>blacklist</command> 區段應為：
  </para>

<screen>blacklist {
      wwid "26353900f02796769"
      devnode "^(ram|raw|loop|fd|md|dm-|sr|scd|st)[0-9]*"
      devnode "^sd[a-z][0-9]*"
}</screen>

  <para>
   您也可以只將驅動程式中的分割區 (而不是整個陣列) 列入黑名單。例如，您可以使用以下正規表示式，只將 cciss 驅動程式中的分割區而非整個陣列列入黑名單：
  </para>

<screen>blacklist {
      devnode "^cciss!c[0-9]d[0-9]*[p[0-9]*]"
}</screen>

  <para>
   您可以在 blacklist 中新增 <literal>device</literal> 區段，並使用 <literal>vendor</literal> 和 <literal>product</literal> 關鍵字，按特定裝置類型列入黑名單。
  </para>

<screen>blacklist {
      device {
           vendor  "DELL"
           product ".*"
       }
}</screen>

  <para>
   您可以使用 <literal>blacklist_exceptions</literal> 區段，對透過 <literal>blacklist</literal> 區段中所用的正規表示式列入黑名單的一些裝置啟用多重路徑。您可以透過 WWID (<literal>wwid</literal> 關鍵字)、裝置名稱 (<literal>devnode</literal> 關鍵字) 或裝置類型 (<literal>device</literal> 區段) 新增例外。您必須以將相應裝置列入黑名單的相同方式指定例外。也就是說，<literal>wwid</literal> 例外適用於 <literal>wwid</literal> 黑名單，<literal>devnode</literal> 例外適用於 <literal>devnode</literal> 黑名單，而裝置類型例外適用於裝置類型黑名單。
  </para>

  <para>
   例如，如果您擁有來自不同廠商的裝置類型，可以針對所需的裝置類型啟用多重路徑。在 <literal>blacklist</literal> 區段中將所有廠商的裝置類型列入黑名單，然後在 <literal>blacklist_exceptions</literal> 區段中新增 <literal>device</literal> 區段，針對所需的裝置類型啟用多重路徑。
  </para>

<screen>blacklist {
      devnode "^(ram|raw|loop|fd|md|dm-|sr|scd|st|sda)[0-9]*"
      device {
           vendor  "DELL"
           product ".*"
       }
}

blacklist_exceptions {
      device {
           vendor  "DELL"
           product "MD3220i"
       }
}</screen>

  <para>
   您還可以使用 blacklist_exceptions 僅針對特定裝置啟用多重路徑。例如：
  </para>

<screen>blacklist {
      wwid ".*"
}

blacklist_exceptions {
        wwid "3600d0230000000000e13955cc3751234"
        wwid "3600d0230000000000e13955cc3751235"
}</screen>

  <para>
   修改 <filename>/etc/multipath.conf</filename> 檔案後，必須在系統上執行 <command>dracut</command> <option>-f</option> 重新建立 <filename>initrd</filename>，然後重新啟動伺服器，變更才會生效。如需詳細資料，請參閱<xref linkend="sec-multipath-conf-file-apply"/>。
  </para>

  <para>
   重新開機之後，當您發出 <command>multipath -ll</command> 指令時，這些本地裝置應不再列於多重路徑對應中。
  </para>

  <note>
   <title>使用 <literal>find_multipaths</literal> 選項</title>
   <para>
    從 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 12 SP2 開始，多重路徑工具支援 <filename>/etc/multipath.conf</filename> 中 <literal>defaults</literal> 區段內的 <literal>find_multipaths</literal> 選項。此選項會阻止多重路徑和 <systemitem class="daemon">multipathd</systemitem> 為只有單個路徑的裝置設定多重路徑對應 (如需詳細資料，請參閱 <command>man 5 multipath.conf</command>)。如此，在某些組態中，管理員就無需為本地 SATA 磁碟等建立黑名單項目。
   </para>
   <para>
    雖然使用 <literal>find_multipaths</literal> 選項看似很方便，但也有其弊端。它使得系統開機複雜化且速度變慢，因為對於發現的每部裝置，開機邏輯都需要等到探查了所有裝置之後才能確定裝置是否存在第二個路徑。此外，當一些路徑已關閉或在開機期間不可視時可能會出現問題 — 可能會錯誤地將裝置偵測為單路徑裝置並啟動，導致以後新增更多路徑的操作失敗。
   </para>
   <para>
    <literal>find_multipaths</literal> 會將 <filename>/etc/multipath/wwids</filename> 中所列的具有相符 WWID 的所有裝置視為多重路徑裝置。請注意，第一次啟用 <literal>find_multipaths</literal> 時不會產生任何效果，除非刪除或編輯了 <filename>/etc/multipath/wwids</filename>，因為所有先前存在的多重路徑對應 (包括單路徑對應) 都列於該 wwids 檔案中。在具有多重路徑根檔案系統的 SAN-boot 系統中，請務定 <filename>/etc/multipath/wwids</filename> 在初始 RAM 磁碟與檔案系統之間保持同步。
   </para>
   <para>
    總而言之，雖然在某些情況下使用 <literal>find_multipaths</literal> 可能很方便，但 SUSE 仍建議使用正確設定了黑名單和黑名單例外的預設組態。
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-multipath-names">
  <title>設定使用者易記的名稱或別名</title>

  <para>
   多重路徑裝置可透過其 WWID、使用者易記的名稱或您為其指定的別名來識別。<filename>/dev/sdn</filename> 和 <filename>/dev/dm-n</filename> 格式的裝置節點名稱可在重新開機時變更，並且每次可能都會指定給不同的裝置。裝置的 WWID、使用者易記的名稱和別名在重新開機期間始終不變，因此是識別裝置的最好方法。
  </para>

  <important>
   <title>建議使用永久的名稱</title>
   <para>
    由於以 <filename>/dev/sdn</filename> 與 <filename>/dev/dm-n</filename> 形式表示的裝置節點名稱會在系統重新開機時變更，因此最好使用其 WWID 來參考多重路徑裝置。此外，您還可以使用對應至 WWID 的使用者易記名稱或別名，以便在重新開機時唯一識別裝置。
   </para>
  </important>

  <para>
   下表介紹了 <filename>/etc/multipath.conf</filename> 檔案中可用於裝置的裝置名稱類型。如需 <filename>multipath.conf</filename> 設定的範例，請參閱 <filename>/usr/share/doc/packages/multipath-tools/multipath.conf.synthetic</filename> 檔案。
  </para>

  <table>
   <title>多重路徑裝置名稱類型比較</title>
   <tgroup cols="2">
    <colspec colnum="1" colname="1" colwidth="1667*"/>
    <colspec colnum="2" colname="2" colwidth="8334*"/>
    <thead>
     <row>
      <entry>
       <para>
        名稱類型
       </para>
      </entry>
      <entry>
       <para>
        描述
       </para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>
        WWID (預設)
       </para>
      </entry>
      <entry>
       <para>
        序列 WWID (全球識別碼) 是多重路徑裝置的識別碼，保證其全球唯一，永不變更。多重路徑中使用的預設名稱是邏輯單位的 ID，就是 <filename>/dev/disk/by-id</filename> 目錄中存放的 ID。例如，WWID 為 <literal>3600508e0000000009e6baa6f609e7908</literal> 的裝置列為 <filename>/dev/disk/by-id/scsi-3600508e0000000009e6baa6f609e7908</filename>。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        使用者易記
       </para>
      </entry>
      <entry>
       <para>
        <filename>/dev/mapper</filename> 目錄中的「裝置對應程式多重路徑」裝置名稱還參考了邏輯單位的 ID。這些多重路徑裝置名稱是使用者易記名稱，採用的格式為 <filename>/dev/mapper/mpath<replaceable>N</replaceable></filename>，例如 <filename>/dev/mapper/mpath0</filename>。這些名稱是唯一且永久的，因為它們使用 <filename>/var/lib/multipath/bindings</filename> 檔案來追蹤 UUID 與易記名稱之間的關聯。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        別名
       </para>
      </entry>
      <entry>
       <para>
        別名是管理員為多重路徑裝置指定的全域唯一名稱。別名會置換 WWID 及使用者易記的 <filename>/dev/mapper/mpath<replaceable>N</replaceable></filename> 名稱。
       </para>
       <para>
        如果您使用的是 user_friendly_names，請不要將別名設為 mpath<replaceable>N</replaceable> 格式。否則可能會與自動指定的使用者易記名稱產生衝突，導致提供的裝置節點名稱不正確。
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   <filename>/etc/multipath.conf</filename> 檔案中的全域多重路徑 <literal>user_friendly_names</literal> 選項用於啟用或停用對多重路徑裝置使用易記名稱的功能。如果將它設定為 <literal>no</literal> (預設值)，多重路徑會使用 WWID 做為裝置的名稱。如果將它設定為 <literal>yes</literal>，多重路徑會使用 <filename>/var/lib/multipath/bindings</filename> 檔案，在 <filename>/dev/mapper</filename> 目錄中以 <filename>mpath&lt;<replaceable>N</replaceable>&gt;</filename> 格式為裝置指定一個永久的唯一名稱。<literal>/etc/multipath.conf</literal> 檔案中的 <literal>bindings file</literal> 選項可用於指定 <filename>bindings</filename> 檔案的替代位置。
  </para>

  <para>
   <filename>/etc/multipath.conf</filename> 檔案中的全域多重路徑 <literal>alias</literal> 選項用於明確地為裝置指定名稱。如果為多重路徑裝置設定了別名，則會使用別名而不是 WWID 或易記名稱。
  </para>

  <para>
   在下列情況下，使用 <literal>user_friendly_names</literal> 選項可能會產生問題：
  </para>

  <variablelist>
   <varlistentry>
    <term>根裝置正在使用多重路徑：</term>
    <listitem>
     <para>
      如果系統根裝置正在使用多重路徑，而您使用了 <literal>user_friendly_names</literal> 選項，則會將 <filename>/var/lib/multipath/bindings</filename> 檔案中的使用者易記設定包含在 <filename>initrd</filename> 中。如果您之後變更儲存設定，例如新增或移除裝置，則 <filename>initrd</filename> 中的繫結設定會與 <filename>/var/lib/multipath/bindings</filename> 中的繫結設定不符。
     </para>
     <warning>
      <title>結合不相符項目</title>
      <para>
       <filename>initrd</filename> 與 <filename>/var/lib/multipath/bindings</filename> 之間的繫結不符會導致將錯誤的掛接點指定給裝置，進而造成檔案系統損毀及資料遺失。
      </para>
     </warning>
     <para>
      為了避免此問題發生，建議您對系統根裝置使用預設 WWID 設定。請勿將別名用於系統根裝置。裝置名稱將會不同，因此使用別名會使您失去透過核心指令行順利關閉多重路徑的功能。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>從另一個分割區掛接 /var：</term>
    <listitem>
     <para>
      <literal>user_friendly_names</literal> 組態檔案的預設位置是 <filename>/var/lib/multipath/bindings</filename>。如果 <filename>/var</filename> 資料不在系統根設備上，而是從另一個分割區掛接，則設定多重路徑時無法獲取 <filename>bindings</filename> 檔案。
     </para>
     <para>
      請確定 <filename>/var/lib/multipath/bindings</filename> 檔案位於系統根設備上，並且多重路徑可以找到它。例如，可以按如下所示操作：
     </para>
     <orderedlist spacing="normal">
      <listitem>
       <para>
        將 <filename>/var/lib/multipath/bindings</filename> 檔案移至 <filename>/etc/multipath/bindings</filename>。
       </para>
      </listitem>
      <listitem>
       <para>
        將 /<filename>etc/multipath.conf</filename> 之 <literal>defaults</literal> 區段中的 <literal>bindings_file</literal> 選項設定為這個新位置。例如：
       </para>
<screen>
defaults {
               user_friendly_names yes
               bindings_file "/etc/multipath/bindings"
}
</screen>
      </listitem>
     </orderedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>initrd 中存在多重路徑：</term>
    <listitem>
     <para>
      即使系統根裝置不在多重路徑上，<filename>initrd</filename> 中也有可能包含多重路徑。例如，如果系統根裝置位於 LVM 上，便可能會出現這種情況。如果您使用 <literal>user_friendly_names</literal> 選項並且 <filename>initrd</filename> 中存在多重路徑，則應該使用參數 <command>multipath=off</command> 開機，以免發生問題。
     </para>
     <para>
      這會在系統開機期間於 <filename>initrd</filename> 中停用多重路徑。系統開機之後，<filename>boot.multipath</filename> 與 <filename>multipathd</filename> 開機程序檔便能啟用多重路徑。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>HA 叢集中的多重路徑：</term>
    <listitem>
     <para>
      如需詳細資料，請參閱<xref linkend="sec-multipath-names-ha"/>。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   若要啟用使用者易記名稱或指定別名：
  </para>

  <procedure>
   <step>
    <para>
     使用 <systemitem class="username">root</systemitem> 權限在文字編輯器中開啟 <filename>/etc/multipath.conf</filename> 檔案。
    </para>
   </step>
   <step>
    <para>
     (選擇性) 修改 <filename>/var/lib/multipath/bindings</filename> 檔案的位置。
    </para>
    <para>
     替代路徑必須是系統根裝置上可存取的位置，並且多重路徑必須能夠找到它。
    </para>
    <substeps performance="required">
     <step>
      <para>
       將 <filename>/var/lib/multipath/bindings</filename> 檔案移至 <filename>/etc/multipath/bindings</filename>。
      </para>
     </step>
     <step>
      <para>
       將 /<filename>etc/multipath.conf</filename> 之 <literal>defaults</literal> 區段中的 <literal>bindings_file</literal> 選項設定為這個新位置。例如：
      </para>
<screen>
defaults {
          user_friendly_names yes
          bindings_file "/etc/multipath/bindings"
}
</screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     (選擇性，但不建議) 啟用使用者易記的名稱：
    </para>
    <substeps performance="required">
     <step>
      <para>
       取消 <literal>Defaults</literal> 區段及其結束括號的註解。
      </para>
     </step>
     <step>
      <para>
       取消 <literal>user_friendly_names option</literal> 的註解，然後將「否」值變更為「是」。
      </para>
      <para>
       例如：
      </para>
<screen>## Use user-friendly names, instead of using WWIDs as names.
defaults {
  user_friendly_names yes
}</screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     (選擇性) 在 <command>multipath</command> 區段中使用 <command>alias</command> 選項，為裝置指定您自己的名稱。
    </para>
    <para>
     例如：
    </para>
<screen>## Use alias names, instead of using WWIDs as names.
multipaths {
       multipath {
               wwid           36006048000028350131253594d303030
               alias             blue1
       }
       multipath {
               wwid           36006048000028350131253594d303041
               alias             blue2
       }
       multipath {
               wwid           36006048000028350131253594d303145
               alias             yellow1
       }
       multipath {
               wwid           36006048000028350131253594d303334
               alias             yellow2
       }
}
</screen>
    <important>
     <title>WWID 與 WWN 的對比</title>
     <para>
      在 <filename>/etc/multipath.conf</filename> 檔案中定義裝置別名時，請確定使用的是每個裝置的 WWID (例如 <filename>3600508e0000000009e6baa6f609e7908</filename>) 而不是其 WWN，後者會以 <filename>0x</filename> 取代裝置 ID 的第一個字元，例如 <filename>0x600508e0000000009e6baa6f609e7908</filename>。
     </para>
    </important>
   </step>
   <step>
    <para>
     儲存變更，然後關閉檔案。
    </para>
   </step>
   <step>
    <para>
     修改 <filename>/etc/multipath.conf</filename> 檔案後，必須在系統上執行 <command>dracut</command> <option>-f</option> 重新建立 <filename>initrd</filename>，然後重新啟動伺服器，變更才會生效。如需詳細資料，請參閱<xref linkend="sec-multipath-conf-file-apply"/>。
    </para>
   </step>
  </procedure>

  <para>
   若要直接使用整個 LUN (例如，若您使用 SAN 功能分割您的儲存區)，可為 <command>mkfs</command>、<filename>/etc/fstab</filename>、您的應用程式等使用 <filename>/dev/disk/by-id/xxx</filename> 名稱。分割的裝置會將 <filename>_part&lt;n&gt;</filename> 附加到裝置名稱中，例如 <filename>/dev/disk/by-id/xxx_part1</filename>。
  </para>

  <para>
   在 <filename>/dev/disk/by-id</filename> 目錄中，多重路徑對應裝置會以裝置的 <filename>dm-uuid*</filename> 名稱或別名 (如果在 <filename>/etc/multipath.conf</filename> 檔案中為它指定了別名) 表示。<filename>scsi-</filename> 與 <filename>wwn-</filename> 裝置名稱表示裝置的實體路徑。
  </para>

  <sect2 xml:id="sec-multipath-names-ha">
   <title>HA 叢集中的多重路徑裝置名稱</title>
   <para>
    請執行下列操作，來確定多重路徑裝置名稱在所有裝置中都相同：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      使用 UUID 及別名來確保多重路徑裝置名稱在叢集中的所有節點上都保持一致。別名在所有節點中必須是唯一的。將 <filename>/etc/multipath.conf</filename> 檔案從該節點複製到叢集中所有其他節點的 <filename>/etc/</filename> 目錄下。
     </para>
    </listitem>
    <listitem>
     <para>
      使用多重路徑對應裝置的連結時，請確定在 <filename>/dev/disk/by-id</filename> 目錄中指定 <filename>dm-uuid*</filename> 名稱或別名，而不是裝置的固定路徑例項。如需更多資訊，請參閱<xref linkend="sec-multipath-names" xrefstyle="SectTitleOnPage"/>。
     </para>
    </listitem>
    <listitem>
     <para>
      將 <literal>user_friendly_names</literal> 組態選項設為 <literal>no</literal> 以將其停用。使用者易記的名稱對於某個節點而言是唯一的，但是叢集中的每個節點可能無法為裝置指定相同的使用者易記名稱。
     </para>
    </listitem>
   </itemizedlist>
   <note>
    <title>使用者易記名稱</title>
    <para>
     如果您確實需要使用使用者易記名稱，則可以執行下列操作，強制系統定義的使用者易記名稱在叢集中的所有節點上都保持一致：
    </para>
    <procedure>
     <step>
      <para>
       在一個節點上的 <filename>/etc/multipath.conf</filename> 檔案中：
      </para>
      <orderedlist>
       <listitem>
        <para>
         將 <literal>user_friendly_names</literal> 組態選項設為 <literal>yes</literal> 以將其啟用。
        </para>
        <para>
         多重路徑會使用 <filename>/var/lib/multipath/bindings</filename> 檔案，在 <filename>/dev/mapper</filename> 目錄中以 <filename>mpath&lt;<replaceable>N</replaceable>&gt;</filename> 格式為裝置指定一個永久的唯一名稱。
        </para>
       </listitem>
       <listitem>
        <para>
         (選擇性) 設定 <literal>/etc/multipath.conf</literal> 檔案之 <literal>defaults</literal> 區段中的 <literal>bindings_file</literal> 選項，以指定 <filename>bindings</filename> 檔案的替代位置。
        </para>
        <para>
         預設位置為 <filename>/var/lib/multipath/bindings</filename>。
        </para>
       </listitem>
      </orderedlist>
     </step>
     <step>
      <para>
       設定節點上的所有多重路徑裝置。
      </para>
     </step>
     <step>
      <para>
       將 <filename>/etc/multipath.conf</filename> 檔案從該節點複製到叢集中所有其他節點的 <filename>/etc/</filename> 目錄下。
      </para>
     </step>
     <step>
      <para>
       將 <filename>bindings</filename> 檔案從該節點複製到叢集中所有其他節點上的 <filename>bindings_file</filename> 路徑中。
      </para>
     </step>
     <step>
      <para>
       修改 <filename>/etc/multipath.conf</filename> 檔案後，必須在系統上執行 <command>dracut</command> <option>-f</option> 重新建立 <filename>initrd</filename>，然後重新啟動節點，變更才會生效。如需詳細資料，請參閱<xref linkend="sec-multipath-conf-file-apply"/>。這適用於所有受影響的節點。
      </para>
     </step>
    </procedure>
   </note>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-policies-failover">
  <title>設定路徑容錯移轉規則與優先程度</title>

  <para>
   在 Linux 主機上，若一個儲存控制器有多個路徑，則每個路徑會顯示為獨立的區塊裝置，導致單個 LUN 有多個區塊裝置。裝置對應程式多重路徑服務會偵測到多個路徑具有同一個 LUN ID，然後會使用該 ID 建立新的多重路徑裝置。例如，若主機上有兩個 HBA 透過未分區的光纖通道交換器連接至具有兩個連接埠的某個儲存控制器，則該主機會探查到四個區塊裝置，即 <filename>/dev/sda</filename>、<filename>/dev/sdb</filename>、<filename>/dev/sdc</filename> 與 <filename>/dev/sdd</filename>。裝置對應程式多重路徑服務會建立單個區塊裝置 <filename>/dev/mpath/mpath1</filename>，由它來透過以上 4 個基礎區塊裝置重新路由 I/O。
  </para>

  <para>
   本節說明如何指定容錯移轉的規則及如何設定路徑的優先程度。請注意，修改 <filename>/etc/multipath.conf</filename> 檔案後，必須在系統上執行 <command>dracut</command> <option>-f</option> 重新建立 <filename>initrd</filename>，然後重新啟動伺服器，變更才會生效。如需詳細資料，請參閱<xref linkend="sec-multipath-conf-file-apply"/>。
  </para>

  <sect2 xml:id="sec-multipath-policies-failover-path">
   <title>設定路徑容錯移轉規則</title>
   <para>
    搭配 <option>-p</option> 選項使用 <command>multipath</command> 指令可設定路徑容錯移轉規則：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath <replaceable>DEVICENAME</replaceable> -p <replaceable>POLICY</replaceable></screen>
   <para>
    用以下其中一個規則選項取代 <replaceable>POLICY</replaceable>：
   </para>
   <table>
    <title>multipath -p 指令的群組規則選項</title>
    <tgroup cols="2">
     <colspec colnum="1" colname="1" colwidth="2381*"/>
     <colspec colnum="2" colname="2" colwidth="7620*"/>
     <thead>
      <row>
       <entry>
        <para>
         規則選項
        </para>
       </entry>
       <entry>
        <para>
         描述
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         failover
        </para>
       </entry>
       <entry>
        <para>
         (預設) 每個優先程度群組對應一個路徑。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         multibus
        </para>
       </entry>
       <entry>
        <para>
         所有路徑都在一個優先程度群組中。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         group_by_serial
        </para>
       </entry>
       <entry>
        <para>
         每個偵測到的序號對應一個優先程度群組。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         group_by_prio
        </para>
       </entry>
       <entry>
        <para>
         每個路徑優先程度值對應一個優先程度群組。優先程度由註標程式決定，在 <filename>/etc/multipath.conf</filename> 組態檔案中指定為 global、per-controller 或 per-multipath 選項。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         group_by_node_name
        </para>
       </entry>
       <entry>
        <para>
         每個目標節點名稱對應一個優先程度群組。目標節點名稱取自 <filename>/sys/class/fc_transport/target*/node_name</filename> 位置。
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect2>

  <sect2 xml:id="sec-multipath-policies-failover-prio">
   <title>設定容錯移轉優先程度</title>
   <para>
    您必須在 <filename>/etc/multipath.conf</filename> 檔案中手動輸入裝置的容錯移轉優先程度。<filename>/usr/share/doc/packages/multipath-tools/multipath.conf.annotated</filename> 檔案中提供了所有設定與選項的範例。
   </para>
   <sect3 xml:id="sec-multipath-policies-failover-prio-info">
    <title>瞭解優先程序群組與屬性</title>
    <para>
     <emphasis>優先程度群組</emphasis>是進入相同實體 LUN 的路徑集合。依預設，I/O 以輪替方式發佈到群組的所有路徑。<command>multipath</command> 指令會根據 SAN 的 path_grouping_policy 設定，在該 SAN 中自動為每個 LUN 建立優先程度群組。<literal></literal><command>multipath</command> 指令會將群組中路徑的數量乘以群組的優先程度，來決定哪個群組為主要群組。計算值最高的群組為主要群組。主要群組中的所有路徑都失敗時，計算值次高的優先程度群組成為主動群組。
    </para>
    <para>
     <emphasis>路徑優先程度</emphasis>是指定給路徑的整數值。值越大，優先程度越高。系統使用了外部程式來指定每個路徑的優先程度。對於指定的裝置，優先程度相同的路徑屬於同一個優先程度群組。
    </para>
    <para>
     <literal>prio</literal> 設定在 <filename>/etc/multipath.conf</filename> 檔案的 <literal>defaults{}</literal> 或 <literal>devices{}</literal> 區段中使用。當為 <literal>multipaths{)</literal> 區段中的個別 <literal>multipath</literal> 定義指定該設定時，系統會靜默地將其忽略。<literal>prio</literal> 行會指定優先程度排序器。如果優先程度排序器需要引數，您可以在另一行上使用 <literal>prio_args</literal> 關鍵字來指定該引數。
    </para>
    <bridgehead>Defaults 或 Devices 區段的 PRIO 設定</bridgehead>
    <variablelist>
     <varlistentry>
      <term><literal>prio</literal></term>
      <listitem>
       <para>
        指定要呼叫以取得路徑優先程度值的優先程度排序程式。系統會將每個路徑群組的權數加總，以判斷發生故障時要使用的下一個路徑群組。
       </para>
       <para>
        如果指定的優先程度排序器需要引數，請使用 <literal>prio_args</literal> 關鍵字進行指定。
       </para>
       <para>
        如果未指定任何 <literal>prio</literal> 關鍵字，則所有路徑的優先程度均相等。預設設定為 <literal>const</literal>，且 <literal>prio_args</literal> 設定沒有值。
       </para>
<screen>prio "const"
prio_args ""</screen>
       <para>
        優先程度排序器範例如下：
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2907*"/>
         <colspec colnum="2" colname="2" colwidth="7096*"/>
         <thead>
          <row>
           <entry>
            <para>
             優先程度排序程式
            </para>
           </entry>
           <entry>
            <para>
             描述
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>alua</literal>
            </para>
           </entry>
           <entry>
            <para>
             根據 SCSI-3 ALUA 設定產生路徑優先程度。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>const</literal>
            </para>
           </entry>
           <entry>
            <para>
             為所有路徑產生相同的優先程度。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>emc</literal>
            </para>
           </entry>
           <entry>
            <para>
             為 EMC 陣列產生路徑優先程度。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>hdc</literal>
            </para>
           </entry>
           <entry>
            <para>
             為 Hitachi HDS Modular 儲存陣列產生路徑優先程度。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>hp_sw</literal>
            </para>
           </entry>
           <entry>
            <para>
             為主動/待命模式下的 Compaq/HP 控制器產生路徑優先程度。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>ontap</literal>
            </para>
           </entry>
           <entry>
            <para>
             為 NetApp 陣列產生路徑優先程度。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>random</literal>
            </para>
           </entry>
           <entry>
            <para>
             為每個路徑產生隨機優先程度。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>rdac</literal>
            </para>
           </entry>
           <entry>
            <para>
             為 LSI/Engenio RDAC 控制器產生路徑優先程度。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>weightedpath</literal>
            </para>
           </entry>
           <entry>
            <para>
             依據您在 <literal>prio_args</literal> 的引數中指定的加權值產生路徑優先程度。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>path_latency</literal>
            </para>
           </entry>
           <entry>
            <para>
             依據延遲演算法產生路徑優先程度，您可以透過 <literal>prio_args</literal> 關鍵字來設定該演算法。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
    </variablelist>
    <bridgehead><literal>prio_args</literal> 引數</bridgehead>
    <para>
     這些是需要引數的優先程度排序器的引數。大多數 <literal>prio</literal> 程式都不需要引數。沒有預設值。該值取決於 <literal>prio</literal> 設定以及優先程度排序器是否需要以下任何引數：
    </para>
    <variablelist>
     <varlistentry>
      <term>weighted</term>
      <listitem>
       <para>
        需要格式為 <literal>[hbtl|devname|serial|wwn]</literal>
        <replaceable>REGEX1</replaceable> <replaceable>PRIO1</replaceable>
        <replaceable>REGEX2</replaceable> <replaceable>PRIO2</replaceable>... 的值
       </para>
       <para>
        規則運算式必須採用 SCSI H:B:T:L 格式，例如 1:0:.:.和 *:0:0:.，並帶有權數值，其中 H、B、T 和 L 分別代表裝置的主機、匯流排、目標以及 LUN ID。例如：
       </para>
<screen>prio "weightedpath"
prio_args "hbtl 1:.:.:. 2 4:.:.:. 4"</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>devname</term>
      <listitem>
       <para>
        Regex 為裝置名稱格式。例如：sda、sd.e
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>serial</term>
      <listitem>
       <para>
        Regex 為序號格式。例如：.*J1FR.*324。請使用 <command>multipathd show paths format %z</command> 指令查詢您的序號。(<command>multipathd show wildcards</command> 會顯示所有 <literal>format</literal> 萬用字元。)
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>alua</term>
      <listitem>
       <para>
        如果為某部裝置 (<literal>alua exclusive_pref_bit</literal>) 設定了 <literal>exclusive_pref_bit</literal>，那麼設定了 <literal>preferred path</literal> 的路徑將永遠在其自身的路徑群組中。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>path_latency</term>
      <listitem>
       <para>
        如果遠端儲存陣列和本地儲存陣列使用的硬體類型相同，則可使用 <literal>path_latency</literal> 調整這兩個陣列之間的延遲。遠端陣列上的延遲通常更高，因此您可以微調延遲，使兩個陣列的時間更接近。這需要格式為 <literal>io_num=<replaceable>20</replaceable> base_num=<replaceable>10</replaceable></literal> 的值組。
       </para>
       <para>
        <literal>io_num</literal> 是連續傳送到目前路徑的讀取 IO 數，用於計算平均路徑延遲。有效值為 2 到 200 的整數。
       </para>
       <para>
        <literal>base_num</literal> 是對數的底數，用於分割不同的優先程度排名。有效值為 2 到 10 的整數。最大平均延遲值為 100s，最小值為 1 μs。例如，如果 <literal>base_num=10</literal>，則路徑將被分至路徑延遲 &lt;=1 μs、(1 μs, 10 μs]、(10 μs, 100 μs)、(100 μs, 1 ms)、(1 ms, 10 ms)、(10 ms, 100 ms)、(100 ms, 1 s)、(1 s, 10 s)、(10 s, 100 s)、&gt;100 s 的各優先程度群組。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <bridgehead>多重路徑屬性</bridgehead>
    <para>
     多重路徑屬性用於控制裝置的多重路徑 I/O 行為。您可以將屬性指定為所有多重路徑裝置的預設值。此外，還可以指定僅套用至指定多重路徑裝置的屬性，方法是在多重路徑組態檔案的 <literal>multipaths</literal> 區段中為該裝置建立一個項目。
    </para>
    <variablelist>
     <varlistentry>
      <term><literal>user_friendly_names</literal></term>
      <listitem>
       <para>
        指定是使用全球 ID (WWID) 還是使用 <filename>/var/lib/multipath/bindings</filename> 檔案為多重路徑裝置指定格式為 <filename>/dev/mapper/mpathN</filename>、永久且唯一的別名。
       </para>
       <para>
        此選項可以在 <literal>devices</literal> 區段和 <literal>multipaths</literal> 區段中使用。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             描述
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>no</literal>
            </para>
           </entry>
           <entry>
            <para>
             (預設) 使用 <filename>/dev/disk/by-id/</filename> 位置中所顯示的 WWID。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>yes</literal>
            </para>
           </entry>
           <entry>
            <para>
             自動產生易記名稱做為多重路徑裝置的別名來取代實際的 ID。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vle-failback">
      <term><literal>failback</literal></term>
      <listitem>
       <para>
        指定是否監控失敗路徑的復原狀況，並指出失敗路徑恢復使用後群組進行錯誤回復所花的時間。
       </para>
       <para>
        失敗路徑復原後，系統會依據此設定將該路徑重新新增到啟用了多重路徑的路徑清單中。多重路徑會評估優先程度群組，並在主要路徑的優先程度高於次要群組時，變更主動優先程度群組。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             描述
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>manual</literal>
            </para>
           </entry>
           <entry>
            <para>
             (預設) 不監控失敗路徑的復原狀況。管理員會執行 <command>multipath</command> 指令來更新已啟用的路徑與優先程度群組。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>followover</literal>
            </para>
           </entry>
           <entry>
            <para>
             僅當路徑群組的第一個路徑處於使用中狀態時，才執行自動錯誤回復。這可以防止某個節點在另一個節點已要求容錯移轉時自動錯誤回復。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>immediate</literal>
            </para>
           </entry>
           <entry>
            <para>
             某路徑復原後，立即啟用該路徑。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal><replaceable>N</replaceable></literal>
            </para>
           </entry>
           <entry>
            <para>
             某路徑復原後，等待 <replaceable>N</replaceable> 秒後再啟用此路徑。指定一個大於 0 的整數值。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
       <para>
        對於叢集環境中的多重路徑，建議將錯誤回復設為 <literal>manual</literal>，以防止多重路徑容錯移轉發生乒乓效應。
       </para>
<screen>failback "manual"</screen>
       <important>
        <title>確認</title>
        <para>
         請務必向儲存系統廠商確認錯誤回復設定。不同的儲存系統可能需要不同的設定。
        </para>
       </important>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vle-no-path-retry">
      <term><literal>no_path_retry</literal></term>
      <listitem>
       <para>
        指定路徑失敗時要採取的行為。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             描述
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal><replaceable>N</replaceable></literal>
            </para>
           </entry>
           <entry>
            <para>
             指定在 <command>multipath</command> 停止佇列且使路徑失敗之前的重試次數。指定一個大於 0 的整數值。
            </para>
            <para>
             在叢集中，您可以指定值「0」來防止排入佇列，並允許資源進行容錯移轉。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>fail</literal>
            </para>
           </entry>
           <entry>
            <para>
             指定立即失敗 (不排入佇列)。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>queue</literal>
            </para>
           </entry>
           <entry>
            <para>
             永不停止佇列 (在路徑恢復正常之前始終排入佇列)。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
       <para>
        在叢集中作業時，建議在 <filename>/etc/multipath.conf</filename> 檔案中將重試設定設為 <literal>fail</literal> 或 <literal>0</literal>。這會導致儲存連接中斷時，讓資源進行容錯移轉。否則，該訊息會排入佇列，而不會發生資源容錯移轉。
       </para>
<screen>no_path_retry "fail"
no_path_retry "0"</screen>
       <important>
        <title>確認</title>
        <para>
         請務必向儲存系統廠商確認重試設定。不同的儲存系統可能需要不同的設定。
        </para>
       </important>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>path_checker</literal></term>
      <listitem>
       <para>
        決定路徑的狀態。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="30%"/>
         <colspec colnum="2" colname="2" colwidth="70%"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             描述
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>directio</literal>
            </para>
           </entry>
           <entry>
            <para>
             讀取具有直接 I/O 的第一個磁區，這對於 DASD 裝置非常有用。在 <systemitem class="daemon">systemd</systemitem> 日誌中記錄失敗訊息 (請參閱<xref linkend="cha-journalctl"/>)。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>tur</literal>
            </para>
           </entry>
           <entry>
            <para>
             將 SCSI 測試單元就緒指令發送至裝置。這是較佳設定 (若 LUN 支援)。若指令失敗，將不會在 <systemitem class="daemon">systemd</systemitem> 記錄日誌中填入訊息。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <replaceable>CUSTOM_VENDOR_VALUE</replaceable>
            </para>
           </entry>
           <entry>
            <para>
             有些 SAN 廠商會提供自訂 path_checker 選項：
            </para>
            <itemizedlist mark="bullet" spacing="normal">
             <listitem>
              <formalpara>
               <title><literal>cciss_tur</literal>：</title>
               <para>
                檢查 HP 智慧型儲存陣列的路徑狀態。
               </para>
              </formalpara>
             </listitem>
             <listitem>
              <formalpara>
               <title><literal>emc_clariion</literal>：</title>
               <para>
                查詢 EMC Clariion EVPD 的 0xC0 頁以決定路徑狀態。
               </para>
              </formalpara>
             </listitem>
             <listitem>
              <formalpara>
               <title><literal>hp_sw</literal>：</title>
               <para>
                檢查包含主動/待命韌體之 HP 儲存陣列的路徑狀態 (Up、Down 或 Ghost)。
               </para>
              </formalpara>
             </listitem>
             <listitem>
              <formalpara>
               <title><literal>rdac</literal>：</title>
               <para>
                檢查 LSI/Engenio RDAC 儲存控制器的路徑狀態。
               </para>
              </formalpara>
             </listitem>
            </itemizedlist>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>path_grouping_policy</literal></term>
      <listitem>
       <para>
        指定由指定控制器代管之多重路徑裝置的路徑分組規則。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             描述
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>failover</literal>
            </para>
           </entry>
           <entry>
            <para>
             (預設) 每個優先程度群組指定一個路徑，以便每次只使用一個路徑。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>multibus</literal>
            </para>
           </entry>
           <entry>
            <para>
             所有有效的路徑均屬於一個優先程度群組。流量透過群組中的所有主動路徑來保持負載平衡。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>group_by_prio</literal>
            </para>
           </entry>
           <entry>
            <para>
             每個路徑優先程度值對應一個優先程度群組。優先程度相同的路徑位於同一個優先程度群組中。優先程度由外部程式指定。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>group_by_serial</literal>
            </para>
           </entry>
           <entry>
            <para>
             路徑根據 SCSI 目標序號 (控制器節點 WWN) 來分組。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>group_by_node_name</literal>
            </para>
           </entry>
           <entry>
            <para>
             每個目標節點名稱指定一個優先程度群組。目標節點名稱取自 <filename> /sys/class/fc_transport/target*/node_name</filename> 中。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>path_selector</literal></term>
      <listitem>
       <para>
        指定用於負載平衡的 path-selector 演算法。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             描述
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>round-robin 0</literal>
            </para>
           </entry>
           <entry>
            <para>
             用於平衡優先程度群組中所有主動路徑之間的流量的負載平衡演算法。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>queue-length 0</literal>
            </para>
           </entry>
           <entry>
            <para>
             與 least-pending 選項類似，是一個可平衡多個路徑上進行中的 I/O 數量的動態負載平衡器。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>service-time 0</literal>
            </para>
           </entry>
           <entry>
            <para>
             (預設值) 可根據延遲情況來平衡多個路徑上之 I/O 的服務時間導向型負載平衡器。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>pg_timeout</term>
      <listitem>
       <para>
        指定路徑群組逾時處理。不能指定任何值，已設定了內部預設值。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vle-polling-interval">
      <term><literal>polling_interval</literal></term>
      <listitem>
       <para>
        指定一個路徑檢查週期結束與下一個路徑檢查週期開始之間的時間 (以秒為單位)。
       </para>
       <para>
        指定一個大於 0 的整數值。預設值為 5。請務必向儲存系統廠商確認 polling_interval 設定。不同的儲存系統可能需要不同的設定。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>rr_min_io_rq</literal></term>
      <listitem>
       <para>
        在切換至目前路徑群組中的下一個路徑之前，使用基於要求的 device-mapper-multipath 指定路由至某個路徑之 I/O 要求的數量。
       </para>
       <para>
        指定一個大於 0 的整數值。預設值為 1。
       </para>
<screen>rr_min_io_rq "1"</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>rr_weight</literal></term>
      <listitem>
       <para>
        指定用於計算路徑權重的方式。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             描述
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>uniform</literal>
            </para>
           </entry>
           <entry>
            <para>
             (預設) 所有路徑都擁有相同的輪替權數。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>priorities</literal>
            </para>
           </entry>
           <entry>
            <para>
             每個路徑的權重由路徑的優先程度乘以 rr_min_io_rq 設定來確定。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>uid_attribute</literal></term>
      <listitem>
       <para>
        提供唯一路徑識別碼的 udev 屬性。預設值為 <literal>ID_SERIAL</literal>。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
   <sect3 xml:id="sec-multipath-policies-failover-rr">
    <title>設定輪替式負載平衡</title>
    <para>
     所有路徑都處於主動狀態。I/O 設定為在移至序列中的下一個開啟路徑之前需經過秒數的時間或數個 I/O 異動。
    </para>
   </sect3>
   <sect3 xml:id="sec-multipath-policies-failover-prio-single">
    <title>設定單一路徑容錯移轉</title>
    <para>
     優先程度最高 (設定值最低) 的單一路徑對流量而言是主動路徑。其他路徑可用於容錯移轉，但只有在發生容錯移轉時才會使用。
    </para>
   </sect3>
   <sect3 xml:id="sec-multipath-policies-failover-prio-rr-grouping">
    <title>將 I/O 路徑分組以進行輪替式負載平衡</title>
    <para>
     具有相同優先程度的多個路徑都歸入主動群組。該群組中的所有路徑都失敗時，裝置會容錯移轉至優先程度次高的群組。群組中的所有路徑以輪替式負載平衡方式共用流量負載。
    </para>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-multipath-policies-failover-rtpg">
   <title>報告目標路徑群組</title>
   <para>
    使用 SCSI 報告目標連接埠群組 (<command>sg_rtpg(8)</command>) 指令。如需資訊，請參閱 <command>sg_rtpg(8)</command> 的線上文件。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-root">
  <title>設定根裝置的多重路徑 I/O</title>

  <para>
   <filename>SUSE Linux Enterprise Server</filename> 中的 <filename>/boot</filename> 和 <phrase role="productname"><phrase os="sles">/root</phrase></phrase> 可以使用並支援裝置對應程式多重路徑 I/O (DM-MPIO)。此外，YaST 安裝程式中的 YaST 磁碟分割程式支援在安裝期間啟用多重路徑。
  </para>

  <sect2 xml:id="sec-multipath-root-install">
   <title>安裝時啟用多重路徑 I/O</title>
   <para>
    若要在多重路徑裝置上安裝作業系統，在安裝時必須執行多重路徑軟體。在系統安裝過程中，<systemitem class="daemon">multipathd</systemitem> 精靈不會自動啟動。您可以使用 YaST 磁碟分割程式中的<guimenu>設定多重路徑</guimenu>選項來啟動。
   </para>
   <sect3 xml:id="sec-multipath-root-install-aa-lun">
    <title>安裝時在主動/主動多重路徑儲存 LUN 上啟用多重路徑 I/O</title>
    <procedure>
     <step>
      <para>
       安裝期間，在<guimenu>建議的分割方式</guimenu>螢幕上選擇<guimenu>進階磁碟分割程式</guimenu>。
      </para>
     </step>
     <step>
      <para>
       選取<guimenu>硬碟</guimenu>主圖示，按一下<guimenu>設定</guimenu>按鈕，然後選取<guimenu>設定多重路徑</guimenu>。
      </para>
     </step>
     <step>
      <para>
       啟動多重路徑。
      </para>
      <para>
       YaST 即會開始重新掃描磁碟，然後顯示可用的多重路徑裝置 (例如 <filename>/dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65</filename>)。之後所有的處理步驟都應使用此裝置。
      </para>
     </step>
     <step>
      <para>
       按<guimenu>下一步</guimenu>繼續安裝。
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="sec-multipath-root-install-ap-lun">
    <title>安裝時在主動/被動多重路徑儲存 LUN 上啟用多重路徑 I/O</title>
    <para>
     在系統安裝過程中，<systemitem class="daemon">multipathd</systemitem> 精靈不會自動啟動。您可以使用 YaST 磁碟分割程式中的<guimenu>設定多重路徑</guimenu>選項來啟動。
    </para>
    <para>
     若要在主動/被動多重路徑儲存 LUN 上安裝時啟用多重路徑 I/O：
    </para>
    <procedure>
     <step>
      <para>
       安裝期間，在<guimenu>建議的分割方式</guimenu>螢幕上選擇<guimenu>進階磁碟分割程式</guimenu>。
      </para>
     </step>
     <step>
      <para>
       選取<guimenu>硬碟</guimenu>主圖示，按一下<guimenu>設定</guimenu>按鈕，然後選取<guimenu>設定多重路徑</guimenu>。
      </para>
     </step>
     <step>
      <para>
       啟動多重路徑。
      </para>
      <para>
       YaST 即會開始重新掃描磁碟，然後顯示可用的多重路徑裝置 (例如 <filename>/dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65</filename>)。之後所有的處理步驟都應使用此裝置。記下裝置路徑與 UUID，稍後會用到。
      </para>
     </step>
     <step>
      <para>
       按<guimenu>下一步</guimenu>繼續安裝。
      </para>
     </step>
     <step>
      <para>
       所有設定都設好且安裝完成後，YaST 即會開始寫入開機載入程式資訊，並顯示重新啟動系統的倒數計時。請按一下<guimenu>停止</guimenu>按鈕停止倒數計時，然後按 <keycombo><keycap function="control"/><keycap function="alt"/><keycap>F5</keycap></keycombo> 存取主控台。
      </para>
     </step>
     <step>
      <para>
       使用主控台確定是否在 <filename>/boot/grub/device.map</filename> 檔案中為 <filename>hd0</filename> 項目輸入了被動路徑。
      </para>
      <para>
       執行此動作非常必要，因為安裝程序無法區分主動路徑與被動路徑。
      </para>
      <substeps performance="required">
       <step>
        <para role="intro">
         輸入以下指令，將根裝置掛接至 <filename>/mnt</filename>：
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mount /dev/disk/by-id/<replaceable>UUID</replaceable>;_part2 /mnt</screen>
        <para>
         例如，輸入：
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mount /dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65_part2 /mnt</screen>
       </step>
       <step>
        <para>
         輸入以下指令，將開機裝置掛接至 <filename>/mnt/boot</filename>：
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mount /dev/disk/by-id/<replaceable>UUID</replaceable>_part1 /mnt/boot</screen>
        <para>
         例如，輸入：
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mount /dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65_part2 /mnt/boot</screen>
       </step>
       <step>
        <para>
         在 <filename>/mnt/boot/grub/device.map</filename> 檔案中，確定 <filename>hd0</filename> 項目是否指向被動路徑，然後執行下列其中一項動作：
        </para>
        <itemizedlist mark="bullet" spacing="normal">
         <listitem>
          <formalpara>
           <title>主動路徑：</title>
           <para>
            不需要執行任何動作。跳過所有剩餘的步驟，按 <keycombo><keycap function="control"/><keycap function="alt"/><keycap>F7</keycap></keycombo> 返回 YaST 圖形環境，然後繼續安裝。
           </para>
          </formalpara>
         </listitem>
         <listitem>
          <formalpara>
           <title>被動路徑：</title>
           <para>
            必須變更組態並重新安裝開機載入程式。
           </para>
          </formalpara>
         </listitem>
        </itemizedlist>
       </step>
      </substeps>
     </step>
     <step>
      <para role="intro">
       如果 <filename>hd0</filename> 項目指向被動路徑，請變更組態並重新安裝開機載入程式：
      </para>
      <substeps performance="required">
       <step>
        <para role="intro">
         在主控台提示符處輸入以下指令：
        </para>
<screen>
          mount -o bind /dev /mnt/dev
          mount -o bind /sys /mnt/sys
          mount -o bind /proc /mnt/proc
          chroot /mnt</screen>
       </step>
       <step>
        <para role="intro">
         在主控台中執行 <command>multipath -ll</command>，然後檢查輸出以尋找主動路徑。
        </para>
        <para>
         被動路徑會有 <literal>ghost</literal> 標記。
        </para>
       </step>
       <step>
        <para>
         在 <filename>/boot/grub/device.map</filename> 檔案中，將 <literal>hd0</literal> 項目變更為主動路徑並儲存變更，然後關閉檔案。
        </para>
       </step>
       <step>
        <para>
         輸入以下指令，重新安裝開機載入程式：
        </para>
<screen>grub-install /dev/disk/by-id/<replaceable>UUID</replaceable>_part1 /mnt/boot</screen>
        <para>
         例如，輸入：
        </para>
<screen>grub-install /dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65_part2 /mnt/boot</screen>
       </step>
       <step>
        <para>
         輸入下列指令：
        </para>
<screen>exit
umount /mnt/*
umount /mnt</screen>
       </step>
      </substeps>
     </step>
     <step>
      <para>
       按 <keycombo><keycap function="control"/><keycap function="alt"/><keycap>F7</keycap></keycombo> 返回 YaST 圖形環境。
      </para>
     </step>
     <step>
      <para>
       按一下<guimenu>確定</guimenu>繼續執行安裝的重新開機作業。
      </para>
     </step>
    </procedure>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-multipath-root-enable-existing">
   <title>為現有根裝置啟用多重路徑 I/O</title>
   <procedure>
    <step>
     <para>
      將 Linux 安裝為僅有單個路徑處於主動狀態，最好是磁碟分割程式中列出了 <filename>by-id</filename> 符號連結的路徑。
     </para>
    </step>
    <step>
     <para>
      使用安裝期間所用的 <filename>/dev/disk/by-id</filename> 路徑來掛接裝置。
     </para>
    </step>
    <step>
     <para>
      開啟或建立 <filename>/etc/dracut.conf.d/10-mp.conf</filename> 並新增以下行 (請注意前置空格)：
     </para>
<screen>force_drivers+=" dm-multipath"</screen>
    </step>
    <step>
     <para>
      <remark condition="clarity">
       2014-09-05 - fs: Check if the following is still true
      </remark>
      對於 IBM Z，請在執行 <command>dracut</command> 之前先編輯 <filename>/etc/zipl.conf</filename> 檔案，以 <filename>/etc/fstab</filename> 中使用的 by-id 資訊變更 <filename>zipl.conf</filename> 中的 by-path 資訊。
     </para>
    </step>
    <step>
     <para>
      執行 <command>dracut</command> <option>-f</option> 以更新 <filename>initrd</filename> 影像。
     </para>
    </step>
    <step>
     <para>
      對於 IBM Z，請在執行 <command>dracut</command> 之後執行 <command>zipl</command>。
     </para>
    </step>
    <step>
     <para>
      重新載入伺服器。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-root-disable">
   <title>在根裝置上停用多重路徑 I/O</title>
   <para>
    將 <literal>multipath=off</literal> 新增至核心指令行。這可以透過 YaST 開機載入程式模組來完成。開啟<menuchoice> <guimenu>開機載入程式安裝</guimenu> <guimenu> 核心參數</guimenu>
    </menuchoice>，並將參數新增至兩個指令行。
   </para>
   <para>
    這只會影響根裝置，而不會影響所有其他裝置。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-raid">
  <title>為現有軟體 RAID 設定多重路徑 I/O</title>

  <para>
   理想狀況下，您應該先設定裝置的多重路徑，然後再將它們當成軟體 RAID 裝置的元件使用。如果您在建立任何軟體 RAID 裝置後再新增多重路徑，則系統重新開機時可能會先啟動 <command>multipath</command> 服務，然後再啟動 DM-MPIO 服務，導致 RAID 可能會無法使用多重路徑。您可以使用本節所述的程序，讓多重路徑針對多先前存在的軟體 RAID 執行。
  </para>

  <para>
   例如，在下列情況中，您可能需要設定軟體 RAID 中裝置的多重路徑：
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     如果在執行全新安裝或升級期間建立新的軟體 RAID，將其做為磁碟分割設定的一部分。
    </para>
   </listitem>
   <listitem>
    <para>
     如果將軟體 RAID 中的裝置當成成員裝置或備品之前未設定裝置以進行多重路徑。
    </para>
   </listitem>
   <listitem>
    <para>
     如果透過將新的 HBA 配接器新增至伺服器，或擴充 SAN 中的儲存子系統來擴展您的系統。
    </para>
   </listitem>
  </itemizedlist>

  <note>
   <title>假設條件</title>
   <para>
    下列指示假設軟體 RAID 裝置為 <filename>/dev/mapper/mpath0</filename>，這是核心可辨識的裝置名稱。它會假設您已依照<xref linkend="sec-multipath-names" xrefstyle="HeadingOnPage"/>所述在 <filename>/etc/multipath.conf</filename> 檔案中啟用了使用者易記的名稱。
   </para>
   <para>
    請務必修改適用於軟體 RAID 的設備名稱的指示。
   </para>
  </note>

  <procedure>
   <step>
    <para role="intro">
     開啟終端機主控台。
    </para>
    <para>
     請在下列步驟中使用此主控台輸入指令，除非導向到其他位置。
    </para>
   </step>
   <step>
    <para>
     如果目前已掛接或正在執行任何軟體 RAID 裝置，請對每個裝置輸入以下指令來卸載並停止裝置。
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> umount /dev/mapper/mpath0
<prompt>&gt; </prompt><command>sudo</command> mdadm --misc --stop /dev/mapper/mpath0</screen>
   </step>
   <step>
    <para>
     輸入以下指令停止 <command>md</command> 服務：
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl stop mdmonitor</screen>
   </step>
   <step>
    <para>
     輸入以下指令啟動 <systemitem class="daemon">multipathd</systemitem> 精靈：
    </para>
<screen><prompt>&gt; </prompt>systemctl start multipathd</screen>
   </step>
   <step>
    <para>
     啟動多重路徑服務之後，驗證軟體 RAID 的元件裝置是否列在 <filename>/dev/disk/by-id</filename> 目錄中。請執行下列其中一個步驟：
    </para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <formalpara>
       <title>已列出裝置：</title>
       <para>
        裝置名稱現在應該有連至裝置對應程式多重路徑裝置名稱的符號連結，如 <filename>/dev/dm-1</filename>。
       </para>
      </formalpara>
     </listitem>
     <listitem>
      <formalpara>
       <title>未列出裝置：</title>
       <para>
        輸入以下指令來衝洗和重新探查裝置，強制多重路徑服務辨識裝置：
       </para>
      </formalpara>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath -F
<prompt>&gt; </prompt><command>sudo</command> multipath -v0</screen>
      <para>
       裝置現在應該列於 <filename>/dev/disk/by-id</filename> 中，並擁有連至其裝置對應程式多重路徑裝置名稱的符號連結。例如：
      </para>
<screen>lrwxrwxrwx 1 root root 10 2011-01-06 11:42 dm-uuid-mpath-36006016088d014007e0d0d2213ecdf11 -&gt; ../../dm-1</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     輸入以下指令重新啟動 <filename>mdmonitor</filename> 服務和 RAID 裝置：
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl start mdmonitor</screen>
   </step>
   <step>
    <para>
     輸入以下指令檢查軟體 RAID 的狀態：
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mdadm --detail /dev/mapper/mpath0</screen>
    <para>
     RAID 的元件裝置應與其裝置對應程式多重路徑裝置名稱相符，這些裝置名稱在 <filename>/dev/disk/by-id</filename> 目錄中列為裝置的符號連結。
    </para>
   </step>
   <step>
    <para>
     如果根 (<filename>/</filename>) 裝置或其任何部分 (例如 <filename>/var</filename>、<filename>/etc</filename>、<filename>/log</filename>) 位於 SAN 上，並且需要使用多重路徑開機，請重建 <systemitem>initrd</systemitem>：
    </para>
<screen><prompt>&gt; </prompt>dracut -f --add-multipath</screen>
   </step>
   <step>
    <para>
     重新開機伺服器以套用變更。
    </para>
   </step>
   <step>
    <para>
     檢查 RAID 狀態，以驗證軟體 RAID 陣列是否正確地顯示在多重路徑裝置頂部。輸入
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mdadm --detail /dev/mapper/mpath0</screen>
    <para>
     例如：
    </para>
    <simplelist>
     <member><literal>Number Major Minor RaidDevice State</literal></member>
     <member><literal>0 253 0 0 active sync /dev/dm-0</literal></member>
     <member><literal>1 253 1 1 active sync /dev/dm-1</literal></member>
     <member><literal>2 253 2 2 active sync /dev/dm-2</literal></member>
    </simplelist>
   </step>
  </procedure>

  <note>
   <title>將 mdadm 與多重路徑裝置搭配使用</title>
   <para>
    <command>mdadm</command> 工具要求以 ID 而非裝置節點路徑存取裝置。如需詳細資訊，請參閱<xref linkend="sec-multipath-mpiotools-mdadm"/>。
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-multipath-lvm">
  <title>在多重路徑裝置上使用 LVM2</title>

  <para>
   使用多重路徑時，資源的所有路徑都顯示為裝置樹狀結構中的裝置。依預設，LVM 會檢查裝置樹狀結構中任何裝置的頂層是否存在多重路徑裝置。如果 LVM 在頂層找到了多重路徑裝置，它會假設該裝置是多重路徑元件，並忽略 (基礎) 裝置。這很可能是您期望的行為，但也可以在 <filename>/etc/lvm/lvm.conf</filename> 中變更此行為。如果將 multipath_component_detection 設定為 1，LVM 會掃描多重路徑元件裝置。lvm.conf 中的預設項目是：
  </para>

<screen>    # By default, LVM2 will ignore devices used as component paths
    # of device-mapper multipath devices.
    # 1 enables; 0 disables.
    multipath_component_detection = 1</screen>
 </sect1>
 <sect1 xml:id="sec-multipath-best-practice">
  <title>最佳實務</title>

  <para/>

  <sect2 xml:id="sec-multipath-best-practice-scandev">
   <title>在不重新開機的情況下掃描新裝置</title>
   <para>
    如果已將您的系統設定為啟用多重路徑，而您稍後需要將儲存新增到 SAN，則可以使用 <command>rescan-scsi-bus.sh</command> 程序檔掃描新的裝置。依預設，此程序檔會掃描所有 HBA 的一般 LUN 範圍。該指令的一般語法如下所示：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> rescan-scsi-bus.sh [options] [host [host ...]]</screen>
   <para>
    對於大多數儲存子系統，該程序檔都可在不使用任何選項的情況下成功執行。不過，在某些特殊情況下，可能需要使用一或多個選項。如需詳細資料，請執行 <command>rescan-scsi-bus.sh --help</command>。
   </para>
   <warning>
    <title>EMC PowerPath 環境</title>
    <para>
     在 EMC PowerPath 環境中，請勿使用作業系統隨附的 <filename>rescan-scsi-bus.sh</filename> 公用程式或 HBA 廠商程序檔來掃描 SCSI 匯流排。為了避免潛在的檔案系統損毀，EMC 要求您遵循 EMC PowerPath for Linux 的廠商文件中提供的程序來操作。
    </para>
   </warning>
   <para>
    使用以下程序掃描裝置，以便在不將系統重新開機的情況下使這些裝置適用於多重路徑。
   </para>
   <procedure>
    <step>
     <para>
      在儲存子系統中，使用廠商的工具來配置裝置並更新其存取控制設定，以允許 Linux 系統存取新的儲存。如需詳細資料，請參閱廠商提供的文件。
     </para>
    </step>
    <step>
     <para>
      掃描主機的所有目標，以使 Linux 核心的 SCSI 子系統的中間層級可辨識其新裝置。在終端機主控台提示符處輸入
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> rescan-scsi-bus.sh</screen>
     <para>
      根據您的設定，您可能需要搭配選用參數執行 <command>rescan-scsi-bus.sh</command>。如需詳細資料，請參閱 <command>rescan-scsi-bus.sh --help</command>。
     </para>
    </step>
    <step>
     <para>
      請在 <systemitem class="daemon">systemd</systemitem> 日誌中檢查掃描進度 (如需詳細資料，請參閱<xref linkend="cha-journalctl"/>)。在終端機主控台提示符處輸入：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl -r</screen>
     <para>
      此指令會顯示記錄的最後幾行。例如：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl -r
Feb 14 01:03 kernel: SCSI device sde: 81920000
Feb 14 01:03 kernel: SCSI device sdf: 81920000
Feb 14 01:03 multipathd: sde: path checker registered
Feb 14 01:03 multipathd: sdf: path checker registered
Feb 14 01:03 multipathd: mpath4: event checker started
Feb 14 01:03 multipathd: mpath5: event checker started
Feb 14 01:03:multipathd: mpath4: remaining active paths: 1
Feb 14 01:03 multipathd: mpath5: remaining active paths: 1
[...]</screen>
    </step>
    <step>
     <para>
      重複上述步驟，以新增通過 Linux 系統中連接至新裝置的其他 HBA 配接器的路徑。
     </para>
    </step>
    <step>
     <para>
      執行 <command>multipath</command> 指令辨識可設定 DM-MPIO 組態的裝置。在終端機主控台提示符處輸入
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath</screen>
     <para>
      您現在可以設定新裝置以進行多重路徑了。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-scanpart">
   <title>在不重新開機的情況下掃描新分割裝置</title>
   <para>
    使用本節中的範例，可以在不重新開機的情況下偵測新增的多重路徑 LUN。
   </para>
   <warning>
    <title>EMC PowerPath 環境</title>
    <para>
     在 EMC PowerPath 環境中，請勿使用作業系統隨附的 <filename>rescan-scsi-bus.sh</filename> 公用程式或 HBA 廠商程序檔來掃描 SCSI 匯流排。為了避免潛在的檔案系統損毀，EMC 要求您遵循 EMC PowerPath for Linux 的廠商文件中提供的程序來操作。
    </para>
   </warning>
   <procedure>
    <step>
     <para>
      開啟終端機主控台。
     </para>
    </step>
    <step>
     <para>
      掃描主機的所有目標，以使 Linux 核心的 SCSI 子系統的中間層級可辨識其新裝置。在終端機主控台提示符處輸入
     </para>
<screen><prompt>&gt; </prompt>rescan-scsi-bus.sh</screen>
     <para>
      根據您的設定，您可能需要搭配選用參數執行 <command>rescan-scsi-bus.sh</command>。如需詳細資料，請參閱 <command>rescan-scsi-bus.sh --help</command>。
     </para>
    </step>
    <step>
     <para>
      輸入以下指令驗證裝置是否已探查到 (例如連結是否具有一個新的時戳)：
     </para>
<screen><prompt>&gt; </prompt>ls -lrt /dev/dm-*</screen>
     <para>
      也可以輸入以下指令在 <filename>/dev/disk/by-id</filename> 中驗證裝置：
     </para>
<screen><prompt>&gt; </prompt>ls -l /dev/disk/by-id/</screen>
    </step>
    <step>
     <para>
      輸入以下指令驗證新裝置是否顯示在記錄中：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl -r</screen>
    </step>
    <step>
     <para>
      使用文字編輯器在 <filename>/etc/multipath.conf</filename> 檔案中新增裝置的新別名定義，如 <filename>data_vol3</filename>。
     </para>
     <para>
      例如，如果 UUID 為 <filename>36006016088d014006e98a7a94a85db11</filename>，請進行下列變更：
     </para>
<screen>defaults {
     user_friendly_names   yes
  }
multipaths {
     multipath {
          wwid    36006016088d014006e98a7a94a85db11
          alias  data_vol3
          }
  }</screen>
    </step>
    <step>
     <para>
      輸入以下指令建立裝置的分割區表：
     </para>
<screen><prompt>&gt; </prompt>fdisk /dev/disk/by-id/dm-uuid-mpath-&lt;UUID&gt;</screen>
     <para>
      以裝置 WWID 取代 UUID，例如 <filename>36006016088d014006e98a7a94a85db11</filename>。
     </para>
    </step>
    <step>
     <para>
      輸入以下指令觸發 udev：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> echo 'add' &gt; /sys/block/<replaceable>DM_DEVICE</replaceable>/uevent</screen>
     <para>
      例如，若要為 <filename>dm-8</filename> 上的分割區產生裝置對應程式裝置，請輸入：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> echo 'add' &gt; /sys/block/dm-8/uevent</screen>
    </step>
    <step>
     <para>
      在裝置 <filename>/dev/disk/by-id/dm-uuid-mpath-<replaceable>UUID_partN</replaceable></filename> 上建立檔案系統。根據您選擇的檔案系統，您可以使用下列指令之一實現此目的：<command>mkfs.btrfs</command>
      <command> mkfs.ext3</command>、<command>mkfs.ext4</command> 或 <command>mkfs.xfs</command>。如需詳細資料，請參閱相應的 man 頁面。以實際 UUID 和分割區編號取代 <filename>UUID_partN</filename>，例如 36006016088d014006e98a7a94a85db11_part1。
     </para>
    </step>
    <step>
     <para>
      輸入以下指令為新分割區建立標籤：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> tune2fs -L <replaceable>LABELNAME</replaceable> /dev/disk/by-id/dm-uuid-<replaceable>UUID_partN</replaceable>
</screen>
     <para>
      以實際 UUID 和分割區編號取代 <filename>UUID_partN</filename>，例如 36006016088d014006e98a7a94a85db11_part1。以您選擇的標籤取代 <replaceable>LABELNAME</replaceable>。
     </para>
    </step>
    <step>
     <para>
      輸入以下指令以重新設定 DM-MPIO，使其讀取別名：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipathd -k'reconfigure'</screen>
    </step>
    <step>
     <para>
      輸入以下指令驗證 <systemitem class="daemon">multipathd</systemitem> 是否可辨識裝置：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath -ll</screen>
    </step>
    <step>
     <para>
      使用文字編輯器在 <filename>/etc/fstab</filename> 檔案中新增掛接項目。
     </para>
     <para>
      此時，您在上一步中建立的別名在 <filename>/dev/disk/by-label</filename> 目錄中尚不存在。為 <filename>/dev/dm-9</filename> 路徑新增一個掛接項目，然後在下次重新開機到以下項目之前變更該項目
     </para>
<screen>LABEL=<replaceable>LABELNAME</replaceable></screen>
    </step>
    <step>
     <para>
      建立要做為掛接點的目錄，然後掛接裝置。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-status">
   <title>檢視多重路徑 I/O 狀態</title>
   <para>
    查詢多重路徑 I/O 狀態會輸出多重路徑對應的目前狀態。
   </para>
   <para>
    <command>multipath -l</command> 選項會顯示上次執行路徑檢查程式後目前的路徑狀態。該選項不會執行路徑檢查程式。
   </para>
   <para>
    <command>multipath -ll</command> 選項會執行路徑檢查程式，更新路徑資訊，然後顯示目前的狀態資訊。此指令永遠都會顯示路徑狀態的最新資訊。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath -ll
3600601607cf30e00184589a37a31d911
[size=127 GB][features="0"][hwhandler="1 emc"]

\_ round-robin 0 [active][first]
  \_ 1:0:1:2 sdav 66:240  [ready ][active]
  \_ 0:0:1:2 sdr  65:16   [ready ][active]

\_ round-robin 0 [enabled]
  \_ 1:0:0:2 sdag 66:0    [ready ][active]
  \_ 0:0:0:2 sdc  8:32    [ready ][active]</screen>
   <para>
    它會針對每個裝置顯示裝置的 ID、大小、功能和硬體處理器。
   </para>
   <para>
    在探查裝置時，裝置的路徑會自動分到不同的優先程度群組。每次只有一個優先程度群組處於主動狀態。對於主動/主動組態，所有路徑都屬於同一個群組。對於主動/被動組態，被動路徑位於另外的優先程度群組中。
   </para>
   <para>
    指令會顯示每個群組的下列資訊：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      用於平衡群組內 I/O 的排程規則，如輪替式
     </para>
    </listitem>
    <listitem>
     <para>
      該群組是處於主動、已停用還是已啟用狀態
     </para>
    </listitem>
    <listitem>
     <para>
      該群組是否為第一個 (優先程度最高) 群組
     </para>
    </listitem>
    <listitem>
     <para>
      群組內包含的路徑
     </para>
    </listitem>
   </itemizedlist>
   <para>
    指令會顯示每個路徑的下列資訊：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      實體位址，格式為 <replaceable>HOST:BUS:TARGET:LUN</replaceable>，例如 1:0:1:2
     </para>
    </listitem>
    <listitem>
     <para>
      裝置節點名稱，如 <filename>sda</filename>
     </para>
    </listitem>
    <listitem>
     <para>
      Major:minor 號碼
     </para>
    </listitem>
    <listitem>
     <para>
      裝置的狀態
     </para>
    </listitem>
   </itemizedlist>
   <note>
    <title>在多重路徑設定中使用 <command>iostat</command></title>
    <para>
     在多重路徑環境中，<command>iostat</command> 指令可能會導致非預期的結果。依預設，<command>iostat</command> 會過濾掉所有沒有 I/O 的區塊裝置。若要使 <command>iostat</command> 顯示<emphasis>所有</emphasis>裝置，請使用：
    </para>
    <screen>iostat -p ALL</screen>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-io-error">
   <title>在出錯狀況下管理 I/O</title>
   <para>
    如果所有路徑同時失敗，您可能需要啟用 queue_if_no_path 設定多重路徑，以將 I/O 排入佇列。如果不啟用，I/O 便會在所有路徑都失敗時立即失敗。在驅動程式、HBA 或光纖出現假性錯誤，且這類錯誤會導致所有路徑遺失的特定情況下，應將 DM-MPIO 設定為將所有 I/O 排入佇列，且永不向上傳播錯誤。
   </para>
   <para>
    在叢集中使用多重路徑裝置時，您可以選擇停用 queue_if_no_path。如此，系統就不會將 I/O 排入佇列，而是自動使路徑失效，並會將 I/O 錯誤升級，產生叢集資源容錯移轉。
   </para>
   <para>
    啟用 queue_if_no_path 會導致 I/O 在有路徑重新啟用之前無限期地排入佇列，因此請確定 <command>multipathd</command> 正在執行，且對您的情況有效。否則，在重新開機或手動返回到容錯移轉以取代佇列之前，I/O 可能會無限期地擱置於受影響的多重路徑裝置中。
   </para>
   <para>
    若要測試案例，請執行下列步驟：
   </para>
   <procedure>
    <step>
     <para>
      開啟終端機主控台。
     </para>
    </step>
    <step>
     <para>
      輸入以下指令啟動裝置 I/O 的佇列功能而非容錯移轉：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message <replaceable>DEVICE_ID</replaceable> 0 queue_if_no_path</screen>
     <para>
      以裝置的 ID 取代 <replaceable>DEVICE_ID</replaceable>。0 值代表磁區，當不需要磁區資訊時使用。
     </para>
     <para>
      例如，輸入：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message 3600601607cf30e00184589a37a31d911 0 queue_if_no_path</screen>
    </step>
    <step>
     <para>
      輸入以下指令返回到裝置 I/O 的容錯移轉：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message <replaceable>DEVICE_ID</replaceable> 0 fail_if_no_path</screen>
     <para>
      此指令會立即使所有排入佇列的 I/O 失敗。
     </para>
     <para>
      以裝置的 ID 取代 <replaceable>DEVICE_ID</replaceable>。例如，輸入：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message 3600601607cf30e00184589a37a31d911 0 fail_if_no_path</screen>
    </step>
   </procedure>
   <para>
    若要對所有路徑都失敗的情況設定佇列 I/O，請執行下列步驟：
   </para>
   <procedure>
    <step>
     <para>
      開啟終端機主控台。
     </para>
    </step>
    <step>
     <para>
      在文字編輯器中開啟 <filename>/etc/multipath.conf</filename> 檔案。
     </para>
    </step>
    <step>
     <para>
      取消預設區段及其結束括號的註解，然後新增 <literal>default_features</literal> 設定，如下所示：
     </para>
<screen>defaults {
  default_features "1 queue_if_no_path"
}</screen>
    </step>
    <step>
     <para>
      修改 <filename>/etc/multipath.conf</filename> 檔案後，您必須執行 <command>dracut</command> <option>-f</option> 在系統中重新建立 <filename>initrd</filename>，然後重新開機以使變更生效。
     </para>
    </step>
    <step>
     <para>
      當您準備好返回到裝置 I/O 的容錯移轉時，請輸入：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message <replaceable>MAPNAME</replaceable> 0 fail_if_no_path</screen>
     <para>
      以裝置對應的別名或裝置 ID 取代 <replaceable>MAPNAME</replaceable>。0 值代表磁區，當不需要磁區資訊時使用。
     </para>
     <para>
      此指令會立即使所有排入佇列的 I/O 失敗，並將錯誤傳播到呼叫應用程式。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-io-stalled">
   <title>解決停止的 I/O</title>
   <para>
    如果所有路徑同時失敗，且 I/O 雖已排入佇列卻被擱置時，請執行下列步驟：
   </para>
   <procedure>
    <step>
     <para>
      在終端機主控台提示符處輸入以下指令：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message <replaceable>MAPNAME</replaceable> 0 fail_if_no_path</screen>
     <para>
      以裝置的正確裝置 ID 或對應的別名取代 <literal><replaceable>MAPNAME</replaceable></literal>。0 值代表磁區，當不需要磁區資訊時使用。
     </para>
     <para>
      此指令會立即使所有排入佇列的 I/O 失敗，並將錯誤傳播到呼叫應用程式。
     </para>
    </step>
    <step>
     <para>
      輸入下列指令重新啟動佇列：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message <replaceable>MAPNAME</replaceable> 0 queue_if_no_path</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-zseries">
   <title>設定 IBM Z 裝置的預設設定</title>
   <para>
    對包含多重路徑功能的 IBM Z 裝置進行的測試表明，應將 <literal>dev_loss_tmo</literal> 參數設定為無限 (2147483647)，將 <literal>fast_io_fail_tmo</literal> 參數設定為 5 秒。若您使用的是 IBM Z 裝置，請依照以下方式修改 <filename>/etc/multipath.conf</filename> 檔案以指定這些值：
   </para>
<screen>defaults {
       dev_loss_tmo 2147483647
       fast_io_fail_tmo 5
}</screen>
   <para>
    <literal>dev_loss_tmo</literal> 參數設定將某個多重路徑連結標記為失敗之前需等待的秒數。若該路徑失敗，則目前在該路徑上的所有 I/O 都會失敗。預設值會因所用的裝置驅動程式而有所不同。若要使用驅動程式的內部逾時，請將值設定為零 (0)。也可以將其設定為「infinity」或 2147483647，如此會將其設定為最大值 2147483647 秒 (68 年)。
   </para>
   <para>
    <literal>fast_io_fail_tmo</literal> 參數設定偵測到連結問題後將 I/O 確定為失敗之前需等待的時間。到達該驅動程式的 I/O 都會失敗。如果 I/O 排在擁堵的佇列中，則未到 <literal>dev_loss_tmo</literal> 時間且佇列未疏通之前 I/O 不會失敗。
   </para>
   <para>
    如果您修改了 <filename>/etc/multipath.conf</filename> 檔案，只有在您更新多重路徑對應或 <systemitem class="daemon">multipathd</systemitem> 精靈 (<command>systemctl restart multipathd</command>) 重新啟動後，變更才會套用。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-netapp">
   <title>將多重路徑與 NetApp 裝置搭配使用</title>
   <para>
    將多重路徑用於 NetApp 裝置時，建議在 <filename>/etc/multipath.conf</filename> 檔案中進行如下設定：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      為 NetApp 裝置全域設定下列參數的預設值：
     </para>
<screen>max_fds max
queue_without_daemon no</screen>
    </listitem>
    <listitem>
     <para>
      在硬體表中為 NetApp 裝置設定下列參數的預設值：
     </para>
<screen>dev_loss_tmo infinity
fast_io_fail_tmo 5
features "3 queue_if_no_path pg_init_retries 50"</screen>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-noflush">
   <title>將 --noflush 與多重路徑裝置搭配使用</title>
   <para>
    在多重路徑裝置上執行時，應始終使用 <option>--noflush</option> 選項。
   </para>
   <para>
    例如，在執行表格重新載入的程序檔中，應使用 <literal>--noflush</literal> 選項進行恢復，以確保所有重要 I/O 不會被衝洗，因為您需要多重路徑拓樸資訊。
   </para>
<screen>load
resume --noflush</screen>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-san-timeout">
   <title>根裝置為多重路徑裝置時的 SAN 逾時設定</title>

   <para>
    所有路徑都已失敗並已從系統移除時，多重路徑裝置上包含根目錄 (<filename>/</filename>) 的系統可能會停止，因為系統會收到儲存子系統 (例如光纖通道儲存陣列) 發出的 <literal>dev_loss_tmo</literal> 逾時通知。
   </para>
   <para>
    如果系統裝置設定了多個路徑，且多重路徑 <literal>no_path_retry</literal> 設定處於啟用狀態，您應相應地修改儲存子系統的 <literal>dev_loss_tmo</literal> 設定，以確保在所有路徑失效的情況下不會移除任何裝置。強烈建議您將 <literal>dev_loss_tmo</literal> 的值設為等於或大於多重路徑中 <literal>no_path_retry</literal> 設定的值。
   </para>
   <para>
    建議按如下方式設定儲存子系統的 <literal>dev_los_tmo</literal>：
   </para>
<screen>&lt;dev_loss_tmo&gt; = &lt;no_path_retry&gt; * &lt;polling_interval&gt;</screen>
   <para>
    其中，以下定義適用於多重路徑值：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      <literal>no_path_retry</literal> 定義多重路徑 I/O 嘗試多少次後路徑視為遺失並停止將 I/O 排入佇列。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>polling_interval</literal> 是執行路徑檢查的時間間隔 (以秒為單位)。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    每個多重路徑值都應在 <filename>/etc/multipath.conf</filename> 組態檔案中設定。如需更多資訊，請參閱<xref linkend="sec-multipath-conf-file" xrefstyle="SectTitleOnPage"/>。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-trouble">
  <title>MPIO 疑難排解</title>

  <para>
   本節說明 MPIO 的一些已知問題和可能的解決方案。
  </para>

  <sect2 xml:id="sec-multipath-trouble-grub2">
   <title>在多重路徑裝置上安裝 GRUB2</title>
   <para>
    在具有 Btrfs 的傳統 BIOS 系統上，<command>grub2-install</command> 可能會失敗，並顯示<emphasis>權限遭拒</emphasis>。若要解決此問題，請確定 <filename>/boot/grub2/<replaceable>SUBDIR</replaceable>/</filename> 子磁碟區是以讀寫 (rw) 模式掛接的。<replaceable>SUBDIR</replaceable> 可以是 <literal>x86_64-efi</literal> 或 <literal>i386-pc</literal>。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-root">
   <title>啟用多重路徑時系統在開機過程中退出到緊急外圍程序</title>
   <para>
    在開機過程中，系統退出到緊急外圍程序，並顯示類似如下的訊息：
   </para>
<screen>[  OK  ] Listening on multipathd control socket.
         Starting Device-Mapper Multipath Device Controller...
[  OK  ] Listening on Device-mapper event daemon FIFOs.
         Starting Device-mapper event daemon...
         Expecting device dev-disk-by\x2duuid-34be48b2\x2dc21...32dd9.device...
         Expecting device dev-sda2.device...
[  OK  ] Listening on udev Kernel Socket.
[  OK  ] Listening on udev Control Socket.
         Starting udev Coldplug all Devices...
         Expecting device dev-disk-by\x2duuid-1172afe0\x2d63c...5d0a7.device...
         Expecting device dev-disk-by\x2duuid-c4a3d1de\x2d4dc...ef77d.device...
[  OK  ] Started Create list of required static device nodes ...current kernel.
         Starting Create static device nodes in /dev...
[  OK  ] Started Collect Read-Ahead Data.
[  OK  ] Started Device-mapper event daemon.
[  OK  ] Started udev Coldplug all Devices.
         Starting udev Wait for Complete Device Initialization...
[  OK  ] Started Replay Read-Ahead Data.
         Starting Load Kernel Modules...
         Starting Remount Root and Kernel File Systems...
[  OK  ] Started Create static devices
[*     ] (1 of 4) A start job is running for dev-disk-by\x2du...(7s / 1min 30s)
[*     ] (1 of 4) A start job is running for dev-disk-by\x2du...(7s / 1min 30s)

...

Timed out waiting for device dev-disk-by\x2duuid-c4a...cfef77d.device.
[DEPEND] Dependency failed for /opt.
[DEPEND] Dependency failed for Local File Systems.
[DEPEND] Dependency failed for Postfix Mail Transport Agent.
Welcome to emergency shell
Give root password for maintenance
(or press Control-D to continue):</screen>
    <para>
     在此階段，您將在 initrd 環境中的暫時 <command>dracut</command> 緊急外圍程序中工作。若要永久保留以下所述的組態變更，您需要在已安裝系統的環境中執行這些變更。
    </para>
    <procedure>
     <step>
      <para>
       確定系統根 (<filename>/</filename>) 檔案系統。檢查 <filename>/proc/cmdline</filename> 的內容並尋找 <option>root=</option> 參數。
      </para>
     </step>
     <step>
      <para>
       驗證是否已掛接根檔案系統：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl status sysroot.mount</screen>
      <tip>
       <para>
        依預設，<command>dracut</command> 會將根檔案系統掛接到 <filename>/sysroot</filename> 之下。
       </para>
      </tip>
      <para>
       從現在起，我們假設根檔案系統已掛接到 <filename>/sysroot</filename> 下。
      </para>
     </step>
     <step>
      <para>
       在 <filename>/sysroot</filename> 下掛接系統所需的檔案系統，使用 <command>chroot</command> 指令移至該目錄，然後掛接所有檔案系統。例如：
      </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> for x in proc sys dev run; do mount --bind /$x /sysroot/$x; done
<prompt>&gt; </prompt><command>sudo</command> chroot /sysroot /bin/bash
<prompt>&gt; </prompt><command>sudo</command> mount -a
</screen>
      <para>
       如需更多詳細資料，請參閱 <xref linkend="sec-trouble-data-recover-rescue-access"/>。
      </para>
     </step>
     <step>
      <para>
       依照以下程序中的建議變更多重路徑或 dracut 組態。記得重建 <filename>initrd</filename> 以包含修改。
      </para>
     </step>
     <step>
      <para>
       透過輸入 <command>exit</command> 指令退出 <command>chroot</command> 環境，然後退出緊急外圍程序並按 <keycombo><keycap function="control"/>
       <keycap>D</keycap></keycombo> 來將伺服器重新開機。
      </para>
     </step>
    </procedure>

   <procedure xml:id="pro-multipath-trouble-root-blacklist">
    <title>緊急外圍程序：將檔案系統加入黑名單</title>
    <para>
     如果根檔案系統不在多重路徑上，卻啟用了多重路徑，則需要此修復。在此類設定中，多重路徑會嘗試為未列入黑名單的所有裝置設定其路徑。由於具有根檔案系統的裝置已掛接，它對於多重路徑而言是無法存取的，因而會導致路徑設定失敗。您可以在 <filename>/etc/multipath.conf</filename> 中將根裝置列入黑名單來正確設定多重路徑，從而修復此問題。
    </para>
    <step>
     <para>
      在緊急外圍程序中執行 <command>multipath -v2</command>，並確定根檔案系統的裝置。指令將產生類似如下的輸出：
     </para>
<screen><prompt role="root"># </prompt>multipath -v2
Dec 18 10:10:03 | 3600508b1001030343841423043300400: ignoring map</screen>
     <para>
      <literal>| </literal> 與 <literal>:</literal> 之間的字串是列入黑名單所需的 WWID。
     </para>
    </step>
    <step>
     <para>
      開啟 <filename>/etc/multipath.conf</filename> 並新增以下內容：
     </para>
<screen>blacklist {
  wwid "<replaceable>WWID</replaceable>"
}</screen>
     <para>
      使用您在上一步中擷取的 ID 取代 <replaceable>WWID</replaceable>。如需詳細資訊，請參閱<xref linkend="sec-multipath-blacklist"/>。
     </para>
    </step>
    <step>
     <para>
      使用以下指令重建 <systemitem>initrd</systemitem>：
     </para>
<screen><prompt>&gt; </prompt>dracut -f --add-multipath</screen>
    </step>
   </procedure>
   <procedure xml:id="pro-multipath-trouble-root-initrd">
    <title>緊急外圍程序：重建 <filename>initrd</filename></title>
    <para>
     如果 <filename>initrd</filename> 與系統之間的多重路徑狀態 (已啟用或已停用) 不相同，則需要執行此修復程序。若要修復此問題，請重建 <filename>initrd</filename>：
    </para>
    <step>
     <para>
      如果已在系統中<emphasis>啟用</emphasis>多重路徑，請透過以下指令重建支援多重路徑的 initrd：
     </para>
<screen><prompt>&gt; </prompt>dracut --force --add multipath</screen>
     <para>
      如果已在系統中<emphasis>停用</emphasis>多重路徑，請透過以下指令重建支援多重路徑的 initrd：
     </para>
<screen><prompt>&gt; </prompt>dracut --force -o multipath</screen>
    </step>
   </procedure>
   <procedure xml:id="pro-multipath-trouble-root-drivers">
    <title>緊急外圍程序：重建 <filename>initrd</filename></title>
    <para>
     如果 initrd 不包含用於存取網路連接儲存的驅動程式，則需要此修復。例如，如果系統是在沒有多重路徑的情況下安裝的，或者當新增或更換相應硬體時，就可能需要執行此修復程序。
    </para>
    <step>
     <para>
      將所需的驅動程式新增至檔案 <filename>/etc/dracut.conf.d/01-dist.conf</filename> 中的變數 <envar>force_drivers</envar>。例如，如果系統包含由 <filename>hpsa</filename> 驅動程式存取的 RAID 控制器，且多重路徑裝置連接至 qla23xx 驅動程式所存取的 QLogic 控制器，則此項目應為：
     </para>
<screen>force_drivers+="hpsa qla23xx"</screen>
    </step>
    <step>
     <para>
      使用以下指令重建 <systemitem>initrd</systemitem>：
     </para>
<screen><prompt>&gt; </prompt>dracut -f --add-multipath</screen>
    </step>
    <step>
     <para>
      為了防止在連接網路儲存失敗時系統開機進入應急模式，建議將掛接選項 <literal>_netdev</literal> 新增到 <filename>/etc/fstab</filename> 中的相應項目。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-prio-fail">
   <title>升級至多重路徑 0.4.9 或更高版本後個別裝置的 PRIO 設定失敗</title>
   <para>
    從版本 0.4.9 開始，多重路徑工具使用 <literal>/etc/multipath.conf</literal> 檔案中 <literal>defaults{}</literal> 或 <literal>devices{}</literal> 區段內的 <filename>prio</filename> 設定。當關鍵字 <literal>prio</literal> 是為 <literal>multipaths{)</literal> 區段中的個別 <literal>multipath</literal> 定義而指定時，它會無訊息式地忽略該關鍵字。
   </para>
   <para>
    多重路徑工具 0.4.8 允許 <literal>multipaths{)</literal> 區段內個別 <literal>multipath</literal> 定義中的 prio 設定置換 <literal>defaults{}</literal> 或 <literal>devices{}</literal> 區段內的 <literal>prio</literal> 設定。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-prio-argument-fail">
   <title>升級至 multipath-tools-0.4.9 或更高版本後使用引數的 PRIO 設定失敗</title>
   <para>
    從 <filename>multipath-tools-0.4.8</filename> 升級到 <filename>multipath-tools-0.4.9</filename> 後，<filename>/etc/multipath.conf</filename> 檔案中的 <literal>prio</literal> 設定對於需要引數的優先程度排序器將會損壞。在 multipath-tools-0.4.9 中，<literal>prio</literal> 關鍵字用於指定優先程度排序器，<literal>prio_args</literal> 關鍵字則用於為需要引數的優先程度排序器指定引數。以前，優先程度排序器及其引數都在同一 <literal>prio</literal> 行上指定。
   </para>
   <para>
    例如，在 multipath-tools-0.4.8 中，下行用於指定優先程度排序器，並且在同一行中指定其引數。
   </para>
<screen>prio "weightedpath hbtl [1,3]:.:.+:.+ 260 [0,2]:.:.+:.+ 20"</screen>
   <para>
    升級到 multipath-tools-0.4.9 或更高版本後，該指令會導致錯誤。訊息類似下方所列：
   </para>
<screen>&lt;Month day hh:mm:ss&gt; | Prioritizer 'weightedpath hbtl [1,3]:.:.+:.+ 260
[0,2]:.:.+:.+ 20' not found in /lib64/multipath</screen>
   <para>
    若要解決此問題，請使用文字編輯器修改 <filename>/etc/multipath.conf</filename> 檔案中的 <literal>prio</literal> 行。建立兩行，在 <filename>prio</filename> 行上指定優先程度排序器，並在其下的 <filename>prio_args</filename> 行上指定優先程度排序器引數：
   </para>
<screen>prio "weightedpath"
prio_args "hbtl [1,3]:.:.+:.+ 260 [0,2]:.:.+:.+ 20"</screen>
   <para>
    執行 <command>sudo systemctl restart multipathd</command> 重新啟動 <systemitem class="daemon">multipathd</systemitem> 精靈以使變更生效。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-tids">
   <title>技術資訊文件</title>
   <para>
    如需有關在 SUSE Linux Enterprise Server 上對多重路徑 I/O 問題進行疑難排解的資訊，請參閱 SUSE 知識庫中的下列技術資訊文件 (TID)：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      <link xlink:href="https://www.suse.com/support/kb/doc.php?id=3617600"><citetitle>Using LVM on local and SAN attached devices (在本地裝置和附加到 SAN 的裝置上使用 LVM)</citetitle></link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link xlink:href="https://www.suse.com/support/kb/doc.php?id=7007498"><citetitle>Using LVM on Multipath (DM MPIO) Devices (在多重路徑 (DM MPIO) 裝置上使用 LVM)</citetitle></link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link xlink:href="https://www.suse.com/support/kb/doc.php?id=7009660"><citetitle>HOWTO: Add, Resize and Remove LUN without restarting SLES (HOWTO：在不重新啟動 SLES 的情況下新增、調整和移除 LUN)</citetitle></link>
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
</chapter>
