<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="yast2_ncurses.xml" version="5.0" xml:id="cha-yast-text">

 <title>文本方式的 YaST</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  本章所针对的读者是在其系统上不运行 X 服务器而依赖于基于文本的安装工具的系统管理员和专家。它提供了与以文本方式启动和操作 YaST 有关的基本信息。
 </para>
 <para>
  文本模式的 YaST 使用 ncurses 库提供简单的伪图形用户界面。默认情况下已安装 ncurses 库。用于运行 YaST 的终端仿真器支持的最小大小为 80x25 个字符。
 </para>
 <figure xml:id="fig-yast2-ncurses">
  <title>文本方式下 YaST 的主窗口</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="yast2_ncurses_main.png" width="70%"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="yast2_ncurses_main.png" width="75%"/>
   </imageobject>
  </mediaobject>
 </figure>
 <para>
  以文本模式启动 YaST 时，会显示 YaST 控制中心（请参见<xref linkend="fig-yast2-ncurses" xrefstyle="select:label nopage"/>）。该窗口包含三个区域。左侧方框中显示各种模块所属的类别。此方框在 YaST 启动后处于活动状态，因此以白色粗边框进行标记。活动类别处于选中状态。右侧方框提供活动类别中可用模块的概述。底部框架中包含<guimenu>帮助</guimenu>和<guimenu>退出</guimenu>按钮。
 </para>
 <para>
  启动 YaST 控制中心时，会自动选择<guimenu>软件</guimenu>类别。使用 <keycap function="down"/> 和 <keycap function="up"/> 可更改类别。要从类别中选择某个模块，请使用 <keycap function="right"/> 激活右侧方框，然后使用 <keycap function="down"/> 和 <keycap function="up"/> 选择该模块。按住箭头键在可用模块列表中滚动。选择模块后，按 <keycap function="enter"/> 将其启动。
 </para>
 <para>
  模块中的各种按钮和选择字段包含一个高亮显示的字母（默认为黄色）。使用 <keycombo action="press"><keycap function="alt"/><keycap>highlighted_letter</keycap></keycombo> 可直接选择按钮，而无需使用 <keycap function="tab"/> 键导航。要退出 YaST 控制中心，请按 <keycombo action="press"><keycap function="alt"/><keycap>Q</keycap></keycombo>，或者选择<guimenu>退出</guimenu>并按 <keycap function="enter"/>。
 </para>
 <tip>

  <title>刷新 YaST 对话框</title>
  <para>
   如果 YaST 对话框损坏或变形（例如在调整窗口大小时），请按 <keycombo action="press"><keycap function="control"/><keycap>L</keycap></keycombo> 来刷新并恢复其内容。
  </para>
 </tip>

 <sect1 xml:id="sec-yast-navi-ncurses-modul">
  <title>在模块中导航</title>

  <para>
   下面在介绍 YaST 模块中的控制元素时，均假定所有功能键和 <keycap function="alt"/> 组合键都可用并且没有被指派不同的全局功能。有关可能出现的异常的信息，请参见<xref linkend="sec-yast-ncurses-tasten"/>。
  </para>

  <variablelist>
   <varlistentry>
    <term>在按钮和选择列表中导航</term>
    <listitem>
     <para>
      使用 <keycap function="tab"/> 键在按钮和包含选择列表的框架之间导航。要以相反顺序导航，请使用 <keycombo action="press"> <keycap function="alt"/>
      <keycap function="tab"/> </keycombo> 或 <keycombo action="press">
      <keycap function="shift"/> <keycap function="tab"/> </keycombo> 组合键。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>在选择列表中导航</term>
    <listitem>
     <para>
      使用方向键（<keycap function="up"/> 和 <keycap function="down"/>）可浏览包含选择列表的活动方框中的各个元素。如果方框内的项超出了方框宽度，请使用 <keycombo action="press"><keycap function="shift"/>
      <keycap function="right"/></keycombo> 或 <keycombo action="press">
      <keycap function="shift"/> <keycap function="left"/></keycombo> 来左右水平滚动。也可以使用 <keycombo action="press"> <keycap function="control"/> <keycap>E</keycap>
      </keycombo> 或 <keycombo action="press"> <keycap function="control"/>
      <keycap>A</keycap> </keycombo>。如果使用 <keycap function="right"/> 或 <keycap function="left"/> 会导致更改活动方框或当前选择列表（如同在控制中心内），也可以使用此组合键。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>按钮、单选项按钮和复选框</term>
    <listitem>
     <para>
      要选择带空方括号（复选框）或空圆括号（单选按钮）的按钮，请按 <keycap function="space"/> 或 <keycap function="enter"/> 键。或者，可以使用 <keycombo action="press">
      <keycap function="alt"/> <keycap>highlighted_letter</keycap></keycombo> 直接选择单选按钮和复选框。在这种情况下，无需使用 <keycap function="enter"/> 键进行确认。如果使用 <keycap function="tab"/> 键导航到某个项目，请按 <keycap function="enter"/> 键执行所选操作或激活相应的菜单项。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>功能密钥</term>
    <listitem>
     <para>
      功能键 (<keycap>F1</keycap> ... <keycap>F12</keycap>) 可让您快速访问各种按钮。YaST 屏幕底部的行中显示了可用的功能键组合 (<literal>F<replaceable>X</replaceable></literal>)。功能键和按钮的实际映射关系取决于活动 YaST 模块，因为不同的模块提供不同的按钮（<guimenu>细节</guimenu>、<guimenu>信息</guimenu>、<guimenu>添加</guimenu>、<guimenu>删除</guimenu>等）。可以将 <keycap>F10</keycap> 用作<guimenu>接受</guimenu>、<guimenu>确定</guimenu>、<guimenu>下一步</guimenu>和<guimenu>完成</guimenu>。按 <keycap>F1</keycap> 可访问 YaST 帮助。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>在 ncurses 方式中使用导航树</term>
    <listitem>
     <para>
      某些 YaST 模块使用窗口左侧的导航树选择配置对话框。使用方向键（<keycap function="up"/> 和 <keycap function="down"/>）可在树中导航。使用 <keycap function="space"/> 可打开或关闭树中的项。在 ncurses 模式下，在导航树中进行选择之后必须按 <keycap function="enter"/> 才能显示所选对话框。这是一种有意行为，目的是在浏览导航树时避免耗时的重绘。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>在软件安装模块中选择软件</term>
    <listitem>
     <para>
      使用左侧的过滤器可以限制显示的包数。已安装的包标有字母 <literal>i</literal>。要更改包的状态，请按 <keycap function="space"/> 或 <keycap function="enter"/>。或者，也可以使用<guimenu>操作</guimenu>菜单选择所需的状态更改 (安装、删除、更新、禁止或锁定)。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <figure xml:id="fig-yast2-ncurses-inst">
   <title>软件安装模块</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="yast2_ncurses_inst.png" width="70%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="yast2_ncurses_inst.png" width="75%"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>

 <sect1 xml:id="sec-yast-ncurses-advanced-hotkeys">
  <title>高级组合键</title>
  <para>文本模式的 YaST 具有一套高级组合键。</para>
  <variablelist>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="shift"/><keycap>F1</keycap></keycombo>
    </term>
    <listitem>
     <para>
      显示高级热键的列表。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="shift"/><keycap>F4</keycap></keycombo>
    </term>
    <listitem>
     <para>
      更改颜色方案。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="control"/><keycap>\</keycap></keycombo>
    </term>
    <listitem>
     <para>
      退出应用程序。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="control"/><keycap>L</keycap></keycombo>
    </term>
    <listitem>
     <para>
      刷新屏幕。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="control"/><keycap>D</keycap></keycombo>
     <keycap>F1</keycap>
    </term>
    <listitem>
     <para>
      显示高级热键的列表。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="control"/><keycap>D</keycap></keycombo>
     <keycombo action="press"><keycap function="shift"/><keycap> D</keycap></keycombo>
    </term>
    <listitem>
     <para>
      以屏幕截图的形式将对话框转储到日志文件。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="control"/><keycap>D</keycap></keycombo>
     <keycombo action="press"><keycap function="shift"/><keycap>Y</keycap></keycombo>
    </term>
    <listitem>
     <para>
      打开 YDialogSpy 以查看控件层次结构。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 <sect1 xml:id="sec-yast-ncurses-tasten">
  <title>组合键的限制</title>

  <para>
   如果您的窗口管理器使用全局 <keycap function="alt"/> 组合键，则 YaST 中的 <keycap function="alt"/> 组合键可能无效。像 <keycap function="alt"/> 或 <keycap function="shift"/> 这样的键也可能会被终端设置占用。
  </para>

  <variablelist>
   <varlistentry>
    <term>使用 <keycap function="escape"/> 取代 <keycap function="alt"/>
    </term>
    <listitem>
     <para>
       可以代替 <keycap function="alt"/> 而使用 <keycap function="escape"/><keycap function="alt"/> 快捷键。例如，<keycombo action="seq">
      <keycap function="escape"/><keycap>H</keycap></keycombo> 可代替 <keycombo action="press">
      <keycap function="alt"/><keycap>H</keycap></keycombo>。（首先按 <keycap function="escape"/>，<emphasis>然后</emphasis>按 <keycap>H</keycap> 键。）
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term> 使用 <keycombo action="press"><keycap function="control"/><keycap>F</keycap></keycombo> 和 <keycombo action="press"><keycap function="control"/><keycap>B </keycap></keycombo> 执行向后和向前导航
    </term>
    <listitem>
     <para>
      如果 <keycap function="alt"/> 和 <keycap function="shift"/> 组合键由窗口管理器或终端占用，可改用组合键 <keycombo action="press"> <keycap function="control"/>
      <keycap>F</keycap></keycombo>（向前）和 <keycombo action="press">
      <keycap function="control"/><keycap>B</keycap></keycombo>（向后）。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>功能键的限制</term>
    <listitem>
     <para>
      功能键 (<keycap>F1</keycap> ... <keycap>F12</keycap>) 也用于执行多种功能。某些功能键可能会被终端占用而不能用于 YaST。但 <keycap function="alt"/> 组合键和功能键应该始终在纯文本控制台上完全可用。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-yast-ncurses-commands">
  <title>YaST 命令行选项</title>

  <para>
   除了文本模式界面以外，YaST 还提供了一个纯命令行界面。要获取 YaST 命令行选项列表，请输入：
  </para>

<screen>yast -h</screen>

  <sect2 xml:id="sec-yast-ncurses-modulaufruf">
   <title>启动单个模块</title>
   <para>
    为了节省时间，可以直接启动单个 YaST 模块。要启动模块，请输入：
   </para>
<screen>yast &lt;module_name&gt;</screen>
   <para>
    要查看系统上所有可用模块名称的列表，请使用 <command>yast -l</command> 或 <command>yast --list</command>。例如，要启动网络模块，请输入 <command>yast lan</command>。
   </para>
  </sect2>

  <sect2 xml:id="sec-yast-ncurses-cmdl">
   <title>从命令行安装包</title>
   <para>
    如果知道包名称且包是由您的任何活动安装源提供的，则可以使用命令行选项 <option>-i</option> 安装该包：
   </para>
<screen>yast -i &lt;package_name&gt;</screen>
   <para>
    或
   </para>
<screen>yast --install &lt;package_name&gt;</screen>
   <para>
    <replaceable>PACKAGE_NAME</replaceable> 可以是通过依赖项检查安装的单个简短包名称（例如 <systemitem class="resource">gvim</systemitem>），也可以是并非通过依赖项检查安装的 RPM 包的完整路径。
   </para>
   <para>
    如果需要具有 YaST 未提供的功能的，基于命令行的软件管理实用程序，请考虑使用 Zypper。此实用程序使用相同的软件管理库，这也是 YaST 包管理器的基础。<xref linkend="sec-zypper"/>中介绍了 Zypper 的基本用法。
   </para>
  </sect2>

  <sect2 xml:id="sec-yast-ncurses-modulaufruf-installing">
   <title>YaST 模块的命令行参数</title>
   <para>
    为了在脚本中使用 YaST 功能，YaST 提供了对单个模块的命令行支持。并非所有模块都具有命令行支持。要显示某个模块的可用选项，请输入：
   </para>
<screen>yast &lt;module_name&gt; help</screen>
   <para>
    如果模块不提供命令行支持，将以文本方式启动，并显示以下消息：
   </para>
<screen>This YaST module does not support the command line interface.</screen>
  </sect2>
 </sect1>
</chapter>
