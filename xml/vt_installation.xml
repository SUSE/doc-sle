<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.vt.installation">
 <title>Installation of Virtualization Components</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
   </dm:bugtracker>
  </dm:docmanager>
 </info>
 <para>
  None of the virtualization tools is installed by default.
 </para>
 <sect1 xml:id="sec.vt.installation.kvm">
  <title>Installing &kvm;</title>

  <para>
   To install &kvm; and KVM tools, proceed as follows:
  </para>

  <procedure>
   <step>
    <para>
     Start &yast; and choose <menuchoice>
     <guimenu>Virtualization</guimenu> <guimenu>Install Hypervisor and
     Tools</guimenu></menuchoice>.
    </para>
   </step>
   <step>
    <para>
     Select <guimenu>&kvm; server</guimenu> for a minimal installation of
     &qemu; tools. Select <guimenu>&kvm; tools</guimenu> if a
     &libvirt;-based management stack is also desired. Confirm with
     <guimenu>Accept</guimenu>.
    </para>
   </step>
   <step>
    <para>
     To enable normal networking for the &vmguest;, using a
     network bridge is recommended. &yast; offers to automatically
     configure a bridge on the &vmhost;. Agree to do so by choosing
     <guimenu>Yes</guimenu>, otherwise choose <guimenu>No</guimenu>.
    </para>
   </step>
   <step>
    <para>
     After the setup has been finished, you can start setting up
     &vmguest;s. Rebooting the &vmhost; is not required.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.vt.installation.xen">
  <title>Installing &xen;</title>

  <para>
   To install &xen; and &xen; tools, proceed as follows:
  </para>

  <procedure>
   <step>
    <para>
     Start &yast; and choose <menuchoice>
     <guimenu>Virtualization</guimenu> <guimenu>Install Hypervisor and
     Tools</guimenu></menuchoice>.
    </para>
   </step>
   <step>
    <para>
     Select <guimenu>&xen; server</guimenu> for a minimal installation of
     &xen; tools. Select <guimenu>&xen; tools</guimenu> if a
     &libvirt;-based management stack is also desired. Confirm with
     <guimenu>Accept</guimenu>.
    </para>
   </step>
   <step>
    <para>
     To enable normal networking for the &vmguest;, using a
     network bridge is recommended. &yast; offers to automatically
     configure a bridge on the &vmhost;. Agree to do so by choosing
     <guimenu>Yes</guimenu>, otherwise choose <guimenu>No</guimenu>.
    </para>
   </step>
   <step>
    <para>
     After the setup has been finished, you need to reboot the machine with
     the <emphasis>&xen; kernel</emphasis>.
    </para>
    <tip>
     <title>Default Boot Kernel</title>
     <para>
      If everything works as expected, change the default boot kernel with &yast; and make the &xen;-enabled kernel the default.
      For more information about changing the default kernel, see <xref linkend="sec.grub2.yast2.config"/>.
     </para>
    </tip>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.vt.installation.containers">
  <title>Installing Containers</title>

  <para>
   To install containers, proceed as follows:
  </para>

  <procedure>
   <step>
    <para>
     Start &yast; and choose <menuchoice>
     <guimenu>Virtualization</guimenu> <guimenu>Install Hypervisor and
     Tools</guimenu></menuchoice>.
    </para>
   </step>
   <step>
    <para>
     Select <guimenu>libvirt lxc daemon</guimenu> and confirm with
     <guimenu>Accept</guimenu>.
    </para>
   </step>
<!-- ========================================================= -->
<!-- TODO Either fix Yast to reload apparmor or describe it here -->
<!-- ========================================================= -->
  </procedure>
 </sect1>
 <sect1 xml:id="sec.vt.installation.patterns">
  <title>Patterns</title>

  <para>
   It is possible using Zypper and patterns to install virtualization
   packages. Run the command <command>zypper in -t pattern</command>
   <replaceable>PATTERN</replaceable>. Available patterns are:
  </para>

  <variablelist>
   <varlistentry>
    <term>KVM</term>
    <listitem>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        <systemitem class="resource">kvm_server</systemitem>: sets up the
        &kvm; &vmhost; with &qemu; tools for management
       </para>
      </listitem>
      <listitem>
       <para>
        <systemitem class="resource">kvm_tools</systemitem>: installs the
        &libvirt; tools for managing and monitoring &vmguest;s
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Xen</term>
    <listitem>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        <systemitem class="resource">xen_server</systemitem>: sets up the
        &xen; &vmhost; with &xen; tools for management
       </para>
      </listitem>
      <listitem>
       <para>
        <systemitem class="resource">xen_tools</systemitem>: installs the
        &libvirt; tools for managing and monitoring &vmguest;s
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Containers</term>
    <listitem>
     <para>
      There is no pattern for containers; install the
      <emphasis>libvirt-daemon-lxc</emphasis> package.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 <sect1 xml:id="sec.vt.installation.ovmf">
  <title>Installing UEFI Support</title>
  <para>
   UEFI support is provided by <emphasis>OVMF</emphasis>
   (<emphasis>Open Virtual Machine Firmware</emphasis>). To enable UEFI
   boot, first install the <package>qemu-ovmf-x86_64</package> or
   <package>qemu-uefi-aarch64</package> package.
  </para>
  <para>
   &libvirt; is configured using
   <filename>/usr/share/qemu/ovmf-x86_64-ms-4m-code.bin</filename> and
   <filename>/usr/share/qemu/ovmf-x86_64-ms-4m-vars.bin</filename> as
   default UEFI firmware and VARS images. For ARM the defaults are
   <filename>/usr/share/qemu/aavmf-aarch64-code.bin</filename> and
   <filename>/usr/share/qemu/aavmf-aarch64-vars.bin</filename>.
  </para>
  <para>
   The packages contain the following files:
  </para>
<screen>&prompt.root;<command>rpm -ql qemu-ovmf-x86_64</command>
/usr/share/qemu/ovmf-x86_64-ms-code.bin
/usr/share/qemu/ovmf-x86_64-ms-vars.bin
/usr/share/qemu/ovmf-x86_64-ms.bin
/usr/share/qemu/ovmf-x86_64-opensuse-code.bin
/usr/share/qemu/ovmf-x86_64-opensuse-vars.bin
/usr/share/qemu/ovmf-x86_64-opensuse.bin
/usr/share/qemu/ovmf-x86_64-suse-code.bin
/usr/share/qemu/ovmf-x86_64-suse-vars.bin
/usr/share/qemu/ovmf-x86_64-suse.bin
/usr/share/qemu/ovmf-x86_64-code.bin
/usr/share/qemu/ovmf-x86_64-vars.bin
/usr/share/qemu/ovmf-x86_64.bin</screen>
  <para>
   The <filename>*-code.bin</filename> files are the UEFI firmwares.
   The <filename>*-vars.bin</filename> files are corresponding variable
   store images that can be used as a template for per-VM non-volatile
   store. &libvirt; copies the specified <literal>vars</literal>
   template to a per-VM path under
   <filename>/var/lib/libvirt/qemu/nvram/</filename> when first
   creating the VM. Files without <literal>code</literal> or
   <literal>vars</literal> in the name can be used as a single UEFI
   image. They are not as useful since no UEFI variables persist
   across power cycles of the VM.
  </para>
  <para>
   The <filename>*-ms*.bin</filename> files contain Microsoft keys as
   found on real hardware. Therefore, they are configured as default in
   &libvirt;. Likewise, the <filename>*-suse*.bin</filename> files
   contain preinstalled &suse; and &opensuse; keys. There is also a set
   of files with no preinstalled keys.
  </para>
  <para>
   For details, see <xref linkend="vle.libvirt.inst.virt-install.ovmf"
   /> and <link xlink:href=
   "http://www.linux-kvm.org/downloads/lersek/ovmf-whitepaper-c770f8c.txt"
   />.
  </para>
 </sect1>
</chapter>
