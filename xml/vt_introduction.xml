<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="chap.virtualization.introduction">
<!-- I/O virtualization -->
 <title>Virtualization Technology</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
   </dm:bugtracker>
  </dm:docmanager>
  <abstract>
   <para>
    Virtualization is a technology that provides a way for a machine (Host) to
    run another operating system (guest virtual machines) on top of the host
    operating system.
   </para>
  </abstract>
 </info>
 <sect1 xml:id="sec.virtualization.introduction.overview">
  <title>Overview</title>

<!-- import from White papers -->

  <para>
   &sle; includes the latest open source virtualization technologies, &xen;
   and &kvm;. With these Hypervisors, &sle; can be used to provision,
   de-provision, install, monitor and manage multiple virtual machines
   (&vmguest;s) on a single physical system (for more information see <xref
   linkend="gloss.vt.hypervisor"/>).
  </para>
  <para>
   Out of the box, &sle; can create virtual machines running both modified,
   highly tuned, paravirtualized operating systems and fully virtualized
   unmodified operating systems. Full virtualization allows the guest OS to
   run unmodified and requires the presence of &x86-64; processors which
   supports either Intel* Virtualization Technology (Intel VT) or AMD*
   Virtualization (AMD-V)).
  </para>

  <para>
   The primary component of the operating system that enables virtualization
   is a Hypervisor (or virtual machine manager), which is a layer of software
   that runs directly on server hardware. It controls platform resources,
   sharing them among multiple &vmguest;s and their operating systems by
   presenting virtualized hardware interfaces to each &vmguest;.
  </para>

  <para>
   &sle; is an enterprise-class Linux server operating system that offers two
   types of Hypervisors: &xen; and &kvm;. Both Hypervisors support
   virtualization on 64-bit x86-based hardware architectures. Both &xen; and
   &kvm; support full virtualization mode. In addition, &xen; supports
   paravirtualized mode. &sle; with &xen; or &kvm; acts as a virtualization
   host server (<xref linkend="gloss.vt.vhs"/>) that supports &vmguest;s with
   its own guest operating systems. The &suse; &vmguest; architecture consists
   of a Hypervisor and management components that constitute the VHS, which
   runs many application-hosting &vmguest;s.
  </para>

  <para>
   In &xen;, the management components run in a privileged &vmguest; often
   called <xref linkend="gloss.vt.dom0"/>. In &kvm;, where the Linux kernel
   acts as the hypervisor, the management components run directly on the VHS.
  </para>
 </sect1>
 <sect1 xml:id="sec.virtualization.introduction.capabilities">
  <title>Virtualization Capabilities</title>

  <para>
   Virtualization design provides many capabilities to your
   organization. Virtualization of operating systems is used in many
   computing areas:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     Server consolidation: Many servers can be replaced by one big physical
     server, so hardware is consolidated, and Guest Operating Systems are
     converted to virtual machine. It provides the ability to run legacy
     software on new hardware.
    </para>
   </listitem>
   <listitem>
    <para>
     Isolation: guest operating system can be fully isolated from the Host
     running it. So if the virtual machine is corrupted, the Host system is
     not harmed.
    </para>
   </listitem>
   <listitem>
    <para>
     Migration: A process to move a running virtual machine to another
     physical machine. Live migration is an extended feature that allows
     this move without disconnection of the client or the application.
    </para>
   </listitem>
   <listitem>
    <para>
     Disaster recovery: <xref linkend="gloss.vt.virtualized"/> guests are
     less dependent on the hardware, and the Host server provides snapshot
     features to be able to restore a known running system without any
     corruption.
    </para>
   </listitem>
   <listitem>
    <para>
     Dynamic load balancing: A migration feature that brings a simple way to
     load-balance your service across your infrastructure.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec.virtualization.introduction.benefits">
  <title>Virtualization Benefits</title>

  <para>
   Virtualization brings a lot of advantages while providing the same
   service as a hardware server.
  </para>

  <para>
   First, it reduces the cost of your infrastructure. Servers are mainly
   used to provide a service to a customer, and a virtualized operating
   system can provide the same service, with:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     Less hardware: You can run several operating system on one host, so all
     hardware maintenance will be reduced.
    </para>
   </listitem>
   <listitem>
    <para>
     Less power/cooling: Less hardware means you do not need to invest more
     in electric power, backup power, and cooling if you need more service.
    </para>
   </listitem>
   <listitem>
    <para>
     Save space: Your data center space will be saved because you do not need
     more hardware servers (less servers than service running).
    </para>
   </listitem>
   <listitem>
    <para>
     Less management: Using a &vmguest; simplifies the administration of
     your infrastructure.
    </para>
   </listitem>
   <listitem>
    <para>
     Agility and productivity: Virtualization provides
     <emphasis>migration</emphasis> capabilities, <emphasis>live
     migration</emphasis> and <emphasis>snapshots</emphasis>. These features
     reduce downtime, and bring an easy way to move your service from one
     place to another without any service interruption.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec.virtualization.introduction.fvpv">
  <title>Virtualization Modes</title>

  <para>
   Guest operating systems are hosted on virtual machines in either full
   virtualization (FV) mode or paravirtual (PV) mode. Each virtualization
   mode has advantages and disadvantages.
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     Full virtualization mode lets virtual machines run unmodified operating
     systems, such as Windows* Server 2003. It uses Binary Translation technique
     at first. Then, it introduces
     <xref linkend="gloss.vt.hwassisted"/> virtualization technology, such
     as AMD* Virtualization or Intel* Virtualization Technology for a better performance.
    </para>
    <para>
     Some guest operating systems hosted in full virtualization mode can be
     configured to run the Novell* Virtual Machine Drivers instead of
     drivers originating from the operating system. Running virtual machine
     drivers improves performance dramatically on guest operating systems,
     such as Windows Server 2003. For more information, see
     <xref linkend="app.vmdp.driver" xrefstyle="ChapTitleOnPage"/>.
    </para>
   </listitem>
   <listitem>
    <para>
     Paravirtual mode usually modifies guest operating system to suit better
     in virtualization environment. Typically, operating systems running in 
     paravirtual mode enjoy performance more than other stuff.
    </para>
    <para>
     Operating systems currently modified to run in paravirtual mode are
     called <emphasis>paravirtualized operating systems</emphasis>
     and include &productname; and NetWareÂ® 6.5 SP8.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
<!-- I/O virtualization -->
 <xi:include href="vt_io.xml"/>
</chapter>
