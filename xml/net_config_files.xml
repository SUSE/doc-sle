<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect2
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<sect2 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec.network.manconf.files">
 <title>Configuration Files</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  This section provides an overview of the network configuration files and
  explains their purpose and the format used.
 </para>
 <sect3 xml:id="wicked.configuration.common.xml">
  <title><filename>/etc/wicked/common.xml</filename></title>
  <para>
   The <filename>/etc/wicked/common.xml</filename> file contains common
   definitions that should be used by all applications. It is sourced/included
   by the other configuration files in this directory. Although you can use
   this file to enable debugging across all
   <literal>wicked</literal> components, we recommend to use the file
   <filename>/etc/wicked/local.xml</filename> for this purpose. After applying
   maintenance updates you might lose your changes as the
   <filename>/etc/wicked/common.xml</filename> might be overwritten. The
   <filename>/etc/wicked/common.xml</filename> file includes the
   <filename>/etc/wicked/local.xml</filename> in the default installation, thus
   you typically do not need to modify the
   <filename>/etc/wicked/common.xml</filename>.
  </para>
  <para>
   In case you want to disable <literal>nanny</literal> by setting the
   <literal>&lt;use-nanny&gt;</literal> to <literal>false</literal>, restart
   the <literal>wickedd.service</literal> and then run the following command to
   apply all configurations and policies:
  </para>
<screen>&prompt.sudo;wicked ifup all</screen>
  <note>
   <title>Configuration Files</title>
   <para>
    The <literal>wickedd</literal>, <literal>wicked</literal>, or
    <literal>nanny</literal> programs try to read
    <filename>/etc/wicked/common.xml</filename> if their own configuration
    files do not exist.
   </para>
  </note>
 </sect3>
 <sect3 xml:id="wicked.configuration.server.xml">
  <title><filename>/etc/wicked/server.xml</filename></title>
  <para>
   The file <filename>/etc/wicked/server.xml</filename> is read by the
   <literal>wickedd</literal> server process at start-up. The file stores
   extensions to the <filename>/etc/wicked/common.xml</filename>. On top of
   that this file configures handling of a resolver and receiving information
   from <literal>addrconf</literal> supplicants, for example DHCP.
  </para>
  <para>
   We recommend to add changes required to this file into a separate file
   <filename>/etc/wicked/server-local.xml</filename>, that gets included by
   <filename>/etc/wicked/server.xml</filename>. By using a separate file
   you avoid overwriting of your changes during maintenance updates.
  </para>
 </sect3>
 <sect3 xml:id="wicked.configuration.client.xml">
  <title><filename>/etc/wicked/client.xml</filename></title>
  <para>
   The <filename>/etc/wicked/client.xml</filename> is used by the
   <command>wicked</command> command. The file specifies the location of a
   script used when discovering devices managed by ibft and configures
   locations of network interface configurations.
  </para>
  <para>
   We recommend to add changes required to this file into a separate file
   <filename>/etc/wicked/client-local.xml</filename>, that gets included by
   <filename>/etc/wicked/server.xml</filename>. By using a separate file
   you avoid overwriting of your changes during maintenance updates.
  </para>
 </sect3>
 <sect3 xml:id="wicked.configuration.nanny.xml">
  <title><filename>/etc/wicked/nanny.xml</filename></title>
  <para>
   The <filename>/etc/wicked/nanny.xml</filename> configures types of link
   layers. We recommend to add specific configuration into a separate file:
   <filename>/etc/wicked/nanny-local.xml</filename> to avoid losing the changes
   during maintenance updates.
  </para>
 </sect3>
 <sect3 xml:id="sec.network.manconf.files.ifcfg">
  <title><filename>/etc/sysconfig/network/ifcfg-*</filename></title>
  <para>
   These files contain the traditional configurations for network interfaces.
   In <phrase os="sles;sled">&sle; 11</phrase><phrase os="osuse">&opensuse;
   prior to Leap</phrase>, this was the only supported format besides iBFT firmware.
  </para>
  <note>
   <title><command>wicked</command> and the <filename>ifcfg-*</filename> Files</title>
   <para>
    <command>wicked</command> reads these files if you specify the
    <literal>compat:</literal> prefix. According to the &productname; default
    configuration in <filename>/etc/wicked/client.xml</filename>,
    <command>wicked</command> tries these files before the XML configuration
    files in <filename>/etc/wicked/ifconfig</filename>.
   </para>
   <para>
    The <option>--ifconfig</option> switch is provided mostly for testing only.
    If specified, default configuration sources defined in
    <filename>/etc/wicked/ifconfig</filename> are not applied.
   </para>
  </note>
  <para>
   The <filename>ifcfg-*</filename> files include information such as the start
   mode and the IP address. Possible parameters are described in the manual
   page of <systemitem>ifup</systemitem>. Additionally, most variables from the
   <filename>dhcp</filename> and <filename>wireless</filename> files can be
   used in the <filename>ifcfg-*</filename> files if a general setting should
   be used for only one interface. However, most of the
   <filename>/etc/sysconfig/network/config</filename> variables are global and
   cannot be overridden in ifcfg-files. For example,
   <systemitem>NETCONFIG_*</systemitem> variables are global.
  </para>
  <para>
<!-- fate#315131 -->
   For configuring <systemitem>macvlan</systemitem> and
   <systemitem>macvtab</systemitem> interfaces, see the
   <systemitem>ifcfg-macvlan</systemitem> and
   <systemitem>ifcfg-macvtap</systemitem> man pages. For example, for a macvlan
   interface provide a <filename>ifcfg-macvlan0</filename> with settings as
   follows:
  </para>
<screen>STARTMODE='auto'
MACVLAN_DEVICE='eth0'
#MACVLAN_MODE='vepa'
#LLADDR=02:03:04:05:06:aa</screen>
  <para>
   For <filename>ifcfg.template</filename>, see
   <xref linkend="sec.network.manconf.files.config-etc"/>.
  </para>
  <para arch="zseries" os="sles">
   &zseries; does not support USB. The names of the interface files and
   network aliases contain &zseries;-specific elements like
   <literal>qeth</literal>.
  </para>
 </sect3>
 <sect3 xml:id="sec.network.manconf.files.config-etc">
  <title><filename>/etc/sysconfig/network/config</filename>, <filename>/etc/sysconfig/network/dhcp</filename>, and <filename>/etc/sysconfig/network/wireless</filename></title>
  <para>
   The file <filename>config</filename> contains general settings for the
   behavior of <command>ifup</command>, <command>ifdown</command> and
   <command>ifstatus</command>. <filename>dhcp</filename> contains settings for
   DHCP and <filename>wireless</filename> for wireless LAN cards. The variables
   in all three configuration files are commented. Some variables from
   <filename>/etc/sysconfig/network/config</filename> can also be used in
   <filename>ifcfg-*</filename> files, where they are given a higher priority.
   The <filename>/etc/sysconfig/network/ifcfg.template</filename> file lists
   variables that can be specified in a per interface scope. However, most of
   the <filename>/etc/sysconfig/network/config</filename> variables are global
   and cannot be overridden in ifcfg-files. For example,
   <systemitem>NETWORKMANAGER</systemitem> or
   <systemitem>NETCONFIG_*</systemitem> variables are global.
  </para>
  <note>
<!-- fate#316649 -->
   <title>Using DHCPv6</title>
   <para>
    In <phrase os="sles;sled">&sle; 11</phrase><phrase os="osuse">&opensuse;
    prior to Leap</phrase>, DHCPv6 used to work even on networks where IPv6 Router
    Advertisements (RAs) were not configured properly. Starting with <phrase
    os="sles;sled">&sle; 12</phrase><phrase os="osuse">&opensuse; Leap</phrase>,
    DHCPv6 will correctly require that at least one of the routers on the
    network sends out RAs that indicate that this network is managed by DHCPv6.
   </para>
   <para>
    For networks where the router cannot be configured correctly, the <literal>ifcfg</literal> option allows the user to override this
    behavior by specifying <literal>DHCLIENT6_MODE='managed'</literal> in the
    <literal>ifcfg</literal> file.
<!-- For details, please see bug
     867819 -->
    You can also activate this workaround with a boot parameter in the
    installation system:
   </para>
<screen>ifcfg=eth0=dhcp6,DHCLIENT6_MODE=managed</screen>
  </note>
 </sect3>
<!-- ============================================================== -->
 <sect3 xml:id="sec.network.manconf.files.routes">
  <title><filename>/etc/sysconfig/network/routes</filename> and <filename>/etc/sysconfig/network/ifroute-*</filename></title>
  <para>
   The static routing of TCP/IP packets is determined by the
   <filename>/etc/sysconfig/network/routes</filename> and
   <filename>/etc/sysconfig/network/ifroute-*</filename> files. All the static
   routes required by the various system tasks can be specified in
   <filename>/etc/sysconfig/network/routes</filename>: routes to a host, routes
   to a host via a gateway and routes to a network. For each interface that
   needs individual routing, define an additional configuration file:
   <filename>/etc/sysconfig/network/ifroute-*</filename>. Replace the wild card
   (<literal>*</literal>) with the name of the interface. The entries in the
   routing configuration files look like this:
  </para>
<screen># Destination     Gateway           Netmask            Interface  Options</screen>
<!--
#
127.0.0.0         0.0.0.0           255.255.255.0      lo
204.127.235.0     0.0.0.0           255.255.255.0      eth0
default           204.127.235.41    0.0.0.0            eth0
207.68.156.51     207.68.145.45     255.255.255.255    eth1
192.168.0.0       207.68.156.51     255.255.0.0        eth1
-->
  <para>
   The route's destination is in the first column. This column may contain the
   IP address of a network or host or, in the case of
   <emphasis>reachable</emphasis> name servers, the fully qualified network or
   host name. The network should be written in CIDR notation (address with the
   associated routing prefix-length) such as 10.10.0.0/16 for IPv4 or fc00::/7
   for IPv6 routes. The keyword <literal>default</literal> indicates that the
   route is the default gateway in the same address family as the gateway. For
   devices without a gateway use explicit 0.0.0.0/0 or ::/0 destinations.
  </para>
  <para>
   The second column contains the default gateway or a gateway through which a
   host or network can be accessed.
  </para>
  <para>
   The third column is deprecated; it used to contain the IPv4 netmask of the
   destination. For IPv6 routes, the default route, or when using a
   prefix-length (CIDR notation) in the first column, enter a dash
   (<literal>-</literal>) here.
  </para>
<!--
       contains the
       netmask for networks or hosts behind a gateway. For example, the mask is
       <systemitem
       class="netmask">255.255.255.255</systemitem> for a host
       behind a gateway.
   -->
  <para>
   The fourth column contains the name of the interface. If you leave it empty
   using a dash (<literal>-</literal>), it can cause unintended behavior in
   <filename>/etc/sysconfig/network/routes</filename>. For more information,
   see the <systemitem>routes</systemitem> man page.
  </para>
  <para>
   An (optional) fifth column can be used to specify special options. For
   details, see the <systemitem>routes</systemitem> man page.
  </para>
  <example>
   <title>Common Network Interfaces and Some Static Routes</title>
<screen># --- IPv4 routes in CIDR prefix notation:
# Destination     [Gateway]         -                  Interface
127.0.0.0/8       -                 -                  lo
204.127.235.0/24  -                 -                  eth0
default           204.127.235.41    -                  eth0
207.68.156.51/32  207.68.145.45     -                  eth1
192.168.0.0/16    207.68.156.51     -                  eth1

# --- IPv4 routes in deprecated netmask notation"
# Destination     [Dummy/Gateway]   Netmask            Interface
#
127.0.0.0         0.0.0.0           255.255.255.0      lo
204.127.235.0     0.0.0.0           255.255.255.0      eth0
default           204.127.235.41    0.0.0.0            eth0
207.68.156.51     207.68.145.45     255.255.255.255    eth1
192.168.0.0       207.68.156.51     255.255.0.0        eth1

# --- IPv6 routes are always using CIDR notation:
# Destination     [Gateway]                -           Interface
2001:DB8:100::/64 -                        -           eth0
2001:DB8:100::/32 fe80::216:3eff:fe6d:c042 -           eth0</screen>
  </example>
 </sect3>
 <sect3 xml:id="sec.network.manconf.files.resolv">
  <title><filename>/var/run/netconfig/resolv.conf</filename></title>
  <para>
   The domain to which the host belongs is specified in
   <filename>/var/run/netconfig/resolv.conf</filename> (keyword
   <systemitem>search</systemitem>). Up to six domains with a total of 256
   characters can be specified with the <systemitem>search</systemitem> option.
   When resolving a name that is not fully qualified, an attempt is made to
   generate one by attaching the individual <systemitem>search</systemitem>
   entries. Up to 3 name servers can be specified with the
   <systemitem>nameserver</systemitem> option, each on a line of its own.
   Comments are preceded by hash mark or semicolon signs (<literal>#</literal>
   or <literal>;</literal>). As an example, see
   <xref linkend="dat.netz.etc.resolv.conf"/>.
  </para>
  <para>
   However, <filename>/var/run/netconfig/resolv.conf</filename> should not be edited by
   hand. Instead, it is generated by the <command>netconfig</command> script.
   To define static DNS configuration without using &yast;, edit the
   appropriate variables manually in the
   <filename>/etc/sysconfig/network/config</filename> file:
  </para>
  <variablelist>
   <varlistentry>
    <term><systemitem>NETCONFIG_DNS_STATIC_SEARCHLIST</systemitem>
    </term>
    <listitem>
     <para>
      list of DNS domain names used for host name lookup
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><systemitem>NETCONFIG_DNS_STATIC_SERVERS</systemitem>
    </term>
    <listitem>
     <para>
      list of name server IP addresses to use for host name lookup
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><systemitem>NETCONFIG_DNS_FORWARDER</systemitem>
    </term>
    <listitem>
     <para>
      the name of the DNS forwarder that needs to be configured, for example
      <literal>bind</literal> or <literal>resolver</literal>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
<!-- fate#316048 -->
    <term><systemitem>NETCONFIG_DNS_RESOLVER_OPTIONS</systemitem>
    </term>
    <listitem>
     <para>
      arbitrary options that will be written to
      <filename>/var/run/netconfig/resolv.conf</filename>, for example:
     </para>
<screen>debug attempts:1 timeout:10</screen>
     <para>
      For more information, see the <literal>resolv.conf</literal> man page.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><systemitem>NETCONFIG_DNS_RESOLVER_SORTLIST</systemitem>
    </term>
    <listitem>
     <para>
      list of up to 10 items, for example:
     </para>
<screen>130.155.160.0/255.255.240.0 130.155.0.0</screen>
     <para>
      For more information, see the <systemitem>resolv.conf</systemitem> man
      page.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   To disable DNS configuration using netconfig, set
   <literal>NETCONFIG_DNS_POLICY=''</literal>. For more information about
   <command>netconfig</command>, see the <systemitem>netconfig(8)</systemitem>
   man page (<command>man 8 netconfig</command>).
  </para>
  <example xml:id="dat.netz.etc.resolv.conf">
   <title><filename>/var/run/netconfig/resolv.conf</filename></title>
<screen># Our domain
search &exampledomain;
#
# We use &dnsname; (&dnsip;) as nameserver
nameserver &dnsip;</screen>
  </example>
 </sect3>
<!-- ============================================================== -->
 <sect3 xml:id="sec.network.manconf.netconfig">
  <title><filename>/sbin/netconfig</filename></title>
  <para>
   <command>netconfig</command> is a modular tool to manage additional network
   configuration settings. It merges statically defined settings with settings
   provided by autoconfiguration mechanisms as DHCP or PPP according to a
   predefined policy. The required changes are applied to the system by calling
   the netconfig modules that are responsible for modifying a configuration
   file and restarting a service or a similar action.
  </para>
  <para>
   <command>netconfig</command> recognizes three main actions. The
   <command>netconfig modify</command> and <command>netconfig remove</command>
   commands are used by daemons such as DHCP or PPP to provide or remove
   settings to netconfig. Only the <command>netconfig update</command> command
   is available for the user:
  </para>
  <variablelist>
   <varlistentry>
    <term><command>modify</command>
    </term>
    <listitem>
     <para>
      The <command>netconfig modify</command> command modifies the current
      interface and service specific dynamic settings and updates the network
      configuration. Netconfig reads settings from standard input or from a
      file specified with the <option>--lease-file
      <replaceable>FILENAME</replaceable></option> option and internally stores
      them until a system reboot (or the next modify or remove action). Already
      existing settings for the same interface and service combination are
      overwritten. The interface is specified by the <option>-i
      <replaceable>INTERFACE_NAME</replaceable></option> parameter. The service
      is specified by the <option>-s
      <replaceable>SERVICE_NAME</replaceable></option> parameter.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>remove</command>
    </term>
    <listitem>
     <para>
      The <command>netconfig remove</command> command removes the dynamic
      settings provided by a modificatory action for the specified interface
      and service combination and updates the network configuration. The
      interface is specified by the <option>-i
      <replaceable>INTERFACE_NAME</replaceable></option> parameter. The service
      is specified by the <option>-s
      <replaceable>SERVICE_NAME</replaceable></option> parameter.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>update</command>
    </term>
    <listitem>
     <para>
<!-- fate#306274 -->
      The <command>netconfig update</command> command updates the network
      configuration using current settings. This is useful when the policy or
      the static configuration has changed. Use the <option>-m
      <replaceable>MODULE_TYPE</replaceable></option> parameter to
      update a specified service only (<systemitem>dns</systemitem>,
      <systemitem>nis</systemitem>, or <systemitem>ntp</systemitem>).
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
<!--
   mt: NetworkManager does not read or write _any_ sysconfig variables
   anymore!
   -->
  <para>
   The netconfig policy and the static configuration settings are defined
   either manually or using &yast; in the
   <filename>/etc/sysconfig/network/config</filename> file. The dynamic
   configuration settings provided by autoconfiguration tools such as DHCP or
   PPP are delivered directly by these tools with the <command>netconfig
   modify</command> and <command>netconfig remove</command> actions.
<!-- &nm;
    also uses <command>netconfig modify</command> and <command>netconfig
    remove</command> actions.
    -->
   When &nm; is enabled, netconfig (in policy mode <literal>auto</literal>)
   uses only &nm; settings, ignoring settings from any other interfaces
   configured using the traditional ifup method. If &nm; does not provide any
   setting, static settings are used as a fallback. A mixed usage of &nm; and
   the <command>wicked</command> method is not supported.
  </para>
  <para>
   For more information about <command>netconfig</command>, see <command>man 8
   netconfig</command>.
  </para>
 </sect3>
<!-- ============================================================== -->
 <sect3 xml:id="sec.network.manconf.hosts">
  <title><filename>/etc/hosts</filename></title>
  <para>
   In this file, shown in <xref linkend="dat.netz.etc.hosts"/>, IP addresses
   are assigned to host names. If no name server is implemented, all hosts to
   which an IP connection will be set up must be listed here. For each host,
   enter a line consisting of the IP address, the fully qualified host name,
   and the host name into the file. The IP address must be at the beginning of
   the line and the entries separated by blanks and tabs. Comments are always
   preceded by the <literal>#</literal> sign.
  </para>
  <example xml:id="dat.netz.etc.hosts">
   <title><filename>/etc/hosts</filename></title>
<screen>127.0.0.1 localhost
&wsIip; &wsIname; &wsI;
&wsIIip; &wsIIname; &wsII;</screen>
  </example>
 </sect3>
 <sect3 xml:id="sec.network.manconf.files.networks">
  <title><filename>/etc/networks</filename></title>
  <para>
   Here, network names are converted to network addresses. The format is
   similar to that of the <filename>hosts</filename> file, except the network
   names precede the addresses. See <xref linkend="dat.netz.networks"/>.
  </para>
  <example xml:id="dat.netz.networks">
   <title><filename>/etc/networks</filename></title>
<screen>loopback     127.0.0.0
localnet     192.168.0.0</screen>
  </example>
 </sect3>
 <sect3 xml:id="sec.network.manconf.files.host">
  <title><filename>/etc/host.conf</filename></title>
  <para>
   Name resolution&mdash;the translation of host and network names via the
   <emphasis>resolver</emphasis> library&mdash;is controlled by this file. This
   file is only used for programs linked to libc4 or libc5. For current glibc
   programs, refer to the settings in <filename>/etc/nsswitch.conf</filename>.
   Each parameter must always be entered on a separate line. Comments are
   preceded by a <literal>#</literal> sign.
   <xref linkend="tab.netz.param.hostconf"/> shows the parameters available. A
   sample <filename>/etc/host.conf</filename> is shown in
   <xref linkend="dat.netz.etc.hostconf"/>.
  </para>
  <table xml:id="tab.netz.param.hostconf">
   <title>Parameters for /etc/host.conf</title>
   <tgroup cols="2" align="left">
    <tbody>
     <row>
      <entry>
       <para>
        order <emphasis>hosts</emphasis>, <emphasis>bind</emphasis>
       </para>
      </entry>
      <entry>
       <para>
        Specifies in which order the services are accessed for the name
        resolution. Available arguments are (separated by blank spaces or
        commas):
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para/>
      </entry>
      <entry>
       <para>
        <emphasis>hosts</emphasis>: searches the
        <filename>/etc/hosts</filename> file
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para/>
      </entry>
      <entry>
       <para>
        <emphasis>bind</emphasis>: accesses a name server
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para/>
      </entry>
      <entry>
       <para>
        <emphasis>nis</emphasis>: uses NIS
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        multi <emphasis>on</emphasis>/<emphasis>off</emphasis>
       </para>
      </entry>
      <entry>
       <para>
        Defines if a host entered in <filename>/etc/hosts</filename> can have
        multiple IP addresses.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        nospoof <emphasis>on</emphasis> spoofalert
        <emphasis>on</emphasis>/<emphasis>off</emphasis>
       </para>
      </entry>
      <entry>
       <para>
        These parameters influence the name server
        <emphasis>spoofing</emphasis> but do not exert any influence on the
        network configuration.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        trim <emphasis>domainname</emphasis>
       </para>
      </entry>
      <entry>
       <para>
        The specified domain name is separated from the host name after host
        name resolution (as long as the host name includes the domain name).
        This option is useful only if names from the local domain are in the
        <filename>/etc/hosts</filename> file, but should still be recognized
        with the attached domain names.
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <example xml:id="dat.netz.etc.hostconf">
   <title><filename>/etc/host.conf</filename></title>
<screen># We have named running
order hosts bind
# Allow multiple address
multi on</screen>
  </example>
 </sect3>
 <sect3 xml:id="sec.network.manconf.files.nsswitch">
  <title><filename>/etc/nsswitch.conf</filename></title>
  <para>
   The introduction of the GNU C&nbsp;Library 2.0 was accompanied by the
   introduction of the <emphasis>Name Service Switch</emphasis> (NSS). Refer to
   the <systemitem>nsswitch.conf(5)</systemitem> man page and <emphasis>The GNU
   C Library Reference Manual</emphasis> for details.
  </para>
  <para>
   The order for queries is defined in the file
   <filename>/etc/nsswitch.conf</filename>. A sample
   <filename>nsswitch.conf</filename> is shown in
   <xref linkend="dat.netz.nsswitchconf"/>. Comments are preceded by
   <literal>#</literal> signs. In this example, the entry under the
   <filename>hosts</filename> database means that a request is sent to
   <filename>/etc/hosts</filename> (<option>files</option>) via
   DNS<phrase os="sles;osuse"> (see <xref linkend="cha.dns"/>)</phrase>.
  </para>
  <example xml:id="dat.netz.nsswitchconf">
   <title><filename>/etc/nsswitch.conf</filename></title>
<screen>passwd:     compat
group:      compat

hosts:      files dns
networks:   files dns

services:   db files
protocols:  db files
rpc:        files
ethers:     files
netmasks:   files
netgroup:   files nis
publickey:  files

bootparams: files
automount:  files nis
aliases:    files nis
shadow:     compat
</screen>
  </example>
  <para>
   The <quote>databases</quote> available over NSS are listed in
   <xref linkend="tab.netz.nnswitch.db"/>. The configuration options for NSS databases are listed in
   <xref linkend="tab.netz.nnswitch.conf"/>.
  </para>
  <table xml:id="tab.netz.nnswitch.db">
   <title>Databases Available via /etc/nsswitch.conf</title>
   <tgroup cols="2" align="left">
    <tbody>
     <row>
      <entry>
       <para>
        <option>aliases</option>
       </para>
      </entry>
      <entry>
       <para>
        Mail aliases implemented by <filename>sendmail</filename>; see
        <command>man</command>&nbsp;<option>5 aliases</option>.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>ethers</option>
       </para>
      </entry>
      <entry>
       <para>
        Ethernet addresses.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>netmasks</option>
       </para>
      </entry>
      <entry>
       <para>
        List of networks and their subnet masks. Only needed, if you use
        subnetting.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>group</option>
       </para>
      </entry>
      <entry>
       <para>
        User groups used by <filename>getgrent</filename>. See also the man
        page for <command>group</command>.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>hosts</option>
       </para>
      </entry>
      <entry>
       <para>
        Host names and IP addresses, used by <filename>gethostbyname</filename>
        and similar functions.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>netgroup</option>
       </para>
      </entry>
      <entry>
       <para>
        Valid host and user lists in the network for controlling access
        permissions; see the <systemitem>netgroup(5)</systemitem> man page.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>networks</option>
       </para>
      </entry>
      <entry>
       <para>
        Network names and addresses, used by <filename>getnetent</filename>.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>publickey</option>
       </para>
      </entry>
      <entry>
       <para>
        Public and secret keys for Secure_RPC used by NFS and NIS+.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>passwd</option>
       </para>
      </entry>
      <entry>
       <para>
        User passwords, used by <filename>getpwent</filename>; see the
        <systemitem>passwd(5)</systemitem> man page.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>protocols</option>
       </para>
      </entry>
      <entry>
       <para>
        Network protocols, used by <filename>getprotoent</filename>; see the
        <systemitem>protocols(5)</systemitem> man page.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>rpc</option>
       </para>
      </entry>
      <entry>
       <para>
        Remote procedure call names and addresses, used by
        <filename>getrpcbyname</filename> and similar functions.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>services</option>
       </para>
      </entry>
      <entry>
       <para>
        Network services, used by <filename>getservent</filename>.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>shadow</option>
       </para>
      </entry>
      <entry>
       <para>
        Shadow passwords of users, used by <filename>getspnam</filename>; see
        the <option>shadow(5)</option> man page.
       </para>
      </entry>
     </row>
<!--
          automount:  files nis
          aliases:    files nis
      -->
    </tbody>
   </tgroup>
  </table>
  <table xml:id="tab.netz.nnswitch.conf">
   <title>Configuration Options for NSS <quote>Databases</quote></title>
   <tgroup cols="2" align="left">
    <tbody>
     <row>
      <entry>
       <para>
        <option>files</option>
       </para>
      </entry>
      <entry>
       <para>
        directly access files, for example, <filename>/etc/aliases</filename>
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>db</option>
       </para>
      </entry>
      <entry>
       <para>
        access via a database
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>nis</option>, <option>nisplus</option>
       </para>
      </entry>
      <entry>
       <para>
        NIS, see also <xref linkend="cha.nis"/>
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>dns</option>
       </para>
      </entry>
      <entry>
       <para>
        can only be used as an extension for <option>hosts</option> and
        <option>networks</option>
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>compat</option>
       </para>
      </entry>
      <entry>
       <para>
        can only be used as an extension for <option>passwd</option>,
        <option>shadow</option> and <option>group</option>
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect3>
 <sect3 xml:id="sec.network.manconf.files.nscd">
  <title><filename>/etc/nscd.conf</filename></title>
  <para>
   This file is used to configure nscd (name service cache daemon). See the
   <systemitem>nscd(8)</systemitem> and <systemitem>nscd.conf(5)</systemitem>
   man pages. By default, the system entries of <option>passwd</option>,
   <option>groups</option> and <option>hosts</option>are cached by nscd. This is important for the
   performance of directory services, like NIS and LDAP, because otherwise the
   network connection needs to be used for every access to names, groups or
   hosts.
   <!-- fs 2016-08-04: hosts _are_ cached on SLE 12/Leap see bsc#992081&

   <option>hosts</option> is not cached by default, because the mechanism in
   nscd to cache hosts makes the local system unable to trust forward and
   reverse lookup checks. Instead of asking nscd to cache names, set up a
   caching DNS server.
   -->
  </para>
  <para>
   If the caching for <option>passwd</option> is activated, it usually takes
   about fifteen seconds until a newly added local user is recognized. Reduce
   this waiting time by restarting nscd with:
  </para>
<screen>&prompt.sudo;systemctl restart nscd</screen>
 </sect3>
 <sect3 xml:id="sec.network.manconf.files.hostname">
  <title><filename>/etc/HOSTNAME</filename></title>
  <para>
   <filename>/etc/HOSTNAME</filename> contains the fully qualified host name
   (FQHN). The fully qualified host name is the host name with the domain name
   attached. This file must contain only one line (in which the host name is
   set). It is read while the machine is booting.
  </para>
 </sect3>
</sect2>
<!--
</sect1>
-->
