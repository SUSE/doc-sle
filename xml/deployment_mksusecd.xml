<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter version="5.0" role="General"
  xml:id="cha-deployment-prep-mksusecd"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Customizing installation images with mksusecd</title>
 <info>
  <abstract>
   <para>
    <command>mksusecd</command> is a useful tool for creating a customized
    installation image. Use it to modify the regular &sle; installation
    images, add or remove files, create a minimal network installation
    image, customize boot options or software repositories, and create a
    minimal boot image as an alternative to booting a system from a PXE server.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="sec-deployment-install-mksusecd">
  <title>Installing mksusecd</title>

  <para>
   In &slea;&nbsp;15, <command>mksusecd</command> is in the <literal>Development
   Tools</literal> module. If this module is not enabled, you must enable it
   first. Find the exact module name and <command>&suseconnect;</command>
   activation command with <command>zypper</command>:
  </para>

<screen>&prompt.user;zypper search-packages mksusecd
Following packages were found in following modules:

Package              Module or Repository
-------------------- -------------------------------------------------------------------
---------------------- -----------------------------------------------------------------
mksusecd             Development Tools Module (sle-module-development-tools/15.4/x86_64)
                       SUSEConnect --product sle-module-development-tools/15.4/x86_64

To activate the respective module or product, use SUSEConnect --product.
Use SUSEConnect --help for more details.</screen>

  <para>
   Enable the module with &suseconnect;:
  </para>

<screen>&prompt.sudo;SUSEConnect --product sle-module-development-tools/15.4/x86_64</screen>

  <para>
   Install <command>mksusecd</command>:
  </para>

<screen>&prompt.sudo;zypper in mksusecd</screen>

  <para>
   Run <command>mksusecd --help</command> to see a complete list of commands.
  </para>

  <para>
   After you create your custom image, either burn it to a CD/DVD medium using
   your preferred disk-writing program, or create a bootable &usbflashdrive;
   using the <command>dd</command> command. Make sure the device is not mounted,
   then run the following command:
  </para>

<screen>&prompt.root;<command>dd</command> if=<replaceable>myinstaller.iso</replaceable> of=/dev/<replaceable>SDB</replaceable> bs=4M</screen>

  <para>
   Then your new bootable device is ready to use.
  </para>
 </sect1>
 <sect1 xml:id="sec-deployment-prep-boot-mksusecd">
  <title>Creating a minimal boot image</title>

  <para>
   Use <command>mksusecd</command> to create a minimal boot image to start
   client machines from a CD/DVD or &usbflashdrive;, instead of starting them
   from a PXE boot server. The minimal boot image launches the kernel and
   initrd, and then the remaining installation files are fetched from a local
   NFS server (see <xref linkend="sec-deployment-instserver-sles9"/>).
  </para>

  <para>
   Run the following command to create the minimal ISO image:
  </para>

<screen>&prompt.sudo;<command>mksusecd</command> --create <replaceable>min-install.iso</replaceable> \
--net=nfs://<replaceable>192.168.1.1:/srv/install/</replaceable><replaceable>ARCH</replaceable>/<replaceable>OS_VERSION</replaceable>/<replaceable>SP_VERSION</replaceable>/cd1  \
/srv/tftpboot/EFI/<replaceable>ARCH</replaceable>/boot</screen>

  <para>
   Replace the NFS server address with your own. Replace
   <replaceable>ARCH</replaceable> with the directory corresponding to the
   target system architecture. Also replace
   <replaceable>OS_version</replaceable> and
   <replaceable>SP_VERSION</replaceable> (service pack) according to your paths
   in <xref linkend="sec-deployment-instserver-sles9"/>.
  </para>

<!-- the mksusecd chapter is not included in any OSUSE build, and the example
  command here is not valid for SLE. cschroder, 01-15-2020 -->

  <para os="osuse">
   Instead of using an NFS server for the <option>--net</option> option, it is
   also possible to use an HTTP repository, for example the &opensuse;
   repository:
  </para>

<screen os="osuse">&prompt.sudo;<command>mksusecd</command> --create <replaceable>min-install.iso</replaceable> \
--net=http://download.opensuse.org/tumbleweed/repo/oss/suse \
/srv/tftpboot/EFI/<replaceable>ARCH</replaceable>/boot</screen>
 </sect1>

 <sect1 xml:id="sec-deployment-custom-image-boot">
  <title>Setting default kernel boot parameters</title>

  <para>
   Rather than waiting for a boot prompt to enter your custom kernel boot
   parameters, configure them in a custom <command>mksusecd</command> image:
  </para>

<screen>&prompt.sudo;mksusecd --create <replaceable>install.iso</replaceable> \
--boot "<replaceable>textmode=1 splash=silent mitigations=auto</replaceable>"</screen>

  <para>
   Verify that your custom parameters load correctly after start-up by
   querying <filename>/proc</filename>:
  </para>

<screen>&prompt.user;cat /proc/cmdline</screen>
 </sect1>
 <sect1 xml:id="sec-deployment-custom-modules">
  <title>Customizing modules, extensions, and repositories</title>

  <para>
   &sle;&nbsp;15 supports Modules (not to be confused with kernel modules) and
   Extensions for different product components. These are add-ons to the
   default <literal>Basesystem</literal>, such as <literal>Development
   Tools</literal>, <literal>Desktop Applications</literal>, and &sle;
   <literal>Live Patching</literal>. For more information refer to the
   &modulesquick; guide.
  </para>

  <para>
   With <command>mksusecd</command> you can create an installation image
   containing all additional Modules and Extensions you want. Start by
   querying existing images, like this example for &sle;&nbsp;&productnumber;:
  </para>

  <screen>&prompt.sudo;mksusecd --list-repos &packagemedia;
Repositories:
  Basesystem-Module [&product-ga;.&product-sp;-0]
  SUSE-CAP-Tools-Module [&product-ga;.&product-sp;-0]
  Containers-Module [&product-ga;.&product-sp;-0]
  Desktop-Applications-Module [&product-ga;.&product-sp;-0]
  Development-Tools-Module [&product-ga;.&product-sp;-0]
  HPC-Module [&product-ga;.&product-sp;-0]
  Legacy-Module [&product-ga;.&product-sp;-0]
  Live-Patching [&product-ga;.&product-sp;-0]
  Public-Cloud-Module [&product-ga;.&product-sp;-0]
  Python2-Module [&product-ga;.&product-sp;-0]
  SAP-Applications-Module [&product-ga;.&product-sp;-0]
  Server-Applications-Module [&product-ga;.&product-sp;-0]
  Transactional-Server-Module [&product-ga;.&product-sp;-0]
  Web-Scripting-Module [&product-ga;.&product-sp;-0]
  SLEHA&product-ga;-SP&product-sp; [&product-ga;.&product-sp;-0]
  SLE-&product-ga;-SP&product-sp;-HPC [&product-ga;.&product-sp;-0]
  SLED&product-ga;-SP&product-sp; [&product-ga;.&product-sp;-0]
  SLES&product-ga;-SP&product-sp; [&product-ga;.&product-sp;-0]
  SLE-&product-ga;-SP&product-sp;-SAP [&product-ga;.&product-sp;-0]
  SLEWE&product-ga;-SP&product-sp; [&product-ga;.&product-sp;-0]
  [...]
</screen>

  <para>
   Create a new installation image that is built from the Modules, Extensions,
   and repositories that you select, and automatically enable them:
  </para>

<screen>&prompt.sudo;mksusecd --create <replaceable>myinstaller.iso</replaceable> --enable-repos auto \
--include-repos <replaceable>Basesystem-Module,Desktop-Applications-Module</replaceable> \
&packagemedia;</screen>

  <para>
   This example creates an image for installation from the internet. To create
   an image for offline installation, additionally add the repository of the
   base product, for example <literal>SLES&product-ga;-SP&product-sp;</literal>
   for &sles;.
  </para>

  <screen>&prompt.sudo;mksusecd --create <replaceable>myinstaller.iso</replaceable> --enable-repos auto \
   --include-repos <replaceable>SLES&product-ga;-SP&product-sp;,Basesystem-Module,Desktop-Applications-Module</replaceable> \
   &packagemedia;</screen>

  <para>
   Replace <option>--enable-repos auto</option> with
   <option>--enable-repos ask</option> to have the installer present a dialog
   for choosing modules.
  </para>

  <note>
   <title>&ay; control file</title>
   <para>
    When using the <option>--enable-repos</option> option,
    <command>mksusecd</command> adds an <filename>add_on_products.xml</filename>
    file for use with &ay; to the new image. Modules in this file do not need to
    be listed in the in the &ay; control file.
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-deployment-custom-netinstall">
  <title>Creating a minimal netinstall ISO</title>

  <para>
   To create a minimal installation image to launch a network installation, use
   the <command>--nano</command> option:
  </para>

<screen>&prompt.sudo;mksusecd --create <replaceable>netinstall.iso</replaceable> \
--nano &installmedia;</screen>
 </sect1>
 <sect1 xml:id="sec-deployment-custom-repo">
  <title>Change default repository</title>

  <para>
   To set a different repository, such as your own local repository,
   use the <command>--net</command> option:
  </para>

<screen>&prompt.sudo;mksusecd --create <replaceable>localinstall.iso</replaceable> \
--net "https://example.com/local" &installmedia;</screen>
 </sect1>
</chapter>
