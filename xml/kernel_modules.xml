<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-mod">
 <title>Managing Kernel Modules</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
   Although Linux is a monolithic kernel, it can be extended using kernel
   modules. These are special objects that can be inserted into the kernel and
   removed on demand. In practical terms, kernel modules make it possible to
   add and remove drivers and interfaces that are not included in the kernel
   itself. Linux provides several commands for managing kernel modules.
 </para>
 <sect1 xml:id="sec-mod-lsmod">
  <title>Listing Loaded Modules with lsmod and modinfo</title>
  <para>
    Use the <command>lsmod</command> command to view what kernel modules are
    currently loaded. The output of the command may look as follows:
  </para>
  <screen>&prompt.user;lsmod
Module                  Size  Used by
snd_usb_audio         188416  2
snd_usbmidi_lib        36864  1 snd_usb_audio
hid_plantronics        16384  0
snd_rawmidi            36864  1 snd_usbmidi_lib
snd_seq_device         16384  1 snd_rawmidi
fuse                  106496  3
nfsv3                  45056  1
nfs_acl                16384  1 nfsv3</screen>
  <para>
    The output is divided into three columns. The <literal>Module</literal> column lists the names
    of the loaded modules, while the <literal>Size</literal> column displays the size of each
    module. The <literal>Used by</literal> column shows the number of referring
    modules and their names. Note that this list may be incomplete.
  </para>
  <para>
    To view detailed information about a specific kernel module, use the
    <command>modinfo <replaceable>MODULE_NAME</replaceable></command> command, where
    <replaceable>MODULE_NAME</replaceable> is the name of the desired kernel
    module. Note that the <command>modinfo</command> binary resides in the
    <filename>/sbin</filename> directory that is not in the user's PATH
    environment variable. This means that you must specify the full path to the
    binary when running <command>modinfo</command> command as a regular user:
  </para>
  <screen>&prompt.user;/sbin/modinfo kvm
filename:       /lib/modules/5.3.18-8-default/kernel/arch/x86/kvm/kvm.ko
license:        GPL
author:         Qumranet
suserelease:    SLE15-SP2
srcversion:     C0D16A3F3BB38726B6C0575
depends:        irqbypass
supported:      yes
retpoline:      Y
intree:         Y
name:           kvm
vermagic:       5.3.18-8-default SMP mod_unload modversions 
      </screen>
  </sect1>
  <sect1 xml:id="sec-mod-modprobe">
    <title>Adding and Removing Kernel Modules</title>
    <para>
      While it is possible to use <systemitem>insmod</systemitem> and
      <systemitem>rmmod</systemitem> to add and remove kernel modules, it is recommended to use the
      <systemitem>modprobe</systemitem> tool instead. <systemitem>modprobe</systemitem> offers several
      important advantages, including automatic dependency resolution and
      blacklisting.
    </para>
    <para>
      When used without any parameters, the <systemitem>modprobe</systemitem>
      command installs a specified kernel module. <systemitem>modprobe</systemitem> must be run with root privileges:
    </para>
    <screen>&prompt.sudo;modprobe acpi</screen>
    <para>
      To remove a kernel module, use the <command>-r</command> parameter:
    </para>
    <screen>&prompt.sudo;modprobe -r acpi</screen>
    <sect2 xml:id="sec-mod-modprobe-d">
    <title>Loading Kernel Modules Automatically on Boot</title>
    <para>
      Instead of loading kernel modules manually, you can load them
      automatically during the boot process using the
    <systemitem>system-modules-load.service</systemitem> service. To enable a
    kernel module, add a <filename>.conf</filename> file to the
    <filename>/etc/modules-load.d/</filename> directory. It is good practice
    to give the configuration file the same name as the module, for example:</para>
    <screen>/etc/modules-load.d/rt2800usb.conf</screen>
    <para>
      The configuration file must contain the name of the desired kernel
      module (for example, <literal>rt2800usb</literal>).
    </para>
    <para>
      The described technique allows you to load kernel modules without any
      parameters. If you need to load a kernel module with specific options,
      add a configuration file to the <filename>/etc/modprobe.d/</filename>
      directory instead. The file must have the <filename>.conf</filename>
      extension. The name of the file should adhere to the following naming convention:
      <literal>priority-modulename.conf</literal>, for example:
      <filename>50-thinkfan.conf</filename>. The configuration file must
      contain the name of the kernel module and the desired parameters. You can use the
    example command below to create a configuration file containing the name of the kernel module and its parameters:</para>
      <screen>&prompt.user;echo "options thinkpad_acpi fan_control=1" | sudo tee /etc/modprobe.d/thinkfan.conf</screen>

      <note>
        <title>Loading Kernel Modules</title>
        <para>
          Most kernel modules are loaded by the system automatically when a
          device is detected or user space requests specific
          functionality. Thus, adding modules manually to
          <filename>/etc/modules-load.d/</filename> is rarely required.
         </para>
        </note>

    </sect2>
    <sect2 xml:id="sec-mod-modprobe-blacklist">
    <title>Blacklisting Kernel Modules with modprobe</title>
    <para>
      Blacklisting a kernel module prevents it from loading during the boot
      process. This can be useful when you want to disable a module that you
      suspect is causing problems on your system. Note that you can still load
      blacklisted kernel modules manually using the
      <systemitem>insmod</systemitem> or <systemitem>modprobe</systemitem> tools.
    </para>
    <para>
      To blacklist a module, add the
      <literal>blacklist <replaceable>MODULE_NAME</replaceable></literal> line
      to the <filename>/etc/modprobe.d/50-blacklist.conf</filename> file. For example:
    </para>
    <screen>blacklist nouveau</screen>
    <para>
      Run the <command>mkinitrd</command> command as root to generate a new <systemitem>initrd</systemitem>
      image, then reboot your machine. These steps can be performed using the following command:
    </para>
    <screen>&prompt.user;su
echo "blacklist nouveau" >> /etc/modprobe.d/50-blacklist.conf &amp;&amp; mkinitrd &amp;&amp; reboot</screen>
    <para>
      To disable a kernel module temporarily only,
      blacklist it on-the-fly during the boot. To do this, press the
      <keycap>E</keycap> key when you see the boot screen. This drops you into
      a minimal editor that allows you to modify boot parameters. Locate the
      line that looks as follows:
    </para>
    <screen>linux /boot/vmlinuz...splash= silent quiet showopts</screen>
    <para>
      Add the
      <command>modprobe.blacklist=<replaceable>MODULE_NAME</replaceable></command>
      command to the end of the line. For example:
    </para>
    <screen>linux /boot/vmlinuz...splash= silent quiet showopts modprobe.blacklist=nouveau</screen>
    <para>
      Press <keycap>F10</keycap> or <keycombo><keycap
      function="control"/><keycap>X</keycap></keycombo> to boot with the
      specified configuration.
    </para>
    <para>
      To blacklist a kernel module permanently via GRUB, open the
      <filename>/etc/default/grub</filename> file for editing, and add the
      <command>modprobe.blacklist=<replaceable>MODULE_NAME</replaceable></command>
      option to the <command>GRUB_CMD_LINUX</command> command. Then run the
      <command>sudo grub2-mkconfig -o /boot/grub2/grub.cfg</command> command to enable
      the changes.
    </para>
    </sect2>
 </sect1>
</chapter>
