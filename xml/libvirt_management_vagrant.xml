<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 version="5.0"
 xml:id="cha-libvirt-manage-vagrant">
 <title>Managing Virtual Machines with &vagrant;</title>
 <info>
  <abstract>
   <para>
    &vagrant; is a tool that provides a unified workflow for the creation,
    deployment and management of virtual development environments.
    The following sections describe how to manage virtual machines by using
    &vagrant;.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
  </dm:docmanager>
 </info>

 <sect1 xml:id="sec-libvirt-vagrant-intro">
  <title>Introduction to &vagrant;</title>
  <para>&vagrant; provides an abstraction layer for various virtualization
   providers via a simple configuration file that allows developers and
   operators to quickly spin up a virtual machine (VM) running Linux or any
   other operating system.
  </para>

  <sect2 xml:id="sec-libvirt-vagrant-concept">
   <title>&vagrant; Concepts</title>
   <para>
    &vagrant; uses <literal>providers</literal>, <literal>provisioners</literal>,
    <literal>boxes</literal>, and <literal>Vagrantfiles</literal> as building
    blocks of the virtual machines.
   </para>
   <variablelist>
    <title>&vagrant; Terminology</title>
    <varlistentry>
     <term>Provider</term>
     <listitem>
      <para>
       Services to set up and create virtual environments. &vagrant; ships with
       support for &virtualbox; and &hyperv; virtualization and &docker;
       containers. Other services such as &libvirt;, &vmware; or AWS are
       supported via plugins.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Provisioner</term>
     <listitem>
      <para>
       Tools to customize the configuration of virtual environments. &vagrant;
       has built built-in providers for uploading files, syncing directories or
       executing shell commands, but also supports configuration management
       systems such as Ansible, CFEngine, Chef, Puppet, and Salt.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Vagrantfile</term>
     <listitem>
      <para>
       Configuration file and file name (&vagrantfile;) for virtual
       environments. It contains machine and software requirements and all
       necessary steps in order to create a development-ready box.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Box</term>
     <listitem>
      <para>
       Format and an extension (<filename>*.box</filename>) for virtual
       environments. Boxes can be downloaded from the
       <link xlink:href="https://vagrantcloud.com/">&vagrant; Cloud</link> and
       copied from one machine to another in order to to replicate an
       environment.
      </para>
      <para>
       &suse; provides official &vagrant; Boxes for &sle; using the
       &virtualbox; and &libvirt;  providers. &sls; boxes are available for the
       &x86-64; and &aarch64; architectures, &sled; only for &x86-64;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
  <sect2 xml:id="sec-libvirt-vagrant-example">
   <title>&vagrant; Example</title>
   <para>
    A new VM can be launched with &vagrant; via the following set of commands.
    This example uses the official &vagrant; box for &opensuse; Tumbleweed which
    is available from the <link xlink:href="https://vagrantcloud.com/">&vagrant;
    Cloud</link>.
   </para>
   <procedure>
    <title>Creating a &vagrant; environment with &opensuse; Tumbleweed</title>
    <step>
     <para>
      Download the &vagrant; box for &opensuse; Tumbleweed:
     </para>
     <screen><command>vagrant</command> <option>init opensuse/Tumbleweed.x86_64</option></screen>
     <para>
      This also registers the box with &vagrant; and creates the &vagrantfile;.
     </para>
    </step>
    <step performance="optional">
     <para>
      Edit the &vagrantfile; to customize the environment.
     </para>
    </step>
    <step>
     <para>
     Start the box:
     </para>
     <screen><command>vagrant</command> <option>up</option></screen>
    </step>
    <step>
     <para>
      Access the box through <command>ssh</command>:
     </para>
     <screen><command>vagrant</command> <option>ssh</option></screen>
    </step>
   </procedure>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-libvirt-vagrant-sle">
  <title>&vagrant; Boxes for &sle;</title>
  <para>
   Starting with &sle; 15 SP2, &suse; provides official &vagrant; boxes for
   &sle; using the  &virtualbox; and &libvirt; providers. &sls; boxes are
   available for the &x86-64; and &aarch64; architectures, &sled; only for
   &x86-64;.
  </para>
  <para>
   These boxes come with the bare minimum of packages to reduce their size
   and are not registered, thus users need to register the boxes prior to
   further provisioning.
  </para>
  <para>
   The boxes are only available for direct download from
   <link xlink:href="https://download.suse.com"/>. Therefore, a downloaded
   box must be manually registered with &vagrant; as follows:
  </para>

  <screen><command>vagrant</command> <option>box add --name <replaceable>SLES-15-SP2</replaceable> \
   <replaceable>/path/to/</replaceable>SLES15-SP2-Vagrant.x86_64-15.2-libvirt-*.vagrant.libvirt.box</option></screen>
  <para>
   The box is then available under the name <literal>SLES-15-SP2</literal> and
   can be used like other Vagrant boxes:
  </para>
  <screen><command>vagrant</command> <option>init <replaceable>SLES-15-SP2</replaceable></option>
<command>vagrant</command> <option>up</option>
<command>vagrant</command> <option>ssh</option></screen>
 </sect1>

 <sect1>
  <title>Further Reading</title>
  <para>
   For more information about &vagrant; and it's configuration, refer to the
   official documentation at <link xlink:href="https://docs.vagrantup.com/"></link>.
  </para>
 </sect1>

</chapter>
