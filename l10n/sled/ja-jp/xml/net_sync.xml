<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="net_sync.xml" version="5.0" xml:id="cha-net-rsync"> <title>rsyncによるファイルのコピー</title>
 <info>
      <abstract>
        <para>
    現在の通常のユーザは、複数のコンピュータ(家庭用および職場用のマシン、ラップトップ、スマートフォン、またはタブレット)を持っています。このため、複数のデバイス間でファイルとドキュメントを同期させることがますます重要になっています。
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker/>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <warning>
  <title>データ損失の危険</title>
  <para>
   同期ツールの使用を開始する前に、その特徴や機能を十分に理解しておく必要があります。重要なファイルは必ずバックアップしてください。
  </para>
 </warning>
 <sect1 xml:id="sec-net-rsync-overview">
  <title>概念の概要</title>

  <para>
   低速なネットワーク接続で大量のデータを同期するために、rsyncは、ファイル内の変更のみを転送して信頼性を高めています。この処理は、テキストファイルのみでなくバイナリファイルも対象となります。ファイル間の差分を検出するために、rsyncはファイルをブロック単位で分割してチェックサムを計算します。
  </para>

  <para>
   変更の検出には若干の処理能力が要求されます。そのため、両側のマシンにRAMなどのリソースが十分あることを確認してください。
  </para>

  <para>
   rsyncが特に役立つのは、わずかな変更しかない大量のデータを定期的に転送する必要がある場合です。多くの場合、バックアップの操作がこれに該当します。また、rsyncは、Webサーバのディレクトリツリー全体を格納するステージングサーバをDMZ内のWebサーバにミラーリングする場合にも便利です。
  </para>

  <para>
   その名前に反して、rsyncは同期ツールではありません。データを一度に一方向にのみコピーするツールです。その逆にはコピーせず、コピーすることもできません。コピー元とコピー先の両方を同期できる双方向ツールが必要な場合は、Csyncを使用してください。
  </para>


 </sect1>
 <sect1 xml:id="sec-net-rsync-syntax">
  <title>基本的な構文</title>

  <para>
   rsyncは、次の基本的な構文を持つコマンドラインツールです。
  </para>

<screen>rsync [OPTION] SOURCE [SOURCE]... DEST</screen>

  <para>
   アクセスパーミッションと書き込みパーミッションがあれば、ローカルマシンでもリモートマシンでも使用できます。複数の<replaceable>SOURCE</replaceable>エントリを指定できます。<replaceable>SOURCE</replaceable>および<replaceable>DEST</replaceable>のプレースホルダには、パス、URL、またはその両方を指定できます。
  </para>

  <para>
   rsyncで最もよく使われるオプションは次のとおりです。
  </para>

  <variablelist>
   <varlistentry>
    <term><option>-v</option>
    </term>
    <listitem>
     <para>
      より詳細なテキストを出力します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-a</option>
    </term>
    <listitem>
     <para>
      アーカイブモード。ファイルを再帰的にコピーし、タイムスタンプ、ユーザ/グループの所有権、ファイルパーミッション、およびシンボリックリンクを保持します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-z</option>
    </term>
    <listitem>
     <para>
      転送データを圧縮します。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <note>
   <title>末尾のスラッシュの数</title>
   <para>
    rsyncを操作する場合は、特に末尾のスラッシュに注意する必要があります。ディレクトリの後に末尾のスラッシュがある場合、そのスラッシュはディレクトリの<emphasis/>「内容」を示します。末尾のスラッシュがない場合は、<emphasis/>「ディレクトリそのもの」を表します。
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-net-rsync-local-copy">
  <title>ファイルとディレクトリのローカルでのコピー</title>

  <para>
   次の説明は、現在のユーザがディレクトリ<filename>/var/backup</filename>に対する書き込みパーミッションを持っていることを想定しています。1つのファイルをマシン上のディレクトリから別のパスにコピーするには、次のコマンドを使用します。
  </para>

<screen><prompt>tux &gt; </prompt><command>rsync</command> -avz backup.tar.xz /var/backup/</screen>

  <para>
   ファイル<filename>backup.tar.xz</filename>が<filename>/var/backup/</filename>にコピーされ、絶対パスは<filename>/var/backup/backup.tar.xz</filename>になります。
  </para>

  <para>
   <emphasis/><filename>/var/backup/</filename>ディレクトリの後に「末尾のスラッシュ」を追加するのを忘れないでください。スラッシュを挿入しない場合、ファイル<filename>backup.tar.xz</filename>は、ディレクトリ<filename>/var/backup/</filename>の<emphasis/>「中ではなく」、<filename>/var/backup</filename> (ファイル)にコピーされます。
  </para>

  <para>
   ディレクトリをコピーする場合も、1つのファイルをコピーする場合と同様です。次の例では、ディレクトリ<filename>tux/</filename>とその内容をディレクトリ<filename>/var/backup/</filename>にコピーします。
  </para>

<screen><prompt>tux &gt; </prompt><command>rsync</command> -avz tux /var/backup/</screen>

  <para>
   コピーは絶対パス<filename>/var/backup/tux/</filename>にあります。
  </para>
 </sect1>
 <sect1 xml:id="sec-net-rsync-remote-copy">
  <title>ファイルとディレクトリのリモートでのコピー</title>

  <para>
   両方のマシンにrsyncツールが必要です。リモートディレクトリ間でファイルをコピーするには、IPアドレスまたはドメイン名が必要です。ローカルマシンとリモートマシンの現在のユーザ名が同じ場合、ユーザ名は省略できます。
  </para>

  <para>
   ファイル<filename>file.tar.xz</filename>をローカルホストからリモートホスト<systemitem class="ipaddress">192.168.1.1</systemitem>に同じユーザ(ローカルとリモート)でコピーするには、次のコマンドを使用します。
  </para>

<screen><prompt>tux &gt; </prompt><command>rsync</command> -avz file.tar.xz  tux@192.168.1.1:</screen>

  <para>
   好みに応じて、次のコマンドを使用することもできます。処理結果は同じです。
  </para>

<screen><prompt>tux &gt; </prompt><command>rsync</command> -avz file.tar.xz 192.168.1.1:~
<prompt>tux &gt; </prompt><command>rsync</command> -avz file.tar.xz 192.168.1.1:/home/tux</screen>

  <para>
   標準設定では、すべての場合に、リモートユーザのパスフレーズの入力を求めるプロンプトが表示されます。このコマンドは、<filename>file.tar.xz</filename>をユーザ<systemitem class="username">tux</systemitem>のホームディレクトリ(通常は<filename>/home/tux</filename>)にコピーします。
  </para>

  <para>
   ディレクトリをリモートでコピーする場合も、ローカルでコピーする場合と同様です。次の例では、ディレクトリ<filename>tux/</filename>とその内容をホスト<systemitem class="ipaddress">192.168.1.1</systemitem>のリモートディレクトリ<filename>/var/backup/</filename>にコピーします。
  </para>

<screen><prompt>tux &gt; </prompt><command>rsync</command> -avz tux 192.168.1.1:/var/backup/</screen>

  <para>
   ホスト<systemitem class="ipaddress">192.168.1.1</systemitem>で書き込みパーミッションを持っていると想定すると、コピーは絶対パス<filename>/var/backup/tux</filename>にあります。
  </para>
 </sect1>
 <sect1 xml:id="sec-net-rsync-server">
  <title>rsyncサーバの設定と使用</title>

  <para>
   rsyncは、デフォルトポート873で着信接続をリスンするデーモン(<systemitem class="daemon">rsyncd</systemitem>)として実行できます。このデーモンは<quote>コピーターゲット</quote>を受信できます。
  </para>

  <para>
   次に、<systemitem>jupiter</systemitem>上に<emphasis/>「バックアップ」ターゲットを持つrsyncサーバを作成する方法を説明します。このターゲットを使用してバックアップを保存できます。rsyncサーバを作成するには、以下の手順を実行します。
  </para>

  <procedure>
   <title>rsyncサーバの設定</title>
   <step xml:id="st-rsync-server-mkdir">
    <para>
     jupiterで、すべてのバックアップファイルを保存するディレクトリを作成します。この例では、<filename>/var/backup</filename>を使用します。
    </para>
<screen><prompt role="root">root # </prompt><command>mkdir</command> /var/backup</screen>
   </step>
   <step>
    <para>
     所有権を指定します。この場合、ディレクトリはグループ<systemitem class="groupname">users</systemitem>のユーザ<systemitem class="username">tux</systemitem>によって所有されます。
    </para>
<screen><prompt role="root">root # </prompt><command>chown</command> tux.users /var/backup</screen>
   </step>
   <step>
    <para>
     rsyncdデーモンを設定します。
    </para>
    <para>
     設定ファイルを、メインファイルと、バックアップターゲットを格納する複数の<quote>モジュール</quote>に分割します。こうすることで、後で他のターゲットを簡単に追加できます。グローバル値は<filename>/etc/rsyncd.d/*.inc</filename>ファイルに保存できます。一方、モジュールは<filename>/etc/rsyncd.d/*.conf</filename>ファイルに配置します。
    </para>
    <substeps>
     <step>
      <para>
       ディレクトリ<filename>/etc/rsyncd.d/</filename>を作成します。
      </para>
<screen><prompt role="root">root # </prompt><command>mkdir</command> /etc/rsyncd.d/</screen>
     </step>
     <step>
      <para>
       メイン設定ファイル<filename>/etc/rsyncd.conf</filename>に、次の行を追加します。
      </para>
<screen># rsyncd.conf main configuration file
log file = /var/log/rsync.log
pid file = /var/lock/rsync.lock

&amp;merge /etc/rsyncd.d <co xml:id="co-rsync-conf-merge"/>
&amp;include /etc/rsyncd.d <co xml:id="co-rsync-conf-include"/></screen>
      <calloutlist>
       <callout arearefs="co-rsync-conf-merge">
        <para>
         グローバル値を<filename>/etc/rsyncd.d/*.inc</filename>ファイルからメイン設定ファイルにマージします。
        </para>
       </callout>
       <callout arearefs="co-rsync-conf-include">
        <para>
         モジュール(またはターゲット)を<filename>/etc/rsyncd.d/*.conf</filename>ファイルからロードします。これらのファイルにはグローバル値への参照を含めないでください。
        </para>
       </callout>
      </calloutlist>
     </step>
     <step>
      <para>
       次の行を使用して、ファイル<filename>/etc/rsyncd.d/backup.conf</filename>内にモジュール(バックアップターゲット)を作成します。
      </para>
<screen># backup.conf: backup module
[backup] <co xml:id="co-rsync-conf-target"/>
   uid = tux <co xml:id="co-rsync-conf-uid-gid"/>
   gid = users <xref linkend="co-rsync-conf-uid-gid"/>
   path = /var/backup <co xml:id="co-rsync-conf-path"/>
   auth users = tux  <co xml:id="co-rsync-conf-authusers"/>
   secrets file = /etc/rsyncd.secrets <co xml:id="co-rsync-conf-secretfiles"/>
   comment = Our backup target</screen>
      <calloutlist>
       <callout arearefs="co-rsync-conf-target">
        <para>
         <emphasis/>「バックアップ」ターゲット。好きな名前を使用できます。ただし、ターゲットには用途に応じた名前を付け、<filename>*.conf</filename>ファイルと同じ名前を使用することをお勧めします。
        </para>
       </callout>
       <callout arearefs="co-rsync-conf-uid-gid">
        <para>
         ファイル転送の実行時に使用されるユーザ名またはグループ名を指定します。
        </para>
       </callout>
       <callout arearefs="co-rsync-conf-path">
        <para>
         バックアップを保存するパスを定義します(<xref linkend="st-rsync-server-mkdir"/>から)。
        </para>
       </callout>
       <callout arearefs="co-rsync-conf-authusers">
        <para>
         許可されているユーザのカンマ区切りリストを指定します。最も単純な形式では、このモジュールへの接続を許可されているユーザ名が含まれます。この例では、ユーザ<systemitem class="username">tux</systemitem>のみが許可されています。
        </para>
       </callout>
       <callout arearefs="co-rsync-conf-secretfiles">
        <para>
         ユーザ名とプレーンパスワードが記述された行が含まれるファイルのパスを指定します。
        </para>
       </callout>
      </calloutlist>
     </step>
     <step>
      <para>
       次の内容で<filename>/etc/rsyncd.secrets</filename>ファイルを作成し、<replaceable>PASSPHRASE</replaceable>を置き換えます。
      </para>
<screen># user:passwd
tux:<replaceable>PASSPHRASE</replaceable></screen>
     </step>
     <step>
      <para>
       <systemitem class="username">root</systemitem>のみがこのファイルを読み込めるようにします。
      </para>
<screen><prompt role="root">root # </prompt><command>chmod</command> 0600 /etc/rsyncd.secrets</screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     次のコマンドを使用して、rsyncdデーモンを起動して有効にします。
    </para>
<screen><prompt role="root">root # </prompt><command>systemctl</command> enable rsyncd
<prompt role="root">root # </prompt><command>systemctl</command> start rsyncd</screen>
   </step>
   <step>
    <para>
     rsyncサーバにアクセスできるかどうかをテストします。
    </para>
<screen><prompt>tux &gt; </prompt><command>rsync</command> jupiter::</screen>
    <para>
     次のような応答が表示されます。
    </para>
<screen>backup          Our backup target</screen>
    <para>
     異なる場合は、設定ファイル、ファイアウォール設定、およびネットワーク設定を確認してください。
    </para>
   </step>
  </procedure>

  <para>
   上記の手順でrsyncサーバが作成されたので、このサーバを使用してバックアップを保存できます。この例では、すべての接続を示すログファイルも作成されます。このファイルは<filename>/var/log/rsyncd.log</filename>に格納されます。これは、転送をデバッグする場合に便利です。
  </para>

  <para>
   バックアップターゲットの内容を一覧にするには、次のコマンドを使用します。
  </para>

<screen><prompt>tux &gt; </prompt>rsync -avz jupiter::backup</screen>

  <para>
   このコマンドを入力すると、サーバのディレクトリ<filename>/var/backup</filename>にあるファイルがすべて一覧表示されます。このリクエストはログファイル<filename>/var/log/rsyncd.log</filename>にも記録されます。実際の転送を開始するには、ソースディレクトリを指定します。現在のディレクトリには<literal>.</literal>を使用してください。たとえば、次のコマンドは、現在のディレクトリをrsyncバックアップサーバにコピーします。
  </para>

<screen><prompt>tux &gt; </prompt>rsync -avz . jupiter::backup</screen>

  <para>
   デフォルトでは、rsyncは実行時にファイルとディレクトリを削除しません。削除を有効にするには、追加オプション<option>--delete</option>を記述する必要があります。新しい方のファイルが削除されないように、代わりにオプション<option>--update</option>を使用することもできます。競合が発生した場合は、手動で解決する必要があります。
  </para>
 </sect1>
 <sect1 xml:id="sec-net-rsync-summary">
  <title>詳細情報</title>

  <variablelist>
   <varlistentry>
    <term>Csync</term>
    <listitem>
     <para>
      双方向ファイル同期ツール。<link xlink:href="https://csync.org/"/>を参照してください。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>RSnapshot</term>
    <listitem>
     <para>
      増分バックアップを作成します。<link xlink:href="https://rsnapshot.org"/>を参照してください。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Unison</term>
    <listitem>
     <para>
      CSyncに似たファイル同期ツールですが、グラフィカルインタフェースを備えています。<link xlink:href="https://www.seas.upenn.edu/~bcpierce/unison/"/>を参照してください。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Rear</term>
    <listitem>
     <para>
      障害復旧フレームワーク。SUSE Linux Enterprise High Availability Extensionの『<link xlink:href="https://documentation.suse.com/sle-ha-15/html/SLE-HA-all/cha-ha-rear.html"><citetitle>管理ガイド</citetitle>』の「<citetitle>Disaster Recovery with Rear (Relax-and-Recover)</citetitle></link>」の章を参照してください。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
