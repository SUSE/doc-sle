<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xml:id="cha-docker-installation" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.0"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Setting Up &deng;</title>
 <sect1 xml:id="Preparation">
  <title>Preparing the Host</title>
  <para>
   Prepare the host as described below. Before installing any &docker;-related
   packages, you need to enable the container module:
  </para>

  <note>
   <!-- FIXME: Hard-coded version numbers! Is this still relevant? - sknorr,
    2017-12-07-->
   <title>Built-in &docker; Orchestration Support</title>
   <para>
    Starting with &deng; 1.12, container orchestration is now an integral
    part of &deng;. Even though this feature is available in
    &productname;, it is not supported by &suse; and is only provided as a
    technology preview. Use Kubernetes for &docker; container orchestration. For
    details, refer to the <link
     xlink:href="http://kubernetes.io/docs/getting-started-guides/kubeadm/">Kubernetes
     documentation</link>.
   </para>
  </note>

  <!--taroth 2015-07-02: http://doccomments.provo.novell.com/comments/28724 -->

  <procedure>
   <title>Enabling the Container Module Using Graphical User Interface &yast;</title>
   <step>

    <para>
     Start &yast;, and select <menuchoice> <guimenu>Software</guimenu>
      <guimenu>Software Repositories</guimenu> </menuchoice>.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Add</guimenu> to open the add-on dialog.
    </para>
   </step>
   <step>
    <para>
     Select <guimenu>Extensions and Modules from Registration Server</guimenu>
     and click <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     From the list of available extensions and modules, select
     <guimenu>Container Module 15 x86_64</guimenu> and click
     <guimenu>Next</guimenu>.
    </para>
    <para>
     The containers module and its repositories will be added to your system.
    </para>
   </step>
   <step>
    <para>
     If you use &rmtool;, update the list of repositories on the &rmt; server.
    </para>
   </step>
  </procedure>

  <procedure>
   <title>Enabling the Container Module from Command Line Using SUSEConnect</title>
   <step>
    <para>
     The Container Module can be added also with the following command:
    </para>
    <screen>&prompt.sudo;SUSEConnect -p sle-module-containers/15/x86_64 -r ''</screen>
    <note>
     <title>SUSEConnect Syntax</title>
     <para>
      The <option>-r ''</option> flag is required to avoid a known limitation
      of SUSEConnect.
     </para>
    </note>
   </step>
  </procedure>

  <procedure>
   <title>Installing and Setting Up &deng;</title>
   <step>
    <para>
     Install the <systemitem>docker</systemitem> package:
    </para>
    <screen>&prompt.sudo;zypper install docker</screen>
   </step>
   <step>
    <para>
     To automatically start the &docker; service at boot time:
    </para>
    <screen>&prompt.sudo;systemctl enable docker.service</screen>
    <para>
     This will automatically enable <systemitem>docker.socket</systemitem>
     in consequence.
    </para>
   </step>
   <step>
    <para>
     If you want to use Portus and an SSL secured registry:
    </para>
    <substeps>
     <step>
      <para>Open the <filename>/etc/sysconfig/docker</filename> file. Search for
       the parameter <parameter>DOCKER_OPTS</parameter> and add
       <literal>--insecure-registry <replaceable>ADDRESS_OF_YOUR_REGISTRY</replaceable></literal>.
      </para>
     </step>
     <step>
      <para>
       Add CA certificates to the directory
       <filename>/etc/docker/certs.d/<replaceable>REGISTRY_ADDRESS</replaceable></filename>
      </para>
      <screen>&prompt.sudo;cp CA /etc/pki/trust/anchors/</screen>
     </step>
     <step>
      <para>
       Copy the CA certificates to your system:
      </para>
      <screen>&prompt.sudo;update-ca-certificates</screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Start the &docker; service:
    </para>
    <screen>&prompt.sudo;systemctl start docker.service</screen>
    <para>
     This will automatically start <systemitem>docker.socket</systemitem>.
    </para>
   </step>
  </procedure>
  <para>
   The &docker; daemon listens on a local socket which is accessible only by the
   <systemitem class="username">root</systemitem> user and by the members of
   the <systemitem class="groupname">docker</systemitem> group. The
   <systemitem class="groupname">docker</systemitem> group is automatically
   created at package installation time.
  </para>
  <para>
   To allow a certain user to connect to the local &docker; daemon,
   use the following command:
  </para>
  <screen>&prompt.sudo;/usr/sbin/usermod -aG docker <replaceable>USERNAME</replaceable></screen>
  <para>
   After their next login, the user can communicate with the local
   &docker; daemon.
  </para>
 </sect1>
 <sect1 xml:id="sec-docker-setup-net">
  <title>Configuring Network</title>
  <para>
   If you want your containers to be able to access the external network, you
   must enable the <option>ipv4 ip_forward</option> rule.
  </para>
  <sect2 xml:id="sec-docker-setup-net-forward">
   <title>Enabling IPv4 Forwarding</title>
   <para>
    This can be done using &yast; by browsing to
    <menuchoice> <guimenu>System</guimenu>
    <guimenu>Network Settings</guimenu> <guimenu>Routing</guimenu> </menuchoice>
    menu and ensuring <option>Enable IPv4 Forwarding</option> is checked.
   </para>
   <para>
    The option cannot be changed when networking is handled by the Network
    Manager. In such cases the <filename>/etc/sysconfig/SuSEfirewall2</filename>
    file needs to be edited manually to ensure the <option>FW_ROUTE</option>
    flag is set to <option>yes</option>:
   </para>
   <screen>FW_ROUTE="yes"</screen>
  </sect2>
  <sect2 xml:id="sec-docker-setup-net-power">
   <title>Networking Limitations on &power; Architecture</title>
   <para>
    Currently &docker; networking has two limitations on the &power; architecture.
   </para>
   <para>
    The first limitation is about iptables. &productname; machines cannot run
    &deng; with the iptables support enabled. An update of the kernel is going
    to solve this issue. In the meantime the <package>docker</package> package
    for &power; has
    iptables support disabled via a dedicated directive inside of
    <filename>/etc/sysconfig/docker</filename>.
   </para>
   <para>
    Because of this limitation, &docker; containers will not have access to
    the outer network. A possible workaround is to share the same network
    namespace between the host and the containers. This however reduces the
    isolation of the containers.
   </para>
   <para>
    The network namespace of the host can be shared on a per-container basis by
    adding <option>--net=host</option> to the <option>docker run</option>
    command.
   </para>
   <note>
    <title>iptables Support on &productname;</title>
    <para>
     &productname; hosts are not affected by this limitation but they may have
     <command>iptables</command> support disabled. This can be changed by
     removing the <option>-iptables=false</option> setting inside of
     <filename>/etc/sysconfig/docker</filename>.
    </para>
   </note>
   <para>
    The second limitation is about network isolation between the containers and
    the host. Currently it is not possible to prevent containers from probing
    or accessing arbitrary ports of each other.
   </para>
  </sect2>
  <sect2 xml:id="sec-docker-setup-net-docs">
   <title>How the &deng; Interacts with <command>iptables</command></title>
   <para>
    To learn more about how &docker; containers interact with each other and the
    system firewall, refer to the <link
     xlink:href="https://docs.docker.com/v17.09/engine/userguide/networking/default_network/container-communication/">
     &docker; documentation</link>.
   </para>
   <para>
    It is also possible to completely prevent the &deng; from manipulating
    <command>iptables</command>. Refer to the <link
     xlink:href="https://docs.docker.com/network/iptables/#prevent-docker-from-manipulating-iptables">
     &docker; documentation</link>.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-docker-setup-updates">
  <title>Updates</title>
  <para>
   All updates to the <package>docker</package> package are marked as
   interactive (that is, no automatic updates) to avoid accidental updates
   breaking running container workloads. In general, we recommend stopping all
   running containers before applying an update to &deng;.
  </para>
  <para>
   To avoid the potential for data loss, we do not recommend having workloads
   rely on containers being startable after an update to &deng;. Although it
   is technically possible to keep containers running during an update via the
   <option>--live-restore</option> option, experience has shown that such
   updates can introduce regressions. &suse; does not support this feature.
  </para>
 </sect1>
</chapter>
