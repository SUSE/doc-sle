<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ulp.xml" version="5.0" xml:id="cha-ulp" xml:lang="de">
  <title>Userspace-Live-Patching</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
    <abstract>
      <para>
        Dieses Kapitel beschreibt die Grundprinzipien und die Verwendung von Userspace-Live-Patching.
      </para>
    </abstract>
  </info>
  <sect1 xml:id="sec-ulp">
    <title>Info zu Userspace-Live-Patching</title>

    

    

    <para>
      Das Userspace-Live-Patching (ULP) bezeichnet die Anwendung von Patches auf Bibliotheken, die von laufenden Prozessen verwendet werden, ohne diese zu unterbrechen. Jedes Mal, wenn eine Sicherheitskorrektur als Live-Patch verfügbar ist, werden die Kundendienste nach der Anwendung des Live-Patches ohne Neustart der Prozesse gesichert.
    </para>

    <para>
      Live-Patching-Vorgänge werden mit dem Werkzeug <systemitem>ulp</systemitem> durchgeführt, das Teil von <systemitem>libpulp</systemitem> ist. <systemitem>libpulp</systemitem> ist ein Framework, das aus der <systemitem>libpulp.so</systemitem>-Bibliothek und der <command>ulp</command>-Binärdatei besteht, die dafür sorgt, dass Bibliotheken live gepatcht werden können, und Live-Patches anwendet.
    </para>

    <tip>
      <para>
        Sie können den Befehl <command>ulp</command> entweder als normaler Benutzer oder als privilegierter Benutzer über den Mechanismus <command>sudo</command> ausführen. Der Unterschied besteht darin, dass Sie durch Ausführen von <command>ulp</command> über <command>sudo</command> Informationen über ausgeführte Prozesse oder Patch-Prozesse nach <systemitem class="username">root</systemitem> anzeigen können.
      </para>
    </tip>

    <sect2 xml:id="sec-ulp-prereqs">
      <title>Voraussetzungen</title>
      <para>
        Für das ULP müssen zwei Anforderungen erfüllt sein.
      </para>
      <itemizedlist>
        
        <listitem os="sles;sled">
          <para>
            Installieren Sie das ULP auf Ihrem System, indem Sie Folgendes ausführen:
          </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper in libpulp0 libpulp-tools</screen>
        </listitem>
        <listitem>
          <para>
            Anwendungen mit gewünschter Live-Patch-Unterstützung müssen vor dem Laden der Bibliothek <systemitem>libpulp.so.0</systemitem> gestartet werden. Weitere Einzelheiten finden Sie unter <xref linkend="sec-ulp-libpulp"/>.
          </para>
        </listitem>
      </itemizedlist>
    </sect2>

    <sect2 xml:id="sec-ulp-supported-libs">
      <title>Unterstützte Bibliotheken</title>
      <para>
        Derzeit werden nur <systemitem>glibc</systemitem> und <systemitem>openssl</systemitem> (<systemitem>openssl1_1</systemitem>) unterstützt. Weitere Pakete werden verfügbar sein, sobald sie für das Live-Patching vorbereitet sind. Um <systemitem>glibc</systemitem>- und <systemitem>openssl</systemitem>-Live-Patches zu erhalten, installieren Sie die beiden Pakete <package>glibc-livepatches</package> und <package>openssl-livepatches</package>.
      </para>
<screen os="sled;sles"><prompt>&gt; </prompt>zypper install glibc-livepatches openssl-livepatches</screen>

      
    </sect2>

    <sect2 xml:id="sec-ulp-libpulp">
      <title>Verwenden von <systemitem>libpulp</systemitem></title>
      <para>
        Um Live-Patching für eine Anwendung zu aktivieren, müssen Sie die Bibliothek <systemitem>libpulp.so.0</systemitem> beim Starten der Anwendung vorladen:
      </para>
<screen><prompt>&gt; </prompt>LD_PRELOAD=/usr/lib64/libpulp.so.0 <replaceable>APPLICATION_CMD</replaceable></screen>
      <sect3 xml:id="sec-ulp-livepatch-check">
        <title>Prüfen, ob Live-Patching für eine Bibliothek möglich ist</title>
        <para>
          Prüfen Sie mit dem folgenden Befehl, ob Live-Patching für eine Bibliothek möglich ist:
        </para>
<screen><prompt>&gt; </prompt>ulp livepatchable <replaceable>PATH_TO_LIBRARY</replaceable></screen>
      </sect3>
      <sect3 xml:id="sec-ulp-livepatch-container-check">
        <title>Prüfen, ob eine <filename>.so</filename>-Datei ein Live-Patch-Container ist</title>
        <para>
          Ein gemeinsam genutztes Objekt (<filename>.so</filename>) ist ein Live-Patch-Container, wenn es die ULP-Patch-Beschreibung enthält. Sie können dies mit dem folgenden Befehl überprüfen:
        </para>
<screen><prompt>&gt; </prompt>readelf -S <replaceable>SHARED_OBJECT</replaceable> | grep .ulp</screen>
        <para>
          Wenn die Ausgabe zeigt, dass das gemeinsam genutzte Objekt sowohl als den Abschnitt <literal>.ulp</literal> als auch <literal>.ulp.rev</literal> enthält, handelt es sich um einen Live-Patch-Container.
        </para>
      </sect3>
      <sect3 xml:id="sec-ulp-apply-livepatch">
        <title>Anwenden von Live-Patches</title>
        <para>
          Live-Patches werden mit dem Befehl <command>ulp trigger</command> angewendet, beispielsweise:
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> <replaceable>LIVEPATCH</replaceable>.so</screen>
        <para>
          Ersetzen Sie <literal>PID</literal> durch die Prozess-ID des laufenden Prozesses, der die zu patchende Bibliothek verwendet, und <literal>LIVEPATCH.so</literal> durch die tatsächliche Live-Patch-Datei. Der Befehl gibt eine der folgenden Statusmeldungen zurück:
        </para>
        <variablelist>
          <varlistentry>
            <term>ERFOLG</term>
            <listitem>
              <para>
                Der Live-Patching-Vorgang war erfolgreich.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ÜBERSPRUNGEN</term>
            <listitem>
              <para>
                Der Patch wurde übersprungen, da er nicht für eine Bibliothek konzipiert wurde, die bei diesem Prozess geladen wird.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>FEHLER</term>
            <listitem>
              <para>
                Es ist ein Fehler aufgetreten und Sie können weitere Informationen abrufen, indem Sie den internen <systemitem>libpulp</systemitem>-Nachrichtenpuffer prüfen. Weitere Informationen zu diesem Thema finden Sie unter <xref linkend="sec-ulp-internal-messages"/>.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>
          Es ist auch möglich, mehrere Live-Patches anzuwenden, indem Sie z. B. Platzhalter verwenden:
        </para>
<screen><prompt>&gt; </prompt>ulp trigger '*.so'</screen>
        <para>
          Der Befehl versucht, jeden Patch im aktuellen Ordner auf jeden Prozess anzuwenden, der die Bibliothek <systemitem>libpulp</systemitem> geladen hat. Wenn der Patch nicht für den Prozess geeignet ist, wird er automatisch übersprungen. Am Ende zeigt das Werkzeug an, wie viele Patches es erfolgreich auf wie viele Prozesse angewendet hat.
        </para>
      </sect3>
      <sect3 xml:id="sec-ulp-revert-livepatch">
        <title>Zurücksetzen von Live-Patches</title>
        <para>
          Mit dem Befehl <command>ulp trigger</command> können Sie Live-Patches zurücksetzen. Für das Zurücksetzen von Live-Patches stehen zwei Möglichkeiten zur Auswahl. Sie können einen Live-Patch zurücksetzen, indem Sie den Schalter <option>--revert</option> verwenden und den Live-Patch-Container übergeben:
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> --revert <replaceable>LIVEPATCH</replaceable>.so</screen>
        <para>
          Alternativ können Sie alle Patches einer bestimmten Bibliothek entfernen, beispielsweise:
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> --revert-all=<replaceable>LIBRARY</replaceable></screen>
        <para>
          In dem Beispiel steht <replaceable>LIBRARY</replaceable> für die entsprechende Bibliothek, beispielsweise für <systemitem>libcrypto.so.1.1</systemitem>.
        </para>
        <para>
          Der letztgenannte Ansatz kann nützlich sein, wenn der Quellcode des ursprünglichen Live-Patches nicht verfügbar ist. Oder Sie möchten einen bestimmten alten Patch entfernen und einen neuen anwenden, während die Zielanwendung weiterhin einen sicheren Code ausführt, z. B.:
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable>  --revert-all=libcrypto.so.1.1 new_livepatch2.so</screen>
      </sect3>
      <sect3 xml:id="sec-ulp-verify-patches">
        <title>Anzeigen angewendeter Patches</title>
        <para>
          Mit dem folgenden Befehl können Sie überprüfen, auf welche Anwendungen Live-Patches angewendet wurden:
        </para>
<screen><prompt>&gt; </prompt>ulp patches</screen>
        <para>
          Die Ausgabe zeigt, welche Bibliotheken live gepatcht werden können und welche Patches in Programme geladen werden und welche Fehler die Patches beheben:
        </para>
<screen>PID: 10636, name: test
  Livepatchable libraries:
    in /lib64/libc.so.6:
      livepatch: libc_livepatch1.so
        bug labels: jsc#SLE-0000
    in /usr/lib64/libpulp.so.0:</screen>
        <para>
          Sie können auch feststellen, welche Funktionen durch den Live-Patch gepatcht werden:
        </para>
<screen><prompt>&gt; </prompt>ulp dump <replaceable>LIVEPATCH.so</replaceable></screen>
      </sect3>
      <sect3 xml:id="sec-ulp-internal-messages">
        <title>Anzeigen der internen Nachrichtenwarteschlange</title>
        <para>
          Protokollmeldungen von <systemitem>libpulp.so</systemitem> werden in einem Puffer innerhalb der Bibliothek gespeichert und nur angezeigt, wenn der Benutzer dies anfordert. Um diese Meldungen anzuzeigen, führen Sie Folgendes aus:
        </para>
<screen><prompt>&gt; </prompt>ulp messages -p <replaceable>PID</replaceable></screen>
      </sect3>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-ulp-info">
    <title>Weitere Informationen</title>

    <para>
      Weitere Informationen zu <systemitem>libpulp</systemitem> finden Sie im <link xlink:href="https://github.com/SUSE/libpulp">Git
      repository</link> des Projekts.
    </para>
  </sect1>
</chapter>
