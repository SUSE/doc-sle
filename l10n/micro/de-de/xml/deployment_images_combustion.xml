<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="deployment_images_combustion.xml" version="5.0" xml:id="cha-images-combustion">
 <title>Konfiguration mit Combustion</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
  <abstract>
   <para>
    In diesem Kapitel wird Combustion beschrieben, das Tool, mit dem Sie Ihr System beim ersten Starten gemäß Ihrer Konfiguration konfigurieren.
   </para>
  </abstract>
 </info>
 <sect1 xml:id="sec-about-combustion">
  <title>Informationen zu Combustion</title>

  <para>
   Mit dem dracut-Modul Combustion können Sie Ihr System beim ersten Starten konfigurieren. Combustion liest eine bereitgestellte Datei (<filename>script</filename>), führt die Befehle darin aus und nimmt damit Änderungen am Dateisystem vor. Mit Combustion können Sie die Standardpartitionen ändern, die Passwörter der Benutzer festlegen, Dateien erstellen, Pakete installieren usw
  </para>

  <para>
   Das dracut-Modul Combustion wird aufgerufen, sobald das Argument <literal>ignition.firstboot</literal> an die Kernel-Befehlszeile übergeben wird. Combustion liest dann die Konfiguration aus <filename>script</filename>. Wenn das Netzwerk-Flag in <filename>script</filename> gefunden wird, versucht Combustion, das Netzwerk zu konfigurieren. Sobald <literal>/sysroot</literal> eingehängt wurde, versucht Combustion, alle Einhängepunkte in <filename>/etc/fstab</filename> zu aktivieren und dann <command>transactional-update</command> aufzurufen, um weitere Änderungen anzuwenden (z. B. das <systemitem class="username">root</systemitem>-Passwort festlegen oder Pakete installieren).
  </para>

  <para>
   Wenn Sie Combustion verwenden, müssen Sie dem Konfigurationsgerät die Kennung <literal>combustion</literal> zuweisen, eine bestimmte Verzeichnisstruktur auf diesem Konfigurationsmedium erstellen und die Konfigurationsdatei <filename>script</filename> einfügen. Erstellen Sie im Stammverzeichnis des Konfigurationsmediums das Verzeichnis <filename>combustion</filename> und platzieren Sie <filename>script</filename> zusammen mit anderen Dateien – SSH-Schlüssel, Konfigurationsdateien usw. – in dieses Verzeichnis. Die Verzeichnisstruktur sollte dann wie folgt aussehen:
  </para>

<screen>
&lt;root directory&gt;
└── combustion
    └── script
    └── other files

	</screen>

  <para>
   Mit Combustion können Sie Ihren virtuellen QEMU-/KVM-Computer konfigurieren. In diesem Fall übergeben Sie den Speicherort der Datei <filename>script</filename> mithilfe des Parameters <literal>fw_cfg</literal> des Befehls <command>qemu</command>:
  </para>

<screen>
	-fw_cfg name=opt/org.opensuse.combustion/script,file=/var/combustion-script
	</screen>

  <para>
   Combustion kann zusammen mit Ignition genutzt werden. Wenn Sie dies tun möchten, legen Sie für das Konfigurationsmedium den Namen <literal>ignition</literal> fest und nehmen das Verzeichnis <filename>ignition</filename> mit der Datei <filename>config.ign</filename> wie folgt in die Verzeichnisstruktur auf:
  </para>

<screen>
&lt;root directory&gt;
└── combustion
    └── script
    └── other files
└── ignition 
    └── config.ign
	</screen>

  <para>
   In diesem Szenario wird Ignition vor Combustion ausgeführt.
  </para>
 </sect1>
 <sect1 xml:id="sec-combustion-script">
  <title>Die Konfigurationsdatei <filename>script</filename></title>

  <para>
   Die Konfigurationsdatei <filename>script</filename> enthält eine Reihe von Befehlen, die in einer Transaktionsaktualisierungs-Shell auf Ihrem System ausgeführt werden. In diesem Abschnitt finden Sie Beispiele für die Ausführung verschiedener Konfigurationsaufgaben mit Combustion.
  </para>

  <important>
   <title>Interpreter-Deklaration</title>
   <para>
    Die Datei <filename>script</filename> wird mit Bash interpretiert und muss daher die Interpreter-Deklaration in der ersten Zeile enthalten:
   </para>
<screen>
 #!/bin/bash
 </screen>
  </important>

  <para>
   Wenn Sie sich bei Ihrem System anmelden möchten, geben Sie mindestens das <systemitem class="username">root</systemitem>-Passwort an. Es wird allerdings empfohlen, die Authentifizierung mithilfe von SSH-Schlüsseln einzurichten. Wenn Sie ein <systemitem class="username">root</systemitem>-Passwort benötigen, müssen Sie ein sicheres Passwort konfigurieren. Falls Sie ein zufällig erzeugtes Passwort heranziehen, muss dieses Passwort mindestens 10 Zeichen enthalten. Wenn Sie Ihr Passwort manuell erstellen, verwenden Sie mehr als 10 Zeichen und kombinieren Sie Großbuchstaben, Kleinbuchstaben und Ziffern.
  </para>

  <sect2 xml:id="sec-script-network">
   <title>Netzwerkkonfiguration</title>
   <para>
    Soll die Netzwerkverbindung beim ersten Starten konfiguriert und verwendet werden, fügen Sie die folgende Anweisung in <filename>script</filename> ein:
   </para>
<screen>
 # combustion: network
 </screen>
   <para>
    Diese Anweisung übergibt das Argument <literal>rd.neednet=1</literal> an dracut. Wenn Sie die Anweisung nicht angeben, wird das System ohne Netzwerkverbindung konfiguriert.
   </para>
  </sect2>

  <sect2 xml:id="sec-script-partitioning">
   <title>Partitionierung</title>
   <para>
    SLE Micro-Raw-Images werden mit einem standardmäßigen Partitionierungsschema geliefert (siehe <xref linkend="sec-default-partitioning"/>). Bei Bedarf können Sie eine andere Partitionierung verwenden. Mit den folgenden Beispiel-Codeausschnitten wird <filename>/home</filename> in eine andere Partition verschoben.
   </para>
   <note>
    <title>Änderungen außerhalb der in Snapshots enthaltenen Verzeichnisse</title>
    <para>
     Das folgende Skript nimmt Änderungen vor, die sich nicht in Snapshots befinden. Wenn das Skript fehlschlägt und der Snapshot verworfen wird, bleiben einige Änderungen sichtbar und können nicht rückgängig gemacht werden (z. B. die Änderungen am Gerät <literal>/dev/vdb</literal>).
    </para>
   </note>
   <para>
    Der folgende Codeausschnitt legt eine GPT mit einer einzelnen Partition auf dem Gerät <literal>/dev/vdb</literal> an:
   </para>
<screen>
sfdisk /dev/vdb &lt;&lt;EOF
label: gpt
type=linux
EOF 

partition=/dev/vdb1
   </screen>
   <para>
    Diese Partition wird für BTRFS formatiert:
   </para>
<screen>
wipefs --all ${partition}
mkfs.btrfs ${partition} 
   </screen>
   <para>
    Der Inhalt von <filename>/home</filename> (falls vorhanden) wird mit dem folgenden Codeausschnitt in den neuen Speicherort des Ordners <filename>/home</filename> verschoben:
   </para>
<screen>
mount /home
mount ${partition} /mnt 
rsync -aAXP /home/ /mnt/
umount /home /mnt
   </screen>
   <para>
    Der nachfolgende Codeausschnitt verschiebt einen alten Eintrag in <filename>/etc/fstab</filename> und erstellt einen neuen Eintrag:
   </para>
<screen>
awk -i inplace '$2 != "/home"' /etc/fstab
echo "$(blkid -o export ${partition} | grep ^UUID=) /home btrfs defaults 0 0" &gt;&gt;/etc/fstab
   </screen>
  </sect2>

  <sect2 xml:id="sec-cript-security">
   <title>Festlegen eines Passworts für <systemitem class="username">root</systemitem></title>
   <para>
    Bevor Sie das <systemitem class="username">root</systemitem>-Passwort festlegen, generieren Sie einen Hash des Passworts, z. B. mit <command>openssl passwd -6</command>. Zum Festlegen des Passworts fügen Sie Folgendes in <filename>script</filename> ein:
   </para>
<screen>
 echo 'root:$5$.wn2BZHlEJ5R3B1C$TAHEchlU.h2tvfOpOki54NaHpGYKwdNhjaBuSpDotD7' | chpasswd -e
 </screen>
  </sect2>

  <sect2 xml:id="sec-script-sshkeys">
   <title>Hinzufügen von SSH-Schlüsseln</title>
   <para>
    Der folgende Codeausschnitt erstellt ein Verzeichnis, in dem der SSH-Schlüssel für <systemitem class="username">root</systemitem> gespeichert wird, und kopiert dann den öffentlichen SSH-Schlüssel, der sich auf dem Konfigurationsgerät befindet, in die Datei <filename>authorized_keys</filename>.
   </para>
<screen>
 mkdir -pm700 /root/.ssh/
cat id_rsa_new.pub &gt;&gt; /root/.ssh/authorized_keys
 </screen>
   <note>
    <para>
     Falls Sie die Fernanmeldung über SSH nutzen, muss der SSH-Dienst aktiviert sein. Detaillierte Informationen finden Sie in <xref linkend="sec-script-services"/>.
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-script-services">
   <title>Aktivieren von Diensten</title>
   <para>
    Sie müssen ggf. bestimmte Dienste aktivieren, z. B. den SSH-Dienst. Zum Aktivieren des SSH-Dienstes fügen Sie die folgende Zeile in <filename>script</filename> ein:
   </para>
<screen>
 systemctl enable sshd.service
 </screen>
  </sect2>

  <sect2 xml:id="sec-script-install">
   <title>Installieren von Paketen</title>
   <important>
    <title>Ggf. sind eine Netzwerkverbindung und die Registrierung Ihres Systems erforderlich.</title>
    <para>
     Einige Pakete erfordern möglicherweise ein zusätzliches Abonnement; in diesem Fall müssen Sie Ihr System zuvor registrieren. Bei der Installation von zusätzlichen Paketen wird eventuell auch eine verfügbare Netzwerkverbindung benötigt.
    </para>
   </important>
   <para>
    Im Rahmen der Konfiguration beim ersten Starten können Sie zusätzliche Pakete auf Ihrem System installieren. Zur Installation des <literal>vim</literal>-Editors fügen Sie beispielsweise Folgendes ein:
   </para>
<screen>
zypper --non-interactive install vim-small
 </screen>
   <note>
    <para>
     Sie können <command>zypper</command> nicht mehr nutzen, sobald Sie die Konfiguration abgeschlossen haben und das konfigurierte System starten. Sollen nachträgliche Änderungen vorgenommen werden, müssen Sie mit dem Befehl <command>transactional-update</command> einen geänderten Snapshot erstellen. Detaillierte Informationen finden Sie im <xref linkend="sec-transactional-udate"/>.
    </para>
   </note>
  </sect2>
 </sect1>
</chapter>
