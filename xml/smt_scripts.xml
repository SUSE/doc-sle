<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="smt.scripts">
 <title>Important Scripts and Tools</title>

 <para>
  There are two important groups of &smt; commands: The
  <command>smt</command> command with its sub-commands is used for managing
  the mirroring of updates, registration of clients, and reporting. The
  &systemd; <systemitem>smt.target</systemitem> is used for starting,
  stopping, restarting the &smt; service and services that &smt; depends on,
  and for checking their status.
 </para>

 <sect2 xml:id="smt.scripts.que">
  <title>&smt; JobQueue</title>
  <para>
   Since &sle; version 11, there is a new &smt; service called &smt;
   JobQueue. It is a system to delegate <emphasis>jobs</emphasis> to the
   registered clients.
  </para>
  <para>
   To enable JobQueue, the <systemitem>smt-client</systemitem> package needs
   to be installed on the SMT client. The client then pulls jobs from the
   server via a cron job (every 3 hours by default). The list of jobs is
   maintained on the server. Jobs are not pushed directly to the clients and
   processed immediately, but the client asks for them. Therefore, a delay
   of several hours may occur.
  </para>
  <para> Every job can have its parent job, which sets a dependency. The
      child job only runs after the parent job successfully finished.
      Job timing is also possible: a job can have a start time and an
      expiration time to define its earliest execution time or the time
      the job will expire. A job may also be persistent. It is run
      repeatedly with a delay. For example, a patch status job is a
      persistent job that runs once a day. For each client, a patch
      status job is automatically generated after it registers
      successfully against an &smt; 11 server. The patchstatus
      information can be queried with the <command>smt-client</command>
      command. For already registered clients, you can add patchstatus
      jobs manually with the <command>smt-job</command> command. </para>
  <para>
   You can manipulate, list, create or delete the jobs. For this reason, the
   command line tool <command>smt-job</command> was introduced. For more
   details on <command>smt-job</command>, see
   <xref linkend="smt.scripts.job"/>.
  </para>
  <note>
   <title>Overriding the Automatic Creation of Patch Status Jobs</title>
   <para>
    When creating a software push or an update job, normally a
    non-persistent patch status job will be added automatically with the
    parent id set to the id of the new job. To disable this behavior, use
    the <option>--no-autopatchstatus</option> option.
   </para>
  </note>
  <para> &smt; is not intended to be a system to directly access the
      clients or to immediately report the results back; it is a
      longtime maintenance and monitoring system rather than a live
      interaction tool. </para>
  <note>
   <title>Job Time Lag Limitation</title>
   <para>
    The client will process one job at a time, report back the result, and
    then ask for the next job. If you create a persistent job with a time
    lag of only a few seconds, it will be repeated forever and block other
    jobs of this client. Therefore, adding jobs with a time lag smaller than
    one minute is not supported.
   </para>
  </note>
 </sect2>

 <sect2 xml:id="smt.scripts.smt">
  <title>/usr/sbin/smt Commands</title>
  <para>
   The main command to manage the &smt; is <command>smt</command>
   (<filename>/usr/sbin/smt</filename>). The <command>smt</command> command
   should be used together with various sub-commands described in this
   section. If the <command>smt</command> command is used alone, it prints
   a list of all available sub-commands. To get help for individual
   sub-commands, use <command>smt</command>
   <replaceable>subcommand</replaceable> --help.
  </para>
  <para>
   The following sub-commands are available:
  </para>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
<!--ok-->
     <command>smt-client</command>
    </para>
   </listitem>
   <listitem>
    <para>
<!--ok-->
     <command>smt-delete-registration</command>
    </para>
   </listitem>
   <listitem>
    <para>
<!--ok-->
     <command>smt-job</command>
    </para>
   </listitem>
   <listitem>
    <para>
<!--ok-->
     <command>smt-list-products</command>
    </para>
   </listitem>
   <listitem>
    <para>
<!--xx-->
     <command>smt-list-registrations</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>smt-mirror</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>smt-scc-sync</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>smt-register</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>smt-report</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>smt-repos</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>smt-setup-custom-repos</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>smt-staging</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>smt-support</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>smt-sync</command>
    </para>
   </listitem>
  </itemizedlist>
  <para> There are two syntax types you can use with the
        <command>smt</command> command: either use
        <command>smt</command> followed by a sub-command or use a single
      command (composed of <command>smt</command>, dash, and the
      sub-command of your choice). For example, it is possible to use
      either <command>smt mirror</command> or
        <command>smt-mirror</command>, as both have the same meaning. </para>
  <note>
   <title>Conflicting Commands</title>
   <para>
    Depending on your <literal>$PATH</literal> environment variable, the
    &smt; <command>smt</command> command
    (<filename>/usr/sbin/smt</filename>) may collide with the
    <command>smt</command> command from the <systemitem>star</systemitem>
    package (<filename>/usr/bin/smt</filename>). Either use the absolute
    path <filename>/usr/sbin/smt</filename>, create an alias, or set your
    <literal>$PATH</literal> accordingly.
   </para>
   <para>
    Another solution is to always use the <command>smt-</command>
    <replaceable>subcommand</replaceable> syntax (connected with a minus
    sign) instead of <command>smt</command>
    <replaceable>subcommand</replaceable> (separated by a space).
   </para>
  </note>
  <sect3>
   <title>smt-client</title>
   <para>
    The <command>smt-client</command> command shows information about
    registered clients. The information includes:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      guid
     </para>
    </listitem>
    <listitem>
     <para>
      host name
     </para>
    </listitem>
    <listitem>
     <para>
      patch status
     </para>
    </listitem>
    <listitem>
     <para>
      time stamps of the patch status
     </para>
    </listitem>
    <listitem>
     <para>
      last contact with the &smt; server
     </para>
    </listitem>
   </itemizedlist>
   <para>
    The <command>smt-client</command> understands the following options:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--verbose</option> or <option>-v</option>
     </term>
     <listitem>
      <para>
       Show detailed information about the client. The last contact date is
       shown as well.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--debug</option> or <option>-d</option>
     </term>
     <listitem>
      <para>
       Enable debugging mode.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--logfile</option> or <option>-L</option><replaceable>file</replaceable>
     </term>
     <listitem>
      <para>
       Specify the file the log will be written to.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--hostname</option> or <option>-h</option><replaceable>name</replaceable>
     </term>
     <listitem>
      <para>
       Only the entries whose host name begins with
       <replaceable>name</replaceable> will be listed.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--guid</option> or <option>-g</option><replaceable>guid</replaceable>
     </term>
     <listitem>
      <para>
       Only the entries whose GUID is <replaceable>guid</replaceable> will
       be listed.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--severity</option> or <option>-s</option><replaceable>level</replaceable>
     </term>
     <listitem>
      <para>
       Filter the result by the patch status information. The value
       <replaceable>level</replaceable> can be one of 'packagemanager',
       'security', 'recommended' or 'optional'. Only those entries are
       listed which have patches of the respective level.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3>
   <title>smt-delete-registration</title>
   <para>
    The <command>smt-delete-registration</command> command deletes one or
    more registrations from &smt; and &scc;. It will unregister machines
    from the system. The following options are available:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--guid <replaceable>ID</replaceable></option> or
     <option>-g</option><replaceable>ID</replaceable>
     </term>
     <listitem>
      <para>
       Delete the machine with the guid <replaceable>ID</replaceable> from
       the system. You can use this option multiple times.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--debug</option> or <option>-d</option>
     </term>
     <listitem>
      <para>
<!--FIXME details-->
       Enable debugging mode.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3 xml:id="smt.scripts.job">
   <title>smt-job</title>
   <para>
    The <command>smt-job</command> script manages jobs for individual &smt;
    clients. You can list, create, edit, or delete jobs with it. The
    following options are available:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--list</option> or <option>-l</option>
     </term>
     <listitem>
      <para>
       List all client jobs. This is the default if the operation mode
       switch is omitted.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--verbose</option> or <option>-v</option><replaceable>level</replaceable>
     </term>
     <listitem>
      <para>
       Show detailed information about a job or jobs in a list mode. The
       <replaceable>level</replaceable> value can be a number from 0 to 3.
       The bigger the value, the more verbose the command is.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--create</option> or <option>-c</option>
     </term>
     <listitem>
      <para>
       Create a new job.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--edit</option> or <option>-e</option>
     </term>
     <listitem>
      <para>
       Edit an existing job.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--delete</option> or <option>-d</option>
     </term>
     <listitem>
      <para>
       Delete an existing job.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--guid</option> or <option>-g</option><replaceable>guid</replaceable>
     </term>
     <listitem>
      <para>
       Specify the client's <replaceable>guid</replaceable>. This parameter
       can be used multiple times to create a job for more than one client.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--jobid</option> or <option>-j</option><replaceable>id</replaceable>
     </term>
     <listitem>
      <para>
       Specify the job ID. You need to specify job ID and client's
       <replaceable>guid</replaceable> when editing or deleting a job,
       because the same job for multiple clients has the same job ID.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--deleteall</option> or <option>-A</option><replaceable>id</replaceable>
     </term>
     <listitem>
      <para> Omit either the client's guid or the job ID in this delete
              operation. The missing parameter will match all respective
              jobs. </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--type</option> or <option>-t</option><replaceable>type</replaceable>
     </term>
     <listitem>
      <para>
       Specify the job type. The type can be one of 'patchstatus',
       'softwarepush', 'update', 'execute', 'reboot', 'wait', 'eject'. On
       the client, only 'patchstatus', 'softwarepush' and 'update' are
       enabled by default.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--description <replaceable>description</replaceable></option>
     </term>
     <listitem>
      <para>
       Specify a job description.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--parent</option><replaceable>id</replaceable>
     </term>
     <listitem>
      <para>
       Specify the job ID of the parent job. Use it to describe a
       dependency. A job will not be processed until its parent has
       successfully finished.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--name</option> or <option>-n <replaceable>name</replaceable></option>
     </term>
     <listitem>
      <para>
       Specify a job name.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--persistent</option>
     </term>
     <listitem>
      <para>
       Specify if a job is persistent. Non-persistent jobs are processed
       only once, while persistent jobs are processed again and again. Use
       <option>--timelag</option> to define the time that elapses until the
       next run.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--finished</option>
     </term>
     <listitem>
      <para>
       Search option for finished jobs.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--targeted</option><replaceable>time</replaceable>
     </term>
     <listitem>
      <para>
       Specify the earliest execution time of a job. Note that the job most
       likely will not run exactly at that point in time, but probably some
       minutes or hours after. The reason is that the client polls in a
       fixed interval for jobs.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--expires</option><replaceable>time</replaceable>
     </term>
     <listitem>
      <para>
       Define when the job will no longer be executed anymore.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--timelag</option><replaceable>time</replaceable>
     </term>
     <listitem>
      <para>
       Define the time interval for persistent jobs.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para> For a complete list of possible options and their explanation,
        see the manual page of the smt-job command
          (<command>man</command>
        <replaceable>smt-job</replaceable>). </para>
   <sect4>
    <title>Examples</title>
    <para>
     To list all finished jobs, enter the following:
    </para>
<screen>smt-job --list --finished</screen>
    <para>
     To create a 'softwarepush' job that installs <literal>xterm</literal>
     and <literal>bash</literal> on client 12345 and 67890, enter the
     following:
    </para>
<screen>smt-job --create -t softwarepush -P xterm -P bash -g 12345 -g 67890</screen>
    <para>
     To change the timing for a persistent job with job ID 42 and guid 12345
     to run every 6 hours, enter the following:
    </para>
<screen>smt-job --edit -j 42 -g 12345 --targeted 0000-00-00 --timelag 06:00:00</screen>
    <para>
     To delete all jobs with job ID 42, enter the following:
    </para>
<screen>smt-job --delete -jobid 42 --deleteall</screen>
   </sect4>
  </sect3>
  <sect3 xml:id="smt.scripts.listproducts">
   <title>smt-list-products</title>
   <para>
    The <command>smt-list-products</command> script lists all software
    products in the &smt; database. The following options are available:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--used</option> or <option>-u</option>
     </term>
     <listitem>
      <para>
<!--FIXME details-->
       Show only used products.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--catstat</option> or <option>-c</option>
     </term>
     <listitem>
      <para>
<!--FIXME details-->
       Show whether all repositories needed for a product are locally
       mirrored.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3>
   <title>smt-list-registrations</title>
   <para>
    The <command>smt-list-registrations</command> script lists all
    registrations. There are two options available for this command.
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--verbose</option> or <option>-v</option>
     </term>
     <listitem>
      <para>
       Show detailed information about the registered devices.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--format</option> or <option>-f</option><replaceable>format</replaceable>
     </term>
     <listitem>
      <para> Format the output. Possible types of formats are
                <replaceable>asciitable</replaceable> and
                <replaceable>csv</replaceable>. </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3>
   <title>smt-mirror</title>
   <para>
    The <command>smt-mirror</command> command performs the mirroring
    procedure and downloads repositories that are set to be mirrored.
   </para>
   <para>
    You can run the <command>smt-mirror</command> with the following
    options:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--clean</option> or <option>-c</option>
     </term>
     <listitem>
      <para>
       Remove all files no longer mentioned in the metadata from the mirror.
       No mirroring occurs before cleanup.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--debug</option> or <option>-d</option>
     </term>
     <listitem>
      <para>
       Enable the debugging mode.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--deepverify</option>
     </term>
     <listitem>
      <para>
       Turn on verifying of all package checksums.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--hardlink <replaceable>size</replaceable></option>
     </term>
     <listitem>
      <para>
       Search for duplicate files with a size greater than the size
       specified in kilobytes. Creates hard links for them.
<!--FIXME lang-->
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--directory <replaceable>path</replaceable></option>
     </term>
     <listitem>
      <para>
       Define the directory to work on. If you use this option, the default
       value configured in the <filename>smt.conf</filename> configuration
       file is ignored.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--dbreplfile <replaceable>file</replaceable></option>
     </term>
     <listitem>
      <para>
       Define the path to the *.xml file to use as database replacement. You
       can create such a file with the <command>smt-scc</command> command.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--logfile <replaceable>file</replaceable></option> or <option>-L
        <replaceable>file</replaceable></option>
     </term>
     <listitem>
      <para>
       Specify the path to a log file.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3 xml:id="smt.scripts.smtsync">
   <title>smt-sync</title>
   <para>
    The <command>smt-sync</command> or <command>smt sync</command> command
    gets data from &scc; and updates the local &smt; database.
    It can also save &scc; data to a directory instead of the &smt;
    database, or read the data from such a directory instead of
    downloading it from &scc; itself.
   </para>
   <para> For &sle; 11 clients, this script automatically decided
        whether Novell Customer Center or &scc; would be used. Then
          <command>smt-ncc-sync</command> or
          <command>smt-scc-sync</command> was called, as appropriate.
        For &sle; 12 clients, only <command>smt-scc-sync</command> is
        supported. </para>
  </sect3>
  <sect3 xml:id="smt.scripts.sccsync">
   <title>smt-scc-sync</title>
   <para>
    The <command>smt scc-sync</command>
    command gets data from the &scc; and updates the local &smt; database.
    It can also save &scc; data to a directory instead of the &smt;
    database, or read &scc; data from a directory instead
    of downloading it from &scc; itself.
   </para>
   <para>
    You can run the <command>smt-scc-sync</command> with the following
    options:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--fromdir <replaceable>directory</replaceable></option>
     </term>
     <listitem>
      <para>
       Read &scc; data from a directory instead of downloading it from
       &scc;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--todir <replaceable>directory</replaceable></option>
     </term>
     <listitem>
      <para>
       Write &scc; data to the specified directory without updating the
       &smt; database.
      </para>
      <tip>
       <title>&susemgr;'s Subscription Matching Feature</title>
       <para>
        This data can be consumed by the subscription matching feature of
        &susemgr;, which gives you a detailed overview of your subscription
        usage. For more information on the subscription matching feature, see
        <link
         xlink:href="https://www.suse.com/documentation/suse-manager-3/book_suma_reference_manual/data/ref_webui_audit_subscription.html"/>
       </para>
      </tip>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--createdbreplacementfile</option>
     </term>
     <listitem>
      <para>
       Create a database replacement file for using
       <command>smt-mirror</command> without database.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--logfile <replaceable>file</replaceable></option> or <option>-L
        <replaceable>file</replaceable></option>
     </term>
     <listitem>
      <para>
       Specify the path to a log file.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--debug</option>
     </term>
     <listitem>
      <para>
       Enable debugging mode.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3>
   <title>smt-register</title>
   <para> The <command>smt-register</command> or <command>smt
          register</command> command registers all currently
        unregistered clients at the &scc;. It also registers all clients
        whose data has changed since the last registration. </para>
   <para>
    The following options are available:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--logfile <replaceable>file</replaceable></option> or <option>-L
        <replaceable>file</replaceable></option>
     </term>
     <listitem>
      <para>
       Specify the path to a log file.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--debug</option>
     </term>
     <listitem>
      <para>
       Enable debugging mode.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3>
   <title>smt-report</title>
   <para>
    The <command>smt-report</command> or <command>smt report</command>
    command generates a subscription report based on local calculation or
    &scc; registrations.
   </para>
   <para>
    The following options are available:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--mail</option> or <option>-m</option>
     </term>
     <listitem>
      <para>
       Activate mailing the report to the addresses configured with the
       &smt; Server and written in <filename>/etc/smt.conf</filename>. The
       report will be rendered as tables.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--attach</option> or <option>-a</option>
     </term>
     <listitem>
      <para>
       Append the report to the e-mails in CSV format. This option should
       only be used together with the <option>--mail</option> option.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--quiet</option> or <option>-q</option>
     </term>
     <listitem>
      <para>
       Suppress output to STDOUT and runs <command>smt-report</command> in
       quiet mode.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--csv</option> or <option>-c</option>
     </term>
     <listitem>
      <para> The report will be exported to multiple files in CSV
              format. The first line of each *.csv file consists of the
              column names, then the data starts on line two. The
                <option>--csv</option> parameter should only be used
              together with the <option>--file</option> parameter. If
              the specified file name contains <literal>.csv</literal>
              as extension, the report format will be CSV (as if the
                <option>--csv</option> parameter was used). </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--pdf</option> or <option>-p</option>
     </term>
     <listitem>
      <para>
       The report will be exported in PDF format. Use it only together with
       the <option>-file</option> option.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--xml</option>
     </term>
     <listitem>
      <para>
       The report will be exported in XML format. Use it only together with
       the <option>-file</option> option. For a detailed description of this
       XML format, see the manual page of the <command>smt-report</command>
       command.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--file</option> or <option>-F</option>
     </term>
     <listitem>
      <para>
       Export the report to one or several files. By default, the report
       will be written to a single file rendered as tables. Optionally, the
       file name or whole path may be specified after the parameter:
       <option>--file <replaceable>filename</replaceable></option>. If no
       file name is specified, a default file name containing a time stamp is
       used. However, &smt; will not check if the file or files already
       exist.
      </para>
      <para> In CSV mode the report will be written to multiple files,
              therefore the specified file name will expand to
                  <filename><replaceable>[path/]filename</replaceable>-<replaceable>reportname</replaceable>.<replaceable>extension</replaceable></filename>
              for every report. </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--logfile <replaceable>filename</replaceable></option> or <option>-L
        <replaceable>filename</replaceable></option>
     </term>
     <listitem>
      <para>
       Specify path to a log file.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--debug</option>
     </term>
     <listitem>
      <para>
       Enable debugging mode.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3>
   <title>smt-repos</title>
   <para>
    You can use <command>smt-repos</command> (or <command>smt
    repositories</command>) to list all available repositories and for
    enabling, disabling, or deleting repositories. The following options are
    available:
   </para>
<!--FIXME [name] [target]-->
   <variablelist>
    <varlistentry>
     <term><option>--enable-mirror</option> or <option>-e</option>
     </term>
     <listitem>
      <para>
       Enable repository mirroring.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
       <term><option>--disable-mirror</option> or <option>-d</option>
       </term>
       <listitem>
         <para>
           Disable repository mirroring.
         </para>
       </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--enable-by-prod</option> or <option>-p</option>
     </term>
     <listitem>
      <para>
       Enable repository mirroring by giving product data in the following
       format:
       <literal>Product[,Version[,Architecture[,Release]]]</literal>.
<!--FIXME-->
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--disable-by-prod</option> or <option>-P</option>
     </term>
     <listitem>
      <para>
       Disable repository mirroring by giving product data in the following
       format:
       <literal>Product[,Version[,Architecture[,Release]]]</literal>.
<!--FIXME-->
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--enable-staging</option> or <option>-s</option>
     </term>
     <listitem>
      <para>
       Enable repository staging.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--disable-staging</option> or <option>-S</option>
     </term>
     <listitem>
      <para>
       Disable repository staging.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--only-mirrorable</option> or <option>-m</option>
     </term>
     <listitem>
      <para>
       List only repositories that can be mirrored.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--only-enabled</option> or <option>-o</option>
     </term>
     <listitem>
      <para>
       List only enabled repositories.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
<!-- fate##310207 -->
     <term><option>--delete</option>
     </term>
     <listitem>
      <para>
       List repositories and delete them from disk.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--namespace <replaceable>dirname</replaceable></option>
     </term>
     <listitem>
      <para>
       Delete the repository in the specified name space.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--verbose</option> or <option>-v</option>
     </term>
     <listitem>
      <para>
       Show detailed repository information.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3>
   <title>smt-setup-custom-repos</title>
   <para>
    The <command>smt-setup-custom-repos</command> or <command>smt
    setup-custom-repos</command> script is a tool to set up custom
    repositories (repositories not present in the download server) to be used with &smt;.
    You can use this script to add a new repository to the &smt; database or
    to delete a repository from the database. The script recognizes the
    following options:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--productid</option>
     </term>
     <listitem>
      <para>
       ID of a product the repository belongs to. If a repository should
       belong to multiple products, use this option multiple times to assign
       the repository to all relevant products.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--name</option>
     </term>
     <listitem>
      <para>
       The name of the custom repository.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--description</option>
     </term>
     <listitem>
      <para>
       The description of the custom repository.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--exturl</option>
     </term>
     <listitem>
      <para>
       The URL where this repository can be mirrored from. Only HTTP and
       HTTPS protocols are supported (no directory, file, or FTP).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--delete</option>
     </term>
     <listitem>
      <para>
       Remove a custom repository with a given ID from the &smt; database.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
<!-- placement? -->
   <para>
    To set up a new repository, use the following command:
   </para>
<screen>smt-setup-custom-repos --productid <replaceable>Product_ID</replaceable> \
--name <replaceable>Catalog_Name</replaceable> --exturl <replaceable>URL</replaceable>
</screen>
   <para>
    For example:
   </para>
<screen>smt-setup-custom-repos --productid <replaceable>434</replaceable> \
--name <replaceable>My_Catalog</replaceable> --exturl <replaceable>http://my.example.com/My_Catalog</replaceable>
</screen>
   <para>
    To remove a configured repository, use the following command:
   </para>
<screen>smt-setup-custom-repos --delete <replaceable>Catalog_ID</replaceable></screen>
   <para>
    For example:
   </para>
<screen>smt-setup-custom-repos --delete <replaceable>1cf336d819e8e5904f4d4b05ee081971a0cc8afc</replaceable>
</screen>
  </sect3>
<!-- =================================================================== -->
  <sect3>
   <title>smt-staging</title>
   <para>
    A <emphasis>patch</emphasis> is an update of a package or group of
    packages. The term <emphasis>update</emphasis> and
    <emphasis>patch</emphasis> are often interchangeable. With the
    <command>smt-staging</command> script, you can set up patch filters for
    update repositories. It can also help you generate both testing
    repositories and repositories for the production environment.
   </para>
   <para>
    The first argument of <command>smt-staging</command> is always the
    <emphasis>command</emphasis>. It must be followed by a
    <replaceable>repository</replaceable>. The repository can be specified
    by <replaceable>Name</replaceable> and <replaceable>Target</replaceable>
    from the table scheme returned by the <command>smt-repos</command>
    command. Alternatively, it can be specified by its <literal>Repository
    ID</literal>, which is returned when running the commend
    <command>smt-repos -v</command>. The <command>smt-staging</command>
    script understands the following commands:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>listupdates</option>
     </term>
     <listitem>
      <para>
       List available patches and their allowed/forbidden status.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>allow/forbid</option>
     </term>
     <listitem>
      <para>
       Allow or forbid specified patches.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>createrepo</option>
     </term>
     <listitem>
      <para>
       Generate both testing and production repository with allowed patches.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>status</option>
     </term>
     <listitem>
      <para>
       Give information about both testing and production snapshots, and
       patch counts.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
<!-- bwiedemann:
     concept of groups vs directories is still somewhat unclear - does every
     group have 3 dirs (full/testing/prod)? If explained elsewhere, add a ref?
     -->
     <term><option>listgroups</option>
     </term>
     <listitem>
      <para>
       List staging groups.
      </para>
      <para>
       There is always one group available with the name
       <quote>default</quote>. The default group has the path
       <filename>repo/full</filename>, <filename>repo/testing</filename> and
       <filename>repo</filename>. With creating a new group, new paths can
       be specified.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>creategroup</option>
     </term>
     <listitem>
      <para>
       Create a staging group. Required parameters are: group name, testing
       directory name, and production directory name.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>removegroup</option>
     </term>
     <listitem>
      <para>
       Remove a staging group. Required parameter is: group name.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    The following options apply to any <command>smt-staging</command>
    command:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--logfile</option> or <option>-L</option><replaceable>file path</replaceable>
     </term>
     <listitem>
      <para>
       Write log information to the specified file. If it does not exist, it
       is created.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--debug</option> or <option>-d</option>
     </term>
     <listitem>
      <para>
       Turn on the debugging output and log.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--verbose</option> or <option>-v</option>
     </term>
     <listitem>
      <para>
       Turn more detailed output on.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    The following options apply to specific <command>smt-staging</command>
    commands:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--patch</option>
     </term>
     <listitem>
      <para>
       Specify a patch by its ID. You can get a list of available patches
       with the <command>listupates</command> command. This option can be
       used multiple times. Use it with the <command>allow</command>,
       <command>forbid</command>, and <command>listupdates</command>
       commands. If used with <command>listupdates</command>, the command
       will print detailed information about the specified patches.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--category</option>
     </term>
     <listitem>
      <para>
       Specify the patch category. The following categories are available:
       'security', 'recommended' and 'optional'. Use it with the
       <command>allow</command>, <command>forbid</command>, and
       <command>listupdates</command> commands.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--all</option>
     </term>
     <listitem>
      <para>
       Allow or forbid all patches in the <command>allow</command> or
       <command>forbid</command> commands.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--individually</option>
     </term>
     <listitem>
<!-- bwiedemann:
      # where is the difference to allowing all together?
      -->
      <para>
       Allow or forbid multiple patches (for example by category) one by one, that
       is, as if the <option>--patch</option> option had been used on each
       of the patches.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--testing</option>
     </term>
     <listitem>
      <para>
       Use with the <command>createrepo</command> command to generate a
       repository for testing. The repository will be generated from the
       full unfiltered local mirror of the remote repository. It will be
       written into the <filename>&lt;MirrorTo&gt;/repo/testing</filename>
       directory, where <filename>MirrorTo</filename> is the value taken
       from <filename>smt.conf</filename>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--production</option>
     </term>
     <listitem>
      <para>
       Use with the <command>createrepo</command> command to generate a
       repository for production use. The repository will be generated from
       the testing repository. It will be written into the
       <filename>&lt;MirrorTo&gt;/repo</filename> directory, where
       <filename>MirrorTo</filename> is the value taken from
       <filename>smt.conf</filename>. If the testing repository does not
       exist, the production repository will be generated from the full
       unfiltered local mirror of the remote repository.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--group</option>
     </term>
     <listitem>
      <para>
       Specify on which group the command should work. The default for
       <option>--group</option> is the name <literal>default</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--nohardlink</option>
     </term>
     <listitem>
      <para>
       During the repository creation with the <command>createrepo</command>
       command, avoid creating hard links instead of copying files. If not
       specified, hard links are created instead.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--nodesc</option>
     </term>
     <listitem>
      <para>
       Do not print patch descriptions and summaries&mdash;to save some screen
       space and make the output more readable.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--sort-by-version</option>
     </term>
     <listitem>
      <para>
       Sort the <literal>listupdates</literal> table by patch version. The
       higher the version, the newer the patch should be.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--sort-by-category</option>
     </term>
     <listitem>
      <para>
       Sort the <literal>listupdates</literal> table by patch category.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
<!-- =================================================================== -->
  <sect3>
   <title>smt-support</title>
   <para>
    The <command>smt-support</command> command manages uploaded support data
    usually coming from the <command>supportconfig</command> tool. You can
    forward the data to &suse;, either selectively or in full. This command
    understands the following options:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>--incoming</option> or <option>-i</option><replaceable>directory</replaceable>
     </term>
     <listitem>
      <para>
       Specify the directory where the supportconfig archives are uploaded.
       You can also set this option with the <literal>SMT_INCOMING</literal>
       environment variable. The default <literal>SMT_INCOMING</literal>
       directory is <filename>/var/spool/smt-support</filename>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--list</option> or <option>-l</option>
     </term>
     <listitem>
      <para>
       List the uploaded supportconfig archives in the incoming directory.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--remove</option> or <option>-r</option><replaceable>archive</replaceable>
     </term>
     <listitem>
      <para>
       Delete the specified archive.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--empty</option> or <option>-R</option>
     </term>
     <listitem>
      <para>
       Delete all archives in the incoming directory.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--upload</option> or <option>-u</option><replaceable>archive</replaceable>
     </term>
     <listitem>
      <para>
       Upload the specified archive to &suse;. If you specify
       <option>-s</option>, <option>-n</option>, <option>-c</option>,
       <option>-p</option>, and <option>-e</option> options, the archive is
       repackaged with contact information.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--uploadall</option> or <option>-U</option>
     </term>
     <listitem>
      <para>
       Upload all archives in the incoming directory to &suse;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--srnum</option> or <option>-s</option><replaceable>SR number</replaceable>
     </term>
     <listitem>
      <para>
       Accept the Novell Service Request 11-digit number.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--name</option> or <option>-n</option><replaceable>name</replaceable>
     </term>
     <listitem>
      <para>
       Enter the first and last name of the contact, in quotes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--company</option> or <option>-c</option><replaceable>company</replaceable>
     </term>
     <listitem>
      <para>
       Enter the company name.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--storeid</option> or <option>-d</option><replaceable>id</replaceable>
     </term>
     <listitem>
      <para>
       Enter the store ID, if applicable.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--terminalid</option> or <option>-t</option><replaceable>id</replaceable>
     </term>
     <listitem>
      <para>
       Enter the terminal ID, if applicable.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--phone</option> or <option>-p</option><replaceable>phone</replaceable>
     </term>
     <listitem>
      <para>
       Enter the phone number of the contact person.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>--email</option> or <option>-e</option><replaceable>email</replaceable>
     </term>
     <listitem>
      <para>
       Enter the e-mail address of the contact.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
 </sect2>

 <sect2>
  <title>&smt; &systemd; Commands</title>
  <para>
   You can operate &smt; related services with the standard &systemd;
   commands:
  </para>
  <variablelist>
   <varlistentry>
    <term><command>systemctl start smt.target</command>
    </term>
    <listitem>
     <para>
      Start the &smt; services.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>systemctl stop smt.target</command>
    </term>
    <listitem>
     <para>
      Stop the &smt; services.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>systemctl status smt.target</command>
    </term>
    <listitem>
     <para>
      Check the status of the &smt; services. Checks whether httpd, &mariadb;,
      and cron are running.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>systemctl restart smt.target</command>
    </term>
    <listitem>
     <para>
      Restart the &smt; services.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>systemctl try-restart smt.target</command>
    </term>
    <listitem>
     <para>
      Check whether the &smt; services are enabled and if so, restart them.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   You can enable and disable &smt; with the &yast; &smt; Server module.
  </para>
 </sect2>
</sect1>
