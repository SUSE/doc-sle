<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha-upgrade-finish"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Finishing the upgrade</title>
 <info>
  <abstract>
   <para>
    After the upgrade, you need to perform some additional tasks. The following
    chapter guides you through these steps.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <sect1 xml:id="sec-upgrade-finish-old-packages">
  <title>Check for old packages</title>
   <para>
    Check for orphaned and unneeded packages. Orphaned packages are no longer
    available in any of the configured package repositories. The can no longer
    get updated and become unsupported. Unneeded packages were installed as
    dependencies of packages that have been removed in the meantime. They are
    no longer needed and should be removed, too.
   </para>
   <para>
    For a list of orphaned packages, run:
   </para>
<screen>&prompt.user;<command>zypper packages --orphaned</command></screen>
   <para>
    For a list of unneeded packages, run:
   </para>
<screen>&prompt.user;<command>zypper packages --unneeded</command></screen>
   <para>
    You can combine both lists into one:
   </para>
<screen>&prompt.user;<command>zypper packages --orphaned --unneeded</command></screen>
   <para>
    Use these lists to determine which packages are still needed and which can
    be safely removed. To remove all orphaned and unneeded packages with a
    single command, run:
   </para>
<screen>&prompt.sudo;<command>zypper rm $(zypper --no-refresh packages --orphaned --unneeded | gawk '{print $5}' | tail -n +5)</command></screen>
 </sect1>
 <sect1 xml:id="sec-uggrade-finish-config-files">
  <title>Review your configuration files</title>
  <para>
   Check for any <filename>*.rpmnew</filename> and
   <filename>*.rpmsave</filename> files. When an upgrade includes changes to
   a default configuration file that has been altered after package
   installation, instead of overwriting the file, one of these file types is
   created. While <filename>*.rpmnew</filename> contains the new default
   configuration and leaves your altered file untouched,
   <filename>*.rpmsave</filename> is a copy of your altered configuration that
   has been replaced by the new default file.
  </para>
  <para>
   If you find any of these files, examine their content and merge desirable
   changes. You do not need to search the whole file system, only the
   <filename>/etc</filename> directory. Use the following command:
  </para>
<screen>&prompt.user;<command>find /etc/ -name "*.rpmnew" -o -name "*.rpmsave"</command></screen>
 </sect1>

 <!-- SLE-23641 -->
 <sect1 xml:id="sec-upgrade-finish-python3">
  <title>Enable the <literal>Python 3</literal> module</title>
  <para>
   &productname; 15 uses Python 3.6 by default. Python 3.9 was added in
   &productnameshort; 15 SP3 as a more recent alternative. This version is no
   longer supported as of &productnameshort; 15 SP4. Instead, recent Python
   versions with important updates and security fixes are available through the
   <literal>Python 3</literal> module.
  </para>
  <para>
   If you installed Python 3.9 under &productname; 15 SP3, enable the
   <literal>Python 3</literal> module with:
  </para>
<screen>&prompt.sudo;<command>SUSEConnect -p sle-module-python3/&product-ga;.&product-sp;/<replaceable>x86_64</replaceable></command>.</screen>
  <para>
   Alternatively, you can return to the default Python version by removing 3.9
   with <command>zypper remove -u python39</command>.
  </para>
 </sect1>

 <sect1 xml:id="sec-upgrade-finish-xfs4">
  <title>Reformat XFS v4 devices</title>
  <para>
   &productname; supports the <quote>on-disk format</quote> (v5) of the XFS file
   system. The main advantages of this format are automatic checksums of all
   XFS metadata, file type support, and support for a larger number of access
   control lists for a file.
  </para>
  <para>
   Note that this format is not supported by &sle; kernels older than version
   3.12, by <literal>xfsprogs</literal> older than version 3.2.0, and &grub;
   versions released before &sle; 12.
  </para>
  <important>
   <title>V4 is deprecated</title>
   <para>
    XFS is deprecating file systems with the V4 format. This file system
    format was created by the command:
   </para>
<screen>&prompt.sudo;mkfs.xfs -m crc=0 <replaceable>DEVICE</replaceable></screen>
   <para>
    The format was used in &slea; 11 and older releases, and it currently creates
    a warning message by <command>dmesg</command>:
   </para>
<screen>Deprecated V4 format (crc=0) will not be supported after September 2030</screen>
   <para>
    If you see the message above in the output of the <command>dmesg</command>
    command, it is recommended that you update your file system to the V5
    format:
   </para>
   <procedure>
    <step>
     <para>
      Back up your data to another device.
     </para>
    </step>
    <step>
     <para>
      Create the file system on the device.
     </para>
<screen>&prompt.sudo;mkfs.xfs -m crc=1 <replaceable>DEVICE</replaceable></screen>
    </step>
    <step>
     <para>
      Restore the data from the backup on the updated device.
     </para>
    </step>
   </procedure>
  </important>
 </sect1>
</chapter>
