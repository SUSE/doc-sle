<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="storage_nfs.xml" version="5.0" xml:id="cha-nfs">
 <title>NFS共有ファイルシステム</title>
 <info>
  <abstract>
   <para>
    <emphasis>ネットワークファイルシステム</emphasis>(<emphasis>NFS</emphasis>)は、ローカルファイルへのアクセスと非常によく似た方法で、サーバ上のファイルにアクセスできるプロトコルです。
   </para>
   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server は、NFS v4.2をインストールし、これにより、スパースファイル、ファイルの事前割り当て、サーバ側のクローンとコピー、アプリケーションデータブロック(ADB)、および必須アクセス制御(MAC)用のラベル付きNFS (クライアントとサーバの両方でMACが必要)のサポートが導入されます。</phrase></phrase>
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <sect1 xml:id="sec-nfs-overview">
  <title>概要</title>
  <para>
   <emphasis></emphasis>「ネットワークファイルシステム」(NFS)は、標準化された、実証済みで幅広く-サポートされているネットワークプロトコルであり、ファイルを別々のホスト間で共有することができます。
  </para>
  <para>
   <emphasis></emphasis>「ネットワーク情報サービス」(NIS)は、ネットワーク内で一元的なユーザ管理を行うために使用できます。NFSとNISを組み合わせることで、ネットワーク内のアクセス制御にファイルとディレクトリのパーミッションを使用できます。NFSをNISと連携して使用すると、ネットワークをユーザに対して透過的にすることができます。
  </para>
  <para>
   デフォルト設定では、NFSはネットワークを完全に信頼しているので、信頼されたネットワークに接続されているマシンもすべて信頼します。NFSサーバが信頼するネットワークに物理的にアクセスできるコンピュータ上で管理者特権を持つユーザは、そのサーバが提供するファイルにアクセスできます。
  </para>
  <para>
   多くの場合、このレベルのセキュリティは完全に満足のいくものであり(信頼されているネットワークが本当にプライベートである場合など)、しばしば単一のキャビネットや機械室に合わせてローカライズされており、不正なアクセスは不可能です。他のケースでは、1つのサブネット全体を1つの単位として信頼する必要性が制約となっており、よりきめの細かい信頼が求められます。これらのケースにおける必要性を満たすために、NFSは<emphasis>Kerberos</emphasis>インフラストラクチャを使用して、さまざまなセキュリティレベルをサポートしています。Kerberosには、デフォルトで使用されるNFSv4が必要です。詳細については、<xref linkend="cha-security-kerberos"/>を参照してください。
  </para>

  <para>
   以下の用語は、YaSTモジュールで使用されています。
  </para>

  <variablelist>
   <varlistentry>
    <term>エクスポート</term>
    <listitem>
     <para>
      NFSサーバによって「エクスポートされ」、クライアントがシステムに統合できるディレクトリ。<emphasis></emphasis>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>NFSクライアント</term>
    <listitem>
     <para>
      NFSクライアントは、ネットワークファイルシステムプロトコルを介してNFSサーバからのNFSサービスを使用するシステムです。TCP/IPプロトコルはLinuxカーネルにすでに統合されており、追加ソフトウェアをインストールする必要はありません。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>NFSサーバ</term>
    <listitem>
     <para>
      NFSサーバは、NFSサービスをクライアントに提供します。実行中のサーバは、次のデーモンに依存します。<systemitem class="daemon">nfsd</systemitem> (ワーカ)、<systemitem class="daemon">idmapd</systemitem> (NFSv4でのIDと名前のマッピング、特定のシナリオでのみ必要)、<systemitem class="daemon">statd</systemitem> (ファイルのロック)、および<systemitem class="daemon">mountd</systemitem> (マウント要求)。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>NFSv3</term>
    <listitem>
     <para>
      NFSv3はバージョン3の実装で、クライアント認証をサポートする<quote>古い</quote>ステートレスなNFSです。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>NFSv4</term>
    <listitem>
     <para>
      NFSv4は、Kerberosによるセキュアなユーザ認証をサポートする新しいバージョン 4の実装です。NFSv4で必要なポートは1つのみであるため、NFSv3よりもファイアウォール環境に適しています。
     </para>
     <para>
      プロトコルは<link xlink:href="https://datatracker.ietf.org/doc/html/rfc3530"/>で指定されています。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>pNFS</term>
    <listitem>
     <para>
      パラレル NFS。NFSv4のプロトコル拡張。任意のpNFSクライアントは、NFSサーバ上のデータに直接アクセスできます。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <important os="sles;osuse">
   <title>DNSの必要性</title>
   <para>
    原則として、すべてのエクスポートはIPアドレスのみを使用して実行できます。タイムアウトを回避するには、機能するDNSシステムが必要です。<systemitem class="daemon">mountd</systemitem>デーモンは逆引きを行うので、少なくともログ目的でDNSは必要です。
   </para>
  </important>
 </sect1>

 

 <sect1 os="sles;osuse" xml:id="sec-nfs-installation">
  <title>NFSサーバのインストール</title>

   <para>
   NFSサーバは、デフォルトインストールには含まれません。YaSTを使用してNFSサーバをインストールするには、<menuchoice> <guimenu>ソフトウェア</guimenu>
   <guimenu>ソフトウェア管理</guimenu></menuchoice>の順に選択し、<guimenu>パターン</guimenu>を選択して、<guimenu>Server Fuctions (サーバ機能)</guimenu>セクションで<guimenu>ファイルサーバ</guimenu>オプションを有効にします。<guimenu>了解</guimenu>をクリックして、必要なパッケージをインストールします。
  </para>
  <para>
   NIS同様、NFSはクライアント/サーバシステムです。ただし、ファイルシステムをネットワーク経由で提供し(エクスポート)、同時に他のホストからファイルシステムをマウントすることができます(インポート)。
  </para>

  <note>

   <title>NFSボリュームをエクスポート元サーバにローカルでマウントする</title>
   <para>
    NFSボリュームのエクスポート元サーバへのローカルでのマウントは、<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>ではサポートされていません。
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-nfs-configuring-nfs-server" os="sles;osuse">
  <title>NFSサーバの設定</title>

  <para>
   NFSサーバの設定は、YaSTを使用するか、または手動で完了できます。認証のため、NFSをKerberosと組み合わせることもできます。
  </para>

  <sect2 xml:id="sec-nfs-export-yast2">
   <title>YaSTによるファイルシステムのエクスポート</title>
   <para>
    YaSTを使用して、ネットワーク上のホストをNFSサーバにすることができます。NFSサーバとは、アクセスを許可されたすべてのホスト、またはグループのすべてのメンバーに、ディレクトリやファイルをエクスポートするサーバのことです。これにより、サーバは、ホストごとにアプリケーションをローカルインストールせずにアプリケーションを提供することもできます。
   </para>
   <para>
    そのようなサーバをセットアップするには、次の手順に従います。
   </para>
   <procedure xml:id="pro-nfs-export-yast2-nfs">
    <title>NFSサーバをセットアップする</title>
    <step>
     <para>
      YaSTを起動し、<menuchoice> <guimenu>ネットワークサービス</guimenu>
      <guimenu>NFSサーバ</guimenu> </menuchoice>の順に選択します(<xref linkend="fig-inst-nfsserver1"/>を参照してください)。追加のソフトウェアをインストールするよう求められることがあります。
     </para>

     <figure xml:id="fig-inst-nfsserver1">
      <title>NFSサーバ設定ツール</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="yast2_inst_nfsserver1.png" width="75%" os="sles;sled"/>
        
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="yast2_inst_nfsserver1.png" width="75%" os="sles;sled"/>
        
       </imageobject>
      </mediaobject>
     </figure>

    </step>
    <step>
     <para>
      <guimenu>開始</guimenu>ラジオボタンをクリックします。
     </para>
    </step>
    <step>
     <para>
      <systemitem class="daemon">firewalld</systemitem>がシステムでアクティブな場合は、NFS用に個別に設定します(<xref linkend="sec-security-firewall-firewalld"/>を参照)。YaSTはまだ、<systemitem class="daemon">firewalld</systemitem>を完全にはサポートしていないため、「ファイアウォールを設定できません」というメッセージを無視して続行します。
     </para>
    </step>
    <step>
     <para>
      <guimenu>NFSv4を有効にする</guimenu>を選択するかどうかを決定します。NFSv4を無効にした場合、YaSTでサポートされるのはNFSv3のみになります。NFSv2の有効化の詳細については、<xref linkend="sec-nfs-export-manual-nsfv2"/>を参照してください。
     </para>
     <substeps performance="required">
      <step>
       <para>
        NFSv4を選択した場合は、追加で適切なNFSv4ドメイン名を入力します。このパラメータは、Kerberosの設定に必要な<systemitem class="daemon">idmapd</systemitem>デーモンによって使用されるか、クライアントが数字のユーザ名を処理できない場合に使用されます。<systemitem class="daemon">idmapd</systemitem>を実行しない場合、または特に必要のない場合は、そのまま<literal>localdomain</literal>(デフォルト)を使用してください。<systemitem class="daemon">idmapd</systemitem>デーモンの詳細については、<xref linkend="var-nfs-export-manual-idmapd"/>を参照してください。
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      サーバに安全にアクセスするには、<guimenu>GSSセキュリティを有効にする</guimenu>をクリックします。この手順の前提条件として、ドメインにKerberosをインストールし、サーバとクライアントの両方でKerberosを有効にしておく必要があります。
      <remark>emap 2011-0824: A reference to a Kerberos chapter
      would be good.</remark>
      ［<guimenu>次へ</guimenu>］をクリックして、次の設定ダイアログに進みます。
     </para>
    </step>
    <step>
     <para>
      ディレクトリをエクスポートするには、ダイアログの上半分にある<guimenu>ディレクトリの追加</guimenu>をクリックします。
     </para>
    </step>
    <step>
     <para>
      許可されるホストをまだ設定していない場合は、自動的に別のダイアログが表示されるので、クライアント情報およびオプションを入力します。ホストを示すワイルドカードを入力します(通常はデフォルト設定のまま使用できます)。
     </para>

     <para>
      4種類の方法でホストを指定することができます。1台のホスト(名前またはIPアドレス)(single host)、ネットグループ( netgroups)、ワイルドカード(すべてのコンピュータがサーバにアクセスできることを示す<literal>*</literal>など)( wild cards)、およびIPネットワーク(IP networks)です。
     </para>
     <para>
      これらのオプションの詳細については、<literal>exports</literal>のマニュアルページを参照してください。
     </para>
    </step>
    <step>
     <para>
      <guimenu>完了</guimenu>をクリックして設定を完了します。
     </para>
    </step>
   </procedure>
  </sect2>



  <sect2 xml:id="sec-nfs-export-manual" os="sles;osuse">
   <title>ファイルシステムの手動エクスポート</title>
   <para>
    NFSエクスポートサービスの環境設定ファイルは、<filename>/etc/exports</filename>と<filename>/etc/sysconfig/nfs</filename>です。Kerberized NFSを使用したNFSv4サーバ設定に必要な場合、またはクライアントが数字のユーザ名を処理できない場合は、これらのファイル以外に<filename>/etc/idmapd.conf</filename>も必要です。
   </para>
   <para>
    サービスを起動または再起動するには、<command>systemctl restart nfsserver</command>コマンドを実行します。これにより、NFSサーバで必要なRPCポートマッパーも再起動されます。
   </para>
   <para>
    NFSサーバがブート時に常に起動するようにするには、<command>sudo systemctl enable nfsserver</command>を実行します。
   </para>
   <note>
    <title>NFSv4</title>
    <para>
     NFSv4は、<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>で利用できる最新版のNFSプロトコルです。NFSv3と同じ方法で、NFSv4でのエクスポート用にディレクトリを設定できるようになりました。
    </para>
    <para>
     <phrase os="sles;sled">SUSE Linux Enterprise Server 11</phrase>では、<filename>/etc/exports</filename>のバインドマウントが必須でした。これは引き続きサポートされていますが、非推奨になりました。
    </para>
   </note>
   <variablelist>
    <varlistentry>
     <term><filename>/etc/exports</filename></term>
     <listitem>
      <para>
       <filename>/etc/exports</filename>ファイルには、エントリのリストが含まれています。各エントリはそれぞれ共有するディレクトリと共有方法を示します。<filename>/etc/exports</filename>中の一般的なエントリは、次の項目から成り立っています。
      </para>
<screen>/<replaceable>SHARED</replaceable>/<replaceable>DIRECTORY</replaceable>   <replaceable>HOST</replaceable>(<replaceable>OPTION_LIST</replaceable>)</screen>
      <para>
       例:
      </para>
<screen>/export/data   192.168.1.2(rw,sync)</screen>
      <para>
       ここでは、許可されたクライアントを識別するためにIPアドレス<literal>192.168.1.2</literal>が使われています。ホスト名、ホストを表すワイルドカード、または(<literal>*.abc.com</literal>や<literal>*</literal>など)ネットグループ（<literal>@my-hosts</literal>）を使用できます。
      </para>
      <para>
       すべてのオプションとそれらの意味の詳細については、<filename>/etc/exports</filename>の<literal>man</literal>ページを参照してください: (<command>man exports</command>)。
      </para>
      <para>
       NFSサーバの実行中に<filename>/etc/exports</filename>を変更した場合、変更を有効にするには、<command>sudo systemctl restart nfsserver</command>を実行してサーバを再起動する必要があります。
      </para>

     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>/etc/sysconfig/nfs</filename></term>
     <listitem>
      <para>
       <filename>/etc/sysconfig/nfs</filename>ファイルには、NFSv4サーバデーモンの動作を決定する小数のパラメータが含まれています。<systemitem>NFS4_SUPPORT</systemitem>パラメータを<literal>yes</literal>に設定することが重要です(デフォルトの設定)。<systemitem>NFS4_SUPPORT</systemitem>は、NFSサーバがNFSv4エクスポートとクライアントをサポートするかどうかを決定します。
      </para>
      <para>
       NFSサーバの実行中に<filename>/etc/sysconfig/nfs</filename>を変更した場合、変更を有効にするには、<command>sudo systemctl restart nfsserver</command>を実行してサーバを再起動する必要があります。
      </para>
      <tip>
       <title>マウントオプション</title>
       <para>
        <phrase os="sles;sled">SUSE Linux Enterprise Server 11</phrase>では、<filename>/etc/exports</filename>の<option>--bind</option>マウントが必須でした。これは引き続きサポートされていますが、非推奨になりました。NFSv3と同じ方法で、NFSv4でのエクスポート用にディレクトリを設定できるようになりました。
       </para>
      </tip>
      <note xml:id="sec-nfs-export-manual-nsfv2">

       <title>NFSv2</title>
       <para>
        NFSクライアントがまだNFSv2に依存している場合は、サーバの<filename>/etc/sysconfig/nfs</filename>に次のように設定してNFSv2を有効にします。
       </para>
<screen>NFSD_OPTIONS="-V2"
MOUNTD_OPTIONS="-V2"</screen>
       <para>
        サービスを再起動した後で、次のコマンドを実行して、バージョン2が使用可能かどうかを確認します。
       </para>
<screen><prompt>&gt; </prompt>cat /proc/fs/nfsd/versions
+2 +3 +4 +4.1 +4.2</screen>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="var-nfs-export-manual-idmapd">
     <term><filename>/etc/idmapd.conf</filename></term>
     <listitem>
      <para>
       <systemitem class="daemon">idmapd</systemitem>デーモンは、Kerberos認証を使用する場合、またはクライアントが数字のユーザ名を処理できない場合にのみ必要です。Linuxクライアントは、Linuxカーネル2.6.39から数字のユーザ名を処理できるようになりました。<systemitem class="daemon">idmapd</systemitem>デーモンは、NFSv4からサーバへの要求に対して名前とIDのマッピングを行い、クライアントに応答します。
      </para>
      <para>
       必要に応じて、<systemitem class="daemon">idmapd</systemitem>をNFSv4サーバ上で実行する必要があります。クライアントの名前とIDのマッピングは、パッケージ<package>nfs-client</package>によって提供される<command>nfsidmap</command>によって行われます。
      </para>
      <para>
       NFSを使ってファイルシステムを共有するマシン間では、ユーザへのユーザ名とID (UID)の割り当てには同じ方法を使用してください。そのためには、NIS、LDAP、または他の同一ドメイン認証機構を利用することができます。
      </para>
      <para>
       <filename>/etc/idmapd.conf</filename>ファイルの<literal>Domain</literal>パラメータはクライアントとサーバの両方に対して同じ値に設定する必要があります。確信のない場合には、クライアントとサーバの両方のファイルで、<literal>localdomain</literal>をそのまま使用してください。環境設定ファイルの例を次に示します。
      </para>
<screen>[General]
Verbosity = 0
Pipefs-Directory = /var/lib/nfs/rpc_pipefs
Domain = localdomain

[Mapping]
Nobody-User = nobody
Nobody-Group = nobody</screen>
      <para>
       <systemitem class="daemon">idmapd</systemitem>デーモンを起動するため、<command>systemctl start nfs-idmapd</command>を実行します。デーモンの実行中に<filename>/etc/idmapd.conf</filename>を変更した場合、変更を有効にするには、<command>systemctl start nfs-idmapd</command>を実行してデーモンを再起動する必要があります。
      </para>
      <para>
       詳細については、<literal>idmapd</literal>および<literal>idmapd.conf</literal>のマニュアルページを参照してください(<literal>man idmapd</literal>および<literal>man idmapd.conf</literal>)。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>



  <sect2 xml:id="sec-nfs-kerberos">
   <title>NFSでのKerberosの使用</title>
   <para>
    NFSでKerberos認証を使用するには、Generic Security Services (GSS)を有効にする必要があります。最初のYaST NFSサーバのダイアログで、<guimenu>GSSセキュリティを有効にする</guimenu>を選択します。ただし、この機能を使用するには、機能するKerberosサーバが必要です。YaSTはKerberosサーバの設定は行いません。その提供機能を使用するだけです。YaST環境設定に加えて、Kerberos認証も使用するには、NFS設定を実行する前に、少なくとも次の手順を完了してください。
   </para>
   <procedure>
    <step>
     <para>
      サーバとクライアントの両方が、同じKerberosドメインにあることを確認します。つまり、クライアントとサーバが同じKDC(Key Distribution Center)サーバにアクセスし、<filename>krb5.keytab</filename>ファイル(the default location on any machine is <filename>/etc/krb5.keytab</filename>)を共有していなければなりません。Kerberosの詳細については、<xref linkend="cha-security-kerberos"/>を参照してください。
     </para>
    </step>
    <step>
     <para>
      クライアントで<command>systemctl start rpc-gssd.service</command>コマンドを実行して、gssdサービスを起動します。
     </para>
    </step>
    <step os="sles;osuse">
     <para>
      サーバで<command>systemctl start rpc-svcgssd.service</command>コマンドを実行して、svcgssdサービスを起動します。
     </para>
    </step>
   </procedure>
   <para>
    Kerberos認証でも、サーバで<systemitem class="daemon">idmapd</systemitem>デーモンが実行されている必要があります。詳細については、<xref linkend="var-nfs-export-manual-idmapd"/>を参照してください。
   </para>
   <para>
    Kerberos化されたNFSの設定の詳細については、<xref linkend="sec-nfs-info" xrefstyle="SectTitleOnPage"/>のリンクを参照してください。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-nfs-configuring-nfs-clients">
  <title>クライアントの設定</title>

  <para>
   ホストをNFSクライアントとして設定する場合、他のソフトウェアをインストールする必要はありません。必要なすべてのパッケージは、デフォルトでインストールされます。
  </para>

  <sect2 xml:id="sec-nfs-import-yast2">
   <title>YaSTによるファイルシステムのインポート</title>
   <para>
    認証されたユーザは、YaST NFSクライアントモジュールを使用して、NFSディレクトリをNFSサーバからローカルファイルツリーにマウントできます。以下に手順を示します。
   </para>
   <procedure xml:id="pro-nfs-import-yast2">
    <title>NFSディレクトリのインポート</title>
    <step>
     <para>
      YaST NFSクライアントモジュールを起動します。
     </para>
    </step>

    <step>
     <para>
      <guimenu>NFS共有</guimenu>タブで<guimenu>追加</guimenu>をクリックします。NFSサーバのホスト名、インポートするディレクトリ、およびこのディレクトリをローカルでマウントするマウントポイントを入力します。
     </para>
    </step>


    <step>
     <para>
      NFSv4を使用する場合は、<guimenu>NFS設定</guimenu>タブで<guimenu>NFSv4を有効にする</guimenu>を選択します。また、<guimenu>NFSv4ドメイン名</guimenu>に、NFSv4サーバが使用する値と同じ値が入力されている必要があります。デフォルトドメインは、<literal>localdomain</literal>です。
     </para>
    </step>
    <step>
     <para>
      NFSでKerberos認証を使用するには、GSSセキュリティを有効にする必要があります。<guimenu>GSSセキュリティを有効にする</guimenu>を選択します。
     </para>
    </step>
    <step>
     <para>
      ファイアウォールを使用しており、リモートコンピュータのサービスにアクセスを許可する場合は、<guimenu>NFS設定</guimenu>タブで<guimenu>ファイアウォールでポートを開く</guimenu>をオンにします。チェックボックスの下には、ファイアウォールのステータスが表示されます。
     </para>
    </step>

    <step>
     <para>
      <guimenu>OK</guimenu>をクリックして変更内容を保存します。
     </para>
    </step>
   </procedure>
   <para>
    設定は<filename>/etc/fstab</filename>に書かれ、指定されたファイルシステムがマウントされます。後でYaST設定クライアントを起動した時に、このファイルから既存の設定が取得されます。
   </para>
   <tip>
    <title>ルートファイルシステムとしてのNFS</title>
    <para>
     ルートパーティションがネットワーク経由でNFS共有としてマウントされている(ディスクレス)システムでは、NFS共有にアクセス可能なネットワークデバイスの設定を慎重に行う必要があります。
    </para>
    <para>
     システムの停止、システムの再起動時のデフォルトの処理順序は、ネットワーク接続を切断してから、ルートパーティションをアンマウントするという順序になります。NFSルートの場合、この順序では問題が発生します。NFS共有とのネットワーク接続が先に無効にされているため、ルートパーティションを正常にアンマウントできないためです。システムが該当するネットワークデバイスを無効にしないようにするには、[network device configuration(ネットワークデバイスの設定)]タブ(<xref linkend="sec-network-yast-change-start"/>を参照)を開いて、<guimenu>デバイスの起動</guimenu>ペインの<guimenu>NFSrootオン</guimenu>を選択します。
    </para>
   </tip>

  </sect2>

  <sect2 xml:id="sec-nfs-import">
   <title>ファイルシステムの手動インポート</title>


   <para>
    NFSサーバからファイルシステムを手動でインポートするには、RPCポートマッパーが実行していることが前提条件です。RPCポートマッパーを適切に起動するのは<option>nfs</option>サービスです。そのため、<systemitem class="username">root</systemitem>ユーザとして「<command>systemctl start nfs</command>」を入力し、RPCポートマッパーを起動します。次に、<command>mount</command>を使用して、ローカルパーティションと同様に、リモートファイルシステムをファイルシステムにマウントできます。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mount <replaceable>HOST</replaceable>:<replaceable>REMOTE-PATH</replaceable><replaceable>LOCAL-PATH</replaceable></screen>
   <para>
    たとえば、<systemitem>nfs.example.com</systemitem>マシンからユーザディレクトリをインポートするには、次の構文を使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mount nfs.example.com:/home /home</screen>
   <para>
    クライアントがNFSサーバに対して行うTCP接続の数を定義するには、<command>mount</command>コマンドの<literal>nconnect</literal>オプションを使用できます。1～16の間の任意の数を指定できます。ここで、1はマウントオプションが指定されていない場合のデフォルト値です。
   </para>
   <para>
    <literal>nconnect</literal>設定は、特定のNFSサーバへの最初のマウントプロセス中にのみ適用されます。同じクライアントが同じNFSサーバにmountコマンドを実行する場合、すべてのすでに確立されている接続が共有されます。新しい接続は確立されません。<literal>nconnect</literal>設定を変更するには、特定のNFSサーバへの<emphasis role="bold"></emphasis>「すべての」クライアント接続をアンマウントする必要があります。次に<literal>nconnect</literal>オプションの新しい値を定義できます。
   </para>
   <para>
    現在有効な<literal>nconnect</literal>の値は、<command>mount</command>の出力または<filename>/proc/mounts</filename>ファイルで確認できます。マウントオプションに値がない場合は、マウント中にそのオプションは使用されず、デフォルト値の<emphasis></emphasis>「1」が使用されます。
   </para>
   <note>
    <title><literal>nconnect</literal>によって定義されているものとは異なる接続数</title>
    <para>
     最初のマウント後に接続を閉じたり開いたりすることができるため、実際の接続数は必ずしも<literal>nconnect</literal>の値と同じである必要はありません。
    </para>
   </note>
   
   <sect3 xml:id="sec-nfs-automount">
    <title>自動マウントサービスの使用</title>
    <para>
     autofsデーモンを使用して、リモートファイルシステムを自動的にマウントすることができます。<filename>/etc/auto.master</filename>ファイルに次のエントリを追加します。
    </para>
<screen>/nfsmounts /etc/auto.nfs</screen>
    <para>
     これで、<filename>/nfsmounts</filename>ディレクトリがクライアント上のすべてのNFSマウントのルートディレクトリの役割を果たすようになります(<filename>auto.nfs</filename>ファイルが正しく設定されている場合)。ここでは、<filename>auto.nfs</filename>という名前を使用しましたが、任意の名前を選択することができます。<filename>auto.nfs</filename>で、次のようにしてすべてのNFSマウントのエントリを追加します。
    </para>
<screen>localdata -fstype=nfs server1:/data
nfs4mount -fstype=nfs4 server2:/</screen>
    <para>
     <systemitem class="username">root</systemitem>ユーザとして<command>systemctl start autofs</command>を実行して設定を有効にします。この例で、<systemitem>server1</systemitem>の<filename>/data</filename>ディレクトリの<filename>/nfsmounts/localdata</filename>はNFSでマウントされ、<systemitem>server2</systemitem>の<filename>/nfsmounts/nfs4mount</filename>はNFSv4でマウントされます。
    </para>
    <para>
     autofsサービスの実行中に<filename>/etc/auto.master</filename>ファイルを編集した場合、変更を反映するには、<command>systemctl restart autofs</command>で自動マウント機能を再起動する必要があります。
    </para>
   </sect3>
   <sect3 xml:id="sec-nfs-fstab">
    <title><filename>/etc/fstab</filename>の手動編集</title>
    <para>
     <filename>/etc/fstab</filename>内の典型的なNFSv3マウントエントリは、次のようになります:。
    </para>
<screen>nfs.example.com:/data /local/path nfs rw,noauto 0 0</screen>
    <para>
     NFSv4マウントの場合は、3番目の列で<literal>nfs</literal>の代わりに<literal>nfs4</literal>を使用します。
    </para>
<screen>nfs.example.com:/data /local/pathv4 nfs4 rw,noauto 0 0</screen>
    <para>
     <literal>noauto</literal>オプションを使用すると、起動時にファイルシステムが自動マウントされません。対応するファイルシステムを手動でマウントする場合は、マウントポイントのみを指定してmountコマンドを短くできます。
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mount /local/path</screen>
    <note>
     <title>起動時にマウント</title>
     <para>
      ただし、<literal>noauto</literal>オプションを入力しないと、起動時に、システムのinitスクリプトによって、それらのファイルシステムがマウントされます。
     </para>
    </note>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-nfs-pnfs">
   <title>パラレルNFS(pNFS)</title>
   <para>
    NFSは、1980年代に開発された、もっとも古いプロトコルの1つです。そのため、小さなファイルを共有したい場合は、通常、NFSで十分です。しかし、大きなファイルを送信したい場合や多数のクライアントがデータにアクセスしたい場合は、NFSサーバがボトルネックとなり、システムのパフォーマンスに重大な影響を及ぼします。これはファイルのサイズが急速に大きくなっているのに対し、Ethernetの相対速度が追い付いていないためです。
   </para>
   <para>
    通常のNFSサーバにファイルを要求すると、サーバはファイルのメタデータを検索し、すべてのデータを収集して、ネットワークを介してクライアントに送信します。しかし、ファイルが小さくても大きくてもパフォーマンスのボトルネックが問題になります。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      小さいファイルでは、メタデータの収集に時間がかかる。
     </para>
    </listitem>
    <listitem>
     <para>
      大きいファイルでは、サーバからクライアントへのデータ送信に時間がかかる。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    pNFS(パラレルNFS)は、ファイルシステムメタデータをデータの場所から分離することによって、この制限を克服します。このため、pNFSには2種類のサーバが必要です。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      データ以外のすべてのトラフィックを扱う「メタデータ」<emphasis></emphasis>または<emphasis></emphasis>「制御サーバ」
     </para>
    </listitem>
    <listitem>
     <para>
      データを保持する1つ以上の<emphasis></emphasis>「ストレージサーバ」
     </para>
    </listitem>
   </itemizedlist>
   <para>
    メタデータサーバとストレージサーバによって、単一の論理NFSサーバが構成されます。クライアントが読み込みまたは書き出しを行う場合、メタデータサーバがNFSv4クライアントに対して、ファイルのチャンクにアクセスするにはどのストレージサーバを使用すればよいかを指示します。クライアントはサーバのデータに直接アクセスできます。
   </para>
   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>はクライアント側でのみpNFSをサポートします。
   </para>
   <sect3 xml:id="sec-nfs-pnfs-yast">
    <title>YaSTを使用したpNFSクライアントの設定</title>
    <para>
     <xref linkend="pro-nfs-import-yast2"/>に従って進めます。ただし、<guimenu>pNFS (v4.2)</guimenu>チェックボックスをクリックし、オプションで<guimenu>NFSv4共有</guimenu>をクリックします。YaSTが必要な手順をすべて実行し、必要なすべてのオプションを<filename>/etc/exports</filename>ファイルに書き込みます。
    </para>
   </sect3>
   <sect3 xml:id="sec-nfs-pnfs-manual">
    <title>pNFSクライアントの手動設定</title>
    <para>
     <xref linkend="sec-nfs-import"/>を参照して開始します。ほとんどの設定はNFSv4サーバによって行われます。pNFSを使用する場合に異なるのは、<option>minorversion</option>オプションおよびメタデータサーバ<replaceable>MDS_SERVER</replaceable>を<command>mount</command>コマンドに追加することだけです。
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mount -t nfs4 -o minorversion=1 <replaceable>MDS_SERVER</replaceable> <replaceable>MOUNTPOINT</replaceable></screen>
    <para>
     デバッグを支援するために、<filename>/proc</filename>ファイルシステムの値を変更します。
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> echo 32767 &gt; /proc/sys/sunrpc/nfsd_debug
<prompt>&gt; </prompt><command>sudo</command> echo 32767 &gt; /proc/sys/sunrpc/nfs_debug</screen>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="nfs4-acls" os="sles;osuse">
  <title>NFSv4上でのアクセス制御リストの管理</title>
  <para>
   Linuxには、ユーザ、グループ、およびその他(<literal>ugo</literal>)に対する簡単な読み込み、書き込み、および実行(<literal>rwx</literal>)の各フラグ以上の、ACL (アクセス制御リスト)の単一標準はありません。よりきめ細かな制御のオプションの1つに<citetitle>Draft POSIX ACL</citetitle>があります。ただし、これらのACLは、POSIXによって正式に標準化されたことはありません。もう1つは、NFSv4ネットワークファイルシステムの一部として設計されたNFSv4 ACLです。NFSv4 ACLは、Linux上のPOSIXシステムとMicrosoft Windows上のWIN32システム間に適切な互換性を提供することを目的としています。
  </para>
  <para>
   NFSv4 ACLは、Draft POSIX ACLを正しく実装できるほど十分ではないので、NFSv4クライアントへのACLアクセスのマッピングは試みられていません(<command>setfacl</command>の使用など)。
  </para>
  <para>
   NFSv4の使用時は、Draft POSIX ACLはエミュレーションでさえ使用できず、NFSv4 ACLを直接使用する必要があります。つまり、<command>setfacl</command>をNFSv3で動作させながら、NFSv4で動作させることはできません。NFSv4 ACLをNFSv4ファイルシステムで使用できるようにするため、SUSE Linux Enterprise Serverでは、次のファイルを含む<filename>nfs4-acl-tools</filename>パッケージを提供しています。
  </para>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <command>nfs4-getfacl</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>nfs4-setfacl</command>
    </para>
   </listitem>
   <listitem>
    <para>
     <command>nfs4-editacl</command>
    </para>
   </listitem>
  </itemizedlist>
  <para>
   これらの動作は、NFSv4 ACLを検証および変更する<command>getfacl</command>および<command>setfacl</command>とほぼ同様です。これらのコマンドは、NFSサーバ上のファイルシステムがNFSv4 ACLを完全にサポートしている場合にのみ有効です。サーバによって課される制限は、クライアントで実行されているこれらのプログラムに影響を与え、ACE (Access Control Entries)の一部の特定の組み合わせが不可能なことがあります。
  </para>
  <para>
   エクスポート元のNFSサーバにNFSボリュームをローカルにマウントすることはサポートされていません。
  </para>
  <bridgehead>その他の情報</bridgehead>
  <para>
   詳細については、<citetitle>Introduction to NFSv4 ACLs</citetitle> (<link xlink:href="http://wiki.linux-nfs.org/wiki/index.php/ACLs#Introduction_to_NFSv4_ACLs"/>)を参照してください。
  </para>
 </sect1>
 <sect1 xml:id="sec-nfs-info">
  <title>詳細情報</title>
  <para>
   NFSサーバとクライアントの設定情報は、<command>exports</command>、<command>nfs</command>、および<command>mount</command>のマニュアルページのほか、<filename>/usr/share/doc/packages/nfsidmap/README</filename>からも入手できます。オンラインドキュメンテーションについては、次のWebサイトを参照してください。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     ネットワークセキュリティの一般的な情報については、<xref linkend="cha-security-firewall"/>を参照してください。
    </para>
   </listitem>
   <listitem>
    <para>
     NFSエクスポートを自動的にマウントする必要がある場合は、<xref linkend="sec-autofs-nfs"/>を参照してください。
    </para>
   </listitem>
   <listitem>
    <para>
     AutoYaSTを使用してNFSを設定する方法の詳細については、<xref linkend="ay-nfs"/>を参照してください。
    </para>
   </listitem>
   <listitem>
    <para>
     Kerberosを使用したNFSエクスポートのセキュリティ保護に関する手順については、<xref linkend="sec-security-kerberos-nfs"/>を参照してください。
    </para>
   </listitem>
   <listitem>
    <para>
     詳細な技術ヘルプについては、<link xlink:href="http://nfs.sourceforge.net/">SourceForge</link>を参照してください。
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 
 <sect1 xml:id="sec-nfs-troubleshooting">
  <title>NFSトラブルシューティングのための情報の収集</title>
   <sect2 xml:id="sec-nfs-common-troubleshooting">
    <title>一般的なトラブルシューティング</title>
     <para>
      場合によっては、生成されたエラーメッセージを読み、<filename>/var/log/messages</filename>ファイルを調べることでNFSの問題を理解することができます。ただし、多くの場合、エラーメッセージや<filename>/var/log/messages</filename>で提供される情報は十分に詳しいものではありません。このような場合、NFSのほとんどの問題は、問題の再現中にネットワークパケットをキャプチャすることでよく理解することができます。
     </para>
 
     <para>
      問題を明確に定義します。さまざまな方法でシステムをテストし、問題の発生時期を特定して問題を調べます。問題につながる最も簡単なステップを特定します。その後、次の手順で示すように、問題を再現してみます。
     </para>
 
     <procedure>
      <title>問題の再現</title>
       <step>
        <para>
         ネットワークパケットをキャプチャします。Linuxでは、<package>tcpdump</package>パッケージで提供される、<command>tcpdump</command>コマンドを使用できます。
        </para>
        <para>
         <command>tcpdump</command>の構文の例は次のとおりです。
        </para>
<screen>tcpdump -s0 -i <replaceable>eth0</replaceable> -w <replaceable>/tmp/nfs-demo.cap</replaceable> host <replaceable>x.x.x.x</replaceable></screen>
        <para>
         ここで、
        </para>
        <variablelist>
         <varlistentry>
          <term>s0</term>
          <listitem>
           <para>パケットの切り捨てを防止します
           </para> 
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>eth0</term>
          <listitem>
           <para>
            パケットが通過するローカルインタフェースの名前に置き換える必要があります。<literal>任意の</literal>値を使用して、同時にすべてのインタフェースをキャプチャできますが、この属性の使用により、データが劣化したり、分析で混乱が生じる場合がよくあります。
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>w</term>
         <listitem>
          <para>
           書き込むキャプチャファイルの名前を指定します。
          </para>
         </listitem>
         </varlistentry>
         <varlistentry>
          <term>x.x.x.x</term>
          <listitem>
           <para>
            NFS接続のもう一方の端のIPアドレスに置き換える必要があります。たとえば、NFSクライアント側で<command>tcpdump</command>を取得する場合は、NFSサーバのIPアドレスを指定します(その逆でも構いません)。
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
       <note>
        <para>
         場合によっては、NFSクライアントまたはNFSサーバのいずれかのデータをキャプチャするだけで十分です。ただし、エンドツウエンドのネットワーク整合性が疑わしい場合は、両方の端でデータをキャプチャする必要がよくあります。
        </para>
       </note>
       <para>
        <command>tcpdump</command>プロセスをシャットダウンせずに、次のステップに進みます。
       </para>
      </step>
      <step>
       <para>
        (オプション) <command>nfs mount</command>コマンド自体の実行中に問題が発生する場合は、<command>nfs mount</command>コマンドの高詳細度オプション(<literal>-vvv</literal>)の使用して、より詳細な出力を得ることができます。
       </para>
  </step>
  <step>
   <para>
    (オプション)再現方法の<command>strace</command>を取得します。<command>strace</command>の再現ステップでは、どのシステムコールがどの時点で行われたかを正確に記録します。この情報を使用して、<literal>tcpdump</literal>内のどのイベントに焦点を合わせるべきかを詳細に判断することができます。
   </para>
   <para>
    たとえば、NFSマウントでコマンド<emphasis>mycommand --param</emphasis>の実行が失敗したことが分かった場合は、次のコマンドを使用してコマンドを<command>strace</command>することができます。
   </para>
<screen>strace -ttf -s128 -o/tmp/nfs-strace.out mycommand --param</screen>
   <para>
    再現ステップで<command>strace</command>を取得できない場合は、問題が再現された時刻を記録します。<filename>/var/log/messages</filename>ログファイルを確認して、問題を特定します。
   </para>
  </step>
  <step>
   <para>
    問題が再現されたら、<keycombo><keycap>CTRL</keycap><keycap>c</keycap></keycombo>を押して、端末で実行している<command>tcpdump</command>を停止します。<command>strace</command>コマンドによりハングした場合は、<command>strace</command>コマンドも終了します。
   </para>
  </step>
  <step>
   <para>
    パケットトレースと<command>strace</command>データの分析経験のある管理者は、<filename>/tmp/nfs-demo.cap</filename>と<filename>/tmp/nfs-strace.out</filename>でデータを検査できるようになりました。
   </para>
  </step>  
  </procedure>
 </sect2>
 
 <sect2 xml:id="sec-advance-debugging">
  <title>高度なNFSデバッグ</title>
   <important>
    <title>高度なデバッグは専門家向けです</title>
    <para>
     次のセクションは、NFSコードを理解している熟練したNFS管理者のみを対象としていることを念頭に置いてください。したがって、<xref linkend="sec-nfs-common-troubleshooting"/>に記載されている最初のステップを実行して問題絞り込み、詳細を理解するために必要なデバッグコード(ある場合)の領域を専門家に知らせます。</para>
   </important>
   <para>
    追加のNFS関連の情報を収集するために有効にすることが可能なデバッグコードのさまざまな領域があります。ただし、デバッグメッセージは非常にわかりにくく、これらのボリュームは非常に大きいため、デバッグコードを使用するとシステムパフォーマンスに影響を及ぼす可能性があります。問題が発生しないようにするためにシステムに大きな影響を及ぼす場合もあります。ほとんどの場合、デバッグコードの出力は必要ありません。また、NFSコードに精通していないユーザにとっては通常は役に立ちません。  
   </para>
 
   <sect3 xml:id="sec-rpcdebug">
    <title><command>rpcdebug</command>を使用したデバッグの有効化</title>
    <para>
     <command>rpcdebug</command>ツールを使用すると、NFSクライアントとサーバデバッグフラグを設定およびクリアすることができます。<command>rpcdebug</command>ツールにSLEでアクセスできない場合は、NFSサーバの<package>nfs-client</package>あるいは<package>nfs-kernel-server</package>パッケージからインストールできます。
    </para>
    <para>
     デバッグフラグを設定するには、次のコマンドを実行します。
    </para>
<screen>rpcdebug -m <replaceable>module</replaceable> -s flags</screen>
    <para>
     デバッグフラグをクリアするには、次のコマンドを実行します。
    </para>
<screen>rpcdebug -m <replaceable>module</replaceable> -c flags</screen>
    <para>
     ここで、<replaceable>module</replaceable>は次のとおりです。
    </para>
    <variablelist>
     <varlistentry>
      <term>nfsd</term>
      <listitem>
      <para>
       NFSサーバコードのデバッグ
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>nfs</term>
      <listitem>
      <para>
       NFSクライアントコードのデバッグ
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>nlm</term>
      <listitem>
       <para>
        NFSクライアントまたはNFSサーバのいずれかでNFS Lock Managerのデバッグを行います。これはNFS v2/v3に該当します。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>rpc</term>
      <listitem>
      <para>
       NFSクライアントまたはNFSサーバのいずれかでリモートプロシージャコールモジュールのデバッグを行います。
      </para>
     </listitem>
    </varlistentry> 
   </variablelist>
   <para>
    <command>rpcdebug</command>コマンドの詳細な使用法については、マニュアルページを参照してください。
   </para>
<screen>man 8 rpcdebug</screen>
  </sect3>
 
 <sect3 xml:id="sec-other-nfs-debug">
  <title>NFSが依存する他のコードのデバッグを有効化する</title>
  <para>
   NFSアクティビティは、NFSマウントデーモン(<command>pc.mountd</command>)などの他の関連サービスに依存する場合があります。<filename>/etc/sysconfig/nfs</filename>内で関連サービスのオプションを設定できます。
  </para>
  <para>
   たとえば、<filename>/etc/sysconfig/nfs</filename>には次のパラメータが含まれています。
  </para>
<screen>MOUNTD_OPTIONS=""</screen>
  <para>
   デバッグモードを有効にするには、<literal>-d</literal>オプションに続いて、次の任意の値を使用する必要があります: 。<literal>all</literal>、<literal>auth</literal>、<literal>call</literal>、<literal>general</literal>、または<literal>parse</literal>。
  </para>
  <para>
   たとえば、次のコードはすべての形式の<command>rpc.mountd</command>ロギングを有効にします。
  </para>
<screen>MOUNTD_OPTIONS="-d all"</screen>
  <para>
   すべての使用可能なオプションについては、マニュアルページを参照してください。
  </para>
<screen>man 8 rpc.mountd</screen>
  <para>
   <filename>/etc/sysconfig/nfs</filename>を変更した後で、サービスを再起動する必要があります。
  </para>
<screen>systemctl restart nfsserver  # for nfs server related changes
systemctl restart nfs  # for nfs client related changes</screen>
   </sect3>
  </sect2>
 </sect1>
</chapter>
