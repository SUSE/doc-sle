<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="adm_sudo.xml" version="5.0" xml:id="cha-adm-sudo">
 <title><command>sudo</command>の基本</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  特定のコマンドを実行するには、root特権が必要です。ただし、セキュリティ上の理由のため、また間違いを避けるため、<systemitem class="username">root</systemitem>としてログインすることは推奨されません。より安全な方法は、通常のユーザとしてログインしてから、<command>sudo</command>を使用して昇格された特権でコマンドを実行することです。
 </para>
 <para>
  <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>では、<command>sudo</command>は<command>su</command>と同様に機能するように設定されています。ただし、<command>sudo</command>には、ユーザが他のユーザの特権でコマンドを実行できるようにする柔軟なメカニズムがあります。このコマンドを使用して、指定の特権を持つ役割を特定のユーザとグループに割り当てることができます。たとえば、<systemitem class="groupname">users</systemitem>グループのメンバーが、<systemitem class="username">wilber</systemitem>ユーザの特権でコマンドを実行できるようにすることができます。コマンドへのアクセスは、コマンドオプションを禁止することにより、さらに制限できます。suでは、PAMを使用した認証で常に<systemitem class="username">root</systemitem>パスワードを必要としますが、<command>sudo</command>では、ユーザの資格情報を使用して認証するように設定できます。すなわち、ユーザは<systemitem class="username">root</systemitem>パスワードを共有する必要がなく、セキュリティが向上します。
 </para>
 <sect1 xml:id="sec-adm-sudo-usage">
  <title><command>sudo</command>の基本的な使用方法</title>

  <para>
   次の章では、<command>sudo</command>の基本的な使用方法の概要について説明します。
  </para>

  <sect2 xml:id="sec-adm-sudo-usage-cmd">
   <title>単一コマンドの実行</title>
   <para>
    標準ユーザは、コマンドの前に<command>sudo</command>を追加することで、任意のコマンドを<systemitem class="username">root</systemitem>として実行できます。これにより、rootパスワードを入力するように求められます。正常に認証されたら、<systemitem class="username">root</systemitem>としてコマンドが実行されます。
   </para>
<screen>
<prompt>&gt; </prompt><command>id -un</command><co xml:id="co-sudo-usage-id"/>
tux
<prompt>&gt; </prompt><command>sudo</command> <command>id -un</command>
root's password:<co xml:id="co-sudo-usage-pw"/>
root
<prompt>&gt; </prompt><command>id -un</command>
tux<co xml:id="co-sudo-usage-after"/>
<prompt>&gt; </prompt><command>sudo</command> <command>id -un</command>
<co xml:id="co-sudo-usage-nopw"/>
root
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-usage-id">
     <para>
      <command>id -un</command>コマンドは、現在のユーザのログイン名を出力します。
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-pw">
     <para>
      入力時には、パスワードは表示されません(クリアテキストとしてだけでなく、マスク文字としても表示されません)。
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-after">
     <para>
      <command>sudo</command>で始まるコマンドのみが、昇格された特権で実行されます。
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-nopw">
     <para>
      昇格された特権は特定の期間保持されるため、再び<systemitem class="username">root</systemitem>パスワードを入力する必要はありません。
     </para>
    </callout>
   </calloutlist>
   <tip>
    <title>I/Oリダイレクト</title>
    <para>
     <command>sudo</command>の使用時に、I/Oリダイレクトは機能しません。
    </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> echo s &gt; /proc/sysrq-trigger
bash: /proc/sysrq-trigger: Permission denied
<prompt>&gt; </prompt><command>sudo</command> cat &lt; /proc/1/maps
bash: /proc/1/maps: Permission denied
</screen>
    <para>
     上記の例では、<command>echo</command>および<command>cat</command>コマンドのみが昇格された特権で実行されます。リダイレクトはユーザの特権を使用してユーザのシェルで実行されます。昇格された権限でリダイレクトを実行するには、<xref linkend="sec-sudo-shell"/>に記載されているようにシェルを起動するか、<command>dd</command>ユーティリティを使用します。
    </para>
<screen>
echo s | sudo dd of=/proc/sysrq-trigger
sudo dd if=/proc/1/maps | cat 
</screen>
   </tip>
  </sect2>

  <sect2 xml:id="sec-sudo-shell">
   <title>シェルの起動</title>
   <para>
    昇格された特権でコマンドを実行するたびに<command>sudo</command>を使用することは、必ずしも実用的ではありません。<command>sudo bash</command>コマンドを使用できますが、組み込みメカニズムのいずれかを使用してシェルを起動することをお勧めします。
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>sudo -s (&lt;command&gt;)</literal>
     </term>
     <listitem>
      <para>
       <envar>SHELL</envar>環境変数で指定したシェル、またはターゲットユーザのデフォルトのシェルを起動します。コマンドが指定される場合は、シェルに渡されます(<option>-c</option>オプションを使用)。そうでない場合、シェルは対話的モードで実行されます。
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -s
root's password:
<prompt>root:/home/tux # </prompt>exit
<prompt>tux:~ &gt; </prompt>
</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>sudo -i (&lt;command&gt;)</literal>
     </term>
     <listitem>
      <para>
       <option>-s</option>と同様ですが、シェルはログインシェルとして起動します。つまり、シェルの起動ファイル(<filename>.profile</filename>など)は処理され、現在の作業ディレクトリはターゲットユーザのホームディレクトリに設定されます。
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:~ # </prompt>exit
<prompt>tux:~ &gt; </prompt>
            </screen>
     </listitem>
    </varlistentry>
   </variablelist>
     <tip>
   <title>環境変数</title>
   <para>
    デフォルトでは、<command>sudo</command>は環境変数を伝達しません。この動作は、<literal>env_reset</literal>オプションを使用して変更できます(<xref linkend="tab-adm-sudo-options"/>を参照してください)。
   </para>
  </tip>
  </sect2>

 </sect1>
 <sect1 xml:id="sec-sudo-conf">
  <title><command>sudo</command>の設定</title>

  <para>
   <command>sudo</command>は、設定可能なオプションの幅広い範囲を提供します。
  </para>

  <note>
   <title>sudoからのロックアウト</title>
   <para>
    誤って<command>sudo</command>からロックアウトした場合は、<command>su -</command>と<systemitem class="username">root</systemitem>パスワードを使用してルートシェルを起動してください。エラーを修正するには、<command>visudo</command>を実行します。
   </para>
  </note>

  <sect2 xml:id="sec-sudo-conf-edit">
   <title>設定ファイルの編集</title>
   <para>
    <command>sudo</command>向けの主なポリシー設定ファイルは、<filename>/etc/sudoers</filename>です。ファイルの形式が正しくない場合、システムからロックアウトされてしまう可能性があるため、編集に<command>visudo</command>を使用することを強くお勧めします。このコマンドは、編集の競合を防ぎ、変更を保存する前に構文エラーをチェックします。
   </para>
   <para>
    <envar>EDITOR</envar>環境変数を次のように設定して、viの代わりに別のエディタを使用することもできます。
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo</screen>
   <para>
    <filename>/etc/sudoers</filename>ファイルはシステムパッケージによって提供されているため、ファイル内で直接行われた変更によって更新が破損する可能性があることに注意してください。そのため、カスタム設定は、<filename>/etc/sudoers.d/</filename>ディレクトリ内のファイルに対して行うことをお勧めします。ファイルを作成または編集するには、次のコマンドを使用します。
   </para>
<screen>sudo visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <para>
    次のコマンドは、別のエディタ(この場合は、<command>nano</command>)を使用してファイルを開きます。
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <note>
    <title><filename>/etc/sudoers.d</filename>内の無視されるファイル</title>
    <para>
     <filename>/etc/sudoers</filename>の<literal>#includedir</literal>ディレクティブは、<literal>~</literal> (チルダ)で終わるファイル、または<literal>&#x002E;</literal> (ドット)を含むファイルを無視します。
    </para>
   </note>
   <para>
    <command>visudo</command>コマンドの詳細については、<command>man 8 visudo</command>を実行してください。
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-syntax">
   <title>基本的なsudoersの設定構文</title>
   <para>
    sudoersの設定ファイルには、2種類のオプション(文字列とフラグ)があります。文字列には任意の値を含めることができますが、フラグはONかOFFのいずれかのみです。sudoersの設定ファイルの最も重要な構文構造は次のとおりです。
   </para>
<screen>
# Everything on a line after # is ignored <co xml:id="co-sudo-syntax-comment"/>
Defaults !insults # Disable the insults flag <co xml:id="co-sudo-syntax-flag"/>
Defaults env_keep += "DISPLAY HOME" # Add DISPLAY and HOME to env_keep
tux ALL = NOPASSWD: /usr/bin/frobnicate, PASSWD: /usr/bin/journalctl <co xml:id="co-sudo-syntax-rule"/>
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-syntax-comment">
     <para>
      例外が2つあります。<literal>#include</literal>と<literal>#includedir</literal>は通常のコマンドです。
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-flag">
     <para>
      指定のフラグをONに設定するには、<literal>! </literal>を削除してください。
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-rule">
     <para>
      <xref linkend="sec-sudo-conf-rule"/>を参照してください。
     </para>
    </callout>
   </calloutlist>

   <variablelist xml:id="tab-adm-sudo-options"><title>有用なフラグとオプション</title>
   <varlistentry>
    <term>
     <literal>targetpw</literal>
    </term>
    <listitem>
     <para>
      このフラグは、呼び出し元のユーザが、ターゲットユーザのパスワード(ON)(<systemitem class="username">root</systemitem>など)と、呼び出し元のユーザのパスワード(OFF)のいずれを要求されるかを決定します。
     </para>
<screen>Defaults targetpw # Turn targetpw flag ON</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <literal>rootpw</literal>
    </term>
    <listitem>
      <para>
       設定すると、<command>sudo</command>は、<systemitem class="username">root</systemitem>パスワードを要求します。デフォルトは［オフ］です。
      </para>
<screen>Defaults !rootpw # Turn rootpw flag OFF</screen>
    </listitem>
   </varlistentry>
     <varlistentry>
    <term>
     <literal>env_reset</literal>
    </term>
    <listitem>
      <para>
       設定すると、<command>sudo</command>が、<envar>TERM</envar>、<envar>PATH</envar>、<envar>HOME</envar>、<envar>MAIL</envar>、<envar>SHELL</envar>、<envar>LOGNAME</envar>、<envar>USER</envar>、<envar>USERNAME</envar>、および<envar>SUDO_*</envar>が指定された最小限の環境を作成します。また、<literal>env_keep</literal>に列挙されている変数は、呼び出し元の環境からインポートされます。デフォルトは［ON］です。
      </para>
<screen>Defaults env_reset # Turn env_reset flag ON</screen>
     </listitem>
     </varlistentry>
       <varlistentry>
    <term>
     <literal>env_keep</literal>
    </term>
    <listitem>
      <para>
       <literal>env_reset</literal>フラグがONの場合に保持する環境変数の一覧。
      </para>
<screen>
# Set env_keep to contain EDITOR and PROMPT
Defaults env_keep = "EDITOR PROMPT"
Defaults env_keep += "JRE_HOME" # Add JRE_HOME
Defaults env_keep -= "JRE_HOME" # Remove JRE_HOME
</screen>
    </listitem>
       </varlistentry>
         <varlistentry>
    <term>
     <literal>env_delete</literal>
    </term>
    <listitem>
      <para>
       <literal>env_reset</literal>フラグがOFFの場合に削除する環境変数の一覧。
      </para>
<screen>
# Set env_delete to contain EDITOR and PROMPT
Defaults env_delete = "EDITOR PROMPT"
Defaults env_delete += "JRE_HOME" # Add JRE_HOME
Defaults env_delete -= "JRE_HOME" # Remove JRE_HOME
</screen>
     </listitem>
  </varlistentry>
   </variablelist>

   <para>
    <literal>Defaults</literal>トークンを使用することで、ユーザ、ホスト、およびコマンドのコレクションのエイリアスを作成することもできます。さらに、一連のユーザのみを対象としてオプションを適用することができます。
   </para>
   <para>
    <filename>/etc/sudoers</filename>設定ファイルの詳細については、<command>man 5 sudoers</command>を参照してください。
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-rule">
   <title>基本的なsudoersのルール</title>
   <para>
    各ルールは、次のスキームに従います(<literal>[]</literal>はオプション部分を示しています)。
   </para>
<screen>
#Who      Where         As whom      Tag                What
User_List Host_List = [(User_List)] [NOPASSWD:|PASSWD:] Cmnd_List
</screen>
   <variablelist>
    <title>sudoersルールの構文</title>
    <varlistentry>
     <term><literal>User_List</literal>
     </term>
     <listitem>
      <para>
       1つ以上の(,コンマで区切られた)識別子。ユーザ名、<literal>%GROUPNAME</literal>形式のグループ、<literal>#UID</literal>形式のユーザIDを指定します。否定は<literal>! </literal> prefix.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Host_List</literal>
     </term>
     <listitem>
      <para>
       1つ以上の(コンマで区切られた)識別子。(完全修飾された)ホスト名またはIPアドレスのいずれかを指定します。否定は<literal>! </literal> prefix.通常、<literal>Host_List</literal>には<literal>ALL</literal>を選択します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>NOPASSWD:|PASSWD:</literal>
     </term>
     <listitem>
      <para>
       <literal>NOPASSWD:</literal>の後に、<literal>Cmd_List</literal>と一致するコマンドを実行すると、パスワードは要求されません。
      </para>
      <para>
       <literal>PASSWD</literal>はデフォルトです。<literal>PASSWD</literal>と<literal>NOPASSWD</literal>の両方が同じ行に存在する場合にのみ指定する必要があります。
      </para>
<screen>tux ALL = PASSWD: /usr/bin/foo, NOPASSWD: /usr/bin/bar</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Cmnd_List</literal>
     </term>
     <listitem>
      <para>
       1つまたは複数の(コンマで区切られた)指定子。実行可能ファイルへのパスの後に、オプションで使用可能な引数を指定。
      </para>
<screen>
/usr/bin/foo     # Anything allowed
/usr/bin/foo bar # Only "/usr/bin/foo bar" allowed
/usr/bin/foo ""  # No arguments allowed
</screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    <literal>ALL</literal>は、<literal>User_List</literal>、<literal>Host_List</literal>、および<literal>Cmnd_List</literal>としても使用できます。
   </para>
   <para>
    パスワードを入力しなくても、<systemitem class="username">tux</systemitem>がすべてのコマンドをrootとして実行できるようにするルールは次のとおりです。
   </para>
<screen>tux ALL = NOPASSWD: ALL</screen>
   <para>
    <systemitem class="username">tux</systemitem>が<command>systemctl restart apache2</command>を実行できるようにするルールは次のとおりです。
   </para>
<screen>tux ALL = /usr/bin/systemctl restart apache2</screen>
   <para>
    <systemitem class="username">tux</systemitem>が<command>wall</command>を<systemitem>admin</systemitem>として引数なしで実行できるようにするルールは次のとおりです。
   </para>
<screen>tux ALL = (admin) /usr/bin/wall ""</screen>
   <warning>
    <title>危険なルール</title>
    <para>
     <literal>Defaults targetpw</literal>なしで、<literal>ALL ALL = ALL</literal>のようなルールを使用「しないでください」。<emphasis></emphasis>そうしないと、だれでも<systemitem class="username">root</systemitem>としてコマンドを実行できるようになります。
    </para>
   </warning>
   <important>
   <title>Winbindとsudo</title>
   <para>
   <filename>sudoers</filename>ファイルでグループ名を指定する場合は、レルムの代わりにNetBIOSドメイン名を使用するようにしてください。次に例を示します。
   </para>
<screen><replaceable>%DOMAIN</replaceable>\\<replaceable>GROUP_NAME</replaceable> ALL = (ALL) ALL</screen>
   <para>
   winbinddを使用する場合、この形式は、<filename>smb.conf</filename>ファイルの<option>winbind separator</option>オプションによっても異なることに注意してください。デフォルトでは、<literal>\</literal>です。たとえば、<literal>+</literal>に変更された場合、<filename>sudoers</filename>ファイルのアカウント形式は<literal>DOMAIN+GROUP_NAME</literal>である必要があります。
   </para>
   </important>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-sudo-usecases">
  <title><command>sudo</command>の使用例</title>

  <para>
   デフォルト設定は標準的な使用シナリオで機能しますが、特定のニーズに合わせてデフォルト設定をカスタマイズできます。
  </para>

  <sect2 xml:id="sec-sudo-usecases-userpw">
   <title><systemitem class="username">root</systemitem>パスワードなしの<command>sudo</command>の使用</title>
   <para>
    設計では、<systemitem class="groupname">wheel</systemitem>グループのメンバーは、すべてのコマンドをrootとして<command>sudo</command>で実行できます。次の手順では、<systemitem class="groupname">wheel</systemitem>グループにユーザアカウントを追加する方法について説明します。
   </para>
   <procedure>
    <step>
     <para>
      ユーザアカウントを<systemitem class="groupname">wheel</systemitem>グループに追加します。
     </para>
     <para>
      ユーザアカウントがまだ<systemitem class="groupname">wheel</systemitem>グループのメンバーではない場合、<command>sudo usermod -a -G wheel <replaceable>USERNAME</replaceable></command>コマンドを使用して追加します。ログアウトしてからもう一度ログインして、変更を有効にします。<command>groups <replaceable>USERNAME</replaceable></command>コマンドを実行して、変更が成功したことを確認します。
     </para>
    </step>
    <step>
     <para>
      ユーザアカウントの通常のパスワードで認証します。
     </para>
     <para>
      <command>visudo</command>コマンド(<xref linkend="sec-sudo-conf-edit"/>を参照)を使用して、<filename>/etc/sudoers.d/userpw</filename>ファイルを作成し、次を追加します。
     </para>
<screen>Defaults !targetpw</screen>
    </step>
    <step>
     <para>
      新しいデフォルトのルールを選択します。
     </para>
     <para>
      ユーザにパスワードの再入力を求めるかどうかによって、<filename>/etc/sudoers</filename>の適切な行のコメントを解除し、デフォルトのルールをコメントアウトします。
     </para>
<screen>
## Uncomment to allow members of group wheel to execute any command
# %wheel ALL=(ALL) ALL

## Same thing without a password
# %wheel ALL=(ALL) NOPASSWD: ALL
</screen>
    </step>
    <step>
     <para>
      デフォルトのルールにより厳しい制約を設けます。
     </para>
     <para>
      <filename>/etc/sudoers</filename>の、すべてを許可するルールをコメントアウトするか、削除します。
     </para>
<screen>ALL     ALL=(ALL) ALL   # WARNING! Only use this together with 'Defaults targetpw'!</screen>
     <warning>
      <title>sudoersの危険なルール</title>
      <para>
       このステップはスキップしないでください。そうしないと、<emphasis></emphasis>「すべての」ユーザが<emphasis></emphasis>「すべての」コマンドを<systemitem class="username">root</systemitem>として実行できるようになってしまいます。
      </para>
     </warning>
    </step>
    <step>
     <para>
      設定をテストします。
     </para>
     <para>
      <command>sudo</command>を、<systemitem class="groupname">wheel</systemitem>のメンバーとして、またはメンバー以外として実行します。
     </para>
<screen>
<prompt>tux:~ &gt; </prompt>groups
users wheel
<prompt>tux:~ &gt; </prompt>sudo id -un
tux's password:
root
<prompt>wilber:~ &gt; </prompt>groups
users
<prompt>wilber:~ &gt; </prompt>sudo id -un
wilber is not in the sudoers file.  This incident will be reported.
</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-sudo-usecases-xorg">
   <title>X.Orgアプリケーションでの<command>sudo</command>の使用</title>
   <para>
    グラフィカルアプリケーションを<command>sudo</command>で起動すると、通常、次のエラーが発生します。
   </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> xterm
xterm: Xt error: Can't open display: %s
xterm: DISPLAY is not set
</screen>
   <para>
    簡単な回避策は、xhostを使用して、ルートユーザがローカルユーザのXセッションに一時的にアクセスできるようにすることです。これは、次のコマンドを使用して実行されます。
   </para>
<screen>xhost si:localuser:root</screen>
   <para>
    次のコマンドは許可されたアクセスを削除します。
   </para>
<screen>xhost -si:localuser:root</screen>
   <warning>
    <title>潜在的なセキュリティの問題</title>
    <para>
     ルート特権でグラフィカルアプリケーションを実行すると、セキュリティに影響を与えます。例外としてのみグラフィカルアプリケーションのルートアクセスを有効にすることをお勧めします。グラフィカルアプリケーションが閉じられたらすぐに、許可されたルートアクセスを取り消すことも推奨されます。
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-adm-sudo-moreinfo">
  <title>詳細情報</title>
  <para>
   <command>sudo --help</command>コマンドは、使用可能なコマンドラインオプションの簡単な概要を提供し、<command>man sudoers</command>コマンドは、sudoersとその設定に関する詳細情報を提供します。<filename></filename>
  </para>
 </sect1>
</chapter>
