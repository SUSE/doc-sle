<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="security_pam.xml" version="5.0" xml:id="cha-pam">
 <title>通过 PAM 进行身份验证</title>
 <info>
      <abstract>
        <para>
    Linux 在身份验证进程中使用 PAM（可插拔身份验证模块）作为用户和应用程序之间的中间层。PAM 模块在整个系统范围内可用，因此任何应用程序都可以请求 PAM 模块。本章介绍模块化身份验证机制的工作原理和配置方法。
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
        </dm:bugtracker>
	<dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>

 <sect1 xml:id="sec-security-pam-whatis">
  <title>PAM 是什么？</title>

  <para>
   系统管理员和编程人员经常要将访问限制在系统的某些部分或限制对应用程序某些功能的使用。没有 PAM，每次引入新的身份验证机制（例如 LDAP、Samba 或 Kerberos）时都必须对应用程序进行调整，而此过程非常耗时且容易出错。避免这些缺点的一种方法是将应用程序从身份验证机制中分开并将身份验证委托给集中管理的模块。每当需要使用新的必要身份验证模式时，只要调整或编写合适的 <emphasis>PAM 模块</emphasis>供相关程序使用即可。
  </para>

  <para>
   PAM 的概念包括：
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <emphasis>PAM 模块</emphasis>，用于特定身份验证机制的一组共享库。
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis>模块堆栈</emphasis>，其中包含一个或多个 PAM 模块。
    </para>
   </listitem>
   <listitem>
    <para>
     PAM 感知<emphasis>服务</emphasis>，需要使用模块堆栈或 PAM 模块进行身份验证。通常，服务是用户所熟悉的相应应用程序名称，例如 <command>login</command> 或 <command>su</command>。服务名称 <literal>other</literal> 是默认规则的保留字。
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis>模块参数</emphasis>，可用于影响单个 PAM 模块的执行。
    </para>
   </listitem>
   <listitem>
    <para>
     用于评估执行单个 PAM 模块所产生的每种<emphasis>结果</emphasis>的机制。如果为正值，则执行下一个 PAM 模块。对负值的处理方式取决于配置：<quote>无影响，继续</quote>到<quote>立即终止</quote>之间的所有选项都有效。
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec-pam-struc-files">
  <title>PAM 配置文件的结构</title>

  <para os="sles;sled;osuse">
   可通过两种方式配置 PAM：
  </para>

  <variablelist os="sles;sled;osuse">
   <varlistentry>
    <term>基于文件的配置 (<filename>/etc/pam.conf</filename>)</term>
    <listitem>
     <para>
      每个服务的配置存储在 <filename>/etc/pam.conf</filename> 中。不过，出于维护和可用性原因，<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中未使用此配置模式。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>基于目录的配置 (<filename>/etc/pam.d/</filename>)</term>
    <listitem>
     <para>
      依赖于 PAM 机制的每个服务（或程序）在 <filename>/etc/pam.d/</filename> 目录中都有各自的配置文件。例如，可以在 <filename>/etc/pam.d/sshd</filename> 文件中找到 <systemitem class="daemon">sshd</systemitem> 的服务。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  

  <para>
   <filename>/etc/pam.d/</filename> 下的文件定义用于身份验证的 PAM 模块。每个文件都包含用于定义某个服务的行，而每行最多包含四个组成部分：
  </para>

<screen><replaceable>TYPE</replaceable>  <replaceable>CONTROL</replaceable>
 <replaceable>MODULE_PATH</replaceable>  <replaceable>MODULE_ARGS</replaceable></screen>

  <para>
   组成部分的含义如下：
  </para>

  <variablelist>
   <varlistentry>
    <term><replaceable>TYPE</replaceable>
    </term>
    <listitem>
     <para>
      声明服务的类型。PAM 模块是成批处理的。不同类型的模块具有不同的用途。例如，一个模块检查口令，一个模块校验访问系统的位置，还有一个模块读取用户特定的设置。PAM 可以识别四种不同类型的模块：
     </para>
     <variablelist>
      <varlistentry>
       <term><literal>auth</literal>
       </term>
       <listitem>
        <para>
         检查用户的真实性，传统方法是通过查询口令进行检查，但也可以通过芯片卡或生物特征（例如指纹或虹膜扫描）来实现此目的。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>account</literal>
       </term>
       <listitem>
        <para>
         这种类型的模块会检查用户是否具有使用所请求服务的一般权限。例如，应执行这种检查以确保任何人都不能使用失效帐户的用户名登录。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>password</literal>
       </term>
       <listitem>
        <para>
         这种类型的模块的用途是启用身份验证令牌的更改。这通常是一个口令。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>session</literal>
       </term>
       <listitem>
        <para>
         这种类型的模块负责管理和配置用户会话。这些模块在身份验证前后启动，以记录登录尝试并配置用户的特定环境<phrase os="sles;sled;osuse">（邮件帐户、主目录、系统限制等）</phrase>。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><replaceable>CONTROL</replaceable>
    </term>
    <listitem>
     <para>
      指示 PAM 模块的行为。每个模块都可以具有以下控制标志：
     </para>
     <variablelist>
      <varlistentry>
       <term><literal>required</literal>
       </term>
       <listitem>
        <para>
         在进行身份验证之前，必须先成功处理带有此标志的模块。在处理带有 <literal>required</literal> 标志的模块失败后，将继续处理带有相同标志的所有其他模块，之后用户才会收到有关身份验证尝试失败的消息。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>requisite</literal>
       </term>
       <listitem>
        <para>
         也必须成功处理带有此标志的模块，处理方式在很大程度上与带有 <literal>required</literal> 标志的模块类似。但是，如果某个带有此标志的模块失败，将立即向用户提供反馈并且不再继续处理其他模块。如果成功，则接着处理其他模块，就像带有 <literal>required</literal> 标志的任何模块一样。<literal>requisite</literal> 标志可用作基本过滤器，检查进行正确身份验证所必需的某些条件是否存在。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>sufficient</literal>
       </term>
       <listitem>
        <para>
         在成功处理带有此标志的模块后，请求方应用程序会立即收到处理成功的消息并且不再处理其他模块，但前提是之前所有带有 <literal>required</literal> 标志的模块均未失败。带有 <literal>sufficient</literal> 标志的模块失败没有任何直接后果，所有随后的模块都将按其各自的顺序进行处理。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>optional</literal>
       </term>
       <listitem>
        <para>
         带有此标志的模块成功或失败不会产生任何直接后果。此标志可用于只用来显示消息（例如，通知用户收到了邮件）而不采取任何进一步操作的模块。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>include</literal>
       </term>
       <listitem>
        <para>
         如果给出此标志，则在此处插入指定为参数的文件。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><replaceable>MODULE_PATH</replaceable>
    </term>
    <listitem>
     <para>
      包含 PAM 模块的完整文件名。如果模块位于默认目录 <filename>/lib/security</filename>（对于 <phrase role="productname"><phrase os="sles">SUSE® Linux Enterprise Server</phrase></phrase> 支持的所有 64 位平台，默认目录均为 <filename>/lib64/security</filename>）中，则无需显式指定此文件名。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><replaceable>MODULE_ARGS</replaceable>
    </term>
    <listitem>
     <para>
      包含用于影响 PAM 模块行为的选项的空格分隔列表，例如 <option>debug</option>（启用调试）或 <option>nullok</option>（允许使用空口令）。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   另外，<filename>/etc/security</filename> 下提供了用于 PAM 模块的全局配置文件，它们定义这些模块的确切行为（其中包括 <filename>pam_env.conf</filename> 和 <filename>time.conf</filename>）。使用 PAM 模块的每个应用程序会调用一组 PAM 函数，这些函数随后将处理配置文件中的信息，并将结果返回给请求方应用程序。
  </para>

  <para>
   为了简化 PAM 模块的创建和维护，现已引入 <literal>auth</literal>、<literal>account</literal>、<literal>password</literal> 和 <literal>session</literal> 模块类型的通用默认配置文件。这些配置取自每个应用程序的 PAM 配置。因此，对 <filename>common-*</filename> 中全局 PAM 配置模块进行的更新将在所有 PAM 配置文件中传播，而无需管理员更新每个 PAM 配置文件。
  </para>

  <para>
   您可以使用 <command>pam-config</command> 工具维护全局 PAM 配置文件。此工具可自动将新模块添加到配置、更改现有模块的配置，或者从配置中删除模块（或选项）。它最大限度地减少甚至完全消除了维护 PAM 配置时所需的人工干预。
  </para>

  <note os="sles;sled;osuse">
   <title>64 位和 32 位混合安装</title>
   <para>
    使用 64 位操作系统时，还可以包含 32 位应用程序的运行时环境。在这种情况下，请确保同时安装 32 位版本的 PAM 模块。
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-pam-struc-format">
  <title>sshd 的 PAM 配置</title>

  <para>
   以 sshd 的 PAM 配置为例：
  </para>

  <example xml:id="dat-pam-sshd">
   <title>sshd 的 PAM 配置 (<filename>/etc/pam.d/sshd</filename>)</title>
<screen>#%PAM-1.0 <co xml:id="co-security-pam-sshd-pam-line"/>
auth     requisite      pam_nologin.so                              <co xml:id="co-security-pam-sshd-pam-nologin"/>
auth     include        common-auth                                 <co xml:id="co-security-pam-sshd-common-auth"/>
account  requisite      pam_nologin.so                              <xref xrefstyle="select:nopage" linkend="co-security-pam-sshd-pam-nologin"/>
account  include        common-account                              <xref xrefstyle="select:nopage" linkend="co-security-pam-sshd-common-auth"/>
password include        common-password                             <xref linkend="co-security-pam-sshd-common-auth" xrefstyle="select:nopage"/>
session  required       pam_loginuid.so                             <co xml:id="co-security-pam-sshd-pam-loginuid"/>
session  include        common-session                              <xref linkend="co-security-pam-sshd-common-auth" xrefstyle="select:nopage"/>
session  optional       pam_lastlog.so   silent noupdate showfailed <co xml:id="co-security-pam-sshd-lastlog"/></screen>
   <calloutlist>
    <callout arearefs="co-security-pam-sshd-pam-line">
     <para>
      为 PAM 1.0 声明此配置文件的版本。这只是一项惯例，但将来可以使用它来检查版本。
     </para>
    </callout>
    <callout arearefs="co-security-pam-sshd-pam-nologin">
     <para>
      检查 <filename>/etc/nologin</filename> 是否存在。如果不存在，则除 <systemitem class="username">root</systemitem> 以外的任何用户都无法登录。
     </para>
    </callout>
    <callout arearefs="co-security-pam-sshd-common-auth">
     <para>
      引用四种模块类型的配置文件：<filename>common-auth</filename>、<filename>common-account</filename>、<filename>common-password</filename> 和 <filename>common-session</filename>。这 4 个文件包含每种模块类型的默认配置。
     </para>
    </callout>
    <callout arearefs="co-security-pam-sshd-pam-loginuid">
     <para>
      设置已经过身份验证的进程的登录 UID 进程属性。
     </para>
    </callout>
    <callout arearefs="co-security-pam-sshd-lastlog">
     <para>
      显示有关用户上次登录的信息。
     </para>
    </callout>
   </calloutlist>
  </example>

  <para>
   通过包含配置文件而不是将每个模块单独添加到相应的 PAM 配置，您可以在管理员更改默认设置后自动获取更新的 PAM 配置。以前，在 PAM 发生更改或安装新应用程序后，您需要手动调整所有应用程序的所有配置文件。而现在 PAM 配置是通过中央配置文件进行的，每个服务的 PAM 配置都将自动继承所有的更改。
  </para>

  <para>
   第一个 include 文件 (<filename>common-auth</filename>) 调用 <literal>auth</literal> 类型的三个模块：<systemitem class="library">pam_env.so</systemitem>、<systemitem class="library">pam_gnome_keyring.so</systemitem> 和 <systemitem class="library">pam_unix.so</systemitem>。请参见 <xref linkend="dat-pam-common-auth"/>。
  </para>

  <example xml:id="dat-pam-common-auth">
   <title><literal>auth</literal> 部分的默认配置 (<filename>common-auth</filename>)</title>
<screen>auth  required  pam_env.so                   <co xml:id="co-security-pam-sshd-pam-env"/>
auth  optional  pam_gnome_keyring.so         <co xml:id="co-security-pam-sshd-gnome"/>
auth  required  pam_unix.so  try_first_pass <co xml:id="co-security-pam-sshd-pam-unix"/></screen>
  </example>

  <calloutlist>
   <callout arearefs="co-security-pam-sshd-pam-env">
    <para>
     <systemitem class="library">pam_env.so</systemitem> 装载 <filename>/etc/security/pam_env.conf</filename> 以设置此文件中指定的环境变量。它可用于将 <envar>DISPLAY</envar> 变量设置为正确的值，因为 <systemitem class="library">pam_env</systemitem> 模块知道登录发生的位置。
    </para>
   </callout>
   <callout arearefs="co-security-pam-sshd-gnome">
    <para>
     <systemitem class="library">pam_gnome_keyring.so</systemitem> 根据 GNOME 密钥环检查用户的登录名和口令
    </para>
   </callout>
   <callout arearefs="co-security-pam-sshd-pam-unix">
    <para>
     <systemitem class="library">pam_unix</systemitem> 根据 <filename>/etc/passwd</filename> 和 <filename>/etc/shadow</filename> 检查用户的登录名和口令。
    </para>
   </callout>
  </calloutlist>

  <para>
   整个 <literal>auth</literal> 模块堆栈处理完后，<systemitem class="daemon">sshd</systemitem> 才会获得有关登录是否成功的反馈。堆栈中带有 <literal>required</literal> 控制标志的所有模块都必须成功处理，<systemitem class="daemon">sshd</systemitem> 才能收到有关正面结果的消息。如果其中的某个模块不成功，则仍将继续处理整批模块，在此之后 <systemitem class="daemon">sshd</systemitem> 才能得到处理失败的通知。
  </para>

  <para>
   成功处理所有 <literal>auth</literal> 类型的模块后，将处理另一条 include 语句，在本例中为<xref linkend="dat-pam-common-account"/>中的语句。<filename>common-account</filename> 仅包含一个模块：<literal>pam_unix</literal>。如果 <literal>pam_unix</literal> 返回的结果证明用户存在，则 sshd 会收到一条处理成功的消息，然后处理下一批模块 (<literal>password</literal>)，如<xref os="sles;sled;osuse" linkend="dat-pam-common-password"/>中所示。
  </para>

  <example xml:id="dat-pam-common-account">
   <title><literal>account</literal> 部分的默认配置 (<filename>common-account</filename>)</title>
<screen>account  required  pam_unix.so  try_first_pass</screen>
  </example>

  

  <example os="sles;sled;osuse" xml:id="dat-pam-common-password">
   <title><literal>password</literal> 部分的默认配置 (<filename>common-password</filename>)</title>
<screen>password  requisite  pam_cracklib.so
password  optional   pam_gnome_keyring.so  use_authtok
password  required   pam_unix.so  use_authtok nullok shadow try_first_pass</screen>
  </example>

  <para>
   同样，<systemitem class="daemon">sshd</systemitem> 的 PAM 配置仅涉及一条 include 语句，该语句引用了 <literal>password</literal> 模块的默认配置（位于 <filename>common-password</filename> 中）。每当应用程序请求获取身份验证令牌的更改信息时，都必须成功完成这些模块（控制标志为 <literal>requisite</literal> 和 <literal>required</literal>）。
  </para>

  <para>
   更改口令或另一个身份验证令牌需要进行安全检查。这项检查是通过 <filename>pam_cracklib</filename> 模块实现的。随后使用的 <filename>pam_unix</filename> 模块带有来自 <filename>pam_cracklib</filename> 的任何旧口令和新口令，因此用户在更改口令后无需再次进行身份验证。此过程可确保不能绕过 <filename>pam_cracklib</filename> 所执行的检查。每当配置了 <literal>account</literal> 或 <literal>auth</literal> 类型来指出口令失效时，还应使用 <literal>password</literal> 模块。
  </para>

  <example os="sles;sled;osuse" xml:id="dat-pam-common-session">
   <title><literal>session</literal> 部分的默认配置 (<filename>common-session</filename>)</title>
<screen>session  required  pam_limits.so
session  required  pam_unix.so  try_first_pass
session  optional  pam_umask.so
session  optional  pam_systemd.so
session  optional  pam_gnome_keyring.so auto_start only_if=gdm,gdm-password,lxdm,lightdm
session  optional  pam_env.so</screen>
  </example>

  

  <para>
   最后，调用 <literal>session</literal> 类型的模块（捆绑在 <filename>common-session</filename> 文件中）以根据相关用户的设置来配置会话。<filename>pam_limits</filename> 模块装载文件 <filename>/etc/security/limits.conf</filename>，该文件可以定义某些系统资源的使用限制。再次处理 <filename>pam_unix</filename> 模块。<filename>pam_umask</filename> 模块可用于设置文件模式创建掩码。由于此模块带有 <literal>optional</literal> 标志，因此此模块的失败将不会影响整个会话模块堆栈的成功完成。当用户注销时，将再次调用 <literal>session</literal> 模块。
  </para>
 </sect1>
 <sect1 xml:id="sec-pam-struc-conf">
  <title>PAM 模块的配置</title>

  <para>
   某些 PAM 模块是可配置的。配置文件位于 <filename>/etc/security</filename> 中。本节简要介绍与 sshd 示例相关的配置文件 — <filename>pam_env.conf</filename> 和 <filename>limits.conf</filename>。
  </para>

  <sect2 xml:id="sec-pam-struc-conf-pamenv">
   <title>pam_env.conf</title>
   <para>
    <filename>pam_env.conf</filename> 可用于定义每次调用 <systemitem>pam_env</systemitem> 模块时为用户设置的标准化环境。它允许您使用以下语法预设环境变量：
   </para>
<screen><replaceable>VARIABLE</replaceable>  [DEFAULT=<replaceable>VALUE</replaceable>]  [OVERRIDE=<replaceable>VALUE</replaceable>]</screen>
   <variablelist>
    <varlistentry>
     <term><replaceable>VARIABLE</replaceable>
     </term>
     <listitem>
      <para>
       要设置的环境变量的名称。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><systemitem>[DEFAULT=&lt;value&gt;]</systemitem>
     </term>
     <listitem>
      <para>
       管理员要设置的默认 <replaceable>VALUE</replaceable>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><systemitem>[OVERRIDE=&lt;value&gt;]</systemitem>
     </term>
     <listitem>
      <para>
       可能由 <systemitem>pam_env</systemitem> 查询并设置的值，覆盖默认值。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    有关如何使用 <systemitem>pam_env</systemitem> 的典型示例是 <envar>DISPLAY</envar> 变量的调整，每当发生远程登录时，该变量就会改变。<xref linkend="dat-pam-pamenv"/>中显示了这一点。
   </para>
   <example xml:id="dat-pam-pamenv">
    <title>pam_env.conf</title>
<screen>
REMOTEHOST  DEFAULT=localhost          OVERRIDE=@{PAM_RHOST}
DISPLAY     DEFAULT=${REMOTEHOST}:0.0  OVERRIDE=${DISPLAY}
</screen>
   </example>
   <para>
    第一行将 <envar>REMOTEHOST</envar> 变量的值设置为 <literal>localhost</literal>，每当 <filename>pam_env</filename> 不能确定任何其他值时就会使用该值。<envar>DISPLAY</envar> 变量又包含 <envar>REMOTEHOST</envar> 的值。在 <filename>/etc/security/pam_env.conf</filename> 的注释中可以找到详细信息。
   </para>
  </sect2>



  <sect2 os="sles;sled;osuse" xml:id="sec-pam-struc-conf-pammount">
   <title>pam_mount.conf.xml</title>
   <para>
    <systemitem>pam_mount</systemitem> 用于在登录期间挂载用户主目录，以及在注销期间从中心文件服务器用来存放所有用户主目录的环境中卸载这些主目录。使用此方法就无需挂载一个完整的 <filename>/home</filename> 目录（通过该目录可访问所有用户主目录），而是仅挂载即将登录的用户的主目录。
   </para>
   <para>
    安装 <systemitem>pam_mount</systemitem> 后，<filename>/etc/security</filename> 中会提供 <filename>pam_mount.conf.xml</filename> 的模板。在手册页 <command>man 5
    pam_mount.conf</command> 中可以找到元素的说明。
   </para>
   <para>
    可以使用 YaST 完成此功能的基本配置。选择<menuchoice><guimenu>网络设置</guimenu> <guimenu>Windows 域成员资格</guimenu> <guimenu>专家设置</guimenu></menuchoice>以添加文件服务器。<phrase os="sles">请参见<xref linkend="sec-samba-client-inst"/>。</phrase>
   </para>
   <note os="sles;sled">
    <title>LUKS2 支持</title>
    <para>
     <command>cryptsetup</command> 2.0 中已添加了 LUKS2 支持；从 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 12 SP3 开始，<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 在 <systemitem>pam_mount</systemitem> 中包含了 LUKS2 支持。
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-pam-struc-pamlimits">
   <title>limits.conf</title>
   <para>
    可以在 <systemitem>pam_limits</systemitem> 模块将会读取的 <filename>limits.conf</filename> 中基于用户或组设置系统限制。该文件可让您设置硬限制（即不能超出的限制）和软限制（即可以暂时超出的限制）。有关语法和选项的详细信息，请参见 <filename>/etc/security/limits.conf</filename> 中的注释。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-pam-pam-config">
  <title>使用 pam-config 配置 PAM</title>

  <para>
   <command>pam-config</command> 工具可帮助您配置全局 PAM 配置文件 (<filename>/etc/pam.d/common-*</filename>) 和多个选定的应用程序配置。如需受支持模块的列表，请使用 <command>pam-config --list-modules</command> 命令。使用 <command>pam-config</command> 命令可以维护 PAM 配置文件。可将新模块添加到 PAM 配置，删除其他模块，或修改这些模块的选项。更改全局 PAM 配置文件时，无需手动调整单个应用程序的 PAM 设置。
  </para>

  <para>
   <command>pam-config</command> 的简单用例包括：
  </para>

  <procedure>
   <step>
    <formalpara>
     <title>自动生成全新的 Unix 样式 PAM 配置。</title>
     <para>
      让 pam-config 创建最简单的可行设置，供您以后扩展。<command>pam-config --create</command> 命令创建简单的 Unix 身份验证配置。pam-config 不负责维护的现有配置文件将被重写，但会以 <literal>*.pam-config-backup</literal> 的形式保留备份副本。
     </para>
    </formalpara>
   </step>
   <step>
    <formalpara>
     <title>添加新的身份验证方法。</title>
     <para>
      可通过简单的 <command>pam-config --add
      --ldap</command> 命令将新的身份验证方法（例如 LDAP）添加到 PAM 模块堆栈。在适用的情况下，LDAP 将添加到所有 <filename>common-*-pc</filename> PAM 配置文件中。
     </para>
    </formalpara>
   </step>
   <step>
    <formalpara>
     <title>添加调试以进行测试。</title>
     <para>
      为确保新的身份验证过程按预期工作，请对所有 PAM 相关操作开启调试。<command>pam-config
      --add --ldap-debug</command> 为 LDAP 相关的 PAM 操作启用调试。<phrase os="sles;sled;osuse">在 <systemitem class="daemon">systemd</systemitem> 日志中可以看到调试输出（请参见<xref linkend="cha-journalctl"/>）。</phrase>
     </para>
    </formalpara>
   </step>
   <step>
    <formalpara>
     <title>查询您的设置。</title>
     <para>
      在最终应用您的新 PAM 设置之前，请检查该设置是否包含您要添加的所有选项。<command>pam-config --query
      --</command><replaceable>MODULE</replaceable> 命令列出所要查询的 PAM 模块的类型和选项。
     </para>
    </formalpara>
   </step>
   <step>
    <formalpara>
     <title>去除调试选项。</title>
     <para>
      最后，当您对设置性能完全满意时，请从设置中去除调试选项。<command>pam-config --delete
      --ldap-debug</command> 命令为 LDAP 身份验证禁用调试。如果您为其他模块添加了调试选项，请使用类似的命令关闭这些选项。
     </para>
    </formalpara>
   </step>
  </procedure>

  <para>
   有关 <command>pam-config</command> 命令和可用选项的详细信息，请参见 <command>pam-config(8)</command> 的手册页。
  </para>
 </sect1>
 <sect1 xml:id="sec-pam-manual-config">
  <title>手动配置 PAM</title>

  <para>
   如果您偏向于手动创建或维护 PAM 配置文件，请确保对这些文件禁用 <command>pam-config</command>。
  </para>

  <para>
   当您使用 <command>pam-config --create</command> 命令从头开始创建 PAM 配置文件时，此命令会创建从 <filename>common-<replaceable>*</replaceable></filename> 到 <filename>common-<replaceable>*</replaceable>-pc</filename> 文件的符号链接。<command>pam-config</command> 仅修改 <filename>common-<replaceable>*</replaceable>-pc</filename> 配置文件。去除这些符号链接会有效禁用 pam-config，因为 pam-config 仅对 <filename>common-<replaceable>*</replaceable>-pc</filename> 文件运行，而在没有符号链接的情况下，这些文件不起作用。
  </para>
  <warning>
   <title>在配置中包含 <filename>pam_systemd.so</filename></title>
   <para>
    如果您要创建自己的 PAM 配置，请务必包含配置为 <literal>session
    optional</literal> 的 <literal>pam_systemd.so</literal>。不包含 <literal>pam_systemd.so</literal> 可能会导致 <systemitem class="daemon">systemd</systemitem> 任务限制出现问题。有关细节，请参见 <literal>pam_systemd.so</literal> 的手册页。
   </para>
  </warning>
 </sect1>
 <sect1 os="sles;sled;osuse" xml:id="sec-pam-info">
  <title>更多信息</title>

  <para>
   安装 <systemitem>pam-doc</systemitem> 软件包后，可以在 <filename>/usr/share/doc/packages/pam</filename> 目录中找到以下附加文档：
  </para>

  <variablelist>
   <varlistentry>
    <term>README 文件</term>
    <listitem>
     <para>
      在此目录的顶层，有一个 <filename>modules</filename> 子目录提供了可用 PAM 模块的 README 文件。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Linux-PAM 系统管理员指南</term>
    <listitem>
     <para>
      此文档包含系统管理员应该了解的有关 PAM 的所有内容。它讨论了一系列主题，从配置文件的语法到 PAM 的安全特性。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Linux-PAM 模块编写人员手册</term>
    <listitem>
     <para>
      此文档从开发人员的角度对多个主题进行了总结，提供了有关如何编写符合标准的 PAM 模块的信息。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Linux-PAM 应用程序开发人员指南</term>
    <listitem>
     <para>
      此文档包含要使用 PAM 库的应用程序开发人员所需了解的所有内容。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>PAM 手册页</term>
    <listitem>
     <para>
      PAM 及其各个模块都随附了手册页，其中全面概述了所有组件的功能。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 
</chapter>
