<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xml:id="cha-klp" xml:lang="en">
 <title>Live kernel patching with &klpa;</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
  <abstract>
   <para>
    This document describes the basic principles of the &klp; (&klpa;)
    technology, and provides usage guidelines for the &slea; Live Patching
    service.
   </para>
  </abstract>
 </info>
 <para>
  &klpa; makes it possible to apply latest security updates to Linux kernels
  without rebooting. This maximizes system uptime and availability crucial for
  mission-critical systems.
 </para>
 <para>
  The information provided in this document relates to the &amd64;/&intel64;
  and &power; architectures. &klpa; is supported on the Xen hypervisor.
 </para>
 <sect1 xml:id="sec-klp-advantages">
  <title>Advantages of &klp;</title>

  <para>
   &klp; offers several advantages.
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Keeping a large numbers of servers automatically up-to-date is essential
     for organizations obtaining or maintaining certain compliance
     certifications.
    </para>
   </listitem>
   <listitem>
    <para>
     Companies that work with service-level agreement contracts must guarantee
     a specific level of their system accessibility and uptime. Live patching
     makes it possible to patch systems without incurring downtime.
    </para>
   </listitem>
   <listitem>
    <para>
     Updating a system requires time and system administration skills. Live
     patching takes care of routine maintenance, saving both costs and effort.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec-klp-overview">
  <title>&klp; overview</title>

  <para>
   Kernel live patches are delivered as packages with modified code that are
   separate from the main kernel package. The live patches are cumulative,
   meaning that the latest patch contains all fixes from the previous patches
   for the kernel package. Each kernel live package is tied to the exact kernel
   revision for which it is issued. The live patch package version number
   increases with every addition of fixes.
  </para>

  <para>
   Live patches contain the critical fixes, and they do not replace regular
   kernel updates that require reboot. Consider live patches as temporary
   measures that protect the kernel until a proper kernel update and a reboot
   is performed. The diagram below illustrates the overall relationship between
   live patches and kernel updates. The list of CVE's and defect reports
   addressed by the currently active live patch can be viewed using the
   <command>klp -v patches</command> command.
  </para>

  <para>
   It is possible to have multiple versions of the kernel package installed
   along with their live patches. These packages do not conflict. It is
   possible to install updated kernel packages along with live patches for the
   running kernel.In this case, you may be prompted to reboot the system. Users
   with &klp; users eligible for technical support as long as there are live
   patch updates for the running kernel. See below for detailed information
   about the live patch expiration dates.
  </para>

  <para>
   With &klp; activated, every kernel update comes with a live patch package.
   This live patch does not contain any fixes and serves as a seed for future
   live patches for the corresponding kernel. These empty seed patches are
   called <literal>initial patches</literal>.
  </para>

  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="klp.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="klp.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </informalfigure>
 </sect1>
 <sect1 xml:id="sec-klp-enable-with-yast2">
  <title>Activating &klp; using &yast;</title>

  <para>
   To activate &klp; on your system, you need to have an active &slsa; and &klp;
   subscriptions. Visit <link xlink:href="&scc-url;">&scc;</link> to check the
   status of your subscriptions and obtain an registration code for the &klp;
   subscription.
  </para>

  <para>
   To activate &klp; on your system, follow these steps:
  </para>

  <procedure>
   <step>
    <para>
     Run the <command>yast2 registration</command> command and click
     <guimenu>Select Extensions</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Select <guimenu>SUSE Linux Enterprise Live Patching 15</guimenu> in the
     list of available extensions and click <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Confirm the license terms and click <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Enter your &slea; Live Patching registration code and click
     <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Check the <guimenu>Installation Summary</guimenu> and selected
     <guimenu>Patterns</guimenu>. The patterns <systemitem>Live
     Patching</systemitem> and <systemitem>SLE Live Patching Lifecycle
     Data</systemitem> should be automatically selected for installation along
     with additional packages to satisfy dependencies.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Accept</guimenu> to complete the installation. This will
     install the base &klp; components on your system, the initial live patch,
     and the required dependencies.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-klp-enable-cli">
  <title>Activating &klp; from the command line</title>

  <para>
  To activate &klp;, you need to have an active &slsa; and &klp; subscriptions.
   Visit <link xlink:href="&scc-url;">&scc;</link> to check the status of your
   subscriptions and obtain an registration code for the &klp; subscription.
  </para>
  <procedure>
  <step>
  <para>
  Run <command>sudo SUSEConnect --list-extensions</command> and note
  the exact command for activating &slsa; live patching (for example:
  <command>SUSEConnect -p sle-module-live-patching/15.3/x86_64</command>).
  </para>
  </step>
  <step>
  <para>
  Activate the &slsa; live patching using the obtained command followed by
  <option>-r
  <replaceable>LIVE_PATCHING_REGISTRATION_CODE</replaceable></option>, for example:
  </para>
<screen>SUSEConnect -p sle-module-live-patching/15.3/x86_64 -r <replaceable>LIVE_PATCHING_REGISTRATION_CODE</replaceable></screen>  
  </step>
  <step>
  <para>
  Install the required packages and dependencies using the command <command>zypper install -t pattern lp_sles</command>
  </para>
  </step>
  </procedure>
  <para>
  At this point the system is live-patched. Here is how the process works behind
  the scenes. When the package installation system detects that there is a
  live-patchable kernel installed and that there is a live patch for it in the
  channel, the system selects the live patch for installation. The kernel
  receives the live patch fixes as part of the package installation. The kernel
  gets live-patched evebn efore the product installation is complete. 
  </para>
 </sect1>
 <sect1 xml:id="sec-klp-install-patch-update">
  <title>Installing and removing patches</title>

  <para>
   This section describes how to find, install, and remove &klpa; patches.
  </para>

  <sect2 xml:id="sec-klp-install">
   <title>Installing a &klpa; patch</title>
   <procedure>
    <step>
     <para>
      Before installing new patches, run the <command>klp status</command>
      command to query current status, which must be <literal>ready</literal>
      and not <literal>in_progress</literal>. You cannot apply new patches
      until previous patch installations are completed. Invocations of the old
      kernel functions are not completely eliminated until all sleeping
      processes wake up and get out of the way. This can take a considerable
      amount of time. Sleeping processes that use the old kernel functions are
      not considered a security issue. (See
      <xref linkend="sec-klp-exec-threads"/> for information on managing
      prolonged <literal>in_progress</literal> states.)
     </para>
    </step>
    <step>
     <para>
      Use the normal package management system, <command>zypper</command> or
      &yast;, to view and install available patches. The following example
      searches for available patches, and then installs the most recent patch.
      It is not necessary to install all patches in order; when there are
      multiple patches available install the most recent.
     </para>
<screen>&prompt.sudo;zypper se kernel-livepatch 
| kernel-livepatch-5_3_18-8_16-default  | Kernel live patch module  | package   
| kernel-livepatch-5_3_18-8_19-default  | Kernel live patch module  | package   
| kernel-livepatch-5_3_18-8_22-default  | Kernel live patch module  | package

&prompt.sudo;zypper in kernel-livepatch-5_3_18-8_22-default</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-klp-remove">
   <title>Removing a &klpa; patch</title>
   <para>
    If you need to remove a &klpa; patch, use <command>zypper</command> just as
    you would for any other package. List your installed live patch packages by
    using <command>zypper</command> to search for
    <literal>kernel-livepatch</literal>:
   </para>
<screen>&prompt.sudo;zypper se kernel-livepatch 
  | kernel-livepatch-5_3_18-8_16-default  | Kernel live patch module  | package   
  | kernel-livepatch-5_3_18-8_19-default  | Kernel live patch module  | package   
i | kernel-livepatch-5_3_18-8_22-default  | Kernel live patch module  | package
</screen>
   <procedure>
    <step>
     <para>
      Remove the patch using <command>zypper</command>:
     </para>
<screen>&prompt.sudo;zypper rm kernel-livepatch-5_3_18-8_22-default</screen>
    </step>
    <step>
     <para>
      Wait for <systemitem>initrd</systemitem> to automatically rebuild, then
      reboot the machine.
     </para>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-klp-klp">
  <title>The <command>klp</command> tool</title>

  <para>
   Several &klp; management tasks can be simplified with the
   <command>klp</command> tool. The available commands are:
  </para>

  <variablelist>
   <varlistentry>
    <term><command>klp status</command></term>
    <listitem>
     <para>
      Displays the overall status of &klp; (<literal>ready</literal> or
      <literal>in_progress</literal>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>klp patches</command></term>
    <listitem>
     <para>
      Displays the list of loaded &klpa; patches.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>klp blocking</command></term>
    <listitem>
     <para>
      Lists processes that are preventing &klp; from finishing. By default only
      the PIDs are listed. Specifying <option>-v</option> prints command lines
      if available. <option>-vv</option> displays stack traces.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   For detailed information, see <command>man klp</command>.
  </para>
 </sect1>
 <sect1 xml:id="sec-klp-exec-threads">
  <title>Stuck kernel execution threads</title>

  <para>
   Kernel threads must be prepared to handle &klp;. Third-party software may
   not support &klp;, and may spawn kernel execution threads. These threads
   will block the patching process indefinitely. As an emergency measure, you
   may force the completion of the patching process without waiting for all
   execution threads to cross the safety checkpoint by writing
   <literal>0</literal> into
   <filename>/sys/kernel/livepatch/*/transition/</filename> (replacing the
   asterisk wildcard with your file name). Consult &suse; support before
   performing this procedure.
  </para>
 </sect1>
 <sect1 xml:id="sec-klp-lifecycle">
  <title>Patch lifecycle</title>

  <para>
   Expiration dates of live patches can be accessed with <command>zypper
   lifecycle</command>. (Make sure that the package
   <package>lifecycle-data-sle-module-live-patching</package> is installed.)
  </para>

  <para>
   When the expiration date of a patch is reached, no further live patches for
   this kernel version will be supplied. Plan an update of your kernel before
   the end of the live patch lifecycle period.
  </para>

  <para>
   For details about <command>zypper lifecycle</command>, see the
   <emphasis>Showing Life Cycle Information</emphasis> in the <emphasis>Admin
   Guide</emphasis>.
  </para>
 </sect1>
 <sect1 xml:id="sec-klp-scope">
  <title>Scope of &klp; technology</title>

  <para>
   &klp; is based on replacing functions. Data structure alteration can be
   accomplished only indirectly with &klp;. As a result, changes to kernel data
   structure require special care and, if the change is too large, rebooting
   might be required. &klp; also might not be able to handle situations where
   one compiler is used to compile the old kernel and another compiler is used
   for compiling the patch.
  </para>

  <para>
   Because of the way &klp; works, support for third-party modules that are
   spawning kernel threads is limited.
<!--Sending SIGSTOP and SIGCONT signals to processes in D process state
  (uninterruptible sleep) does not make them to cross the kernel/user space
  boundary and does not have the intended effect.-->
  </para>
 </sect1>
 <sect1 xml:id="sec-klp-scope-patching">
  <title>Scope of &slea; live patching</title>

  <para>
   Fixes for SUSE Common Vulnerability Scoring System (CVSS; SUSE CVSS is based
   on the CVSS v3.0 system) level 7+ vulnerabilities and bug fixes related to
   system stability or data corruption will be shipped in the scope of SLE Live
   Patching. It might not be possible to produce a live patch for all kinds of
   fixes fulfilling the above criteria. SUSE reserves the right to skip fixes
   where production of a kernel live patch is unviable because of technical
   reasons. For more information on CVSS, which is the base for the SUSE CVSS
   rating, see <link xlink:href="https://www.first.org/cvss/"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec-klp-support-interaction">
  <title>Interaction with the support processes</title>

  <para>
   While resolving a technical difficulty with &suse; support, you may receive
   a Program Temporary Fix (PTF). PTFs may be issued for various packages
   including those forming the base of &slea; Live Patching.
  </para>

  <para>
   &klp; PTFs complying with the conditions described in the previous section
   can be installed as usual and &suse; will ensure that the system in question
   does not need to be rebooted and that future live updates are applied
   cleanly.
  </para>

  <para>
   PTFs issued for the base kernel disrupt the live patching process. First,
   installing the PTF kernel means a reboot as the kernel cannot be replaced as
   a whole at runtime. Second, another reboot is needed to replace the PTF with
   any regular maintenance updates for which the live patches are issued.
  </para>

  <para>
   PTFs for other packages in &slea; Live Patching can be treated like regular
   PTFs with the usual guarantees.
  </para>
 </sect1>
</chapter>
