<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<sect1 version="5.0" xml:id="createprofile-completeconf"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Adding complete configurations</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

   <para>
    For many applications and services you may have a
    configuration file which should be copied to the appropriate location on
    the installed system. For example, if you are installing a Web server, you may have a server configuration file
    (<filename>httpd.conf</filename>).
   </para>

   <para>
    Using this resource, you can embed the file into the control file by
    specifying the final path on the installed system. &yast; will copy
    this file to the specified location.
   </para>

   <para>
    This feature requires the <package>autoyast2</package> package to be
    installed. If the package is missing, &ay; will automatically install the
    package if it is missing.
   </para>

   <para>
    You can specify the <literal>file_location</literal> where the file
    should be retrieved from. This can also be a location on the network
    such as an HTTP server:
    <literal>&lt;file_location&gt;http://my.server.site/issue&lt;/file_location&gt;</literal>.
   </para>

   <para>
   It is also possible to specify a local file using the <literal>relurl://</literal> prefix, for example: <literal>&lt;file_location&gt;relurl://path/to/file.conf&lt;/file_location&gt;</literal>.
   </para>

   <para>
    You can create directories by specifying a <literal>file_path</literal>
    that ends with a slash.
   </para>

   <example>
    <title>Dumping files into the installed system</title>
<screen>&lt;files config:type="list"&gt;
  &lt;file&gt;
    &lt;file_path&gt;/etc/apache2/httpd.conf&lt;/file_path&gt;
    &lt;file_contents&gt;

&lt;![CDATA[
some content
]]&gt;

    &lt;/file_contents&gt;
  &lt;/file&gt;
  &lt;file&gt;
    &lt;file_path&gt;/mydir/a/b/c/&lt;/file_path&gt; &lt;!-- create directory --&gt;
  &lt;/file&gt;
&lt;/files&gt;</screen>
   </example>

   <para>
    A more advanced example is shown below. This configuration will create a
    file using the content supplied in <literal>file_contents</literal> and
    change the permissions and ownership of the file. After the file has
    been copied to the system, a script is executed. This can be used to
    modify the file and prepare it for the client's environment.
   </para>

   <example>
    <title>Dumping files into the installed system</title>
<screen>&lt;files config:type="list"&gt;
  &lt;file&gt;
    &lt;file_path&gt;/etc/someconf.conf&lt;/file_path&gt;
    &lt;file_contents&gt;

&lt;![CDATA[
some content
]]&gt;

    &lt;/file_contents&gt;
    &lt;file_owner&gt;&exampleuser_plain;.users&lt;/file_owner&gt;
    &lt;file_permissions&gt;444&lt;/file_permissions&gt;
    &lt;file_script&gt;
      &lt;interpreter&gt;shell&lt;/interpreter&gt;
      &lt;source&gt;

&lt;![CDATA[
#!/bin/sh

echo "Testing file scripts" &gt;&gt; /etc/someconf.conf
df
cd /mnt
ls
]]&gt;

      &lt;/source&gt;
    &lt;/file_script&gt;
  &lt;/file&gt;
&lt;/files&gt;</screen>
   </example>
  </sect1>
