<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!--
  toms 2015-08-31: FATE#315161

  Needs to be merged with the other chapters about upgrading
-->
<chapter version="5.0" xml:id="cha.update.online"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Upgrading Online</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
  <abstract>
   <para>
    &suse; offers an intuitive graphical and a simple command line tool to
    upgrade a running system to a new service pack. They provide support
    for <quote>rollback</quote> of service packs and more. This chapter
    explains how to do a service pack upgrade step by step with these tools.
   </para>
  </abstract>
 </info>
 <sect1 xml:id="sec.update.migr.conceptual-overview">
  <title>Conceptual Overview</title>

  <para>
   &suse; releases new service packs for the &sle; family at regular intervals.
   To make it easy for customers to migrate to a new service pack and minimize
   downtime, &suse; supports migrating online while the system is running.
  </para>

  <para>
   Starting with &slea;&nbsp;12, &yast; Wagon has been replaced by
   &yast; migration (GUI) and Zypper migration (command line). The following
   features are supported:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     System always in a defined state until the first RPM is updated
    </para>
   </listitem>
   <listitem>
    <para>
     Canceling is possible until the first RPM is updated
    </para>
   </listitem>
   <listitem>
    <para>
     Simple recovery, if there is an error
    </para>
   </listitem>
   <listitem>
    <para>
     <quote>Rollback</quote> via system tools; no backup/restore needed
    </para>
   </listitem>
   <listitem>
    <para>
     Use of all active repositories
    </para>
   </listitem>
   <listitem>
    <para>
     The ability to skip a service pack
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec.update.migr.workflow">
  <title>Service Pack Migration Workflow</title>

  <para>
   A service pack migration can be executed by either &yast;,
   <command>zypper</command>, or &ay;.
  </para>

  <para>
   Before you can start a service pack migration, your system must be
   registered at the &scc; or a local &rmt; server.  &suse; Manager can
   also be used.
  </para>

  <para>
   Regardless of the method, a service pack migration consists of the following
   steps:
  </para>

  <orderedlist>
   <listitem>
    <para>
     Find possible migration targets on your registered systems.
    </para>
   </listitem>
   <listitem>
    <para>
     Select one migration target.
    </para>
   </listitem>
   <listitem>
    <para>
     Request and enable new repositories.
    </para>
   </listitem>
   <listitem>
    <para>
     Run the migration.
    </para>
   </listitem>
  </orderedlist>

<!--<remark>toms 2015-09-04: FATE#318636</remark>
      <remark>2015-09-17: better avoid this para for now</remark>
    <para>The list of migration targets depends on products which you have
      installed. Depending on your use case and on the status of your system,
      it is possible to skip a service pack and, for example, upgrade from
      &slea;12 GA straight to &slea;12&nbsp;SP2.
    </para>-->

  <para>
   The list of migration targets depends on the products you have installed and
   registered. If you have an extension installed for which the new SP is not
   yet available, it could be that no migration target is offered to you.
  </para>

  <para>
   The list of migration targets available for your host will always be
   retrieved from the &scc; and depend on products or extensions installed.
  </para>
 </sect1>
 <sect1 xml:id="sec.update.migr.cancel.spm">
  <title>Canceling Service Pack Migration</title>

  <para>
   A service pack migration can only be cancelled at specific stages during the
   migration process:
  </para>

  <orderedlist>
   <listitem>
    <para>
     Until the package upgrade starts, there are only minimal changes on the
     system, like for services and repositories. Restore
     <filename>/etc/zypp/repos.d/*</filename> to revert to the former state.
    </para>
   </listitem>
   <listitem>
    <para>
     After the package upgrade starts, you can revert to the former state by
     using a Snapper snapshot (see <xref linkend="cha.snapper"/>).
    </para>
   </listitem>
   <listitem>
    <para>
     After the migration target was selected, &scc; changes the repository
     data. To revert this state manually, use <command>SUSEConnect</command>
     <option>--rollback</option>.
    </para>
   </listitem>
  </orderedlist>
 </sect1>
 <sect1 xml:id="sec.update.migr.yast.onlinemigr">
  <title>Upgrading with the Online Migration Tool (&yast;)</title>

  <para>
   To perform a service pack migration with &yast;, use the <guimenu>Online
   Migration</guimenu> tool. By default, &yast; does not install any packages
   from a third-party repository. If a package was installed from a third-party
   repository, &yast; prevents packages from being replaced with the same
   package coming from &suse;.
  </para>

  <note>
   <title>Reduce Installation Size</title>
   <para>
    When performing the SP migration, &yast; will install all recommended
    packages. Especially in the case of custom minimal installations, this may
    increase the installation size of the system significantly.
   </para>
   <para>
    To change this default behavior and allow only required packages, adjust
    <filename>/etc/zypp/zypp.conf</filename> and set the following variable:
   </para>
<screen>solver.onlyRequires = true
installRecommends=false # or commented</screen>
  </note>

  <para>
   This changes the behavior of all package operations, such as the
   installation of patches or new packages.
  </para>

  <para>
   To start the service pack migration, do the following:
  </para>

  <procedure xml:id="pro.update.migr.yast">
   <step>
    <para>
     Deactivate all unused extensions on your registration server to avoid
     future dependency conflicts. In case you forget an extension, &yast;
     will later detect unused extension repositories and deactivate them.
    </para>
   </step>
   <step>
    <para>
     If you are logged in to a GNOME session running on the machine you are
     going to update, switch to a text console. Running the update from within
     a GNOME session is not recommended. Note that this does not apply when
     being logged in from a remote machine (unless you are running a VNC
     session with GNOME).
    </para>
   </step>
   <step>
    <para>
     If you are an LTSS subscriber, make sure that the LTSS extension repository
     is active.
    </para>
   </step>
   <step>
    <para>
     Run &yast; online update to get the latest package updates for your
     system.
    </para>
   </step>
   <step>
    <para>
     Install the package
     <package>yast2-migration</package>
     and its dependencies (in &yast; under <menuchoice>
     <guimenu>Software</guimenu> <guimenu>Software Management</guimenu>
     </menuchoice>).
    </para>
   </step>
   <step>
    <para>
     Restart &yast;, otherwise the newly installed module will not be shown in
     the control center.
    </para>
   </step>
   <step>
    <para>
     In &yast;, choose <guimenu>Online Migration</guimenu> (depending on the
     version of &productname; that you are upgrading from, this module is
     categorized under either <guimenu>System</guimenu> or
     <guimenu>Software</guimenu>). &yast; will show possible migration
     targets and a summary. If more than one migration target is available
     for your system, select one from the list.
    </para>
   </step>
   <step>
    <para>
     Select one migration target from the list and proceed with
     <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In case the migration tool offers update repositories, it is recommended
     to proceed with <guimenu>Yes</guimenu>.
    </para>
   </step>
   <step>
    <para>
     <remark>toms 2015-09-09: FATE#319140</remark>
     If the Online Migration tool finds obsolete repositories coming from DVD
     or a local server, it is highly recommended to disable them. Obsolete
     repositories are from a previous SP. Any old repositories from &scc; or &rmt;
     are removed automatically.
    </para>
   </step>
   <step>
    <para>
     Check the summary and proceed with the migration by clicking
     <guimenu>Next</guimenu>. Confirm with <guimenu>Start Update</guimenu>.
    </para>
    <remark>toms 2016-07-13: What to do in case of problems?</remark>
   </step>
   <step>
    <para>
     After the successful migration restart your system.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.update.migr.zypper.onlinemigr">
  <title>Upgrading with Zypper</title>

  <para>
   To perform a service pack migration with Zypper, use the command line tool
   <command>zypper</command> <option>migration</option> from the package
   <package>zypper-migration-plugin</package>.
  </para>

  <note>
   <title>Reduce Installation Size</title>
   <para>
    When performing the SP migration, &yast; will install all recommended
    packages. Especially in the case of custom minimal installations, this may
    increase the installation size of the system significantly.
   </para>
   <para>
    To change this default behavior and allow only required packages, adjust
    <filename>/etc/zypp/zypp.conf</filename> and set the following variable:
   </para>
<screen>solver.onlyRequires = true
installRecommends=false # or commented</screen>
  </note>

  <para>
   This changes the behavior of all package operations, such as the
   installation of patches or new packages. To change the behavior of Zypper
   for a single invocation, add the parameter <option>--no-recommends</option>
   to your command line.
  </para>

  <para>
   To start the service pack migration, do the following:
  </para>

  <procedure xml:id="pro.update.migr.zypper">
   <step>
    <para>
     If you are logged in to a GNOME session running on the machine you are
     going to update, switch to a text console. Running the update from within
     a GNOME session is not recommended. Note that this does not apply when
     being logged in from a remote machine (unless you are running a VNC
     session with GNOME).
    </para>
   </step>
   <step>
    <para>
     Register your &sle; machine if you have not done so:
    </para>
<screen>&prompt.sudo;<command>SUSEConnect</command> --regcode <replaceable>YOUR_REGISTRATION_CODE</replaceable></screen>
   </step>
   <step>
    <para>
     If you are an LTSS subscriber, make sure that the LTSS extension
     repository is active.
    </para>
   </step>
   <step>
    <para>
     Install the latest updates:
    </para>
<screen>&prompt.sudo;<command>zypper</command> patch</screen>
   </step>
   <step>
    <para>
     Install the <package>zypper-migration-plugin</package> package and
     its dependencies:
    </para>
<screen>&prompt.sudo;<command>zypper</command> in zypper-migration-plugin</screen>
   </step>
   <step>
    <para>
     Run <command>zypper</command> <option>migration</option>:
    </para>
<screen>&prompt.sudo;<command>zypper</command> migration
Executing 'zypper  patch-check'

Refreshing service 'SUSE_Linux_Enterprise_Server_12_x86_64'.
Loading repository data...
Reading installed packages...
0 patches needed (0 security patches)

Available migrations:

    1 | SUSE Linux Enterprise Server 12 SP1 x86_64
    2 | SUSE Linux Enterprise Server 12 SP2 x86_64</screen>
    <para>
     Some notes about the migration process:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       If more than one migration target is available for your system, Zypper
       allows you to select one SP from the list. This is the same as skipping
       one or more SPs. Keep in mind, online migration for base
       products (&slsa;, &sleda;) remains available only between the SPs of a
       major version.
      </para>
     </listitem>
     <listitem>
      <para>
       By default, Zypper uses the option
       <option>--no-allow-vendor-change</option> which is passed to
       <command>zypper</command> <option>dup</option>. If a package was
       installed from a third-party repository, this option prevents packages
       from being replaced with the same package coming from &suse;.
      </para>
     </listitem>
     <listitem>
      <para>
       <remark>toms 2015-09-09: FATE#319140</remark>
       If Zypper finds obsolete repositories coming from DVD or a local server,
       it is highly recommended to disable them. Old &scc; or &rmt; repositories
       are removed automatically.
      </para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     Review all the changes, especially the packages that are going to be
     removed. Proceed by typing <literal>y</literal> (the exact number of
     packages to upgrade can vary on your system):
    </para>
<screen>266 packages to upgrade, 54 to downgrade, 17 new, 8 to reinstall, 5 to remove, 1 to change arch.
Overall download size: 285.1 MiB. Already cached: 0 B  After the operation, additional 139.8 MiB will be used.
Continue? [y/n/? shows all options] (y):</screen>
    <para>
     Use the <keycombo> <keycap function="shift"/> <keycap function="pageup"/>
     </keycombo> or <keycombo> <keycap function="shift"/>
     <keycap function="pagedown"/> </keycombo> keys to scroll in your shell.
    </para>
   </step>
   <step>
    <para>
     After successful migration restart your system.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.update.migr.plainzypper.onlinemigr">
  <title>Upgrading with Plain Zypper</title>

  <para>
   If you cannot use &yast; migration or the Zypper migration, you can still
   migrate with plain Zypper and some manual interactions. To start a service
   pack migration, do the following:
  </para>

  <procedure>
   <step>
    <para>
     If you are logged in to a GNOME session running on the machine you are
     going to update, switch to a text console. Running the update from within
     a GNOME session is not recommended. Note that this does not apply when
     being logged in from a remote machine (unless you are running a VNC
     session with GNOME).
    </para>
   </step>
   <step>
    <para>
     Update the package management tools with the old &sle; repositories:
    </para>
<screen>&prompt.sudo;<command>zypper</command> patch --updatestack-only</screen>
   </step>
   <step>
    <para>
     If the system is registered, it needs to be deregistered:
    </para>
<screen>&prompt.sudo;<command>SUSEConnect</command> --de-register</screen>
   </step>
   <step>
    <para>
     Remove the old installation sources and repositories and adjust the
     third-party repositories.
    </para>
   </step>
   <step>
    <para>
     Add the new installation sources, be it local or remote sources (for the
     placeholder <replaceable>REPOSITORY</replaceable>, refer to
     <xref linkend="sec.update.modules"/>):
    </para>
<screen>sudo <command>zypper</command> addrepo <replaceable>REPOSITORY</replaceable></screen>
    <para>
     You can also use &scc; or &rmtool;. The command for &sle; 12 SP1 on &x86-64;
     is:
    </para>
<screen>&prompt.sudo;<command>SUSEConnect</command> -p SLES/12.2/x86_64 <replaceable>OPTIONS</replaceable></screen>
    <para>
     Keep in mind, cross-architecture upgrades are not supported.
    </para>
    <para>
     Zypper will display a conflict between the old and new kernel. Choose
     Solution 1 to continue.
    </para>
<screen>Problem: product:SLES-12.2-0.x86_64 conflicts with kernel &lt; 4.4 provided by kernel-default-<replaceable>VERSION</replaceable>
 Solution 1: Following actions will be done:
  replacement of kernel-default-<replaceable>VERSION</replaceable> with kernel-default-<replaceable>VERSION</replaceable>
  deinstallation of kernel-default-<replaceable>VERSION</replaceable>
 Solution 2: do not install product:SLES-12.2-0.x86_64
</screen>
   </step>
   <step>
    <para>
     Finalize the migration:
    </para>
<screen>&prompt.sudo;<command>zypper</command> ref -f -s
&prompt.sudo;<command>zypper</command> dup --no-allow-vendor-change --no-recommends</screen>
    <para>
     The first command will update all services and repositories. The second
     command performs a distribution upgrade. Here, the last two options are
     important: <option>-no-allow-vendor-change</option> ensures that
     third-party RPMs will not overwrite RPMs from the base system. The option
     <option>--no-recommends</option> ensures that packages deselected during
     initial installation will not be added again.
    </para>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec.update.migr.rollback">
  <title>Rolling Back a Service Pack</title>

  <para>
   If a service pack does not work for you, &sle; supports reverting the system
   to the state before the service pack migration was started. Prerequisite is
   a Btrfs root partition with snapshots enabled (this is the default when
   installing &slsa; 12). See <xref linkend="cha.snapper"/> for details.
  </para>

  <procedure xml:id="pro.update.migr.rollback">
   <step>
    <para>
     Get a list of all Snapper snapshots:
    </para>
    <screen>&prompt.sudo;snapper list</screen>
    <para>
     Review the output to locate the snapshot that was created immediately
     before the service pack migration was started. The column
     <guimenu>Description</guimenu> contains a corresponding statement and the
     snapshot is marked as <literal>important</literal> in the column
     <guimenu>Userdata</guimenu>. Memorize the snapshot number from the column
     <guimenu>#</guimenu> and its date from the column
     <guimenu>Date</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Reboot the system. From the boot menu, select <guimenu>Start boot loader
     from a read-only snapshot</guimenu> and then choose the snapshot with the
     date and number you memorized in the previous step. A second boot menu
     (the one from the snapshot) is loaded. Select the entry starting with
     <literal>SLES 12</literal> and boot it.
    </para>
   </step>
   <step>
    <para>
     The system boots into the previous state with the system partition mounted
     read-only. Log in as &rootuser; and check whether you have chosen the
     correct snapshot. Also make sure everything works as expected. Note that
     since the root file system is mounted read-only, restrictions
     in functionality may apply.
    </para>
    <para>
     In case of problems or if you have booted the wrong snapshot, reboot
     and choose a different snapshot to boot from&mdash;up to this point no
     permanent changes have been made. If the snapshot is correct and works as
     expected, make the change permanent by running the following command:
    </para>
    <screen>&prompt.sudo;snapper rollback</screen>
    <para>
     Reboot afterward. On the boot screen, choose the default boot entry to
     reboot into the reinstated system.
    </para>
   </step>
   <step>
    <para>
     Check if the repository configuration has been properly
     reset. Furthermore, check if all products are properly registered. If
     either one is not the case, updating the system at a later point in time
     may no longer work, or the system may be updated using the wrong package
     repositories.
    </para>
    <para>
     Make sure the system can access the Internet before starting
     this procedure.
    </para>
    <substeps>
     <step>
      <para>
       Refresh services and repositories by running
      </para>
      <screen>&prompt.sudo;zypper ref -fs</screen>
     </step>
     <step>
      <para>
       Get a list of active repositories by running
      </para>
      <screen>&prompt.sudo;zypper lr</screen>
      <para>
       Carefully check the output of this command. No services and repositories
       that were added for the update should be listed. For example, if you
       are rolling back from &slsa; 12 SP1 to &slsa; 12 SP2, the list must
       contain the <literal>SP1</literal> repositories, and not the repositories
       <literal>SLES12-SP2-Pool</literal> and <literal>SLES12-SP2-Updates</literal>.
      </para>
      <para>
       If wrong repositories are listed, delete them and, if
       necessary, replace them with the versions matching your product or
       service pack version. For a list of repositories for the supported
       migration paths refer to <xref linkend="sec.update.modules"/>.
      </para>
     </step>
     <step>
      <para>
       Last, check the registration status for all products installed by
       running
      </para>
      <screen>&prompt.sudo;SUSEConnect --status</screen>
      <para>
       All products should be reported as being
       <literal>Registered</literal>. If this is not the case, repair the
       registration by running
      </para>
      <screen>&prompt.sudo;SUSEConnect --rollback</screen>
     </step>
    </substeps>
   </step>
  </procedure>
  <para>
   Now you have successfully reverted the system to the state that was captured
   immediately before the service pack migration was started.
  </para>
 </sect1>
</chapter>
