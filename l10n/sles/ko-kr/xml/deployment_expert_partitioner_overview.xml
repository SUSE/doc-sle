<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="deployment_expert_partitioner_overview.xml" version="5.0" xml:id="sec-expert-partitioner">
 <title><guimenu>고급 파티션 도구</guimenu> 사용</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>예</dm:translation>
  </dm:docmanager>
 </info>

 <para>
  <xref linkend="fig-expert-partitioner-overview"/>에 표시된 <guimenu>고급 파티션 도구</guimenu>로 하나 또는 여러 개의 하드 디스크 파티션을 직접 수정할 수 있습니다. 파티션을 추가, 삭제, 크기 조정 및 편집하거나 소프트 RAID 및 LVM 구성에 액세스할 수 있습니다.
 </para>

 <warning>
  <title>실행 중인 시스템 파티션 변경</title>
  <para>
   실행 중인 시스템을 다시 분할할 수 있지만, 데이터 유실이 발생할 위험이 상당히 높습니다. 설치된 시스템에 대한 파티셔닝 작업을 다시 수행하지 않고 파티셔닝 전에 항상 데이터의 전체 백업을 생성하십시오.
  </para>
 </warning>

 <figure xml:id="fig-expert-partitioner-overview">
  <title>YaST 파티션 도구</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="install_partitioner_expert.png" width="75%" format="PNG"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="install_partitioner_expert.png" width="75%" format="PNG"/>
   </imageobject>
  </mediaobject>
 </figure>

 <tip arch="zseries" os="sles">
  <title>IBM Z: 장치 이름</title>
  <para>
   IBM Z는 DASD 및 SCSI 하드 디스크만 인식합니다. IDE 하드 디스크는 지원되지 않습니다. 이러한 장치는 첫 번째로 인식된 장치에 대한 <filename>dasda</filename> 또는 <filename>sda</filename>로 파티션 테이블에 나타나기 때문입니다.
  </para>
 </tip>

 <para>
  연결된 모든 하드 디스크에 존재하거나 제안된 파티션은 YaST <guimenu>고급 파티션 도구</guimenu> 대화 상자의 <guimenu>사용 가능한 저장소</guimenu> 목록에 표시됩니다. 전체 하드 디스크는 <filename>/dev/sda</filename><phrase arch="zseries" os="sles">(또는 <filename>/dev/dasda</filename>)</phrase>와 같은 번호가 없는 장치로 나열됩니다. <filename>/dev/sda1</filename><phrase arch="zseries" os="sles">(또는 <filename>/dev/dasda1</filename>)</phrase>과 같은 파티션이 이러한 장치의 부분으로 나열됩니다. 하드 디스크 및 파티션의 크기, 유형, 암호화 상태, 파일 시스템 및 탑재 지점도 표시됩니다. 탑재 지점은 파티션이 Linux 파일 시스템 트리에서 나타나는 위치를 알려줍니다.
 </para>

 <para>
  왼쪽 <guimenu>시스템 보기</guimenu>에서 여러 가지 기능 보기를 사용할 수 있습니다. 이러한 보기를 통해 기존 저장소 구성에 대한 정보를 수집하고, 기능을 구성하고(<literal>RAID</literal>, <literal>볼륨 관리</literal>, <literal>파일 암호화</literal> 등), Btrfs, NFS 또는 <literal>TMPFS</literal>와 같은 추가 기능을 포함한 파일 시스템을 볼 수 있습니다.
 </para>

 <para>
  설치 중 고급 대화 상자를 실행하면 사용 가능한 하드 디스크 공간도 나열되고 자동으로 선택됩니다. 더 많은 디스크 공간을 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>에 제공하려면 파티션 목록의 하단에서 상단으로 이동하여 필요한 공간을 마련하십시오.
 </para>

 <sect2 xml:id="sec-expert-partitioner-tables">
  <title>파티션 테이블</title>
  <para>
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>를 통해 다양한 <emphasis>파티션 테이블</emphasis>을 사용하고 생성할 수 있습니다. 어떤 경우에는 파티션 테이블을 <emphasis>디스크 레이블</emphasis>이라고 합니다. 파티션 테이블은 컴퓨터의 부팅 프로세스에 중요합니다. 새로 생성한 파티션 테이블의 파티션에서 시스템을 부팅하려면 펌웨어에서 테이블 형식을 지원하는지 확인하십시오.
  </para>
  <para>
   파티션 테이블을 변경하려면 <guimenu>시스템 보기</guimenu>에서 관련 디스크 이름을 클릭하고 <menuchoice><guimenu>고급</guimenu> <guimenu>새 파티션 테이블 생성</guimenu></menuchoice>을 선택합니다.
  </para>
  <sect3 xml:id="sec-expert-partitioner-tables-msdos">
   <title>마스터 부팅 레코드</title>
   <para>
    <emphasis>MBR(master boot record: 마스터 부팅 레코드)</emphasis>은 IBM PC에서 사용하는 레거시 파티션 테이블입니다. <emphasis>MS-DOS</emphasis> 파티션 테이블이라고 하는 경우도 있습니다. MBR은 4개의 기본 파티션만 지원합니다. 디스크에 이미 MBR이 있는 경우 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>를 통해 설치 대상으로 사용할 수 있는 추가 파티션을 생성할 수 있습니다.
   </para>
   <para>
    4개의 파티션 제한은 <emphasis>확장된 파티션</emphasis>을 생성하여 해결할 수 있습니다. 확장된 파티션 자체는 기본 파티션이며 더 많은 <emphasis>논리 파티션</emphasis>을 포함할 수 있습니다.
   </para>
   <para>
    UEFI 펌웨어는 일반적으로 레거시 모드에서 MBR 부팅을 지원합니다.
   </para>
  </sect3>
  <sect3 xml:id="sec-expert-partitioner-tables-gpt">
   <title>GPT 파티션 테이블</title>
   <para>
    UEFI 컴퓨터는 기본적으로 <emphasis>GUID 파티션 테이블</emphasis>(GPT)을 사용합니다. <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>는 다른 파티션 테이블이 없는 경우 디스크에 GPT를 생성합니다.
   </para>
   <para>
    기존 BIOS 펌웨어는 GPT 파티션에서의 부팅을 지원하지 않습니다.
   </para>
   <para>
    다음 기능 중 하나를 사용하려면 GPT 파티션 테이블이 필요합니다.
   </para>
   <itemizedlist>
    <listitem>
     <para>4개가 넘는 기본 파티션</para>
    </listitem>
    <listitem>
     <para>
      UEFI 보안 부팅
     </para>
    </listitem>
    <listitem>
     <para>
      2TB보다 큰 디스크 사용
     </para>
    </listitem>
   </itemizedlist>
   <note>
    <title>레이블이 잘못 지정된 <productname>Parted</productname> 3.1 이하로 생성한 파티션</title>
    <para>
     Parted 3.1 이하로 생성한 GPT 파티션은 새로운 Linux-specific GPT GUID 대신 Microsoft 기본 데이터 파티션 유형을 사용했습니다. 새로운 버전의 Parted는 이러한 파티션에서 잘못된 플래그 <literal>msftdata</literal>를 설정합니다. 이는 또한 <emphasis>Windows 데이터 파티션</emphasis> 또는 유사한 항목으로 파티션을 레이블 지정한 다양한 디스크 도구로 이어집니다.
    </para>
    <para>
     플래그를 제거하려면 다음을 실행합니다.
    </para>
    <screen><prompt role="root">root # </prompt>parted <replaceable>DEVICE</replaceable> set <replaceable>PARTITION_NUMBER</replaceable> msftdata off</screen>
   </note>
  </sect3>
  <sect3 xml:id="sec-expert-partitioner-tables-zsystems" os="sles" arch="zseries">
   <title>IBM Z의 파티션 테이블</title>
   <para>
    IBM Z 플랫폼에서 SUSE Linux Enterprise Server는 <emphasis>SCSI 하드 디스크</emphasis>와 <emphasis>DASD</emphasis>(직접 액세스 저장 장치)를 지원합니다. SCSI 디스크는 위에 설명된 대로 분할할 수 있지만, DASD는 해당 파티션 테이블에 최대 세 개까지만 파티션 항목을 가질 수 있습니다.
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="sec-expert-partitioner-partition">
  <title>파티션</title>
  <para>
   YaST 파티션 도구는 여러 파일 시스템을 사용하여 파티션을 생성하고 포맷할 수 있습니다. <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>에서 사용하는 기본 파일 시스템은 <literal>Btrfs</literal>입니다. 자세한 내용은 <xref linkend="sec-yast-btrfs"/>을 참조하십시오.
  </para>
  <para>
   다음과 같이 일반적으로 사용하는 다른 파일 시스템을 이용할 수 있습니다. <literal>Ext2</literal>, <literal>Ext3</literal>, <literal>Ext4</literal>, <literal>FAT</literal>, <literal>XFS</literal>, <literal>Swap</literal> 및 <literal>UDF</literal>.
  </para>
  <sect3 xml:id="sec-expert-partitioner-partition-create">
   <title>파티션 생성</title>
   <para>
    파티션을 생성하려면 <guimenu>하드 디스크</guimenu>를 선택한 다음 사용 가능한 공간을 포함한 하드 디스크를 선택합니다. <guimenu>파티션</guimenu> 탭에서 실제 수정 작업을 할 수 있습니다.
   </para>
   <procedure>
    <step>
     <para>
      <guimenu>추가</guimenu>를 클릭하여 새 파티션을 생성합니다. <emphasis>MBR</emphasis>을 사용하는 경우 기본 또는 확장된 파티션을 생성하도록 지정하십시오. 확장된 파티션 내에서 여러 논리 파티션을 생성할 수 있습니다. 자세한 내용은 <xref linkend="sec-expert-partitioner-tables"/>을 참조하십시오.
     </para>
    </step>
    <step>
     <para>
      새 파티션의 크기를 지정합니다. 분할되지 않은 모든 사용 가능한 공간을 사용하도록 선택하거나 사용자 정의 크기를 입력할 수 있습니다.
     </para>
    </step>
    <step>
     <para>
      사용할 파일 시스템과 탑재 지점을 선택합니다. YaST는 생성된 각 파티션에 대한 탑재 지점을 제안합니다. 레이블별 탑재와 같은 다른 탑재 방법을 사용하려면 <guimenu>Fstab 옵션</guimenu>을 선택하십시오.
     </para>
    </step>
    <step>
     <para>
      설치에 필요하면 추가 파일 시스템 옵션을 지정합니다. 예를 들어 영구 장치 이름이 필요한 경우 추가 파일 시스템 옵션이 필요합니다. 사용 가능한 옵션에 대한 자세한 내용은 <xref linkend="sec-expert-partitioner-options"/>을 참조하십시오.
     </para>
    </step>
    <step>
     <para>
      <guimenu>마침</guimenu>을 클릭하여 파티셔닝 설정을 적용하고 파티셔닝 모듈을 종료합니다.
     </para>
     <para>
      설치 중 파티션을 생성한 경우 설치 개요 화면으로 돌아갑니다.
     </para>
    </step>
   </procedure>
  </sect3>
  <sect3 xml:id="sec-yast-btrfs">
   <title>BTRFS 파티셔닝</title>
   <para>
    루트 파티션의 기본 파일 시스템은 BTRFS입니다. 자세한 내용은 <xref linkend="cha-snapper"/><phrase os="sles"> 및 <xref linkend="cha-filesystems"/></phrase> 항목을 참조하십시오. 루트 파일 시스템은 기본 하위 볼륨이고 작성된 하위 볼륨 목록에 표시되지 않습니다. 기본 BTRFS 하위 볼륨은 일반 파일 시스템으로 마운트할 수 있습니다.
   </para>
   <important>
    <title>암호화된 루트 파티션의 BTRFS</title>
    <para>
     기본 파티션 구성 설정에서는 <filename>/boot</filename>가 디렉토리인 Btrfs를 루트 파티션으로 추천합니다. 루트 파티션을 암호화하려면 기본 MSDOS 유형 대신 GPT 파티션 테이블 유형을 사용하십시오. 그러지 않으면 GRUB2 부트 로더에 두 번째 단계 로더의 공간이 부족할 수 있습니다.
    </para>
   </important>
   <para>
    시스템 이벤트에 따라 수동 또는 자동으로 BTRFS 하위 볼륨의 스냅샷을 작성할 수 있습니다. 예를 들어, 파일 시스템을 변경할 경우 <command>zypper</command>에서 <command>snapper</command> 명령을 호출하여 변경 전과 후에 스냅샷을 작성합니다. 이 기능은 <command>zypper</command>에서 변경한 내용을 취소하고 이전 상태를 복원할 경우 유용합니다. <command>zypper</command>에서 호출한 <command>snapper</command>가 기본적으로 <emphasis>루트</emphasis> 파일 시스템의 스냅샷을 생성하므로 스냅샷에서 특정 디렉토리를 제외하는 것이 가능합니다. 이는 YaST가 다음의 별도 하위 볼륨 생성을 제안하는 이유입니다.
   </para>
   <xi:include href="snapshot_excludes_i.xml"/>
   <tip>
    <title>BTRFS 파티션의 크기</title>
    <para>
     저장한 스냅샷에 더 많은 디스크 공간이 필요하므로 Btrfs에 충분한 공간을 보유하는 것이 좋습니다. 스냅샷 및 기본 하위 볼륨이 포함된 루트 BTRFS 파티션의 최소 크기는 16GB이지만 <filename>/home</filename>이 별도 파티션에 상주하지 않는 경우 SUSE는 32GB 이상을 권장합니다.
    </para>
   </tip>
  </sect3>
  <sect3 xml:id="sec-yast-btrfs-subvolumes">
   <title>YaST를 사용하여 BTRFS 하위 볼륨 관리</title>
   <para>
    이제 BTRFS 파티션의 하위 볼륨을 YaST <guimenu>Expert Partitioner</guimenu> 모듈을 사용하여 관리할 수 있습니다. 새로운 하위 볼륨을 추가하거나 기존 하위 볼륨을 제거할 수 있습니다.
   </para>
   <procedure xml:id="pro-yast-btrfs-subvolumes">
    <title>YaST가 포함된 BTRFS 하위 볼륨</title>
    
    
    <step>
     <para>
      왼쪽 창에서 <guimenu>Btrfs</guimenu>를 선택합니다.
     </para>
    </step>
    <step>
     <para>
      하위 볼륨을 관리해야 하는 BTRFS 파티션을 선택합니다.
     </para>
    </step>
    
    
    <step>
     <para>
      하위 볼륨을 편집, 추가 또는 제거할지에 따라 다음 작업을 수행합니다.
     </para>
     <substeps performance="required">
      <step>
       <para>
        하위 볼륨을 편집하려면 목록에서 해당 볼륨을 선택하고 <guimenu>편집</guimenu>을 클릭합니다. 그런 다음 해당 볼륨에 대해 <literal>copy-on-write</literal>(<guimenu>noCoW</guimenu>)를 비활성화하거나 크기를 제한할 수 있습니다. <guimenu>승인</guimenu>을 클릭하여 종료합니다.
       </para>
      </step>
      <step>
       <para>
        새 하위 볼륨을 추가하려면 <guimenu>하위 볼륨 추가</guimenu>를 클릭하고 경로를 입력합니다. 선택 사항으로 볼륨에 대해 <literal>copy-on-write</literal>(<guimenu>noCoW</guimenu>)를 비활성화하거나 크기를 제한할 수 있습니다. <guimenu>승인</guimenu>을 클릭하여 종료합니다.
       </para>
      </step>
      <step>
       <para>
        하위 볼륨을 제거하려면 목록에서 해당 볼륨을 선택하고 <guimenu>삭제</guimenu>를 클릭합니다. <guimenu>예</guimenu>를 클릭하여 삭제를 확인합니다.
       </para>
      </step>
      <step>
       <para>
       </para>
       <figure xml:id="fig-yast2-btrfs-subvolumes">
        <title>YaST 파티션 도구의 BTRFS 하위 볼륨</title>
        <mediaobject>
         <imageobject role="fo">
          <imagedata fileref="install_partitioner_btrfs_subvolumes.png" width="75%" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata fileref="install_partitioner_btrfs_subvolumes.png" width="75%" format="PNG"/>
         </imageobject>
        </mediaobject>
       </figure>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      <guimenu>완료</guimenu>를 클릭하여 파티션 도구를 종료합니다.
     </para>
    </step>
   </procedure>
  </sect3>
 </sect2>

 <sect2 xml:id="sec-expert-partitioner-options">
  <title>파티션 편집</title>
  <para>
   새 파티션을 생성하거나 기존 파티션을 수정할 때 다양한 파라미터를 설정할 수 있습니다. 새 파티션의 경우 일반적으로 YaST에서 설정된 기본 파라미터로 충분하며 수정할 필요는 없습니다. 파티션 설정을 수동으로 편집하려면 다음 단계를 수행하십시오.
  </para>
  <procedure>
   <step>
    <para>
     파티션을 선택합니다.
    </para>
   </step>
   <step>
    <para>
     <guimenu>편집</guimenu>을 클릭하여 파티션을 편집하고 파라미터를 설정합니다.
    </para>
    <variablelist>
     <varlistentry>
      <term>파일 시스템 ID</term>
      <listitem>
       <para>
        이 단계에서 파티션을 포맷하지 않은 경우에도 해당 파티션에 파일 시스템 ID를 할당하여 파티션을 올바르게 등록했는지 확인합니다. 일반적인 값은 <guimenu>Linux</guimenu>, <guimenu>Linux 스왑</guimenu>, <guimenu>Linux LVM</guimenu> 및 <guimenu>Linux RAID</guimenu>입니다.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       파일 시스템
      </term>
      <listitem>
       <para>
        파티션 파일 시스템을 변경하려면 <guimenu>파티션 포맷</guimenu>을 클릭하고 <guimenu>파일 시스템</guimenu> 목록에서 파일 시스템 유형을 선택합니다.
       </para>
       <para>
        <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>에서는 여러 유형의 파일 시스템을 지원합니다. BTRFS는 고급 기능 때문에 루트 파티션용으로 선택한 고급 Linux 파일 시스템입니다. 이것은 COW(Copy-On-Write) 기능을 지원하여 스냅샷, 다중 장치 스패닝, 하위 볼륨 및 기타 유용한 기능을 만듭니다. XFS, Ext3 및 Ext4는 저널링 파일 시스템입니다. 이러한 파일 시스템은 시스템 작동 중지 후 신속하게 시스템을 복원하여 작업 중 기록된 쓰기 프로세스를 이용할 수 있습니다. Ext2는 저널링 파일 시스템이 아니지만, 관리를 위해 많은 디스크 공간을 요구하지 않으므로 작은 파티션에 적당합니다.
       </para>
       <para>
        루트 파티션의 기본 파일 시스템은 BTRFS입니다. 추가 파티션의 기본 파일 시스템은 XFS입니다.
       </para>
       <para>
        UDF 파일 시스템은 광학 재작성 가능 및 불가능 미디어, USB 플래시 드라이브 및 하드 디스크에서 사용할 수 있습니다. 여러 운영 체제에서 UDF 파일 시스템을 지원합니다.
       </para>
       <para>
        스왑은 파티션을 가상 메모리로 사용할 수 있게 하는 특수 형식입니다. 256MB 이상의 스왑 파티션을 만듭니다. 그러나 스왑 공간을 모두 사용할 경우에는 스왑 공간을 추가하는 대신 시스템에 메모리 추가를 고려하십시오.
       </para>
       <warning>
        <title>파일 시스템 변경</title>
        <para>
         파일 시스템을 변경하거나 파티션을 다시 포맷하면 파티션의 모든 데이터가 삭제됩니다.
        </para>
       </warning>
       <para>
        다양한 파일 시스템에 대한 자세한 내용은 <citetitle>저장소 관리 가이드</citetitle>를 참조하십시오.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       장치 암호화
      </term>
      <listitem>
       <para>
        암호화를 활성화하면 모든 데이터가 암호화된 형태로 하드 디스크에 기록됩니다. 이것은 중요 데이터의 보안 수준을 높이지만, 암호화하는 데 시간이 걸리기 때문에 시스템 속도는 느려집니다. 파일 시스템 암호화에 대한 자세한 내용은 <xref linkend="cha-security-cryptofs"/>에서 찾을 수 있습니다.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       탑재 지점
      </term>
      <listitem>
       <para>
        파일 시스템 트리에서 파티션을 탑재할 디렉토리를 지정합니다. YaST 제안사항에서 선택하거나 다른 이름을 입력합니다.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       Fstab 옵션
      </term>
      <listitem>
       <para>
        전체 파일 시스템 관리 파일(<filename>/etc/fstab</filename>)에 포함된 다양한 파라미터를 지정합니다. 대부분의 설치에서 기본 설정이면 충분합니다. 예를 들어 장치 이름에서 볼륨 레이블로 파일 시스템 ID를 변경할 수 있습니다. 볼륨 레이블에는 <literal>/</literal>와 공백을 제외한 모든 문자를 사용합니다.
       </para>
       <para>
        영구 장치 이름을 가져오려면<guimenu>장치 ID</guimenu>, <guimenu>UUID</guimenu> 또는 <guimenu>LABEL</guimenu> 탑재 옵션을 사용하십시오. <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>에서는 영구 장치 이름이 기본적으로 활성화됩니다.
       </para>
       <note os="sles" arch="zseries">
        <title>IBM Z: 경로로 탑재</title>
        <para>
         복제 목적으로 디스크 간 복사를 사용할 때 ID로 탑재하면 IBM Z에서 문제가 발생하므로 기본적으로 IBM Z에서는 <filename>/etc/fstab</filename>의 경로로 장치가 탑재됩니다.
        </para>
       </note>
       <para>
        레이블별로 파티션을 탑재하고자 할 경우 <guimenu>볼륨 레이블</guimenu> 텍스트 항목에서 레이블을 정의해야 합니다. 예를 들어 <filename>/home</filename>에 탑재할 파티션에 대해 <literal>HOME</literal> 파티션 레이블을 사용할 수 있습니다.
       </para>
       <para>
        파일 시스템에서 할당량을 사용하려면 <guimenu>할당량 지원 활성화</guimenu> 탑재 옵션을 사용합니다. YaST <guimenu>사용자 관리</guimenu> 모듈에서 사용자에 대한 할당량을 정의하려면 먼저 이 옵션을 선택해야 합니다. 사용자 할당량을 구성하는 방법에 대한 자세한 내용은 <xref linkend="sec-yast-userman-adv-quota"/>를 참조하십시오.
       </para>
       <para os="sles">
        BTRFS 하위 볼륨에 할당량을 지정하려면 <xref linkend="sec-filesystems-major-btrfs-quota"/>를 참조하십시오.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </step>
   <step>
    <para>
     <guimenu>마침</guimenu>을 선택하여 변경 사항을 저장합니다.
    </para>
   </step>
  </procedure>
  <note>
   <title>파일 시스템 크기 조정</title>
   <para>
    기존 파일 시스템의 크기를 조정하려면 파티션을 선택하고 <guimenu>크기 조정</guimenu>을 사용하십시오. 그러나 탑재 중에는 파티션 크기를 조정할 수 없습니다. 파티션 크기를 조정하려면 파티션 도구를 실행하기 전에 각 파티션의 탑재를 해제하십시오.
   </para>
  </note>
 </sect2>

 <sect2 xml:id="sec-expert-partitioner-options2">
  <title>전문가 옵션</title>
  <para>
   <guimenu>시스템 보기</guimenu> 창에서 하드 디스크 장치(예: <guimenu>sda</guimenu>)를 선택한 후 <guimenu>고급 파티션 도구</guimenu> 창의 오른쪽 아래에서 <guimenu>고급</guimenu> 메뉴에 액세스할 수 있습니다. 메뉴에 포함되는 명령은 다음과 같습니다.
  </para>
  <variablelist>
   <varlistentry>
    <term>새 파티션 테이블 생성</term>
    <listitem>
     <para>
      이 옵션을 선택하면 선택한 장치에서 새 파티션 테이블을 생성할 수 있습니다.
     </para>
     <warning>
      <title>새 파티션 테이블 생성</title>
      <para>
       장치에 새 파티션 테이블을 생성하면 모든 파티션과 데이터가 해당 장치에서 제거됩니다.
      </para>
     </warning>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>이 디스크 복제</term>
    <listitem>
     <para>
      이 옵션을 선택하면 장치 파티션 레이아웃(데이터는 아님)을 기타 사용 가능한 디스크 장치로 복제할 수 있습니다.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2 xml:id="sec-expert-partitioner-configure-options">
  <title>고급 옵션</title>
  <para>
   컴퓨터의 호스트 이름(<guimenu>시스템 보기</guimenu> 창에서 트리의 최상위)을 선택하면 <guimenu>고급 파티션 도구</guimenu> 창의 오른쪽 아래에 있는 <guimenu>구성</guimenu> 메뉴에 액세스할 수 있습니다. 메뉴에 포함되는 명령은 다음과 같습니다.
  </para>
  <variablelist>
   <varlistentry>
    <term>iSCSI 구성</term>
    <listitem>
     <para>
      IP 블록 장치를 통해 SCSI에 액세스하려면 먼저 iSCSI를 구성해야 합니다. 그 결과 기본 파티션 목록에서 장치를 추가로 사용할 수 있게 됩니다.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>다중 경로 구성</term>
    <listitem>
     <para>
      이 옵션을 선택하면 지원되는 대용량 저장 장치에 대해 다중 경로의 향상된 기능을 구성할 수 있습니다.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2 xml:id="sec-expert-partitioner-info">
  <title>파티셔닝에 관한 추가 정보</title>
  <para>
   다음 절에는 시스템을 설정하는 동안 올바른 파티션 작업을 수행하기 위한 힌트와 추가 정보가 있습니다.
  </para>
  <sect3 xml:id="sec-expert-partitioner-info-cylinders">
   <title>실린더 수</title>
   <para>
    다양한 파티션 도구가 파티션의 실린더를 <literal>0</literal> 또는 <literal>1</literal>부터 계산할 수 있습니다. 항상 마지막 실린더 번호와 첫 번째 실린더 번호의 차에 1을 더하면 실린더 수가 계산됩니다.
   </para>
  </sect3>
  <sect3 xml:id="sec-expert-partitioner-info-swap">
   <title><literal>스왑</literal> 사용</title>
   <para>
    스왑은 실제로 사용할 수 있는 메모리를 확장하는 데 사용됩니다. 이를 수행하면 사용할 수 있는 실제 RAM보다 더 많은 메모리를 사용할 수 있습니다. 2.4.10 이전 커널의 메모리 관리 시스템에서는 스왑이 보안을 위해 필요했습니다. 이런 경우 스왑에 RAM 크기의 두 배 공간이 없는 경우 시스템 성능에 문제가 있었습니다. 이러한 제한 사항은 더 이상 없습니다.
   </para>
   <para>
    Linux는 <quote>최근 사용 페이지</quote>(LRU)라는 페이지를 사용하여 메모리에서 디스크로 이동할 수 있는 페이지를 선택합니다. 따라서 실행 중인 응용 프로그램이 더 많은 메모리를 사용할 수 있고 캐싱도 보다 원활하게 작동합니다.
   </para>
   <para>
    응용 프로그램이 허용된 최대 메모리를 할당하려고 시도하면 스왑 문제가 발생할 수 있습니다. 문제가 발생하는 세 가지 주요 경우는 다음과 같습니다.
   </para>
   <variablelist>
    <varlistentry>
     <term>스왑이 없는 시스템</term>
     <listitem>
      <para>
       응용 프로그램이 허용된 최대 메모리를 가져옵니다. 모든 캐시가 삭제되므로 실행 중인 다른 모든 응용 프로그램의 속도가 느려집니다. 몇 분 후에 커널의 메모리 부족 강제 종료 메커니즘이 활성화되고 프로세스가 강제 종료됩니다.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>중간 크기(128MB ~ 512MB)의 스왑을 포함한 시스템</term>
     <listitem>
      <para>
       처음에는 스왑이 없는 시스템처럼 속도가 느립니다. 모든 실제 RAM이 할당된 후에 스왑 공간도 사용됩니다. 이때 시스템은 매우 느려지고 원격으로 명령을 실행할 수 없게 됩니다. 스왑 공간을 실행하는 하드 디스크의 속도에 따라 커널의 메모리 부족 강제 종료 메커니즘이 문제를 해결할 때까지 시스템은 약 10-15분 동안 이 상태로 계속 있습니다. 컴퓨터에서 <quote>디스크 일시 중단</quote>을 수행해야 할 경우 특정 스왑 공간이 필요합니다. 이런 경우 스왑 공간은 메모리의 필요한 데이터를 포함할 수 있는 크기여야 합니다(512MB ~ 1GB).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>스왑이 많은 시스템(몇 GB)</term>
     <listitem>
      <para>
       이 경우 제어할 수 없고 지나치게 스와핑되는 응용 프로그램은 사용하지 않는 것이 좋습니다. 이러한 응용 프로그램을 사용하게 되면 복구하는 데 많은 시간이 걸립니다. 다른 프로세스에서 시간 초과 및 오류가 발생할 수 있으므로, 오류가 있는 프로세스가 종료되더라도 시스템은 정의되지 않은 상태가 될 수 있습니다. 이 경우 시스템을 재부팅하고 다시 실행해 보십시오. 많은 스왑은 이러한 기능에 의존하는 응용 프로그램이 있는 경우에만 유용합니다. 데이터베이스나 그래픽 조작 프로그램과 같은 응용 프로그램에는 필요에 따라 하드 디스크 공간을 바로 사용하는 옵션이 있습니다. 많은 스왑 공간을 사용하지 않고 이 옵션을 사용하는 것이 좋습니다.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    시스템을 제어할 수 있지만 일정 시간이 지난 후 추가 스왑이 필요한 경우 스왑 공간을 온라인으로 확장할 수 있습니다. 스왑 공간을 위해 파티션을 준비했으면 YaST를 사용하여 이 파티션을 추가하십시오. 사용할 수 있는 파티션이 없으면 스왑 파일을 사용하여 스왑을 확장할 수도 있습니다. 스왑 파일은 일반적으로 파티션보다 속도가 느리지만 실제 RAM과 비교했을 때 두 가지 항목 모두 속도가 매우 느리므로 실제 차이는 미미합니다.
   </para>
   <procedure>
    <title>수동으로 스왑 파일 추가</title>
    <para>
     실행 중인 시스템에서 스왑 파일을 추가하려면 다음 단계를 수행하십시오.
    </para>
    <step>
     <para>
      시스템에 빈 파일을 생성합니다. 예를 들어 <filename>/var/lib/swap/swapfile</filename>에 128MB의 스왑 파일을 추가하려면 다음 명령을 사용하십시오.
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> mkdir -p /var/lib/swap
<prompt>tux &gt; </prompt><command>sudo</command> dd if=/dev/zero of=/var/lib/swap/swapfile bs=1M count=128</screen>
    </step>
    <step>
     <para>
      다음 명령으로 이 스왑 파일을 초기화합니다.
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> mkswap /var/lib/swap/swapfile</screen>
      <note>
  <title><command>mkswap</command>을 통해 포맷할 때 스왑 파티션에 대한 UUID 변경</title>
  <para>가능하면 <command>mkswap</command>을 사용하여 기존 스왑 파티션을 다시 포맷하지 마십시오. <command>mkswap</command>으로 다시 포맷하면 스왑 파티션의 UUID 값이 변경됩니다. YaST를 통해 다시 포맷(<filename>/etc/fstab</filename> 업데이트)하거나 직접 <filename>/etc/fstab</filename>를 조정하십시오.
  </para>
</note>
    </step>
    <step>
     <para>
      다음 명령으로 스왑을 활성화합니다.
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> swapon /var/lib/swap/swapfile</screen>
     <para>
      스왑 파일을 비활성화하려면 다음 명령을 사용하십시오.
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> swapoff /var/lib/swap/swapfile</screen>
    </step>
    <step>
     <para>
      다음 명령으로 현재 사용할 수 있는 스왑 공간을 확인합니다.
     </para>
<screen><prompt>tux &gt; </prompt>cat /proc/swaps</screen>
     <para>
      이 공간은 임시 스왑 공간일 뿐입니다. 다음에 재부팅한 후에는 더 이상 사용되지 않습니다.
     </para>
    </step>
    <step>
     <para>
      스왑 파일을 영구적으로 활성화려면 <filename>/etc/fstab</filename>에 다음 줄을 추가하십시오.
     </para>
<screen>/var/lib/swap/swapfile swap swap defaults 0 0</screen>
    </step>
   </procedure>
  </sect3>
 </sect2>

 <sect2 xml:id="sec-expert-partitioner-lvm">
  <title>파티션과 LVM</title>
  <para>
   <guimenu>고급 파티션 도구</guimenu>의 <guimenu>시스템 보기</guimenu> 창에 있는 <guimenu>볼륨 관리</guimenu> 항목을 클릭하여 LVM 구성에 액세스합니다. 그러나 시스템에서 이미 LVM 구성이 작동 중이면 이 구성은 세션의 초기 LVM 구성을 입력할 때 자동으로 활성화됩니다. 이 경우 활성화된 볼륨 그룹에 속한 파티션을 포함하는 모든 디스크는 다시 분할할 수 없습니다. 이 디스크의 파티션이 사용 중일 때 Linux 커널은 하드 디스크의 수정된 파티션 테이블을 다시 읽을 수 없습니다. 시스템에서 이미 LVM 구성이 있는 경우 실제 파티셔닝을 다시 수행할 필요가 없습니다. 대신, 논리 볼륨의 구성을 변경하십시오.
  </para>
  <para>
   실제 볼륨(PV)의 시작 부분에 있는 파티션에 볼륨 정보가 기록됩니다. LVM 이외의 목적을 위해 이러한 파티션을 다시 사용하려면 이 볼륨의 시작 부분을 삭제하는 것이 좋습니다. 예를 들어 VG <literal>system</literal> 및 PV <filename>/dev/sda2</filename>에서 다음 명령을 사용하여 이를 수행하십시오.
  </para>
<screen><command>dd</command> <option>if=/dev/zero of=/dev/sda2 bs=512 count=1</option></screen>
  <warning>
   <title>부팅 파일 시스템</title>
   <para>
    부팅에 사용된 파일 시스템(루트 파일 시스템 또는 <filename>/boot</filename>)을 LVM 논리 볼륨에 저장할 필요는 없습니다. 대신, 일반적인 실제 위치에 저장하십시오.
   </para>
  </warning>
  <para os="sles">
   LVM에 대한 자세한 내용은 <xref linkend="book-storage"/>를 참조하십시오.
  </para>
 </sect2>
</sect1>
