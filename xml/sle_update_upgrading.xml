<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!--

2015-12-16: suggestion from Frank
When user has SDK repo installed, it should be make sure that
the user needs to change the repo URL to the new SP version.

Check with Simona, if this is supported or needed.

-->
<chapter version="5.0" xml:id="cha-update-sle"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Upgrading &sle;</title>
 <info>
  <abstract>
   <para>
    &slereg; (&slea;) allows to upgrade an existing system to the new version.
    No new installation is needed. Existing data, such as home and data
    directories and system configuration, is kept intact. You can update from
    a local CD or DVD drive or from a central network installation source.
   </para>

   <para>
    This chapter explains how to manually upgrade your &sle; system, be it by
    DVD, network, an automated process, or &susemgr;.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="sec-update-sle-paths">
  <title>Supported Upgrade Paths to &slea; 12 SP5</title>

<figure xml:id="fig-update-sle-paths-overview">
   <title>Overview of Supported Upgrade Paths</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata os="sles" fileref="upgrade-paths.svg" width="100%"
                format="SVG"/>
     <imagedata os="sled" fileref="upgrade-paths_sled.svg" width="100%"
                format="SVG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata os="sles" fileref="upgrade-paths.png" width="80%"
                format="PNG"/>
     <imagedata os="sled" fileref="upgrade-paths_sled.png" width="80%"
                format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <important>
   <title>Cross-architecture Upgrades Are Not Supported</title>
   <para>
    Cross-architecture upgrades, such as upgrading from a 32-bit version of
    &productname; to the 64-bit version, or upgrading from big endian to little
    endian are <emphasis>not</emphasis> supported!
   </para>
   <para>
    Specifically, &slea; 11 on &ppc; (big endian) to &slea; 12 SP2 on &ppc;
    (new: little endian!), is <emphasis>not</emphasis> supported.
   </para>
   <para>
    Also, since &sle; 12 is 64-bit only, upgrades from any 32-bit &sle; 11
    systems to &sle; 12 and later are <emphasis>not</emphasis> supported.
   </para>
   <para>
    To make a cross-architecture upgrade, you need to perform
    a new installation.
   </para>
  </important>

  <note>
   <title>Skipping Service Packs</title>
   <para os="sles">
    The safest upgrade path is to go step by step and to consecutively install all Service Packs.
    In some cases it is supported to skip 1 or 2 Service Packs when
    upgrading. For details, see <xref linkend="vl-update-paths-sle-supported"/> and <xref
    linkend="fig-update-sle-paths-overview"/>. However, we recommend to
    <emphasis>not</emphasis> skip any Service Pack.
   </para>
   <para os="sled">
    Skipping Service Packs on &sled; is <emphasis>not</emphasis> supported. You need to
    consecutively install all Service Packs.
   </para>
  </note>

  <note>
   <title>Upgrading to Major Releases</title>
   <para>
    We recommend to do a fresh install when upgrading to a new major release.
   </para>
  </note>

  <variablelist xml:id="vl-update-paths-sle-supported">
   <title>Supported Upgrade Paths per Version</title>
   <varlistentry>
    <term>Upgrading from &sle; 10 (any Service Pack)</term>
    <listitem>
     <para>
      There is no supported direct migration path to &sle; 12. We recommend a
      fresh installation in this case.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Upgrading from &sle; 11 GA/SP1/SP2/SP3</term>
    <listitem>
     <para>
      There is no supported direct migration path to &sle; 12. You need at
      least &slea; 11 SP4 before you can proceed to &slea; 12 SP5.
     </para>
     <para>
      If you cannot do a fresh install, first upgrade your installed &slea;
      11 Service Pack to &slea; 11 SP4. These steps are described in the
      <citetitle>&deploy;</citetitle> for &sle; 11:
      <link os="sles" xlink:href="&dsc;/sles-11/"></link>
      <link os="sled" xlink:href="&dsc;/sled-11/"></link>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Upgrading from &sle; 11 SP4</term>
    <listitem>
     <para>
      Upgrading from &slea; 11 SP4 to &slea; 12 SP5 is only supported via an
      offline upgrade. Refer to <xref linkend="cha-update-offline"/> for
      details.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Upgrading from &sle; 12 GA/SP1/SP2/SP3 to SP5</term>
    <listitem>
     <para>
      Direct upgrades from &slea; 12 GA, SP1, SP2, or SP3 to SP5 are not
      supported.  Upgrade to &slea; 12 SP4 first.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Upgrading from &sle; 12 SP4 to SP5</term>
    <listitem>
     <para>
      Upgrading from &sle; 12 SP4 to SP5 is supported.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry os="sles">
    <term>Upgrading from &sle; 12 LTSS GA/SP1/SP2 to SP5</term>
    <listitem>
     <para>
      Direct upgrades from &sle; 12 LTSS GA, SP1, or SP2 to SP5 are not
      supported.  Upgrade to &slea; 12 LTSS SP3 or SP4 first.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry os="sles">
    <term>Upgrading from &sle; 12 LTSS SP3/SP4 to SP5</term>
    <listitem>
     <para>
      Upgrading from &sle; 12 LTSS SP3, or SP4 to SP5 is supported.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-update-sle-methods">
  <title>Online and Offline Upgrade</title>
  <para>
   &suse; supports two different upgrade and migration methods. For more
   information about the terminology, see <xref linkend="sec-update-sle-terminology" />.
   The methods are:
  </para>

  <variablelist>
   <varlistentry>
    <term>Online</term>
    <listitem>
     <para>
      All upgrades that are executed from the running system are considered
      to be online. Examples: Connected through &scc;, &smtool; (&smt;), &susemgr;
      using Zypper or &yast;.
     </para>
     <para>
      When migrating between Service Packs of the same major release,
      we suggest following <xref linkend="sec-update-migr-yast-onlinemigr" />
      or <xref linkend="sec-update-migr-zypper-onlinemigr" />.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Offline</term>
    <listitem>
     <para>
      Offline methods usually boot another operating system from which the
      installed &slea; version is upgraded. Examples are: DVD, flash disk,
      ISO image, &ay;, <quote>plain RPM</quote> or PXE boot.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   Upgrading from &sle; 11 SP4 to &sle; 12 SP5 is only supported via
   an offline upgrade. See <xref linkend="cha-update-offline" />.
  </para>
  <para>
   Upgrading from &sle; 12 LTSS SP2 to SP5
   is supported using all offline and online methods. See
   <xref linkend="cha-update-offline" /> and <xref linkend="cha-update-online" />.
  </para>
  <important>
   <title>&susemgr; Clients</title>
   <para>
    If your machine is managed by &susemgr;, the upgrade procedure
    should be started in the management interface. For details, see
    <xref linkend="sec-update-sle-manager"/>.
   </para>
  </important>
 </sect1>

 <sect1 xml:id="sec-update-prep">
  <title>Preparing the System</title>
  <para>
   Before starting the upgrade procedure, make sure your system is properly
   prepared. Among others, preparation involves backing up data and checking
   the release notes.
  </para>

  <sect2 xml:id="sec-update-prep-update">
   <title>Make Sure the Current System Is Up-To-Date</title>
   <para>
    Upgrading the system is only supported from the most recent
    patch level. Make sure the latest system updates are installed by either
    running <command>zypper patch</command> or by starting the &yast; module
    <guimenu>Online-Update</guimenu>.
   </para>
  </sect2>

  <sect2 xml:id="sec-update-prep-relnotes">
   <title>Read the Release Notes</title>
   <para>
    In the release notes you can find additional information on changes
    since the previous release of &productname;. Check the release notes
    to see whether:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      your hardware needs special considerations;
     </para>
    </listitem>
    <listitem>
     <para>
      any used software packages have changed significantly;
     </para>
    </listitem>
    <listitem>
     <para>
      special precautions are necessary for your installation.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    The release notes also provide information that could not make it
    into the manual on time. They also contain notes about known issues.
   </para>
   <para os="sles">
    If you are skipping one or more Service Packs, check the release
    notes of the skipped Service Packs as well. The release notes
    usually only contain the changes between two subsequent releases.
    You can miss important changes if you are only reading the
    current release notes.
   </para>
   <para>
    Find the release notes locally in the directory
    <filename>/usr/share/doc/release-notes</filename> or online at
    <link
      xlink:href="https://www.suse.com/releasenotes/"/>.
   </para>
  </sect2>
  <sect2 xml:id="sec-update-prep-backup">
   <title>Make a Backup</title>
   <para>
    Before updating, copy existing configuration files to a separate medium
    (such as tape device, removable hard disk, etc.) to back up the data. This
    primarily applies to files stored in <filename>/etc</filename> and some
    directories and files in <filename>/var</filename> and
    <filename>/opt</filename>. You may also want to write the user data in
    <filename>/home</filename> (the <envar>HOME</envar> directories) to a
    backup medium. Back up this data as &rootuser;. Only &rootuser; has read
    permissions for all local files.
   </para>
   <para>
    If you have selected <guimenu>Update an Existing System</guimenu> as the
    installation mode in &yast;, you can choose to do a (system) backup at a
    later point in time. You can choose to include all modified files and files
    from the <filename>/etc/sysconfig</filename> directory. However, this is
    not a complete backup, as all the other important directories mentioned
    above are missing. Find the backup in the
    <filename>/var/adm/backup</filename> directory.
   </para>
   <sect3 xml:id="sec-update-prep-backup-packagelist">
    <title>Listing Installed Packages and Repositories</title>
    <para>
     It is often useful to have a list of installed packages,
     for example when doing a fresh install of a new major &slea; release or reverting
     to the old version.
    </para>
    <para>
     Be aware that not all installed packages or used repositories are
     available in newer releases of &sle;. Some may have been renamed and
     others replaced. It is also possible that some packages are still
     available for legacy purposes while another package is used by
     default. Therefore some manual editing of the files might be
     necessary. This can be done with any text editor.
    </para>
    <para>
     Create a file named <filename>repositories.bak</filename> containing a
     list of all used repositories:
    </para>
    <screen>&prompt.root;<command>zypper</command> lr -e repositories.bak</screen>
    <para>
     Also create a file named <filename>installed-software.bak</filename>
     containing a list of all installed packages:
    </para>
    <screen>&prompt.root;<command>rpm</command> -qa --queryformat '%{NAME}\n' > installed-software.bak</screen>
    <para>
     Back up both files. The repositories and installed packages can be
     restored with the following commands:
    </para>
    <screen>&prompt.root;<command>zypper</command> ar repositories.bak
&prompt.root;<command>zypper</command> install $(cat installed-software.bak)</screen>

    <note xml:id="note-update-prep-backup-package-amount">
     <title>
      Amount of Packages Increases with an Update to a New Major Release
     </title>
     <para>
      A system upgraded to a new major version
      (SLE&nbsp;<replaceable>X+1</replaceable>) may contain more packages than
      the initial system (SLE&nbsp;<replaceable>X</replaceable>). It will also
      contain more packages than a fresh installation of
      SLE&nbsp;<replaceable>X+1</replaceable> with the same pattern
      selection. Reasons for this are:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        Packages got split to allow a more fine-grained package selection. For
        example, 37 <package>texlive</package> packages on SLE 11 were split
        into 422 packages on SLE 12.
       </para>
      </listitem>
      <listitem>
       <para>
        When a package got split into other packages all new packages are
        installed in the upgrade case to retain the same functionality as with
        the previous version. However, the new default for a fresh installation
        of SLE&nbsp;<replaceable>X+1</replaceable> may be to not install all
        packages.
       </para>
      </listitem>
      <listitem>
       <para>
        Legacy packages from SLE&nbsp;<replaceable>X</replaceable> may be kept
        for compatibility reasons.
       </para>
      </listitem>
      <listitem>
       <para>
        Package dependencies and the scope of patterns may have changed.
       </para>
      </listitem>
     </itemizedlist>
    </note>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-update-prep-mariadb">
   <title>Migrate your MySQL Database</title>
   <remark>toms 2015-09-03: already reviewed by Ondrej and Kristýna.</remark>
   <para>
    As of &sle; 12, &suse; switched from MySQL to MariaDB. Before you start any
    upgrade, it is highly recommended to back up your database.
   </para>
<!--<para>If you are familiar with the <command>mysql_upgrade</command>
        tool, you do not need to call it explicitly. This command is called
        during the installation of MariaDB.</para>-->
   <para>
    To perform the database migration, do the following:
   </para>
   <procedure>
    <step>
     <para>
      Log in to your &sle; 11 machine.
     </para>
    </step>
    <step>
     <para>
      Create a dump file:
     </para>
<screen>&prompt.root;<command>mysqldump</command> -u root -p --all-databases > mysql_backup.sql</screen>
     <para>
      By default, <command>mysqldump</command> does not dump the
      <literal>INFORMATION_SCHEMA</literal> or
      <literal>performance_schema</literal> database. For more details refer to
      <link xlink:href="https://dev.mysql.com/doc/refman/5.5/en/mysqldump.html"/>.
     </para>
    </step>
    <step>
     <para>
      Store your dump file, the configuration file
      <filename>/etc/my.cnf</filename>, and the directory
      <filename>/etc/mysql/</filename> for later investigation
      (<emphasis>NOT</emphasis> installation!) in a safe place.
     </para>
    </step>
    <step>
     <para>
      Perform your upgrade. After the upgrade, your former configuration file
      <filename>/etc/my.cnf</filename> is still intact. You can find the new
      configuration in the file <filename>/etc/my.cnf.rpmnew</filename>.
     </para>
    </step>
    <step>
     <para>
      Configure your MariaDB database to your needs. Do
      <emphasis>NOT</emphasis> use the former configuration file and directory,
      but use it as a reminder and adapt it.
     </para>
    </step>
    <step>
     <para>
      Make sure you start the MariaDB server:
     </para>
<screen>&prompt.root;<command>systemctl</command> start mysql</screen>
     <para>
      If you want to start the MariaDB server on every boot, enable the
      service:
     </para>
<screen>&prompt.root;<command>systemctl</command> enable mysql</screen>
<!--<para>If you want to test the server, install the package
          <package>mariadb-test</package>.</para>-->
    </step>
    <step>
     <para>
      Verify that MariaDB is running properly by connecting to the database:
     </para>
<screen>&prompt.root;<command>mysql</command> -u root -p</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-prep-postgresql">
   <title>Migrate your &postgresql; Database</title>
   <para>
    A newer version of the &postgresql; database is shipped as a maintenance update.
    Because of the required migration work of
    the database, there is no automatic upgrade process. As such, the switch
    from one version to another needs to be done manually.
   </para>
   <para>
    The migration process is conducted by the <command>pg_upgrade</command>
    command which is an alternative method of the classic dump and reload. In
    comparison with the <quote>dump &amp; reload</quote> method,
    <command>pg_upgrade</command> makes the migration less time-consuming.
   </para>
   <para>
    The program files for each PostgreSQL version are stored in different,
    version-dependent directories. For example, in <filename>/usr/lib/postgresql96/</filename>
    for version 9.6 and in <filename>/usr/lib/postgresql10/</filename> for version 10.
    Note that the versioning policy of &postgresql; has changed between the major
    versions 9.6 and 10. For details, see <link
    xlink:href="https://www.postgresql.org/support/versioning/"/>.
   </para>
   <important>
    <title>Upgrading from &slea; 11</title>
     <para>
      When upgrading from &slea; 11, <systemitem>postgresql94</systemitem> will
      be uninstalled and cannot be used for the database migration to a higher
      &postgresql; version. Therefore in this case make sure to migrate the
      &postgresql; database <emphasis>before</emphasis> you upgrade your system.
    </para>
   </important>
   <para>
    The procedure below describes the database migration from version 9.6 to 10. When
    using a different version as start or target, replace the version numbers
    accordingly.
   </para>
   <para>
    To perform the database migration, do the following:
   </para>
   <procedure>
    <step>
     <para>
      Make sure the following preconditions are fulfilled:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        If not already done, upgrade any package of the old &postgresql;
        version to the latest release through a maintenance update.
       </para>
      </listitem>
      <listitem>
       <para>
        Create a backup of your existing database.
       </para>
      </listitem>
      <listitem>
       <para>
        Install the packages of the new &postgresql; major version. For
        &slea;12 SP5 this means to install
        <package>postgresql10-server</package>
        and all the packages it depends on.
       </para>
      </listitem>
      <listitem>
       <para>
        Install the package
        <package>postgresql10-contrib</package>
        which contains the command <command>pg_upgrade</command>.
       </para>
      </listitem>
      <listitem>
       <para>
        Make sure you have enough free space in your &postgresql; data area,
        which is <filename>/var/lib/pgsql/data</filename> by default. If space
        is tight, try to reduce size with the following SQL command on each
        database (can take very long!):
       </para>
<screen>VACUUM FULL</screen>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>
      Stop the &postgresql; server with either:
     </para>
<screen>&prompt.root;<command>/usr/sbin/rcpostgresql</command> stop</screen>
    <para>or</para>
<screen>&prompt.root;systemctl stop postgresql.service</screen>
    <para>(depending on the &slea; version you use as the starting point for your upgrade).</para>
    </step>
    <step>
     <para>
      Rename your old data directory:
     </para>
<screen>&prompt.root;<command>mv</command> /var/lib/pgsql/data /var/lib/pgsql/data.old</screen>
    </step>
    <!--<step>
     <para>
      Create a new data directory:
     </para>
<screen>&prompt.root;<command>mkdir</command> -p /var/lib/pgsql/data</screen>
    </step>-->
    <step>
     <para>
      Initialize your new database instance either manually with <command>initdb</command>
      or by starting and stopping PostgreSQL, which will do it automatically:
     </para>
<screen>&prompt.root;<command>/usr/sbin/rcpostgresql</command> start
&prompt.root;<command>/usr/sbin/rcpostgresql</command> stop</screen>
     <para>or</para>
<screen>&prompt.root;systemctl start postgresql.service
&prompt.root;systemctl stop postgresql.service</screen>
     <para>(depending on the &slea; version you use as the start version for your upgrade).</para>
    </step>
    <step>
     <para>
      If you have changed your configuration files in the old version, consider
      transferring these changes to the new configuration files. This may affect
      the files <filename>postgresql.auto.conf</filename>, <filename>postgresql.conf</filename>,
      <filename>pg_hba.conf</filename> and <filename>pg_ident.conf</filename>.
       The old versions of these files are located in
       <filename>/var/lib/pgsql/data.old/</filename>, the new versions can be
       found in <filename>/var/lib/pgsql/data</filename>.
     </para>
     <para>
      Note that just copying the old configuration files is not recommended,
      because this may overwrite new options, new defaults and changed comments.
     </para>
    </step>
    <step>
     <para>
      Start the migration process as user <systemitem class="username">postgres</systemitem>:
     </para>
<screen>&prompt.root;su - postgres
postgres &gt; <command>pg_upgrade</command> \
   --old-datadir "/var/lib/pgsql/data.old" \
   --new-datadir "/var/lib/pgsql/data" \
   --old-bindir "/usr/lib/postgresql96/bin/" \
   --new-bindir "/usr/lib/postgresql10/bin/"</screen>
    </step>
    <step>
     <para>
      Start your new database instance with either:
     </para>
<screen>&prompt.root;<command>/usr/sbin/rcpostgresql</command> start</screen>
     <para>or</para>
<screen>&prompt.root;systemctl start postgresql.service</screen>
     <para>(depending on the &slea; version you use as the start version for your upgrade).</para>
    </step>
    <step>
     <para>
      Check if the migration was successful. The scope of the test depends on
      your use case. There is no general tool to automate this step.
     </para>
    </step>
    <step>
     <para>
      Remove any old &postgresql; packages and your old data directory:
     </para>
<screen>&prompt.root;<command>zypper</command> search -s postgresql96 | xargs zypper rm -u
&prompt.root;<command>rm</command> -rf /var/lib/pgsql/data.old</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-prep-ssl">
   <title>Create Non-MD5 Server Certificates for Java Applications</title>
   <remark>toms 2016-07-27: from bsc#970153, c#24</remark>
   <para>
    During the update from SP1 to SP2, MD5-based certificates were disabled as
    part of a security fix. If you have certificates created as MD5, re-create
    your certificates with the following steps:
   </para>

   <procedure>
    <step>
     <para>
      Open a terminal and log in as &rootuser;.
     </para>
    </step>
    <step>
     <para>
      Create a private key:
     </para>
     <screen>&prompt.root;<command>openssl</command> genrsa -out server.key 1024</screen>
     <para>
      If you want a stronger key, replace <literal>1024</literal> with a
      higher number, for example, <literal>4096</literal>.
     </para>
    </step>
    <step>
     <para>
      Create a certificate signing request (CSR):
     </para>
     <screen>&prompt.root;<command>openssl</command> req -new -key server.key -out server.csr</screen>
    </step>
    <step>
     <para>
      Self-sign the certificate:
     </para>
     <screen>&prompt.root;<command>openssl</command> x509 -req -days 365 -in <!--
     -->server.csr -signkey server.key -out server.crt</screen>
    </step>
    <step>
     <para>
      Create the PEM file:
     </para>
     <screen>&prompt.root;<command>cat</command> server.key server.crt > server.pem</screen>
    </step>
    <step>
     <para>Place the files <filename>server.crt</filename>,
      <filename>server.csr</filename>, <filename>server.key</filename>, and
      <filename>server.pem</filename> in the respective directories where
      the keys can be found. For Tomcat, for example, this directory is
      <filename>/etc/tomcat/ssl/</filename>.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-prep-vms">
   <title>Shut Down Virtual Machine Guests</title>
   <para>
    If your machine serves as a &vmhost; for &kvm; or &xen;, make sure to
    properly shut down all running &vmguest;s prior to the update. Otherwise
    you may not be able to access the guests after the update.
   </para>
  </sect2>

  <sect2 xml:id="sec-update-prep-smt">
   <title>Adjust Your &smt; Client Setup</title>
   <para>
    If the machine you want to upgrade is registered as a client against an
    &smt; server, take care of the following:
   </para>
   <para>
    Check if the version of the <command>clientSetup4SMT.sh</command> script on
    your host is up to date. <command>clientSetup4SMT.sh</command> from older
    versions of &smt; cannot manage &smt; 12 clients. If you apply software
    patches regularly on your SMT server, you can always find the latest version
    of <command>clientSetup4SMT.sh</command> at
    <filename>&lt;SMT_HOSTNAME&gt;/repo/tools/clientSetup4SMT.sh</filename>.
   </para>

   <para>
    In case upgrading your machine to a higher version of &productname; fails,
    de-register the machine from the &smt; server as described in
    <xref linkend="pro-sec-update-prep-smt-de-register" xrefstyle="select:label"/>.
    Afterward, restart the upgrade process.</para>
   <procedure xml:id="pro-sec-update-prep-smt-de-register">
    <title>De-registering a &sle; Client from an &smt; Server</title>
     <step>
      <para>
       Log in to the client machine.
      </para>
     </step>
     <step>
     <para>The following step depends on the current operating system of the client:</para>
     <itemizedlist>
      <listitem>
       <para>
        For &sle; 11, execute the following commands:
       </para>
<screen>&prompt.sudo;suse_register -E
&prompt.sudo;rm -f /etc/SUSEConnect
&prompt.sudo;rm -rf /etc/zypp/credentials.d/*
&prompt.sudo;rm -rf /etc/zypp/repos.d/*
&prompt.sudo;rm -f /etc/zypp/services.d/*
&prompt.sudo;rm -f /var/cache/SuseRegister/*
&prompt.sudo;rm -f /etc/suseRegister*
&prompt.sudo;rm -f /var/cache/SuseRegister/lastzmdconfig.cache
&prompt.sudo;rm -f /etc/zmd/deviceid
&prompt.sudo;rm -f /etc/zmd/secret</screen>
      </listitem>
      <listitem>
       <para>
        For &sle; 12, execute the following commands:
       </para>
<screen>&prompt.sudo;SUSEConnect --de-register
&prompt.sudo;SUSEConnect --cleanup
&prompt.sudo;rm -f /etc/SUSEConnect
&prompt.sudo;rm -rf /etc/zypp/credentials.d/*
&prompt.sudo;rm -rf /etc/zypp/repos.d/*
&prompt.sudo;rm -f /etc/zypp/services.d/*</screen>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>
      Log in to the &smt; server.
     </para>
    </step>
    <step>
     <para>
      Check if the client has successfully been de-registered by listing all
      client registrations:
     </para>
<screen>&prompt.sudo;smt-list-registrations</screen>
    </step>
    <step>
     <para>
      If the client's host name is still listed in the output of this command,
      get the client's <literal>Unique ID</literal> from the first column. (The
      client might be listed with multiple IDs.)
     </para>
    </step>
    <step>
     <para>
      Delete the registration for this client:
     </para>
<screen>&prompt.sudo;smt-delete-registration -g <replaceable>UNIQUE_ID</replaceable></screen>
    </step>
     <step>
     <para>
      If the client is listed with multiple IDs, repeat the step above for each
      of its unique IDs.
     </para>
    </step>
    <step>
     <para>
      Check if the client has now successfully been de-registered by re-running:
     </para>
<screen>&prompt.sudo;smt-list-registrations</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-disk">
   <title>Disk Space</title>

   <para>
    Software tends to grow from version to version. Therefore,
    take a look at the available partition space before updating. If you suspect
    you are running short of disk space, back up your data before increasing the
    available space by resizing partitions, for example. There is no general
    rule regarding how much space each partition should have. Space requirements
    depend on your particular partitioning profile and the software selected.
   </para>

   <note>
    <title>Automatic Check for Enough Space in &yast;</title>
    <para>
     During the update procedure, &yast; will check how much free disk space is
     available and display a warning to the user if the installation may exceed
     the available amount. In that case, performing the update may lead to an
     <emphasis>unusable system</emphasis>! Only if you know exactly what you are
     doing (by testing beforehand), you can skip the warning and continue the
     update.
    </para>
   </note>

   <sect3 xml:id="sec-update-disk-space">
    <title>Checking Disk Space on Non-Btrfs File Systems</title>
    <para>
     Use the <command>df</command> command to list available disk space. For
     example, in <xref linkend="aus-update-df"/>, the root partition is
     <filename>/dev/sda3</filename> (mounted as <filename>/</filename>).
    </para>
    <example xml:id="aus-update-df">
     <title>List with <command>df -h</command></title>
<screen os="sled">Filesystem     Size  Used Avail Use% Mounted on
/dev/sda3       74G   22G   53G  29% /
tmpfs          506M     0  506M   0% /dev/shm
/dev/sda5      116G  5.8G  111G   5% /home
/dev/sda1       39G  1.6G   37G   4% /windows/C
/dev/sda2      4.6G  2.6G  2.1G  57% /windows/D</screen>
<screen os="sles">Filesystem     Size  Used Avail Use% Mounted on
/dev/sda3       74G   22G   53G  29% /
tmpfs          506M     0  506M   0% /dev/shm
/dev/sda5      116G  5.8G  111G   5% /home
/dev/sda1       44G    4G   40G   9% /data</screen>
    </example>
   </sect3>

   <sect3 xml:id="sec-update-disk-btrfs-on-root">
    <title>Checking Disk Space on Btrfs Root File Systems</title>
    <para>
     If you use Btrfs as root file systems on your machine, make sure there is
     enough free space. In the worst case, an upgrade needs as much disk space as the current root
     file system (without <filename>/.snapshot</filename>) for a new snapshot.
     To display available disk space use the command:
    </para>
<screen>&prompt.root;<command>df</command> -h /</screen>
    <para>
     Check the available space on all other mounted partitions as well. The
     following recommendations have been proven:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       For all file systems including Btrfs you need enough free disk space to
       download and install big RPMs. The space of old RPMs are only freed after
       new RPMs are installed.
      </para>
     </listitem>
     <listitem>
      <para>
       For Btrfs with snapshots, you need at minimum as much free space as your
       current installation takes. We recommend to have twice as much free
       space as the current installation.
      </para>
      <para>
       If you do not have enough free space, you can try to delete old snapshots
       with <command>snapper</command>:
      </para>
<screen>&prompt.root;<command>snapper</command> list
&prompt.root;<command>snapper</command> delete NUMBER</screen>
      <para>
       However, this may not help in all cases. Before migration, most snapshots
       occupy only little space.
      </para>
     </listitem>
    </itemizedlist>
   </sect3>
  </sect2>
  <sect2 xml:id="sec-update-prep-multiversion">
   <title>Temporarily Disabling Kernel Multiversion Support</title>
   <para>
    &productname; allows installing multiple kernel versions by enabling the
    respective settings in <filename>/etc/zypp/zypp.conf</filename>. Support
    for this feature needs to be temporarily disabled to upgrade to a service
    pack. When the update has successfully finished, multiversion support can be
    re-enabled. To disable multiversion support, comment the respective
    lines in <filename>/etc/zypp/zypp.conf</filename>. The result should look
    similar to:
   </para>
<screen>#multiversion = provides:multiversion(kernel)
#multiversion.kernels = latest,running</screen>
   <para>
    To re-activate this feature after a successful update, remove the comment
    signs. For more information about multiversion support, refer to
    <xref linkend="cha-tuning-multikernel-enable"/>.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-update-sle-sle12zseries" os="sles">
  <title>Upgrading on IBM &zseries;</title>
  <para>Upgrading a &sle; installation on IBM &zseries; requires the
   <command>Upgrade=1</command> kernel parameter, for example via the
   parmfile. See <xref linkend="sec-appdendix-parm" xrefstyle="HeadingOnPage"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec-update-prep-ppc-x" os="sles" arch="power">
  <title>IBM &ppc;: Starting an X Server</title>
  <para>
   On &slsa; 12 for IBM &ppc; the display manager is configured not to start a
   local X Server by default. This setting was reversed on &slsa; 12
   SP1&mdash;the display manager now starts an X Server.
  </para>
  <para>
   To avoid problems during upgrade, the &productname; setting is not changed
   automatically. If you want the display manager to start an X Server after
   the upgrade, change the setting of
   <envar>DISPLAYMANAGER_STARTS_XSERVER</envar> in
   <filename>/etc/sysconfig/displaymanager</filename> as follows:
  </para>
  <screen>DISPLAYMANAGER_STARTS_XSERVER="yes"</screen>
 </sect1>
</chapter>
