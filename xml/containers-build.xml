<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha-containers-build"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Building Containers</title>
 </info>
 <para>
  This chapter provides an overview of tools for creating containers. Most of
  the tools mentioned below are part of the <emphasis role="strong">&sls; 15
  SP2 Containers Module</emphasis>. You can see the full list of packages in
  the <emphasis role="strong">Containers Module</emphasis> in the
  <link xlink:href="https://scc.suse.com/packages?name=SUSE%20Linux%20Enterprise%20Server&amp;version=15.2&amp;arch=x86_64&amp;query=&amp;module=1963">&suse; Customer
  Center</link>.
 </para>
 <sect1 xml:id="id-build-tools-available-to-customers">
  <title>Build Tools Available to Customers</title>

  <sect2 xml:id="id-docker">
   <title>Docker</title>
   <para>
    Docker is a system for creating and managing containers. Its core is the
    Docker Open Source Engine&mdash;a lightweight virtualization solution to
    run containers simultaneously on a single host. Docker containers are
    defined using Dockerfiles. A Dockerfile describes how to assemble a private
    filesystem for a container. The file can also contain metadata that
    describes how to run the container. Most Dockerfiles start from a parent
    image. For an introduction on how to create custom base &sle; Docker
    images, see <xref linkend="cha-docker-overview"/>.
   </para>
  </sect2>

  <sect2 xml:id="podman">
   <title>Podman</title>
   <para>
    Podman is short for Pod Manager tool, and its purpose extends beyond just
    building images. It is a daemonless container engine for developing,
    managing, and running Open Containers Initiative (OCI) containers on a
    Linux system, and it offers a drop-in alternative for Docker. Podman is the
    default container runtime in openSUSE Kubic&mdash;a certified Kubernetes
    distribution built on top of &opensuse;. Podman can be used to create
    OCI-compliant container images using a Dockerfile and a range of commands
    similar to Docker. For example, the <literal>podman build</literal> command
    performs the same task as <literal>docker build</literal>, except that it
    does not use the Docker daemon to do it. Another important feature of
    Podman are rootless container builds. Because Podman relies on user
    namespaces, which provide an isolation mechanism for Linux processes, it
    does not require root privileges to create and run containers.
   </para>
   <para>
    For instructions on how to install and use Podman see
    <link xlink:href="https://podman.io/">the Podman Documentation</link>.
   </para>
  </sect2>

  <sect2 xml:id="id-buildah">
   <title>Buildah</title>
   <para>
    Buildah facilitates building OCI container images. It is a complimentary
    tool to Podman (see <xref linkend="podman"/>), and <literal>podman
    build</literal> uses Buildah to perform container image builds. Buildah
    makes it possible to build images from scratch, from existing images,
    and using Dockerfiles. OCI images built using the Buildah command-line tool and
    the underlying OCI-based technologies (for example,
    <literal>containers/image</literal> and
    <literal>containers/storage</literal>) are portable and can therefore run
    in a Docker environment.
   </para>
   <para>
    For instructions on how to install and use Buildah, see the
    <link xlink:href="https://buildah.io/">Buildah Documentation</link> and
    <link xlink:href="https://github.com/containers/buildah/blob/master/docs/tutorials">tutorials</link>.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="id-suse-internal-build-tools">
  <title>Internal SUSE Build Tools</title>

  <sect2 xml:id="id-open-build-service">
   <title>Open Build Service</title>
   <para>
    The Open Build Service (OBS) provides free infrastructure for building and
    storing RPM packages including various container formats. The
    <link xlink:href="https://registry.opensuse.org/cgi-bin/cooverview">OBS
    Container Registry</link> provides a detailed listing of all container
    images built by the OBS, complete with commands for pulling the images into
    your local Docker environment. The OBS &opensuse;
    <link xlink:href="https://build.opensuse.org/image_templates">container
    image templates</link> can be modified to specific needs, which offers the
    easiest way to create your own container branch. Container images can be
    built with native Docker tools from an existing image using a Dockerfile.
    Alternatively, images can be built from scratch using the &kiwi;
    image-building solution.
   </para>
   <para>
    Instructions on how to build images on OBS can be found at
    <link xlink:href="https://openbuildservice.org/2018/05/09/container-building-and-distribution/"/>.
   </para>
  </sect2>

  <sect2 xml:id="id-kiwi">
   <title>&kiwi;</title>
   <para>
    KIWI Next Generation is a multi-purpose tool for building images. In
    addition to container images, regular installation ISO images, and images
    for virtual machines, &kiwi; can build images that boot via PXE or Vagrant
    boxes. The main building block in &kiwi; is an image XML description, a
    directory that includes the <filename>config.xml</filename> or
    <filename>.kiwi</filename> file along with scripts or configuration data.
    The process of creating images with &kiwi; is fully automated and does not
    require any user interaction. Any information required for the image
    creation process is provided by the primary configuration file
    <literal>config.xml</literal>. The image can be customized using the
    <filename>config.sh</filename> and <filename>images.sh</filename> scripts.
   </para>
   <note>
    <para>
     It is important to distinguish between KIWI NG (currently version 9.20.9)
     and its unmaintained legacy versions (7.x.x or older), now called
     <link xlink:href="https://documentation.suse.com/kiwi/">KIWI
     Legacy</link>.
    </para>
   </note>
   <para>
    For specific information on how to install &kiwi; and use it to build
    images, see the <link xlink:href="http://osinside.github.io/kiwi/">KIWI
    documentation</link>. A collection of example image descriptions can be
    found on the
    <link xlink:href="https://github.com/OSInside/kiwi-descriptions">KIWI
    GitHub repository</link>.
   </para>
   <para>
    &kiwi;'s man pages provide information on using the tool. To access man
    pages, install the <package>kiwi-man-pages</package> package.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="id-building-official-slea-images">
  <title>Building Official &slea; Images</title>

  <para>
   Images are considered official only if they are built using the Internal
   Build Service.
  </para>

  <para>
   There are no official &slea; container images on
   <link xlink:href="https://build.opensuse.org" />, and the RPMs exported
   there are not identical to the internal ones. This means that it is not
   possible to build officially supported images on
   <link xlink:href="https://build.opensuse.org" />.
  </para>
 </sect1>
</chapter>
