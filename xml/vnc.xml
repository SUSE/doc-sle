<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.vnc">
 <title>Remote Access with VNC</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
  <abstract>
   <para>
    Virtual Network Computing (VNC) enables you to control a remote computer
    via a graphical desktop (as opposed to a remote shell access). VNC is
    platform-independent and lets you access the remote machine from any
    operating system.
   </para>

   <para>
    &productname; supports two different kinds of VNC sessions: One-time
    sessions that <quote>live</quote> as long as the VNC connection from the
    client is kept up, and persistent sessions that <quote>live</quote> until
    they are explicitly terminated.
   </para>
  </abstract>
 </info>
 <note>
  <title>Session Types</title>
  <para>
   A machine can offer both kinds of sessions simultaneously on different
   ports, but an open session cannot be converted from one type to the other.
  </para>
 </note>
 <important os="osuse">
  <title>KDE Display Manager <systemitem>sddm</systemitem> not Supported</title>
  <para>
   A machine running KDE Plasma 5 can reliably accept VNC connections only if
   it uses a display manager other than <systemitem>sddm</systemitem>. The
   <systemitem>lightdm</systemitem> display manager can be used as an
   alternative.
  </para>
 </important>
 <sect1 xml:id="sec.vnc.viewer">
  <title>The <command>vncviewer</command> Client</title>

  <para>
   To connect to a VNC service provided by a server, a client is needed. The
   default in &productname; is <command>vncviewer</command>, provided by the
   <systemitem class="resource">tigervnc</systemitem> package.
  </para>

  <sect2 xml:id="sec.vnc.viewer.connectcli">
   <title>Connecting Using the vncviewer CLI</title>
   <para>
    To start your VNC viewer and initiate a session with the server, use the
    command:
   </para>
<screen>vncviewer &wsIname;:1</screen>
   <para>
    Instead of the VNC display number you can also specify the port number with
    two colons:
   </para>
<screen>vncviewer &wsIname;::5901</screen>
   <note>
    <title>Display and Port Number</title>
    <para>
     The actual display or port number you specify in the VNC client must be
     the same as the display or port number picked by the
     <command>vncserver</command> command on the target machine. See
     <xref linkend="sec.vnc.persistent"/> for further info.
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec.vnc.viewer.connectgui">
   <title>Connecting Using the vncviewer GUI</title>
   <para>
    By running <command>vncviewer</command> without specifying
    <command>--listen</command> or a host to connect to, it will show a window
    to ask for connection details. Enter the host into the <guimenu>VNC
    server</guimenu> field like in <xref linkend="sec.vnc.viewer.connectcli"/>
    and click <guimenu>Connect</guimenu>.
   </para>
   <figure xml:id="fig.vnc.viewer.connectgui">
    <title>vncviewer</title>
    <mediaobject>
     <textobject role="description"><phrase>vncviewer asking for connection details</phrase>
     </textobject>
     <imageobject role="html">
      <imagedata fileref="vnc_connect.png" format="PNG"/>
     </imageobject>
     <imageobject role="fo">
      <imagedata fileref="vnc_connect.png" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>

  <sect2 xml:id="sec.vnc.viewer.encrypt">
   <title>Notification of Unencrypted Connections</title>
   <para>
    The VNC protocol supports different kinds of encrypted connections, not to
    be confused with password authentication. If a connection does not use TLS,
    the text <quote>(Connection not encrypted!)</quote> can be seen in the
    window title of the VNC viewer.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.vnc.one-time">
  <title>One-time VNC Sessions</title>

  <para>
   A one-time session is initiated by the remote client. It starts a graphical
   login screen on the server. This way you can choose the user which starts
   the session and, if supported by the login manager, the desktop environment.
   When you terminate the client connection to such a VNC session, all
   applications started within that session will be terminated, too. One-time
   VNC sessions cannot be shared, but it is possible to have multiple sessions
   on a single host at the same time.
  </para>

  <procedure xml:id="pro.vnc.one-time.activate">
   <title>Enabling One-time VNC Sessions</title>
   <step>
    <para>
     Start <menuchoice> <guimenu>&yast;</guimenu> <guimenu>Network
     Services</guimenu> <guimenu>Remote Administration (VNC)</guimenu>
     </menuchoice>.
    </para>
   </step>
   <step>
    <para>
     Check <guimenu>Allow Remote Administration</guimenu>.
    </para>
   </step>
   <step>
    <para>
     If necessary, also check <guimenu>Open Port in Firewall</guimenu> (for
     example, when your network interface is configured to be in the External
     Zone). If you have more than one network interface, restrict opening the
     firewall ports to a specific interface via <guimenu>Firewall
     Details</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Confirm your settings with <guimenu>Finish</guimenu>.
    </para>
   </step>
   <step>
    <para>
     In case not all needed packages are available yet, you need to approve the
     installation of missing packages.
    </para>
   </step>
  </procedure>

  <sect2 xml:id="sec.vnc.one-time.configs">
   <title>Available Configurations</title>
   <para>
    The default configuration on &productname; serves sessions with a
    resolution of 1024x768 pixels at a color depth of 16-bit. The sessions are
    available on ports <systemitem class="resource">5901</systemitem> for
    <quote>regular</quote> VNC viewers (equivalent to VNC display
    <literal>1</literal>) and on port
    <systemitem class="resource">5801</systemitem> for Web browsers.
   </para>
   <para>
    Other configurations can be made available on different
    ports<phrase os="sles;osuse">, see
    <xref linkend="sec.vnc.one-time.config"/></phrase>.<phrase os="sled"> Ask
    your system administrator for details if you need to modify the
    configuration.</phrase>
   </para>
   <para>
    VNC display numbers and X display numbers are independent in one-time
    sessions. A VNC display number is manually assigned to every configuration
    that the server supports (:1 in the example above). Whenever a VNC session
    is initiated with one of the configurations, it automatically gets a free X
    display number.
   </para>
   <para>
    By default, both the VNC client and server try to communicate securely via
    a self-signed SSL certificate, which is generated after installation. You
    can either use the default one, or replace it with your own. When using the
    self-signed certificate, you need to confirm its signature before the first
    connection.
   </para>
  </sect2>

  <sect2 xml:id="sec.vnc.one-time.connect">
   <title>Initiating a One-time VNC Session</title>
   <para>
    To connect to a persistent VNC session, a VNC viewer must be installed, see
    also <xref linkend="sec.vnc.viewer"/>.
   </para>
  </sect2>

  <sect2 xml:id="sec.vnc.one-time.config">
   <title>Configuring One-time VNC Sessions</title>
   <para>
    You can skip this section, if you do not need or want to modify the default
    configuration.
   </para>
   <para>
    One-time VNC sessions are started via the &systemd; socket
    <systemitem>xvnc.socket</systemitem>. By default it offers six configuration
    blocks: three for VNC viewers (<literal>vnc1</literal> to
    <literal>vnc3</literal>), and three serving a Java applet
    (<literal>vnchttpd1</literal> to <literal>vnchttpd3</literal>).  By default
    only <literal>vnc1</literal> and <literal>vnchttpd1</literal> are active.
   </para>
   <para>
    To activate the VNC server socket at boot time, run the following command:
   </para>
<screen>&rootuser;systemctl enable xvnc.socket</screen>
   <para>
    To start the socket immediately, run:
   </para>
<screen>&rootuser;systemctl start xvnc.socket</screen>
   <para>
    The <command>Xvnc</command> server can be configured via the
    <literal>server_args</literal> option&mdash;see <command>Xnvc
    --help</command> for a list of options.
   </para>
   <para>
    When adding custom configurations, make sure they are not using ports that
    are already in use by other configurations, other services, or existing
    persistent VNC sessions on the same host.
   </para>
   <para>
    Activate configuration changes by entering the following command:
   </para>
<screen>sudo systemctl reload xvnc.socket</screen>
   <important>
    <title>Firewall and VNC Ports</title>
    <para>
     When activating Remote Administration as described in
     <xref linkend="pro.vnc.one-time.activate"/>, the ports
     <systemitem class="resource">5801</systemitem> and
     <systemitem class="resource">5901</systemitem> are opened in the firewall.
     If the network interface serving the VNC sessions is protected by a
     firewall, you need to manually open the respective ports when activating
     additional ports for VNC sessions. See
     <xref linkend="cha.security.firewall"/> for instructions.
    </para>
   </important>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.vnc.persistent">
  <title>Persistent VNC Sessions</title>

  <para>
   A persistent VNC session is initiated on the server. The session and all
   applications started in this session run regardless of client connections
   until the session is terminated.
  </para>

  <para>
   A persistent session can be accessed from multiple clients simultaneously.
   This is ideal for demonstration purposes where one client has full access
   and all other clients have view-only access. Another use case are trainings
   where the trainer might need access to the trainee's desktop. However, most
   of the times you probably do not want to share your VNC session.
  </para>

  <para>
   In contrast to one-time sessions that start a display manager, a persistent
   session starts a ready-to-operate desktop that runs as the user that started
   the VNC session. Access to persistent sessions is protected by a password.
  </para>

  <para>
   Access to persistent sessions is protected by two possible types of
   passwords:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     a regular password that grants full access or
    </para>
   </listitem>
   <listitem>
    <para>
     an optional view-only password that grants a non-interactive (view-only)
     access.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   A session can have multiple client connections of both kinds at once.
  </para>

  <procedure xml:id="pro.vnc.persistent.activate">
   <title>Starting a Persistent VNC Session</title>
   <step>
    <para>
     Open a shell and make sure you are logged in as the user that should own
     the VNC session.
<!-- max: should we add some more
     words here to explain that the shell session could either be a
     local one or a ssh session, or can we assume this to be known by
     the customer? -->
    </para>
   </step>
   <step>
    <para>
     If the network interface serving the VNC sessions is protected by a
     firewall, you need to manually open the port used by your session in the
     firewall. If starting multiple sessions you may alternatively open a range
     of ports. See <xref linkend="cha.security.firewall"/> for details on how
     to configure the firewall.
    </para>
    <para>
     <command>vncserver</command> uses the ports
     <systemitem class="resource">5901</systemitem> for display
     <literal>:1</literal>, <systemitem class="resource">5902</systemitem> for
     display <literal>:2</literal>, and so on. For persistent sessions, the VNC
     display and the X display usually have the same number.
    </para>
   </step>
   <step>
    <para>
     To start a session with a resolution of 1024x769 pixel and with a color
     depth of 16-bit, enter the following command:
    </para>
<screen>vncserver -geometry 1024x768 -depth 16</screen>
    <para>
     The <command>vncserver</command> command picks an unused display number
     when none is given and prints its choice. See <command>man 1
     vncserver</command> for more options.
    </para>
   </step>
  </procedure>

  <para>
   When running <command>vncserver</command> for the first time, it asks for a
   password for full access to the session. If needed, you can also provide a
   password for view-only access to the session.
  </para>

  <para>
   The password(s) you are providing here are also used for future sessions
   started by the same user. They can be changed with the
   <command>vncpasswd</command> command.
  </para>

  <important>
   <title>Security Considerations</title>
   <para>
    Make sure to use strong passwords of significant length (eight or more
    characters). Do not share these passwords.
   </para>
  </important>

  <para>
   To terminate the session shut down the desktop environment that runs inside
   the VNC session from the VNC viewer as you would shut it down if it was a
   regular local X session.
  </para>

  <para>
   If you prefer to manually terminate a session, open a shell on the VNC
   server and make sure you are logged in as the user that owns the VNC session
   you want to terminate. Run the following command to terminate the session
   that runs on display <literal>:1</literal>: <command>vncserver -kill
   :1</command>
  </para>

  <sect2 xml:id="sec.vnc.persistent.connect">
   <title>Connecting to a Persistent VNC Session</title>
   <para>
    To connect to a persistent VNC session, a VNC viewer must be installed, see
    also <xref linkend="sec.vnc.viewer"/>.
   </para>
  </sect2>

  <sect2 xml:id="sec.vnc.persistent.configure">
   <title>Configuring Persistent VNC Sessions</title>
   <para>
    Persistent VNC sessions can be configured by editing
    <filename>$HOME/.vnc/xstartup</filename>. By default this shell script
    starts the same GUI/window manager it was started from. In &productname;
    this will either be &gnome; or IceWM. If you want to start your session
    with a window manager of your choice, set the variable
    <envar>WINDOWMANAGER</envar>:
   </para>
<screen>WINDOWMANAGER=gnome vncserver -geometry 1024x768
WINDOWMANAGER=icewm vncserver -geometry 1024x768</screen>
   <note>
    <title>One Configuration for Each User</title>
    <para>
     Persistent VNC sessions are configured in a single per-user configuration.
     Multiple sessions started by the same user will all use the same start-up
     and password files.
    </para>
   </note>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.vnc.encrypt">
  <title>Encrypted VNC Communication</title>

  <para>
   If the VNC server is set up properly, all communication between the VNC
   server and the client is encrypted. The authentication happens at the
   beginning of the session, the actual data transfer only begins afterward.
  </para>

  <para>
   Whether for a one-time or a persistent VNC session,
   security options are configured via the
   <option>-securitytypes</option> parameter of the
   <command>/usr/bin/Xvnc</command> command located on the
   <literal>server_args</literal> line. The <option>-securitytypes</option>
   parameter selects both authentication method and encryption. It has the
   following options:
  </para>

  <variablelist>
   <title>Authentications</title>
   <varlistentry>
    <term>None, TLSNone, X509None</term>
    <listitem>
     <para>
      No authentication.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>VncAuth, TLSVnc, X509Vnc</term>
    <listitem>
     <para>
      Authentication using custom password.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Plain, TLSPlain, X509Plain</term>
    <listitem>
     <para>
      Authentication using PAM to verify user's password.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Encryptions</title>
   <varlistentry>
    <term>None, VncAuth, Plain</term>
    <listitem>
     <para>
      No encryption.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>TLSNone, TLSVnc, TLSPlain</term>
    <listitem>
     <para>
      Anonymous TLS encryption. Everything is encrypted, but there is no
      verification of the remote host. So you are protected against passive
      attackers, but not against man-in-the-middle attackers.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>X509None, X509Vnc, X509Plain</term>
    <listitem>
     <para>
      TLS encryption with certificate. If you use a self-signed certificate,
      you will be asked to verify it on the first connection. On subsequent
      connections you will be warned only if the certificate changed. So you
      are protected against everything except man-in-the-middle on the first
      connection (similar to typical SSH usage). If you use a certificate
      signed by a certificate authority matching the machine name, then you
      get full security (similar to typical HTTPS usage).
     </para>
     <tip>
      <title>Path to Certificate and Key</title>
      <para>
       With X509 based encryption, you need to specify the path to the X509
       certificate and the key with <option>-X509Cert</option> and
       <option>-X509Key</option> options.
      </para>
     </tip>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   If you select multiple security types separated by comma, the first one
   supported and allowed by both client and server will be used. That way you
   can configure opportunistic encryption on the server. This is useful if you
   need to support VNC clients that do not support encryption.
  </para>

  <para>
   On the client, you can also specify the allowed security types to prevent a
   downgrade attack if you are connecting to a server which you know has
   encryption enabled (although our vncviewer will warn you with the
   "Connection not encrypted!" message in that case).
  </para>
 </sect1>
</chapter>
