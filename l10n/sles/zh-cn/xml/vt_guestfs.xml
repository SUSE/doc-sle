<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="vt_guestfs.xml" version="5.0" xml:id="chap-guestfs" xml:lang="zh-cn">
  <title>libguestfs</title>
  <info>
    <abstract>
      <para>
        <xref linkend="gloss-vt-vm"/>由磁盘映像和定义文件构成。您可以手动访问和操作这些 Guest 组件（在常规超级管理程序进程外部），但这从本质上会给数据完整性造成危害和风险。libguestfs 是用于安全访问和修改<xref linkend="gloss-vt-vm"/>磁盘映像的一个 C 库和一组相应工具 — 这些操作在常规超级管理程序进程外部进行，却不会像手动编辑那样往往造成风险。
      </para>
    </abstract>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>
  <important>
    <para>
      只有 AMD64/Intel 64 体系结构完全支持使用 libguestfs 工具。
    </para>
  </important>
  <sect1 xml:id="sec-guestfs-intro">
    <title>VM Guest 操作概述</title>

    <para/>

    <sect2 xml:id="sec-guestfs-intro-risk">
      <title>VM Guest 操作风险</title>
      <para>
        磁盘映像和定义文件不过是 Linux 环境中另一种类型的文件，因此可以使用许多工具来访问、编辑这些文件以及向其中写入数据。如果正确使用，此类工具可成为 Guest 管理的重要组成部分。但是，即使是正确使用这些工具，也不一定能够杜绝风险。手动操作 Guest 磁盘映像时应考虑到如下风险：
      </para>
      <itemizedlist mark="bullet" spacing="normal">
        <listitem>
          <para>
            <emphasis>数据损坏</emphasis>：如果绕过虚拟化保护层，通过主机计算机或群集中的另一节点并发访问映像，可能会导致更改丢失或数据损坏。
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>安全性</emphasis>：将磁盘映像挂载为循环设备需要 root 访问权限。如果映像不是循环挂载的，其他用户和进程就有可能可以访问磁盘内容。
          </para>
        </listitem>
        <listitem>
          <para>
            <emphasis>管理员错误</emphasis>：正确绕过虚拟化层需要对虚拟组件和工具有深入的了解。如果在做出更改后无法隔离映像或无法正确进行清理，可能会导致在恢复虚拟化控制后出现其他问题。
          </para>
        </listitem>
      </itemizedlist>
    </sect2>

    <sect2 xml:id="sec-guestfs-intro-design">
      <title>libguestfs 的设计用途</title>
      <para>
        libguestfs C 库用于安全地创建、访问和修改虚拟机 (VM Guest) 磁盘映像。它还提供适用于 <link xlink:href="https://libguestfs.org/guestfs-perl.3.html">Perl</link>、<link xlink:href="https://libguestfs.org/guestfs-python.3.html">Python</link>、PHP（仅限 64 位计算机）和 <link xlink:href="https://libguestfs.org/guestfs-ruby.3.html">
        Ruby</link> 的其他语言绑定。libguestfs 无需 root 权限即可访问 VM Guest 磁盘映像，并提供多层防御机制来防范恶意磁盘映像。
      </para>
      <para>
        libguestfs 提供许多用于访问和修改 VM Guest 磁盘映像与内容的工具。这些工具提供如下功能：查看和编辑 Guest 内部的文件、通过脚本对 VM Guest 进行更改、监视已用/可用磁盘空间统计信息、创建 Guest、执行 V2V 或 P2V 迁移、执行备份、克隆 VM Guest、格式化磁盘和调整磁盘大小。
      </para>
      <warning>
        <title>最佳实践</title>
        <para>
          切勿在实时虚拟机上使用 libguestfs 工具，这可能会导致 VM Guest 中发生磁盘损坏。libguestfs 工具会尝试阻止您这样做，但无法做到万无一失。
        </para>
        <para>
          但是，大多数命令都具有 <option>--ro</option>（只读）选项。使用此选项可以在实时虚拟机上运行命令。结果可能比较奇怪或不一致，但可以避免磁盘损坏的风险。
        </para>
      </warning>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-guestfs-package">
    <title>软件包安装</title>

    <para>
      libguestfs 通过 4 个软件包提供：
    </para>

    <itemizedlist mark="bullet" spacing="normal">
      <listitem>
        <para>
          <systemitem class="resource">libguestfs0</systemitem>：提供主 C 库
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem class="resource">guestfs-data</systemitem>：包含启动映像时使用的设备文件（存储在 <filename>/usr/lib64/guestfs</filename> 中）
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem class="resource">guestfs-tools</systemitem>：核心 guestfs 工具、手册页和 <filename>/etc/libguestfs-tools.conf</filename> 配置文件。
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem class="resource">guestfs-winsupport</systemitem>：在 guestfs 工具中提供对 Windows 文件 Guest 的支持。仅当您需要处理 Windows Guest 时才需安装此软件包，例如，在将 Windows Guest 转换为 KVM 时。
        </para>
      </listitem>
    </itemizedlist>

    <para>
      要在系统上安装 guestfs 工具，请运行：
    </para>

<screen><prompt>&gt; </prompt><command>sudo</command> zypper in guestfs-tools</screen>
  </sect1>
  <sect1 xml:id="sec-guestfs-tools">
    <title>Guestfs 工具</title>

    <para/>

    <sect2 xml:id="sec-guestfs-tools-intro">
      <title>修改虚拟机</title>
      <para>
        guestfs-tools 软件包中的工具集用于访问和修改虚拟机磁盘映像。此功能通过用户所熟悉的、可提供内置保护措施来确保映像完整性的外壳界面提供。Guestfs 工具外壳会公开 guestfs API 的所有功能，并使用计算机上安装的软件包以及 <filename>/usr/lib64/guestfs</filename> 中的文件即时创建设备。
      </para>
    </sect2>

    <sect2 xml:id="sec-guestfs-tools-supportedfs">
      <title>支持的文件系统和磁盘映像</title>
      <para>
        Guestfs 工具支持多种文件系统，包括：
      </para>
      <itemizedlist mark="bullet" spacing="normal">
        <listitem>
          <para>
            Ext2、Ext3、Ext4
          </para>
        </listitem>
        <listitem>
          <para>
            Xfs
          </para>
        </listitem>
        <listitem>
          <para>
            Btrfs
          </para>
        </listitem>
      </itemizedlist>
      <para>
        还支持多种磁盘映像格式：
      </para>
      <itemizedlist mark="bullet" spacing="normal">
        <listitem>
          <para>
            raw
          </para>
        </listitem>
        <listitem>
          <para>
            qcow2
          </para>
        </listitem>
      </itemizedlist>
      <warning>
        <title>不支持的文件系统</title>
        <para>
          Guestfs 可能还支持 Windows* 文件系统（VFAT、NTFS）、BSD* 和 Apple* 文件系统，以及其他磁盘映像格式（VMDK、VHDX...）。但这些文件系统和磁盘映像格式在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 上不受支持。
        </para>
      </warning>
    </sect2>

    <sect2 xml:id="sec-guestfs-tools-virt-rescue">
      <title><command>virt-rescue</command></title>
      <para>
        <command>virt-rescue</command> 类似于救援 CD，但用于虚拟机，且无需提供 CD。virt-rescue 为用户提供救援外壳和多种简单的恢复工具，可用于检查和更正虚拟机或磁盘映像中的问题。
      </para>
<screen><prompt>&gt; </prompt>virt-rescue -a sles.qcow2
Welcome to virt-rescue, the libguestfs rescue shell.

Note: The contents of / are the rescue appliance.
You need to mount the guest's partitions under /sysroot
before you can examine them. A helper script for that exists:
mount-rootfs-and-do-chroot.sh /dev/sda2

&gt;&lt;rescue&gt;
[   67.194384] EXT4-fs (sda1): mounting ext3 file system
using the ext4 subsystem
[   67.199292] EXT4-fs (sda1): mounted filesystem with ordered data
mode. Opts: (null)
mount: /dev/sda1 mounted on /sysroot.
mount: /dev bound on /sysroot/dev.
mount: /dev/pts bound on /sysroot/dev/pts.
mount: /proc bound on /sysroot/proc.
mount: /sys bound on /sysroot/sys.
Directory: /root
Thu Jun  5 13:20:51 UTC 2014
(none):~ #
   </screen>
      <para>
        您现在是以救援模式运行 VM Guest 的：
      </para>
<screen>(none):~ # cat /etc/fstab
devpts  /dev/pts          devpts  mode=0620,gid=5 0 0
proc    /proc             proc    defaults        0 0
sysfs   /sys              sysfs   noauto          0 0
debugfs /sys/kernel/debug debugfs noauto          0 0
usbfs   /proc/bus/usb     usbfs   noauto          0 0
tmpfs   /run              tmpfs   noauto          0 0
/dev/disk/by-id/ata-QEMU_HARDDISK_QM00001-part1 / ext3 defaults 1 1</screen>
    </sect2>

    <sect2 xml:id="sec-guestfs-tools-virt-resize">
      <title><command>virt-resize</command></title>
      <para>
        <command>virt-resize</command> 用于调整虚拟机磁盘的大小（增大或减小其总体大小），以及调整其中包含的任何分区的大小，或删除这些分区。
      </para>
      <procedure xml:id="pro-guestfs-tools-virt-resize">
        <title>扩展磁盘</title>
        <para>
          完整的分步操作示例：如何扩展虚拟机磁盘
        </para>
        <step>
          <para>
            首先，在关闭虚拟机的情况下，确定此虚拟机上可用的分区大小：
          </para>
<screen><prompt>&gt; </prompt>virt-filesystems --long --parts --blkdevs -h -a sles.qcow2
Name       Type       MBR  Size  Parent
/dev/sda1  partition  83   16G   /dev/sda
/dev/sda   device     -    16G   -</screen>
        </step>
        <step>
          <para>
            <command>virt-resize</command> 无法执行就地磁盘修改 — 必须有足够的空间用于存储调整大小后的输出磁盘。使用 <command>truncate</command> 命令创建适当大小的文件：
          </para>
<screen><prompt>&gt; </prompt>truncate -s 32G outdisk.img</screen>
        </step>
        <step>
          <para>
            使用 <command>virt-resize</command> 调整磁盘映像的大小。<command>virt-resize</command> 要求为输入映像和输出映像指定两个必需的参数：
          </para>
<screen><prompt>&gt; </prompt>virt-resize --expand /dev/sda1 sles.qcow2 outdisk.img
Examining sles.qcow2 ...
**********
Summary of changes:

/dev/sda1: This partition will be resized from 16,0G to 32,0G.  The
    filesystem ext3 on /dev/sda1 will be expanded using the 'resize2fs'
    method.

**********
Setting up initial partition table on outdisk.img ...
Copying /dev/sda1 ...
◐ 84%
⟦▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒════════⟧ 00:03
Expanding /dev/sda1 using the 'resize2fs' method ...

Resize operation completed with no errors.  Before deleting the old
disk, carefully check that the resized disk boots and works correctly.</screen>
        </step>
        <step>
          <para>
            确认是否已正确调整映像大小：
          </para>
<screen><prompt>&gt; </prompt>virt-filesystems --long --parts --blkdevs -h -a outdisk.img
Name       Type       MBR  Size  Parent
/dev/sda1  partition  83   32G   /dev/sda
/dev/sda   device     -    32G   -</screen>
        </step>
        <step>
          <para>
            使用新磁盘映像启动 VM Guest，确认其运行正常，然后删除旧映像。
          </para>
        </step>
      </procedure>
    </sect2>

    <sect2 xml:id="sec-guestfs-tools-others">
      <title>其他 virt-* 工具</title>
      <para>
        某些 guestfs 工具可以简化管理任务 — 例如查看和编辑文件，或者获取有关虚拟机的信息。
      </para>
      <sect3 xml:id="sec-guestfs-tools-others-filesystem">
        <title><command>virt-filesystems</command></title>
        <para>
          此工具用于报告有关磁盘映像或虚拟机中的文件系统、分区和逻辑卷的信息。
        </para>
<screen><prompt>&gt; </prompt>virt-filesystems -l -a sles.qcow2
Name       Type        VFS   Label  Size         Parent
/dev/sda1  filesystem  ext3  -      17178820608  -</screen>
      </sect3>
      <sect3 xml:id="sec-guestfs-tools-others-ls">
        <title><command>virt-ls</command></title>
        <para>
          <command>virt-ls</command> 可列出虚拟机或磁盘映像中的文件名、文件大小、校验和、扩展属性等信息。可以指定多个目录名，在这种情况下，每个目录的输出将会串联起来。要列出某个 libvirt Guest 中的目录，请使用 <option>-d</option> 选项指定 Guest 名称。对于磁盘映像，请使用 <option>-a</option> 选项。
        </para>
<screen><prompt>&gt; </prompt>virt-ls -h -lR -a sles.qcow2 /var/log/
d 0755        776 /var/log
- 0640          0 /var/log/NetworkManager
- 0644        23K /var/log/Xorg.0.log
- 0644        23K /var/log/Xorg.0.log.old
d 0700        482 /var/log/YaST2
- 0644        512 /var/log/YaST2/_dev_vda
- 0644         59 /var/log/YaST2/arch.info
- 0644        473 /var/log/YaST2/config_diff_2017_05_03.log
- 0644       5.1K /var/log/YaST2/curl_log
- 0644       1.5K /var/log/YaST2/disk_vda.info
- 0644       1.4K /var/log/YaST2/disk_vda.info-1
[...]</screen>
      </sect3>
      <sect3 xml:id="sec-guestfs-tools-others-cat">
        <title><command>virt-cat</command></title>
        <para>
          <command>virt-cat</command> 命令行工具用于显示命名虚拟机（或磁盘映像）中存在的文件的内容。可以指定多个文件名，在这种情况下，这些文件名会串联到一起。指定每个文件名时，必须提供以根目录 (<literal>/</literal>) 开头的绝对路径。
        </para>
<screen><prompt>&gt; </prompt>virt-cat -a sles.qcow2 /etc/fstab
devpts /dev/pts devpts mode=0620,gid=5 0 0
proc   /proc    proc   defaults        0 0</screen>
      </sect3>
      <sect3 xml:id="sec-guestfs-tools-others-df">
        <title><command>virt-df</command></title>
        <para>
          <command>virt-df</command> 命令行工具用于显示虚拟机文件系统上的可用空间。与其他工具不同，它不仅会显示分配给虚拟机的磁盘大小，而且还会查看磁盘映像内部以显示使用的空间量。
        </para>
<screen><prompt>&gt; </prompt>virt-df -a sles.qcow2
Filesystem                           1K-blocks       Used  Available  Use%
sles.qcow2:/dev/sda1                  16381864     520564   15022492  4%</screen>
      </sect3>
      <sect3 xml:id="sec-guestfs-tools-others-edit">
        <title><command>virt-edit</command></title>
        <para>
          <command>virt-edit</command> 命令行工具能够编辑驻留在命名虚拟机（或磁盘映像）中的文件。
        </para>
      </sect3>
      <sect3 xml:id="sec-guestfs-tools-others-tar">
        <title><command>virt-tar-in/out</command></title>
        <para>
          <command>virt-tar-in</command> 可将未压缩的 TAR 存档解压缩到虚拟机磁盘映像或命名的 libvirt 域中。<command>virt-tar-out</command> 可将虚拟机磁盘映像目录打包成 TAR 存档。
        </para>
<screen><prompt>&gt; </prompt>virt-tar-out -a sles.qcow2 /home homes.tar</screen>
      </sect3>
      <sect3 xml:id="sec-guestfs-tools-others-copy">
        <title><command>virt-copy-in/out</command></title>
        <para>
          <command>virt-copy-in</command> 可将本地磁盘中的文件和目录复制到虚拟机磁盘映像或命名的 libvirt 域中。<command>virt-copy-out</command> 可从虚拟机磁盘映像或命名的 libvirt 域中复制文件和目录。
        </para>
<screen><prompt>&gt; </prompt>virt-copy-in -a sles.qcow2 data.tar /tmp/
<prompt>&gt; </prompt>virt-ls -a sles.qcow2 /tmp/
.ICE-unix
.X11-unix
data.tar</screen>
      </sect3>
      <sect3 xml:id="sec-guestfs-tools-others-log">
        <title><command>virt-log</command></title>
        <para>
          <command>virt-log</command> 可显示命名的 libvirt 域、虚拟机或磁盘映像的日志文件。如果安装了软件包 <package>guestfs-winsupport</package>，则 virt-log 还可显示 Windows 虚拟机磁盘映像的事件日志。
        </para>
<screen><prompt>&gt; </prompt>virt-log -a windows8.qcow2
&lt;?xml version="1.0" encoding="utf-8" standalone="yes" ?&gt;
&lt;Events&gt;
&lt;Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"&gt;&lt;System&gt;&lt;Provider Name="EventLog"&gt;&lt;/Provider&gt;
&lt;EventID Qualifiers="32768"&gt;6011&lt;/EventID&gt;
&lt;Level&gt;4&lt;/Level&gt;
&lt;Task&gt;0&lt;/Task&gt;
&lt;Keywords&gt;0x0080000000000000&lt;/Keywords&gt;
&lt;TimeCreated SystemTime="2014-09-12 05:47:21"&gt;&lt;/TimeCreated&gt;
&lt;EventRecordID&gt;1&lt;/EventRecordID&gt;
&lt;Channel&gt;System&lt;/Channel&gt;
&lt;Computer&gt;windows-uj49s6b&lt;/Computer&gt;
&lt;Security UserID=""&gt;&lt;/Security&gt;
&lt;/System&gt;
&lt;EventData&gt;&lt;Data&gt;&lt;string&gt;WINDOWS-UJ49S6B&lt;/string&gt;
&lt;string&gt;WIN-KG190623QG4&lt;/string&gt;
&lt;/Data&gt;
&lt;Binary&gt;&lt;/Binary&gt;
&lt;/EventData&gt;
&lt;/Event&gt;

...
</screen>
      </sect3>
    </sect2>

    <sect2 xml:id="sec-guestfs-guestfish">
      <title><command>guestfish</command></title>
      <para>
        <command>guestfish</command> 是用于检查和修改虚拟机文件系统的外壳和命令行工具。它使用 libguestfs 并公开 guestfs API 的所有功能。
      </para>
      <para>
        用法示例：
      </para>
<screen><prompt>&gt; </prompt>guestfish -a disk.img &lt;&lt;EOF
run
list-filesystems
EOF</screen>
<screen>guestfish

Welcome to guestfish, the guest filesystem shell for
editing virtual machine filesystems and disk images.

Type: 'help' for help on commands
      'man' to read the manual
      'quit' to quit the shell

&gt;&lt;fs&gt; add sles.qcow2
&gt;&lt;fs&gt; run
&gt;&lt;fs&gt; list-filesystems
/dev/sda1: ext3
&gt;&lt;fs&gt; mount /dev/sda1 /
 cat /etc/fstab
devpts  /dev/pts          devpts  mode=0620,gid=5 0 0
proc    /proc             proc    defaults        0 0
sysfs   /sys              sysfs   noauto          0 0
debugfs /sys/kernel/debug debugfs noauto          0 0
usbfs   /proc/bus/usb     usbfs   noauto          0 0
tmpfs   /run              tmpfs   noauto          0 0
/dev/disk/by-id/ata-QEMU_HARDDISK_QM00001-part1 / ext3 defaults 1 1</screen>
    </sect2>

    <sect2 xml:id="sec-guestfs-p2v">
      <title>将物理机转换为 KVM Guest</title>
      <para>
        Libguestfs 提供了可帮助您将 Xen 虚拟机或物理机转换为 KVM Guest 的工具。<phrase os="sles"><xref linkend="xen2kvm-migration"/>中介绍了从 Xen 转换到 KVM 的方案。</phrase>下一节将介绍一个特殊用例：将裸机转换为 KVM 计算机。
      </para>
      <para>
        <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 尚不支持将物理机转换为 KVM 计算机。此功能仅发布为技术预览版。
      </para>
      <para>
        转换某个物理机需要收集有关该物理机的信息，并将这些信息传输到转换服务器。要实现此目的，需在计算机上运行一个使用 <command>virt-p2v</command> 和 KIWI 工具准备的实时系统。
      </para>
      <procedure xml:id="pro-guestfs-p2v-kiwi">
        <title>使用 virt-p2v</title>
        <step>
          <para>
            使用以下命令安装所需的软件包：
          </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper in virt-p2v kiwi-desc-isoboot</screen>
          <note>
            <para>
              这些步骤将会阐述如何创建一个 ISO 映像用于创建可引导 DVD。或者，您也可以改为创建 PXE 引导映像；有关使用 KIWI 构建 PXE 映像的详细信息，请参见 <command>man virt-p2v-make-kiwi</command>。
            </para>
          </note>
        </step>
        <step>
          <para>
            创建 KIWI 配置：
          </para>
<screen><prompt>&gt; </prompt>virt-p2v-make-kiwi -o <replaceable>/tmp/p2v.kiwi</replaceable></screen>
          <para>
            <option>-o</option> 定义在何处创建 KIWI 配置。
          </para>
        </step>
        <step>
          <para>
            如果需要，请编辑生成的配置中的 <filename>config.xml</filename> 文件。例如，在 <filename>config.xml</filename> 中调整实时系统的键盘布局。
          </para>
        </step>
        <step>
          <para>
            使用 <command>kiwi</command> 构建 ISO 映像：
          </para>
<screen><prompt>&gt; </prompt>kiwi --build <replaceable>/tmp/p2v.kiwi</replaceable><co xml:id="p2v-config"/> \
     -d <replaceable>/tmp/build</replaceable><co xml:id="p2v-target"/> \
     --ignore-repos \
     --add-repo <replaceable>http://URL/TO/SLE/REPOSITORIES</replaceable><co xml:id="p2v-repo"/> \
     --type iso</screen>
          <calloutlist>
            <callout arearefs="p2v-config">
              <para>
                存放上一步中生成的 KIWI 配置的目录。
              </para>
            </callout>
            <callout arearefs="p2v-target">
              <para>
                KIWI 将用于存放生成的 ISO 映像及其他中间构建结果的目录。
              </para>
            </callout>
            <callout arearefs="p2v-repo">
              <para>
                使用 <command>zypper lr -d</command> 找到的软件包储存库的 URL。
              </para>
              <para>
                请对每个储存库使用一个 <option>--add-repo</option> 参数。
              </para>
            </callout>
          </calloutlist>
        </step>
        <step>
          <para>
            在 DVD 或 USB 记忆棒上刻录 ISO。使用此类媒体引导要转换的计算机。
          </para>
        </step>
        <step>
          <para>
            系统启动后，请输入<emphasis>转换服务器</emphasis>的连接细节。此服务器是装有 <systemitem class="resource">virt-v2v</systemitem> 软件包的计算机。
          </para>
          <para>
            如果网络设置比 DHCP 客户端更复杂，请单击<guimenu>配置网络</guimenu>按钮打开 YaST 网络配置对话框。
          </para>
          <para>
            单击<guimenu>测试连接</guimenu>按钮以转到向导的下一页。
          </para>
        </step>
        <step>
          <para>
            选择要转换的磁盘和网络接口，并定义 VM 数据，例如分配的 CPU 数量和内存量，以及虚拟机名称。
          </para>
          <note>
            <para>
              如果不定义这些数据，创建的磁盘映像默认将采用 <emphasis>raw</emphasis> 格式。可以在<guimenu>输出格式</guimenu>字段中输入所需格式来更改此格式。
            </para>
          </note>
          <para>
            可通过两种方法生成虚拟机：使用 <emphasis>local</emphasis> 或 <emphasis>libvirt</emphasis> 输出。第一种方法将虚拟机磁盘映像和配置放到<guimenu>输出存储</guimenu>字段中定义的路径。然后，可以通过 <command>virsh</command> 使用这些内容来定义由 libvirt 处理的新 Guest。第二种方法使用放在<guimenu>输出存储</guimenu>字段所定义的池中的磁盘映像，来创建由 libvirt 处理的新 Guest。
          </para>
          <para>
            单击<guimenu>开始转换</guimenu>开始该过程。
          </para>
        </step>
      </procedure>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-guestfs-trouble">
    <title>查错</title>

    <para/>

    <sect2 xml:id="sec-guestfs-trouble-btrfs">
      <title>Btrfs 相关的问题</title>
      <para>
        对包含 Btrfs 根分区（在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中为默认设置）的映像使用 guestfs 工具时，以下错误消息可能会显示：
      </para>
<screen><prompt>&gt; </prompt>virt-ls -a /path/to/sles12sp2.qcow2 /
virt-ls: multi-boot operating systems are not supported

If using guestfish '-i' option, remove this option and instead
use the commands 'run' followed by 'list-filesystems'.
You can then mount file systems you want by hand using the
'mount' or 'mount-ro' command.

If using guestmount '-i', remove this option and choose the
filesystem(s) you want to see by manually adding '-m' option(s).
Use 'virt-filesystems' to see what file systems are available.

If using other virt tools, multi-boot operating systems won't work
with these tools.  Use the guestfish equivalent commands
(see the virt tool manual page).
</screen>
      <para>
        发生此问题通常是因为 Guest 中存在多个快照。在此情况下，guestfs 不知道要引导哪个快照。要强制使用某个快照，请如下所示使用 <option>-m</option> 参数：
      </para>
<screen><prompt>&gt; </prompt>virt-ls -m /dev/sda2:/:subvol=@/.snapshots/2/snapshot -a /path/to/sles12sp2.qcow2 /</screen>
    </sect2>

    <sect2 xml:id="sec-guestfs-trouble-env">
      <title>环境</title>
      <para>
        在 libguestfs 设备中对问题进行查错时，可以使用环境变量 <emphasis>LIBGUESTFS_DEBUG=1</emphasis> 来启用调试消息。要以类似于 guestfish 命令的格式输出每个命令/API 调用，请使用环境变量 <emphasis>LIBGUESTFS_TRACE=1</emphasis>。
      </para>
    </sect2>

    <sect2 xml:id="sec-guestfs-trouble-tools">
      <title><command>libguestfs-test-tool</command></title>
      <para>
        <command>libguestfs-test-tool</command> 是一个测试程序，用于检查基本 libguestfs 功能是否正常工作。它会列显 guestfs 环境的大量诊断消息和细节，然后创建一个测试映像并尝试将其启动。如果它成功运行到完成时，则测试将近结束时应该会显示以下消息：
      </para>
<screen>===== TEST FINISHED OK =====</screen>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-guestfs-external-doc">
    <title>更多信息</title>

    <para/>

    <itemizedlist mark="bullet" spacing="normal">
      <listitem>
        <para>
          <link xlink:href="https://libguestfs.org">libguestfs.org</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link xlink:href="https://libguestfs.org/guestfs-faq.1.html">libguestfs
          FAQ</link>
        </para>
      </listitem>
      
    </itemizedlist>
  </sect1>
</chapter>
