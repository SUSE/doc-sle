<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-qemu-ga">
 <title>&qemu; Guest Agent</title>
 <para>
  The &qemu; guest agent (GA) runs inside the &vmguest; and allows the &vmhost;
  to run commands in the guest operating system via &libvirt;. It supports
  many functions&mdash;for example, getting details about guest file systems,
  freezing and thawing file systems, or suspending or rebooting a guest.
 </para>
 <para>
  &qemu; GA is included in the <package>qemu-guest-agent</package> package and
  is installed, configured, and activated by default on &kvm; or &xen; virtual machines.
 </para>
 <sect1 xml:id="cha-qemu-ga-libvirt-general">
  <title>Running &qemu; GA Commands</title>

  <para>
   &qemu; GA includes many native commands that do not have direct &libvirt;
   counterparts. Refer to <xref linkend="cha-qemu-ga-moreinfo"/> to find the
   complete list. You can run all of the &qemu; GA commands by using
   &libvirt;'s general purpose command <command>qemu-agent-command</command>:
  </para>

<screen>virsh qemu-agent-command <replaceable>DOMAIN_NAME</replaceable> '{"execute":"<replaceable>QEMU_GA_COMMAND</replaceable>"}'</screen>

  <para>
   For example:
  </para>

<screen>&prompt.sudo;virsh qemu-agent-command sle15sp2 '{"execute":"guest-info"}' --pretty
{
"return": {
  "version": "4.2.0",
  "supported_commands": [
    {
      "enabled": true,
      "name": "guest-get-osinfo",
      "success-response": true
    },
[...]
</screen>
 </sect1>
 <sect1 xml:id="cha-qemu-ga-commands">
  <title>&virsh; Commands that Require &qemu; GA</title>

  <para>
   Several &virsh; commands require &qemu; GA for their functionality. Here are
   some of them:
  </para>

  <variablelist>
   <varlistentry>
    <term><command>virsh guestinfo</command></term>
    <listitem>
     <para>
      Prints information about the guest from the guest's point of view.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>virsh guestvcpus</command></term>
    <listitem>
     <para>
      Queries or changes the state of virtual CPUs from the guest's point of view.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>virsh set-user-password</command></term>
    <listitem>
     <para>
      Sets the password for a user account in the guest.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>virsh domfsinfo</command></term>
    <listitem>
     <para>
      Shows a list of mounted file systems within the running domain.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>virsh dompmsuspend</command></term>
    <listitem>
     <para>
      Suspends a running guest.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="cha-qemu-ga-libvirt">
  <title>Enhancing &libvirt; Commands</title>

  <para>
   If &qemu; GA is enabled inside the guest, a number of &virsh; subcommands
   have enhanced functionality when run in the <emphasis>agent</emphasis> mode.
   The following list includes only some examples of them. For a complete list,
   see the &virsh; manual page and search for the <literal>agent</literal>
   string.
  </para>

  <variablelist>
   <varlistentry>
    <term><command>virsh shutdown --mode agent</command> and <command>virsh reboot --mode agent</command></term>
    <listitem>
     <para>
      This method of shutting down or rebooting leaves the guest clean for its next run,
      similar to the ACPI method.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>virsh domfsfreeze</command> and <command>virsh domfsthaw</command></term>
    <listitem>
     <para>
      Instructs the guest to make its file system quiescent: to flush all I/O
      operations in the cache and leave volumes in a consistent state, so that
      no checks will be needed when they are remounted.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>virsh setvcpus --guest</command></term>
    <listitem>
     <para>
      Changes the number of CPUs assigned to a guest.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>virsh domifaddr --source agent</command></term>
    <listitem>
     <para>
      Queries the &qemu; GA for the guest's IP address.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>virsh vcpucount --guest</command></term>
    <listitem>
     <para>
      Prints information about the virtual CPU counts from the perspective of
      the guest.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="cha-qemu-ga-moreinfo">
  <title>For More Information</title>

  <itemizedlist>
   <listitem>
    <para>
     A complete list of commands supported by the &qemu; GA is at
     <link xlink:href="https://www.qemu.org/docs/master/interop/qemu-ga-ref.html"/>.
    </para>
   </listitem>
   <listitem>
    <para>
     The &virsh; manual page (<command>man 1 virsh</command>) includes
     descriptions of the commands that support &qemu; GA interface.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
</chapter>
