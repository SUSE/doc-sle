<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="tuning_multikernel.xml" version="5.0" xml:id="cha-tuning-multikernel">
 <title>安裝多個核心版本</title>
 <info>
  <abstract>
   <para>
    <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase> 支援同時安裝多個核心版本。安裝第二個核心時，將會自動建立一個開機項目和一個 initrd，因此無需進一步的手動組態。將機器重新開機時，新增的核心可用做額外的開機參數。
   </para>

   <para>
    使用此功能，您可以安全測試核心更新，同時，還能夠始終回復到經過驗證的前一核心。執行這種操作時，請不要使用更新工具 (例如 YaST 線上更新或更新程式 Applet)，而應該遵照本章中所述的程序。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <warning os="sles;sled">

  <title>支援授權</title>
  <para>
   請注意，如果您安裝自行編譯的核心或協力廠商核心，則會喪失所有的支援授權。僅支援 <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase> 隨附的核心，以及透過官方更新通道為 <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase> 提供的核心。
  </para>
 </warning>
 <tip>
  <title>檢查開機載入程式組態核心</title>
  <para>
   建議在安裝其他核心後檢查您的開機載入程式組態，以設定您選擇的預設開機項目。如需詳細資訊，請參閱<xref linkend="sec-grub2-yast2-config"/>。
  </para>
 </tip>
 <sect1 xml:id="sec-tuning-multikernel-enable">
  <title>啟用和設定多版本支援</title>



  <para>
   自 <phrase os="sles;sled"> SUSE Linux Enterprise Server 12</phrase> 起，系統預設支援安裝軟體套件的多個版本 (多版本支援)。若要驗證此設定，請執行下列步驟：
  </para>

  <procedure>
   <step>
    <para>
     以 <systemitem class="username">root</systemitem> 身分使用所選的編輯器開啟 <filename>/etc/zypp/zypp.conf</filename>。
    </para>
   </step>
   <step>
    <para>
     搜尋字串 <literal>multiversion</literal>。如果為所有支援此功能的核心套件啟用多版本，下面一行可能會取消註解：
    </para>
<screen>multiversion = provides:multiversion(kernel)</screen>
   </step>
   <step>
    <para>
     若要對特定的核心類別限制多版本支援，請將逗號分隔的套件名稱清單新增到 <filename>/etc/zypp/zypp.conf</filename> 中的 <literal>multiversion</literal> 選項 — 例如
    </para>
<screen>multiversion = kernel-default,kernel-default-base,kernel-source
</screen>
   </step>
   <step>
    <para>
     儲存您所做的變更。
    </para>
   </step>
  </procedure>

  <warning>
   <title>核心模組套件 (KMP)</title>
   <para>
    確定也為更新後的新核心安裝了由廠商提供的必需核心模組 (核心模組套件)。核心更新程序不會發出有關最終缺少核心模組的警告，因為系統上保留的舊核心仍能滿足套件要求。
   </para>
  </warning>

  <sect2 xml:id="sec-tuning-multikernel-enable-keep">
   <title>自動刪除未使用的核心</title>
   <para>
    如果您經常測試已啟用多版本支援的新核心，開機功能表很快就會變得雜亂無序。由於 <filename>/boot</filename> 分割區的空間通常有限，因此，您還可能會遇到 <filename>/boot</filename> 溢位的問題。您可以使用 YaST 或 Zypper 手動刪除未使用的核心版本 (如下文所述)，也可以將 <systemitem class="library">libzypp</systemitem> 設定為自動刪除不再使用的核心。預設不會刪除核心。
   </para>
   <procedure>
    <step>
     <para>
      以 <systemitem class="username">root</systemitem> 身分使用所選的編輯器開啟 <filename>/etc/zypp/zypp.conf</filename>。
     </para>
    </step>
    <step>
     <para>
      搜尋字串 <literal>multiversion.kernels</literal>，並透過取消註解相應的行來啟用此選項。此選項使用包含以下值的逗號分隔清單：
     </para>
     <formalpara>
      <title><literal><replaceable>5.3.18-53.3</replaceable></literal>：</title>
      <para>
       保留具有指定版本號碼的核心
      </para>
     </formalpara>
     <formalpara>
      <title><literal>latest</literal>：</title>
      <para>
       保留具有最高版本號碼的核心
      </para>
     </formalpara>
     <formalpara>
      <title><literal>latest-N</literal>：</title>
      <para>
       保留版本號碼排在第 N 位的核心
      </para>
     </formalpara>
     <formalpara>
      <title><literal>running</literal>：</title>
      <para>
       保留執行中的核心
      </para>
     </formalpara>
     <formalpara>
      <title><literal>oldest</literal>：</title>
      <para>
       保留具有最低版本號碼的核心 (<phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase> 最初隨附的核心)
      </para>
     </formalpara>
     <formalpara>
      <title><literal>oldest+N</literal></title>
      <para>
       保留版本號碼排在倒數第 N 位的核心
      </para>
     </formalpara>
     <para>
      以下是一些範例
     </para>
     <variablelist>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,running</literal>
       </term>
       <listitem>
        <para>
         保留最新核心以及目前正在執行的核心。這類似於不啟用多版本功能，不過，舊核心在<emphasis>下一次重新開機</emphasis>後才會移除，而不是在安裝後立即移除。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,latest-1,running </literal>
       </term>
       <listitem>
        <para>
         保留最新的兩個核心，以及目前正在執行的核心。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal> multiversion.kernels = latest,running,<replaceable>5.3.18-53.3 </replaceable></literal>
       </term>
       <listitem>
        <para>
         保留最新的核心、目前正在執行的核心，以及 <replaceable>5.3.18-53.3</replaceable>。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
     <tip>
      <title>保留執行中的核心</title>
      <para>
       除非您使用的是特殊的設定，否則一律將核心標示為<literal>執行中</literal>。
      </para>
      <para>
       如果不保留執行中的核心，系統在更新核心時會將其刪除。而這意味著執行中核心的所有模組也會被刪除，並且無法再載入。
      </para>
      <para>
       如果您決定不保留執行中的核心，則在升級核心後永遠要立即重新開機，以免模組發生問題。
      </para>
     </tip>
    </step>
   </procedure>
  </sect2>
  <sect2 xml:id="sec-tuning-multikernel-deleteoldkernel">
   <title>使用案例：僅在重新開機後刪除舊核心</title>
   <para>
    您想要確認只在系統成功用新核心重新開機之後才刪除舊核心。
   </para>
   <para>
    變更 <filename>/etc/zypp/zypp.conf</filename> 中的以下行：
   </para>
<screen>multiversion.kernels = latest,running</screen>
   <para>
    上面的參數告知系統要保留最新核心以及執行中的核心 (前提是兩者不同)。
   </para>
  </sect2>

  <sect2 xml:id="sec-tuning-multikernel-fallback">
   <title>使用案例：保留較舊核心做為後援</title>
   <para>
    您想要保留一或多個核心版本，以便有一或多個<quote>備用的</quote>核心。
   </para>
   <para>
    如果需要使用核心進行測試，則這樣做可能十分有用。如果出現了故障 (例如，您的機器不能開機)，您仍可以使用一或多個已知正常的核心版本。
   </para>
   <para>
    變更 <filename>/etc/zypp/zypp.conf</filename> 中的以下行：
   </para>
<screen>multiversion.kernels = latest,latest-1,latest-2,running</screen>
   <para>
    安裝新核心之後，當您將系統重新開機時，系統將保留三個核心：目前的核心 (設定為 <literal>latest,running</literal>)，以及它的前兩任 (設定為 <literal>latest-1</literal> 和 <literal>latest-2</literal>)。
   </para>
  </sect2>

  <sect2 xml:id="sec-tuning-multikernel-specificversion">
   <title>使用案例：保留特定的核心版本</title>
   <para>
    您要執行定期系統更新和安裝新的核心版本。但是，您還要編譯自己的核心版本，並要確認系統將保留這些版本。
   </para>
   <para>
    變更 <filename>/etc/zypp/zypp.conf</filename> 中的以下行：
   </para>
<screen>multiversion.kernels = latest,5.3.18-53.3,running</screen>
   <para>
    在安裝新核心後，將系統重新開機時，系統會保留兩個核心：新的執行中核心 (設定為 <literal>latest,running</literal>)，以及您自己編譯的核心 (設定為 <literal>5.3.18-53.3</literal>)。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-tuning-multikernel-yast">
  <title>使用 YaST 安裝/移除多個核心版本</title>
  <para>
   您可以使用 YaST 安裝或移除多個核心：
  </para>
  <procedure>
   <step>
    <para>
     啟動 YaST，然後透過<menuchoice>
     <guimenu>軟體</guimenu> <guimenu> 軟體管理</guimenu>
     </menuchoice>開啟軟體管理員。
    </para>
   </step>
   <step>
    <para>
     選擇<menuchoice> <guimenu>檢視</guimenu> <guimenu>套件分類</guimenu>
     <guimenu>多版本套件</guimenu> </menuchoice>，以列出能夠提供多個版本的所有套件。
    </para>
    <figure>
     <title>YaST 軟體管理員：多版本檢視</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_sw_multiversion.png" width="90%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="yast2_sw_multiversion.png" width="90%"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     在底部窗格的左側選取一個套件並開啟其<guimenu>版本</guimenu>索引標籤。
    </para>
   </step>
   <step>
    <para>
     若要安裝某個套件，請按一下它旁邊的核取方塊。綠色核取記號表示已選取相應的套件進行安裝。
    </para>
    <para>
     若要移除某個已安裝的套件 (以白色核取記號標示)，請按一下它旁邊的核取方塊，直到出現紅色的 <literal>X</literal>，這表示已選擇移除該套件。
    </para>
   </step>
   <step>
    <para>
     按一下<guimenu>接受</guimenu>開始安裝。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-tuning-multikernel-zypper">
  <title>使用 Zypper 安裝/移除多個核心版本</title>
  <para>
   您可以使用 <command>zypper</command> 安裝或移除多個核心：
  </para>
  <procedure>
   <step>
    <para>
     使用指令 <command>zypper se -s &apos;kernel*&apos;</command> 顯示所有可用核心套件的清單：
    </para>
<screen><?dbsuse-fo font-size="7pt"?>

S  | Name                 | Type    | Version           | Arch   | Repository
---+----------------------+---------+-------------------+--------+------------------------------------------------------
i+ | kernel-default              | package | 5.14.21-150400.6.3              | x86_64 | SLE-Module-Basesystem15-SP4-Pool
   | kernel-default-base         | package | 5.14.21-150400.6.3.150400.22.27 | x86_64 | SLE-Module-Basesystem15-SP4-Pool
   | kernel-default-devel        | package | 5.14.21-150400.6.3              | x86_64 | SLE-Module-Basesystem15-SP4-Pool
   | kernel-devel                | package | 5.14.21-150400.6.4              | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-all         | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-amdgpu      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-ath10k      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-ath11k      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-atheros     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-bluetooth   | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-bnx2        | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-brcm        | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-chelsio     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-dpaa2       | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-i915        | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-intel       | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-iwlwifi     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-liquidio    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-marvell     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-media       | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-mediatek    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-mellanox    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-mwifiex     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-network     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-nfp         | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-nvidia      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-platform    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-prestera    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-qcom        | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-qlogic      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-radeon      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-realtek     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-serial      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-sound       | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-ti          | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-ueagle      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-usb-network | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
   | kernel-macros               | package | 5.14.21-150400.6.4              | noarch | SLE-Module-Basesystem15-SP4-Pool
</screen>
   </step>
   <step>
    <para>
     安裝時指定確切的版本：
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper in kernel-default-5.3.18-53.3</screen>
   </step>
   <step>
    <para>
     解除安裝核心時，使用指令 <command>zypper se -si &apos;kernel*&apos;</command> 可以列出安裝的所有核心，使用 <command>zypper rm </command> <replaceable>套件名稱版本</replaceable>可以移除該套件。
    </para>
   </step>
  </procedure>
 </sect1>
 
</chapter>
