<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="storage_multipath.xml" version="5.0" xml:id="cha-multipath" xml:lang="zh-cn">
 <title>管理设备的多路径 I/O</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  本章介绍如何使用多路径 I/O (MPIO) 来管理服务器和块储存设备间多路径的故障转移和路径负载平衡。
 </para>
 <sect1 xml:id="sec-multipath-intro">
  <title>了解多路径 I/O</title>

  <para>
   多路径是服务器与跨多个物理路径（这些路径在服务器中的主机总线适配器和设备储存控制器之间）的同一物理或逻辑块储存设备通讯的能力，通常是在光纤通道 (FC) 或 iSCSI SAN 环境中。
  </para>

  <para>
   Linux 的多路径提供连接容错，并可以跨多个活动连接提供负载平衡。当多路径已配置并且正在运行时，它会自动隔离和识别设备连接故障，并重路由 I/O 以改变连接。
  </para>

  <para>
    多路径针对连接故障提供容错能力，但不针对储存设备本身的故障提供容错能力。针对后者的容错是通过镜像等互补技术实现的。
  </para>

  <sect2>
    <title>多路径术语</title>
    <variablelist>
      <varlistentry>
	<term>
	  储存阵列
	</term>
	<listitem>
	  <para>
	    包含许多磁盘和多个结构连接（控制器）的硬件设备，为客户端提供 SAN 或 NAS 储存。储存阵列通常具备 RAID 和故障转移功能并支持多路径。一直以来，主动/被动（故障转移）和主动/主动（负载平衡）储存阵列的配置是有区别的。这些概念仍然存在，但它们不过是新式硬件所支持的路径组和访问状态概念的特殊情况。
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  主机、主机系统
	</term>
	<listitem>
	  <para>
	    运行 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 的计算机，充当<emphasis>储存阵列</emphasis>的客户端系统。
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  多路径映射、多路径设备
	</term>
	<listitem>
	  <para>
	  一组<emphasis>路径设备</emphasis>。它代表储存阵列上的储存卷，被主机系统视为单个块设备。
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  路径设备、低级设备
	</term>
	<listitem>
	  <para>
	    多路径映射的成员，通常是一个 SCSI 设备。每个路径设备代表主机计算机与实际储存卷之间的唯一连接，例如，来自 iSCSI 会话的逻辑单元。在 Linux 设备映射程序多路径下，路径设备在主机系统中保持可见且可访问。
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  WWID、UID、UUID
	</term>
	<listitem>
	  <para>
	    “全球标识符”、“唯一标识符”、“全局唯一标识符”。WWID 是储存卷的一个属性，因此，它在多路径映射的所有路径设备之间是相同的。<filename>multipath-tools</filename> 使用 WWID 来确定应将哪些低级设备汇编到多路径映射中。多路径依赖使用 <command>udev</command> 来确定路径设备的 WWID。多路径映射的 WWID 永远不会更改。可以通过 <filename>/dev/disk/by-id/dm-uuid-mpath-<replaceable>WWID</replaceable></filename> 可靠地访问多路径设备。
	  </para>
	  <para>
	    WWID 应该与可配置的<emphasis>映射名称</emphasis>相区分（请参见<xref linkend="sec-multipath-names" xrefstyle="SectTitleOnPage"/>）。
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  uevent、udev 事件
	</term>
	<listitem>
	  <para>
	    由内核发送到用户空间并由 <command>udev</command> 子系统处理的事件。在添加、去除设备或更改其属性时会生成 uevent。
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  设备映射程序
	</term>
	<listitem>
	  <para>
	    Linux 内核中用于创建虚拟块设备的框架。被映射设备的 I/O 操作将重定向到底层块设备。设备映射可以堆叠。设备映射程序实现自身的事件信令（也称为“设备映射程序事件”或“dm 事件”）。
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
 </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-hardware">
  <title>硬件支持</title>

  <para>
   多路径驱动程序和工具可在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 支持的所有体系结构上使用。协议无关的通用驱动程序适用于市场上大多数支持多路径的储存硬件。某些储存阵列供应商提供自己的多路径管理工具。请查看供应商的硬件文档以确定需要哪些设置。
  </para>

  <sect2 xml:id="sec-multipath-hardware-implementations">
    <title>多路径实现：设备映射程序和 NVMe</title>

    <para>
      Linux 中的传统通用多路径实现使用设备映射程序框架。对于 SCSI 设备等大多数设备类型，设备映射程序多路径是唯一可用的实现。设备映射程序多路径具有很高的可配置性和灵活性。
    </para>
    <para>
      Linux <emphasis>NVM Express</emphasis> (NVMe) 内核子系统在内核中本机实现多路径。这种实现可以降低 NVMe 设备（通常是延迟极低的快速设备）的计算开销。本机 NVMe 多路径不需要用户空间组件。从 SLE 15 开始，本机多路径一直是 NVMe 多路径设备的默认设置。
    </para>
    <para>
      本章的余下内容介绍设备映射程序多路径。
    </para>
  </sect2>

  <sect2 xml:id="sec-multipath-hardware-autodetect">
    <title>针对多路径的储存阵列自动检测</title>
    <para>
      设备映射程序多路径是一种通用技术。多路径设备检测只要求内核检测低级（例如 SCSI）设备，并要求设备属性可靠地将多个低级设备标识为同一个卷的不同“路径”，而不是实际不同的设备。
    </para>
    <para>
      <filename>multipath-tools</filename> 软件包按供应商和产品名称检测储存阵列。它已验证多种不同储存产品的内置配置默认值。请查阅储存阵列的硬件文档；某些供应商为 Linux 多路径配置提供了具体的建议。要查看在系统上检测到的内置储存设置，请运行命令 <command>multipath -T</command>，具体请参见<xref linkend="sec-multipath-mpiotools-multipath" xrefstyle="SectTitleOnPage"/>。
    </para>
   <para>
    如果您需要对储存阵列的内置配置应用更改，请创建并配置 <filename>/etc/multipath.conf</filename> 文件。请参见<xref linkend="sec-multipath-conf-file" xrefstyle="SectTitleOnPage"/>。
   </para>
   <note>
     <para>
       <filename>multipath-tools</filename> 为许多储存阵列提供内置预设。给定储存产品存在此类预设<emphasis>并不意味着</emphasis>该储存产品的供应商已使用 <systemitem>dm-multipath</systemitem> 测试了该产品，也不意味着该供应商认可或支持对该产品使用 <systemitem>dm-multipath</systemitem>。如有支持相关的问题，请始终查阅原始供应商文档。
     </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-hardware-handlers">
   <title>需要特定硬件处理程序的储存阵列</title>
   <para>
    某些储存阵列要求运行特殊命令才能从一条路径故障转移到另一条路径，或要求使用非标准的错误处理方法。这些特殊命令和方法由 Linux 内核中的硬件处理程序实现。新式 SCSI 储存阵列支持 SCSI 标准中定义的“非对称逻辑单元访问”(ALUA) 硬件处理程序。除 ALUA 之外，SLE 内核还包含 Netapp E 系列 (RDAC)、Dell/EMC CLARiiON CX 阵列系列和 HP 传统阵列的硬件处理程序。从 Linux 内核 4.4 开始，Linux 内核已自动检测到大多数阵列（包括所有支持 ALUA 的阵列）的硬件处理程序。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-planning">
  <title>规划多路径</title>

  <para>
   当规划多路径 I/O 解决方案时，请使用本节中的准则。
  </para>

  <sect2 xml:id="sec-multipath-planning-prereq">
   <title>先决条件</title>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      用于多路径设备的储存阵列必须支持多路径。有关详细信息，请参见<xref linkend="sec-multipath-hardware" xrefstyle="SectTitleOnPage"/>。
     </para>
    </listitem>
    <listitem>
     <para>
      仅当在服务器中的主机总线适配器和块储存设备的主机总线控制器之间存在多个物理路径时，才需要配置多路径。
     </para>
    </listitem>
    <listitem>
     <para>
      对于某些储存阵列，供应商提供其自己的多路径软件以管理该阵列物理和逻辑设备的多路径。在这种情况下，您应遵循供应商关于为这些设备配置多路径的说明。
     </para>
    </listitem>
    <listitem>
     <para>
      当在虚拟化环境中使用多路径时，多路径在主机服务器环境中控制。先配置设备的多路径，再将其指派给虚拟 Guest 计算机。
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-types">
    <title>多路径安装类型和 initramfs</title>
    <sect3 xml:id="sec-multipath-planning-type-root">
      <title>根文件系统位于多路径上 (SAN-boot)</title>
      <para>
	根文件系统位于多路径设备上（通常，所有其他文件系统也位于多路径储存上）。对于仅使用 SAN 或 NAS 储存的无磁盘服务器，情况往往如此。在此类系统上，需要支持多路径才能完成引导，并且必须在 initramfs (initrd) 中启用多路径。请参见<xref linkend="sec-multipath-initrd-sync" xrefstyle="SectTitleOnPage"/>。
      </para>
    </sect3>
    <sect3 xml:id="sec-multipath-planning-type-noroot">
      <title>根文件系统位于本地磁盘上</title>
      <para>
	根文件系统（可能还包括其他某些文件系统）位于本地储存中，例如，位于直接挂接的 SATA 磁盘或本地 RAID 上，但系统另外使用多路径 SAN 或 NAS 储存中的文件系统。可以通过三种不同的方式配置这种系统类型：
      </para>
      <variablelist>
      <varlistentry>
      <term>使用 root-on-multipath 设置</term>
      
	<listitem>
	  <para>
	  
	  所有块设备（包括本地磁盘）是多路径映射的一部分。然后，此类设置将显示为只有一条路径的降级多路径映射。如果在使用 YaST 进行初始系统安装期间启用了多路径，则会创建此配置。这是最简单的配置，但会产生性能开销。
	  </para>
	</listitem>
	</varlistentry>
	<varlistentry>
	<term><systemitem>multipath-tools</systemitem> 忽略本地磁盘 </term>
	<listitem>
	  <para>
	    在此配置中，多路径是在 initramfs 中启用的。可以在安装后通过黑名单或 <literal>find_multipaths</literal> 配置参数实现此配置。
	  </para>
	</listitem>
	</varlistentry>
	<varlistentry xml:id="vl-multipath-planning-type-noroot-noinitrd">
	<term>在 initramfs 中禁用多路径</term>
	<listitem>
	  <para>
	  如果在使用 YaST 进行初始系统安装期间未启用多路径（原因是 YaST 未检测到多路径设备，或者用户在安装期间选择不启用多路径），则会创建此设置。这是 <xref linkend="sec-multipath-initrd-sync" xrefstyle="SectTitleOnPage"/> 不适用的唯一一种情况。
	  </para>
	</listitem>
      </varlistentry>
      </variablelist>
      <para>
	
	
      </para>
    </sect3>
    <sect3 xml:id="sec-multipath-initrd-sync">
      <title>使初始 RAM 磁盘保持同步</title>
      <important>
	<para>
	  确保初始 RAM 磁盘和引导的系统在对所有块设备使用多路径方面保持一致行为。应用多路径配置更改后重构建 initramfs。
	</para>
      </important>
      <para>如果在系统中启用了多路径，那么也需要在 <filename>initramfs</filename> 中启用多路径，反之亦然。此规则的唯一例外情况是<xref linkend="sec-multipath-planning-type-noroot" xrefstyle="SectTitleOnPage"/>中所述的选项 <xref linkend="vl-multipath-planning-type-noroot-noinitrd"/>。
      </para>
      <para>
  多路径配置必须在引导的系统与 initrd 之间同步。因此，如果 <filename>/etc/multipath.conf</filename>、<filename>/etc/multipath/wwids</filename>、<filename>/etc/multipath/bindings</filename> 或其他与设备标识相关的配置文件或 udev 规则发生更改，则需要使用以下命令重构建初始 RAM FS：
</para>
  <screen><prompt>&gt; </prompt><command>sudo</command> dracut -f</screen>
      <para>
  如果 <filename>initrd</filename> 与系统不同步，系统将无法正常引导，启动过程可能显示紧急外壳。有关如何避免或修复此类情况的说明，请参见<xref linkend="sec-multipath-trouble-root"/>。
      </para>
      <para>
  如果要在非一般情况下重构建初始 RAM 磁盘（例如，从救援系统重构建，或使用内核参数 <literal>multipath=off</literal> 引导后重构建），必须格外小心。当且仅当 <command>dracut</command> 在构建 initrd 期间检测到根文件系统位于多路径设备上时，它才会自动在初始 RAM 磁盘中包含多路径支持。在这种情况下，需要显式启用或禁用多路径。
      </para>
      <para>
      要在 <filename>initrd</filename> 中启用多路径支持，请运行以下命令：
      </para>
      <screen>
<prompt>&gt; </prompt><command>sudo</command> dracut --force --add multipath
</screen>
<para>
要在 <filename>initrd</filename> 中禁用多路径支持，请运行以下命令：
</para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> dracut --force --omit multipath
</screen>
    </sect3>
  </sect2>
  <sect2 xml:id="sec-multipath-planning-disks">
   <title>磁盘管理任务</title>
   <para>
     使用第三方 SAN 阵列管理工具或储存阵列的用户界面来创建逻辑设备，并将其指派到主机。确保在两端正确配置主机身份凭证。
   </para>
   <para>
     可以在正在运行的主机中添加或去除卷，但检测更改可能需要重新扫描 SCSI 目标并在主机上重新配置多路径。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-raid">
    <title>软件 RAID 和复杂的储存堆栈</title>
    <para>
      多路径是在 SCSI 磁盘等基本储存设备的顶层设置的。在多层储存堆栈中，多路径始终位于底层。其他层（例如软件 RAID、逻辑卷管理、块设备加密等）排布在多路径之上。因此，对于具有多个 I/O 路径以及您计划在软件 RAID 中使用的每个设备，必须将该设备配置为支持多路径，才能尝试创建软件 RAID 设备。
   </para>
   <para>
    有关为现有软件 RIAD 设置多路径的信息，请参见<xref linkend="sec-multipath-raid" xrefstyle="SectTitleOnPage"/>。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-ha">
   <title>高可用性解决方案</title>
   <para>
    群集储存资源的高可用性解决方案基于每个节点上的多路径服务运行。确保每个节点上的 <filename>/etc/multipath.conf</filename> 文件中的配置设置在整个群集中保持一致。
   </para>
   <para>
    确保多路径设备在所有设备中的名称都相同。有关细节，请参考<xref linkend="sec-multipath-names-ha"/>。
   </para>
   <para>
    用于跨 LAN 镜像设备的分布式复制块设备 (DRBD) 高可用性解决方案在多路径的基础上运行。对于具有多个 I/O 路径并且您计划在 DRDB 解决方案中使用的每个设备，必须先将该设备配置为支持多路径，再配置 DRBD。
   </para>
   <para>
     将多路径与依赖于使用共享储存实现屏蔽的群集软件（例如包含 <command>sbd</command> 的 <command>pacemaker</command>）一起使用时必须格外小心。有关详细信息，请参见 <xref linkend="sec-multipath-policies-default"/>。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-mpiotools">
  <title>多路径管理工具</title>

  <para>
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中的多路径支持以 Linux 内核的设备映射程序多路径模块及 <systemitem>multipath-tools</systemitem> 用户空间软件包为基础。您可以使用多设备管理实用程序 (<command>multipath</command>) 查看多路径设备的状态。
  </para>

  <sect2 xml:id="sec-multipath-mpiotools-dm">
   <title>设备映射程序多路径模块</title>
   <para>
    设备映射程序多路径 (DM-MP) 模块为 Linux 提供通用多路径功能。DM-MPIO 是 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中适用于 SCSI 和 DASD 设备的首选多路径解决方案，它也适用于 NVMe 设备。 
   </para>
   <note>
     <title>将 DM-MP 用于 NVMe 设备</title>
     <para>
       从 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 15 开始，建议将本机 NVMe 多路径（请参见<xref linkend="sec-multipath-hardware-implementations"/>）用于 NVMe，并且默认情况下会使用它。要禁用本机 NVMe 多路径并改用设备映射程序多路径，请使用内核参数 <literal>nvme-core.multipath=0</literal> 引导。
     </para>
   </note>
   <para>
    DM-MPIO 可以为各种设置自动配置多路径子系统。
   </para>
   <para>
    多路径守护程序 <command>multipathd</command> 负责自动路径发现和分组以及自动路径再测试，以便先前发生故障的路径在恢复正常后可以自动重新启用。这可以最大程度地降低管理员对生产环境的关注。
   </para>
   <para>
    DM-MPIO 保护设备路径以及设备本身不会出故障。如果一个活动路径丢失（例如，一个网络适配器 I/O 断开或光纤电缆被删除），I/O 会重定向到剩余的路径。如果所有活动路径均发生故障，则必须唤醒不活动的辅助路径，因此故障转移最多会延迟 30 秒，具体取决于储存阵列的属性。
   </para>
   <para>
    如果指向给定设备的每条路径都发生故障，则发往此设备的 I/O 可能会在内核中排队给定的时间，甚至无限期排队（在这种情况下，排队的 IO 总量会受到系统内存的限制）。
   </para>
   <para>
    如果一个磁盘阵列有多个储存处理器，请确保 SAN 交换机连接到拥有要访问的 LUN 的储存处理器。在多数磁盘阵列上，所有 LUN 均属于这两个储存处理器，所以两个连接都是活动的。
   </para>
   <note>
    <title>储存处理器</title>
    <para>
     在某些磁盘阵列上，储存阵列通过储存处理器管理通讯，以便一次仅显示一个储存处理器。一个处理器是活动的，另一个是不活动的，直到发生故障。如果您连接到错误的储存处理器（具有不活动路径的那个），则可能无法看到所需的 LUN，或者可能看到这些 LUN，但在尝试访问它们时会出错。
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-io-management">
   <title>多路径 I/O 管理工具</title>
   <para>
    <systemitem class="resource">multipath-tools</systemitem> 和 <systemitem class="resource">kpartx</systemitem> 软件包提供了负责执行自动路径发现和分组的工具。
   </para>
   <variablelist>
     <varlistentry>
       <term>
	 <command>multipathd</command>
       </term>
       <listitem>
	 <para>
	   用于设置和监视多路径映射的守护程序，以及用来与守护程序进程通讯的命令行客户端。请参见<xref linkend="sec-multipath-mpiotools-multipathd" xrefstyle="SectTitleOnPage"/>。
	 </para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term>
	 <command>multipath</command>
       </term>
       <listitem>
	 <para>
	   用于执行多路径操作的命令行工具。请参见<xref linkend="sec-multipath-mpiotools-multipath" xrefstyle="SectTitleOnPage"/>。
	 </para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term>
	 <command>kpartx</command>
       </term>
       <listitem>
	 <para>
	   用于管理多路径设备上的“分区”的命令行工具。请参见<xref linkend="sec-multipath-configuration-partitioning" xrefstyle="SectTitleOnPage"/>。
	 </para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term>
	 <command>mpathpersist</command>
       </term>
       <listitem>
	 <para>
	   用于管理 SCSI 永久保留的命令行工具。请参见<xref linkend="sec-multipath-mpiotools-mpathpersist" xrefstyle="SectTitleOnPage"/>。
	 </para>
       </listitem>
     </varlistentry>
     <varlistentry>
       <term>
       </term>
       <listitem>
	 <para>
	 </para>
       </listitem>
     </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-mdadm">
   <title>多路径设备上的 MD RAID</title>
   <para>
     多路径上的 MD RAID 阵列是由系统的 udev 规则自动设置的。无需在 <filename>/etc/mdadm.conf</filename> 中进行特殊配置。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-multipathd">
    <title><command>multipathd</command> 守护程序和 <command>multipath</command> 命令</title>
    <para>
      <command>multipathd</command> 是新式 Linux 设备映射程序多路径设置中的最重要部分。此守护程序通常是通过 systemd 服务 <filename>multipathd.service</filename> 启动的。支持通过 <filename>multipathd.socket</filename> 激活套接字，但<emphasis>强烈建议</emphasis>在包含多路径硬件的系统上启用 <filename>multipathd.service</filename>。
    </para>
    <para>
      <command>multipathd</command> 可处理以下任务（其中一些任务依赖于配置）：
    </para>
      <itemizedlist>
	<listitem>
	  <para>
	    启动时，检测路径设备并设置从检测到的设备的多路径映射。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    监视 uevent 和设备映射程序事件，根据需要在多路径映射中添加或去除路径映射，并启动故障转移或故障回复操作。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    发现新的路径设备时立即设置新映射。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    定期检查路径设备以检测故障，并测试有故障的路径，以便在它们恢复正常时重新启用它们。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    如果所有路径都发生故障，<command>multipathd</command> 将使映射失败，或者将映射设备切换到排队模式并让其排队给定的一段时间。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    处理路径状态更改，并根据需要切换路径组或重新组合路径。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    测试路径的“边际”状态，即导致路径状态在正常运行和非正常运行之间来回变化的不稳定结构状况。
	  </para>
	</listitem>
	<listitem>
	  <para>
	    处理路径设备的 SCSI 永久保留密钥（如果已配置）。请参见<xref linkend="sec-multipath-mpiotools-mpathpersist" xrefstyle="SectTitleOnPage"/>。
	  </para>
	</listitem>
      </itemizedlist>
    
    <para>
      <command>multipathd</command> 还充当命令行客户端，它通过将交互式命令发送到正在运行的守护程序来处理这些命令。用于向守护程序发送命令的一般语法如下：
      </para>
      <screen>multipathd <replaceable>COMMAND</replaceable></screen>
      <para>
      或
      </para>
      <screen>multipathd -k"<replaceable>COMMAND</replaceable>"</screen>
     <para>
       要进入与守护程序交互的模式，请运行：
      </para>
      <screen>multipathd -k</screen>
      <note>
	<title>multipath 和 multipathd 如何配合工作</title>
	<para>
	  许多 <command>multipathd</command> 命令都有等效的 <command>multipath</command> 命令。例如，<command>multipathd show topology</command> 的作用与 <command>multipath -ll</command> 相同。两者的显著差别在于，multipathd 命令会查询正在运行的 <command>multipathd</command> 守护程序的内部状态，而 multipath 则是直接从内核和 I/O 操作获取信息。
	</para>
	<para>
	  如果多路径守护程序正在运行，建议使用 <command>multipathd</command> 命令对系统进行修改。否则，守护程序可能会注意到配置更改并对其做出反应。在某些情况下，守护程序甚至可能尝试撤消已应用的更改。因此，如果检测到正在运行的守护程序，<command>multipath</command> 会自动将某些可能带来风险的命令（例如销毁和刷新映射）委派给 <command>multipathd</command>。
	</para>
      </note>
   <para>下面的列表介绍了常用的 <command>multipathd</command> 命令：</para>
   <variablelist>
    <varlistentry>
     <term>show topology</term>
     <listitem>
      <para>
	显示当前映射拓扑和属性。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show paths</term>
     <listitem>
      <para>
	显示当前已知的路径设备。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show paths format &quot;<replaceable>FORMAT STRING</replaceable>&quot;</term>
     <listitem>
      <para>
	使用格式字符串显示当前已知的路径设备。使用 <command>show wildcards</command> 可查看支持的格式说明符列表。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show maps</term>
     <listitem>
      <para>
	显示当前配置的映射设备。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show maps format <replaceable>FORMAT STRING</replaceable></term>
     <listitem>
      <para>
	使用格式字符串显示当前配置的映射设备。使用 <command>show wildcards</command> 可查看支持的格式说明符列表。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>show config local</term>
     <listitem>
      <para>
	显示 multipathd 当前正在使用的配置。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>reconfigure</term>
     <listitem>
      <para>
	重新读取配置文件、重新扫描设备，并再次设置映射。这基本上等同于重启动 <command>multipathd</command>。有几个选项在不重启动的情况下无法修改。手册页 <systemitem>multipath.conf(5)</systemitem> 中提到了这些选项。<option>reconfigure</option> 命令只会重新装载以某种形式发生更改的映射设备。要强制重新装载每个映射设备，请使用 <command>reconfigure all</command>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>del map <replaceable>MAP DEVICE NAME</replaceable></term>
     <listitem>
      <para>
	取消配置并删除给定的映射设备及其分区。<replaceable>MAP DEVICE NAME</replaceable> 可以是设备节点名称（例如 <filename>dm-0</filename>）、WWID 或映射名称。如果该设备正在使用中，则该命令将会失败。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
     可以使用其他命令来修改路径状态、启用或禁用队列等。有关详细信息，请参见 <systemitem>multipathd(8)</systemitem>。
   </para>
  </sect2>
  <sect2 xml:id="sec-multipath-mpiotools-multipath">
   <title>multipath 命令</title>
   <para>
     尽管多路径设置大部分是自动完成的并由 <command>multipathd</command> 处理，但 <command>multipath</command> 对于某些管理任务仍然很有用。下面提供了几个命令用法示例：
   </para>
   <variablelist>
    <varlistentry>
     <term>multipath</term>
     <listitem>
      <para>
       检测路径设备并配置找到的所有多路径映射。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -d</term>
     <listitem>
      <para>
	类似于 <command>multipath</command>，但不设置任何映射（“试运行”）。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
       配置特定多路径设备。<replaceable>DEVICENAME</replaceable> 可以按设备节点名称 (<filename>/dev/sdb</filename>) 或者按<literal>主要:次要编号</literal>格式的设备编号来表示成员路径设备。或者，它可以是多路径映射的 WWID 或名称。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -f <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
	取消配置（“刷新”）多路径映射及其分区映射。如果该映射或其某个分区正在使用中，该命令将会失败。有关 <replaceable>DEVICENAME</replaceable> 的可能值，请参见上文。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -F</term>
     <listitem>
      <para>
	取消配置（“刷新”）所有多路径映射及其分区映射。如果这些映射正在使用中，该命令将会失败。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -ll</term>
     <listitem>
      <para>
	显示所有当前配置的多路径设备的状态和拓扑。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -ll <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
       显示特定多路径设备的状态。有关 <replaceable>DEVICENAME</replaceable> 的可能值，请参见上文。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -t</term>
     <listitem>
      <para>
       显示内部硬件表和活动的多路径配置。有关配置参数的细节，请参见 <systemitem>multipath.conf(5)</systemitem>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -T</term>
     <listitem>
      <para>
	功能与 <command>multipath -t</command> 命令类似，但仅显示在主机上检测到的硬件的硬件项。
      </para>
     </listitem>
    </varlistentry>
  </variablelist>
  <para>
    选项 <option>-v</option> 控制输出的详细程度。您可以使用介于 0（仅限致命错误）和 4（详细日志记录）之间的值。默认值为 <option>-v2</option>。可以在 <filename>/etc/multipath.conf</filename> 中使用 <option>verbosity</option> 选项来更改 <command>multipath</command> 和 <command>multipathd</command> 的默认详细程度。
  </para>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-mpathpersist">
   <title>mpathpersist 实用程序</title>
   <para>
    <command>mpathpersist</command> 实用程序用于管理设备映射程序多路径设备上的 SCSI 永久保留。永久保留用于仅限特定的 SCSI 发起端访问 SCSI 逻辑单元。在多路径配置中，必须对给定卷的所有 I_T 节点（路径）使用相同的保留密钥；否则，在一条路径上创建保留可能会导致其他路径发生故障。
   </para>
   <para>
    将此实用程序与 <filename>/etc/multipath.conf</filename> 文件中的 <literal>reservation_key</literal> 属性配合使用可以设置 SCSI 设备的永久保留。当且仅当设置了此选项时，<command>multipathd</command> 守护程序才会检查新发现的路径或重新启用的路径的永久保留。
   </para>
   <para>
    您可以将该属性添加到 <filename>multipath.conf</filename> 的 <literal>defaults</literal> 或 <literal>multipaths</literal> 部分。例如：
   </para>
   <screen>multipaths {
    multipath {
        wwid             3600140508dbcf02acb448188d73ec97d
        alias            yellow
        reservation_key  0x123abc
    }
}</screen>
   <para>
    为适用于永久管理的所有 mpath 设备设置 <literal>reservation_key</literal> 参数后，使用 <command>multipathd reconfigure</command> 重新装载配置。
   </para>
   <note>
     <title>
       使用“<option>reservation_key file</option>”
     </title>
     <para>
       如果在 <filename>multipath.conf</filename> 的 <literal>defaults</literal> 部分使用了特殊值 <literal>reservation_key file</literal>，则可以在文件 <filename>/etc/multipath/prkeys</filename> 中使用 <command>mpathpersist</command> 动态管理保留密钥。
     </para>
     <para>
       这是处理多路径映射的永久保留的建议方法。从 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 12 SP4 开始可以使用这种方法。
     </para>
   </note>
   <para>
    使用命令 <command>mpathpersist</command> 查询和设置由 SCSI 设备组成的多路径映射的永久保留。有关细节，请参见手册页 <systemitem>mpathpersist(8)</systemitem>。命令行选项与 <systemitem>sg3_utils</systemitem> 软件包中 <command>sg_persist</command> 的选项相同。<systemitem>sg_persist(8)</systemitem> 手册页详细解释了选项的语义。
   </para>
  
   <para>
     在以下示例中，<replaceable>DEVICE</replaceable> 表示设备映射程序多路径设备，例如 <filename>/dev/mapper/mpatha</filename>。以下命令连同长选项一起列出，以便于阅读。所有选项都可以替换为单个字母，例如 <command>mpathpersist -oGS 123abc <replaceable>DEVICE</replaceable></command>。
   </para>
   <variablelist>
    <varlistentry>
     <term>mpathpersist --in --read-keys <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       读取设备的已注册保留密钥。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --in --read-reservation <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       显示设备的现有保留。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --register --param-sark=123abc <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       为设备注册一个保留密钥。这会为主机上的所有 I_T 节点（路径设备）添加保留密钥。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --reserve --param-rk=123abc --prout-type=5 <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       使用先前注册的密钥为设备创建类型 5（“独占写入 - 仅限注册者”）保留。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --release --param-rk=123abc --prout-type=5 <replaceable>DEVICE</replaceable></term>
     <listitem>
      <para>
       释放设备的类型 5 保留。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --register-ignore --param-sark=0 <replaceable>DEVICE</replaceable></term>
     <listitem>
       <para>
	 从设备中删除现有的保留密钥。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-config">
  <title>针对多路径配置系统</title>

  <para/>

  <sect2 xml:id="sec-multipath-configuration-start">
   <title>启用、启动和停止多路径服务</title>
   <para>
    要允许多路径服务在引导时启动，请运行以下命令：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl enable multipathd</screen>
   <para>
    要在正在运行的系统中手动启动该服务，请输入：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl start multipathd</screen>
   <para>
    要重启动该服务，请输入：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl restart multipathd</screen>
   <para>
    在大多数情况下不需要重启动该服务。要简单地让 <command>multipathd</command> 重新装载其配置，请运行：
   </para>
   <screen><prompt>&gt; </prompt><command>sudo</command> systemctl reload multipathd</screen>
   <para>
    要检查该服务的状态，请输入：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl status multipathd</screen>
   <para>
    要停止当前会话中的多路径服务，请运行：
   </para>
   <screen>
<prompt>&gt; </prompt><command>sudo</command> systemctl stop multipathd
<prompt>&gt; </prompt><command>sudo</command> systemctl stop multipathd.socket
   </screen>
   <warning xml:id="ann-multipath-configuration-disable">
    <title>禁用 multipathd</title>
    <para>
      强烈建议始终在有权访问多路径硬件的每台主机上启用并运行 <filename>multipathd.service</filename>。但是，有时可能因为去除了多路径硬件、要部署其他一些多路径软件或出于查错目的，而需要禁用该服务。
    </para>
     <para>
       要<emphasis>仅为单次系统引导</emphasis>禁用多路径，请使用内核参数 <literal>multipath=off</literal>。这会影响引导的系统和初始 ramfs（在这种情况下不需要重构建）。
     </para>
     <para>
      要<emphasis>永久</emphasis>禁用 multipathd 服务，使其不会在今后引导系统时启动，请运行以下命令：
     </para>
    <screen><prompt>&gt; </prompt><command>sudo</command> systemctl disable multipathd
<prompt>&gt; </prompt><command>sudo</command> systemctl disable multipathd.socket
<prompt>&gt; </prompt><command>sudo</command> dracut --force --omit multipath
</screen>
    <para>
      （每当禁用或启用多路径服务后，都请重构建 <systemitem>initrd</systemitem>。请参阅<xref linkend="sec-multipath-initrd-sync" xrefstyle="SectTitleOnPage"/>。）
    </para>
    <para>
     （可选）此外，如果您还想确保不设置多路径设备（即使是手动运行 <command>multipath</command> 时），请在重构建 initrd 之前，将以下几行添加到 <filename>/etc/multipath.conf</filename> 的末尾：
    </para>
<screen>blacklist {
    wwid .*
}</screen>
   </warning>
  </sect2>

  <sect2 xml:id="sec-multipath-configuration-sandevs">
   <title>针对多路径准备 SAN 设备</title>
   <para>
    配置 SAN 设备的多路径 I/O 之前，请按需要执行以下操作准备 SAN 设备：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      使用供应商工具配置 SAN 并设置区域。
     </para>
    </listitem>
    <listitem>
     <para>
      使用供应商工具为储存阵列上的主机 LUN 配置访问权限。
     </para>
    </listitem>
    <listitem>
     <para>
       如果 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 未随附主机总线适配器 (HBA) 的驱动程序，请安装 HBA 供应商提供的 Linux 驱动程序。有关更多细节，请参见供应商的特定说明。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    如果已检测到多路径设备并已启用 <filename>multipathd.service</filename>，则应会自动创建多路径映射。如果未自动创建，请使用 <command>lsscsi</command> 之类的命令检查低级设备的探测。另外，请使用 <command>journalctl -b</command> 检查系统日志。如果 HBA 驱动程序未检测到这些 LUN，请检查 SAN 中的区域设置。特别是要检查 LUN 屏蔽是否是活动的，以及是否已将 LUN 正确指派给服务器。
   </para>
   <para>
    如果 HBA 驱动程序可以检测到 LUN，但未创建相应的块设备，则可能需要使用额外的内核参数。请参见 SUSE 知识库 (<link xlink:href="https://www.suse.com/support/kb/doc.php?id=3955167"/>) 中的 <citetitle>TID 3955167：Troubleshooting SCSI (LUN) Scanning Issues</citetitle>（SCSI (LUN) 扫描问题查错）。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-configuration-partitioning">
    <title>多路径设备上的分区</title>
    <para>
      多路径映射可以像其路径设备一样包含分区。分区表扫描以及为分区创建设备节点的操作是由 <command>kpartx</command> 工具在用户空间中执行的。<command>kpartx</command> 由 udev 规则自动调用；通常不需要手动运行它。从技术上讲，kpartx 创建的“分区”设备也是设备映射程序设备，这些设备只会映射来自父设备的线性范围的块。可以通过 <filename>/dev/disk/by-id/dm-uuid-part<replaceable>N</replaceable>-mpath-<replaceable>WWID</replaceable></filename> 可靠地访问多路径设备的具有已知 WWID 的第 <replaceable>N</replaceable> 个分区。
    </para>
    <note>
      <title>禁用 <command>kpartx</command> 调用</title>
      <para>
	可以在 <filename>/etc/multipath.conf</filename> 中使用 <literal>skip_kpartx</literal> 选项来禁用对选定的多路径映射调用 <command>kpartx</command>。例如，在虚拟化主机上，这种做法可能很有用。
      </para>
    </note>
    <para>
      可以像平时一样使用 YaST 或者使用 <command>fdisk</command> 或 <command>parted</command> 等工具来操作多路径设备上的分区表和分区。当分区工具退出时，系统将会记下应用于分区表的更改。如果这种方法不起作用（通常是因为设备繁忙），请尝试运行 <command>multipathd reconfigure</command> 或重引导系统。
    </para>
    <para>
      不能以其他方式使用已分区的多路径设备。例如，不能从已分区的设备创建 LVM 物理卷。在执行此操作之前，需要擦除分区表。
    </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-conf-file">
  <title>多路径配置</title>

  <para>
    内置的 <systemitem>multipath-tools</systemitem> 默认值适用于大多数设置。如需进行自定义，需要创建一个配置文件。主配置文件为 <filename>/etc/multipath.conf</filename>。此外，与软件集 <filename>/etc/multipath/conf.d/*.conf</filename> 匹配的文件将按字母顺序读取。有关优先级规则，请参见<xref linkend="sec-multipath-conf-file-syntax" xrefstyle="SectTitleOnPage"/>。
  </para>
  <note>
    <title>
      生成的配置文件
    </title>
    <para>
      文件 <filename>/etc/multipath/wwids</filename>、<filename>/etc/multipath/bindings</filename> 和 <filename>/etc/multipath/prkeys</filename> 由 <systemitem>multipath-tools</systemitem> 维护，分别用于储存有关先前创建的多路径映射、映射名称和 SCSI 永久保留的保留密钥的永久信息。请不要编辑生成的这些配置文件。
      
    </para>
  </note>
  <note>
    <title>可配置的路径</title>
    <para>
      除 <filename>/etc/multipath.conf</filename> 之外的其他配置目录和文件的路径是可配置的，但强烈建议不要更改这些路径。
    </para>
  </note>

  <sect2 xml:id="sec-multipath-conf-file-create">
    <title>创建 /etc/multipath.conf 文件</title>
   <para>
     您可以从内置默认值生成 <filename>multipath.conf</filename> 模板。这会将所有默认设置设为显式设置。除非修改生成的文件，否则 <systemitem>multipath-tools</systemitem> 的行为不会更改。要生成配置模板，请运行：
   </para>
   <screen>multipath -T &gt;/etc/multipath.conf</screen>
   <para>
     或者，可以创建一个极简的 <filename>/etc/multipath.conf</filename>，其中仅包含您要更改的那些设置。该行为等同于仅修改生成的模板中的相应行。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-syntax">
    <title>multipath.conf 语法</title>
    <para>
      <filename>/etc/multipath.conf</filename> 文件使用由部分、子部分和属性/值对组成的层次结构。
    </para>
    <itemizedlist>
      <listitem>
	<para>
	  令牌由空格分隔。除非括在引号中（参见下文），否则连续的空格字符将折叠成一个空格。
	</para>
      </listitem>
      <listitem>
	<para>
	  使用井号 (<literal>#</literal>) 和感叹号 (<literal>! </literal>) 字符会导致将行中的其余内容作为注释丢弃。
	</para>
      </listitem>
      <listitem>
	<para>
	  部分和子部分在同一行中以部分名称和左大括号 (<literal>{</literal>) 开头，并在独立的一行中以右大括号 (<literal>}</literal>) 结尾。
	</para>
      </listitem>
      <listitem>
	<para>
	  属性和值编写在一行中。不支持续行。
	</para>
      </listitem>
      <listitem>
	<para>
	  属性和部分名称必须是关键字。<systemitem>multipath.conf(5)</systemitem> 中阐述了允许的关键字。
	</para>
      </listitem>
      <listitem>
	<para>
	  值可以括在双引号 (<literal>&quot;</literal>) 中。如果值包含空格或注释字符，则必须将其括在引号中。值中的双引号字符由一对双引号 (<literal>&quot;&quot;</literal>) 表示。
	</para>
      </listitem>
      <listitem>
	<para>
	  某些属性的值是 POSIX 正则表达式（请参见 <systemitem>regex(7)</systemitem>）。它们区分大小写且位置不固定，例如，“<literal>bar</literal>”匹配“<literal>rhabarber</literal>”。
	</para>
      </listitem>
    </itemizedlist>
    <bridgehead>语法示例</bridgehead>
    <screen>
section {
    subsection {
        attr1 value
	   attr2      "complex value!"
	attr3    "value with ""quoted"" word"
    } ! subsection end
} # section end
    </screen>
    <bridgehead>优先级规则</bridgehead>
    <para>
      如<xref linkend="sec-multipath-conf-file" xrefstyle="HeadingOnPage"/>的开头所述，可以创建多个配置文件。附加的文件遵循与 <filename>/etc/multipath.conf</filename> 相同的语法规则。部分和属性可以多次出现。如果在多个文件中或者在同一文件的多行中设置了同一个属性，则读取的最后一个值优先。
    </para>
  </sect2>
  <sect2 xml:id="sec-multipath-conf-file-sections">
   <title><filename>/etc/multipath.conf</filename> 部分</title>
   <para>
    <filename>/etc/multipath.conf</filename> 文件由下列部分构成。某些属性可以出现在多个部分中。有关详细信息，请参见 <systemitem>multipath.conf(5)</systemitem>。
   </para>
   <variablelist>
    <varlistentry>
     <term>defaults</term>
     <listitem>
      <para>
       一般默认设置。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>blacklist</term>
     <listitem>
      <para>
       列出要忽略的设备。请参见<xref linkend="sec-multipath-blacklist" xrefstyle="HeadingOnPage"/>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>blacklist_exceptions</term>
     <listitem>
      <para>
       列出要进行多路径处理的设备，即使它们与黑名单匹配。请参见<xref linkend="sec-multipath-blacklist" xrefstyle="HeadingOnPage"/>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>devices</term>
     <listitem>
      <para>
	特定于储存控制器的设置。此部分是 <literal>device</literal> 子部分的集合。此部分中的值会覆盖 <filename>defaults</filename> 部分中相同属性的值。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipaths</term>
     <listitem>
      <para>
	单个多路径设备的设置。此部分是 <literal>multipath</literal> 子部分的列表。值将覆盖 <literal>defaults</literal> 和 <literal>devices</literal> 部分。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>overrides</term>
     <listitem>
       <para>
	 覆盖所有其他部分中的值的设置。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-apply">
   <title>应用 <filename>/etc/multipath.conf</filename> 修改</title>
   <para>
     要应用配置更改，请运行
   </para>
   <screen><prompt>&gt; </prompt><command>sudo</command> multipathd reconfigure</screen>
   <para>
     请不要忘记与 initrd 中的配置同步。请参见<xref linkend="sec-multipath-initrd-sync" xrefstyle="SectTitleOnPage"/>。
   </para>
   <warning>
     <title>不要使用 <command>multipath</command> 应用设置</title>
     <para>
       当 <command>multipathd</command> 正在运行时，请不要使用 <command>multipath</command> 命令应用新设置。否则可能导致设置不一致甚至损坏。
     </para>
   </warning>
   <note xml:id="sec-multipath-conf-file-verify">
     <title>校验已修改的设置</title>
     <para>
       可以在应用已修改的设置之前先对其进行测试，方法是运行：
     </para>
     <screen>multipath -d -v2</screen>
     <para>
       此命令显示要使用建议的拓扑创建的新映射。但是，该命令不显示是否会去除/刷新映射。要获取更多信息，请运行以下命令：
     </para>
     <screen>multipath -d -v3 2&gt;&amp;1 | less</screen>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-wwid">
   <title>生成 WWID</title>
   <para>
    为了在不同的路径上识别设备，多路径使用每台设备的全球通用标识 (WWID)。如果两个设备路径的 WWID 相同，则假定它们代表同一台设备。除非有绝对的理由，否则建议不要更改生成 WWID 的方法。有关细节，请参见 <command>man multipath.conf</command>。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-policies-default">
  <title>配置巡回检测、排队及故障回复的策略</title>

  <para>
   本节介绍用于实现容错的最重要 <systemitem>multipath-tools</systemitem> 配置参数。
  </para>
  <variablelist>
    <varlistentry>
      <term>polling_interval</term>
      <listitem>
	<para>
	  对路径设备进行状态检查的时间间隔（以秒为单位）。默认值为 5 秒。将按此时间间隔检查有故障的设备。对于正常的设备，最多可将时间间隔增大至 <literal>max_polling_interval</literal> 秒。
	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
     <term>no_path_retry</term>
     <listitem>
       <para>
	 确定当给定多路径映射的所有路径都发生故障或消失时会发生什么情况。可能的值有：
       </para>
       <variablelist>
	 <varlistentry>
	   <term>fail</term>
	   <listitem>
	     <para>
	       使多路径映射上的 I/O 失败。这会导致上层（例如挂载的文件系统）发生 I/O 错误。受影响的文件系统（也可能是整个主机）将进入降级模式。
	     </para>
	   </listitem>
	 </varlistentry>
	 <varlistentry>
	   <term>queue</term>
	   <listitem>
	     <para>
	       多路径映射上的 I/O 在设备映射程序层中排队，并在路径设备重新可用时发送到设备。这是避免丢失数据的最安全选项，但如果路径设备长时间不能恢复，则使用该值可能会造成负面影响。从设备读取数据的进程将会挂起并处于不间断休眠 (<literal>D</literal>) 状态。排队的数据会占用内存，而被占用的内存不可供进程使用。最终，内存将会耗尽。
	     </para>
	   </listitem>
	 </varlistentry>
	 <varlistentry>
	   <term><replaceable>N</replaceable></term>
	   <listitem>
	     <para>
	       <replaceable>N</replaceable> 是一个正整数。使映射设备保持排队模式 <replaceable>N</replaceable> 个巡回检测间隔。在这段时间消逝后，<command>multipathd</command> 将使映射设备失败。如果 <literal>polling_interval</literal> 为 5 秒且 <literal>no_path_retry</literal> 为 6，则 <command>multipathd</command> 会将 I/O 排队大约 6 * 5 = 30 秒，然后使映射设备上的 I/O 失败。精心选择超时值通常可以在<literal>使 I/O 失败</literal>与<literal>排队</literal>之间做出合理的权衡。
	     </para>
	   </listitem>
	 </varlistentry>
       </variablelist>
     </listitem>
    </varlistentry>
  </variablelist>
  <para>
   多路径 I/O 旨在于储存系统与服务器之间提供连接容错。所需的默认行为取决于服务器是独立服务器还是高可用性群集中的一个节点。
  </para>

  <para>
   在配置独立服务器的多路径 I/O 时，<literal>no_path_retry</literal> 设置会保护服务器操作系统在尽可能长的时间内不会接收 I/O 错误。它会在出现多路径故障转移前将消息排队，并提供正常的连接。
  </para>

  <para>
   在为高可用性群集中的节点配置多路径 I/O 时，您需要让多路径报告 I/O 故障，以触发资源故障转移而不是等待多路径故障转移被解决。在群集环境中，您必须修改 <literal>no_path_retry</literal> 设置，以确保当与储存系统断开连接时，群集节点会收到与群集验证进程相关的 I/O 错误（建议为 Heartbeat 容错的 50%）。此外，您还希望将多路径 I/O 错误回复设为手动，以避免因路径故障而造成资源的乒乓效应。
  </para>

  <para>
   <filename>/etc/multipath.conf</filename> 文件应包含一个 <command>defaults</command> 部分，您可以在此处指定巡回检测、排队以及故障回复的默认行为。如果该字段未另在 <command>device</command> 部分中指定，则为该 SAN 配置应用默认设置。
  </para>

  <para>
   以下各项是已编译的默认设置。除非在创建及配置个性化 <filename>/etc/multipath.conf</filename> 文件时被重写，否则将使用这些值。
  </para>

<screen>defaults {
  verbosity 2
#  udev_dir is deprecated in SLES 11 SP3
#  udev_dir              /dev
  polling_interval      5
#  path_selector default value is service-time in SLES 11 SP3
#  path_selector         "round-robin 0"
  path selector         "service-time 0"
  path_grouping_policy  failover
#  getuid_callout is deprecated in SLES 11 SP3 and replaced with uid_attribute
#  getuid_callout        "/usr/lib/udev/scsi_id --whitelisted --device=/dev/%n"
#  uid_attribute is new in SLES 11 SP3
  uid_attribute         "ID_SERIAL"
  prio                  "const"
  prio_args             ""
  features              "0"
  path_checker          "tur"
  alias_prefix          "mpath"
  rr_min_io_rq          1
  max_fds               "max"
  rr_weight             "uniform"
  queue_without_daemon  "yes"
  flush_on_last_del     "no"
  user_friendly_names   "no"
  fast_io_fail_tmo      5
  bindings_file         "/etc/multipath/bindings"
  wwids_file            "/etc/multipath/wwids"
  log_checker_err       "always"

  retain_attached_hw_handler  "no"
  detect_prio           "no"
  failback              "manual"
  no_path_retry         "fail"
  }</screen>

  <para>
   有关巡回检测、排队和故障回复策略设置的信息，请参见<xref linkend="sec-multipath-policies-failover" xrefstyle="SectTitleOnPage"/>中的以下参数：
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <xref linkend="vle-polling-interval" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="vle-no-path-retry" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="vle-failback" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
  </itemizedlist>

  <para>
   修改 <filename>/etc/multipath.conf</filename> 文件后，必须在系统上运行 <command>dracut</command> <option>-f</option> 重新创建 <filename>initrd</filename>，然后重启动服务器，更改才会生效。有关详细信息，请参见 <xref linkend="sec-multipath-conf-file-apply"/>。
  </para>
 </sect1>
 <sect1 xml:id="sec-multipath-blacklist">
  <title>将非多路径设备加入黑名单</title>

  <para>
   <filename>/etc/multipath.conf</filename> 文件可能包含 <command>blacklist</command> 部分，其中会列出所有非多路径设备。您可以通过 WWID（<literal>wwid</literal> 关键词）、设备名称（<literal>devnode</literal> 关键词）或设备类型（<literal>device</literal> 部分）将设备加入黑名单。您还可以使用 <literal>blacklist_exceptions</literal> 部分，对通过 <literal>blacklist</literal> 部分中所用的正规表达式加入黑名单的一些设备启用多路径。
  </para>

  <note>
   <title>首选的加入黑名单方法</title>
   <para>
    将设备加入黑名单的首选方法是通过 <emphasis>WWID</emphasis> 或通过<emphasis>供应商和产品</emphasis>进行。建议不要通过 <emphasis>devnode</emphasis> 加入黑名单，因为设备节点可能会更改，因此对长久标识设备无帮助。
   </para>
  </note>

  <warning>
   <title>multipath.conf 中的正则表达式</title>
   <para>
    <filename>/etc/multipath.conf</filename> 中的正则表达式一般情况下<emphasis>不</emphasis>起作用。只有与通用字符串匹配时，它们才会起作用。不过，多路径的标准配置已包含许多设备和供应商的正则表达式。将正则表达式与其他正则表达式相匹配不起作用。请务必只与运行 <command>multipath -t</command> 后显示的字符串进行匹配。
   </para>
  </warning>

  <para>
   您通常可能会忽略非多路径设备，例如 <literal>hpsa</literal>、<literal>fd</literal>、<literal>hd</literal>、<literal>md</literal>、<literal>dm</literal>、<literal>sr</literal>、<literal>scd</literal>、<literal>st</literal>、<literal>ram</literal>、<literal>raw</literal> 和 <literal>loop</literal>。例如，本地 SATA 硬盘和闪存盘没有多个路径。如果您希望 <command>multipath</command> 忽略单路径设备，请将它们放在 <command>blacklist</command> 部分。
  </para>

  <note>
   <title>兼容性</title>
   <para>
    关键词 <literal>devnode_blacklist</literal> 已弃用且已替换为 <literal>blacklist</literal>。
   </para>
   <para>
    在 SUSE Linux Enterprise Server 12 中使用 glibc 提供的正规表达式。要与任意字符串匹配，现在必须使用 <literal>&quot;.*&quot;</literal> 而不应使用 <literal>&quot;*&quot;</literal>。
   </para>
  </note>

  <para>
   例如，要将本地设备和 <filename>hpsa</filename> 驱动程序中的所有阵列加入黑名单，以免受到多路径的管理，则 <command>blacklist</command> 部分应为：
  </para>

<screen>blacklist {
      wwid "26353900f02796769"
      devnode "^(ram|raw|loop|fd|md|dm-|sr|scd|st)[0-9]*"
      devnode "^sd[a-z][0-9]*"
}</screen>

  <para>
   您可以仅将一个驱动程序中的分区而不是整个阵列加入黑名单。例如，您可以使用以下正规表达式，只将 cciss 驱动程序中的分区而非整个阵列加入黑名单：
  </para>

<screen>blacklist {
      devnode "^cciss!c[0-9]d[0-9]*[p[0-9]*]"
}</screen>

  <para>
   您可以在 blacklist 中添加 <literal>device</literal> 部分，并使用 <literal>vendor</literal> 和 <literal>product</literal> 关键词按特定设备类型加入黑名单。
  </para>

<screen>blacklist {
      device {
           vendor  "DELL"
           product ".*"
       }
}</screen>

  <para>
   您可以使用 <literal>blacklist_exceptions</literal> 部分，对通过 <literal>blacklist</literal> 部分中所用的正规表达式加入黑名单的一些设备启用多路径。您可以通过 WWID（<literal>wwid</literal> 关键词）、设备名称（<literal>devnode</literal> 关键词）或设备类型（<literal>device</literal> 部分）添加例外。您必须以将相应设备加入黑名单的相同方式指定例外。也就是说，<literal>wwid</literal> 例外适用于 <literal>wwid</literal> 黑名单，<literal>devnode</literal> 例外适用于 <literal>devnode</literal> 黑名单，而设备类型例外适用于设备类型黑名单。
  </para>

  <para>
   例如，如果您拥有来自不同供应商的设备类型，可以针对所需的设备类型启用多路径。在 <literal>blacklist</literal> 部分中将所有供应商的设备类型加入黑名单，然后在 <literal>blacklist_exceptions</literal> 部分中添加 <literal>device</literal> 部分，针对所需的设备类型启用多路径。
  </para>

<screen>blacklist {
      devnode "^(ram|raw|loop|fd|md|dm-|sr|scd|st|sda)[0-9]*"
      device {
           vendor  "DELL"
           product ".*"
       }
}

blacklist_exceptions {
      device {
           vendor  "DELL"
           product "MD3220i"
       }
}</screen>

  <para>
   您还可以使用 blacklist_exceptions 仅针对特定设备启用多路径。例如：
  </para>

<screen>blacklist {
      wwid ".*"
}

blacklist_exceptions {
        wwid "3600d0230000000000e13955cc3751234"
        wwid "3600d0230000000000e13955cc3751235"
}</screen>

  <para>
   修改 <filename>/etc/multipath.conf</filename> 文件后，必须在系统上运行 <command>dracut</command> <option>-f</option> 重新创建 <filename>initrd</filename>，然后重启动服务器，更改才会生效。有关详细信息，请参见 <xref linkend="sec-multipath-conf-file-apply"/>。
  </para>

  <para>
   重引导之后，当您发出 <command>multipath -ll</command> 命令时，这些本地设备应不再列于多路径映射中。
  </para>

  <note>
   <title>使用 <literal>find_multipaths</literal> 选项</title>
   <para>
    从 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 12 SP2 开始，多路径工具支持 <filename>/etc/multipath.conf</filename> 的 <literal>defaults</literal> 部分中的 <literal>find_multipaths</literal> 选项。此选项会阻止多路径和 <systemitem class="daemon">multipathd</systemitem> 为只有单个路径的设备设置多路径映射（有关细节，请参见 <command>man 5 multipath.conf</command>）。如此，在某些配置中，管理员就无需为本地 SATA 磁盘等创建黑名单项。
   </para>
   <para>
    虽然使用 <literal>find_multipaths</literal> 选项看似很方便，但也有其弊端。它使得系统引导复杂化且速度变慢，因为对于找到的每台设备，引导逻辑都需要等到发现了所有设备之后才能确定设备是否存在第二个路径。此外，当一些路径已关闭或在引导期间不可视时可能会出现问题 — 可能会错误地将设备检测为单路径设备并激活，导致后面添加更多路径的操作失败。
   </para>
   <para>
    <literal>find_multipaths</literal> 会将 <filename>/etc/multipath/wwids</filename> 中所列的具有匹配 WWID 的所有设备视为多路径设备。请注意，第一次激活 <literal>find_multipaths</literal> 时不会产生任何效果，除非删除或编辑了 <filename>/etc/multipath/wwids</filename>，因为所有先前存在的多路径映射（包括单路径映射）都列于该 wwids 文件中。在具有多路径根文件系统的 SAN-boot 系统中，请确保 <filename>/etc/multipath/wwids</filename> 在初始 RAM 磁盘和文件系统之间保持同步。
   </para>
   <para>
    总而言之，虽然在某些情况下使用 <literal>find_multipaths</literal> 可能很方便，但 SUSE 仍建议使用正确配置了黑名单和黑名单例外的默认配置。
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-multipath-names">
  <title>配置用户用好的名称或别名</title>

  <para>
   多路径设备可以按 WWID、用户友好的名称或您指派的别名进行标识。格式为 <filename>/dev/sdn</filename> 和 <filename>/dev/dm-n</filename> 的设备节点名称在重引导时会发生更改，且每次都可能会被指派给不同的设备。而设备的 WWID、用户友好名称以及别名则在重引导期间始终不变，因此是标识设备的首选方式。
  </para>

  <important>
   <title>建议使用永久的名称</title>
   <para>
    因为格式为 <filename>/dev/sdn</filename> 和 <filename>/dev/dm-n</filename> 的设备节点名称在重引导时会发生更改，所以最好使用其 WWID 来表示多路径设备。为了在重引导时唯一标识设备，您也可以使用与 WWID 映射的用户友好名称或别名。
   </para>
  </important>

  <para>
   下表介绍了 <filename>/etc/multipath.conf</filename> 文件中可用于设备的设备名称类型。有关 <filename>multipath.conf</filename> 设置的示例，请参见 <filename>/usr/share/doc/packages/multipath-tools/multipath.conf.synthetic</filename> 文件。
  </para>

  <table>
   <title>多路径设备名称类型比较</title>
   <tgroup cols="2">
    <colspec colnum="1" colname="1" colwidth="1667*"/>
    <colspec colnum="2" colname="2" colwidth="8334*"/>
    <thead>
     <row>
      <entry>
       <para>
        名称类型
       </para>
      </entry>
      <entry>
       <para>
        说明
       </para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>
        WWID（默认）
       </para>
      </entry>
      <entry>
       <para>
        WWID（全球标识符）序列是保证全球唯一且不会更改的多路径设备标识符。在多路径中使用的默认名称是 <filename>/dev/disk/by-id</filename> 目录中的逻辑单元的 ID。例如，WWID 为 <literal>3600508e0000000009e6baa6f609e7908</literal> 的设备将作为 <filename>/dev/disk/by-id/scsi-3600508e0000000009e6baa6f609e7908</filename> 列出。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        用户友好
       </para>
      </entry>
      <entry>
       <para>
        <filename>/dev/mapper</filename> 目录中的设备映射程序多路径设备名称也参考逻辑单元的 ID。这些多路径设备名称都是用户友好的名称，格式为 <filename>/dev/mapper/mpath&lt;<replaceable>N</replaceable></filename>&gt;，比如 <filename>/dev/mapper/mpath0</filename>。名称是唯一且永久的，因为它们使用 <filename>/var/lib/multipath/bindings</filename> 文件跟踪 UUID 和用户友好的名称之间的关联。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        Alias
       </para>
      </entry>
      <entry>
       <para>
        别名是由管理员为多路径设备提供的全局唯一名称。别名会覆盖 WWID 和用户友好的 <filename>/dev/mapper/mpath<replaceable>N</replaceable></filename> 名称。
       </para>
       <para>
        如果您使用的是 user_friendly_names，请不要将别名设为 mpath<replaceable>N</replaceable> 格式。否则可能会与自动指派的用户友好名称产生冲突，导致所提供的设备节点名称不正确。
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   <filename>/etc/multipath.conf</filename> 文件中的全局多路径 <literal>user_friendly_names</literal> 选项用于对多路径设备启用或禁用用户友好的名称。如果将它设置为 <literal>no</literal>（默认值），多路径会使用 WWID 作为设备的名称。如果将它设置为 <literal>yes</literal>，多路径将使用 <filename>/var/lib/multipath/bindings</filename> 文件，在 <filename>/dev/mapper</filename> 目录中以 <filename>mpath&lt;<replaceable>N</replaceable>&gt;</filename> 格式为设备指派一个永久的唯一名称。<literal>/etc/multipath.conf</literal> 文件中的 <literal>bindings_file</literal> 选项可用于指定 <filename>bindings</filename> 文件的备用位置。
  </para>

  <para>
   <filename>/etc/multipath.conf</filename> 文件中的全局多路径 <literal>alias</literal> 选项用于明确为设备指派一个名称。如果为多路径设备设置了别名，则使用别名，而不使用 WWID 或用户友好的名称。
  </para>

  <para>
   使用 <literal>user_friendly_names</literal> 选项时，在以下情形中可能会出现问题：
  </para>

  <variablelist>
   <varlistentry>
    <term>根设备正在使用多路径：</term>
    <listitem>
     <para>
      如果系统根设备使用的是多路径，而您使用的是 <literal>user_friendly_names</literal> 选项，则 <filename>initrd</filename> 文件中将会包含 <filename>/var/lib/multipath/bindings</filename> 文件中的用户友好设置。如果稍后更改储存设置，比如添加或删除了设备，则 <filename>initrd</filename> 内的绑定设置和 <filename>/var/lib/multipath/bindings</filename> 中的绑定设置之间会存在不匹配。
     </para>
     <warning>
      <title>绑定不匹配项</title>
      <para>
       <filename>initrd</filename> 和 <filename>/var/lib/multipath/bindings</filename> 之间的绑定不匹配会导致对设备指派错误的挂载点，进而导致文件系统损坏和数据丢失。
      </para>
     </warning>
     <para>
      为了避免此问题，建议对系统根设备使用默认 WWID 设置。对于系统根设备不应使用别名。由于设备名称不同，因此使用别名会导致您无法通过内核命令行无缝关闭多路径。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>从另一个分区挂载 /var：</term>
    <listitem>
     <para>
      <literal>user_friendly_names</literal> 配置文件的默认位置是 <filename>/var/lib/multipath/bindings</filename>。如果 <filename>/var</filename> 数据不是位于系统 root 设备上，而是从另一个分区挂载，则设置多路径时 <filename>bindings</filename> 文件不可用。
     </para>
     <para>
      请确保 <filename>/var/lib/multipath/bindings</filename> 文件在系统 root 设备上可用，并且多路径可以找到它。例如，可以按如下操作来确保这一点：
     </para>
     <orderedlist spacing="normal">
      <listitem>
       <para>
        将 <filename>/var/lib/multipath/bindings</filename> 文件移动到 <filename>/etc/multipath/bindings</filename>。
       </para>
      </listitem>
      <listitem>
       <para>
        将 /<filename>etc/multipath.conf</filename> 的 <literal>defaults</literal> 部分的 <literal>bindings_file</literal> 选项设置为此新位置。例如：
       </para>
<screen>
defaults {
               user_friendly_names yes
               bindings_file "/etc/multipath/bindings"
}
</screen>
      </listitem>
     </orderedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>initrd 中存在多路径：</term>
    <listitem>
     <para>
      即使系统根设备不在多路径上，多路径也可以包含在 <filename>initrd</filename> 中。例如，如果系统根设备位于 LVM 上，就可能会发生这种情况。如果您使用 <literal>user_friendly_names</literal> 选项，且多路径在 <filename>initrd</filename> 中，则应当使用参数 <command>multipath=off</command> 进行引导，以免出现问题。
     </para>
     <para>
      这样在系统引导过程中仅禁用了 <filename>initrd</filename> 中的多路径。系统引导后，<filename>boot.multipath</filename> 和 <filename>multipathd</filename> 引导脚本能够激活多路径。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>HA 群集中的多路径：</term>
    <listitem>
     <para>
      有关详细信息，请参见 <xref linkend="sec-multipath-names-ha"/>。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   启用用户友好名称或指定别名：
  </para>

  <procedure>
   <step>
    <para>
     使用 <systemitem class="username">root</systemitem> 权限在文本编辑器中打开 <filename>/etc/multipath.conf</filename> 文件。
    </para>
   </step>
   <step>
    <para>
     （可选）修改 <filename>/var/lib/multipath/bindings</filename> 文件的位置。
    </para>
    <para>
     备用路径必须在系统根设备上可用，且多路径可以找到它。
    </para>
    <substeps performance="required">
     <step>
      <para>
       将 <filename>/var/lib/multipath/bindings</filename> 文件移动到 <filename>/etc/multipath/bindings</filename>。
      </para>
     </step>
     <step>
      <para>
       将 /<filename>etc/multipath.conf</filename> 的 <literal>defaults</literal> 部分的 <literal>bindings_file</literal> 选项设置为此新位置。例如：
      </para>
<screen>
defaults {
          user_friendly_names yes
          bindings_file "/etc/multipath/bindings"
}
</screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     （可选但不建议使用）启用用户友好的名称：
    </para>
    <substeps performance="required">
     <step>
      <para>
       取消注释 <literal>defaults</literal> 部分及其结尾括号。
      </para>
     </step>
     <step>
      <para>
       取消注释 <literal>user_friendly_names</literal> 选项，然后将其值从 No 更改为 Yes。
      </para>
      <para>
       例如：
      </para>
<screen>## Use user-friendly names, instead of using WWIDs as names.
defaults {
  user_friendly_names yes
}</screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     （可选）使用 <command>multipath</command> 部分中的 <command>alias</command> 选项为设备指定您自己的名称。
    </para>
    <para>
     例如：
    </para>
<screen>## Use alias names, instead of using WWIDs as names.
multipaths {
       multipath {
               wwid           36006048000028350131253594d303030
               alias             blue1
       }
       multipath {
               wwid           36006048000028350131253594d303041
               alias             blue2
       }
       multipath {
               wwid           36006048000028350131253594d303145
               alias             yellow1
       }
       multipath {
               wwid           36006048000028350131253594d303334
               alias             yellow2
       }
}
</screen>
    <important>
     <title>WWID 与 WWN 的对比</title>
     <para>
      在 <filename>/etc/multipath.conf</filename> 文件中定义设备别名时，请确保使用每个设备的 WWID（如 <filename>3600508e0000000009e6baa6f609e7908</filename>）而不是它的 WWN（以 <filename>0x</filename> 替换设备 ID 的第一个字符，如 <filename>0x600508e0000000009e6baa6f609e7908</filename>）。
     </para>
    </important>
   </step>
   <step>
    <para>
     保存更改，然后关闭该文件。
    </para>
   </step>
   <step>
    <para>
     修改 <filename>/etc/multipath.conf</filename> 文件后，必须在系统上运行 <command>dracut</command> <option>-f</option> 重新创建 <filename>initrd</filename>，然后重启动服务器，更改才会生效。有关详细信息，请参见 <xref linkend="sec-multipath-conf-file-apply"/>。
    </para>
   </step>
  </procedure>

  <para>
   如果要直接使用整个 LUN（例如，如果您使用 SAN 功能对储存区分区），可为 <command>mkfs</command>、<filename>/etc/fstab</filename>、应用程序等使用 <filename>/dev/disk/by-id/xxx</filename> 名称。已分区设备的设备名称后将追加 <filename>_part&lt;n&gt;</filename>，例如 <filename>/dev/disk/by-id/xxx_part1</filename>。
  </para>

  <para>
   在 <filename>/dev/disk/by-id</filename> 目录中，通过设备名 <filename>dm-uuid*</filename> 或别名（如果在 <filename>/etc/multipath.conf</filename> 文件中为其指派了别名）表示多路径映射设备。设备名 <filename>scsi-</filename> 和 <filename>wwn-</filename> 表示设备的物理路径。
  </para>

  <sect2 xml:id="sec-multipath-names-ha">
   <title>HA 群集中的多路径设备名称</title>
   <para>
    请执行下列操作来确保多路径设备名称在所有设备中都相同：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      使用 UUID 和别名确保多路径设备名称在群集中的所有节点上保持一致。别名在所有节点上必须唯一。将 <filename>/etc/multipath.conf</filename> 文件从该节点复制到群集中所有其他节点的 <filename>/etc/</filename> 目录下。
     </para>
    </listitem>
    <listitem>
     <para>
      当使用多路径映射设备的链接时，请确保在 <filename>/dev/disk/by-id</filename> 目录中指定 <filename>dm-uuid*</filename> 名称或别名，而不是设备的固定路径实例。有关信息，请参见<xref linkend="sec-multipath-names" xrefstyle="SectTitleOnPage"/>。
     </para>
    </listitem>
    <listitem>
     <para>
      将 <literal>user_friendly_names</literal> 配置选项设置为“no”以禁用它。<literal></literal>用户友好名称对某个节点是唯一的，但群集中各个节点上的设备不得指派相同的用户友好名称。
     </para>
    </listitem>
   </itemizedlist>
   <note>
    <title>用户友好名称</title>
    <para>
     如果您确实需要使用用户友好名称，则可以执行下列操作，强制系统定义的用户友好名称在群集的所有节点中保持一致：
    </para>
    <procedure>
     <step>
      <para>
       在一个节点上的 <filename>/etc/multipath.conf</filename> 文件中：
      </para>
      <orderedlist>
       <listitem>
        <para>
         将 <literal>user_friendly_names</literal> 配置选项设置为“yes”以启用它。<literal></literal>
        </para>
        <para>
         多路径会使用 <filename>/var/lib/multipath/bindings</filename> 文件，在 <filename>/dev/mapper</filename> 目录中以 <filename>mpath&lt;<replaceable>N</replaceable>&gt;</filename> 格式为设备指派一个永久的唯一名称。
        </para>
       </listitem>
       <listitem>
        <para>
         （可选）设置 <literal>/etc/multipath.conf</literal> 文件的 <literal>defaults</literal> 部分中的 <literal>bindings_file</literal> 选项，以指定 <filename>bindings</filename> 文件的备用位置。
        </para>
        <para>
         默认位置为 <filename>/var/lib/multipath/bindings</filename>。
        </para>
       </listitem>
      </orderedlist>
     </step>
     <step>
      <para>
       设置该节点上的所有多路径设备。
      </para>
     </step>
     <step>
      <para>
       将 <filename>/etc/multipath.conf</filename> 文件从该节点复制到群集中所有其他节点的 <filename>/etc/</filename> 目录下。
      </para>
     </step>
     <step>
      <para>
       从该节点将 <filename>bindings</filename> 文件复制到群集中所有其他节点的 <filename>bindings_file</filename> 路径。
      </para>
     </step>
     <step>
      <para>
       修改 <filename>/etc/multipath.conf</filename> 文件后，必须在系统上运行 <command>dracut</command> <option>-f</option> 重新创建 <filename>initrd</filename>，然后重启动节点，更改才会生效。有关详细信息，请参见 <xref linkend="sec-multipath-conf-file-apply"/>。这适用于所有受影响的节点。
      </para>
     </step>
    </procedure>
   </note>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-policies-failover">
  <title>配置路径故障转移策略和优先级</title>

  <para>
   在 Linux 主机中，当存在多个路径到某储存控制器时，每个路径都显示为独立的块设备，导致单个 LUN 有多个块设备。设备映射程序多路径服务检测到具有同一 LUN ID 的多个路径，并使用该 ID 创建了一个新的多路径设备。例如，如果具有两个 HBA 的主机通过单个未确定区域的光纤通道交换机挂接到一个带两个端口的储存控器，则会看到四个块设备：<filename>/dev/sda</filename>、<filename>/dev/sdb</filename>、<filename>/dev/sdc</filename> 和 <filename>/dev/sdd</filename>。设备映射程序多路径服务会创建单个块设备 <filename>/dev/mpath/mpath1</filename>，由它来通过以上四个底层块设备重新路由 I/O。
  </para>

  <para>
   本节描述如何指定故障转移策略和配置路径的优先级。请注意，修改 <filename>/etc/multipath.conf</filename> 文件后，必须在系统上运行 <command>dracut</command> <option>-f</option> 重新创建 <filename>initrd</filename>，然后重启动服务器，更改才会生效。有关详细信息，请参见 <xref linkend="sec-multipath-conf-file-apply"/>。
  </para>

  <sect2 xml:id="sec-multipath-policies-failover-path">
   <title>配置路径故障转移策略</title>
   <para>
    使用带 <option>-p</option> 选项的 <command>multipath</command> 命令来设置路径故障转移策略：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath <replaceable>DEVICENAME</replaceable> -p <replaceable>POLICY</replaceable></screen>
   <para>
    将 <replaceable>POLICY</replaceable> 替换为以下策略选项之一：
   </para>
   <table>
    <title>multipath -p 命令的组策略选项</title>
    <tgroup cols="2">
     <colspec colnum="1" colname="1" colwidth="2381*"/>
     <colspec colnum="2" colname="2" colwidth="7620*"/>
     <thead>
      <row>
       <entry>
        <para>
         策略选项
        </para>
       </entry>
       <entry>
        <para>
         说明
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         failover
        </para>
       </entry>
       <entry>
        <para>
         （默认）每个优先级组对应一个路径。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         multibus
        </para>
       </entry>
       <entry>
        <para>
         一个优先级组中的所有路径。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         group_by_serial
        </para>
       </entry>
       <entry>
        <para>
         每个检测到的序列号一个优先级组。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         group_by_prio
        </para>
       </entry>
       <entry>
        <para>
         每个路径优先级值一个优先级组。优先级由调出程序在 <filename>/etc/multipath.conf</filename> 配置文件中指定为 global、per-controller 或 per-multipath 选项来确定。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         group_by_node_name
        </para>
       </entry>
       <entry>
        <para>
         每个目标节点名一个优先级组。目标节点名是在 <filename>/sys/class/fc_transport/target*/node_name</filename> 位置获取的。
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect2>

  <sect2 xml:id="sec-multipath-policies-failover-prio">
   <title>配置故障转移优先级</title>
   <para>
    必须在 <filename>/etc/multipath.conf</filename> 文件中手动输入设备的故障转移优先级。<filename>/usr/share/doc/packages/multipath-tools/multipath.conf.annotated</filename> 文件中有所有设置和选项的示例。
   </para>
   <sect3 xml:id="sec-multipath-policies-failover-prio-info">
    <title>了解优先级组和属性</title>
    <para>
     <emphasis>优先级组</emphasis>是通向同一物理 LUN 的路径的集合。默认情况下，I/O 在组中的所有路径中以循环方式分布。<command>multipath</command> 命令会基于 SAN 的 path_grouping_policy 设置为该 SAN 中的每个 LUN 自动创建优先级组。<literal></literal><command>multipath</command> 命令将一个组中的路径数乘以该组的优先级以确定哪个组是主组。计算出的值最高的组即是主组。当主组中的所有路径失败时，具有下一个最高值的优先级组即变为活动的组。
    </para>
    <para>
     <emphasis>路径优先级</emphasis>是指派给一个路径的整数值。值越高，优先级越高。将使用一个外部程序来指派每个路径的优先级。对于给定的设备，具有相同优先级的路径属于同一优先级组。
    </para>
    <para>
     <literal>prio</literal> 设置在 <filename>/etc/multipath.conf</filename> 文件的 <literal>defaults{}</literal> 或 <literal>devices{}</literal> 部分中使用。当为 <literal>multipaths</literal> 部分的单个 <literal>multipath</literal> 定义指定该设置时，系统会无提示地将它忽略。<literal>prio</literal> 行用于指定优先级排序程序。如果优先级排序程序需要参数，您要在第二行上使用 <literal>prio_args</literal> 关键字指定参数。
    </para>
    <bridgehead>Defaults 或 Devices 部分的 PRIO 设置</bridgehead>
    <variablelist>
     <varlistentry>
      <term><literal>prio</literal></term>
      <listitem>
       <para>
        指定要调用的优先级排序程序，以获取路径优先级的值。将加总每个路径组的权重以确定发生故障时要使用的下一个路径组。
       </para>
       <para>
        如果指定的优先级排序程序需要参数，则使用关键字 <literal>prio_args</literal> 指定参数。
       </para>
       <para>
        如果未指定关键字 <literal>prio</literal>，则所有路径具有相同优先级。默认设置为 <literal>const</literal>，且 <literal>prio_args</literal> 设置为空。
       </para>
<screen>prio "const"
prio_args ""</screen>
       <para>
        优先级排序程序示例如下：
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2907*"/>
         <colspec colnum="2" colname="2" colwidth="7096*"/>
         <thead>
          <row>
           <entry>
            <para>
             优先级排序程序
            </para>
           </entry>
           <entry>
            <para>
             说明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>alua</literal>
            </para>
           </entry>
           <entry>
            <para>
             基于 SCSI-3 ALUA 设置生成路径优先级。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>const</literal>
            </para>
           </entry>
           <entry>
            <para>
             为所有路径生成同一优先级。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>emc</literal>
            </para>
           </entry>
           <entry>
            <para>
             为 EMC 阵列生成路径优先级。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>hdc</literal>
            </para>
           </entry>
           <entry>
            <para>
             为 Hitachi HDS Modular 储存阵列生成路径优先级。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>hp_sw</literal>
            </para>
           </entry>
           <entry>
            <para>
             为活动/备用模式的 Compaq/HP 控制器生成路径优先级。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>ontap</literal>
            </para>
           </entry>
           <entry>
            <para>
             为 NetApp 阵列生成路径优先级。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>random</literal>
            </para>
           </entry>
           <entry>
            <para>
             为每个路径生成随机优先级。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>rdac</literal>
            </para>
           </entry>
           <entry>
            <para>
             为 LSI/Engenio RDAC 控制器生成路径优先级。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>weightedpath</literal>
            </para>
           </entry>
           <entry>
            <para>
             根据您在 <literal>prio_args</literal> 的参数中指定的加权值生成路径优先级。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>path_latency</literal>
            </para>
           </entry>
           <entry>
            <para>
             根据延迟算法生成路径优先级，该算法通过 <literal>prio_args</literal> 关键字配置。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
    </variablelist>
    <bridgehead><literal>prio_args</literal> 参数</bridgehead>
    <para>
     这些是需要参数的优先级排序程序的参数。大多数 <literal>prio</literal> 程序并不需要参数。无默认值。值取决于 <literal>prio</literal> 设置以及优先级排序程序是否需要以下任何参数：
    </para>
    <variablelist>
     <varlistentry>
      <term>weighted</term>
      <listitem>
       <para>
        需要格式为 <literal>[hbtl|devname|serial|wwn]</literal>
        <replaceable>REGEX1</replaceable> <replaceable>PRIO1</replaceable>
        <replaceable>REGEX2</replaceable> <replaceable>PRIO2</replaceable>... 的值
       </para>
       <para>
        正则表达式必须采用 SCSI H:B:T:L 格式，例如 1:0:.:.和 *:0:0:.，并带有加权值，其中 H、B、T 和 L 分别代表设备的主机、总线、目标以及 LUN ID。例如：
       </para>
<screen>prio "weightedpath"
prio_args "hbtl 1:.:.:. 2 4:.:.:. 4"</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>devname</term>
      <listitem>
       <para>
        Regex 为设备名称格式。例如：sda、sd.e
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>serial</term>
      <listitem>
       <para>
        Regex 为序列号格式。例如：.*J1FR.*324。使用 <command>multipathd show paths format %z</command> 命令查询您的序列号。（<command>multipathd show wildcards</command> 会显示所有 <literal>format</literal> 通配符。）
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>alua</term>
      <listitem>
       <para>
        如果为某个设备 (<literal>alua exclusive_pref_bit</literal>) 设置了 <literal>exclusive_pref_bit</literal>，那么设置了 <literal>preferred path</literal> 的路径将始终在其自身的路径组中。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>path_latency</term>
      <listitem>
       <para>
        如果远程储存阵列和本地储存阵列使用的硬件类型相同，则可以使用 <literal>path_latency</literal> 来调整这两个阵列之间的延迟。远程阵列上的延迟通常更高，因此您可以调整延迟，使两个阵列的时间更接近。这需要格式为 <literal>io_num=<replaceable>20</replaceable> base_num=<replaceable>10</replaceable></literal> 的值对。
       </para>
       <para>
        <literal>io_num</literal> 是连续发送到当前路径的读取 IO 数，用于计算平均路径延迟。有效值为 2 到 200 的整数。
       </para>
       <para>
        <literal>base_num</literal> 是对数底数，用于将不同的优先级排名分区。有效值为 2 到 10 的整数。最大平均延迟值为 100s，最小值为 1 μs。例如，如果 <literal>base_num=10</literal>，则路径将被分到路径延迟 &lt;=1 μs、(1 μs, 10 μs]、(10 μs, 100 μs)、(100 μs, 1 ms)、(1 ms, 10 ms)、(10 ms, 100 ms)、(100 ms, 1 s)、(1 s, 10 s)、(10 s, 100 s)、&gt;100 s 的各优先级组。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <bridgehead>多路径属性</bridgehead>
    <para>
     多路径属性用于控制设备的多路径 I/O 行为。您可以按默认方式为所有多路径设备指定属性。也可以通过在多路径配置文件的 <literal>multipaths</literal> 部分中创建设备项的方式，指定仅对指定多路径设备应用的属性。
    </para>
    <variablelist>
     <varlistentry>
      <term><literal>user_friendly_names</literal></term>
      <listitem>
       <para>
        指定是使用全球 ID (WWID) 还是使用 <filename>/var/lib/multipath/bindings</filename> 文件以 <filename>/dev/mapper/mpathN</filename> 的格式为多路径设备指派一个永久唯一的别名。
       </para>
       <para>
        此选项可以在 <literal>devices</literal> 部分和 <literal>multipaths</literal> 部分使用。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             说明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>no</literal>
            </para>
           </entry>
           <entry>
            <para>
             （默认）使用 <filename>/dev/disk/by-id/</filename> 位置中显示的 WWID。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>yes</literal>
            </para>
           </entry>
           <entry>
            <para>
             自动生成用户友好的名称作为多路径设备的别名而不是实际 ID。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vle-failback">
      <term><literal>failback</literal></term>
      <listitem>
       <para>
        指定是否监视失败路径恢复，并指明失败路径重新使用之后组故障回复的时间。
       </para>
       <para>
        当失败的路径恢复后，系统会根据此设置将该路径重新添加到支持多路径的路径列表中。多路径计算优先级组，并在主路径的优先级超出备用组时更改活动优先级组。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             说明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>manual</literal>
            </para>
           </entry>
           <entry>
            <para>
             （默认）不监视失败的路径是否恢复。管理员运行 <command>multipath</command> 命令以更新启用的路径和优先级组。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>followover</literal>
            </para>
           </entry>
           <entry>
            <para>
             仅当路径组的第一个路径激活时才执行自动故障回复。这可以防止某个节点在另一个节点请求了故障转移时自动故障回复。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>immediate</literal>
            </para>
           </entry>
           <entry>
            <para>
             当一个路径恢复时，立即启用该路径。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal><replaceable>N</replaceable></literal>
            </para>
           </entry>
           <entry>
            <para>
             当路径恢复时，等待 <replaceable>N</replaceable> 秒再启用该路径。指定大于 0 的整数值。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
       <para>
        为了防止多路径故障转移出现乒乓效应，建议将群集环境下的多路径故障回复设置为 <literal>manual</literal>。
       </para>
<screen>failback "manual"</screen>
       <important>
        <title>校验</title>
        <para>
         请务必向您的储存系统供应商确认故障回复设置。不同的储存系统可能会有不同的设置要求。
        </para>
       </important>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vle-no-path-retry">
      <term><literal>no_path_retry</literal></term>
      <listitem>
       <para>
        指定在路径失败时使用的行为。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             说明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal><replaceable>N</replaceable></literal>
            </para>
           </entry>
           <entry>
            <para>
             指定 <command>multipath</command> 停止排队和路径失败之前的重试次数。指定大于 0 的整数值。
            </para>
            <para>
             在群集中，您可以将值指定为 0 以避免发生排队现象，并允许资源进行故障转移。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>fail</literal>
            </para>
           </entry>
           <entry>
            <para>
             指定立即失败（不排队）。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>queue</literal>
            </para>
           </entry>
           <entry>
            <para>
             永不停止排队（一直排队，直到该路径成为活动路径）。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
       <para>
        在群集中工作时，建议在 <filename>/etc/multipath.conf</filename> 文件中将重试设置设为 <literal>fail</literal> 或 <literal>0</literal>。如此一来，当与储存的连接中断时便可让资源进行故障转移。否则会将消息排队而不会发生资源故障转移。
       </para>
<screen>no_path_retry "fail"
no_path_retry "0"</screen>
       <important>
        <title>校验</title>
        <para>
         请务必向您的储存系统供应商确认重试设置。不同的储存系统可能会有不同的设置要求。
        </para>
       </important>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>path_checker</literal></term>
      <listitem>
       <para>
        确定路径的状态。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="30%"/>
         <colspec colnum="2" colname="2" colwidth="70%"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             说明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>directio</literal>
            </para>
           </entry>
           <entry>
            <para>
             读取具有直接 I/O 的第一个扇区，这对于 DASD 设备非常有用。在 <systemitem class="daemon">systemd</systemitem> 日志中记录失败消息（请参见<xref linkend="cha-journalctl"/>）。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>tur</literal>
            </para>
           </entry>
           <entry>
            <para>
             向设备发出 SCSI 测试单元就绪命令。如果 LUN 支持，则这是首选设置。如果命令失败，它不会在 <systemitem class="daemon">systemd</systemitem> 日志中填入消息。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <replaceable>CUSTOM_VENDOR_VALUE</replaceable>
            </para>
           </entry>
           <entry>
            <para>
             一些 SAN 供应商提供了自定义的 path_checker 选项：
            </para>
            <itemizedlist mark="bullet" spacing="normal">
             <listitem>
              <formalpara>
               <title><literal>cciss_tur</literal>：</title>
               <para>
                检查 HP 智能储存阵列的路径状态。
               </para>
              </formalpara>
             </listitem>
             <listitem>
              <formalpara>
               <title><literal>emc_clariion</literal>：</title>
               <para>
                查询 EMC Clariion EVPD 页 0xC0 以确定路径状态。
               </para>
              </formalpara>
             </listitem>
             <listitem>
              <formalpara>
               <title><literal>hp_sw</literal>：</title>
               <para>
                使用活动/备用固件检查 HP 储存阵列的路径状态（Up、Down 还是 Ghost）。
               </para>
              </formalpara>
             </listitem>
             <listitem>
              <formalpara>
               <title><literal>rdac</literal>：</title>
               <para>
                检查 LSI/Engenio RDAC 储存控制器的路径状态。
               </para>
              </formalpara>
             </listitem>
            </itemizedlist>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>path_grouping_policy</literal></term>
      <listitem>
       <para>
        指定由给定控制器托管的多路径设备的路径分组策略。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             说明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>failover</literal>
            </para>
           </entry>
           <entry>
            <para>
             （默认）为每个优先级组指派一个路径，以便每次只使用一个路径。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>multibus</literal>
            </para>
           </entry>
           <entry>
            <para>
             所有有效路径在一个优先级组中。通讯在该组所有活动路径之间平衡负载。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>group_by_prio</literal>
            </para>
           </entry>
           <entry>
            <para>
             对于每个路径优先级值，都存在一个优先级组。具有相同优先级的路径在同一优先级组中。优先级由外部程序指派。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>group_by_serial</literal>
            </para>
           </entry>
           <entry>
            <para>
             路径按 SCSI 目标序列号（控制器节点 WWN）分组。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>group_by_node_name</literal>
            </para>
           </entry>
           <entry>
            <para>
             每个目标节点名指派一个优先级组。目标节点名是在 <filename>/sys/class/fc_transport/target*/node_name</filename> 中获取的。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>path_selector</literal></term>
      <listitem>
       <para>
        指定用于负载平衡的 path-selector 算法。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             说明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>round-robin 0</literal>
            </para>
           </entry>
           <entry>
            <para>
             用于平衡优先级组中所有活动路径之间的通讯的负载平衡算法。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>queue-length 0</literal>
            </para>
           </entry>
           <entry>
            <para>
             用于平衡路径上运行中 I/O 数的动态负载平衡器，类似于 least-pending 选项。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>service-time 0</literal>
            </para>
           </entry>
           <entry>
            <para>
             （默认值）面向服务时间的、用于根据延迟情况来平衡多个路径上的 I/O 的负载平衡器。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>pg_timeout</term>
      <listitem>
       <para>
        指定路径组超时处理。不能指定任何值，已设置了内部默认值。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vle-polling-interval">
      <term><literal>polling_interval</literal></term>
      <listitem>
       <para>
        指定某个路径检查周期结束到下一个路径检查周期开始之间的时间（以秒为单位）。
       </para>
       <para>
        指定大于 0 的整数值。默认值为 5。请务必向您的储存系统供应商确认 polling_interval 设置。不同的储存系统可能会有不同的设置要求。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>rr_min_io_rq</literal></term>
      <listitem>
       <para>
        指定在使用基于请求的 device-mapper-multipath 切换到当前路径组中的下一个路径前，路由至某个路径的 I/O 请求的数量。
       </para>
       <para>
        指定大于 0 的整数值。默认值为 1。
       </para>
<screen>rr_min_io_rq "1"</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>rr_weight</literal></term>
      <listitem>
       <para>
        指定用于路径的加权方法。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             值
            </para>
           </entry>
           <entry>
            <para>
             说明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>uniform</literal>
            </para>
           </entry>
           <entry>
            <para>
             （默认）所有路径具有相同的循环复用权重。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>priorities</literal>
            </para>
           </entry>
           <entry>
            <para>
             每个路径的权重通过路径的优先级乘以 rr_min_io_rq 设置来确定。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>uid_attribute</literal></term>
      <listitem>
       <para>
        提供唯一路径标识符的 udev 属性。默认值为 <literal>ID_SERIAL</literal>。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
   <sect3 xml:id="sec-multipath-policies-failover-rr">
    <title>配置循环负载平衡</title>
    <para>
     所有路径都是活动的。I/O 被配置为等候数秒或一定的 I/O 事务数，再移到序列中下一个打开的路径。
    </para>
   </sect3>
   <sect3 xml:id="sec-multipath-policies-failover-prio-single">
    <title>配置单路径故障转移</title>
    <para>
     具有最高优先级（设置值为最低）的一个路径是活动的，可以进行通讯。其他路径可用于故障转移，但在发生故障转移前不会使用。
    </para>
   </sect3>
   <sect3 xml:id="sec-multipath-policies-failover-prio-rr-grouping">
    <title>将 I/O 路径分组以进行循环负载平衡</title>
    <para>
     具有相同优先级的多个路径分在活动的组中。当该组中的所有路径失败时，设备会故障转移到下一个最高优先级的组。该组中的所有路径以循环负载平衡的方式共享通讯负载。
    </para>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-multipath-policies-failover-rtpg">
   <title>报告目标路径组</title>
   <para>
    使用 SCSI 报告目标端口组 (<command>sg_rtpg(8)</command>) 命令。有关信息，请参见 <command>sg_rtpg(8)</command> 的手册页。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-root">
  <title>配置根设备的多路径 I/O</title>

  <para>
   <filename>SUSE Linux Enterprise Server</filename> 中的 <filename>/boot</filename> 和 <phrase role="productname"><phrase os="sles">/root</phrase></phrase> 可以使用并支持设备映射程序多路径 I/O (DM-MPIO)。此外，YaST 安装程序中的 YaST 分区程序支持在安装时启用多路径。
  </para>

  <sect2 xml:id="sec-multipath-root-install">
   <title>安装时启用多路径 I/O</title>
   <para>
    要在多路径设备上安装操作系统，安装时必须运行多路径软件。<systemitem class="daemon">multipathd</systemitem> 守护程序在系统安装过程中不会自动激活。您可以使用 YaST 分区程序中的<guimenu>配置多路径</guimenu>选项来启动它。
   </para>
   <sect3 xml:id="sec-multipath-root-install-aa-lun">
    <title>安装时在主动/主动多路径储存 LUN 上启用多路径 I/O</title>
    <procedure>
     <step>
      <para>
       安装期间，在<guimenu>建议的分区</guimenu>屏幕上选择<guimenu>专家分区程序</guimenu>。
      </para>
     </step>
     <step>
      <para>
       选择<guimenu>硬盘</guimenu>主图标，单击<guimenu>配置</guimenu>按钮，然后选择<guimenu>配置多路径</guimenu>。
      </para>
     </step>
     <step>
      <para>
       启动多路径。
      </para>
      <para>
       YaST 会开始重扫描磁盘，并显示可用的多路径设备（如 <filename>/dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65</filename>）。它是应做所有进一步处理的设备。
      </para>
     </step>
     <step>
      <para>
       单击<guimenu>下一步</guimenu>继续安装。
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="sec-multipath-root-install-ap-lun">
    <title>安装时在主动/被动多路径储存 LUN 上启用多路径 I/O</title>
    <para>
     <systemitem class="daemon">multipathd</systemitem> 守护程序在系统安装过程中不会自动激活。您可以使用 YaST 分区程序中的<guimenu>配置多路径</guimenu>选项来启动它。
    </para>
    <para>
     在安装时为主动/被动多路径储存 LUN 启用多路径 I/O：
    </para>
    <procedure>
     <step>
      <para>
       安装期间，在<guimenu>建议的分区</guimenu>屏幕上选择<guimenu>专家分区程序</guimenu>。
      </para>
     </step>
     <step>
      <para>
       选择<guimenu>硬盘</guimenu>主图标，单击<guimenu>配置</guimenu>按钮，然后选择<guimenu>配置多路径</guimenu>。
      </para>
     </step>
     <step>
      <para>
       启动多路径。
      </para>
      <para>
       YaST 会开始重扫描磁盘，并显示可用的多路径设备（如 <filename>/dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65</filename>）。它是应做所有进一步处理的设备。记下设备路径和 UUID，您以后会需要这些信息。
      </para>
     </step>
     <step>
      <para>
       单击<guimenu>下一步</guimenu>继续安装。
      </para>
     </step>
     <step>
      <para>
       所有设置都设好且安装完成后，YaST 即会开始写入引导加载程序信息，并显示重启动系统的倒计时。单击<guimenu>停止</guimenu>按钮停止倒计时，然后按 <keycombo><keycap function="control"/><keycap function="alt"/><keycap>F5</keycap></keycombo> 访问控制台。
      </para>
     </step>
     <step>
      <para>
       通过控制台确定是否在 <filename>/boot/grub/device.map</filename> 文件中为 <filename>hd0</filename> 条目输入了不活动路径。
      </para>
      <para>
       这一点是必需的，因为安装时不会区分活动和不活动路径。
      </para>
      <substeps performance="required">
       <step>
        <para role="intro">
         输入以下命令将根设备挂载 <filename>/mnt</filename>
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mount /dev/disk/by-id/<replaceable>UUID</replaceable>;_part2 /mnt</screen>
        <para>
         例如，输入
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mount /dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65_part2 /mnt</screen>
       </step>
       <step>
        <para>
         输入以下命令将引导设备挂载 <filename>/mnt/boot</filename>
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mount /dev/disk/by-id/<replaceable>UUID</replaceable>_part1 /mnt/boot</screen>
        <para>
         例如，输入
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mount /dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65_part2 /mnt/boot</screen>
       </step>
       <step>
        <para>
         在 <filename>/mnt/boot/grub/device.map</filename> 文件中，确定 <filename>hd0</filename> 条目是否指向不活动路径，然后执行下列其中一项操作：
        </para>
        <itemizedlist mark="bullet" spacing="normal">
         <listitem>
          <formalpara>
           <title>活动路径：</title>
           <para>
            不需要执行任何操作。跳过所有剩余的步骤，按 <keycombo><keycap function="control"/><keycap function="alt"/><keycap>F7</keycap></keycombo> 返回 YaST 图形环境，然后继续安装。
           </para>
          </formalpara>
         </listitem>
         <listitem>
          <formalpara>
           <title>不活动路径：</title>
           <para>
            必须更改配置并重新安装引导加载程序。
           </para>
          </formalpara>
         </listitem>
        </itemizedlist>
       </step>
      </substeps>
     </step>
     <step>
      <para role="intro">
       如果 <filename>hd0</filename> 条目指向不活动路径，请更改配置并重新安装引导加载程序：
      </para>
      <substeps performance="required">
       <step>
        <para role="intro">
         在控制台提示符处输入以下命令：
        </para>
<screen>
          mount -o bind /dev /mnt/dev
          mount -o bind /sys /mnt/sys
          mount -o bind /proc /mnt/proc
          chroot /mnt</screen>
       </step>
       <step>
        <para role="intro">
         在控制台中，运行 <command>multipath -ll</command>，然后检查输出以找到活动路径。
        </para>
        <para>
         不活动路径标有 <literal>ghost</literal> 字样。
        </para>
       </step>
       <step>
        <para>
         在 <filename>/boot/grub/device.map</filename> 文件中，将 <literal>hd0</literal> 条目更改为活动路径，保存更改并关闭文件。
        </para>
       </step>
       <step>
        <para>
         输入以下命令重新安装引导加载程序
        </para>
<screen>grub-install /dev/disk/by-id/<replaceable>UUID</replaceable>_part1 /mnt/boot</screen>
        <para>
         例如，输入
        </para>
<screen>grub-install /dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65_part2 /mnt/boot</screen>
       </step>
       <step>
        <para>
         输入以下命令：
        </para>
<screen>exit
umount /mnt/*
umount /mnt</screen>
       </step>
      </substeps>
     </step>
     <step>
      <para>
       按 <keycombo><keycap function="control"/><keycap function="alt"/><keycap>F7</keycap></keycombo> 返回 YaST 图形环境。
      </para>
     </step>
     <step>
      <para>
       单击<guimenu>确定</guimenu>继续安装重引导。
      </para>
     </step>
    </procedure>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-multipath-root-enable-existing">
   <title>为现有根设备启用多路径 I/O</title>
   <procedure>
    <step>
     <para>
      将 Linux 安装为仅有一个路径活动，最好是分区程序中列出 <filename>by-id</filename> 符号链接的路径。
     </para>
    </step>
    <step>
     <para>
      使用安装期间使用的 <filename>/dev/disk/by-id</filename> 路径挂载设备。
     </para>
    </step>
    <step>
     <para>
      打开或创建 <filename>/etc/dracut.conf.d/10-mp.conf</filename>，并在其中添加以下行（请注意前导空格）：
     </para>
<screen>force_drivers+=" dm-multipath"</screen>
    </step>
    <step>
     <para>
      <remark condition="clarity">
       2014-09-05 - fs: Check if the following is still true
      </remark>
      对于 IBM Z，请在运行 <command>dracut</command> 之前先编辑 <filename>/etc/zipl.conf</filename> 文件，以 <filename>/etc/fstab</filename> 中使用的相同 by-id 信息更改 <filename>zipl.conf</filename> 中的 by-path 信息。
     </para>
    </step>
    <step>
     <para>
      运行 <command>dracut</command> <option>-f</option> 更新 <filename>initrd</filename> 映像。
     </para>
    </step>
    <step>
     <para>
      对于 IBM Z，请在运行 <command>dracut</command> 之后运行 <command>zipl</command>。
     </para>
    </step>
    <step>
     <para>
      重引导服务器。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-root-disable">
   <title>在根设备上禁用多路径 I/O</title>
   <para>
    向内核命令行中添加 <literal>multipath=off</literal>。这可以通过 YaST 引导加载程序模块来完成。打开<menuchoice> <guimenu>引导加载程序安装</guimenu> <guimenu> 内核参数</guimenu>
    </menuchoice>，并将参数添加到两个命令行中。
   </para>
   <para>
    这仅会影响根设备。不会影响所有其他设备。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-raid">
  <title>为现有软件 RAID 配置多路径 I/O</title>

  <para>
   理想的情况下，应先为设备配置多路径，再将这些设备用作软件 RAID 设备的组件。如果创建任何软件 RAID 设备之后添加多路径，则在重引导时，DM-MPIO 服务可能会比 <command>multipath</command> 服务启动得晚，导致多路径似乎不可用于 RAID。您可以使用本节中的过程使多路径对先前现有的软件 RAID 运行。
  </para>

  <para>
   例如，您可能需要在以下情况中对软件 RAID 中的设备配置多路径：
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     如果在全新安装或升级期间将一个新的软件 RAID 创建为分区设置的一部分。
    </para>
   </listitem>
   <listitem>
    <para>
     如果在软件 RAID 将设备用作成员设备或备用设备之前，没有将这些设备配置为支持多路径。
    </para>
   </listitem>
   <listitem>
    <para>
     如果通过向服务器添加新的 HBA 适配器或扩展 SAN 中的储存子系统而增加了系统规模。
    </para>
   </listitem>
  </itemizedlist>

  <note>
   <title>假设条件</title>
   <para>
    以下说明假定软件 RAID 设备是 <filename>/dev/mapper/mpath0</filename>，这是内核可以识别的设备名。它假设您已按照<xref linkend="sec-multipath-names" xrefstyle="HeadingOnPage"/>所述在 <filename>/etc/multipath.conf</filename> 文件中启用了用户友好的名称。
   </para>
   <para>
    确保将这些说明中的设备名修改为您的软件 RAID 的设备名。
   </para>
  </note>

  <procedure>
   <step>
    <para role="intro">
     打开一个终端控制台。
    </para>
    <para>
     除非另行说明，请使用此控制台输入以下步骤中的命令。
    </para>
   </step>
   <step>
    <para>
     如果当前已挂载或正在运行任何软件 RAID 设备，请对每个设备输入以下命令来卸载并停止设备。
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> umount /dev/mapper/mpath0
<prompt>&gt; </prompt><command>sudo</command> mdadm --misc --stop /dev/mapper/mpath0</screen>
   </step>
   <step>
    <para>
     输入以下命令停止 <command>md</command> 服务
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl stop mdmonitor</screen>
   </step>
   <step>
    <para>
     输入以下命令启动 <systemitem class="daemon">multipathd</systemitem> 守护程序：
    </para>
<screen><prompt>&gt; </prompt>systemctl start multipathd</screen>
   </step>
   <step>
    <para>
     启动多路径服务之后，校验软件 RAID 的组件设备是否列在 <filename>/dev/disk/by-id</filename> 目录中。执行以下操作之一：
    </para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <formalpara>
       <title>已列出设备：</title>
       <para>
        现在设备名应已具有到其设备映射程序多路径设备名的符号链接，例如 <filename>/dev/dm-1</filename>。
       </para>
      </formalpara>
     </listitem>
     <listitem>
      <formalpara>
       <title>未列出设备：</title>
       <para>
        输入以下命令清理并重新发现设备，强制多路径服务识别它们
       </para>
      </formalpara>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath -F
<prompt>&gt; </prompt><command>sudo</command> multipath -v0</screen>
      <para>
       这些设备现在应已在 <filename>/dev/disk/by-id</filename> 中列出，并且有到其设备映射程序多路径设备名的符号链接。例如：
      </para>
<screen>lrwxrwxrwx 1 root root 10 2011-01-06 11:42 dm-uuid-mpath-36006016088d014007e0d0d2213ecdf11 -&gt; ../../dm-1</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     输入以下命令重启动 <filename>mdmonitor</filename> 服务和 RAID 设备
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl start mdmonitor</screen>
   </step>
   <step>
    <para>
     通过输入以下命令，检查软件 RAID 的状态
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mdadm --detail /dev/mapper/mpath0</screen>
    <para>
     RAID 的组件设备应匹配在 <filename>/dev/disk/by-id</filename> 目录中列为设备符号链接的设备映射程序多路径设备名。
    </para>
   </step>
   <step>
    <para>
     如果根 (<filename>/</filename>) 设备或其任何部分（例如 <filename>/var</filename>、<filename>/etc</filename>、<filename>/log</filename>）位于 SAN 上，并且需要使用多路径引导，请重构建 <systemitem>initrd</systemitem>：
    </para>
<screen><prompt>&gt; </prompt>dracut -f --add-multipath</screen>
   </step>
   <step>
    <para>
     重引导服务器以应用更改。
    </para>
   </step>
   <step>
    <para>
     通过检查 RAID 状态，校验软件 RAID 阵列在多路径设备之上正确工作。输入
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mdadm --detail /dev/mapper/mpath0</screen>
    <para>
     例如：
    </para>
    <simplelist>
     <member><literal>Number Major Minor RaidDevice State</literal></member>
     <member><literal>0 253 0 0 active sync /dev/dm-0</literal></member>
     <member><literal>1 253 1 1 active sync /dev/dm-1</literal></member>
     <member><literal>2 253 2 2 active sync /dev/dm-2</literal></member>
    </simplelist>
   </step>
  </procedure>

  <note>
   <title>将 mdadm 与多路径设备配合使用</title>
   <para>
    <command>mdadm</command> 工具要求使用 ID 而不是设备节点路径访问设备。有关细节，请参考<xref linkend="sec-multipath-mpiotools-mdadm"/>。
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-multipath-lvm">
  <title>在多路径设备上使用 LVM2</title>

  <para>
   使用多路径时，资源的所有路径都显示为设备树中的设备。默认情况下，LVM 会检查设备树中任何设备的顶层是否存在多路径设备。如果 LVM 在顶层找到了多路径设备，它会假设该设备是多路径组件，并忽略（底层）设备。这很可能是您期望的行为，但也可以在 <filename>/etc/lvm/lvm.conf</filename> 中更改。如果将 multipath_component_detection 设置为 1，LVM 会扫描多路径组件设备。lvm.conf 中的默认项是：
  </para>

<screen>    # By default, LVM2 will ignore devices used as component paths
    # of device-mapper multipath devices.
    # 1 enables; 0 disables.
    multipath_component_detection = 1</screen>
 </sect1>
 <sect1 xml:id="sec-multipath-best-practice">
  <title>最佳实践</title>

  <para/>

  <sect2 xml:id="sec-multipath-best-practice-scandev">
   <title>在不重引导的情况下扫描新设备</title>
   <para>
    如果已将系统配置为启用多路径，并且您稍后需要向 SAN 添加储存，则可以使用 <command>rescan-scsi-bus.sh</command> 脚本扫描新设备。默认情况下，此脚本将扫描具有典型 LUN 范围的所有 HBA。该命令的一般语法如下所示：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> rescan-scsi-bus.sh [options] [host [host ...]]</screen>
   <para>
    对于大多数储存子系统，此脚本可在无选项的情况下成功运行。不过，在某些特殊情况下，可能需要使用一或多个选项。有关细节，请运行 <command>rescan-scsi-bus.sh --help</command>。
   </para>
   <warning>
    <title>EMC PowerPath 环境</title>
    <para>
     在 EMC PowerPath 环境中，请勿使用操作系统随附的 <filename>rescan-scsi-bus.sh</filename> 实用程序或 HBA 供应商脚本来扫描 SCSI 总线。为了避免可能发生的文件系统损坏，EMC 要求您遵照 EMC PowerPath for Linux 的供应商文档中提供的过程操作。
    </para>
   </warning>
   <para>
    使用以下过程扫描设备并在不重引导系统的情况下使这些设备可用于多路径。
   </para>
   <procedure>
    <step>
     <para>
      在储存子系统上，使用供应商的工具分配设备并更新其访问控制设置，以允许 Linux 系统访问新的储存区。有关细节，请参见供应商的文档。
     </para>
    </step>
    <step>
     <para>
      在所有目标中扫描查找一个主机，使其新设备为 Linux 内核 SCSI 子系统的中间层所知。在终端控制台提示符下，输入
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> rescan-scsi-bus.sh</screen>
     <para>
      根据您的设置，您可能需要结合可选参数运行 <command>rescan-scsi-bus.sh</command>。有关细节，请参见 <command>rescan-scsi-bus.sh --help</command>。
     </para>
    </step>
    <step>
     <para>
      请在 <systemitem class="daemon">systemd</systemitem> 日志中检查扫描进度（有关细节，请参见<xref linkend="cha-journalctl"/>）。在终端控制台提示符下，输入
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl -r</screen>
     <para>
      此命令显示日志的最后 行。例如：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl -r
Feb 14 01:03 kernel: SCSI device sde: 81920000
Feb 14 01:03 kernel: SCSI device sdf: 81920000
Feb 14 01:03 multipathd: sde: path checker registered
Feb 14 01:03 multipathd: sdf: path checker registered
Feb 14 01:03 multipathd: mpath4: event checker started
Feb 14 01:03 multipathd: mpath5: event checker started
Feb 14 01:03:multipathd: mpath4: remaining active paths: 1
Feb 14 01:03 multipathd: mpath5: remaining active paths: 1
[...]</screen>
    </step>
    <step>
     <para>
      重复上述步骤，以添加通过 Linux 系统上连接到新设备的其他 HBA 适配器的路径。
     </para>
    </step>
    <step>
     <para>
      运行 <command>multipath</command> 命令以识别 DM-MPIO 配置的设备。在终端控制台提示符下，输入
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath</screen>
     <para>
      现在可以为多路径配置新设备了。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-scanpart">
   <title>在不重引导的情况下扫描新的分区设备</title>
   <para>
    使用本节中的示例，在不重引导的情况下检测新添加的多路径 LUN。
   </para>
   <warning>
    <title>EMC PowerPath 环境</title>
    <para>
     在 EMC PowerPath 环境中，请勿使用操作系统随附的 <filename>rescan-scsi-bus.sh</filename> 实用程序或 HBA 供应商脚本来扫描 SCSI 总线。为了避免可能发生的文件系统损坏，EMC 要求您遵照 EMC PowerPath for Linux 的供应商文档中提供的过程操作。
    </para>
   </warning>
   <procedure>
    <step>
     <para>
      打开一个终端控制台。
     </para>
    </step>
    <step>
     <para>
      在所有目标中扫描查找一个主机，使其新设备为 Linux 内核 SCSI 子系统的中间层所知。在终端控制台提示符下，输入
     </para>
<screen><prompt>&gt; </prompt>rescan-scsi-bus.sh</screen>
     <para>
      根据您的设置，您可能需要结合可选参数运行 <command>rescan-scsi-bus.sh</command>。有关细节，请参见 <command>rescan-scsi-bus.sh --help</command>。
     </para>
    </step>
    <step>
     <para>
      通过输入以下命令校验该设备是否可见（例如链接是否有一个新的时戳）
     </para>
<screen><prompt>&gt; </prompt>ls -lrt /dev/dm-*</screen>
     <para>
      您也可以通过输入以下命令来校验设备存在于 <filename>/dev/disk/by-id</filename> 中
     </para>
<screen><prompt>&gt; </prompt>ls -l /dev/disk/by-id/</screen>
    </step>
    <step>
     <para>
      通过输入以下命令，校验新设备是否出现在日志中
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl -r</screen>
    </step>
    <step>
     <para>
      使用文本编辑器，在 <filename>/etc/multipath.conf</filename> 文件中为该设备添加新的别名定义，例如 <filename>data_vol3</filename>。
     </para>
     <para>
      例如，如果 UUID 是 <filename>36006016088d014006e98a7a94a85db11</filename>，则进行以下更改：
     </para>
<screen>defaults {
     user_friendly_names   yes
  }
multipaths {
     multipath {
          wwid    36006016088d014006e98a7a94a85db11
          alias  data_vol3
          }
  }</screen>
    </step>
    <step>
     <para>
      通过输入以下命令，为该设备创建分区表
     </para>
<screen><prompt>&gt; </prompt>fdisk /dev/disk/by-id/dm-uuid-mpath-&lt;UUID&gt;</screen>
     <para>
      使用设备的 WWID（如 <filename>36006016088d014006e98a7a94a85db11</filename>）替换 UUID。
     </para>
    </step>
    <step>
     <para>
      通过输入以下命令触发 udev
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> echo 'add' &gt; /sys/block/<replaceable>DM_DEVICE</replaceable>/uevent</screen>
     <para>
      例如，要为 <filename>dm-8</filename> 上的分区生成设备映射程序设备，请输入
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> echo 'add' &gt; /sys/block/dm-8/uevent</screen>
    </step>
    <step>
     <para>
      在设备 <filename>/dev/disk/by-id/dm-uuid-mpath-<replaceable>UUID_partN</replaceable></filename> 上创建文件系统。根据您选择的文件系统，您可以使用以下其中一个命令实现此目的：<command>mkfs.btrfs</command>
      <command> mkfs.ext3</command>、<command>mkfs.ext4</command> 或 <command>mkfs.xfs</command>。有关细节，请参见相应的手册页。用实际的 UUID 和分区编号替换 <filename>UUID_partN</filename>，例如 36006016088d014006e98a7a94a85db11_part1。
     </para>
    </step>
    <step>
     <para>
      输入以下命令为新分区创建标签：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> tune2fs -L <replaceable>LABELNAME</replaceable> /dev/disk/by-id/dm-uuid-<replaceable>UUID_partN</replaceable>
</screen>
     <para>
      用实际的 UUID 和分区编号替换 <filename>UUID_partN</filename>，例如 36006016088d014006e98a7a94a85db11_part1。用您选择的标签替换 <replaceable>LABELNAME</replaceable>。
     </para>
    </step>
    <step>
     <para>
      输入以下命令以重配置 DM-MPIO，使其读取别名：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipathd -k'reconfigure'</screen>
    </step>
    <step>
     <para>
      通过输入以下命令，校验该设备已由 <systemitem class="daemon">multipathd</systemitem> 识别
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath -ll</screen>
    </step>
    <step>
     <para>
      使用文本编辑器在 <filename>/etc/fstab</filename> 文件中添加新的挂载项。
     </para>
     <para>
      此时，您在上一步中创建的别名还不在 <filename>/dev/disk/by-label</filename> 目录中。为 <filename>/dev/dm-9</filename> 路径添加一个挂载项，然后在下次重引导到以下项目之前更改该项目
     </para>
<screen>LABEL=<replaceable>LABELNAME</replaceable></screen>
    </step>
    <step>
     <para>
      创建要作为挂载点的目录，然后挂载设备。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-status">
   <title>查看多路径 I/O 状态</title>
   <para>
    查询多路径 I/O 状态会输出多路径映射的当前状态。
   </para>
   <para>
    <command>multipath -l</command> 选项可显示从上次运行路径检查程序以来的当前路径状态。它不会运行路径检查程序。
   </para>
   <para>
    <command>multipath -ll</command> 选项运行路径检查程序，更新路径信息，然后显示当前状态信息。此命令始终显示关于路径状态的最新信息。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> multipath -ll
3600601607cf30e00184589a37a31d911
[size=127 GB][features="0"][hwhandler="1 emc"]

\_ round-robin 0 [active][first]
  \_ 1:0:1:2 sdav 66:240  [ready ][active]
  \_ 0:0:1:2 sdr  65:16   [ready ][active]

\_ round-robin 0 [enabled]
  \_ 1:0:0:2 sdag 66:0    [ready ][active]
  \_ 0:0:0:2 sdc  8:32    [ready ][active]</screen>
   <para>
    对于每个设备，它显示该设备的 ID、大小、功能和硬件处理程序。
   </para>
   <para>
    在设备发现时，通向该设备的路径会自动分组为多个优先级组。一次只有一个优先级组是活动的。对于活动/活动配置，所有路径均在同一组中。对于活动/不活动配置，不活动的路径会放在另外的优先级组中。
   </para>
   <para>
    会针对每个组显示下列信息：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      用于在组内平衡 I/O 的日程安排策略，例如循环
     </para>
    </listitem>
    <listitem>
     <para>
      该组为活动、已禁用还是已启用
     </para>
    </listitem>
    <listitem>
     <para>
      该组是否是第一个（最高优先级）组
     </para>
    </listitem>
    <listitem>
     <para>
      该组内包含的路径
     </para>
    </listitem>
   </itemizedlist>
   <para>
    会针对每个路径显示下列信息：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      物理地址，格式为 <replaceable>HOST:BUS:TARGET:LUN</replaceable>，例如 1:0:1:2
     </para>
    </listitem>
    <listitem>
     <para>
      设备节点名，例如 <filename>sda</filename>
     </para>
    </listitem>
    <listitem>
     <para>
      主要:次要编号
     </para>
    </listitem>
    <listitem>
     <para>
      设备的状态
     </para>
    </listitem>
   </itemizedlist>
   <note>
    <title>在多路径设置中使用 <command>iostat</command></title>
    <para>
     在多路径环境中，<command>iostat</command> 命令可能会导致意外结果。默认情况下，<command>iostat</command> 会过滤掉所有没有 I/O 的块设备。要使 <command>iostat</command> 显示<emphasis>所有</emphasis>设备，请使用：
    </para>
    <screen>iostat -p ALL</screen>
   </note>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-io-error">
   <title>在错误状况下管理 I/O</title>
   <para>
    如果所有路径同时失败，则可能需要通过启用 queue_if_no_path 来配置多路径以使 I/O 排队。否则，I/O 将在通过所有路径后立即失败。在某些情形下，即驱动程序、HBA 或光纤遇到欺骗性错误时，应该将 DM-MPIO 配置为在这些错误导致丢失所有路径时将所有 I/O 排队，并且永不向上散播错误。
   </para>
   <para>
    在群集中使用多路径设备时，可以选择禁用 queue_if_no_path。这会自动使路径失败，而不是使 I/O 排队，并升级 I/O 错误以引发群集资源的故障转移。
   </para>
   <para>
    因为启用 queue_if_no_path 会导致 I/O 无限排队（除非有一个路径恢复），所以请确保 <command>multipathd</command> 正在运行且在您的环境中起作用。否则，可能需要在受影响的多路径设备上永远停止 I/O，直到重引导或手动返回到故障转移而不是排队。
   </para>
   <para>
    测试该情形：
   </para>
   <procedure>
    <step>
     <para>
      打开一个终端控制台。
     </para>
    </step>
    <step>
     <para>
      输入以下命令激活设备 I/O 的排队而非故障转移
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message <replaceable>DEVICE_ID</replaceable> 0 queue_if_no_path</screen>
     <para>
      将 <replaceable>DEVICE_ID</replaceable> 替换为您设备的 ID。值 0 代表扇区，在不需要扇区信息时使用该值。
     </para>
     <para>
      例如，输入：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message 3600601607cf30e00184589a37a31d911 0 queue_if_no_path</screen>
    </step>
    <step>
     <para>
      输入以下命令返回到设备 I/O 的故障转移
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message <replaceable>DEVICE_ID</replaceable> 0 fail_if_no_path</screen>
     <para>
      该命令会立即导致所有排队的 I/O 失败。
     </para>
     <para>
      将 <replaceable>DEVICE_ID</replaceable> 替换为您设备的 ID。例如，输入
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message 3600601607cf30e00184589a37a31d911 0 fail_if_no_path</screen>
    </step>
   </procedure>
   <para>
    在所有路径失败的情形下设置将 I/O 排队：
   </para>
   <procedure>
    <step>
     <para>
      打开一个终端控制台。
     </para>
    </step>
    <step>
     <para>
      在文本编辑器中打开 <filename>/etc/multipath.conf</filename>。
     </para>
    </step>
    <step>
     <para>
      取消注释 defaults 部分及其结尾括号，然后如下所示添加 <literal>default_features</literal> 设置：
     </para>
<screen>defaults {
  default_features "1 queue_if_no_path"
}</screen>
    </step>
    <step>
     <para>
      修改 <filename>/etc/multipath.conf</filename> 文件后，您必须运行 <command>dracut</command> <option>-f</option> 在系统中重新创建 <filename>initrd</filename>，然后重引导以使更改生效。
     </para>
    </step>
    <step>
     <para>
      当您准备好返回到设备 I/O 的故障转移时，请输入
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message <replaceable>MAPNAME</replaceable> 0 fail_if_no_path</screen>
     <para>
      将 <replaceable>MAPNAME</replaceable> 替换为该设备映射的别名或设备 ID。值 0 代表扇区，在不需要扇区信息时使用该值。
     </para>
     <para>
      此命令会立即导致所有排队的 I/O 失败，并且将该错误传播到调用的应用程序。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-io-stalled">
   <title>解决停止的 I/O</title>
   <para>
    如果所有路径同时失败，并且 I/O 排队并停止，请执行以下操作：
   </para>
   <procedure>
    <step>
     <para>
      在终端控制台提示符下输入以下命令：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message <replaceable>MAPNAME</replaceable> 0 fail_if_no_path</screen>
     <para>
      将 <literal><replaceable>MAPNAME</replaceable></literal> 替换为设备的正确设备 ID 或映射别名。值 0 代表扇区，在不需要扇区信息时使用该值。
     </para>
     <para>
      此命令会立即导致所有排队的 I/O 失败，并且将该错误传播到调用的应用程序。
     </para>
    </step>
    <step>
     <para>
      输入以下命令重新激活排队：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> dmsetup message <replaceable>MAPNAME</replaceable> 0 queue_if_no_path</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-zseries">
   <title>配置 IBM Z 设备的默认设置</title>
   <para>
    对包含多路径功能的 IBM Z 设备进行的测试表明，应将 <literal>dev_loss_tmo</literal> 参数设置为无穷 (2147483647)，将 <literal>fast_io_fail_tmo</literal> 参数设置为 5 秒。如果您使用的是 IBM Z 设备，请按以下方式修改 <filename>/etc/multipath.conf</filename> 文件来指定这些值：
   </para>
<screen>defaults {
       dev_loss_tmo 2147483647
       fast_io_fail_tmo 5
}</screen>
   <para>
    <literal>dev_loss_tmo</literal> 参数设置将某个多路径链接标记为无效之前需等待的秒数。如果路径失败，则已失败路径上的任何当前 I/O 将失败。默认值根据所使用的设备驱动程序而异。要使用驱动程序的内部超时，请将值设置为零 (0)。也可以将其设置为“infinity”或 2147483647，如此会将其设置为最大值 2147483647 秒（68 年）。
   </para>
   <para>
    <literal>fast_io_fail_tmo</literal> 参数设置检测到链接问题时将 I/O 确定为失败之前需等待的时间。到达驱动程序的 I/O 将失败。如果 I/O 排在拥堵的队列中，则未到 <literal>dev_loss_tmo</literal> 时间且队列未疏通之前 I/O 不会失败。
   </para>
   <para>
    如果您修改了 <filename>/etc/multipath.conf</filename> 文件，所做的更改只有在您更新多路径映射或重启动 <systemitem class="daemon">multipathd</systemitem> 守护程序 (<command>systemctl restart multipathd</command>) 后才会应用。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-netapp">
   <title>将多路径与 NetApp 设备配合使用</title>
   <para>
    使用适用于 NetApp 设备的多路径时，建议在 <filename>/etc/multipath.conf</filename> 文件中进行如下设置：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      为 NetApp 设备全局设置以下参数的默认值：
     </para>
<screen>max_fds max
queue_without_daemon no</screen>
    </listitem>
    <listitem>
     <para>
      在硬件表中为 NetApp 设备的以下参数设置默认值：
     </para>
<screen>dev_loss_tmo infinity
fast_io_fail_tmo 5
features "3 queue_if_no_path pg_init_retries 50"</screen>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-noflush">
   <title>将 --noflush 与多路径设备配合使用</title>
   <para>
    在多路径设备上运行时，应始终使用 <option>--noflush</option>选项。
   </para>
   <para>
    例如，在执行重新装载表的脚本中，应继续使用 <literal>--noflush</literal> 选项以确保任何未解决的 I/O 不会被刷新，因为您需要多路径拓扑信息。
   </para>
<screen>load
resume --noflush</screen>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-san-timeout">
   <title>根设备为多路径时的 SAN 超时设置</title>

   <para>
    所有路径都已失败并已从系统中去除时，多路径设备上包含根目录 (<filename>/</filename>) 的系统可能会停止，因为系统会收到储存子系统（例如光纤通道储存阵列）发出的 <literal>dev_loss_tmo</literal> 超时通知。
   </para>
   <para>
    如果系统设备配置了多路径，且多路径 <literal>no_path_retry</literal> 设置处于活动状态，则应相应地修改储存子系统的 <literal>dev_loss_tmo</literal> 设置，以确保所有路径都失败时不会删除任何设备。强烈建议您将 <literal>dev_loss_tmo</literal> 值设置为等于或大于多路径的 <literal>no_path_retry</literal> 设置。
   </para>
   <para>
    建议按如下方式设置储存子系统的 <literal>dev_los_tmo</literal>：
   </para>
<screen>&lt;dev_loss_tmo&gt; = &lt;no_path_retry&gt; * &lt;polling_interval&gt;</screen>
   <para>
    以下定义适用于多路径值：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      <literal>no_path_retry</literal> 是将路径视为丢失并停止 IO 排队前多路径 I/O 的重试次数。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>polling_interval</literal> 是路径检查的间隔时间（以秒为单位）。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    以上多路径值都应该从 <filename>/etc/multipath.conf</filename> 配置文件进行设置。有关信息，请参见<xref linkend="sec-multipath-conf-file" xrefstyle="SectTitleOnPage"/>。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-trouble">
  <title>MPIO 查错</title>

  <para>
   本节对 MPIO 的一些已知问题以及可行的解决方案进行了说明。
  </para>

  <sect2 xml:id="sec-multipath-trouble-grub2">
   <title>在多路径设备上安装 GRUB2</title>
   <para>
    在具有 Btrfs 的传统 BIOS 系统上，<command>grub2-install</command> 可能会失败，并显示<emphasis>权限被拒</emphasis>。要解决此问题，请确保以读写 (rw) 模式挂载 <filename>/boot/grub2/<replaceable>SUBDIR</replaceable>/</filename> 子卷。<replaceable>SUBDIR</replaceable> 可以是 <literal>x86_64-efi</literal> 或 <literal>i386-pc</literal>。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-root">
   <title>启用多路径时系统在引导过程中退出到紧急外壳</title>
   <para>
    在引导过程中，系统退出到紧急外壳，并显示类似如下的消息：
   </para>
<screen>[  OK  ] Listening on multipathd control socket.
         Starting Device-Mapper Multipath Device Controller...
[  OK  ] Listening on Device-mapper event daemon FIFOs.
         Starting Device-mapper event daemon...
         Expecting device dev-disk-by\x2duuid-34be48b2\x2dc21...32dd9.device...
         Expecting device dev-sda2.device...
[  OK  ] Listening on udev Kernel Socket.
[  OK  ] Listening on udev Control Socket.
         Starting udev Coldplug all Devices...
         Expecting device dev-disk-by\x2duuid-1172afe0\x2d63c...5d0a7.device...
         Expecting device dev-disk-by\x2duuid-c4a3d1de\x2d4dc...ef77d.device...
[  OK  ] Started Create list of required static device nodes ...current kernel.
         Starting Create static device nodes in /dev...
[  OK  ] Started Collect Read-Ahead Data.
[  OK  ] Started Device-mapper event daemon.
[  OK  ] Started udev Coldplug all Devices.
         Starting udev Wait for Complete Device Initialization...
[  OK  ] Started Replay Read-Ahead Data.
         Starting Load Kernel Modules...
         Starting Remount Root and Kernel File Systems...
[  OK  ] Started Create static devices
[*     ] (1 of 4) A start job is running for dev-disk-by\x2du...(7s / 1min 30s)
[*     ] (1 of 4) A start job is running for dev-disk-by\x2du...(7s / 1min 30s)

...

Timed out waiting for device dev-disk-by\x2duuid-c4a...cfef77d.device.
[DEPEND] Dependency failed for /opt.
[DEPEND] Dependency failed for Local File Systems.
[DEPEND] Dependency failed for Postfix Mail Transport Agent.
Welcome to emergency shell
Give root password for maintenance
(or press Control-D to continue):</screen>
    <para>
     在此阶段，您将在 initrd 环境中的临时 <command>dracut</command> 紧急外壳中工作。要永久保留以下所述的配置更改，您需要在已安装系统的环境中执行这些更改。
    </para>
    <procedure>
     <step>
      <para>
       确定系统根 (<filename>/</filename>) 文件系统。检查 <filename>/proc/cmdline</filename> 的内容并查找 <option>root=</option> 参数。
      </para>
     </step>
     <step>
      <para>
       校验是否已挂载根文件系统：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl status sysroot.mount</screen>
      <tip>
       <para>
        默认情况下，<command>dracut</command> 会将根文件系统挂载到 <filename>/sysroot</filename> 之下。
       </para>
      </tip>
      <para>
       从现在开始，我们假设根文件系统已挂载到 <filename>/sysroot</filename> 下。
      </para>
     </step>
     <step>
      <para>
       在 <filename>/sysroot</filename> 下挂载系统所需的文件系统，使用 <command>chroot</command> 命令转到该目录，然后挂载所有文件系统。例如：
      </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> for x in proc sys dev run; do mount --bind /$x /sysroot/$x; done
<prompt>&gt; </prompt><command>sudo</command> chroot /sysroot /bin/bash
<prompt>&gt; </prompt><command>sudo</command> mount -a
</screen>
      <para>
       有关更多详细信息，请参见 <xref linkend="sec-trouble-data-recover-rescue-access"/>。
      </para>
     </step>
     <step>
      <para>
       按照以下过程中的建议更改多路径或 dracut 配置。请记得重构建 <filename>initrd</filename> 以包含修改。
      </para>
     </step>
     <step>
      <para>
       通过输入 <command>exit</command> 命令退出 <command>chroot</command> 环境，然后退出紧急外壳并按 <keycombo><keycap function="control"/>
       <keycap>D</keycap></keycombo> 来重引导服务器。
      </para>
     </step>
    </procedure>

   <procedure xml:id="pro-multipath-trouble-root-blacklist">
    <title>紧急外壳：将文件系统加入黑名单</title>
    <para>
     如果根文件系统不在多路径上，却启用了多路径，则需要此修复。在此类设置中，多路径会尝试为未加入黑名单的所有设备设置其路径。由于具有根文件系统的设备已挂载，它对于多路径而言是无法访问的，因而会导致路径设置失败。您可以在 <filename>/etc/multipath.conf</filename> 中将根设备加入黑名单来正确设置多路径，从而修复此问题。
    </para>
    <step>
     <para>
      在紧急外壳中运行 <command>multipath -v2</command> 并确定根文件系统的设备。产生的输出如下所示：
     </para>
<screen><prompt role="root"># </prompt>multipath -v2
Dec 18 10:10:03 | 3600508b1001030343841423043300400: ignoring map</screen>
     <para>
      <literal>| </literal> 和 <literal>:</literal> 之间的字符串是加入黑名单所需的 WWID。
     </para>
    </step>
    <step>
     <para>
      打开 <filename>/etc/multipath.conf</filename> 并添加以下内容：
     </para>
<screen>blacklist {
  wwid "<replaceable>WWID</replaceable>"
}</screen>
     <para>
      使用在上一步中获取的 ID 替换 <replaceable>WWID</replaceable>。有关更多信息，请参见<xref linkend="sec-multipath-blacklist"/>。
     </para>
    </step>
    <step>
     <para>
      使用以下命令重构建 <systemitem>initrd</systemitem>：
     </para>
<screen><prompt>&gt; </prompt>dracut -f --add-multipath</screen>
    </step>
   </procedure>
   <procedure xml:id="pro-multipath-trouble-root-initrd">
    <title>紧急外壳：重构建 <filename>initrd</filename></title>
    <para>
     如果 <filename>initrd</filename> 与系统之间的多路径状态（已启用或已禁用）不相同，则需要执行此修复过程。要修复此问题，请重构建 <filename>initrd</filename>：
    </para>
    <step>
     <para>
      如果已在系统中<emphasis>启用</emphasis>多路径，请通过以下命令重构建支持多路径的 initrd：
     </para>
<screen><prompt>&gt; </prompt>dracut --force --add multipath</screen>
     <para>
      如果已在系统中<emphasis>禁用</emphasis>多路径，请通过以下命令重构建支持多路径的 initrd：
     </para>
<screen><prompt>&gt; </prompt>dracut --force -o multipath</screen>
    </step>
   </procedure>
   <procedure xml:id="pro-multipath-trouble-root-drivers">
    <title>紧急外壳：重构建 <filename>initrd</filename></title>
    <para>
     如果 initrd 不包含用于访问网络挂接储存的驱动程序，则需要此修复。例如，如果系统是在没有多路径的情况下安装的，或者当添加或更换相应硬件时，就可能需要执行此修复过程。
    </para>
    <step>
     <para>
      将所需的驱动程序添加至文件 <filename>/etc/dracut.conf.d/01-dist.conf</filename> 中的变量 <envar>force_drivers</envar>。例如，如果系统包含 <filename>hpsa</filename> 驱动程序访问的 RAID 控制器，且多路径设备连接到由 qla23xx 驱动程序访问的 QLogic 控制器，该项将会如下所示：
     </para>
<screen>force_drivers+="hpsa qla23xx"</screen>
    </step>
    <step>
     <para>
      使用以下命令重构建 <systemitem>initrd</systemitem>：
     </para>
<screen><prompt>&gt; </prompt>dracut -f --add-multipath</screen>
    </step>
    <step>
     <para>
      为了防止在挂接网络储存失败时系统引导到紧急模式，建议将挂载选项 <literal>_netdev</literal> 添加到 <filename>/etc/fstab</filename> 中的相应项。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-prio-fail">
   <title>升级到多路径 0.4.9 或更高版本后单个设备的 PRIO 设置不起作用</title>
   <para>
    从 0.4.9 版开始，多路径工具使用 <filename>/etc/multipath.conf</filename> 文件 <literal>defaults{}</literal> 或 <literal>devices{}</literal> 部分中的 <literal>prio</literal> 设置。当为 <literal>multipaths{}</literal> 部分中的单个 <literal>multipath</literal> 定义指定关键字 <literal>prio</literal> 时，它将被忽略而无反馈。
   </para>
   <para>
    多路径工具 0.4.8 允许 <literal>multipaths{)</literal> 部分单个 <literal>multipath</literal> 定义中的 prio 设置覆盖 <literal>defaults{}</literal> 或 <literal>devices{}</literal> 部分中的 <literal>prio</literal> 设置。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-prio-argument-fail">
   <title>升级到 multipath-tools-0.4.9 或更高版本后带有参数的 PRIO 设置不起作用</title>
   <para>
    从 <filename>multipath-tools-0.4.8</filename> 升级到 <filename>multipath-tools-0.4.9</filename> 时，若优先级排序程序需要参数，则 <filename>/etc/multipath.conf</filename> 文件中的 <literal>prio</literal> 设置会损坏。在 multipath-tools-0.4.9 中，使用关键字 <literal>prio</literal> 指定优先级排序程序，使用关键字 <literal>prio_args</literal> 为需要参数的优先级排序程序指定参数。而在早前版本中，优先级排序程序及其参数均在同一个 <literal>prio</literal> 行上指定。
   </para>
   <para>
    例如，在 multipath-tools-0.4.8 中，可使用以下一行命令指定优先级排序程序及其参数。
   </para>
<screen>prio "weightedpath hbtl [1,3]:.:.+:.+ 260 [0,2]:.:.+:.+ 20"</screen>
   <para>
    升级到 multipath-tools-0.4.9 或更高版本后，该命令会导致错误。出现的消息类似如下所示：
   </para>
<screen>&lt;Month day hh:mm:ss&gt; | Prioritizer 'weightedpath hbtl [1,3]:.:.+:.+ 260
[0,2]:.:.+:.+ 20' not found in /lib64/multipath</screen>
   <para>
    要解决此问题，请使用文本剪辑器修改 <filename>/etc/multipath.conf</filename> 文件中的 <literal>prio</literal> 行。创建两行，其中 <filename>prio</filename> 行指定优先级排序程序，而下方的 <filename>prio_args</filename> 行指定其参数：
   </para>
<screen>prio "weightedpath"
prio_args "hbtl [1,3]:.:.+:.+ 260 [0,2]:.:.+:.+ 20"</screen>
   <para>
    运行 <command>sudo systemctl restart multipathd</command> 重启动 <systemitem class="daemon">multipathd</systemitem> 守护程序，以使更改生效。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-tids">
   <title>技术信息文档</title>
   <para>
    有关 SUSE Linux Enterprise Server 上多路径 I/O 问题的查错信息，请参见 SUSE 知识库中的下列技术信息文档 (TID)：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      <link xlink:href="https://www.suse.com/support/kb/doc.php?id=3617600"><citetitle>Using LVM on local and SAN attached devices（在本地设备和挂接 SAN 的设备上使用 LVM）</citetitle></link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link xlink:href="https://www.suse.com/support/kb/doc.php?id=7007498"><citetitle>Using LVM on Multipath (DM MPIO) Devices（在多路径 (DM MPIO) 设备上使用 LVM)</citetitle></link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link xlink:href="https://www.suse.com/support/kb/doc.php?id=7009660"><citetitle>HOWTO: Add, Resize and Remove LUN without restarting SLES（操作指南：在不重启动 SLES 的情况下添加、调整大小和去除 LUN）</citetitle></link>
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
</chapter>
