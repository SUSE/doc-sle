<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.security.cryptofs">
 <title>Encrypting Partitions and Files</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
    </info>
 <para>
  Encrypting files, partitions, and entire disks prevents unauthorized access to your data and protects your confidential files and documents.
 </para>
 <para>
  You can choose between the following encryption options:
 </para>
 <variablelist>
  <varlistentry>
   <term>Encrypting a Hard Disk Partition</term>
   <listitem>
    <para>
     It is possible to create an encrypted partition with &yast; during
     installation or in an already installed system. For further info, see
     <xref linkend="sec.security.cryptofs.y2.part_inst"/> and
     <xref linkend="sec.security.cryptofs.y2.part_run"/>. This
     option can also be used for removable media, such as external hard
     disks, as described in
     <xref linkend="sec.security.cryptofs.y2.removables"/>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>Creating an Encrypted Virtual Disk</term>
   <listitem>
    <para>
     You can create a file-based encrypted virtual disk on your hard disk or a removable
     medium with &yast;. The encrypted virtual disk can then be used
     as a regular folder for storing files or directories. For more
     information, refer to
     <xref linkend="sec.security.cryptofs.y2.vdisk"/>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>Encrypting Home Directories</term>
   <listitem>
    <para>
     With &productname;, you can also create encrypted user home
     directories. When the user logs in to the system, the encrypted home
     directory is mounted and the contents are made available to the user.
     Refer to <xref linkend="sec.security.cryptofs.y2.homes"/> for more
     information.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>Encrypting Single Files with GPG</term>
   <listitem>
    <para>
     To quickly encrypt one or several files, you can use the GPG tool. See
     <xref linkend="sec.security.cryptofs.gpg"/> for more information.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 <warning>
  <title>Encryption Offers Limited Protection</title>
  <para>
   Encryption methods described in this chapter cannot protect your running
   system from being compromised. After the encrypted volume is successfully
   mounted, everybody with appropriate permissions can access it. However,
   encrypted media are useful in case of loss or theft of your computer, or to
   prevent unauthorized individuals from reading your confidential data.
  </para>
 </warning>
 <sect1 xml:id="sec.security.cryptofs.y2">
  <title>Setting Up an Encrypted File System with &yast;</title>

  <para>
   Use &yast; to encrypt partitions or parts of your file system during
   installation or in an already installed system. However, encrypting a
   partition in an already-installed system is more difficult, because you
   need to resize and change existing partitions. In such cases, it may be
   more convenient to create an encrypted file of a defined size, in which
   to <emphasis>store</emphasis> other files or parts of your file system.
   To encrypt an entire partition, dedicate a partition for encryption in
   the partition layout. The standard partitioning proposal as suggested by
   &yast;, does not include an encrypted partition by default. Add it
   manually in the partitioning dialog.
  </para>

  <sect2 xml:id="sec.security.cryptofs.y2.part_inst">
   <title>Creating an Encrypted Partition during Installation</title>
   <warning>
    <title>Password Input</title>
    <para>
     Make sure to memorize the password for your encrypted partitions well.
     Without that password, you cannot access or restore the encrypted data.
    </para>
   </warning>
   <para>
    The &yast; expert dialog for partitioning offers the options needed
    for creating an encrypted partition. To create a new encrypted partition
    proceed as follows:
   </para>
   <procedure>
    <step>
     <para>
      Run the &yast; Expert Partitioner with <menuchoice>
      <guimenu>System</guimenu><guimenu>Partitioner</guimenu></menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Select a hard disk, click <guimenu>Add</guimenu>, and select a primary
      or an extended partition.
     </para>
    </step>
    <step>
     <para>
      Select the partition size or the region to use on the disk.
     </para>
    </step>
    <step>
     <para>
      Select the file system, and mount point of this partition.
     </para>
    </step>
    <step>
     <para>
      Activate the <guimenu>Encrypt device</guimenu> check box.
     </para>
     <note>
      <title>Additional Software Required</title>
      <para>
       After checking <guimenu>Encrypt device</guimenu>, a pop-up window
       asking for installing additional software may appear. Confirm to
       install all the required packages to ensure that the encrypted
       partition works well.
      </para>
     </note>
    </step>
<!-- 2009-10-02 toba: this option is grayed out and not accessible for
    encrypted partitions on opensuse 11.2m8 -->
<!-- FIXME: checkit! 2010-09-17, ke -->
    <step>
     <para>
      If the encrypted file system needs to be mounted only when necessary,
      enable <guimenu>Do not mount partition</guimenu> in the <guimenu>Fstab
      Options</guimenu>. otherwise enable <guimenu>Mount partition</guimenu>
      and enter the mount point.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Next</guimenu> and enter a password which is used to
      encrypt this partition. This password is not displayed. To prevent
      typing errors, you need to enter the password twice.
     </para>
    </step>
    <step>
     <para>
      Complete the process by clicking <guimenu>Finish</guimenu>. The
      newly-encrypted partition is now created.
     </para>
    </step>
   </procedure>
   <para>
    During the boot process, the operating system asks for the password
    before mounting any encrypted partition which is set to be auto-mounted
    in <filename>/etc/fstab</filename>. Such a partition is then available
    to all users when it has been mounted.
   </para>
   <para>
    To skip mounting the encrypted partition during start-up, press
    <keycap function="enter"/> when prompted for the password. Then decline
    the offer to enter the password again. In this case, the encrypted file
    system is not mounted and the operating system continues booting,
    blocking access to your data.
   </para>
   <para>
    To mount an encrypted partition which is not mounted
    during the boot process, open a file manager and click the partition
    entry in the pane listing common places on your file system. You will be
    prompted for a password and the partition will be mounted.
   </para>
   <para>
    When you are installing your system on a machine where partitions
    already exist, you can also decide to encrypt an existing partition
    during installation. In this case follow the description in
    <xref linkend="sec.security.cryptofs.y2.part_run"/> and be aware that
    this action destroys all data on the existing partition.
   </para>
  </sect2>

  <sect2 xml:id="sec.security.cryptofs.y2.part_run">
   <title>Creating an Encrypted Partition on a Running System</title>
   <warning>
    <title>Activating Encryption on a Running System</title>
    <para>
     It is also possible to create encrypted partitions on a running system.
     However, encrypting an existing partition destroys all data on it, and
     requires re-sizing and restructuring of existing partitions.
    </para>
   </warning>
   <para>
    On a running system, select <menuchoice> <guimenu>System</guimenu>
    <guimenu>Partitioner</guimenu> </menuchoice> in the &yast; control
    center. Click <guimenu>Yes</guimenu> to proceed. In the <guimenu>Expert
    Partitioner</guimenu>, select the partition to encrypt and click
    <guimenu>Edit</guimenu>. The rest of the procedure is the same as
    described in <xref linkend="sec.security.cryptofs.y2.part_inst"/>.
   </para>
  </sect2>

  <sect2 xml:id="sec.security.cryptofs.y2.vdisk">
   <title>Creating an Encrypted Virtual Disk</title>
   <para>
     Instead of encrypting an entire disk or partition, you can use &yast; to set up a file-based encrypted virtual disk. It will appear as a regular file in the file system, but can be mounted and used like a regular folder. Unlike encrypted partitions, encrypted virtual disks can be created without re-partitioning the hard disk.
   </para>
   <para>
     To set up an encrypted virtual disk, you need to create an empty file
     first (this file is called loop file). In the terminal, switch to the
     desired directory and run the <command>touch
     <replaceable>FILE</replaceable></command> command (where
     <replaceable>FILE</replaceable> is the desired name, for example: <filename>secret</filename>). It is also recommended to create an empty
     directory that will act as a mount point for the encrypted virtual
     disk. To do this, use the <command>mkdir
     <replaceable>DIR</replaceable></command> command (replace
     <replaceable>DIR</replaceable> with the actual path and directory name,
     for example: <filename>~/my_docs</filename>).
   </para>
   <para>
     To set up an encrypted virtual disk, launch &yast;, switch to the
     <guimenu>System</guimenu> section, and start Partitioner. Switch to
     the <guimenu>Crypt Files</guimenu> section and press <guimenu>Add Crypt
     File</guimenu>. Enter the path to the created loop file into the
     <guimenu>Path Name of Loop File</guimenu> field. Enable the
     <guimenu>Create Loop File</guimenu> option, specify the desired size, and
     press <guimenu>Next</guimenu>. In the <guimenu>Mount Point</guimenu> field,
     enter the path to the directory that serves as a mount point (in this
     example, it is <filename>~/my_docs</filename>). Make sure that the
     <guimenu>Encrypt Device</guimenu> option is enabled and press
     <guimenu>Next</guimenu>. Provide the desired password and press
     <guimenu>Finish</guimenu>.
   </para>
  </sect2>

  <sect2 xml:id="sec.security.cryptofs.y2.removables">
   <title>Encrypting the Content of Removable Media</title>
   <para>
    &yast; treats removable media (like external hard disks or flash
    disks) the same as any other storage device. Virtual disks or partitions on
    external media can be encrypted as described above. However, you should disable
    mounting at boot time, because removable media is usually connected only
    when the system is up and running.
   </para>
   <para>
    If you encrypted your removable device with &yast;, the &gnome; desktop
    automatically recognizes the encrypted partition and prompts for the
    password when the device is detected. If you plug in a FAT-formatted
    removable device when running &gnome;, the desktop user entering the
    password automatically becomes the owner of the device.
    For devices with a file system other than FAT, change the
    ownership explicitly for users other than &rootuser; to give them
    read-write access to the device.
   </para>
   <para>
     If you have created a virtual disk as described in <xref
     linkend="sec.security.cryptofs.y2.vdisk"/> but with the loop file on a
     removable disk, then you need to mount the file manually as follows:
   </para>
   <screen>&prompt.sudo;cryptsetup luksOpen  <replaceable>FILE</replaceable> <replaceable>NAME</replaceable>
sudo mount /dev/mapper/<replaceable>NAME</replaceable> <replaceable>DIR</replaceable>
   </screen>
   <para>
     In the commands above, the <replaceable>FILE</replaceable> refers to the
     path to the loop file, <replaceable>NAME</replaceable> is a user-defined
     name, and <replaceable>DIR</replaceable> is the path to the mount
     point. For example:
   </para>
   <screen>&prompt.sudo;cryptsetup luksOpen /run/media/tux/usbstick/secret my_secret
&prompt.sudo;mount /dev/mapper/my_secret /home/tux/my_docs
   </screen>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.security.cryptofs.y2.homes">
  <title>Using Encrypted Home Directories</title>

  <para>
   To protect data in home directories from unauthorized access, use the
   &yast; user management module to encrypt home directories. You can create
   encrypted home directories for new or existing users. To encrypt or decrypt
   home directories of already existing users, you need to know their login password. See
   <xref linkend="sec.yast.userman.adv.crypto"/> for instructions.
  </para>

  <para>
   Encrypted home partitions are created within a virtual disk as
   described in <xref linkend="sec.security.cryptofs.y2.vdisk"/>. Two
   files are created under <filename>/home</filename> for each encrypted
   home directory:
  </para>

<!-- bg: 2008-04-22: cannot reproduce, functionality is broken right
  now. However, it looks like the description is correct. -->

<!-- bg: 2008-10-08: comment from april still holds true. -->

  <variablelist>
   <varlistentry>
    <term><filename><replaceable>LOGIN</replaceable>.img</filename>
    </term>
    <listitem>
     <para>
      The image holding the directory
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename><replaceable>LOGIN</replaceable>.key</filename>
    </term>
    <listitem>
     <para>
      The image key, protected with the user's login password.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   On login, the home directory automatically gets decrypted. Internally, it
   works through the PAM module called <emphasis>pam_mount</emphasis>. If
   you need to add an additional login method that provides encrypted home
   directories, you need to add this module to the respective configuration
   file in <filename>/etc/pam.d/</filename>. For more information, see
   <xref linkend="cha.pam"/> and the man page of <option>pam_mount</option>.
  </para>

  <warning>
   <title>Security Restrictions</title>
   <para>
    Encrypting a user's home directory does not provide strong security from
    other users. If strong security is required, the system should not be
    shared physically.
   </para>
   <para>
    To enhance security, also encrypt the <filename>swap</filename>
    partition and the <filename>/tmp</filename> and
    <filename>/var/tmp</filename> directories, because these may contain
    temporary images of critical data. You can encrypt
    <filename>swap</filename>, <filename>/tmp</filename>, and
    <filename>/var/tmp</filename> with the &yast; partitioner as
    described in <xref linkend="sec.security.cryptofs.y2.part_inst"/> or
    <xref linkend="sec.security.cryptofs.y2.vdisk"/>.
   </para>
  </warning>
 </sect1>
 <sect1 xml:id="sec.security.cryptofs.gpg">
  <title>Encrypting Files with GPG</title>

  <para>
   The GPG encryption software can be used to encrypt individual files and documents.
  </para>

  <para>
   To encrypt a file with GPG, you need to generate a key pair first. To do
   this, run the <command>gpg --gen-key</command> and follow the on-screen
   instructions. When generating the key pair, GPG creates a user ID (UID) to
   identify the key based on your real name, comments, and email address. You
   need this UID (or just a part of it like your first name or email address)
   to specify the key you want to use to encrypt a file. To find the UID of an
   existing key, use the <command>gpg --list-keys</command> command. To encrypt
   a file use the following command:
  </para>
  <screen>&prompt.user;gpg -e -r <replaceable>UID</replaceable>
  <replaceable>FILE</replaceable></screen>
  <para>
    Replace <replaceable>UID</replaceable> with part of the UID (for example,
    your first name) and <replaceable>FILE</replaceable> with the file you want
    to encrypt. For example:
  </para>
  <screen>&prompt.user;gpg -e -r Tux secret.txt</screen>
  <para>
    This command creates an encrypted version of the specified file
    recognizable by the <filename>.gpg</filename> file extension (in
    this example, it is <filename>secret.txt.gpg</filename>).
  </para>
  <para>
    To decrypt an encrypted file, use the following command:
  </para>
  <screen>&prompt.user;gpg -d -o <replaceable>DECRYPTED_FILE</replaceable>
  <replaceable>ENCRYPTED_FILE</replaceable></screen>
  <para>
    Replace <replaceable>DECRYPTED_FILE</replaceable> with the desired name for
    the decrypted file and <replaceable>ENCRYPTED_FILE</replaceable> with the
    encrypted file you want to decrypt.
  </para>
  <para>
    Keep that the encrypted file can be only decrypted
    using the same key that was used for encryption. If you want to share an
    encrypted file with another person, you have to use that person's public key to
    encrypt the file.
  </para>
 </sect1>
</chapter>
