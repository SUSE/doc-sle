<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.raid_resize" xml:lang="en">
 <title>Resizing Software RAID Arrays with mdadm</title>
 <info>
  <abstract>
   <para>
    This section describes how to increase or reduce the size of a software
    RAID 1, 4, 5, or 6 device with the Multiple Device Administration
    (<command>mdadm(8)</command>) tool.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  Resizing an existing software RAID device involves increasing or decreasing
  the space contributed by each component partition. The file system that
  resides on the RAID must also be able to be resized to take advantage of the
  changes in available space on the device. In &productname;, file system
  resizing utilities are available for file systems Btrfs, Ext2, Ext3, Ext4, and
  XFS (increase size only). Refer to <xref linkend="cha.resize_fs"/> for more
  information.
 </para>
 <para>
  The <command>mdadm</command> tool supports resizing only for software RAID
  levels 1, 4, 5, and 6. These RAID levels provide disk fault tolerance so that
  one component partition can be removed at a time for resizing. In principle,
  it is possible to perform a hot resize for RAID partitions, but you must take
  extra care for your data when doing so.
 </para>
 <warning>
  <title>Back Up your Data Before Resizing</title>
  <para>
   Resizing any partition or file system involves some risks that can
   potentially result in losing data. To avoid data loss, ensure that you back
   up your data before you begin any resizing task.
  </para>
 </warning>
 <para>
  Resizing the RAID involves the following tasks. The order in which these
  tasks are performed depends on whether you are increasing or decreasing its
  size.
 </para>
 <table>
  <title>Tasks Involved in Resizing a RAID</title>
  <tgroup cols="4">
   <colspec colnum="1" colname="1" colwidth="2500*"/>
   <colspec colnum="2" colname="2" colwidth="5001*"/>
   <colspec colnum="3" colname="3" colwidth="1250*"/>
   <colspec colnum="4" colname="4" colwidth="1250*"/>
   <thead>
    <row>
     <entry>
      <para>
       Tasks
      </para>
     </entry>
     <entry>
      <para>
       Description
      </para>
     </entry>
     <entry>
      <para>
       Order If Increasing Size
      </para>
     </entry>
     <entry>
      <para>
       Order If Decreasing Size
      </para>
     </entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>
      <para>
       Resize each of the component partitions.
      </para>
      <para/>
     </entry>
     <entry>
      <para>
       Increase or decrease the active size of each component partition. You
       remove only one component partition at a time, modify its size, then
       return it to the RAID.
      </para>
     </entry>
     <entry>
      <para>
       1
      </para>
     </entry>
     <entry>
      <para>
       2
      </para>
     </entry>
    </row>
    <row>
     <entry>
      <para>
       Resize the software RAID itself.
      </para>
     </entry>
     <entry>
      <para>
       The RAID does not automatically know about the increases or decreases
       you make to the underlying component partitions. You must inform it
       about the new size.
      </para>
     </entry>
     <entry>
      <para>
       2
      </para>
     </entry>
     <entry>
      <para>
       3
      </para>
     </entry>
    </row>
    <row>
     <entry>
      <para>
       Resize the file system.
      </para>
     </entry>
     <entry>
      <para>
       You must resize the file system that resides on the RAID. This is
       possible only for file systems that provide tools for resizing.
      </para>
     </entry>
     <entry>
      <para>
       3
      </para>
     </entry>
     <entry>
      <para>
       1
      </para>
     </entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 <para>
  The procedures in the following sections use the device names shown in the
  following table. Ensure that you modify the names to use the names of your
  own devices.
 </para>
 <table>
  <title>Scenario for Increasing the Size of Component Partitions</title>
  <tgroup cols="2">
   <colspec colnum="1" colname="1" colwidth="5001*"/>
   <colspec colnum="2" colname="2" colwidth="5001*"/>
   <thead>
    <row>
     <entry>
      <para>
       RAID Device
      </para>
     </entry>
     <entry>
      <para>
       Component Partitions
      </para>
     </entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>
      <para>
       <filename>/dev/md0</filename>
      </para>
     </entry>
     <entry>
      <para>
       <filename>/dev/sda1</filename>
      </para>
      <para>
       <filename>/dev/sdb1</filename>
      </para>
      <para>
       <filename>/dev/sdc1</filename>
      </para>
     </entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 <sect1 xml:id="sec.raid_resize.incr">
  <title>Increasing the Size of a Software RAID</title>

  <para>
   Increasing the size of a software RAID involves the following tasks in the
   given order: increase the size of all partitions the RAID consists of,
   increase the size of the RAID itself and, finally, increase the size of the
   file system.
  </para>

  <warning>
   <title>Potential Data Loss</title>
   <para>
    If a RAID does not have disk fault tolerance, or it is simply not
    consistent, data loss results if you remove any of its partitions. Be very
    careful when removing partitions, and ensure that you have a backup of your
    data available.
   </para>
  </warning>

  <sect2 xml:id="sec.raid_resize.incr.partitions">
   <title>Increasing the Size of Component Partitions</title>
   <para>
    Apply the procedure in this section to increase the size of a RAID 1, 4, 5,
    or 6. For each component partition in the RAID, remove the partition from
    the RAID, modify its size, return it to the RAID, then wait until the RAID
    stabilizes to continue. While a partition is removed, the RAID operates in
    degraded mode and has no or reduced disk fault tolerance. Even for RAIDs
    that can tolerate multiple concurrent disk failures, do not remove more
    than one component partition at a time. To increase the size of the
    component partitions for the RAID, proceed as follows:
   </para>
   <procedure>
    <step>
     <para>
      Open a terminal console.
     </para>
    </step>
    <step>
     <para>
      Ensure that the RAID array is consistent and synchronized by entering
     </para>
<screen>cat /proc/mdstat</screen>
     <para>
      If your RAID array is still synchronizing according to the output of this
      command, you must wait until synchronization is complete before
      continuing.
     </para>
    </step>
    <step>
     <para>
      Remove one of the component partitions from the RAID array. For example,
      to remove <filename>/dev/sda1</filename>, enter
     </para>
<screen>sudo mdadm /dev/md0 --fail /dev/sda1 --remove /dev/sda1</screen>
     <para>
      To succeed, both the fail and remove actions must be specified.
     </para>
    </step>
    <step>
     <para>
      Increase the size of the partition that you removed in the previous step
      by doing one of the following:
     </para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        Increase the size of the partition, using a disk partitioner such as
        the &yast; Partitioner or the command line tool parted. This option is
        the usual choice.
       </para>
      </listitem>
      <listitem>
       <para>
        Replace the disk on which the partition resides with a higher-capacity
        device. This option is possible only if no other file systems on the
        original disk are accessed by the system. When the replacement device
        is added back into the RAID, it takes much longer to synchronize the
        data because all of the data that was on the original device must be
        rebuilt.
       </para>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>
      Re-add the partition to the RAID array. For example, to add
      <filename>/dev/sda1</filename>, enter
     </para>
<screen>sudo mdadm -a /dev/md0 /dev/sda1</screen>
     <para>
      Wait until the RAID is synchronized and consistent before continuing with
      the next partition.
     </para>
    </step>
    <step>
     <para>
      Repeat these steps for each of the remaining component devices in the
      array. Ensure that you modify the commands for the correct component
      partition.
     </para>
    </step>
    <step>
     <para>
      If you get a message that tells you that the kernel could not re-read the
      partition table for the RAID, you must reboot the computer after all
      partitions have been resized to force an update of the partition table.
     </para>
    </step>
    <step>
     <para>
      Continue with
      <xref linkend="sec.raid_resize.incr.raid" xrefstyle="SectTitleOnPage"/>.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec.raid_resize.incr.raid">
   <title>Increasing the Size of the RAID Array</title>
   <para>
    After you have resized each of the component partitions in the RAID (see
    <xref linkend="sec.raid_resize.incr.partitions"
    xrefstyle="SectTitleOnPage"/>),
    the RAID array configuration continues to use the original array size until
    you force it to be aware of the newly available space. You can specify a
    size for the RAID or use the maximum available space.
   </para>
   <para>
    The procedure in this section uses the device name
    <filename>/dev/md0</filename> for the RAID device. Ensure that you modify
    the name to use the name of your own device.
   </para>
   <procedure>
    <step>
     <para>
      Open a terminal console.
     </para>
    </step>
    <step>
     <para>
      Ensure that the RAID array is consistent and synchronized by entering
     </para>
<screen>cat /proc/mdstat</screen>
     <para>
      If your RAID array is still synchronizing according to the output of this
      command, you must wait until synchronization is complete before
      continuing.
     </para>
    </step>
    <step>
     <para>
      Check the size of the array and the device size known to the array by
      entering
     </para>
<screen>sudo mdadm -D /dev/md0 | grep -e "Array Size" -e "Dev Size"</screen>
    </step>
    <step>
     <para>
      Do one of the following:
     </para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        Increase the size of the array to the maximum available size by
        entering
       </para>
<screen>sudo mdadm --grow /dev/md0 -z max</screen>
      </listitem>
      <listitem>
       <para>
        Increase the size of the array to the maximum available size by
        entering
       </para>
<screen>sudo mdadm --grow /dev/md0 -z max --assume-clean</screen>
       <para>
        The array uses any space that has been added to the devices, but this
        space will not be synchronized. This is recommended for RAID&nbsp;1
        because the synchronization is not needed. It can be useful for other
        RAID levels if the space that was added to the member devices was
        pre-zeroed.
       </para>
      </listitem>
      <listitem>
       <para>
        Increase the size of the array to a specified value by entering
       </para>
<screen>sudo mdadm --grow /dev/md0 -z <replaceable>SIZE</replaceable></screen>
       <para>
        Replace <replaceable>SIZE</replaceable> with an integer value in
        kilobytes (a kilobyte is 1024 bytes) for the desired size.
       </para>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>
      Recheck the size of your array and the device size known to the array by
      entering
     </para>
<screen>sudo mdadm -D /dev/md0 | grep -e "Array Size" -e "Dev Size"</screen>
    </step>
    <step>
     <para>
      Do one of the following:
     </para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        If your array was successfully resized, continue with
        <xref linkend="sec.raid_resize.incr.fs" xrefstyle="SectTitleOnPage"/>.
       </para>
      </listitem>
      <listitem>
       <para>
        If your array was not resized as you expected, you must reboot, then
        try this procedure again.
       </para>
      </listitem>
     </itemizedlist>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec.raid_resize.incr.fs">
   <title>Increasing the Size of the File System</title>
   <para>
    After you increase the size of the array (see
    <xref linkend="sec.raid_resize.incr.raid" xrefstyle="SectTitleOnPage"/>),
    you are ready to resize the file system.
   </para>
   <para>
    You can increase the size of the file system to the maximum space available
    or specify an exact size. When specifying an exact size for the file
    system, ensure that the new size satisfies the following conditions:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      The new size must be greater than the size of the existing data;
      otherwise, data loss occurs.
     </para>
    </listitem>
    <listitem>
     <para>
      The new size must be equal to or less than the current RAID size because
      the file system size cannot extend beyond the space available.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Refer to <xref linkend="cha.resize_fs"/> for detailed instructions.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.raid_resize.decr">
  <title>Decreasing the Size of a Software RAID</title>

  <para>
   Decreasing the Size of a Software RAID involves the following tasks in the
   given order: decrease the size of the file system, decrease the size of all
   partitions the RAID consists of, and finally decrease the size of the RAID
   itself.
  </para>

  <warning>
   <title>Potential Data Loss</title>
   <para>
    If a RAID does not have disk fault tolerance, or it is simply not
    consistent, data loss results if you remove any of its partitions. Be very
    careful when removing partitions, and ensure that you have a backup of your
    data available.
   </para>
  </warning>

  <important>
   <title>XFS</title>
   <para>
    Decreasing the size of a file system formatted with XFS is not possible,
    since such a feature is not supported by XFS. As a consequence, the size of
    a RAID that uses the XFS file system cannot be decreased.
   </para>
  </important>

  <sect2 xml:id="sec.raid_resize.decr.fs">
   <title>Decreasing the Size of the File System</title>
   <para>
    When decreasing the size of the file system on a RAID device, ensure that
    the new size satisfies the following conditions:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      The new size must be greater than the size of the existing data;
      otherwise, data loss occurs.
     </para>
    </listitem>
    <listitem>
     <para>
      The new size must be equal to or less than the current RAID size because
      the file system size cannot extend beyond the space available.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Refer to <xref linkend="cha.resize_fs"/> for detailed instructions.
   </para>
  </sect2>

  <sect2 xml:id="sec.raid_resize.decr.raid">
   <title>Decreasing the Size of the RAID Array</title>
   <para>
    After you have resized the file system (see
    <xref linkend="sec.raid_resize.decr.fs" xrefstyle="SectTitleOnPage"/>), the
    RAID array configuration continues to use the original array size until you
    force it to reduce the available space. Use the <command>mdadm
    --grow</command> mode to force the RAID to use a smaller segment size. To
    do this, you must use the -z option to specify the amount of space in
    kilobytes to use from each device in the RAID. This size must be a multiple
    of the chunk size, and it must leave about 128 KB of space for the RAID
    superblock to be written to the device.
   </para>
   <para>
    The procedure in this section uses the device name
    <filename>/dev/md0</filename> for the RAID device. Ensure that you modify
    commands to use the name of your own device.
   </para>
   <procedure>
    <step>
     <para>
      Open a terminal console.
     </para>
    </step>
    <step>
     <para>
      Check the size of the array and the device size known to the array by
      entering
     </para>
<screen>sudo mdadm -D /dev/md0 | grep -e "Array Size" -e "Dev Size"</screen>
    </step>
    <step>
     <para>
      Decrease the array’s device size to a specified value by entering
     </para>
<screen>sudo mdadm --grow /dev/md0 -z <replaceable>SIZE</replaceable></screen>
     <para>
      Replace <replaceable>SIZE</replaceable> with an integer value in
      kilobytes for the desired size. (A kilobyte is 1024 bytes.)
     </para>
     <para>
      For example, the following command sets the segment size for each RAID
      device to about 40 GB where the chunk size is 64 KB. It includes 128 KB
      for the RAID superblock.
     </para>
<screen>sudo mdadm --grow /dev/md2 -z 41943168</screen>
    </step>
    <step>
     <para>
      Recheck the size of your array and the device size known to the array by
      entering
     </para>
<screen>sudo mdadm -D /dev/md0 | grep -e "Array Size" -e "Device Size"</screen>
    </step>
    <step>
     <para>
      Do one of the following:
     </para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        If your array was successfully resized, continue with
        <xref linkend="sec.raid_resize.decr.partitions" xrefstyle="SectTitleOnPage"/>.
       </para>
      </listitem>
      <listitem>
       <para>
        If your array was not resized as you expected, you must reboot, then
        try this procedure again.
       </para>
      </listitem>
     </itemizedlist>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec.raid_resize.decr.partitions">
   <title>Decreasing the Size of Component Partitions</title>
   <para>
    After you decrease the segment size that is used on each device in the RAID
    (see
    <xref linkend="sec.raid_resize.decr.raid" xrefstyle="SectTitleOnPage"/>),
    the remaining space in each component partition is not used by the RAID.
    You can leave partitions at their current size to allow for the RAID to
    grow at a future time, or you can reclaim this now unused space.
   </para>
   <para>
    To reclaim the space, you decrease the component partitions one at a time.
    For each component partition, you remove it from the RAID, reduce its
    partition size, return the partition to the RAID, then wait until the RAID
    stabilizes. To allow for metadata, you should specify a slightly larger
    size than the size you specified for the RAID in
    <xref linkend="sec.raid_resize.decr.raid" xrefstyle="SectTitleOnPage"/>.
   </para>
   <para>
    While a partition is removed, the RAID operates in degraded mode and has no
    or reduced disk fault tolerance. Even for RAIDs that can tolerate multiple
    concurrent disk failures, you should never remove more than one component
    partition at a time. To decrease the size of the component partitions for
    the RAID, proceed as follows:
   </para>
   <procedure>
    <step>
     <para>
      Open a terminal console.
     </para>
    </step>
    <step>
     <para>
      Ensure that the RAID array is consistent and synchronized by entering
     </para>
<screen>cat /proc/mdstat</screen>
     <para>
      If your RAID array is still synchronizing according to the output of this
      command, you must wait until synchronization is complete before
      continuing.
     </para>
    </step>
    <step>
     <para>
      Remove one of the component partitions from the RAID array. For example,
      to remove <filename>/dev/sda1</filename>, enter
     </para>
<screen>sudo mdadm /dev/md0 --fail /dev/sda1 --remove /dev/sda1</screen>
     <para>
      To succeed, both the fail and remove actions must be specified.
     </para>
    </step>
    <step>
     <para>
      Decrease the size of the partition that you removed in the previous step
      to a size that is slightly larger than the size you set for the segment
      size. The size should be a multiple of the chunk size and allow 128 KB
      for the RAID superblock. Use a disk partitioner such as the &yast;
      partitioner or the command line tool parted to decrease the size of the
      partition.
     </para>
    </step>
    <step>
     <para>
      Re-add the partition to the RAID array. For example, to add
      <filename>/dev/sda1</filename>, enter
     </para>
<screen>sudo mdadm -a /dev/md0 /dev/sda1</screen>
     <para>
      Wait until the RAID is synchronized and consistent before continuing with
      the next partition.
     </para>
    </step>
    <step>
     <para>
      Repeat these steps for each of the remaining component devices in the
      array. Ensure that you modify the commands for the correct component
      partition.
     </para>
    </step>
    <step>
     <para>
      If you get a message that tells you that the kernel could not re-read the
      partition table for the RAID, you must reboot the computer after resizing
      all of its component partitions.
     </para>
    </step>
    <step>
     <para>
      (Optional) Expand the size of the RAID and file system to use the maximum
      amount of space in the now smaller component partitions and increase the
      size of the file system afterward. Refer to
      <xref linkend="sec.raid_resize.incr.raid"/> for instructions.
     </para>
    </step>
   </procedure>
  </sect2>
 </sect1>
</chapter>
