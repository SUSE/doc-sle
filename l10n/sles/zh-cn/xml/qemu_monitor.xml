<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="qemu_monitor.xml" version="5.0" xml:id="cha-qemu-monitor">
  <title>使用 QEMU 监视器管理虚拟机</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>
  <para>
    通过 <command>qemu-system-<replaceable>ARCH</replaceable></command> 命令（例如 <command>qemu-system-x86_64</command>）调用虚拟机时，会提供一个监视器控制台用来与用户交互。使用监视器控制台中提供的命令可以检查运行中的操作系统、更改可移动媒体、抓取屏幕截图或音频片段，以及控制虚拟机的其他方面。
  </para>
  <note>
    <para>
      下列章节列出了特选的实用 QEMU 监视器命令及其用途。要获取完整列表，请在 QEMU 监视器命令行中输入 <command>help</command>。
    </para>
  </note>
  <sect1 xml:id="sec-qemu-monitor-access">
    <title>访问监视器控制台</title>

    <tip>
      <title><systemitem class="library">libvirt</systemitem> 没有监视器控制台</title>
      <para>
        仅当您直接使用 <command>qemu-system-<replaceable>ARCH</replaceable></command> 命令启动虚拟机并在本机 QEMU 窗口中查看其图形输出时，才可以访问监视器控制台。
      </para>
      <para>
        如果您使用 <systemitem class="library">libvirt</systemitem> 启动了虚拟机（例如，使用 <command>virt-manager</command>）并通过 VNC 或 Spice 会话查看其输出，则无法直接访问监视器控制台。不过，您可以通过 <command>virsh</command> 将监视器命令发送到虚拟机：
      </para>
<screen><prompt role="root"># </prompt>virsh qemu-monitor-command <replaceable>COMMAND</replaceable></screen>
    </tip>

    <para>
      访问监视器控制台的方式取决于您使用哪种显示设备来查看虚拟机的输出。<xref linkend="cha-qemu-running-devices-graphic-display"/>中提供了有关显示器的更多细节。例如，要在使用 <option>-display gtk</option> 选项的情况下查看监视器，请按 <keycombo><keycap function="control"/>
      <keycap function="alt"/><keycap>2</keycap></keycombo>。同样，在使用 <option>-nographic</option> 选项时，可按组合键 <keycombo><keycap function="control"/><keycap>A</keycap></keycombo><keycap>C</keycap> 切换到监视器控制台。
    </para>

    <para>
      在使用控制台时如需帮助，请使用 <command>help</command> 或 <command>?</command>。要获取有关特定命令的帮助，请使用 <command>help</command> <replaceable>COMMAND</replaceable>。
    </para>
  </sect1>
  <sect1 xml:id="sec-qemu-monitor-get">
    <title>获取有关 Guest 系统的信息</title>

    <para>
      要获取有关 Guest 系统的信息，请使用 <command>info</command>。如果不结合任何选项使用该命令，将列显可能的选项的列表。选项可确定要分析系统的哪个部分：
    </para>

    <variablelist>
      <varlistentry>
        <term><command>info version</command></term>
        <listitem>
          <para>
            显示 QEMU 的版本。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info commands</command></term>
        <listitem>
          <para>
            列出可用的 QMP 命令。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info network</command></term>
        <listitem>
          <para>
            显示网络状态。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info chardev</command></term>
        <listitem>
          <para>
            显示字符设备。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info block</command></term>
        <listitem>
          <para>
            有关块设备（例如硬盘、软盘驱动器或 CD-ROM）的信息。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info blockstats</command></term>
        <listitem>
          <para>
            块设备的读取和写入统计信息。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info registers</command></term>
        <listitem>
          <para>
            显示 CPU 寄存器。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info cpus</command></term>
        <listitem>
          <para>
            显示有关可用 CPU 的信息。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info history</command></term>
        <listitem>
          <para>
            显示命令行历史。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info irq</command></term>
        <listitem>
          <para>
            显示中断统计信息。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info pic</command></term>
        <listitem>
          <para>
            显示 i8259 (PIC) 状态。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info pci</command></term>
        <listitem>
          <para>
            显示 PCI 信息。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info tlb</command></term>
        <listitem>
          <para>
            显示虚拟内存到物理内存的映射。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info mem</command></term>
        <listitem>
          <para>
            显示活动的虚拟内存映射。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info jit</command></term>
        <listitem>
          <para>
            显示动态编译器信息。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info kvm</command></term>
        <listitem>
          <para>
            显示 KVM 信息。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info numa</command></term>
        <listitem>
          <para>
            显示 NUMA 信息。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info usb</command></term>
        <listitem>
          <para>
            显示 Guest USB 设备。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info usbhost</command></term>
        <listitem>
          <para>
            显示主机 USB 设备。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info profile</command></term>
        <listitem>
          <para>
            显示分析信息。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info capture</command></term>
        <listitem>
          <para>
            显示捕获（音频抓取）信息。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info snapshots</command></term>
        <listitem>
          <para>
            显示当前保存的虚拟机快照。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info status</command></term>
        <listitem>
          <para>
            显示当前虚拟机的状态。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info mice</command></term>
        <listitem>
          <para>
            显示哪些 Guest 鼠标正在接收事件。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info vnc</command></term>
        <listitem>
          <para>
            显示 VNC 服务器状态。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info name</command></term>
        <listitem>
          <para>
            显示当前虚拟机的名称。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info uuid</command></term>
        <listitem>
          <para>
            显示当前虚拟机的 UUID。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info usernet</command></term>
        <listitem>
          <para>
            显示用户网络堆栈连接状态。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info migrate</command></term>
        <listitem>
          <para>
            显示迁移状态。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info balloon</command></term>
        <listitem>
          <para>
            显示气球设备信息。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info qtree</command></term>
        <listitem>
          <para>
            显示设备树。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info qdm</command></term>
        <listitem>
          <para>
            显示 qdev 设备型号列表。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info roms</command></term>
        <listitem>
          <para>
            显示 ROM。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info migrate_cache_size</command></term>
        <listitem>
          <para>
            显示当前迁移 xbzrle（<quote>基于 Xor 的零运行长度编码</quote>）缓存大小。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info migrate_capabilities</command></term>
        <listitem>
          <para>
            显示多个迁移功能（例如 xbzrle 压缩）的状态。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info mtree</command></term>
        <listitem>
          <para>
            显示 VM Guest 内存层次结构。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info trace-events</command></term>
        <listitem>
          <para>
            显示可用的跟踪事件及其状态。
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>
  <sect1 xml:id="sec-qemu-monitor-vnc-pw">
    <title>更改 VNC 口令</title>

    <para>
      要更改 VNC 口令，请使用 <command>change vnc
      password</command> 命令并输入新口令：
    </para>

<screen>
(qemu) change vnc password
Password: ********
(qemu)
    </screen>
  </sect1>
  <sect1 xml:id="sec-qemu-monitor-manage-dev">
    <title>管理设备</title>

    <para>
      要在 Guest 运行时添加新磁盘（热插入），请使用 <command>drive_add</command> 和 <command>device_add</command> 命令。首先定义要作为设备添加到总线 0 的新驱动器：
    </para>

<screen>(qemu) drive_add 0 if=none,file=/tmp/test.img,format=raw,id=disk1
OK</screen>

    <para>
      可以通过查询块子系统来确认新设备：
    </para>

<screen>(qemu) info block
[...]
disk1: removable=1 locked=0 tray-open=0 file=/tmp/test.img ro=0 drv=raw \
encrypted=0 bps=0 bps_rd=0 bps_wr=0 iops=0 iops_rd=0 iops_wr=0</screen>

    <para>
      定义新驱动器后，需将它连接到某个设备，使 Guest 能够看到它。典型的设备是 <literal>virtio-blk-pci</literal> 或 <literal>scsi-disk</literal>。要获取可用值的完整列表，请运行：
    </para>

<screen>(qemu) device_add ?
name "VGA", bus PCI
name "usb-storage", bus usb-bus
[...]
name "virtio-blk-pci", bus virtio-bus</screen>

    <para>
      现在添加设备
    </para>

<screen>(qemu) device_add virtio-blk-pci,drive=disk1,id=myvirtio1</screen>

    <para>
      并使用以下命令确认
    </para>

<screen>(qemu) info pci
[...]
Bus  0, device   4, function 0:
    SCSI controller: PCI device 1af4:1001
      IRQ 0.
      BAR0: I/O at 0xffffffffffffffff [0x003e].
      BAR1: 32 bit memory at 0xffffffffffffffff [0x00000ffe].
      id "myvirtio1"</screen>

    <tip>
      <para>
        可以使用 <command>device_del</command> 从 Guest 中去除通过 <command>device_add</command> 命令添加的设备。如需详细信息，请在 QEMU 监视器命令行中输入 <command>help device_del</command>。
      </para>
    </tip>

    <para>
      要释放与可移动媒体设备连接的设备或文件，请使用 <command>eject</command> <replaceable>DEVICE</replaceable> 命令。使用可选的 <option>-f</option> 可以强制弹出。
    </para>

    <para>
      要更改可移动媒体（例如 CD-ROM），请使用 <command>change</command> <replaceable>DEVICE</replaceable> 命令。可以使用 <command>info
      block</command> 命令确定可移动媒体的名称：
    </para>

<screen>
<prompt>(qemu) </prompt><command>info block</command>
ide1-cd0: type=cdrom removable=1 locked=0 file=/dev/sr0 ro=1 drv=host_device
<prompt>(qemu) </prompt><command>change ide1-cd0 /path/to/image</command>
     </screen>
  </sect1>
  <sect1 xml:id="sec-qemu-monitor-keyboard">
    <title>控制键盘和鼠标</title>

    <para>
      如果需要，可以使用监视器控制台来模拟键盘和鼠标输入。例如，如果您的图形用户界面会拦截某些低级别的组合键（例如 X Window 系统中的 <keycombo><keycap function="control"/><keycap function="alt"/><keycap>F1</keycap></keycombo>），您仍可以使用 <command>sendkey</command> <replaceable>KEYS</replaceable> 来输入这些组合键：
    </para>

<screen>sendkey ctrl-alt-f1</screen>

    <para>
      要列出 <replaceable>KEYS</replaceable> 选项中使用的按键名称，请输入 <command>sendkey</command> 并按 <keycap function="tab"/>。
    </para>

    <para>
      要控制鼠标，可使用以下命令：
    </para>

    <variablelist>
      <varlistentry>
        <term><command>mouse_move</command> <replaceable>DX</replaceable> <replaceable>dy</replaceable> [<replaceable>DZ</replaceable>]</term>
        <listitem>
          <para>
            将活动的鼠标指针移到指定的坐标 dx, dy, dz（该滚动轴可选）。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>mouse_button</command> <replaceable>VAL</replaceable></term>
        <listitem>
          <para>
            更改鼠标按钮的状态（1=左，2=中，4=右）。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>mouse_set</command> <replaceable>INDEX</replaceable></term>
        <listitem>
          <para>
            设置由哪个鼠标设备接收事件。可以使用 <command>info mice</command> 命令获取设备索引号。
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>
  <sect1 xml:id="sec-qemu-monitor-memory">
    <title>更改可用内存</title>

    <para>
      如果启动虚拟机时使用了 <option>-balloon
      virtio</option> 选项（如此会启用半虚拟化气球设备），您便可以动态更改可用内存。有关启用气球设备的详细信息，请参见<xref linkend="cha-qemu-guest-inst-qemu-kvm"/>。
    </para>

    <para>
      要在监视器控制台中获取有关气球设备的信息并确定该设备是否已启用，请使用 <command>info
      balloon</command> 命令：
    </para>

<screen>(qemu) info balloon</screen>

    <para>
      如果气球设备已启用，请使用 <command>balloon</command>
      <replaceable>MEMORY_IN_MB</replaceable> 命令设置请求的内存量：
    </para>

<screen>(qemu) balloon 400</screen>
  </sect1>
  <sect1 xml:id="sec-qemu-monitor-virt-memory">
    <title>转储虚拟机内存</title>

    <para>
      要将虚拟机内存的内容保存到磁盘或控制台输出，请使用以下命令：
    </para>

    <variablelist>
      <varlistentry>
        <term><command>memsave</command><replaceable>ADDR</replaceable><replaceable>SIZE</replaceable><replaceable>FILENAME</replaceable></term>
        <listitem>
          <para>
            将起始地址为 <replaceable>ADDR</replaceable>、大小为 <replaceable>SIZE</replaceable> 的虚拟内存转储保存到 <replaceable>FILENAME</replaceable> 文件中
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>pmemsave</command><replaceable>ADDR</replaceable><replaceable>SIZE</replaceable><replaceable>FILENAME</replaceable></term>
        <listitem>
          <para>
            将起始地址为 <replaceable>ADDR</replaceable>、大小为 <replaceable>SIZE</replaceable> 的物理内存转储保存到 <replaceable>FILENAME</replaceable>- 文件中
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>x /<replaceable>FMT</replaceable><replaceable>ADDR</replaceable></term>
        <listitem>
          <para>
            创建起始地址为 <replaceable>ADDR</replaceable> 并根据 <replaceable>FMT</replaceable> 字符串设置格式的虚拟内存转储。<replaceable>FMT</replaceable> 字符串由 <literal><replaceable>COUNT</replaceable><replaceable>FORMAT</replaceable><replaceable>SIZE</replaceable></literal> 这三个参数构成：
          </para>
          <para>
            <replaceable>COUNT</replaceable> 参数是要转储的项数。
          </para>
          <para>
            <replaceable>FORMAT</replaceable> 可以是 <literal>x</literal>（十六进制）、<literal>d</literal>（有符号十进制）、<literal>u</literal>（无符号十进制）、<literal>o</literal>（八进制）、<literal>c</literal>（字符）或 <literal>i</literal>（汇编指令）。
          </para>
          <para>
            <replaceable>SIZE</replaceable> 参数可以是 <literal>b</literal>（8 位）、<literal>h</literal>（16 位）、<literal>w</literal>（32 位）或 <literal>g</literal>（64 位）。在 x86 上，可以使用 <literal>i</literal> 格式指定 <literal>h</literal> 或 <literal>w</literal>，以分别选择 16 位或 32 位代码指令大小。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>xp /<replaceable>FMT</replaceable><replaceable>ADDR</replaceable></term>
        <listitem>
          <para>
            创建起始地址为 <replaceable>ADDR</replaceable> 并根据 <replaceable>FMT</replaceable> 字符串设置格式的物理内存转储。<replaceable>FMT</replaceable> 字符串由 <literal><replaceable>COUNT</replaceable><replaceable>FORMAT</replaceable><replaceable>SIZE</replaceable></literal> 这三个参数构成：
          </para>
          <para>
            <replaceable>COUNT</replaceable> 参数是要转储的项数。
          </para>
          <para>
            <replaceable>FORMAT</replaceable> 可以是 <literal>x</literal>（十六进制）、<literal>d</literal>（有符号十进制）、<literal>u</literal>（无符号十进制）、<literal>o</literal>（八进制）、<literal>c</literal>（字符）或 <literal>i</literal>（汇编指令）。
          </para>
          <para>
            <replaceable>SIZE</replaceable> 参数可以是 <literal>b</literal>（8 位）、<literal>h</literal>（16 位）、<literal>w</literal>（32 位）或 <literal>g</literal>（64 位）。在 x86 上，可以使用 <literal>i</literal> 格式指定 <literal>h</literal> 或 <literal>w</literal>，以分别选择 16 位或 32 位代码指令大小。
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>
  <sect1 xml:id="sec-qemu-monitor-snapshots">
    <title>管理虚拟机快照</title>

    <para>
      SUSE 目前未正式支持在 QEMU 监视器中管理快照。本节中的信息在特定的情形下可能有帮助。
    </para>

    <para>
      <xref linkend="gloss-vt-vm"/>快照是整个虚拟机的快照，包括 CPU、RAM 的状态以及所有可写磁盘的内容。要使用虚拟机快照，您必须至少有一个使用 <literal>qcow2</literal> 磁盘映像格式且不可移动的可写块设备。
    </para>

    <para>
      当您需要保存特定状态的虚拟机时，快照非常有用。例如，在虚拟化服务器上配置网络服务后，您可以从上次保存的虚拟机状态快速启动虚拟机。您还可以在关闭虚拟机之后创建快照，以便在尝试执行某种会导致 VM Guest 不稳定的试验性操作之前创建备份状态。本节介绍前一种做法，后一种做法已在<xref linkend="cha-qemu-guest-inst-qemu-img-snapshots"/>中介绍。
    </para>

    <para>
      可在 QEMU 监视器中使用以下命令管理快照：
    </para>

    <variablelist>
      <varlistentry>
        <term><command>savevm</command><replaceable>NAME</replaceable></term>
        <listitem>
          <para>
            创建一个标记为 <replaceable>NAME</replaceable> 的新虚拟机快照，或替换现有快照。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>loadvm</command><replaceable>NAME</replaceable></term>
        <listitem>
          <para>
            装载标记为 <replaceable>NAME</replaceable> 的虚拟机快照。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>delvm</command></term>
        <listitem>
          <para>
            删除虚拟机快照。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>info snapshots</command></term>
        <listitem>
          <para>
            列显有关可用快照的信息。
          </para>
<screen>(qemu) info snapshots
Snapshot list:
ID<co xml:id="co-qemu-monitor-snapshot-l-id"/>      TAG<co xml:id="co-qemu-monitor-snapshot-l-tag"/>                 VM SIZE<co xml:id="co-qemu-monitor-snapshot-l-size"/>   DATE<co xml:id="co-qemu-monitor-snapshot-l-date"/>          VM CLOCK<co xml:id="co-qemu-monitor-snapshot-l-clock"/>
1         booting                4.4M 2013-11-22 10:51:10   00:00:20.476
2         booted                 184M 2013-11-22 10:53:03   00:02:05.394
3         logged_in              273M 2013-11-22 11:00:25   00:04:34.843
4         ff_and_term_running    372M 2013-11-22 11:12:27   00:08:44.965</screen>
          <calloutlist>
            <callout arearefs="co-qemu-monitor-snapshot-l-id">
              <para>
                快照的自动递增唯一标识号。
              </para>
            </callout>
            <callout arearefs="co-qemu-monitor-snapshot-l-tag">
              <para>
                快照的唯一说明字符串。它以直观易懂的 ID 形式来表示。
              </para>
            </callout>
            <callout arearefs="co-qemu-monitor-snapshot-l-size">
              <para>
                快照占用的磁盘空间。请注意，运行中应用程序消耗的内存越多，快照就越大。
              </para>
            </callout>
            <callout arearefs="co-qemu-monitor-snapshot-l-date">
              <para>
                快照的创建时间和日期。
              </para>
            </callout>
            <callout arearefs="co-qemu-monitor-snapshot-l-clock">
              <para>
                虚拟机时钟的当前状态。
              </para>
            </callout>
          </calloutlist>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>
  <sect1 xml:id="sec-qemu-monitor-suspend">
    <title>挂起和恢复虚拟机执行</title>

    <para>
      以下命令可用于挂起和恢复虚拟机：
    </para>

    <variablelist>
      <varlistentry>
        <term><command>stop</command></term>
        <listitem>
          <para>
            挂起虚拟机的执行。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>cont</command></term>
        <listitem>
          <para>
            恢复虚拟机的执行。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>system_reset</command></term>
        <listitem>
          <para>
            重置虚拟机。效果类似于物理机上的复位按钮。这可能会使文件系统处于一种不干净状态。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>system_powerdown</command></term>
        <listitem>
          <para>
            向计算机发送 <xref linkend="gloss-vt-acpi"/> 关机请求。效果类似于物理机上的电源按钮。
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>q</command> 或 <command>quit</command></term>
        <listitem>
          <para>
            立即终止 QEMU。
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect1>
  <sect1 xml:id="sec-qemu-monitor-migrate">
    <title>动态迁移</title>

    <para>
      实时迁移过程可将任何虚拟机从一个主机系统传输到另一个主机系统，而不会对可用性造成任何干扰。您可以永久性更改主机，或者仅在维护期间更改主机。
    </para>

    <para>
      实时迁移的要求：
    </para>

    <itemizedlist mark="bullet" spacing="normal">
      <listitem>
        <para>
          <xref linkend="libvirt-admin-live-migration-requirements"/>中所述的所有要求均适用。
        </para>
      </listitem>
      <listitem>
        <para>
          只能在具有相同 CPU 功能的 VM 主机服务器之间进行实时迁移。
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="gloss-vt-storage-ahci"/> 接口、<xref linkend="gloss-vt-virtfs"/> 功能和 <option>-mem-path</option> 命令行选项与迁移不兼容。
        </para>
      </listitem>
      <listitem>
        <para>
          必须以相同的方式启动源主机和目标主机上的 Guest。
        </para>
      </listitem>
      <listitem>
        <para>
          不应使用 <option>-snapshot</option> qemu 命令行选项进行迁移（不支持此 <command>qemu</command> 命令行选项）。
        </para>
      </listitem>
    </itemizedlist>

    <important>
      <title>支持状态</title>
      <para>
        <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中尚不支持 <literal>postcopy</literal> 模式。此模式仅发布为技术预览版。有关 <literal>postcopy</literal> 的详细信息，请参见 <link xlink:href="http://wiki.qemu.org/Features/PostCopyLiveMigration"/>。
      </para>
    </important>

    <para>
      以下网站上提供了更多建议：<link xlink:href="http://www.linux-kvm.org/page/Migration"/>
    </para>

    <para>
      实时迁移过程包括以下步骤：
    </para>

    <procedure>
      <step>
        <para>
          虚拟机实例正在源主机上运行。
        </para>
      </step>
      <step>
        <para>
          虚拟机以冻结监听模式在目标主机上启动。使用的参数与源主机上相同，不过还要加上 <option>-incoming
          tcp:<replaceable>IP</replaceable>:<replaceable>PORT</replaceable></option> 参数，其中的 <replaceable>IP</replaceable> 指定 IP 地址，<replaceable>PORT</replaceable> 指定用于监听传入迁移的端口。如果设置了 0 作为 IP 地址，则虚拟机将监听所有接口。
        </para>
      </step>
      <step>
        <para>
          在源主机上，切换到监视器控制台，并使用 <command>migrate -d tcp:</command>
          <replaceable>DESTINATION_IP</replaceable>:<replaceable>PORT</replaceable> 命令启动迁移。
        </para>
      </step>
      <step>
        <para>
          要确定迁移状态，请在源主机上的监视器控制台中使用 <command>info
          migrate</command> 命令。
        </para>
      </step>
      <step>
        <para>
          要取消迁移，请在源主机上的监视器控制台中使用 <command>migrate_cancel</command> 命令。
        </para>
      </step>
      <step>
        <para>
          要设置迁移时容许的最长停机时间（以秒为单位），请使用 <command>migrate_set_downtime</command>
          <replaceable>NUMBER_OF_SECONDS</replaceable> 命令。
        </para>
      </step>
      <step>
        <para>
          要设置最大迁移速度（每秒字节数），请使用 <command>migrate_set_speed</command>
          <replaceable>BYTES_PER_SECOND</replaceable> 命令。
        </para>
      </step>
    </procedure>
  </sect1>
  <sect1 xml:id="qemu-monitor-qmp">
    <title>QMP - QEMU 计算机协议</title>

    <para>
      QMP 是基于 JSON 的协议，可使应用程序（例如 <systemitem class="library">libvirt</systemitem>）能够与运行中的 QEMU 实例通讯。您可以使用 QMP 命令以多种方式访问 QEMU 监视器。
    </para>

    <sect2 xml:id="sec-qemu-monitor-qmp-io">
      <title>通过标准输入/输出访问 QMP</title>
      <para>
        最灵活的 QMP 使用方式是指定 <option>-mon</option> 选项。下面的示例使用标准输入/输出创建了一个 QMP 实例。在以下示例中，<literal>-&gt;</literal> 标记了包含从客户端发送到运行中 QEMU 实例的命令的行，而 <literal>&lt;-</literal> 标记了包含 QEMU 返回的输出的行。
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> qemu-system-x86_64 [...] \
-chardev stdio,id=mon0 \
-mon chardev=mon0,mode=control,pretty=on

&lt;- {
    "QMP": {
        "version": {
            "qemu": {
                "micro": 0,
                "minor": 0,
                "major": 2
            },
            "package": ""
        },
        "capabilities": [
        ]
    }
}</screen>
      <para>
        建立新的 QMP 连接后，QMP 将发送其问候消息并进入功能协商模式。在此模式下，只有 <command>qmp_capabilities</command> 命令能够正常运行。要退出功能协商模式并进入命令模式，必须先发出 <command>qmp_capabilities</command> 命令：
      </para>
<screen>-&gt; { "execute": "qmp_capabilities" }
&lt;- {
    "return": {
    }
}</screen>
      <para>
        请注意，<literal>"return": {}</literal> 是 QMP 的成功响应。
      </para>
      <para>
        QMP 的命令可以附带参数。例如，要弹出 CD-ROM 驱动器，请输入以下命令：
      </para>
<screen>-&gt;{ "execute": "eject", "arguments": { "device": "ide1-cd0" } }
&lt;- {
    "timestamp": {
        "seconds": 1410353381,
        "microseconds": 763480
    },
    "event": "DEVICE_TRAY_MOVED",
    "data": {
        "device": "ide1-cd0",
        "tray-open": true
    }
}
{
    "return": {
    }
}</screen>
    </sect2>

    <sect2 xml:id="sec-qemu-monitor-qmp-telnet">
      <title>通过 telnet 访问 QMP</title>
      <para>
        如果不使用标准输入/输出，您可将 QMP 接口连接到某个网络套接字，并通过特定的端口与其通讯：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> qemu-system-x86_64 [...] \
-chardev socket,id=mon0,host=localhost,port=4444,server,nowait \
-mon chardev=mon0,mode=control,pretty=on</screen>
      <para>
        然后运行 telnet 连接到端口 4444：
      </para>
<screen><prompt>&gt; </prompt>telnet localhost 4444
Trying ::1...
Connected to localhost.
Escape character is '^]'.
&lt;- {
    "QMP": {
        "version": {
            "qemu": {
                "micro": 0,
                "minor": 0,
                "major": 2
            },
            "package": ""
        },
        "capabilities": [
        ]
    }
}</screen>
      <para>
        您可以同时创建多个监视器接口。下面的示例在标准输入/输出上创建了一个 HMP 实例（可识别“常规”QEMU 监视器命令的人工监视器），并在 localhost 端口 4444 上创建了一个 QMP 实例：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> qemu-system-x86_64 [...] \
-chardev stdio,id=mon0 -mon chardev=mon0,mode=readline \
-chardev socket,id=mon1,host=localhost,port=4444,server,nowait \
  -mon chardev=mon1,mode=control,pretty=on</screen>
    </sect2>

    <sect2 xml:id="sec-qemu-monitor-qmp-socket">
      <title>通过 Unix 套接字访问 QMP</title>
      <para>
        使用 <option>-qmp</option> 选项调用 QEMU，并创建一个 Unix 套接字：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> qemu-system-x86_64 [...] \
-qmp unix:/tmp/qmp-sock,server --monitor stdio

QEMU waiting for connection on: unix:./qmp-sock,server</screen>
      <para>
        要通过 <literal>/tmp/qmp-sock</literal> 套接字来与 QEMU 实例通讯，请在同一主机上的另一个终端中使用 <command>nc</command>（有关详细信息，请参见 <command>man 1 nc</command>）：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> nc -U /tmp/qmp-sock
&lt;- {"QMP": {"version": {"qemu": {"micro": 0, "minor": 0, "major": 2} [...]</screen>
    </sect2>

    <sect2 xml:id="sec-qemu-monitor-qmp-virsh">
      <title>通过 <systemitem class="library">libvirt</systemitem> 的 <command>virsh</command> 命令访问 QMP</title>
      <para>
        如果您在 <systemitem class="library">libvirt</systemitem> 下运行虚拟机（请参见<xref linkend="part-virt-libvirt"/>），则可以通过运行 <command>virsh
        qemu-monitor-command</command> 来与它的运行中 Guest 通讯：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> virsh qemu-monitor-command vm_guest1 \
--pretty '{"execute":"query-kvm"}'
&lt;- {
    "return": {
        "enabled": true,
        "present": true
    },
    "id": "libvirt-8"
}</screen>
      <para>
        在以上示例中，我们运行了简单的 <command>query-kvm</command> 命令来检查主机是否能够运行 KVM，以及是否启用了 KVM。
      </para>
      <tip>
        <title>生成直观易懂的输出</title>
        <para>
          要使用 QEMU 的直观易懂的标准输出格式而不是 JSON 格式，请使用 <option>--hmp</option> 选项：
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> virsh qemu-monitor-command vm_guest1 --hmp "query-kvm"</screen>
      </tip>
    </sect2>
  </sect1>
</chapter>
