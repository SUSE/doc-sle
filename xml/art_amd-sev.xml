<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook50-profile.xsl"
 type="text/xml"
 title="Profiling step"?>

<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>

<article xml:id="art-amd-sev" xml:lang="en" version="5.0"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>AMD Secure Encrypted Virtualization (AMD-SEV) Guide</title>
 <info>
  <productname>&productname;</productname>
  <productnumber>&productnumber;</productnumber>
  <date><?dbtimestamp format="B d, Y" ?></date>
  <abstract>
   <para>
    AMD's Secure Encrypted Virtualization (SEV) allows the memory of virtual
    machines to be encrypted. This is a new feature for Linux's built-in
    Kernel-based Virtual Machine (&kvm;) hypervisor. The intention is to
    increase system security, especially when using persistent memory.
   </para>
   <para>
    This document aims to provide a basic understanding of how SEV works, how to
    enable and configure it, and some of the limitations and restrictions that
    its use causes as compared to non-encrypted virtualization.
   </para>
  </abstract>
 </info>
 <!-- intro paras: -->

 <sect1 xml:id="sec-amd-sev-intro">
 <title>Introducing SEV</title>
 <para>
  Encryption of computer data stored on disk is a widely-deployed feature.
  However, data in RAM is stored in the clear. This can leave that data
  vulnerable to software or hardware probing by intruders into the host system.
  New persistent-memory technology makes this problem more acute, since an
  NVDIMM (non-volatile memory module) could be physically removed from a system
  and the data on it would remain intact, like that on a hard drive or SSD.
  Without encryption, any stored information&mdash;such as sensitive data,
  passwords, or secret keys&mdash;could easily be compromised.
 </para>
 <para>
  AMD's SEV (Secure Encrypted Virtualization) is a technology to protect Linux
  KVM virtual machines by transparently encrypting the memory of each VM with a
  unique key. SEV can also calculate a signature of the memory's contents, which
  can be sent to the VM's owner as an attestation that the memory was encrypted
  correctly by the firmware. SEV is especially relevant to cloud computing
  environments, where VMs are hosted on remote servers that are not under the
  control of the VMs' owners, since this can reduce the amount of trust VMs can
  place in the hypervisor and administrator of their host system.
 </para>
 <para>
  In &sle; 12 SP4 and above, and a forthcoming maintenance release of &sle; 15,
  the kernel, QEMU, and <package>libvirt</package> support the creation and
  management of VMs using SEV. Currently, the technology is only available
  as a technology preview, but it will be fully supported in future versions of
  &sle;.
 </para>
 </sect1>

 <!-- sections: -->

 <sect1 xml:id="sec-amd-sev-hostreqs">
  <title>VM Host Requirements</title>
  <para>
   The VM host hardware must support AMD's SEV technology. To detect if the host
   hardware supports SEV, check that the <tag class="attribute">sev</tag> attribute is
   present in the capabilities of <package>libvirt</package> and that its value
   is set appropriately:
  </para>
<screen>&lt;domainCapabilities&gt;
   ...
   &lt;features&gt;
   ...
   &lt;sev supported='yes'/&gt;
   ...
   &lt;/sev&gt;
   &lt;/features&gt;
&lt;/domainCapabilities&gt;</screen>
  <para>
   Additionally, ensure that the <package>kvm_amd</package> kernel module has
   the <parameter>sev</parameter> parameter enabled:
  </para>
  <screen>/sys/module/kvm_amd/parameters/sev = 1</screen>
 </sect1>

 <sect1 xml:id="sec-amd-sev-vmreqs">
  <title>VM Requirements</title>
  <para>
   The VM must be the modern <literal>Q35</literal> machine type and must use
   UEFI firmware.
  </para>
  <note>
   <para>
    The Q35 machine type does not have an IDE controller and does not support IDE disks.
   </para>
  </note>
  <para>
   All <literal>virtio</literal> devices need to be configured with the
   <tag class="attribute">iommu='on'</tag> attribute in their
   <tag class="starttag">driver</tag> configuration. In addition, all memory
   regions used by the VM must be locked for Direct Memory Access (DMA) and to
   prevent swapping.
  </para>
 </sect1>
 <sect1 xml:id="sec-amd-sev-config">
  <title>VM Configuration</title>
  <example xml:id="sec-amd-sev-conffile">
   <title>Sample Configuration File</title>
   <para>
    As an example, an SEV-encrypted VM configured with 4 GB of memory would
    contain the following XML configuration:
   </para>
   <screen>&lt;domain type='kvm'&gt;
    &lt;memory unit='KiB'&gt;4194304&lt;/memory&gt;
    &lt;currentMemory unit='KiB'&gt;4194304&lt;/currentMemory&gt;
    &lt;memoryBacking&gt;
    &lt;locked/&gt;
    &lt;/memoryBacking&gt;
    &lt;os&gt;
    &lt;type arch='x86_64' machine='pc-q35-2.11'&gt;hvm&lt;/type&gt;
    &lt;loader readonly='yes' type='pflash'&gt;/usr/share/qemu/ovmf-x86_64-ms-4m-code.bin&lt;/loader&gt;
    &lt;nvram&gt;/var/lib/libvirt/qemu/nvram/sles15-sev-guest_VARS.fd&lt;/nvram&gt;
    &lt;boot dev='hd'/&gt;
    &lt;/os&gt;
    &lt;launchSecurity <co xml:id="sec-amd-sev-ex-launchsecurity"/> type='sev'&gt;
    &lt;cbitpos&gt;47&lt;/cbitpos&gt; <co xml:id="sec-amd-sev-ex-cbitpos"/>
    &lt;reducedPhysBits&gt;1&lt;/reducedPhysBits&gt; <co xml:id="sec-amd-sev-ex-reducedphysbits"/>
    &lt;policy&gt;0x0033&lt;/policy&gt; <co xml:id="sec-amd-sev-ex-policy"/>
    &lt;/launchSecurity&gt;
    &lt;devices&gt;
    &lt;disk type='file' device='disk'&gt;
    &lt;driver iommu='on' name='qemu' type='raw'/&gt;
    &lt;target dev='vda' bus='virtio'/&gt;
    &lt;source file='/vmimages/sev-guest-disk.raw'/&gt;
    &lt;/disk&gt;
    &lt;rng model='virtio'&gt;
    &lt;driver iommu='on'/&gt;
    ...
    &lt;/rng&gt;
    &lt;memballoon model='virtio'&gt;
    &lt;driver iommu='on' /&gt; <co xml:id="sec-amd-sev-ex-iommu"/>
    ...
    &lt;/memballoon&gt;
    &lt;video&gt;
    &lt;model type='qxl' ram='65536' vram='65536' vgamem='16384' heads='1' primary='yes'/&gt;
    &lt;/video&gt;
    ...
    &lt;/devices&gt;
    ...
    &lt;/domain&gt;</screen>
   <calloutlist>
    <callout arearefs="sec-amd-sev-ex-launchsecurity">
     <para>
      The <tag class="element">launchSecurity type='sev'</tag> element and its
      contents enable encryption of the contents of the VM's memory.
     </para>
    </callout>
    <callout arearefs="sec-amd-sev-ex-cbitpos">
     <para>
      When memory encryption is enabled, one of the physical address bits (also
      known as the "C-bit") is used to mark if a memory page is protected. The
      required <tag class="element">cbitpos</tag> element provides the location of
      the C-bit in a guest page table entry. For example, the value <literal>47</literal>
      indicates that bit position 47 in a page table entry will determine whether
      that page is encrypted or not. The C-bit number is read from the host's CPUID
      and is thus hardware-dependent. The value of <tag class="element">cbitpos</tag> is
      hypervisor-dependent, and can be obtained through the <tag class="element">sev</tag>
      element in the capabilities of the domain.
     </para>
    </callout>
    <callout arearefs="sec-amd-sev-ex-reducedphysbits">
     <para>
      When memory encryption is enabled, we lose certain bits of the physical
      address space. The required <tag class="element">reducedPhysBits</tag> element
      provides this physical address bit reduction. Similarly to <tag class="element">cbitpos</tag>,
      the value of <tag class="element">reducedPhysBits</tag> is processor-family-dependent
      and can be obtained through the <tag class="element">sev</tag> element in the
      domain capabilities.
     </para>
    </callout>
    <callout arearefs="sec-amd-sev-ex-policy">
     <para>
      The required <tag class="element">policy</tag> element provides the guest
      policy, which must be maintained by the SEV firmware. This policy is enforced
      by the firmware, and restricts what configuration and operational commands
      can be performed on the VM by the hypervisor. The guest policy provided when
      starting the VM is bound to that VM and cannot be changed during its
      lifetime.
     </para>
    </callout>
    <callout arearefs="sec-amd-sev-ex-iommu">
     <para>
      In addition to the <tag class="element">launchSecurity</tag> settings,
      SEV-encrypted VMs must have the <tag class="attribute">iommu='on'</tag> attribute set
      in each <literal>virtio</literal> device. This attribute is required in
      order to enable DMA APIs for the device within QEMU.
     </para>
    </callout>
   </calloutlist>
  </example>

  <para>
   The guest policy is four unsigned bytes with the following definition:
  </para>
  <table xml:id="table-guestpolicy">
   <title>Guest Policy Definitions</title>
   <tgroup cols="2">
    <colspec colnum="1" colname="1" colwidth="20*"/>
    <colspec colnum="2" colname="2" colwidth="80*"/>
    <thead>
     <row>
      <entry>
       <para>Bit(s)</para>
      </entry>
      <entry>
       <para>Definition</para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>0</para>
      </entry>
      <entry>
       <para>
        If set, debugging of the guest is disallowed
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>1</para>
      </entry>
      <entry>
       <para>
        If set, sharing keys with other guests is disallowed
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>2</para>
      </entry>
      <entry>
       <para>
        If set, SEV-ES is required
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>3</para>
      </entry>
      <entry>
       <para>
        If set, sending the guest to another platform is disallowed
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>4</para>
      </entry>
      <entry>
       <para>
        If set, the guest must not be transmitted to another platform that is
        not in the domain
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>5</para>
      </entry>
      <entry>
       <para>
        If set, the guest must not be transmitted to another platform that is
        not SEV-capable
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>6-15</para>
      </entry>
      <entry>
       <para>
        Reserved
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>16-32 </para>
      </entry>
      <entry>
       <para>
        The guest must not be transmitted to another platform with a lower
        firmware version
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   The optional <tag class="element">dhCert</tag> element provides the guest
   owner's base64-encoded Diffie-Hellman (DH) key. The key is used to negotiate
   a master secret key between the SEV firmware and guest owner. This master
   secret key is then used to establish a trusted channel between the SEV
   firmware and guest owner.
  </para>
  <para>
   The optional <tag class="element">session</tag> element provides the guest
   owner's base64-encoded session blob, as defined in the SEV API specification.
   See the LAUNCH_START section of the SEV specification for the session blob
   format.
  </para>
  <para>
   SEV-encrypted VMs must also have all of their memory regions locked to allow
   DMA and prevent swapping. Explicit locking of memory must be specified using
   the <tag class="element">locked</tag> subelement of
   <tag class="element">memoryBacking</tag>. Explicit memory locking can be
   avoided by configuring the virtual machine to use <literal>hugepages</literal>.
   For more information on using hugepages with VMs, refer to the
   <citetitle>Virtualization Best Practices Guide</citetitle>,
   Chapter "Configuring the VM Host Server and the VM Guest to use Huge Pages":
   <link xlink:href="https://documentation.suse.com/sles-15/html/SLES-all/article-vt-best-practices.html#sec-vt-best-mem-huge-pages"/>.
  </para>
  <para>
   Whilst the overhead incurred is no different to that required for
   non-SEV VMs, it is much more important to get the hard limit right
   when pinning memory. If the limit is too low, the VM will get killed.
  </para>
 </sect1>

 <sect1 xml:id="sec-amd-sev-limits">
  <title>Current Limitations</title>
  <itemizedlist>
   <listitem>
    <para>
     The guest operating system running inside an SEV-encrypted VM must contain
     SEV support. Currently, &sls; 12 SP4, &sls; 15, and &sls; 15 SP1 provide this.
    </para>
   </listitem>
   <listitem>
    <para>
     Any operations that involve saving and restoring the memory and state of an
     instance are currently not supported. This means that SEV-encrypted VMs
     cannot be resumed from snapshots, and live migration is not possible.
     Encrypted VMs can be shut down and restarted on another host as normal.
    </para>
   </listitem>
   <listitem>
    <para>
     SEV-encrypted VMs cannot contain directly accessible host devices (that is,
     PCI passthrough).
    </para>
   </listitem>
  </itemizedlist>
  <para>
   These limitations will be removed in the future as the hardware, firmware,
   and various layers of software receive new features.
  </para>
 </sect1>

 <sect1 xml:id="sec-amd-sev-moreinfo">
  <title>For More Information</title>
  <itemizedlist>
   <listitem>
    <para>
     <link xlink:href="https://developer.amd.com/sev"/>&mdash;AMD-SEV landing page
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="https://developer.amd.com/wp-content/resources/55766.PDF"/>&mdash;AMD SEV-KM API Specification (PDF)
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="https://github.com/AMDESE/AMDSEV/"/>&mdash;AMD SEV GitHub repository containing examples and tools
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="https://libvirt.org/formatdomain.html#sev"/>&mdash;libvirt SEV configuration settings
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="http://events17.linuxfoundation.org/sites/events/files/slides/AMD%20SEV-ES.pdf"/>&mdash; Slides from the 2017 Linux Security Summit describing SEV and
     preliminary performance results (PDF)
    </para>
   </listitem>
  </itemizedlist>
 </sect1>

 <!-- common end matter -->

 <xi:include href="common_gfdl1.2_i.xml"/>

</article>
