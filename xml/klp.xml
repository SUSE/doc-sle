<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xml:id="cha-klp" xml:lang="en">
 <title>Live kernel patching with &klpa;</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
  <abstract>
   <para>
    This document describes the basic principles of the &klp; (&klpa;)
    technology, and provides usage guidelines for the &slea; Live Patching
    service.
   </para>
  </abstract>
 </info>
 <para>
  &klpa; makes it possible to apply the latest security updates to Linux kernels
  without rebooting. This maximizes system uptime and availability, which is
  especially important for mission-critical systems.
 </para>
 <para>
  The information provided in this document relates to the &amd64;/&intel64;,
  &power; and &zseries; architectures. &klpa; is supported on the Xen
  hypervisor.
 </para>
 <sect1 xml:id="sec-klp-advantages">
  <title>Advantages of &klp;</title>

  <para>
   &klpa; offers several benefits.
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Keeping a large numbers of servers automatically up-to-date is essential
     for organizations obtaining or maintaining certain compliance
     certifications. &klpa; can help achieve compliance, while reducing the
     need for costly maintenance windows.
    </para>
   </listitem>
   <listitem>
    <para>
     Companies that work with service-level agreement contracts must guarantee
     a specific level of their system accessibility and uptime. Live patching
     makes it possible to patch systems without incurring downtime.
    </para>
   </listitem>
   <listitem>
    <para>
     Since &klpa; is part of the standard system update mechanism, there is no
     need for specialized training or introduction of complicated maintenance
     routines.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec-klp-overview">
  <title>&klp; overview</title>

  <para>
   Kernel live patches are delivered as packages with modified code that are
   separate from the main kernel package. The live patches are cumulative, so
   the latest patch contains all fixes from the previous ones for the kernel
   package. Each kernel live package is tied to the exact kernel revision for
   which it is issued. The live patch package version number increases with
   every addition of fixes.
  </para>

  <important>
   <title>Live patches vs kernel updates</title>
   <para>
    Live patches contain only critical fixes, and they do not replace regular
    kernel updates that require a reboot. Consider live patches as temporary
    measures that protect the kernel until a proper kernel update and a reboot
    is performed.
   </para>
  </important>

  <para>
   The diagram below illustrates the overall relationship between live patches
   and kernel updates. The list of CVEs and defect reports addressed by the
   currently-active live patch can be viewed using the <command>klp -v
   patches</command> command.
  </para>

  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="klp.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="klp.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </informalfigure>

  <para>
   It is possible to have multiple versions of the kernel package installed
   along with their live patches. These packages do not conflict. You can
   install updated kernel packages along with live patches for the running
   kernel. In this case, you may be prompted to reboot the system. Users with
   &slea; Live Patching subscriptions are eligible for technical support as long
   as there are live patch updates for the running kernel (see
   <xref linkend="sec-klp-lifecycle" />).
  </para>

  <para>
   With &klpa; activated, every kernel update comes with a live patch package.
   This live patch does not contain any fixes and serves as a seed for future
   live patches for the corresponding kernel. These empty seed patches are
   called <literal>initial patches</literal>.
  </para>

  <sect2 xml:id="sec-klp-scope">
   <title>&klp; scope</title>
   <para>
    The scope of &slea; Live Patching includes fixes for SUSE Common
    Vulnerability Scoring System (CVSS; SUSE CVSS is based on the CVSS v3.0
    system) level 7+ vulnerabilities and bug fixes related to system stability
    or data corruption. However, it may not be technically feasible to create
    live patches for all fixes that fall under the specified categories. &suse;
    therefore reserves the right to skip fixes in situations where creating a
    kernel live patch is not possible for technical reasons. Currently, over
    95% of qualifying fixes are released as live patches. For more information
    on CVSS (the base for the SUSE CVSS rating), see
    <link xlink:href="https://www.first.org/cvss/">Common Vulnerability Scoring
    System SIG</link>. .
   </para>
  </sect2>

  <sect2 xml:id="sec-klp-limitations">
   <title>&klp; limitations</title>
   <para>
    &klpa; involves replacing functions and gracefully handling replacement of
    interdependent function sets. This is done by redirecting calls to
    old code to updated code in a different memory location. Changes in data
    structures make the situation more complicated, as the data remain in place
    and cannot be extended or reinterpreted. While there are techniques that
    allow indirect alteration of data structures, some fixes cannot be
    converted to live patches. In this situation, a system restart is the only
    way to apply the fixes.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-klp-enable-with-yast2">
  <title>Activating &klp; using &yast;</title>

  <para>
   To activate &klpa; on your system, you need to have active &slsa; and
   &slea; Live Patching subscriptions. Visit
   <link
   xlink:href="&sccurl;">&scc;</link> to check the status of your
   subscriptions and obtain an registration code for the &slea; Live Patching
   subscription.
  </para>

  <para>
   To activate &klp; on your system, follow these steps:
  </para>

  <procedure>
   <step>
    <para>
     Run the <command>yast2 registration</command> command and click
     <guimenu>Select Extensions</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Select <guimenu>SUSE Linux Enterprise Live Patching 15</guimenu> in the
     list of available extensions and click <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Confirm the license terms and click <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Enter your &slea; Live Patching registration code and click
     <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Check the <guimenu>Installation Summary</guimenu> and selected
     <guimenu>Patterns</guimenu>. The patterns <systemitem>Live
     Patching</systemitem> and <systemitem>SLE Live Patching Lifecycle
     Data</systemitem> should be automatically selected for installation along
     with additional packages to satisfy dependencies.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Accept</guimenu> to complete the installation. This will
     install the base &klp; components on your system, the initial live patch,
     and the required dependencies.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-klp-enable-cli">
  <title>Activating &klp; from the command line</title>

  <para>
   To activate &klp;, you need to have an active &slsa; and &slsa; Live
   Patching subscriptions. Visit <link xlink:href="&sccurl;">&scc;</link> to
   check the status of your subscriptions and obtain an registration code for
   the &slsa; Live Patching subscription.
  </para>

  <procedure>
   <step>
    <para>
     Run <command>sudo SUSEConnect --list-extensions</command>. Note the exact
     activation command for &slsa; Live Patching. Example command output
     (abbreviated):
    </para>
<screen>$ SUSEConnect --list-extensions
...
SUSE Linux Enterprise Live Patching 15 SP3 x86_64
Activate with: SUSEConnect -p sle-module-live-patching/15.3/x86_64 -r ADDITIONAL REGCODE</screen>
   </step>
   <step>
    <para>
     Activate &slsa; Live Patching using the obtained command followed by
     <option>-r
     <replaceable>LIVE_PATCHING_REGISTRATION_CODE</replaceable></option>, for
     example:
    </para>
<screen>SUSEConnect -p sle-module-live-patching/15.3/x86_64 -r <replaceable>LIVE_PATCHING_REGISTRATION_CODE</replaceable></screen>
   </step>
   <step>
    <para>
     Install the required packages and dependencies using the command
     <command>zypper install -t pattern lp_sles</command>
    </para>
   </step>
  </procedure>

  <para>
   At this point, the system has already been live-patched.
  </para>

  <para>
   Here is how the process works behind the scenes: When the
   package-installation system detects that there is an installed kernel that
   can be live-patched, and that there is a live patch for it in the software channel,
   the system selects the live patch for installation. The kernel then receives
   the live patch fixes <emphasis>as part of the package installation</emphasis>.
   The kernel gets live-patched even before the product installation is complete.
  </para>
 </sect1>
 <sect1 xml:id="sec-klp-perform">
  <title>Performing &klp;</title>

  <para>
   Kernel live-patches are installed as part of regular system updates.
   However, there are several things you should be aware of.
  </para>

  <itemizedlist>
   <listitem>
    <para>
     The kernel is live-patched if a <package>kernel-livepatch-*</package>
     package has been installed for the running kernel. You can use the command
     <command>zypper se --details kernel-livepatch-*</command> to check what
     kernel live-patch packages are installed on your system.
    </para>
   </listitem>
   <listitem>
    <para>
     When <package>kernel-default</package> package is installed, the update
     manager prompts you to reboot the system. To prevent this message from
     apparing, you can filter out kernel updates from the patching operation.
     This can be done by adding package locks with Zypper. &susemgr; also makes
     it possible to filter channel contents (see
     <link xlink:href="https://documentation.suse.com/external-tree/en-us/suma/4.1/suse-manager/administration/live-patching.html">Live
     Patching with SUSE Manager</link>).
    </para>
   </listitem>
   <listitem>
    <para>
     You can check patching status using the <command>klp status</command>
     command. To examine installed patches, run the <command>klp -v
     patches</command> command.
    </para>
   </listitem>
   <listitem>
    <para>
     Keep in mind that while there may be multiple kernel packages installed on
     the system, only one of them is running at any given time. Similarly,
     there may be multiple live patch packages installed, but only one live
     patch is loaded into the kernel.
    </para>
   </listitem>
   <listitem>
    <para>
     The active live patch is included in the <literal>initrd</literal>. This means that in case of an
     unexpected reboot, the system comes up with the live patch fixes applied,
     so there is no need to perform patching again.
    </para>
   </listitem>
  </itemizedlist>

  <sect2 xml:id="sec-klp-lifecycle">
   <title>Checking expiration date of the live patch</title>
   <para>
    Make sure that the
    <package>lifecycle-data-sle-module-live-patching</package> is installed,
    then run the <command>zypper lifecycle</command> command. You should see
    expiration dates for live patches in the <literal>Package end of support if
    different from product</literal> section of the output.
   </para>
   <para>
    Every live patch receives updates for one year from the release of the
    underlying kernel package. The
    <link
   xlink:href="https://www.suse.com/products/live-patching/current-patches/">Maintained
    kernels, patch updates and lifecycle</link> page allows you to check
    expiration dates based on the running kernel version without installing the
    product extension.
   </para>
  </sect2>
 </sect1>
</chapter>
