<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<sect1 xmlns="http://docbook.org/ns/docbook"
       xmlns:xi="http://www.w3.org/2001/XInclude"
       xmlns:xlink="http://www.w3.org/1999/xlink"
       version="5.0"
       xml:id="sec-security-ldap-modules">
 <!-- TODO add shared configuration, see
 https://directory.fedoraproject.org/docs/389ds/design/memberof-plugin-configuration.html
 also scoping, https://directory.fedoraproject.org/docs/389ds/design/memberof-scoping.html
 cjs, March 12 2022-->
 <info>
  <title>Managing modules</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
  <para>
    Use the following command to list all available modules, enabled and
    disabled. Use your server's hostname rather than the instance name
    of your &ds389;, like the following example hostname of
    <replaceable>LDAPSERVER1</replaceable>:
  </para>
<screen>
&prompt.sudo;<command>dsconf -D "cn=Directory Manager" ldap://<replaceable>LDAPSERVER1</replaceable> plugin list</command>
Enter password for cn=Directory Manager on ldap://<replaceable>LDAPSERVER1</replaceable>: <replaceable>PASSWORD</replaceable>

7-bit check
Account Policy Plugin
Account Usability Plugin
ACL Plugin
ACL preoperation
[...]</screen>
  <para>
    The following command enables the MemberOf plugin referenced in
    <xref linkend="sec-security-ldap-server-sssd"/>. MemberOf simplifies
    user searches, by returning the user and any groups the user
    belongs to, with a single command. Without MemberOf, a client must
    run multiple lookups to find a user's group memberships.
  </para>
  <screen>
&prompt.sudo;<command>dsconf -D "cn=Directory Manager" ldap://<replaceable>LDAPSERVER1</replaceable> plugin memberof enable</command>
</screen>
  <para>
    Note that the plugin names used in commands are lowercase, so they
    are different from how
    they appear when you list them. If you make a mistake with a plugin
    name, you will see a helpful error message:
  </para>
<screen>dsconf instance plugin: error: invalid choice: 'MemberOf' (choose from
'memberof', 'automember', 'referential-integrity', 'root-dn', 'usn',
'account-policy', 'attr-uniq', 'dna', 'linked-attr', 'managed-entries',
'pass-through-auth', 'retro-changelog', 'posix-winsync', 'contentsync', 'list',
'show', 'set')</screen>
    <para>
    After enabling a plugin, it is necessary to restart the server:
    </para>
    <screen>
&prompt.sudo;<command>systemctl restart dirsrv@<replaceable>LDAPSERVER1</replaceable>.service</command>
</screen>

<para>
 Next, configure the plugin. The following example enables MemberOf to
 search all entries. Use your instance name rather than the server's
 hostname:
</para>
<screen>&prompt.sudo;<command>dsconf <replaceable>LDAP1 plugin memberOf set --scope dc=example,dc=com</replaceable></command>
Successfully changed the cn=MemberOf Plugin,cn=plugins,cn=config</screen>

<para>
 After the MemberOf plugin is enabled and configured, all new groups and
 users are automatically MemberOf targets. However, any
 users and groups that exist before it is enabled are not. They must be
 marked manually:
</para>
<screen>&prompt.sudo;<command>dsidm LDAP1 user modify &exampleuserIII_plain; add:objectclass:nsmemberof</command>
Successfully modified uid=&exampleuserIII_plain;,ou=people,dc=ldap1,dc=com</screen>

<para>
 Now &exampleuserIII_plain; information and group membership are listed
 with a single command:
</para>
<screen>&prompt.sudo;<command>dsidm LDAP1 user get &exampleuserIII_plain;</command>
dn: uid=&exampleuserIII_plain;,ou=people,dc=ldap1,dc=com
cn: &exampleuserIII_plain;
displayName: Suzanne Geeko
gidNumber: 102
homeDirectory: /home/&exampleuserIII_plain;
memberOf: cn=SERVER_ADMINS,ou=groups,dc=ldap1,dc=com</screen>

<para>
 Modifying a larger number of users is a lot of work. The following
 example shows how to make all legacy users MemberOf targets with one
 fixup command:
</para>
<screen>&prompt.sudo;<command>dsconf LDAP1 plugin memberof fixup -f '(objectClass=*)' dc=LDAP1,dc=COM</command></screen>
</sect1>
