<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="tuning_multikernel.xml" version="5.0" xml:id="cha-tuning-multikernel">
 <title>여러 커널 버전 설치</title>
 <info>
  <abstract>
   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>에서는 여러 커널 버전의 병렬 설치를 지원합니다. 두 번째 커널을 설치할 때 부팅 항목과 initrd가 자동으로 생성되므로 수동 구성이 추가로 필요하지 않습니다. 시스템을 재부팅할 때 새로 추가된 커널을 추가 부팅 파라미터로 사용할 수 있습니다.
   </para>

   <para>
    이 기능을 사용하면 항상 입증된 이전 커널로 대체할 수 있으면서 안전하게 커널 업데이트를 테스트할 수 있습니다. 이렇게 하려면 업데이트 도구(예: YaST 온라인 업데이트 또는 업데이터 애플릿)를 사용하지 말고 대신 이 장에 설명된 프로세스를 따르십시오.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>예</dm:translation>
  </dm:docmanager>
 </info>
 <warning os="sles;sled">

  <title>지원 자격</title>
  <para>
   자체 컴파일된 커널이나 타사 커널을 설치하면 시스템에 대한 전체 자격을 상실합니다. <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>와 함께 제공된 커널과 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>에 대한 공식 업데이트 채널을 통해 제공된 커널만 지원됩니다.
  </para>
 </warning>
 <tip>
  <title>부트 로더 구성 커널 확인</title>
  <para>
   선택한 기본 부팅 항목을 설정하려면 다른 커널을 설치한 후 부트 로더 구성을 확인하는 것이 좋습니다. 자세한 내용은 <xref linkend="sec-grub2-yast2-config"/>에서 확인하십시오.
  </para>
 </tip>
 <sect1 xml:id="sec-tuning-multikernel-enable">
  <title>다중 버전 지원 활성화 및 구성</title>



  <para>
   <phrase os="sles;sled">SUSE Linux Enterprise Server 12</phrase>에서 소프트웨어 패키지의 여러 버전을 설치하는 기능(다중 버전 지원)이 기본적으로 활성화되어 있습니다. 이 설정을 확인하려면 다음을 수행하십시오.
  </para>

  <procedure>
   <step>
    <para>
     선택한 편집기에서 <systemitem class="username">root</systemitem>로 <filename>/etc/zypp/zypp.conf</filename>를 엽니다.
    </para>
   </step>
   <step>
    <para>
     스트링 <literal>multiversion</literal>을 검색합니다. 이 기능이 가능한 모든 커널 패키지에 대해 다중 버전이 활성화되어 있는 경우 다음 줄이 주석이 제거된 채 표시됩니다.
    </para>
<screen>multiversion = provides:multiversion(kernel)</screen>
   </step>
   <step>
    <para>
     다중 버전 지원을 특정 커널 특징으로 제한하려면, 예를 들어 <filename>/etc/zypp/zypp.conf</filename>에서 패키지 이름을 쉼표로 구분된 목록으로 <literal>multiversion</literal> 옵션에 추가합니다.
    </para>
<screen>multiversion = kernel-default,kernel-default-base,kernel-source
</screen>
   </step>
   <step>
    <para>
     변경사항을 저장합니다.
    </para>
   </step>
  </procedure>

  <warning>
   <title>KPM(Kernel Module Package: 커널 모듈 패키지)</title>
   <para>
    업데이트된 새 커널용으로 벤더가 제공한 필수 커널 모듈(커널 모듈 패키지)도 설치되어 있는지 확인하십시오. 시스템에 유지되는 이전 커널에서 패키지 요구사항을 여전히 준수하므로 커널 업데이트 프로세스에서는 없는 커널 모듈에 대해 경고를 표시하지 않습니다.
   </para>
  </warning>

  <sect2 xml:id="sec-tuning-multikernel-enable-keep">
   <title>사용되지 않는 커널 자동 삭제</title>
   <para>
    다중 버전 지원을 활성화하고 새 커널을 자주 테스트할 경우 부팅 메뉴가 금방 복잡해질 수 있습니다. 일반적으로 <filename>/boot</filename> 파티션에는 제한된 공간이 포함되므로 <filename>/boot</filename> 오버플로 관련 문제가 발생할 수도 있습니다. YaST 또는 Zypper(아래에서 설명)를 사용하여 사용되지 않는 커널 버전을 직접 삭제할 수 있지만 더 이상 사용하지 않는 커널을 자동으로 삭제하도록 <systemitem class="library">libzypp</systemitem>를 구성할 수도 있습니다. 기본적으로 커널은 삭제되지 않습니다.
   </para>
   <procedure>
    <step>
     <para>
      선택한 편집기에서 <systemitem class="username">root</systemitem>로 <filename>/etc/zypp/zypp.conf</filename>를 엽니다.
     </para>
    </step>
    <step>
     <para>
      스트링 <literal>multiversion.kernels</literal>를 검색하고 줄의 주석 기호를 제거하여 이 옵션을 활성화합니다. 이 옵션에는 다음 값의 쉼표로 구분된 목록이 사용됩니다.
     </para>
     <formalpara>
      <title><literal><replaceable>5.3.18-53.3</replaceable></literal>:</title>
      <para>
       커널을 지정된 버전 번호로 유지
      </para>
     </formalpara>
     <formalpara>
      <title><literal>latest</literal>:</title>
      <para>
       커널을 최고 버전 번호로 유지
      </para>
     </formalpara>
     <formalpara>
      <title><literal>latest-N</literal>:</title>
      <para>
       커널을 N번째 최고 버전 번호로 유지
      </para>
     </formalpara>
     <formalpara>
      <title><literal>running</literal>:</title>
      <para>
       실행 중인 커널 유지
      </para>
     </formalpara>
     <formalpara>
      <title><literal>oldest</literal>:</title>
      <para>
       커널을 최하 버전 번호로 유지(<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>와 함께 원래 제공된 버전 번호)
      </para>
     </formalpara>
     <formalpara>
      <title><literal>oldest+N</literal></title>
      <para>
       커널을 N번째 최하 버전 번호로 유지
      </para>
     </formalpara>
     <para>
      몇 가지 예는 다음과 같습니다.
     </para>
     <variablelist>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,running</literal>
       </term>
       <listitem>
        <para>
         최신 커널과 현재 실행 중인 커널을 유지합니다. 이전 커널이 <emphasis>다음 부팅 후</emphasis> 제거되지만 설치 직후에는 제거되지 않는다는 점을 제외하면, 다중 버전 기능을 활성화하지 않는 것과 유사합니다.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,latest-1,running </literal>
       </term>
       <listitem>
        <para>
         마지막 2개 커널과 현재 실행 중인 커널을 유지합니다.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal> multiversion.kernels = latest,running,<replaceable>5.3.18-53.3 </replaceable></literal>
       </term>
       <listitem>
        <para>
         최신 커널, 현재 실행 중인 커널 및 <replaceable>5.3.18-53.3</replaceable>을 유지합니다.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
     <tip>
      <title>실행 중인 커널 유지</title>
      <para>
       특수 설정을 사용하지 않는 경우 <literal>running</literal>으로 표시된 커널을 항상 유지하십시오.
      </para>
      <para>
       실행 중인 커널을 유지하지 않는 경우 커널을 업데이트할 때 삭제됩니다. 따라서 실행 중인 커널의 모듈도 모두 삭제되고 더 이상 로드할 수 없습니다.
      </para>
      <para>
       실행 중인 커널을 로드하지 않도록 하는 경우에는 항상 커널 업그레이드 후 즉시 재부팅하여 모듈 문제를 방지하십시오.
      </para>
     </tip>
    </step>
   </procedure>
  </sect2>
  <sect2 xml:id="sec-tuning-multikernel-deleteoldkernel">
   <title>사용 사례: 재부팅 후에만 이전 커널 삭제</title>
   <para>
    시스템이 새 커널로 재부팅한 후에만 이전 커널이 삭제되도록 할 수 있습니다.
   </para>
   <para>
    <filename>/etc/zypp/zypp.conf</filename>에서 다음 줄을 변경합니다.
   </para>
<screen>multiversion.kernels = latest,running</screen>
   <para>
    앞의 파라미터는 최신 커널과 실행 중인 커널(서로 다른 경우)만 유지합니다.
   </para>
  </sect2>

  <sect2 xml:id="sec-tuning-multikernel-fallback">
   <title>사용 사례: 이전 커널을 대체 커널로 유지</title>
   <para>
    하나 이상의 커널 버전을 하나 이상의 <quote>예비</quote> 커널로 유지할 수 있습니다.
   </para>
   <para>
    테스트를 위해 커널이 필요한 경우 이 사례가 유용할 수 있습니다. 문제가 발생하는 경우(예: 시스템이 부팅되지 않음)에도 정상이라고 알려진 커널 버전을 하나 이상 사용할 수 있습니다.
   </para>
   <para>
    <filename>/etc/zypp/zypp.conf</filename>에서 다음 줄을 변경합니다.
   </para>
<screen>multiversion.kernels = latest,latest-1,latest-2,running</screen>
   <para>
    새 커널 설치 후 시스템을 재부팅할 때 시스템에서 세 개 커널 즉, 현재 커널(<literal>latest,running</literal>으로 구성) 및 바로 앞의 두 커널(<literal>latest-1</literal> 및 <literal>latest-2</literal>로 구성)을 유지합니다.
   </para>
  </sect2>

  <sect2 xml:id="sec-tuning-multikernel-specificversion">
   <title>사용 사례: 특정 커널 버전 유지</title>
   <para>
    대개는 일반 시스템 업데이트를 수행하고 새 커널 버전을 설치합니다. 그러나 자체 커널 버전을 컴파일하고 시스템에서 이 커널을 유지하도록 할 수도 있습니다.
   </para>
   <para>
    <filename>/etc/zypp/zypp.conf</filename>에서 다음 줄을 변경합니다.
   </para>
<screen>multiversion.kernels = latest,5.3.18-53.3,running</screen>
   <para>
    새 커널 설치 후 시스템을 재부팅하면 시스템에서 두 개 커널 즉, 실행 중인 새 커널(<literal>latest,running</literal>으로 구성) 및 자체 컴파일한 커널(<literal>5.3.18-53.3</literal>으로 구성)을 유지합니다.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-tuning-multikernel-yast">
  <title>YaST를 사용하여 여러 커널 버전 설치/제거</title>
  <para>
   YaST를 사용하여 여러 커널을 설치하거나 제거할 수 있습니다.
  </para>
  <procedure>
   <step>
    <para>
     YaST를 시작하고 <menuchoice>
     <guimenu> 소프트웨어</guimenu> <guimenu> 소프트웨어 관리</guimenu>
     </menuchoice> 를 통해 소프트웨어 관리자를 엽니다.
    </para>
   </step>
   <step>
    <para>
     <menuchoice> <guimenu> 보기</guimenu> <guimenu> 패키지 그룹</guimenu>
     <guimenu> 다중 버전 패키지</guimenu> </menuchoice> 를 선택하여 여러 버전을 제공할 수 있는 모든 패키지를 나열합니다.
    </para>
    <figure>
     <title>YaST 소프트웨어 관리자: 다중 버전 보기</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_sw_multiversion.png" width="90%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="yast2_sw_multiversion.png" width="90%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     패키지를 선택하고 왼쪽 하단 창에서 <guimenu>버전</guimenu> 탭을 엽니다.
    </para>
   </step>
   <step>
    <para>
     패키지를 설치하려면 옆에 있는 체크박스를 클릭합니다. 녹색 확인 표시는 설치를 위해 선택되었음을 나타냅니다.
    </para>
    <para>
     이미 설치된 패키지(흰색 확인 표시로 표시됨)를 제거하려면 빨간색 <literal>X</literal>가 패키지가 제거를 위해 선택되었음을 나타낼 때까지 옆의 체크박스를 클릭합니다.
    </para>
   </step>
   <step>
    <para>
     <guimenu>승인</guimenu>을 클릭하여 설치를 시작합니다.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-tuning-multikernel-zypper">
  <title>Zypper를 사용하여 여러 커널 버전 설치/제거</title>
  <para>
   <command>zypper</command>를 사용하여 여러 커널을 설치하거나 제거할 수 있습니다.
  </para>
  <procedure>
   <step>
    <para>
     <command>zypper se -s 'kernel*'</command> 명령을 사용하여 사용 가능한 모든 커널 패키지 목록을 표시합니다.
    </para>
<screen><?dbsuse-fo font-size="7pt"?>


S  | Name                 | Type    | Version           | Arch   | Repository
---+----------------------+---------+-------------------+--------+---------------------------------
i+ | kernel-default       | package | 5.3.18-53.3       | x86_64 | (System Packages)
i+ | kernel-default       | package | 5.3.18-54.2       | x86_64 | SLE-Module-Basesystem15-SP3-Pool
   | kernel-default-base  | package | 5.3.18-54.2.16.15 | x86_64 | SLE-Module-Basesystem15-SP3-Pool
   | kernel-default-devel | package | 5.3.18-54.2       | x86_64 | SLE-Module-Basesystem15-SP3-Pool
   | kernel-devel         | package | 5.3.18-54.2       | noarch | SLE-Module-Basesystem15-SP3-Pool
i  | kernel-firmware      | package | 20210208-2.4      | noarch | SLE-Module-Basesystem15-SP3-Pool
   | kernel-macros        | package | 5.3.18-54.2       | noarch | SLE-Module-Basesystem15-SP3-Pool
   | kernel-preempt       | package | 5.3.18-54.2       | x86_64 | SLE-Module-Basesystem15-SP3-Pool
</screen>
   </step>
   <step>
    <para>
     설치할 때 정확한 버전을 지정하십시오.
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> zypper in kernel-default-5.3.18-53.3</screen>
   </step>
   <step>
    <para>
     커널을 제거할 때 <command>zypper se -si 'kernel*'</command> 명령을 사용하여 설치된 모든 커널을 나열하고 <command>zypper rm</command> <replaceable> PACKAGENAME-VERSION</replaceable> 명령을 사용하여 패키지를 제거합니다.
    </para>
   </step>
  </procedure>
 </sect1>
 
</chapter>
