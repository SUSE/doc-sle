<?xml version="1.0" encoding="UTF-8"?>

<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
                 type="text/xml"
                 title="Profiling step"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
  <!ENTITY as "alternatives system">
  <!ENTITY AS "Alternatives System">
]>
<chapter version="5.1"  xml:id="cha.update-alternative"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title><command>update-alternatives</command>: Managing System Default Variants of Commands</title>
 <info>
  <abstract>
   <para>
    Some commands come in different versions, for example Java, Python, and
    other tools. Usually, these different versions fulfill similar functions.
    To give administrators a choice and to make it possible to install different
    versions at the same time, the alternatives system provides the
    infrastructure to manage them consistently. 
   </para>
  </abstract>
 </info>
 
  <sect1 xml:id="sec.ua.concept">
   <title>Conceptual Overview</title>
   <para>
    On &suse;, some programs fulfill the same or similar tasks. For example,
    if Java 1.7 and Java 1.8 are both installed on the system, the RPM
    package provides through the &as; a generic name <command>/usr/bin/java</command>.
    By default, it will refer to version 1.8 as higher versions also have a 
    higher priority. However, the administrator
    can change the default and let the generic name refer to version 1.7.
    This makes it easy to change the system in a consistent and predictable
    way without changing any dependencies in scripts, for example.
   </para>
   <para>
    The following terminology is used througout this chapter:
   </para>
   <variablelist>
    <title>Terminology</title>
    <varlistentry>
     <term>Administrative directory</term>
     <listitem>
      <para>
       A directory, by default <filename class="directory"
        >/var/lib/rpm/alternatives</filename> containing alternatives' state
       information. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Alternative</term>
     <listitem>
      <para>
       The name of a specific file in the filesystem, which may be made
       accessible via a generic name using the &as;. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Alternatives directory</term>
     <listitem>
      <para>
       A directory, by default <filename class="directory">/etc/alternatives</filename>,
       containing the symlinks. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Generic name</term>
     <listitem>
      <para>
       A name, like <command>/usr/bin/edit</command>, which refers, via the
       &as;, to one of a number of files of similar function. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Link group</term>
     <listitem>
      <para>
       A set of related symlinks, intended to be updated as a group.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Master link</term>
     <listitem>
      <para>
       The link in a link group which determines how the other links in the
       group are configured.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Slave link</term>
     <listitem>
      <para>
       A link in a link group which is controlled by the setting of the
       master link.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Symlink</term>
     <listitem>
      <para>
       Without any further qualification, this means a symbolic link in
       the alternatives directory: one which the system administrator is
       expected to adjust.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    The &as;, provides the <command>update-alternatives</command> command to
    creates, removes, maintains and displays information about symlinks.
    These symlinks usually point to commands, but can also be JAR files,
    manpages or any other file that needs to provide alternative versions.
    This chapter gives examples about commands, although it is applicable
    to any file type.
   </para>
   <para>
    The &as; uses the alternatives directory to collect links to possible
    alternatives. When a new package with an alternative is installed,
    the new alternative is integrated into the system. How it is integrated
    depends on the priority and on the mode. Usually, packages
    with a higher version has also a higher priority. The &as; can operate
    in two modes:
   </para>
   <itemizedlist>
    <listitem>
     <formalpara>
      <title>Automatic Mode</title>
      <para>
       When a link group is in automatic mode, the &as;
       ensures that the links in the group point to the highest priority
       alternatives appropriate for the group.
      </para>
     </formalpara>
    </listitem>
    <listitem>
     <formalpara>
      <title>Manual Mode</title>
      <para>
       When a link group is in manual mode, the &as; will not
       make any changes to the system administrator's settings.
      </para>
     </formalpara>
    </listitem>
   </itemizedlist>
   <para>
    For example, the <command>java</command> command has this cascade of links
    in the &as;:
   </para>
   <example>
    <title>&AS; of the <command>java</command> Command</title>
    <screen>/usr/bin/java <co xml:id="co.ua.java.name"/>
 -> /etc/alternatives/java <co xml:id="co.ua.java.symlink"/>
     -> /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java <co xml:id="co.ua.java.alternatives"/></screen>
    <!--<screen>&prompt.user;<command>ls</command> -l /usr/bin/java <co xml:id="co.ua.exa.usr_bin_java"/>
lrwxrwxrwx 1 root root 22 16. Feb 2017  /usr/bin/java -> /etc/alternatives/java <co xml:id="co.ua.exa.etc_alternatives_java"/>
&prompt.user;<command>ls</command> -l /etc/alternatives/java
lrwxrwxrwx 1 root root 41 11. Dez 16:48 /etc/alternatives/java -> /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java</screen>-->
    <calloutlist>
     <callout arearefs="co.ua.java.name">
      <para>
       The generic name.
      </para>
     </callout>
     <callout arearefs="co.ua.java.symlink">
      <para>The symlink in the alternatives directory.</para>
     </callout>
     <callout arearefs="co.ua.java.alternatives">
      <para>
       One of the alternatives.
      </para>
     </callout>
    </calloutlist>
   </example>
  </sect1>

  <sect1 xml:id="sec.ua.use-cases">
   <title>Use Cases</title>
   <para>
    By default, the &as; is used inside RPM packages by running
    the <command>update-alternatives</command> script. When a package is
    installed or removed, the script takes care of all its symlinks. However,
    the script alone can also be used, usually for the following use cases:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Displaying the current alternatives for a generic name.
     </para>
    </listitem>
    <listitem>
     <para>
      Changing the defaults of an alternatives.
     </para>
    </listitem>
    <listitem>
     <para>
     Creating a set of related files for an alternatives.
     </para>
    </listitem>
   </itemizedlist>
  </sect1>

  <sect1 xml:id="sec.ua.displaying">
   <title>Displaying Alternatives</title>
   <para>
    The easiest way to check, is to follow the symlinks of your command.
    For example, if you are only interested where the <command>java</command>
    command is referring to, use the following command:
   </para>
   <screen>&prompt.user;<command>readlink</command> --canonicalize /usr/bin/java
/usr/lib64/jvm/jre-1.8.0-openjdk/bin/java</screen>
   <para>
    If you see the same path (in our example, it is <filename>/usr/bin/java</filename>)
    there are no alternatives available for this command.
   </para>
   <!--<para>
    In case you want to get an overview of all possible alternatives, use the
    option <option>-\-config</option> like this:
   </para>
   <screen>&prompt.user;<command>sudo</command> update-alternatives -\-config java
There are 2 choices for the alternative java (providing /usr/bin/java).

  Selection    Path                                       Priority   Status
-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
* 0            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      auto mode
  1            /usr/lib64/jvm/jre-1.7.0-openjdk/bin/java   1705      manual mode
  2            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      manual mode</screen>
   <para>
    If you do not want to change anything, hit the <keycap function="return">Return</keycap>
    key.
   </para>-->
   <para>
    In cases you want to see the full alternatives (even including slaves), use
    the <option>--display</option> option:
   </para>
   <screen>&prompt.user;<command>update-alternatives</command> --display java
java - auto mode
  link best version is /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java
  link currently points to /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java
  link java is /usr/bin/java
  slave java.1.gz is /usr/share/man/man1/java.1.gz
  slave jre is /usr/lib64/jvm/jre
  slave jre_exports is /usr/lib64/jvm-exports/jre
  slave keytool is /usr/bin/keytool
  slave keytool.1.gz is /usr/share/man/man1/keytool.1.gz
  slave orbd is /usr/bin/orbd
  slave orbd.1.gz is /usr/share/man/man1/orbd.1.gz
  slave policytool is /usr/bin/policytool
  slave policytool.1.gz is /usr/share/man/man1/policytool.1.gz
  slave policytool.desktop is /usr/share/applications/policytool.desktop
  slave rmid is /usr/bin/rmid
  slave rmid.1.gz is /usr/share/man/man1/rmid.1.gz
  slave rmiregistry is /usr/bin/rmiregistry
  slave rmiregistry.1.gz is /usr/share/man/man1/rmiregistry.1.gz
  slave servertool is /usr/bin/servertool
  slave servertool.1.gz is /usr/share/man/man1/servertool.1.gz
  slave tnameserv is /usr/bin/tnameserv
  slave tnameserv.1.gz is /usr/share/man/man1/tnameserv.1.gz
/usr/lib64/jvm/jre-1.7.0-openjdk/bin/java - priority 1705
  slave java.1.gz: /usr/share/man/man1/java-java-1.7.0-openjdk.1.gz
  slave jre: /usr/lib64/jvm/jre-1.7.0-openjdk
  slave jre_exports: /usr/lib64/jvm-exports/jre-1.7.0-openjdk
  slave keytool: /usr/lib64/jvm/jre-1.7.0-openjdk/bin/keytool
  slave keytool.1.gz: /usr/share/man/man1/keytool-java-1.7.0-openjdk.1.gz
  slave orbd: /usr/lib64/jvm/jre-1.7.0-openjdk/bin/orbd
  slave orbd.1.gz: /usr/share/man/man1/orbd-java-1.7.0-openjdk.1.gz
  slave policytool: /usr/lib64/jvm/jre-1.7.0-openjdk/bin/policytool
  slave policytool.1.gz: /usr/share/man/man1/policytool-java-1.7.0-openjdk.1.gz
  slave policytool.desktop: /usr/lib64/jvm/java-1.7.0-openjdk-1.7.0/jre/lib/desktop/policytool.desktop
  slave rmid: /usr/lib64/jvm/jre-1.7.0-openjdk/bin/rmid
  slave rmid.1.gz: /usr/share/man/man1/rmid-java-1.7.0-openjdk.1.gz
  slave rmiregistry: /usr/lib64/jvm/jre-1.7.0-openjdk/bin/rmiregistry
  slave rmiregistry.1.gz: /usr/share/man/man1/rmiregistry-java-1.7.0-openjdk.1.gz
  slave servertool: /usr/lib64/jvm/jre-1.7.0-openjdk/bin/servertool
  slave servertool.1.gz: /usr/share/man/man1/servertool-java-1.7.0-openjdk.1.gz
  slave tnameserv: /usr/lib64/jvm/jre-1.7.0-openjdk/bin/tnameserv
  slave tnameserv.1.gz: /usr/share/man/man1/tnameserv-java-1.7.0-openjdk.1.gz
/usr/lib64/jvm/jre-1.8.0-openjdk/bin/java - priority 1805
  slave java.1.gz: /usr/share/man/man1/java-java-1.8.0-openjdk.1.gz
  slave jre: /usr/lib64/jvm/jre-1.8.0-openjdk
  slave jre_exports: /usr/lib64/jvm-exports/jre-1.8.0-openjdk
  slave keytool: /usr/lib64/jvm/jre-1.8.0-openjdk/bin/keytool
  slave keytool.1.gz: /usr/share/man/man1/keytool-java-1.8.0-openjdk.1.gz
  slave orbd: /usr/lib64/jvm/jre-1.8.0-openjdk/bin/orbd
  slave orbd.1.gz: /usr/share/man/man1/orbd-java-1.8.0-openjdk.1.gz
  slave policytool: /usr/lib64/jvm/jre-1.8.0-openjdk/bin/policytool
  slave policytool.1.gz: /usr/share/man/man1/policytool-java-1.8.0-openjdk.1.gz
  slave policytool.desktop: /usr/lib64/jvm/java-1.8.0-openjdk-1.8.0/jre/lib/desktop/policytool.desktop
  slave rmid: /usr/lib64/jvm/jre-1.8.0-openjdk/bin/rmid
  slave rmid.1.gz: /usr/share/man/man1/rmid-java-1.8.0-openjdk.1.gz
  slave rmiregistry: /usr/lib64/jvm/jre-1.8.0-openjdk/bin/rmiregistry
  slave rmiregistry.1.gz: /usr/share/man/man1/rmiregistry-java-1.8.0-openjdk.1.gz
  slave servertool: /usr/lib64/jvm/jre-1.8.0-openjdk/bin/servertool
  slave servertool.1.gz: /usr/share/man/man1/servertool-java-1.8.0-openjdk.1.gz
  slave tnameserv: /usr/lib64/jvm/jre-1.8.0-openjdk/bin/tnameserv
  slave tnameserv.1.gz: /usr/share/man/man1/tnameserv-java-1.8.0-openjdk.1.gz</screen>
  </sect1>

  <sect1 xml:id="sec.ua.setting">
   <title>Setting the Default Version of an Alternatives</title>
   <para>
    By default, commands in <filename>/usr/bin</filename> refers to the
    alternatives directory with the highest priority. For example,
    the <command>java</command> prints the following output:
   </para>
   <screen>&prompt.user;<command>java</command> -version
openjdk version "1.8.0_151"
OpenJDK Runtime Environment (IcedTea 3.6.0) (build 1.8.0_151-b12 suse-10.18.2-x86_64)
OpenJDK 64-Bit Server VM (build 25.151-b12, mixed mode)</screen>
   <para>
    If you want to change the default <command>java</command> command to refer
    to a previous version, run this:
   </para>
   <screen>&prompt.user;<command>sudo</command> update-alternatives --config java
root's password:
There are 2 choices for the alternative java (providing /usr/bin/java).

  Selection    Path                                       Priority   Status
------------------------------------------------------------
* 0            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      auto mode
  1            /usr/lib64/jvm/jre-1.7.0-openjdk/bin/java   1705      manual mode
  2            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      manual mode

Press &lt;enter> to keep the current choice[*], or type selection number:</screen>
   <para>
    Depending on your system and versions, the different Java version can
    look a bit different.
    After you have selected <literal>1</literal>, another run of <command>java</command>
    prints the following result:
   </para>
   <screen>&prompt.user;<command>java</command> -version
java version "1.7.0_141"
OpenJDK Runtime Environment (IcedTea 2.6.10) (suse-42.3.1-x86_64)
OpenJDK 64-Bit Server VM (build 24.141-b02, mixed mode)</screen>
   <para>
    Also keep in mind the following points:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      You are switching from auto mode to manual. This means, if you install
      another Java version, the &as; will not touch the links nor it will
      change the generic name.
     </para>
    </listitem>
    <listitem>
     <para>
      You are changing any slave links too which are associated to a master
      link. In case of our Java example, this will change the many slave
      links you can see from <xref linkend="sec.ua.displaying"/>. Check
      with <command>update-alternatives</command> <option>--display java</option>.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    If you change your mind, you can always switch back.
   </para>
  </sect1>

  <sect1 xml:id="sec.ua.install">
   <title>Installing your own Alternatives</title>
   <para>
    To create some alternatives in your system, we assume the following
    properties:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Two scripts, <command>foo-2</command> and <command>foo-3</command>,
      which provides similar functionality.
     </para>
    </listitem>
    <listitem>
     <para>
      The scripts are stored in the <filename>/usr/local/bin</filename>
      directory to avoid any conflicts with the system tools in
      <filename>/usr/bin</filename>.
     </para>
    </listitem>
    <listitem>
     <para>
      A master link <command>foo</command> which points either to
      <command>foo-2</command> or <command>foo-3</command>.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    In case you want to provide alternatives in your system, follow these
    steps: 
   </para>
   <procedure>
    <step>
     <para>
      Copy your scripts into the <filename>/usr/local/bin</filename> directory.
     </para>
    </step>
    <step>
     <para>
      Make sure the scripts are executable:
     </para>
     <screen>&prompt.root;<command>chmod</command> +x /usr/local/bin/foo-{2,3}</screen>
    </step>
    <step>
     <para>
      Run <command>update-alternatives</command> for both scripts:
     </para>
     <screen>&prompt.root;<command>update-alternatives</command> --install \
   /usr/local/bin/foo <co xml:id="co.ua.ua-install.usr-local-bin-foo"/>\
   foo <co xml:id="co.ua.ua-install.foo"/>\
   /usr/local/bin/foo-2 <co xml:id="co.ua.ua-install.usr-local-bin-foo.path"/>\
   200 <co xml:id="co.ua.ua-install.prio"/>
&prompt.root;<command>update-alternatives</command> --install \
   /usr/local/bin/foo <xref linkend="co.ua.ua-install.usr-local-bin-foo"/>\
   foo <xref linkend="co.ua.ua-install.foo"/>\
   /usr/local/bin/foo-3 <xref linkend="co.ua.ua-install.usr-local-bin-foo.path"/>\
   300 <xref linkend="co.ua.ua-install.prio"/></screen>
     <para>
      The options after <option>--install</option> means:
     </para>
     <calloutlist>
      <callout arearefs="co.ua.ua-install.usr-local-bin-foo">
       <para>
        The generic name. To avoid confusion, this is usually the script
        name without any version numbers.
       </para>
      </callout>
      <callout arearefs="co.ua.ua-install.foo">
       <para>
        The name of the master link. This has to be the same for both scripts.
       </para>
      </callout>
      <callout arearefs="co.ua.ua-install.usr-local-bin-foo.path">
       <para>
        The path to the original script(s) located in
        <filename>/usr/local/bin</filename>.
       </para>
      </callout>
      <callout arearefs="co.ua.ua-install.prio">
       <para>
        The priority. 
        We give <command>foo-2</command> a lower priority than
        <command>foo-3</command>. In other words, we
        <emphasis>prefer</emphasis> <command>foo-3</command>
        over <command>foo-2</command>.
        The priority can be any value you want, but it is usually a good
        idea to leave some room inbetween. Therefor, we multiplied the
        version by 100 which gives the priority 200 for <command>foo-2</command>
        and 300 for <command>foo-2</command>.
       </para>
      </callout>
     </calloutlist>
    </step>
    <step>
     <para>
      Check the master link:
     </para>
     <screen>&prompt.root;<command>update-alternatives</command> --display foo
foo - auto mode
  link best version is /usr/local/bin/foo-3
  link currently points to /usr/local/bin/foo-3
  link foo is /usr/local/bin/foo
/usr/local/bin/foo-2 - priority 200
/usr/local/bin/foo-3 - priority 300</screen>
    </step>
   </procedure>
   <para>
    After you have executed the above steps, you can use the master link
    <command>/usr/local/bin/foo</command>.
   </para>
   <para>
    If needed, you can install additional alternatives. In case you want
    to remove one alternatives, use this command:
   </para>
   <screen>&prompt.root;<command>update-alternative</command> --remove foo /usr/local/bin/foo-2</screen>
   <para>After this script has been removed, the &as; for the foo group looks
    like this:</para>
   <screen>&prompt.root;<command>update-alternative</command> --display foo
foo - auto mode
  link best version is /usr/local/bin/foo-3
  link currently points to /usr/local/bin/foo-3
  link foo is /usr/local/bin/foo
/usr/local/bin/foo-3 - priority 300</screen>
  </sect1>

  <sect1 xml:id="sec.ua.slaves">
   <title>Defining Dependent Alternatives</title>
   <para>
    If you have alternatives, the script itself is not enough. Usually
    scripts comes with a manpage or some other configuration options.
    In case you need to create alternatives which are dependent from a master
    link you need to create <emphasis>slave alternatives</emphasis>.
   </para>
   <para>
    Let's assume we want to extend our example in <xref linkend="sec.ua.install"/>
    and provide manpages and configuration files:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Two manpages, <filename>foo-2.1.gz</filename> and <filename>foo-3.1.gz</filename>
      stored in the <filename>/usr/local/man/man1</filename> directory.
     </para>
    </listitem>
    <listitem>
     <para>
      Two configuration files, <filename>foo-2.conf</filename> and
      <filename>foo-3.conf</filename>, stored in <filename>/etc</filename>.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Follow these steps to add the additional files to your alternatives:
   </para>
   <procedure>
    <step>
     <para>
      Copy the configuration files into <filename>/etc</filename>:
     </para>
     <screen>&prompt.root;<command>cp</command> foo-{2,3}.conf /etc</screen>
    </step>
    <step>
     <para>
      Copy the manpages into the <filename>/usr/local/man/man1</filename>
      directory:
     </para>
     <screen>&prompt.root;<command>cp</command> foo-{2,3}.1.gz /usr/local/man/man1/</screen>
    </step>
    <step>
     <para>
      Add the slave links to the main scripts with the <option>--slave</option>
      option:
     </para>
     <screen>&prompt.root;<command>update-alternatives</command> --install \
   /usr/local/bin/foo foo /usr/local/bin/foo-2 200 \
   --slave /usr/local/man/man1/foo.1.gz \
   foo.1.gz \
   /usr/local/man/man1/foo-2.1.gz \
   --slave /etc/foo.conf \
   foo.conf \
   /etc/foo-2.conf
&prompt.root;<command>update-alternatives</command> --install \
   /usr/local/bin/foo foo /usr/local/bin/foo-3 300 \
   --slave /usr/local/man/man1/foo.1.gz \
   foo.1.gz \
   /usr/local/man/man1/foo-3.1.gz \
   --slave /etc/foo.conf \
   foo.conf \
   /etc/foo-3.conf</screen>
    </step>
    <step>
     <para>Check the master link:</para>
     <screen>foo - auto mode
  link best version is /usr/local/bin/foo-3
  link currently points to /usr/local/bin/foo-3
  link foo is /usr/local/bin/foo
  slave foo.1.gz is /usr/local/man/man1/foo.1.gz
  slave foo.conf is /etc/foo.conf
/usr/local/bin/foo-2 - priority 200
  slave foo.1.gz: /usr/local/man/man1/foo-2.1.gz
  slave foo.conf: /etc/foo-2.conf
/usr/local/bin/foo-3 - priority 300
  slave foo.1.gz: /usr/local/man/man1/foo-3.1.gz
  slave foo.conf: /etc/foo-3.conf</screen>
    </step>
   </procedure>
   <para>
    If you change the links with <command>update-alternatives --config foo</command>
    to <command>foo-2</command>, then all the other slave links will change
    as well.
   </para>
  </sect1>
</chapter>
