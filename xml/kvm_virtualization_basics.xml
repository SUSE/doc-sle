<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-kvm-intro">
  <title>Introduction to &kvm; virtualization</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker></dm:bugtracker>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>
  <para/>
  <sect1 xml:id="sec-kvm-intro">
    <title>Basic components</title>

    <para>
      &kvm; is a full virtualization solution for hardware architectures that
      support hardware virtualization<phrase os="sles;sled"> (refer to
      <xref
   linkend="sec-architecture-support"/> for more details on
      supported architectures)</phrase>.
    </para>

    <para>
      &vmguest;s (virtual machines), virtual storage and virtual networks can
      be managed with &qemu; tools directly or with the &libvirt;-based stack.
      The &qemu; tools include <command>qemu-system-ARCH</command>, the &qemu;
      monitor, <command>qemu-img</command>, and <command>qemu-ndb</command>. A
      &libvirt;-based stack includes &libvirt; itself, along with
      &libvirt;-based applications such as <command>virsh</command>,
      <command>virt-manager</command>, <command>virt-install</command>, and
      <command>virt-viewer</command>.
    </para>
  </sect1>
  <sect1 xml:id="sec-kvm-intro-arch">
    <title>&kvm; virtualization architecture</title>

    <para>
      This full virtualization solution consists of two main components:
    </para>

    <itemizedlist>
      <listitem>
        <para>
          A set of kernel modules (<systemitem>kvm.ko</systemitem>,
          <systemitem>kvm-intel.ko</systemitem>, and
          <systemitem>kvm-amd.ko</systemitem>) that provides the core
          virtualization infrastructure and processor-specific drivers.
        </para>
      </listitem>
      <listitem>
        <para>
          A user space program
          (<systemitem class="resource">qemu-system-ARCH</systemitem>) that
          provides emulation for virtual devices and control mechanisms to
          manage &vmguest;s (virtual machines).
        </para>
      </listitem>
    </itemizedlist>

    <para>
      The term &kvm; more properly refers to the kernel level virtualization
      functionality, but is in practice more commonly used to refer to the user
      space component.
    </para>

    <figure xml:id="fig-kvm-basics-arch">
      <title>&kvm; virtualization architecture</title>
      <mediaobject>
        <imageobject role="fo">
          <imagedata fileref="kvm_qemu.png" width="100%"/>
        </imageobject>
        <imageobject role="html">
          <imagedata fileref="kvm_qemu.png" width="100%"/>
        </imageobject>
      </mediaobject>
    </figure>

    <!-- QEMU CAN DO A LOT OF THINGS, WE DO NOT RECOMMEND
      TO EXPOSE THIS FEATURE IN THE OFFICIAL DOC AS WE DONT SUPPORT
      THEM
      <note>
      <title>Hyper-V emulation support</title>
      <para>
      QEMU can provide certain Hyper-V hypercalls for Windows* guests
      to partly emulate a Hyper-V environment. This can be used to achieve
      better behavior for Windows* guests that are Hyper-V enabled.
      </para>
      </note>
      -->
  </sect1>
</chapter>
