<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="vt_io.xml" version="5.0" xml:id="sec-vt-io">
 <title>I/O 虚拟化</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <para>
  VM Guest 不仅可以共享主机系统的 CPU 和内存资源，而且还能共享 I/O 子系统的此类资源。由于软件 I/O 虚拟化技术提供的性能低于裸机，因此最近开发了接近<quote>本机</quote>性能的硬件解决方案。<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 支持以下 I/O 虚拟化技术：
 </para>

 <variablelist>
  <varlistentry xml:id="vt-io-fullv">
   <term>完全虚拟化</term>
   <listitem>
    <para>
     全虚拟化 (FV) 驱动程序会模拟受到广泛支持的真实设备，可以通过 VM Guest 中的现有驱动程序来使用这些设备。Guest 也称为<emphasis>硬件虚拟机</emphasis> (HVM)。由于 VM 主机服务器上的物理设备可能不同于模拟的设备，超级管理程序需要先处理所有 I/O 操作，然后才能将其转交到物理设备。因此，所有 I/O 操作需要遍历两个软件层，这一过程不仅会显著影响 I/O 性能，而且还会消耗 CPU 时间。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="vt-io-parav">
   <term>半虚拟化</term>
   <listitem>
    <para>
     半虚拟化 (PV) 支持在超级管理程序与 VM Guest 之间直接通讯。与全虚拟化相比，它产生的开销更少，但性能却好很多。但使用半虚拟化技术时，无论是要支持半虚拟化 API 还是半虚拟化驱动程序，都必须修改 Guest 操作系统。<phrase os="sles;sled">有关支持半虚拟化的 Guest 操作系统列表，请参见<xref linkend="sec-kvm-requires-guests-virt-drivers"/>。</phrase>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="vt-io-pvhvm">
   <term>PVHVM</term>
   <listitem>
    <para>
     这种类型的虚拟化通过半虚拟化 (PV) 驱动程序以及 PV 中断和计时器处理增强了 HVM（请参见<xref linkend="vt-io-fullv"/>）。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="vt-io-vfio">
   <term>VFIO</term>
   <listitem>
    <para>
     VFIO 是<emphasis>虚拟功能 I/O</emphasis> 的英文缩写，是适用于 Linux 的新式用户级驱动程序框架。它取代了传统的 KVM PCI 直通设备指派。VFIO 驱动程序会在受安全内存 (<xref linkend="gloss-vt-acronym-iommu"/>) 保护的环境中向用户空间公开直接的设备访问。利用 VFIO，VM Guest 可以直接访问 VM 主机服务器上的硬件设备（直通），避免性能关键型路径中的模拟操作造成性能问题。此方法不允许共享设备 — 每个设备只能指派到一个 VM Guest。VFIO 需受 VM 主机服务器 CPU、芯片组和 BIOS/EFI 的支持。
    </para>
    <para>
     与传统的 KVM PCI 设备指派相比，VFIO 具有以下优势：
    </para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       资源访问与 UEFI 安全引导兼容。
      </para>
     </listitem>
     <listitem>
      <para>
       设备会被隔离，并且其内存访问受到保护。
      </para>
     </listitem>
     <listitem>
      <para>
       提供设备所有权模型更为灵活的用户空间设备驱动程序。
      </para>
     </listitem>
     <listitem>
      <para>
       独立于 KVM 技术，不局限于 x86 体系结构。
      </para>
     </listitem>
    </itemizedlist>
    <para>
     在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server </phrase></phrase> 中，USB 和 PCI 直通设备指派方法被认为已过时，已由 VFIO 模型取代。
   </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="vt-io-sriov">
   <term>SR-IOV</term>
   <listitem>
    <para>
     作为最新的 I/O 虚拟化技术，单根 I/O 虚拟化 (SR-IOV) 结合了上述技术的优点 — 在兼顾性能的同时还能与多个 VM Guest 共享设备。SR-IOV 要求使用特殊的 I/O 设备，这些设备必须能够复制资源，使它们看似是多个独立设备。每个这样的<quote>伪</quote>设备可由单个 Guest 直接使用。但对于网卡（举例而言），可使用的并发队列数有限，因此与半虚拟化驱动程序相比，SR-IOV 有可能会降低 VM Guest 的性能。在 VM 主机服务器上，SR-IOV 必须受 I/O 设备、CPU 和芯片组、BIOS/EFI 及超级管理程序的支持 — 有关设置说明，请参见<xref linkend="sec-libvirt-config-pci"/>。

    </para>
   </listitem>
  </varlistentry>
 </variablelist>

 <important xml:id="ann-vt-io-require">
  <title>VFIO 和 SR-IOV 的要求</title>
  <para>
   要能够使用 VFIO 和 SR-IOV 功能，VM 主机服务器需要满足以下要求：
  </para>
  <itemizedlist>
   <listitem>
    <para>
     需在 BIOS/EFI 中启用 IOMMU。
    </para>
   </listitem>
   <listitem>
    <para>
     对于 Intel CPU，需要在内核命令行中提供内核参数 <literal>intel_iommu=on</literal>。有关详细信息，请参见 <link xlink:href="https://github.com/torvalds/linux/blob/master/Documentation/admin-guide/kernel-parameters.txt#L1951"/>。
    </para>
   </listitem>
   <listitem>
    <para>
     VFIO 基础结构需可用。装载内核模块 <systemitem class="resource">vfio_pci</systemitem> 即可做到这一点。有关详细信息，请参见 <xref linkend="sec-boot-systemd-advanced-kernel-modules"/>。
    </para>
   </listitem>
  </itemizedlist>
 </important>
</sect1>
