<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="tuning_multikernel.xml" version="5.0" xml:id="cha-tuning-multikernel">
 <title>複数バージョンのカーネルのインストール</title>
 <info>
  <abstract>
   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>では、複数バージョンのカーネルを並行でインストールできます。2番目のカーネルをインストールすると、ブートエントリとinitrdfが自動的に作成されるので、手動での設定が別途必要になることはありません。マシンを再起動すると、新しく追加したカーネルが追加のブートパラメータとして利用できるようになります。
   </para>

   <para>
    この機能を使用すると、カーネルのアップデートを安全な状態でテストでき、実績のある以前のカーネルにいつでもフォールバックできます。そのためには、YaSTのオンラインアップデートやアップデートアプレットなどのアップデートツールを使用せず、この章で説明するプロセスに従います。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <warning os="sles;sled">

  <title>サポートエンタイトルメント</title>
  <para>
   独自にコンパイルしたカーネルやサードパーティのカーネルをインストールすると、マシンのサポートエンタイトルメントが全面的に無効になります。<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>に付属するカーネルおよび<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>の正式なアップデートチャネルで配布されるカーネルのみがサポートされています。
  </para>
 </warning>
 <tip>
  <title>ブートローダ設定カーネルの確認</title>
  <para>
   別のカーネルをインストールした後は、デフォルトのブートエントリを目的に合わせて設定するために、ブートローダ設定を確認することをお勧めします。詳細については、<xref linkend="sec-grub2-yast2-config"/>を参照してください。
  </para>
 </tip>
 <sect1 xml:id="sec-tuning-multikernel-enable">
  <title>マルチバージョンサポートの有効化と設定</title>



  <para>
   <phrase os="sles;sled">SUSE Linux Enterprise Server 12</phrase>以降、複数バージョンのソフトウェアパッケージのインストール(マルチバージョンサポート)は、デフォルトで有効になっています。この設定を確認するには、次の手順に従います。
  </para>

  <procedure>
   <step>
    <para>
     任意のエディタで、<systemitem class="username">root</systemitem>として<filename>/etc/zypp/zypp.conf</filename>を開きます。
    </para>
   </step>
   <step>
    <para>
     文字列<literal>multiversion</literal>を検索します。この機能に対応しているすべてのカーネルパッケージでマルチバージョンサポートが有効になっている場合、次の行はコメント解除された状態で表示されます。
    </para>
<screen>multiversion = provides:multiversion(kernel)</screen>
   </step>
   <step>
    <para>
     マルチバージョンサポートを特定のカーネルに限定するには、それらのパッケージの名前をカンマ区切りリストとして<filename>/etc/zypp/zypp.conf</filename>の<literal>multiversion</literal>オプションに追記します。たとえば、次のような記述とします。
    </para>
<screen>multiversion = kernel-default,kernel-default-base,kernel-source
</screen>
   </step>
   <step>
    <para>
     変更を保存します。
    </para>
   </step>
  </procedure>

  <warning>
   <title>KMP (カーネルモジュールパッケージ)</title>
   <para>
    アップデートした新しいカーネル用に、ベンダーが提供する必須のカーネルモジュール(カーネルモジュールパッケージ)もインストールされていることを確認してください。最終的にカーネルモジュールが見つからなくても、カーネルアップデートプロセスで警告は表示されません。これは、システム上に保持されている古いカーネルによって依然としてパッケージ要件が満たされているためです。
   </para>
  </warning>

  <sect2 xml:id="sec-tuning-multikernel-enable-keep">
   <title>使用していないカーネルの自動削除</title>
   <para>
    マルチバージョンサポートを有効にして新しいカーネルを頻繁にテストしていると、ブートメニューが急速に複雑になります。<filename>/boot</filename>パーティションはスペースが限られていることが普通なので、<filename>/boot</filename>のオーバーフローに伴う問題が発生することがあります。YaSTや以下で説明するZypperなどを使用して、使用されていないバージョンのカーネルを手動で削除できますが、このようなカーネルを自動的に削除するように<systemitem class="library">libzypp</systemitem>を設定することもできます。デフォルトでは、どのカーネルも削除されません。
   </para>
   <procedure>
    <step>
     <para>
      任意のエディタで、<systemitem class="username">root</systemitem>として<filename>/etc/zypp/zypp.conf</filename>を開きます。
     </para>
    </step>
    <step>
     <para>
      文字列<literal>multiversion.kernels</literal>を検索し、その行のコメント指定を解除することで、このオプションを有効にします。このオプションは、以下の各値のカンマ区切りリストをとります。
     </para>
     <formalpara>
      <title><literal><replaceable>5.3.18-53.3</replaceable></literal>:</title>
      <para>
       指定されたバージョン番号のカーネルを保持します。
      </para>
     </formalpara>
     <formalpara>
      <title><literal>latest</literal>:</title>
      <para>
       最新のバージョン番号のカーネルを保持します。
      </para>
     </formalpara>
     <formalpara>
      <title><literal>latest-N</literal>:</title>
      <para>
       N番目に新しいバージョン番号のカーネルを保持します。
      </para>
     </formalpara>
     <formalpara>
      <title><literal>running</literal>:</title>
      <para>
       実行しているカーネルを保持します。
      </para>
     </formalpara>
     <formalpara>
      <title><literal>oldest</literal>:</title>
      <para>
       最も古いバージョン番号のカーネルを保持します(これは<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>に元から付属しているバージョンのカーネルです)。
      </para>
     </formalpara>
     <formalpara>
      <title><literal>oldest+N</literal></title>
      <para>
       N番目に古いバージョン番号のカーネルを保持します。
      </para>
     </formalpara>
     <para>
      たとえば、次のように指定します。
     </para>
     <variablelist>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,running</literal>
       </term>
       <listitem>
        <para>
         最新バージョンのカーネルおよび現在実行しているカーネルを保持します。これはマルチバージョン機能を有効にしない場合に似ていますが、古いバージョンのカーネルが削除される時期が、インストールの直後ではなく、「次回のリブートの後」<emphasis></emphasis>である点が異なります。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,latest-1,running </literal>
       </term>
       <listitem>
        <para>
         最新とその次に新しいバージョンのカーネルおよび現在実行しているカーネルを保持します。
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal> multiversion.kernels = latest,running,<replaceable>5.3.18-53.3 </replaceable></literal>
       </term>
       <listitem>
        <para>
         最新バージョンのカーネル、現在実行しているカーネル、および<replaceable>5.3.18-53.3</replaceable>バージョンのカーネルを保持します。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
     <tip>
      <title>実行しているカーネルの保持</title>
      <para>
       特殊な設定を使用している場合を除き、<literal>running</literal>というマークの付いたカーネルは常に保持してください。
      </para>
      <para>
       実行しているカーネルを保持しない場合、カーネルは更新時に削除されます。つまり、実行しているカーネルのモジュールも削除され、ロードできなくなります。
      </para>
      <para>
       実行しているカーネルを保持しない場合は、必ずカーネルのアップグレード後すぐに再起動して、モジュールの問題が発生しないようにしてください。
      </para>
     </tip>
    </step>
   </procedure>
  </sect2>
  <sect2 xml:id="sec-tuning-multikernel-deleteoldkernel">
   <title>使用事例: 再起動後にのみ古いカーネルを削除する</title>
   <para>
    新規カーネルを使用して正常にシステムを再起動できてから、古いカーネルを削除するようにします。
   </para>
   <para>
    <filename>/etc/zypp/zypp.conf</filename>内の以下の行を変更します。
   </para>
<screen>multiversion.kernels = latest,running</screen>
   <para>
    前のパラメータは、最新のカーネル、および実行中のカーネル(最新でない場合のみ)を保持するようにシステムに指示します。
   </para>
  </sect2>

  <sect2 xml:id="sec-tuning-multikernel-fallback">
   <title>使用事例: 古いカーネルをフォールバックとして保持する</title>
   <para>
    1つ以上のバージョンのカーネルを保持し、<quote>スペア</quote>として保有しておきます。
   </para>
   <para>
    これは、テスト用のカーネルが必要な場合に役立ちます。何らかの問題が生じたとき(マシンが起動しないなど)、正常に動作していた1つ以上のバージョンのカーネルをまだ使用することができるためです。
   </para>
   <para>
    <filename>/etc/zypp/zypp.conf</filename>内の以下の行を変更します。
   </para>
<screen>multiversion.kernels = latest,latest-1,latest-2,running</screen>
   <para>
    新しいカーネルのインストール後にシステムを再起動する際、システムは3つのカーネルを保持します。現在のカーネル(<literal>latest,running</literal>として設定)と、その直前のカーネル2つ(<literal>latest-1</literal>および<literal>latest-2</literal>として設定)です。
   </para>
  </sect2>

  <sect2 xml:id="sec-tuning-multikernel-specificversion">
   <title>使用事例: 特定のバージョンのカーネルの保持</title>
   <para>
    通常、定期的にシステムアップデートを行い、新規バージョンのカーネルをインストールします。しかし、独自のバージョンのカーネルをコンパイルして、システムに保持させたい場合があります。
   </para>
   <para>
    <filename>/etc/zypp/zypp.conf</filename>内の以下の行を変更します。
   </para>
<screen>multiversion.kernels = latest,5.3.18-53.3,running</screen>
   <para>
    新規カーネルのインストール後にシステムを再起動するときに、システムは2つのカーネルを保存します。新規の実行中のカーネル（<literal>latest,running</literal>と設定)および独自でコンパイルしたカーネルl(<literal>5.3.18-53.3</literal>と設定)の2つです。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-tuning-multikernel-yast">
  <title>YaSTによる複数のカーネルバージョンのインストールと削除</title>
  <para>
   次の手順で、YaSTを使用して複数のカーネルをインストールまたは削除できます。
  </para>
  <procedure>
   <step>
    <para>
     YaSTを起動し、<menuchoice>
     <guimenu>ソフトウェア</guimenu> <guimenu>Software Management (ソフトウェア管理)</guimenu>
     </menuchoice>を選択してソフトウェアマネージャを開きます。
    </para>
   </step>
   <step>
    <para>
     <menuchoice> <guimenu>表示</guimenu> <guimenu>パッケージの分類</guimenu>
     <guimenu>複数バージョンのパッケージ</guimenu> </menuchoice>を選択して、複数のバージョンを提供できるすべてのパッケージを一覧表示します。
    </para>
    <figure>
     <title>YaSTソフトウェアマネージャ: マルチバージョン表示</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_sw_multiversion.png" width="90%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="yast2_sw_multiversion.png" width="90%"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     パッケージを選択し、そのパッケージの<guimenu>バージョン</guimenu>タブを下部ペインの左側で開きます。
    </para>
   </step>
   <step>
    <para>
     パッケージをインストールするには、そのパッケージの横のチェックボックスをクリックします。インストールの対象として選択されていることを示す緑色のチェックマークが表示されます。
    </para>
    <para>
     すでにインストール済みのパッケージ(白いチェックマークで表示)を削除するには、削除の対象として選択されていることを示す赤色の<literal>X</literal>が表示されるまで、そのパッケージの横のチェックボックスをクリックします。
    </para>
   </step>
   <step>
    <para>
     <guimenu>了解</guimenu>をクリックしてインストールを開始します。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-tuning-multikernel-zypper">
  <title>Zypperによる複数のカーネルバージョンのインストールと削除</title>
  <para>
   次の手順で、<command>zypper</command>を使用して複数のカーネルをインストールまたは削除できます。
  </para>
  <procedure>
   <step>
    <para>
     コマンド<command>zypper se -s &apos;kernel*&apos;</command>を使用して、存在するすべてのカーネルパッケージを一覧表示します。
    </para>
<screen><?dbsuse-fo font-size="7pt"?>

S  | Name                 | Type    | Version           | Arch   | Repository
---+----------------------+---------+-------------------+--------+------------------------------------------------------
i+ | kernel-default              | package | 5.14.21-150400.6.3              | x86_64 | SLE-Module-Basesystem15-SP4-Pool
   | kernel-default-base         | package | 5.14.21-150400.6.3.150400.22.27 | x86_64 | SLE-Module-Basesystem15-SP4-Pool
   | kernel-default-devel        | package | 5.14.21-150400.6.3              | x86_64 | SLE-Module-Basesystem15-SP4-Pool
   | kernel-devel                | package | 5.14.21-150400.6.4              | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-all         | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-amdgpu      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-ath10k      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-ath11k      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-atheros     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-bluetooth   | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-bnx2        | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-brcm        | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-chelsio     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-dpaa2       | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-i915        | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-intel       | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-iwlwifi     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-liquidio    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-marvell     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-media       | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-mediatek    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-mellanox    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-mwifiex     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-network     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-nfp         | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-nvidia      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-platform    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-prestera    | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-qcom        | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-qlogic      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-radeon      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-realtek     | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-serial      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-sound       | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-ti          | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-ueagle      | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
i  | kernel-firmware-usb-network | package | 20220119-150400.1.1             | noarch | SLE-Module-Basesystem15-SP4-Pool
   | kernel-macros               | package | 5.14.21-150400.6.4              | noarch | SLE-Module-Basesystem15-SP4-Pool
</screen>
   </step>
   <step>
    <para>
     インストールする場合は、次のように正確なバージョンを指定します。
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper in kernel-default-5.3.18-53.3</screen>
   </step>
   <step>
    <para>
     カーネルをアンインストールする場合は、コマンド<command>zypper se -si &apos;kernel*&apos;</command>を使用して、インストールされているすべてのカーネルを一覧表示し、<command>zypper rm </command> <replaceable>PACKAGENAME-VERSION</replaceable>を使用して、目的のパッケージを削除します。
    </para>
   </step>
  </procedure>
 </sect1>
 
</chapter>
