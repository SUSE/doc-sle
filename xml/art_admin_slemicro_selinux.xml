<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook50-profile.xsl"
                 type="text/xml"
                 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<article version="5.2" xml:id="article-selinux" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Security Guide</title>
 <info>
  <productnumber>&productnumber;</productnumber>
  <productname>&productname;</productname>
  <date><?dbtimestamp format="B d, Y"?></date>
  <meta name="task" its:translate="no">
   <phrase>Administration</phrase>
   <phrase>Security</phrase>
  </meta>
  <meta name="series" its:translate="no">Product Documentation</meta>

  <abstract>
   <para>
    This guide gives a brief overview of SELinux implementation on &slema;.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <section xml:id="sec-introduction-selinux">
  <title>Introduction to SELinux</title>
  <para>
   SELinux was developed as an additional Linux security solution that uses the
   security framework in the Linux kernel. The purpose was to allow for a more
   granular security policy that goes beyond the standard Discretionary Access
   Controls (DAC), the traditional file permissions of owner/group/world, and
   read/write/execute.
  </para>
  <para>
   SELinux uses labels attached to objects (for example, files and network
   sockets) and uses them for access decisions.
  </para>
  <para>
   The default action of SELinux is to deny any access. SELinux allows only
   actions that were specifically allowed in the SELinux policy. Another
   feature of SELinux that increases security is that SELinux allows strict
   confinement of processes up to the point where the processes cannot access
   files of other processes on the same system.
  </para>
  <para>
   SELinux was designed to enhance existing security solutions, not to replace
   them. For example, discretionary access control (DAC) is still applied even
   if the system is using SELinux. If DAC denies access first, SELinux is then
   not used as the access was already blocked by another mechanism.
  </para>
 </section>
 <section xml:id="sec-getting-selinux">
  <title>Getting SELinux</title>
  <para>
   SELinux is installed by default when installing &slema; by &yast; or is part
   of the pre-built images. In systems installed manually by &yast;, SELinux is
   in the <literal>disabled</literal> mode by default, and the file system is
   not labeled. If you deployed your system using the pre-built images, the
   SELinux mode is <literal>permissive</literal>, and the file system is
   labeled.
  </para>
  <para>
   To set the SELinux mode to <literal>enforcing</literal> and configure your
   system properly for using SELinux, run the following command:
  </para>
<screen>&prompt.root;transactional-update setup-selinux</screen>
  <para>
   Reboot your system after the command completes. The command installs the
   SELinux policy if it is not installed, sets the <literal>enforcing</literal>
   SELinux mode and rebuilds <literal>initrd</literal>.
  </para>
 </section>
 <section xml:id="sec-switching-modes">
  <title>SELinux modes</title>
  <para>
   SELinux can run in one of three modes: <literal>disabled</literal>,
   <literal>permissive</literal>, or <literal>enforcing</literal>.
  </para>
  <para>
   Using the <literal>disabled</literal> mode means that no rules from the
   SELinux policy are applied and your system is not protected. Therefore, the
   <literal>disabled</literal> mode is not recommended.
  </para>
  <para>
   In the <literal>permissive</literal> mode, SELinux is active, the security
   policy is loaded, the file system is labeled and access denial entries are
   logged. However, the policy is not enforced and thus no access is actually
   denied.
  </para>
  <para>
   In the <literal>enforced</literal> mode, the security policy is applied.
   Each access that is not explicitly allowed by the policy is denied.
  </para>
  <para>
   You can switch between the <literal>enforcing</literal> and
   <literal>permissive</literal> modes by using the
   <command>setenforce</command> command. Alternatively, you can switch between
   all SELinux modes by editing the <filename>/etc/selinux/config</filename>
   configuration file. Changes performed by the <command>setenforce</command>
   command are valid only until the next reboot. For persistent changes of the
   SELinux mode, edit the <filename>/etc/selinux/config</filename>
   configuration file.
  </para>
  <para>
   The <command>setenforce</command> command has the following syntax:
  </para>
<screen>&prompt.root;setenforce <replaceable>MODE_ID</replaceable></screen>
  <para>
   where <replaceable>MODE_ID</replaceable> is <replaceable>0</replaceable> for
   the <literal>permissive</literal> mode or <replaceable>1</replaceable> for
   the <literal>enforced</literal> mode.
  </para>
  <para>
   To verify the mode, run the following command:
  </para>
<screen>&prompt.root;getenforce</screen>
  <para>
   The command should return <literal>permissive</literal> or
   <literal>enforced</literal>, depending on the provided
   <replaceable>MODE_ID</replaceable>.
  </para>
  <para>
   To change the SELinux mode permanently, in the file
   <filename>/etc/selinux/config</filename> change the value of
   <literal>SELINUX</literal> to <literal>disabled</literal>, or
   <literal>permissive</literal>, or <literal>enforced</literal> as follows:
  </para>
<screen>SELINUX=disabled</screen>
  <para>
   The changes in the file are applied after next reboot.
  </para>
  <note>
   <title>Relabeling your system after switching from the <literal>disabled</literal> mode</title>
   <para>
    If you disable SELinux on your system and then enable it later, make sure
    that you relabel your system. When SELinux is disabled and you perform
    changes to your file system, the changes are not reflected in the context
    anymore (for example, new files do not have any context). Therefore, you
    need to relabel your system by using the <command>restorecon</command>
    command, using the <literal>autorelabel</literal> boot parameter, or by
    creating a file that will trigger relabeling on the next boot. To create
    the file, run the following command:
   </para>
<screen>&prompt.root;touch /etc/selinux/.autorelabel</screen>
   <para>
    After reboot, the file <filename>/etc/selinux/.autorelabel</filename> is
    replaced with another flag file:
    <filename>/etc/selinux/.relabelled</filename> to prevent relabeling on
    subsequent reboots.
   </para>
  </note>
 </section>
 <section xml:id="sec-policy-overview">
  <title>SELinux policy overview</title>
  <para>
   The policy is the key component in SELinux. Your SELinux policy defines
   rules that specify which objects can access which files, directories, ports,
   and processes on a system. To do this, a security context is defined for all
   of these.
  </para>
  <para>
   An SELinux policy contains a huge number of rules. To make it more
   manageable, policies are often split into modules. This allows the
   administrator to switch protection on or off for different parts of the
   system.
  </para>
  <para>
   When compiling the policy for your system, you will have a choice to either
   work with a modular policy, or a monolithic policy, where one huge policy is
   used to protect everything on your system. It is strongly recommended to use
   a modular policy and not a monolithic policy. Modular policies are much
   easier to manage.
  </para>
  <para>
   &slema; is shipped with the <literal>targeted</literal> SELinux policy.
  </para>
 </section>
 <section xml:id="sec-security-context">
  <title>SELinux security context</title>
  <para>
   The security context is a set of information assigned to a file or a
   process. It consists of SELinux user, role, type, level and category. This
   information is used to make access control decisions.
  </para>
  <variablelist>
   <title>SELinux context fields</title>
   <varlistentry>
    <term>SELinux user</term>
    <listitem>
     <para>
      is an identity defined in the policy that is authorized for a specific
      set of roles and for a specific <emphasis>level</emphasis> range. Each
      Linux user is mapped to an SELinux user. SELinux does not use the list of
      user accounts maintained by Linux in <filename>/etc/passwd</filename>,
      but uses its own database and mapping. By convention, the identity name
      is suffixed with <literal>_u</literal>, for example:
      <literal>user_u</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>role</term>
    <listitem>
     <para>
      defines a set of permissions that a user can be granted. A role defines
      which <emphasis>types</emphasis> a user assigned to this role can access.
      By convention, the role name is suffixed with <literal>_r</literal>, for
      example: <literal>system_r</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>type</term>
    <listitem>
     <para>
      conveys information on how particular files and processes can interact. A
      process consists of files with a concrete SELinux type, and it cannot
      access files outside of this type. By convention, the type name is
      suffixed with <literal>_t</literal>, for example:
      <literal>var_t</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>level</term>
    <listitem>
     <para>
      is an optional attribute that specifies the range of levels of clearance
      in the multilevel security.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>category</term>
    <listitem>
     <para>
      is an optional attribute that allows you to add categories to processes,
      files and users. A user can then access files that have the same
      category.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>
 <section xml:id="sec-managing-modes">
  <title>Tools for managing SELinux</title>
  <para>
   In the default deployment of &slema;, regardless of the deployment method,
   some of the commands for managing SELinux are not installed. To install the
   commands described bellow, run the following command:
  </para>
<screen>&prompt.root;transactional-update pkg install policycoreutils-python-utils</screen>
  <para>
   After successful installation and rebooting your system, you will be able to
   use the commands to manage your system.
  </para>
  <variablelist>
   <title>SELinux commands</title>
   <varlistentry>
    <term><command>chcon</command></term>
    <listitem>
     <para>
      changes the security context of provided files to the context provided to
      the command
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>getenforce</command></term>
    <listitem>
     <para>
      displays the current SELinux mode
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>fixfiles</command></term>
    <listitem>
     <para>
      enables you to check for issues with a mismatched security context and
      then fix them
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>ls -Z <replaceable>PATH</replaceable></command></term>
    <listitem>
     <para>
      shows security context of all files/directories in the specified
      <replaceable>PATH</replaceable>, for example:
     </para>
<screen>&prompt.root;ls -Z /
system_u:object_r:bin_t:s0 bin
system_u:object_r:boot_t:s0 boot
system_u:object_r:device_t:s0 dev
system_u:object_r:etc_t:s0  etc
system_u:object_r:home_root_t:s0 home
system_u:object_r:lib_t:s0 lib
system_u:object_r:lib_t:s0 lib64
system_u:object_r:mnt_t:s0 mnt
system_u:object_r:usr_t:s0 opt
system_u:object_r:proc_t:s0 proc
system_u:object_r:default_t:s0 root
system_u:object_r:var_run_t:s0 run
system_u:object_r:bin_t:s0 sbin
system_u:object_r:var_t:s0 srv
system_u:object_r:sysfs_t:s0 sys
system_u:object_r:tmp_t:s0 tmp
system_u:object_r:usr_t:s0 usr
system_u:object_r:var_t:s0 var
          </screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>restorecon</command></term>
    <listitem>
     <para>
      restores a file context to the default value (as stored in the SELinux
      policy)
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>semanage</command></term>
    <listitem>
     <para>
      enables you to adjust context and configure certain elements of SELinux
      policy. The command provides several subcommands; for details, use:
     </para>
<screen>&prompt.root;semanage --help</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>setenforce</command></term>
    <listitem>
     <para>
      enables you to temporarily set a SELinux mode to
      <literal>permissive</literal> or <literal>enforcing</literal>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>sestatus</command></term>
    <listitem>
     <para>
      displays the current status of SELinux, for example:
     </para>
<screen>&prompt.root;sestatus

SELinux status:               enabled
SElinuxfs mount:              /sys/fs/selinux
SELinux root directory:       /etc/selinux
Loaded policy name:           targeted
Current mode:                 enforcing
Mode from config file:        enforcing
Policy MLS status:            enabled
Policy deny_unknown status:   allowed
Memory protection checking:   requested (insecure)
Max kernel policy version:    31            
          </screen>
    </listitem>
   </varlistentry>
  </variablelist>
  <note>
   <title>The <literal>Z</literal> option available to other commands</title>
   <para>
    You can also use the <literal>Z</literal> option with other commands, for
    example: <command>cp, ps</command>, and <command>id</command>.
   </para>
  </note>
 </section>
</article>
