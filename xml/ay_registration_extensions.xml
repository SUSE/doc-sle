<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<sect1 version="5.0" xml:id="CreateProfile-Register" os="sles;sled"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>System Registration and Extension Selection</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <para>
    Registering the system with the registration server can be configured
    within the <literal>suse_register</literal> resource. The following example
    registers the system with the &scc;. In case your organization provides its
    own registration server, you need to specify the required data with the
    <literal>reg_server*</literal> properties. Refer to the table below for
    details.
   </para>

<screen>&lt;suse_register&gt;
  &lt;do_registration config:type="boolean"&gt;true&lt;/do_registration&gt;
  &lt;email&gt;&exampleuser_plain;@&exampledomain;&lt;/email&gt;
  &lt;reg_code&gt;<replaceable>MY_SECRET_REGCODE</replaceable>&lt;/reg_code&gt;
  &lt;install_updates config:type="boolean"&gt;true&lt;/install_updates&gt;
  &lt;slp_discovery config:type="boolean"&gt;false&lt;/slp_discovery&gt;
  &lt;--! optionally register some add-ons --&gt;
  &lt;addons config:type=&quot;list&quot;&gt;
    &lt;addon&gt;
      &lt;name&gt;sle-module-basesystem&lt;/name&gt;
      &lt;version&gt;&product-ga;.&product-sp;&lt;/version&gt;
      &lt;arch&gt;<replaceable>x86_64</replaceable>&lt;/arch&gt;
    &lt;/addon&gt;
  &lt;/addons&gt;
&lt;/suse_register&gt;
 </screen>

   <para>
    It is recommended to at least register the Basesystem Module to have
    access to the updates for the base system (the Linux kernel, the system
    libraries and services).
   </para>

   <para>
    As an alternative to the fully automated registration, &ay; can also
    be configured to start the &yast; registration module during the
    installation. This offers the possibility to enter the registration data
    manually. The following XML code is required:
   </para>

<screen>&lt;general&gt;
 &lt;semi-automatic config:type="list"&gt;
   &lt;semi-automatic_entry&gt;scc&lt;/semi-automatic_entry&gt;
 &lt;/semi-automatic&gt;
&lt;/general&gt;</screen>

   <tip>
    <title>Using the Installation Network Settings</title>
    <para>
     In case you need to use the same network settings that were used for
     the installation, &ay; needs to run the network setup in stage 1
     right before the registration is started:
    </para>
<screen>&lt;networking&gt;
  &lt;setup_before_proposal config:type="boolean"&gt;true&lt;/setup_before_proposal&gt;
&lt;/networking&gt;</screen>
   </tip>


   <variablelist>
    <title><literal>suse_register Values</literal></title>

    <varlistentry>
     <term>do_registration</term>
     <listitem>
       <para>
        Boolean
       </para>
<screen>&lt;do_registration config:type="boolean"&gt;true&lt;/do_registration&gt;</screen>
      <para>
       Specify whether the system should be registered or not. If set to
       <literal>false</literal> all other options are ignored and the system
       is not registered.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>e-mail</term>
     <listitem>
      <para>
       E-mail address
      </para>
<screen>&lt;email&gt;&exampleuser_plain;@&exampledomain;&lt;/email&gt;</screen>      
       <para>
        Optional. The e-mail address matching the registration code.
       </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>reg_code</term>
     <listitem>
      <para>
       Text
      </para>
<screen>&lt;reg_code&gt;<replaceable>SECRET_REGCODE</replaceable>&lt;/reg_code&gt;</screen>
       <para>
        Required. Registration code.
       </para>
       
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>install_updates</term>
     <listitem>
      <para>
       Boolean
      </para>
<screen>&lt;install_updates config:type="boolean"&gt;true&lt;/install_updates&gt;</screen>
       <para>
        Optional. Determines if updates from the Updates channels should be
        installed. The default value is to not install them (<literal>false</literal>).
       </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>slp_discovery</term>
     <listitem>
      <para>
       Boolean
      </para>
<screen>&lt;slp_discovery config:type="boolean"&gt;true&lt;/slp_discovery&gt;</screen>
       <para>
        Optional. Search for a registration server via SLP. The default value
        is <literal>false</literal>.
       </para>
       <para>
        Expects to find a single server. If more than one server is found,
        the installation will fail. In case there is more than one
        registration server available, you need to specify one with
        <literal>reg_server</literal>.
       </para>
       <para>
        If neither <literal>slp_discovery</literal> nor
        <literal>reg_server</literal> are set, the system is registered
        with the &scc;.
       </para>
       <para>
        This setting also affects the self-update feature: If it is disabled,
        no SLP search will be performed.
       </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>reg_server</term>
     <listitem>
      <para>
       URL
      </para>
<screen>&lt;reg_server&gt;https://smt.&exampledomain;&lt;/reg_server&gt;</screen>
       <para>
        Optional. &rmt; server URL. If neither <literal>slp_discovery</literal>
        nor <literal>reg_server</literal> are set, the system is registered with
        the &scc;.
       </para>
       <para>
        The &rmt; server is queried for a URL of the self-update repository. So
        if <literal>self_update_url</literal> is not set, the &rmt; server
        influences where the self-updates are downloaded from. Check the &deploy;
        to find further information about this feature.
       </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>reg_server_cert_fingerprint_type</term>
     <listitem>
      <para>
       <literal>SHA1</literal> or <literal>SHA256</literal>
      </para>
  <screen>&lt;reg_server_cert_fingerprint_type&gt;SHA1&lt;/reg_server_cert_fingerprint_type&gt;</screen>
       <para>
        Optional. Requires a checksum value provided with
        <literal>reg_server_cert_fingerprint</literal>. Using the fingerprint is
        recommended, since it ensures the SSL certificate is verified. The
        matching certificate will be automatically imported when the SSL
        communication fails because of a verification error.
       </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>reg_server_cert_fingerprint</term>
     <listitem>
      <para>
       Server Certificate Fingerprint value in hexadecimal notion (case-
       insensitive).
      </para>
<screen>&lt;reg_server_cert_fingerprint&gt;<replaceable>01:AB...:EF</replaceable>&lt;/reg_server_cert_fingerprint&gt;</screen>
       <para>
        Optional. Requires a fingerprint type value provided with
        <literal>reg_server_cert_fingerprint_type</literal>. Using the
        fingerprint is recommended, since it ensures the SSL certificate is
        verified. The matching certificate will be automatically imported when
        SSL communication fails because of a verification error.
       </para>
       
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>reg_server_cert</term>
     <listitem>
      <para>
       URL
      </para>
<screen>&lt;reg_server_cert&gt;http://smt.&exampledomain;/smt.crt&lt;/reg_server_cert&gt;</screen>
       <para>
        Optional. URL of the SSL certificate on the server. Using this option is
        not recommended, since the certificate that is downloaded is not
        verified. Use <literal>reg_server_cert_fingerprint</literal> instead.
       </para>
     </listitem>
    </varlistentry>
    
    <varlistentry os="sles;sled">
     <term>addons</term>
     <listitem>
      <para>
       Add-ons list
      </para>
      <para>
       Specify an extension from the registration server that should be
       added to the installation repositories. See
       <xref linkend="CreateProfile-Register-Extension"/> for details.
      </para>
     </listitem>
    </varlistentry>
    
   </variablelist>

   <tip>
    <title>Obtaining a Server Certificate Fingerprint</title>
    <para>
     To obtain a server certificate fingerprint for use with
     the <literal>reg_server_cert_fingerprint</literal> entry, run the
     following command on the &smt; server (edit the default path to the
     <filename>smt.crt</filename> file, if needed):
    </para>
<screen>openssl x509 -noout -in /srv/www/htdocs/smt.crt -fingerprint -sha256</screen>
    <para>
     To retrieve a fingerprint from the &smt; server, use the following
     command:
    </para>
<screen>curl --insecure -v https://scc.suse.com/smt.crt 2> /dev/null | openssl
x509 -noout -fingerprint -sha256</screen>
     <para>
     Replace <literal>scc.suse.com</literal> with your server.
    </para>
    <para>
     <emphasis>Note:</emphasis> This can be used in a trusted network only!
     In a non-trusted network, for example the Internet, you should get the
     fingerprint directly from the server by other means. Fingerprints can
     be fetched via SSH, a saved server configuration and other sources.
     Alternatively, you can  verify that the downloaded certificate is identical
     on the server.
    </para>
   </tip>

   <sect2 xml:id="CreateProfile-Register-Extension" os="sles;sled">
    <title>Extensions</title>
    <para>
     The &scc; provides several extensions, such as
     <literal>sle-module-development-tools</literal> (Development Tools Module)
     that can be included as additional sources during the installation.
     Extensions can be added via the <literal>addons</literal> property within
     the <literal>suse_register</literal> block.
     <!-- Below is a list of all extensions available for &productname;
          on x86_64: -->
    </para>
    <note>
     <title>Availability of Extensions</title>
     <para>
      The availability of extensions is product and architecture dependent,
      not all extensions are available on all architectures.
      <!-- All listed extensions are available for &sls; on the x86_64
           architecture. -->
     </para>
     <para>
      Some extensions, such as <literal>sle-ha</literal>,
      require a registration code.
      Depending on your subscription, either use a dedicated registration code
      for the extension, or restate the code for the base product.
     </para>
    </note>

    <para>
     With <command>SUSEConnect --list-extensions</command> you can list all
     available extensions in a registered system. The result contains lines like:
    </para>
    <screen>Install with: SUSEConnect -p sle-module-development-tools/&product-ga;.&product-sp;/x86_64</screen>
    <para>
     The <option>-p</option> argument displays the
     <replaceable>NAME/VERSION/ARCH</replaceable> values that can be
     used in the &ay; profile as follows:
    </para>
    <screen><![CDATA[<addons config:type="list">
 <addon>
  <!-- Development Tools Module -->
  <name>sle-module-development-tools</name>
  <version>15.2</version>
  <arch>x86_64</arch>
 </addon>
</addons>]]></screen>

<note>
 <title>Extension Dependencies</title>
 <para>
   Since &slsa; 15, &ay; automatically reorders the extensions according to
   their dependencies during registration. This means the order of the
   extensions in the &ay; profile is not important.
 </para>
 <para>
   Also &ay; automatically registers the dependent extensions even though
   they are missing in the profile. This means you are not required to fill
   the extensions list completely.
 </para>
 <para>
   However, if the dependent extension requires a registration key, this must
   be specified in the profile, including the registration key. Otherwise the
   registration would fail.
 </para>
  <para>
   Architecture and version of an extension are not mandatory. The registration
   workflow will evaluate the right one.
 </para> 
</note>

    <para>
     For background information and add-on listings for &slsa; see <link
     xlink:href="https://github.com/yast/yast-registration/wiki/Available-SCC-Extensions-for-Use-in-Autoyast"/>.
     The listings will get updated from time to time.
    </para>
   </sect2>
  </sect1>
