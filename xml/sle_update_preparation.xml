<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha-update-preparation"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Preparing the upgrade</title>
 <info>
  <abstract>
   <para>
    Before starting the upgrade procedure, make sure your system is properly
    prepared. Among other things, preparation involves backing up data and
    checking the release notes. The following chapter guides you through these
    steps.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <remark>jufa 2021-02-09: suggestion to give this chapter a facelift:
 Chapter 3: Preparing the upgrade - Intro - Procedure w check system version,
 release notes, back-up, listing packages, create proposal</remark>
 <sect1 os="slemicro" xml:id="sec-update-paths">
    <title>&slema; upgrade paths</title>
    <para>
    Currently you cannot skip a release when performing upgrade of &slema;. You can upgrade your system only to the subsequent release, for example from 5.0 to 5.1 and then to 5.2.
 </para>
 </sect1>

 <sect1 xml:id="sec-update-preparation-update">
  <title>Make sure the system is up-to-date</title>

  <para os="sles;sled">
   <remark>jufa 2021-02-09: add what to do if the system is older? check what
    is meant with patch level. check if update path is supported,
    link to sec-upgrade-path-supported</remark>
   Upgrading the system is only supported from the most recent patch level.
   Make sure the latest system updates are installed by
   <phrase os="sles;sled">either</phrase> running <command>zypper
   patch</command><phrase os="sles;sled"> or by starting the &yast; module
   <guimenu>Online-Update</guimenu></phrase>.
  </para>

  <para os="slemicro">
   Upgrading the system is only supported from the most recent patch level.
   Make sure the latest system updates are installed by running:
  </para>

<screen os="slemicro">
  &prompt.root;transactional-update patch
  </screen>
 </sect1>
 <sect1 xml:id="sec-update-preparation-relnotes">
  <title>Read the release notes</title>

  <para>
   Find a list of all changes, new features, and known issues in the
   <link xlink:href="https://www.suse.com/releasenotes/">release notes</link>.
   You can also find the release notes on the installation media in the
   <filename>docu</filename> directory.
  </para>

  <para>
   The release notes usually only contain the changes between two subsequent
   releases. <phrase os="sles;sled">If you are skipping one or more Service
   Packs, check the release notes of the skipped Service Packs as
   well.</phrase>
  </para>

  <para>
   Consult the release notes to check whether the following applies:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Your hardware needs special considerations
    </para>
   </listitem>
   <listitem>
    <para>
     Any currently used software packages have changed significantly
    </para>
   </listitem>
   <listitem>
    <para>
     Your installation requires special precautions
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec-update-preparation-backup">
  <title>Make a backup</title>

  <para>
   Before upgrading, back up your data by copying the existing configuration
   files to a separate medium (such as tape device, removable hard disk, etc.).
   This primarily applies to files stored in <filename>/etc</filename> and some
   directories and files in <filename>/var</filename> and
   <filename>/opt</filename>. You may also want to write the user data in
   <filename>/home</filename> (the <envar>HOME</envar> directories) to a backup
   medium.
  </para>

  <para>
   Back up all data as &rootuser;. Only &rootuser; has sufficient permissions
   for all local files.
  </para>

  <para os="sles;sled">
   <remark>jufa 2021-02-09: check if backup function still exists and how it
    works. rework para accordingly: alternative for data back up</remark>
   If you have selected <guimenu>Update an Existing System</guimenu> as the
   installation mode in &yast;, you can choose to do a (system) backup at a
   later point in time. You can choose to include all modified files and files
   from the <filename>/etc/sysconfig</filename> directory. However, this is not
   a complete backup, as all the other important directories mentioned above
   are missing. Find the backup in the <filename>/var/adm/backup</filename>
   directory.
  </para>
 </sect1>
 <sect1 xml:id="sec-update-preparation-disk">
  <title>Check the available disk space</title>

  <para>
   Software tends to grow from version to version. Therefore, take a look at
   the available partition space before updating. If you suspect you are
   running short of disk space, back up your data before increasing the
   available space by resizing partitions, for example. There is no general
   rule regarding how much space each partition should have. Space requirements
   depend on your particular partitioning profile and the software selected.
  </para>

  <note os="sles;sled">
   <title>Automatic check for enough space in &yast;</title>
   <para>
    During the update procedure, &yast; will check how much free disk space is
    available and display a warning to the user if the installation may exceed
    the available amount. In that case, performing the update may lead to an
    <emphasis>unusable system</emphasis>! Only if you know exactly what you are
    doing (by testing beforehand), you can skip the warning and continue the
    update.
   </para>
  </note>

  <sect2 os="sles;sled" xml:id="sec-update-preparation-disk-space">
   <title>Checking disk space on non-Btrfs file systems</title>
   <para>
    Use the <command>df</command> command to list available disk space. For
    example, in <xref linkend="ex-update-df"/>, the root partition is
    <filename>/dev/sda3</filename> (mounted as <filename>/</filename>).
   </para>
   <example xml:id="ex-update-df">
    <title>List with <command>df -h</command></title>
    <screen os="sled">Filesystem     Size  Used Avail Use% Mounted on
     /dev/sda3       74G   22G   53G  29% /
     tmpfs          506M     0  506M   0% /dev/shm
     /dev/sda5      116G  5.8G  111G   5% /home
     /dev/sda1       39G  1.6G   37G   4% /windows/C
     /dev/sda2      4.6G  2.6G  2.1G  57% /windows/D</screen>
    <screen os="sles">Filesystem     Size  Used Avail Use% Mounted on
     /dev/sda3       74G   22G   53G  29% /
     tmpfs          506M     0  506M   0% /dev/shm
     /dev/sda5      116G  5.8G  111G   5% /home
     /dev/sda1       44G    4G   40G   9% /data</screen>
   </example>
  </sect2>

  <sect2 xml:id="sec-update-preparation-disk-btrfs-on-root">
   <title>Checking disk space on Btrfs root file systems</title>
   <!--
    taroth 2019-05-06: the following two paras are copied from
    storage_filesystem.xml, sec.filesystems.major.btrfs.suse.space,
    TODO - for next release, consider moving the content of the above Storage
    Guide section to a phrases entity and re-using it here, as the pointer to
    the Storage Guide only works for SLES, not for SLED
   -->
   <para>
    On a Btrfs file system, the output of <command>df</command> can be
    misleading, because in addition to the space the raw data allocates, a
    Btrfs file system also allocates and uses space for metadata.
   </para>
   <para>
    Consequently a Btrfs file system may report being out of space even though
    it seems that plenty of space is still available. In that case, all space
    allocated for the metadata is used up. <phrase os="sles">For details on how
     to check for used and available space on a Btrfs file system, see
     <xref
      linkend="sec-filesystems-major-btrfs-suse-space"/>.</phrase> For
    more information refer to <phrase os="sles;sled"><command>man 8
     btrfs-filesystem</command> and
    </phrase><link xlink:href="https://btrfs.wiki.kernel.org/index.php/FAQ"/>.
   </para>
   <!-- lproven: It would be good to profile the next para for SLE Micro, as Btrfs is not
    optional there -->
   <para os="sles;sled">
    When using Btrfs for root file systems on your machine, make sure there is
    enough free space. Check the available space on all mounted partitions. In
    the worst case, an upgrade needs as much disk space as the current root
    file system (without <filename>/.snapshot</filename>) for a new snapshot.
   </para>
   <para os="slemicro">
    Make sure there is enough free space as the root file system uses Btrfs and
    might consume significant amount of space. Check the available space on all
    mounted partitions. In the worst case, an upgrade needs as much disk space
    as the current root file system (without <filename>/.snapshot</filename>)
    for a new snapshot.
   </para>
   <para>
    The following recommendations have been proven:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      For all file systems, including Btrfs, you need enough free disk space to
      download and install big RPMs. The space of old RPMs is only freed after
      new RPMs are installed.
     </para>
    </listitem>
    <listitem>
     <para>
      For Btrfs with snapshots, you need as a minimum as much free space as
      your current installation takes. We recommend having twice as much free
      space as the current installation.
     </para>
     <para>
      If you do not have enough free space, you can try to delete old snapshots
      with <command>snapper</command>:
     </para>
     <screen>&prompt.root;<command>snapper</command> list
      &prompt.root;<command>snapper</command> delete NUMBER</screen>
     <para>
      However, this may not help in all cases. Before migration, most snapshots
      occupy only little space.
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-update-preparation-packagelist">
  <title>Listing installed packages and repositories</title>

  <para>
   <remark>jufa 2021-02-08: explain importance and purposeof this list.
    Clarify if requirement or suggestion?
    Used for reverting changes or to set-up new system?</remark>
   You can save a list of installed packages; for example, when doing a fresh
   install of a new major &slea; release or reverting to the old version.
  </para>

  <note>
   <para>
    <remark>jufa: check if manual editing is still relevant 2021-02-09</remark>
    Be aware that not all installed packages or used repositories are available
    in newer releases of &sle;. Some may have been renamed and others replaced.
    It is also possible that some packages are still available for legacy
    purposes while another package is used by default. Therefore, some manual
    editing of the files might be necessary. This can be done with any text
    editor.
   </para>
  </note>

  <procedure>
   <step>
    <para>
     Create a file named <filename>repositories.bak.repo</filename> containing
     a list of all used repositories:
    </para>
<screen>&prompt.root;<command>zypper</command> lr -e repositories.bak</screen>
   </step>
   <step>
    <para>
     Also create a file named <filename>installed-software.bak</filename>
     containing a list of all installed packages:
    </para>
<screen>&prompt.root;<command>rpm</command> -qa --queryformat '%{NAME}\n' >
     installed-software.bak</screen>
   </step>
   <step>
    <para>
     Back up both files. The repositories and installed packages can be
     restored with the following commands:
    </para>
<screen os="sles;sled">&prompt.root;<command>zypper</command> ar repositories.bak.repo
&prompt.root;<command>zypper</command> install $(cat installed-software.bak)
</screen>
<screen os="slemicro">
&prompt.root;<command>zypper</command> ar repositories.bak.repo
&prompt.root;<command>transactional-update pkg install</command> $(cat installed-software.bak)
</screen>
    <note os="sles;sled" xml:id="note-update-prep-backup-package-amount">
     <title>Number of packages increases with an update to a new major release</title>
     <para>
      A system upgraded to a new major version (&slea;&nbsp;<replaceable>X+1</replaceable>) may
      contain more packages than the initial system (&slea;&nbsp;<replaceable>X</replaceable>). It
      will also contain more packages than a fresh installation of
      &slea;&nbsp;<replaceable>X+1</replaceable> with the same pattern selection.  Reasons for this
      are:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        Packages were split to allow a more fine-grained package selection. For
        example, 37 <package>texlive</package> packages on &slea; 11 were split
        into over 3000 packages on &slea; 15.
       </para>
      </listitem>
      <listitem>
       <para>
        When a package has been split, all new packages are installed in the
        upgrade case to retain the same functionality as the previous
        version. However, the new default for a fresh installation of
        &slea;&nbsp;<replaceable>X+1</replaceable> may be to not install all
        packages.
       </para>
      </listitem>
      <listitem>
       <para>
        Legacy packages from &slea;&nbsp;<replaceable>X</replaceable> may be kept
        for compatibility reasons.
       </para>
      </listitem>
      <listitem>
       <para>
        Package dependencies and the scope of patterns may have changed.
       </para>
      </listitem>
     </itemizedlist>
    </note>
    <note os="slemicro">
     <title>Number of packages increases with an update to a new release</title>
     <para>
      A system upgraded to a new (minor or major) version may contain more
      packages than the initial system. It could also contain more packages
      than a fresh installation of the new &slema; with the same pattern
      selection. Reasons for this are:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        Packages were split to allow a more fine-grained package selection.
       </para>
      </listitem>
      <listitem>
       <para>
        When a package has been split, all new packages are installed in the
        upgrade case to retain the same functionality as with the previous
        version. However, the new default for a fresh installation of &slema;
        new versions may be to not install all packages.
       </para>
      </listitem>
      <listitem>
       <para>
        Legacy packages from the initial &slema; may be kept for compatibility
        reasons.
       </para>
      </listitem>
      <listitem>
       <para>
        Package dependencies and the scope of patterns may have changed.
       </para>
      </listitem>
     </itemizedlist>
    </note>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-update-preparation-ltss">
  <title>Disable the LTSS extension</title>
  <para>
   If you upgrade a &productname; system with Long Term Service Pack Support
   (LTSS) to a version that is still under general support, the upgrade will
   fail with the error <literal>No migration available</literal>. This happens
   because <command>zypper migration</command> tries to migrate
   <emphasis>all</emphasis> repositories, but there is no LTSS repository for
   the new version yet.
  </para>
  <para>
   To fix this issue, disable the LTSS extension before the upgrade.
  </para>
  <procedure>
   <step>
    <para>
     Check if the LTSS extension is enabled:
    </para>
<screen>&prompt.sudo;SUSEConnect --list-extensions | grep LTSS
SUSE Linux Enterprise Server LTSS 12 SP4 x86_64 (Installed)
Deactivate with: SUSEConnect -d -p SLES-LTSS/12.4/x86_64</screen>
   </step>
   <step>
    <para>
     Disable the LTSS extension with the command from the
     <command>SUSEConnect</command> output above:
    </para>
<screen>&prompt.sudo;SUSEConnect -d -p SLES-LTSS/12.4/x86_64
Deregistered SUSE Linux Enterprise Server LTSS 12 SP4 x86_64
To server: &sccurl;</screen>
   </step>
   <step>
    <para>
     Verify the LTSS repository is no longer present with
     <command>zypper lr</command>.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 os="sles" xml:id="sec-update-preparation-versions">
  <title>Perform version-specific upgrade steps</title>
  <para>
   Depending on the &sle; version you upgrade from, you need to perform
   different additional tasks. The following sections provide an overview of
   version-specific upgrade steps.
  </para>
  <sect2 xml:id="sec-update-preparation-sle11">
   <title>Upgrading from &productname; 11 SP4</title>

   <important>
    <title>Direct upgrades from &productnameshort;&nbsp;11 to &productnameshort;&nbsp;&productnumber; are no longer supported</title>
    <para>
     As of &productnameshort;&nbsp;15 SP4, upgrading from
     &productnameshort;&nbsp;11 directly is no longer supported. For details
     about this upgrade, refer to <xref linkend="vl-update-paths-supported"/>.
    </para>
   </important>

   <para>
    If you are using &postgresql;, MySQL, or Java MD5-based certificates on
    &productname; 11 SP4, prepare your system as described in the following
    sections. In addition, make sure to check the other sections of this chapter
    for further necessary preparations.
   </para>

   <sect3 xml:id="sec-update-preparation-sle11-postgresql">
    <title>Migrate your &postgresql; database</title>
    <!-- This section is here for ID compatibility with old (15 SP2 and below)
     documents & because you if you're upgrading from SLE 11, you definitely
     will need the update, whereas on other OS's the upgrade is probably still
     optional. -->
    <para>
     If you are using a &postgresql; database on &productname; 11, you need to
     upgrade your database. For more information, see
     <xref linkend="sec-update-preparation-postgresql"/>.
    </para>
   </sect3>

   <sect3 xml:id="sec-update-preparation-sle11-mariadb">
    <title>Migrate your MySQL database</title>
    <para>
     If you are using a MySQL database on &productname; 11, you need to
     upgrade your database. As of &sle; 12, &suse; switched from MySQL to
     &mariadb;. Before you start any upgrade, it is highly recommended to back
     up your database. For more information, see
     <xref linkend="sec-update-preparation-mariadb"/>.
    </para>
   </sect3>

   <sect3 xml:id="sec-update-preparation-sle11-ssl">
    <title>Create non-MD5 server certificates for Java applications</title>
    <remark>toms 2016-07-27: from bsc#970153, c#24</remark>
    <remark>jufa 2021-02-09: FIXME check if still relevant, check which versions are affected</remark>
    <remark>cwickert-2022-07-07: Change occurred during the upgrade from
     java-1_8_0-openjdk-1.8.0.65-1.13 to java-1_8_0-openjdk-1.8.0.72-3.2, means
     for SLES it happened between SLES 12 GA and SP1. So still relevant.
    </remark>
    <para>
     As a security measure, MD5-based certificates are no longer supported in
     Java. If you have certificates created as MD5, follow the steps in
     <xref linkend="sec-update-preparation-ssl"/> to re-create them.
    </para>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-update-preparation-sle12">
   <title>Upgrading from &productname; 12 SP5</title>

   <para>
    If you are using &postgresql;, &mariadb;, or Java MD5-based certificates on
    &productname; 12 SP5, prepare your system as described in the following
    sections. In addition, make sure to check the other sections of this chapter
    for further required preparations.
   </para>

   <sect3 xml:id="sec-update-preparation-sle12-postgresql">
    <title>Migrate your &postgresql; database</title>
    <para>
     If you are using a &postgresql; database on &productname; 12, you need to
     upgrade your database. For more information, see
     <xref linkend="sec-update-preparation-postgresql"/>.
    </para>
   </sect3>

   <sect3 xml:id="sec-update-preparation-sle12-mariadb">
    <title>Migrate your &mariadb; database</title>
    <para>
     If you are using a &mariadb; database on &productname; 12, you need to
     upgrade your database. For more information, see
     <xref linkend="sec-update-preparation-mariadb"/>.
    </para>
   </sect3>

   <sect3 xml:id="sec-update-preparation-sle12-ssl">
    <title>Create non-MD5 server certificates for Java applications</title>
    <remark>toms 2016-07-27: from bsc#970153, c#24</remark>
    <remark>jufa 2021-02-09: FIXME check if still relevant, check which versions are affected</remark>
    <remark>cwickert-2022-07-07: Change occurred during the upgrade from
     java-1_8_0-openjdk-1.8.0.65-1.13 to java-1_8_0-openjdk-1.8.0.72-3.2, means
     for SLES it happened between SLES 12 GA and SP1. So still relevant.
    </remark>
    <para>
     As a security measure, MD5-based certificates are no longer supported in
     Java. If you have certificates created as MD5, follow the steps in
     <xref linkend="sec-update-preparation-ssl"/> to re-create them.
    </para>
   </sect3>
  </sect2>
 </sect1>

 <sect1 os="sles" xml:id="sec-update-preparation-postgresql">
  <title>Migrate your &postgresql; database</title>

  <para>
   <!-- jsc#SLE-17033: PostgreSQL 14 is available in 15 SP4 and higher. -->
   &productname; &productnumber; ships with the &postgresql; database versions
   14 and 15.
   <!-- FIXME cwickert 2022-05-05: v14 is default in SLE 15 SP4, make sure
    this gets updated if we change the default in a later version or SP. -->
   While version 15 is the default, version 14 is still provided through the
   <literal>Legacy</literal> module for upgrades from earlier versions of
   &productname;.
  </para>

  <para>
   Because of the required migration work of the database, there is no
   automatic upgrade process. As such, the switch from one version to another
   needs to be performed manually.
  </para>

  <para>
   The migration process is conducted by the <command>pg_upgrade</command>
   command, which is an alternative method of the classic dump and reload. In
   comparison with the <quote>dump and reload</quote> method,
   <command>pg_upgrade</command> makes the migration less time-consuming.
  </para>

  <para>
   The program files for each &postgresql; version are stored in different,
   version-dependent directories. For example, in
   <filename>/usr/lib/postgresql96/</filename> for version 9.6, in
   <filename>/usr/lib/postgresql10/</filename> for version 10, and in
   <filename>/usr/lib/postgres13/</filename> for version 13. Note that the
   versioning policy of &postgresql; has changed between the major versions 9.6
   and 10. For details, see
   <link
   xlink:href="https://www.postgresql.org/support/versioning/"/>.
  </para>

  <important>
   <title>Upgrading from &slea; 11</title>
   <para>
    When upgrading from &slea; 11, <systemitem>postgresql94</systemitem> will
    be uninstalled and cannot be used for the database migration to a higher
    &postgresql; version. Therefore, in this case, make sure to migrate the
    &postgresql; database <emphasis>before</emphasis> you upgrade your system.
   </para>
  </important>

  <para>
   The procedure below describes the database migration from version 12 to 13.
   When using a different version as start or target, replace the version
   numbers accordingly.
  </para>

  <para>
   To perform the database migration, do the following:
  </para>

  <procedure>
   <step>
    <para>
     Make sure the following preconditions are fulfilled:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       If not already done, upgrade any package of the old &postgresql; version
       to the latest release through a maintenance update.
      </para>
     </listitem>
     <listitem>
      <para>
       Create a backup of your existing database.
      </para>
     </listitem>
     <listitem>
      <para>
       Install the packages for the new &postgresql; major version. For &slea;
       &product-ga; SP&product-sp;, this means installing
       <package>postgresql13-server</package> and all the packages it depends
       on.
      </para>
     </listitem>
     <listitem>
      <para>
       Install the package <package>postgresql13-contrib</package>, which
       contains the command <command>pg_upgrade</command>.
      </para>
     </listitem>
     <listitem>
      <para>
       Make sure you have enough free space in your &postgresql; data area,
       which is <filename>/var/lib/pgsql/data</filename> by default. If space
       is tight, try to reduce size with the following SQL command on each
       database (can take a long time!):
      </para>
<screen>VACUUM FULL</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     Stop the &postgresql; server with either:
    </para>
<screen>&prompt.root;<command>/usr/sbin/rcpostgresql</command> stop</screen>
    <para>
     or
    </para>
<screen>&prompt.root;systemctl stop postgresql.service</screen>
    <para>
     (depending on the &slea; version you are using as the start version for your
     upgrade).
    </para>
   </step>
   <step>
    <para>
     Rename your old data directory:
    </para>
<screen>&prompt.root;<command>mv</command> /var/lib/pgsql/data /var/lib/pgsql/data.old</screen>
   </step>
   <step>
    <para>
     Initialize your new database instance either manually with
     <command>initdb</command> or by starting and stopping PostgreSQL, which
     will do it automatically:
    </para>
<screen>&prompt.root;<command>/usr/sbin/rcpostgresql</command> start
&prompt.root;<command>/usr/sbin/rcpostgresql</command> stop</screen>
    <para>
     or
    </para>
<screen>&prompt.root;systemctl start postgresql.service
&prompt.root;systemctl stop postgresql.service</screen>
    <para>
     (depending on the &slea; version you are using as the start version for your
     upgrade).
    </para>
   </step>
   <step>
    <para>
     If you have changed your configuration files in the old version, consider
     transferring these changes to the new configuration files. This may affect
     the files <filename>postgresql.auto.conf</filename>,
     <filename>postgresql.conf</filename>,<filename>pg_hba.conf</filename> and
     <filename>pg_ident.conf</filename>. The old versions of these files are
     located in <filename>/var/lib/pgsql/data.old/</filename>, and the new versions
     can be found in <filename>/var/lib/pgsql/data</filename>.
    </para>
    <para>
     Note that copying the old configuration files is not recommended, because
     this may overwrite new options, new defaults and changed comments.
    </para>
   </step>
   <step>
    <para>
     Start the migration process as user
     <systemitem
     class="username">postgres</systemitem>:
    </para>
<screen>&prompt.root;su - postgres
postgres &gt; <command>pg_upgrade</command> \
 --old-datadir "/var/lib/pgsql/data.old" \
 --new-datadir "/var/lib/pgsql/data" \
 --old-bindir "/usr/lib/postgresql12/bin/" \
 --new-bindir "/usr/lib/postgresql13/bin/"</screen>
   </step>
   <step>
    <para>
     Start your new database instance with either:
    </para>
<screen>&prompt.root;<command>/usr/sbin/rcpostgresql</command> start</screen>
    <para>
     or
    </para>
<screen>&prompt.root;systemctl start postgresql.service</screen>
    <para>
     (depending on the &slea; version you are using as the start version for your
     upgrade).
    </para>
   </step>
   <step>
    <para>
     Check if the migration was successful. The scope of the test depends on
     your use case, and there is no general tool to automate this step.
    </para>
   </step>
   <step>
    <para>
     Remove any old &postgresql; packages and your old data directory:
    </para>
<screen>&prompt.root;<command>zypper</command> search -s postgresql12| xargs zypper rm -u
&prompt.root;<command>rm</command> -rf /var/lib/pgsql/data.old</screen>
   </step>
  </procedure>

  <para>
   For more information about upgrading databases or using alternative methods
   such as logical replication, refer to the official &postgresql;
   documentation at
   <link xlink:href="https://www.postgresql.org/docs/13/upgrading.html"/>.
  </para>
 </sect1>

 <sect1 os="sles" xml:id="sec-update-preparation-mariadb">
  <title>Migrate your MySQL or &mariadb; database</title>
  <remark>toms 2015-09-03: already reviewed by Ondrej and Kristýna.</remark>
  <para>
   As of &sle; 12, &suse; switched from MySQL to MariaDB. Before you start any
   upgrade, it is highly recommended to back up your database.
  </para>
  <para>
   To perform the database migration, do the following:
  </para>
  <procedure>
   <step>
    <para>
     Create a dump file:
    </para>
    <remark>cwickert 2022-07-07: '--add-drop-database' is required for <link
     xlink:href="https://bugzilla.suse.com/show_bug.cgi?id=1166786">BSC#1166786</link>.</remark>
    <screen>&prompt.root;<command>mysqldump</command> -u root -p --all-databases --add-drop-database > mysql_backup.sql</screen>
    <para>
     By default, <command>mysqldump</command> does not dump the
     <literal>INFORMATION_SCHEMA</literal> or
     <literal>performance_schema</literal> database. For more details refer to
     <link xlink:href="https://mariadb.com/kb/en/mariadb-dumpmysqldump/"/>.
    </para>
   </step>
   <step>
    <para>
     Store your dump file, the configuration file
     <filename>/etc/my.cnf</filename>, and the directory
     <filename>/etc/mysql/</filename> for later investigation
     (<emphasis>not</emphasis> installation!) in a safe place.
    </para>
   </step>
   <step>
    <para>
     Perform the &productname; upgrade. After the upgrade, your former
     configuration file <filename>/etc/my.cnf</filename> will still be intact.
     You can find the new configuration in the file
     <filename>/etc/my.cnf.rpmnew</filename>.
    </para>
   </step>
   <step>
    <para>
     Configure your MariaDB database to your needs. Do
     <emphasis>not</emphasis> use the former configuration file and directory,
     but use it as a reminder and adapt it.
    </para>
   </step>
   <step>
    <para>
     Make sure you start the MariaDB server:
    </para>
    <screen>&prompt.root;<command>systemctl</command> start mariadb</screen>
    <para>
     If you want to start the MariaDB server on every boot, enable the
     service:
    </para>
    <screen>&prompt.root;<command>systemctl</command> enable mariadb</screen>
   </step>
   <step>
    <para>
     Verify that MariaDB is running properly by connecting to the database:
    </para>
    <screen>&prompt.root;<command>mariadb</command> -u root -p</screen>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec-update-preparation-ssl">
  <title>Create non-MD5 server certificates for Java applications</title>
  <remark>toms 2016-07-27: from bsc#970153, c#24</remark>
  <remark>jufa 2021-02-09: FIXME check if still relevant, check which versions are affected</remark>
  <para>
   As a security measure, MD5-based certificates are no longer supported in
   Java. If you have certificates created as MD5, re-create your certificates
   with the following steps:
  </para>
  <procedure>
   <step>
    <para>
     Open a terminal and log in as &rootuser;.
    </para>
   </step>
   <step>
    <para>
     Create a private key:
    </para>
    <screen>&prompt.root;<command>openssl</command> genrsa -out server.key 1024</screen>
    <para>
     If you want a stronger key, replace <literal>1024</literal> with a higher
     number, for example, <literal>4096</literal>.
    </para>
   </step>
   <step>
    <para>
     Create a certificate signing request (CSR):
    </para>
    <screen>&prompt.root;<command>openssl</command> req -new -key server.key -out server.csr</screen>
   </step>
   <step>
    <para>
     Self-sign the certificate:
    </para>
    <screen>&prompt.root;<command>openssl</command> x509 -req -days 365 -in <!--
    -->server.csr -signkey server.key -out server.crt</screen>
   </step>
   <step>
    <para>
     Create the PEM file:
    </para>
    <screen>&prompt.root;<command>cat</command> server.key server.crt > server.pem</screen>
   </step>
   <step>
    <para>
     Place the files <filename>server.crt</filename>,
     <filename>server.csr</filename>, <filename>server.key</filename>, and
     <filename>server.pem</filename> in the respective directories where the
     keys can be found. For Tomcat, for example, this directory is
     <filename>/etc/tomcat/ssl/</filename>.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-update-preparation-vms">
  <title>Shut down virtual machine guests</title>

  <para>
   If your machine serves as a &vmhost; for &kvm;<phrase os="sles;sled"> or
   &xen;</phrase>, make sure to properly shut down all running &vmguest;s prior
   to the update. Otherwise you may not be able to access the guests after the
   update.
  </para>
 </sect1>
 <sect1 os="sles;sled" xml:id="sec-update-preparation-rmt">
  <title>Adjust your &smt; client setup</title>

  <para>
   If the machine you want to upgrade is registered as a client against an
   &smt; server, take care to do the following:
  </para>

  <para>
   Check if the version of the <command>clientSetup4SMT.sh</command> script on
   your host is up to date. <command>clientSetup4SMT.sh</command> from older
   versions of &smt; cannot manage &smt; 12 clients. If you apply software
   patches regularly on your &smt; server, you can always find the latest
   version of <command>clientSetup4SMT.sh</command> at
   <filename>&lt;SMT_HOSTNAME&gt;/repo/tools/clientSetup4SMT.sh</filename>.
  </para>

  <para>
   In case upgrading your machine to a higher version of &productname; fails,
   deregister the machine from the &smt; server as described in
   <xref linkend="pro-sec-update-prep-smt-de-register" xrefstyle="select:label"/>.
   Afterward, restart the upgrade process.
  </para>

  <procedure xml:id="pro-sec-update-prep-smt-de-register">
   <title>Deregistering a &sle; client from an &smt; server</title>
   <step>
    <para>
     Log in to the client machine.
    </para>
   </step>
   <step>
    <para>
     The following step depends on the current operating system of the client:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       For &sle; 11, execute the following commands:
      </para>
<screen>&prompt.sudo;suse_register -E
&prompt.sudo;rm -f /etc/SUSEConnect
&prompt.sudo;rm -rf /etc/zypp/credentials.d/*
&prompt.sudo;rm -rf /etc/zypp/repos.d/*
&prompt.sudo;rm -f /etc/zypp/services.d/*
&prompt.sudo;rm -f /var/cache/SuseRegister/*
&prompt.sudo;rm -f /etc/suseRegister*
&prompt.sudo;rm -f /var/cache/SuseRegister/lastzmdconfig.cache
&prompt.sudo;rm -f /etc/zmd/deviceid
&prompt.sudo;rm -f /etc/zmd/secret</screen>
     </listitem>
     <listitem>
      <para>
       For &sle; 12, execute the following commands:
      </para>
<screen>&prompt.sudo;SUSEConnect --de-register
&prompt.sudo;SUSEConnect --cleanup
&prompt.sudo;rm -f /etc/SUSEConnect
&prompt.sudo;rm -rf /etc/zypp/credentials.d/*
&prompt.sudo;rm -rf /etc/zypp/repos.d/*
&prompt.sudo;rm -f /etc/zypp/services.d/*</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     Log in to the &smt; server.
    </para>
   </step>
   <step>
    <para>
     Check if the client has successfully been deregistered by listing all
     client registrations:
    </para>
<screen>&prompt.sudo;smt-list-registrations</screen>
   </step>
   <step>
    <para>
     If the client's host name is still listed in the output of this command,
     get the client's <literal>Unique ID</literal> from the first column. (The
     client might be listed with multiple IDs.)
    </para>
   </step>
   <step>
    <para>
     Delete the registration for this client:
    </para>
<screen>&prompt.sudo;smt-delete-registration -g <replaceable>UNIQUE_ID</replaceable></screen>
   </step>
   <step>
    <para>
     If the client is listed with multiple IDs, repeat the step above for each
     of its unique IDs.
    </para>
   </step>
   <step>
    <para>
     Check if the client has now successfully been deregistered by re-running:
    </para>
<screen>&prompt.sudo;smt-list-registrations</screen>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec-autoyast-profiles" os="sles">
  <title>Changes in &ay; profiles from &slea; 12 to 15</title>

  <para>
   To learn how to migrate your &ay; profiles, see
   <xref linkend="appendix-ay-12vs15"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec-update-preparation-smt-to-rmt" os="sles">
  <title>Upgrading a &smtool; (&smt;) server</title>

  <para>
   A server running &smt; requires a special upgrade procedure. Please refer to
   <xref linkend="cha-rmt-migrate"/> in the &rmtguide;.
  </para>
 </sect1>
 <sect1 os="sles" xml:id="sec-update-preparation-multiversion">
  <title>Temporarily disabling kernel multiversion support</title>

  <para>
   &productname; allows installing multiple kernel versions by enabling the
   respective settings in <filename>/etc/zypp/zypp.conf</filename>. Support for
   this feature needs to be temporarily disabled to upgrade to a service pack.
   When the update has successfully finished, multiversion support can be
   re-enabled. To disable multiversion support, comment the respective lines in
   <filename>/etc/zypp/zypp.conf</filename>. The result should look similar to:
  </para>

<screen>#multiversion = provides:multiversion(kernel)
#multiversion.kernels = latest,running</screen>

  <para>
   To re-activate this feature after a successful update, remove the comment
   signs. For more information about multiversion support, refer to
   <xref linkend="sec-tuning-multikernel-enable"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec-upgrade-prepare-boot-config">
  <title>Adjust the <literal>resume</literal> boot parameter</title>
  <para>
   On systems that have been installed with &productname; 12 or older, the default  kernel command
   line in <filename>/etc/default/grub</filename> may contain a <parameter>resume</parameter>
   parameter using a device node name such as <filename>/dev/sda1</filename> to refer to the
   hibernation (&apos;suspend-to-disk&apos;) device. As device node names are not persistent and may
   change between reboots, it is strongly recommended to fix this, otherwise the upgraded system
   may hang on reboot.
  </para>
  <procedure>
   <step>
    <para>
     Find the hibernation device:
    </para>
<screen>&prompt.sudo;<command>grep resume /etc/default/grub</command>
GRUB_CMDLINE_LINUX_DEFAULT="resume=/dev/sda1 splash=silent quiet showopts"
</screen>
    <para>
     The hibernation device is <filename>/dev/sda1</filename>. If the command returns nothing,
     hibernation is not configured.
    </para>
   </step>
   <step>
    <para>
     Get the UUID for <filename><replaceable>/dev/sda1</replaceable></filename>:
    </para>
<screen>&prompt.sudo;<command>blkid /dev/vda1</command>
/dev/vda1: UUID="a1d1f2e0-b0ee-4be2-83d5-78a98c585827" TYPE="swap" PARTUUID="000134b5-01"</screen>
    <para>
     The UUID for <filename>/dev/sda1</filename> is
     <literal>a1d1f2e0-b0ee-4be2-83d5-78a98c585827</literal>.
    </para>
   </step>
   <step>
    <para>
     Edit <filename>/etc/default/grub</filename> and adjust the <parameter>resume</parameter>
     parameter. Replace <literal><replaceable>/dev/sda1</replaceable></literal> with
     <literal><replaceable>UUID=a1d1f2e0-b0ee-4be2-83d5-78a98c585827</replaceable></literal>. The
     result will look like this:
    </para>
<screen>GRUB_CMDLINE_LINUX_DEFAULT="resume=UUID=a1d1f2e0-b0ee-4be2-83d5-78a98c585827 splash=silent quiet showopts"</screen>
   </step>
   <step>
    <para>
     Update the configuration of the grub boot manger:
    </para>
<screen>&prompt.sudo;<command>grub2-mkconfig -o /boot/grub2/grub.cfg</command></screen>
   </step>
  </procedure>
  <para>
   If the system does not use hibernation, you can simply remove the
   <parameter>resume</parameter> parameter and update the boot configuration.
  </para>
 </sect1>
 <sect1 xml:id="sec-update-preparation-zseries" os="sles">
  <title>Upgrading on &zseries;</title>

  <para>
   Upgrading a &sle; installation on &zseries; requires the
   <command>Upgrade=1</command> kernel parameter, for example via the parmfile.
   See <xref linkend="sec-appdendix-parm" xrefstyle="HeadingOnPage"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec-update-preparation-ppc" os="sles" arch="power">
  <title>IBM &ppc;: Starting an X server</title>

  <para>
   On &slsa; 12 for IBM &ppc; the display manager is configured not to start a
   local X server by default. This setting was reversed on &slsa; 12
   SP1&mdash;the display manager now starts an X server.
  </para>

  <para>
   To avoid problems during upgrade, the &productname; setting is not changed
   automatically. If you want the display manager to start an X server after
   the upgrade, change the setting of
   <envar>DISPLAYMANAGER_STARTS_XSERVER</envar> in
   <filename>/etc/sysconfig/displaymanager</filename> as follows:
  </para>

<screen>DISPLAYMANAGER_STARTS_XSERVER="yes"</screen>
 </sect1>
</chapter>
