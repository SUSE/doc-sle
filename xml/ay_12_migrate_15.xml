<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<appendix version="5.0" role="General" xml:id="appendix.ay_diff_12_15"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Main differences between &productname; 12 and 15 profiles</title>
 <sect1 xml:id="product-selection">
  <title>Product selection</title>

  <para>
   Starting with &productname; 15, all products are distributed using one
   medium. You need to choose which product to install. To do so explicitly,
   use the <tag class="element">product</tag> tag.
  </para>

  <sect2 xml:id="explicit-product-selection">
   <title>Explicit Product Selection</title>
   <screen><![CDATA[<software>
  <products config:type="list">
    <product>SLED</product>
  </products>
</software>>]]></screen>
   <para>
    In special cases, the medium might contain only one product. If so, you do
    not need to select a product explicitly as described above. &ay; will
    select the only available product automatically.
   </para>
   <para>
    For backward compatibility with profiles created for pre-SLE 15 products,
    &ay; implements a heuristic that selects products automatically. This
    heuristic will be used when the profile does not contain a <tag
    class="element">product</tag> element. This heuristic is based on the
    package and pattern selection in the profile. However, whenever possible,
    avoid using this mechanism and adapt old profiles to use explicit product
    selection.
   </para>
   <para>
    If the product selection fails an error is shown and the installation
    cannot be continued.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="firewall-configuration">
  <title>Firewall configuration</title>

  <para>
   In &productname; 15, &susefirewall; has been replaced by &firewalld; as the
   default firewall.
  </para>

  <para>
   Taking in account that the configuration of both is quite different and that
   &productname; 12 profiles were closely coupled to the &susefirewall;
   configuration, a new syntax has been added.
  </para>

  <para>
   Old profiles will continue working although the supported configuration will
   be very limited, for that reason we recommend to check the final
   configuration in order to avoid an unexpected behavior or network security
   threats.
  </para>

  <para>
   This is the list of supported properties:**
  </para>

  <itemizedlist>
   <listitem>
    <para>
     enable_firewall (same behavior)
    </para>
   </listitem>
   <listitem>
    <para>
     start_firewall (same behavior)
    </para>
   </listitem>
   <listitem>
    <para>
     FW_CONFIGURATIONS_\{DMZ, EXT, INT}
    </para>
   </listitem>
   <listitem>
    <para>
     FW_DEV_\{DMZ, EXT, INT}
    </para>
   </listitem>
   <listitem>
    <para>
     FW_SERVICES_\{DMZ, INT, EXT}_\{TCP, UDP, IP}
    </para>
   </listitem>
   <listitem>
    <para>
     FW_LOG_ACCEPT_CRIT
    </para>
   </listitem>
   <listitem>
    <para>
     FW_LOG_DROP_CRIT
    </para>
   </listitem>
   <listitem>
    <para>
     FW_LOG_DROP_ALL
    </para>
   </listitem>
   <listitem>
    <para>
     FW_MASQUERADE
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The following examples will show with details the conversion of each
   property.
  </para>

  <sect2 xml:id="whether-firewalld-should-be-enabled-and-running-after-the-installation">
   <title>
    Whether &firewalld; should be enabled and running after the installation
   </title>
   <screen><![CDATA[<firewall>
 <!-- These attributes are the only ones that are completely compatible in
       both schemes -->
 <enable_firewall>true</enable_firewall>
 <start_firewall>true</start_firewall>
</firewall>]]></screen>
   <para>
    Both firewalls are zone-based with a different predefined set of rules and
    level of trust for network connections.
   </para>
   <para>
    Whereas &susefirewall; has 3 zones by default (<literal>DMZ</literal>,
    <literal>EXT</literal>, <literal>INT</literal>) &firewalld; provides a few
    more (<literal>block</literal>, <literal>dmz</literal>,
    <literal>drop</literal>, <literal>external</literal>,
    <literal>home</literal>, <literal>internal</literal>,
    <literal>public</literal>, <literal>trusted</literal>,
    <literal>work</literal>). In &susefirewall; the default zone is the
    external one (EXT) but also allows the use of the special keyword
    <literal>any</literal> to assign all the interfaces that are not listed
    anywhere to a specified zone.
   </para>
  </sect2>

  <sect2 xml:id="assignation-of-interfaces-to-zones">
   <title>Assignation of interfaces to zones</title>
   <para>
    The <literal>DMZ</literal> zone will be mapped to the
    <literal>dmz</literal> zone, the <literal>EXT</literal> zone will be mapped
    to the <literal>public</literal> zone if <literal>FW_MASQUERADE</literal>
    is disabled or to the <literal>external</literal> if it is enabled and
    finally the <literal>INT</literal> zone will be mapped to the
    <literal>internal</literal> zone if <literal>FW_PROTECT_FROM_INT</literal>
    is true or to the <literal>trusted</literal> zone if not.
   </para>
   <para>
    <emphasis role="strong">Default assignment</emphasis>
   </para>
<screen><![CDATA[<firewall>
 <FW_DEV_DMZ>any eth0</FW_DEV_DMZ>
 <FW_DEV_EXT>eth1 wlan0</FW_DEV_EXT>
 <FW_DEV_INT>wlan1</FW_DEV_INT>
</firewall>]]></screen>
<screen><![CDATA[<firewall>
 <default_zone>dmz</default_zone>
 <zones config:type="list">
  <zone>
   <name>dmz</name>
   <interfaces>
    <interface>eth0</interface>
   </interfaces>
  </zone>
  <zone>
   <name>public</name>
   <interfaces>
    <interface>eth1</interface>
   </interfaces>
  </zone>
  <zone>
   <name>trusted</name>
   <interfaces>
    <interface>wlan1</interface>
   </interfaces>
  </zone>
 </zones>
</firewall>]]></screen>
   <para>
    <emphasis role="strong">With masquerading and protecting internal
    zones</emphasis>
   </para>
<screen><![CDATA[<firewall>
 <FW_DEV_DMZ>any eth0</FW_DEV_DMZ>
 <FW_DEV_EXT>eth1 wlan0</FW_DEV_EXT>
 <FW_DEV_INT>wlan1</FW_DEV_INT>
 <FW_MASQUERADE>yes</FW_MASQUERADE>
 <FW_PROTECT_FROM_INT>yes</FW_PROTECT_FROM_INT>
</firewall>]]></screen>
<screen><![CDATA[<firewall>
 <default_zone>dmz</default_zone>
 <zones config:type="list">
  <zone>
   <name>dmz</name>
   <interfaces config:type="list">
    <interface>eth0</interface>
   </interfaces>
  </zone>
  <zone>
   <name>external</name>
   <interfaces config:type="list">
    <interface>eth1</interface>
   </interfaces>
  </zone>
  <zone>
   <name>internal</name>
   <interfaces config:type="list">
    <interface>wlan1</interface>
   </interfaces>
  </zone>
 </zones>
</firewall>]]></screen>
  </sect2>

  <sect2 xml:id="open-ports">
   <title>Open ports</title>
   <para>
    In SuSEFIrewall2 the FW_SERVICES_\{DMZ,EXT,INT}_\{TCP,UDP,IP,RPC} variables
    were used to open ports in different zones.
   </para>
   <para>
    In case of <emphasis role="strong">TCP</emphasis> or
    <emphasis
     role="strong">*UPD</emphasis> we were allowed to enter a
    port number, a port range or a <literal>/etc/service</literal> name. It
    will be mapped to ports in the equivalent &firewalld; zone.
   </para>
   <para>
    In case of <emphasis role="strong">IP</emphasis>, the SuSEFirewall2
    definition will be mapped to &firewalld; protocols in the equivalent
    &firewalld; zone.
   </para>
   <para>
    Unfortunately &firewalld; does not support
    <emphasis
     role="strong">RPC</emphasis> configuration.
   </para>
<screen><![CDATA[<firewall>
 <FW_SERVICES_DMZ_TCP>ftp ssh 80 5900:5999</FW_SERVICES_DMZ_TCP>
 <FW_SERVICES_EXT_UDP>1723 ipsec-nat-t</FW_SERVICES_EXT_UDP>
 <FW_SERVICES_EXT_IP>esp icmp gre</FW_SERVICES_EXT_IP>
 <FW_MASQUERADE>yes</FW_MASQUERADE>
</firewall>]]></screen>
<screen><![CDATA[<firewall>
 <zones config:type="list">
  <zone>
   <name>dmz</name>
   <ports config:type="list">
    <port>ftp/tcp</port>
    <port>ssh/tcp</port>
    <port>80/tcp</port>
    <port>5900-5999/tcp</port>
   <ports>
  </zone>
  <zone>
   <name>external</name>
   <ports config:type="list">
    <port>1723/udp</port>
    <port>ipsec-nat-t/udp</port>
   </ports>
   <protocols config:type="list">
    <protocol>esp</protocol>
    <protocol>icmp</protocol>
    <protocol>gre</protocol>
   </protocols>
  </zone>
 </zones>
</firewall>]]></screen>
  </sect2>

  <sect2 xml:id="open-firewalld-services">
   <title>Open &firewalld; services</title>
   <para>
    For opening a combination of ports and/or protocols &susefirewall; provides
    the <literal>FW_CONFIGURATIONS_\{EXT, DMZ, INT}</literal> variables which
    are equivalent to services in &firewalld;.
   </para>
<screen><![CDATA[<firewall>
 <FW_CONFIGURATIONS_EXT>dhcp dhcpv6 samba vnc-server</FW_CONFIGURATIONS_EXT>
 <FW_CONFIGURATIONS_DMZ>ssh</FW_CONFIGURATIONS_DMZ>
</firewall>]]></screen>
<screen>><![CDATA[<firewall>
 <zones config:type="list">
  <zone>
   <name>dmz</name>
   <services config:type="list">
    <service>ssh</service>
   </services>
  </zone>
  <zone>
   <name>public</name>
   <services config:type="list">
    <service>dhcp</service>
    <service>dhcpv6</service>
    <service>samba</service>
    <service>vnc-server</service>
   </services>
  </zone>
 </zones>
</firewall>]]></screen>
   <para>
    <emphasis role="strong">The services definition can be added via packages
    in both cases:</emphasis>
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <link
         xlink:href="https://en.opensuse.org/SuSEfirewall2/Service_Definitions_Added_via_Packages"/>
     </para>
    </listitem>
    <listitem>
     <para>
      <link xlink:href="https://en.opensuse.org/firewalld/RPM_Packaging"/>
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Take in account that &firewalld; already provides most of the more
    important services definitions so check the current services before
    defining a new one.
   </para>
  </sect2>

  <sect2 xml:id="what-about-the-rest-of-susefirewall2-options">
   <title>What about the rest of SuSEFirewall2 options?</title>
   <para>
    We would like to continue supporting all the options but unfortunately some
    of them do not have a equivalent mapping in &firewalld; or need some
    configuration that is still not supported by &ay; or by &firewalld;.
   </para>
   <para>
    For the options that are not supported by YaST / &ay; but are supported by
    &firewalld; the use of <literal>post-scripts</literal> is probably the best
    alternative available.
   </para>
  </sect2>

  <sect2 xml:id="further-documentation">
   <title>Further documentation</title>
   <itemizedlist>
    <listitem>
     <para>
      <link
          xlink:href="https://www.suse.com/documentation/sles-12/book_autoyast/data/createprofile_firewall.html">SLE
      12 &ay; doc</link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link xlink:href="http://www.firewalld.org/documentation/">&firewalld;
      official doc</link>
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 xml:id="ntp-configuration">
  <title>NTP Configuration</title>

  <para>
   The time server synchronization daemon <systemitem
   class="daemon">ntpd</systemitem> has been replaced with the more modern
   daemon <systemitem class="daemon">chrony</systemitem>.
  </para>

  <para>
   This change means that &ay; files with an <tag
   class="element">ntp_client</tag> section need to be updated to a new format
   for this section.
  </para>

  <para>
   Instead of containing low level configuration options, is now composed of a
   set of high level ones that are applied on top of the default settings.
  </para>

  <para>
   And here is how the new (and nicer) configuration looks like:
  </para>

<screen><![CDATA[<ntp-client>
 <ntp_policy>auto</ntp_policy>
 <ntp_servers config:type="list">
  <ntp_server>
   <iburst config:type="boolean">false</iburst>
   <address>cz.pool.ntp.org</address>
   <offline config:type="boolean">true</offline>
  </ntp_server>
 </ntp_servers>
 <ntp_sync>systemd</ntp_sync>
</ntp-client>]]></screen>
 </sect1>
 <sect1 xml:id="autoyast-packages-are-needed-for-2nd-stage">
  <title>&ay; packages are needed for 2nd stage</title>

  <para>
   As you probably already know, a regular installation is performed in a
   single stage while an auto-installation needs two stages in most of the
   cases.
  </para>

  <para>
   &ay; will show a warning if the second stage is needed or enabled and some
   mandatory package are missing like <package>autoyast2-installation</package>
   and <package>autoyast2</package>.
  </para>
 </sect1>
 <sect1 xml:id="ca-management-module-has-been-dropped">
  <title>CA Management module has been dropped</title>

  <para>
   The module for CA Management
   (<package>yast2-ca-management</package>>) has been
   removed from &productname; 15, and for the time being there is no
   replacement available. It will affect all the profiles that were using the
   <tag class="element">ca_mgm</tag> section and which do not remove it.
  </para>
 </sect1>
 <sect1 xml:id="new-storage">
  <title>New Storage</title>

  <sect2 xml:id="setting-partition-numbers">
   <title>Setting partition numbers</title>
   <para>
    &ay; will not allow the user to force partition numbers anymore, as it
    might not work in some situations. Moreover, GPT is now the preferred
    partition table type, so partition numbers are not that relevant.
   </para>
   <para>
    However, the <tag class="element">partition_nr</tag> tag is still available
    in order to specify a partition to be reused.
   </para>
  </sect2>

  <sect2 xml:id="gpt-is-now-the-default-partition-type">
   <title>GPT is now the default partition type</title>
   <para>
    On x86_64 systems, GPT is now the preferred partition type. However, if you
    would like to retain the old behaviour, you could explictly indicate this
    in the profile setting the <literal>disklabel</literal> element to
    <literal>msdos</literal>.
   </para>
  </sect2>

  <sect2 xml:id="a-default-subvolume-name-for-each-btrfs-filesystem">
   <title>A default subvolume name for each Btrfs filesystem</title>
   <para>
    The new storage layer allows the user to set different default subvolumes
    (or none at all) for every Btrfs filesystem. As shown in the example below,
    a prefix name can be specified for each partition using the
    <tag class="element">subvolumes_prefix</tag> tag:
   </para>
<screen><![CDATA[<partition>
 <mount>/</mount>
 <filesystem config:type="symbol">btrfs</filesystem>
 <size>max</size>
 <subvolumes_prefix>@</subvolumes_prefix>
</partition>]]></screen>
   <para>
    Given this new approach, the old <tag
    class="element">btrfs_set_default_subvolume_name</tag> is deprecated,
    although it is still supported for backward compatibility reasons.
   </para>
  </sect2>

  <sect2 xml:id="reading-an-existing-etcfstab-filesystem-is-not-supported-anymore">
   <title>
    Reading an existing <filename>/etc/fstab</filename> filesystem is not
    supported anymore
   </title>
   <para>
    For the time being, the ability to read an existing
    <filename>/etc/fstab</filename> from a previous installation when trying to
    determine the partitioning layout is not supported anymore.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="software">
  <title>Software</title>

  <para>
   The &productname; 15 installation medium contains only a very minimal set of
   packages to install. This minimal set does not include any server
   applications or advanced tools.
  </para>

  <para>
   If you need to install more packages then you need to use additional
   software repositories:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     A registration server (the &scc; or a SMT/&rmt; proxy)
    </para>
   </listitem>
   <listitem>
    <para>
     Additional Packages DVD medium with &productname; 15 modules and
     extensions. The DVD can be shared on the network via a local installation
     server.
    </para>
   </listitem>
  </itemizedlist>

  <note>
   <title>Maintenance Updates</title>
   <para>
    Using the registration server will grant the access to the maintenance
    updates. Maintenance updates are not available when using the DVD medium
    without registration.
   </para>
  </note>

  <sect2 xml:id="using-modules-or-extensions-from-the-registration-server">
   <title>Using Modules or Extensions from the Registration Server</title>
   <para>
    If you want to add a module or extension from the registration server then
    add <tag class="element">addons</tag> section to the registration
    configuration:
   </para>
<screen><![CDATA[<suse_register>
 <addons config:type="list">
  <addon>
   <name>sle-module-basesystem</name>
   <version>15</version>
   <arch>x86_64</arch>
  </addon>
 </addons>
</suse_register>]]></screen>
   <para>
    For extensions which require a registration code write it into the <tag
    class="element">reg_code</tag> tag for the respective extension. See more
    details in the <link xlink:href="#module-and-extension-dependencies">Module
    and Extension Dependencies</link> section.
   </para>
  </sect2>

  <sect2 xml:id="using-the-packages-dvd-medium">
   <title>Using the Packages DVD Medium</title>
   <para>
    For using a physical Packages DVD medium use this XML snippet:
   </para>
<screen>&lt;add-on&gt;
 &lt;add_on_products config:type="list"&gt;
  &lt;listentry&gt;
   &lt;media_url&gt;&lt;![CDATA[dvd:///]]&gt;&lt;/media_url&gt;
   &lt;product&gt;sle-module-basesystem&lt;/product&gt;
   &lt;product_dir&gt;/Module-Basesystem&lt;/product_dir&gt;
  &lt;/listentry&gt;
 &lt;/add_on_products&gt;
&lt;/add-on&gt;</screen>
   <note>
    <title>Product name matching</title>
    <para>
     The <tag class="element">product</tag> name must match the internal
     product name contained in the repository. If the product name does not
     match at installation &ay; will report an error.
    </para>
    <para>
     If you have multiple physical DVD drives you can select a specific device
     using <literal>devices</literal> parameter in the URL, e.g.
     <literal>dvd:///?devices=/dev/sr1</literal>.
    </para>
   </note>
  </sect2>

  <sect2 xml:id="using-the-packages-medium-from-a-local-server">
   <title>Using the Packages Medium from a Local Server</title>
   <para>
    You can share the DVD content on the local network via a NFS, FTP or HTTP
    server.
   </para>
   <para>
    In that case use the same XML snippet as above, just edit the <tag
    class="element">media_url</tag> tag so it points to root of the medium on
    the server.
   </para>
  </sect2>

  <sect2 xml:id="renamed-software-patterns">
   <title>Renamed Software Patterns</title>
   <para>
    The software patterns have been also changed in &productname; 15. Some
    patterns have been renamed, a short summary is in the following table.
   </para>
   <informaltable frame="all" rowsep="1" colsep="1">
    <tgroup cols="2">
     <colspec colname="col_1" colwidth="50*"/>
     <colspec colname="col_2" colwidth="50*"/>
     <thead>
      <row>
       <entry align="left" valign="top">Old &slea; 12 Pattern</entry>
       <entry align="left" valign="top">New &slea; 15 Pattern</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry align="left" valign="top">
        <para>
         Basis-Devel
        </para>
       </entry>
       <entry align="left" valign="top">
        <para>
         devel_basis
        </para>
       </entry>
      </row>
      <row>
       <entry align="left" valign="top">
        <para>
         gnome-basic
        </para>
       </entry>
       <entry align="left" valign="top">
        <para>
         gnome_basic
        </para>
       </entry>
      </row>
      <row>
       <entry align="left" valign="top">
        <para>
         Minimal
        </para>
       </entry>
       <entry align="left" valign="top">
        <para>
         enhanced_base
        </para>
       </entry>
      </row>
      <row>
       <entry align="left" valign="top">
        <para>
         printing
        </para>
       </entry>
       <entry align="left" valign="top">
        <para>
         print_server
        </para>
       </entry>
      </row>
      <row>
       <entry align="left" valign="top">
        <para>
         SDK-C-C++
        </para>
       </entry>
       <entry align="left" valign="top">
        <para>
         devel_basis
        </para>
       </entry>
      </row>
      <row>
       <entry align="left" valign="top">
        <para>
         SDK-Doc
        </para>
       </entry>
       <entry align="left" valign="top">
        <para>
         technical_writing
        </para>
       </entry>
      </row>
      <row>
       <entry align="left" valign="top">
        <para>
         SDK-YaST
        </para>
       </entry>
       <entry align="left" valign="top">
        <para>
         devel_yast
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
   <para>
    Please, check carefully if all required packages are available in the
    defined patterns and adjust the profiles accordingly. Additionally, the
    required patterns and packages have to be available in the activated
    extensions or modules.
   </para>
   <itemizedlist>
    <title>Notes</title>
    <listitem>
     <para>
      The pattern renames in the table above are not 1:1 replacements, the
      content of some patterns has been changed as well, some packages were
      moved to a different pattern or even removed from &productname; 15.
     </para>
    </listitem>
    <listitem>
     <para>
      Check that the required packages are still included in the used patterns,
      optionally use the <tag class="element">packages</tag>> tag to specify the
      required packages.
     </para>
    </listitem>
    <listitem>
     <para>
      The list above might be incomplete, some products have not been released
      for &productname; 15 yet.
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 xml:id="registration">
  <title>Registration of Module and Extension Dependencies</title>

  <para>
   Since &productname; 15 &ay; automatically reorders the extensions according
   to their dependencies during registration. That means the order of the
   extensions in the &ay; profile is not important.
  </para>

  <para>
   Also &ay; automatically registers the dependent extensions even though they
   are missing in the profile. That means you are not required to fill the
   extensions list completely.
  </para>

  <para>
   However, if the dependent extension requires a registration key it must be
   specified in the profile, including the registration key. Otherwise the
   registration would fail.
  </para>

  <para>
   You can list the available extensions and modules in a registered system
   using the <command>SUSEConnect --list-extensions</command> command.
  </para>
 </sect1>
</appendix>
