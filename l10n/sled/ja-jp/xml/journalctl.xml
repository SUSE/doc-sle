<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="journalctl.xml" version="5.0" xml:id="cha-journalctl">
 <title><command>journalctl</command>: <systemitem class="daemon">systemd</systemitem>ジャーナルのクエリ</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  <systemitem class="daemon">systemd</systemitem>は、<emphasis></emphasis>「ジャーナル」と呼ばれる独自のロギングシステムを備えています。すべてのシステムイベントがジャーナルに書き込まれるようになったため、<systemitem>syslog</systemitem>ベースのサービスを実行する必要はありません。
 </para>
 <para>
  ジャーナル自体は、<systemitem class="daemon">systemd</systemitem>によって管理されるシステムサービスです。完全な名前は<literal>systemd-journald.service</literal>です。カーネル、ユーザプロセス、標準入力、およびシステムサービスエラーから受信したログ情報に基づいて、構造化されたインデックスジャーナルを維持することで、ログデータを収集して保存します。<literal>systemd-journald</literal>サービスはデフォルトでオンになっています。
 </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl status systemd-journald
systemd-journald.service - Journal Service
   Loaded: loaded (/usr/lib/systemd/system/systemd-journald.service; static)
   Active: active (running) since Mon 2014-05-26 08:36:59 EDT; 3 days ago
     Docs: man:systemd-journald.service(8)
           man:journald.conf(5)
 Main PID: 413 (systemd-journal)
   Status: "Processing requests..."
   CGroup: /system.slice/systemd-journald.service
           └─413 /usr/lib/systemd/systemd-journald
[...]</screen>
 <sect1 xml:id="sec-journalctl-persistent">
  <title>ジャーナルの永続化</title>

  <para>
   ジャーナルは、デフォルトでは<filename>/run/log/journal/</filename>にログデータを保存します。<filename>/run/</filename>ディレクトリは本質的に揮発性であるため、再起動するとログデータは失われます。ログデータを永続化するには、systemd-journaldサービスがそのデータを保存できる、適切な所有権と許可のある<filename>/var/log/journal/</filename>ディレクトリが存在している必要があります。<systemitem class="daemon">systemd</systemitem>は自動的にディレクトリを作成します。永続的なログに切り替えるには、次の手順を実行します。
  </para>

  <procedure>
   <step>
    <para>
     <systemitem class="username">root</systemitem>として、<filename>/etc/systemd/journald.conf</filename>を開き編集します。
    </para>
<screen><prompt role="root"># </prompt>vi /etc/systemd/journald.conf</screen>
   </step>
   <step>
    <para>
     <literal>Storage=</literal>を含む行をコメント解除し、次のように変更します。
    </para>
<screen>[...]
[Journal]
Storage=persistent
#Compress=yes
[...]</screen>
   </step>
   <step>
    <para>
     ファイルを保存して、systemd-journaldを再起動します。
    </para>
<screen><prompt role="root"># </prompt>systemctl restart systemd-journald</screen>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-journalctl-switches">
  <title><command>journalctl</command>: 便利なスイッチ</title>

  <para>
   このセクションでは、デフォルトの<command>journalctl</command>の動作を拡張する一般的な便利なオプションをいくつか紹介します。スイッチはすべて、<command>journalctl</command>のマニュアルページの<command>man 1 journalctl</command>で説明されています。
  </para>

  <tip>
   <title>特定の実行可能ファイルに関連するメッセージ</title>
   <para>
    特定の実行可能ファイルに関連するすべてのジャーナルメッセージを表示するには、実行可能ファイルのフルパスを指定します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl /usr/lib/systemd/systemd</screen>
  </tip>

  <variablelist>
   <varlistentry>
    <term>-f</term>
    <listitem>
     <para>
      最新のジャーナルメッセージのみを表示し、新しいログエントリがジャーナルに追加されるとそれらを出力します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term/>
    <listitem>
     <para>
      メッセージを出力してジャーナルの最後に移動します。これにより、最新のエントリをページャ内に表示できます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>-r</term>
    <listitem>
     <para>
      ジャーナルのメッセージを逆順に出力します。これにより、最新のエントリが最初に一覧にされます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>-k</term>
    <listitem>
     <para>
      カーネルメッセージのみを表示します。これは、フィールド照合機能<literal>_TRANSPORT=kernel</literal>と同等です(<xref linkend="sec-journalctl-filter-fields"/>を参照)。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>-u</term>
    <listitem>
     <para>
      指定した<systemitem class="daemon">systemd</systemitem>ユニットのメッセージのみを表示します。これは、フィールド照合機能<literal>_SYSTEMD_UNIT=<replaceable>UNIT</replaceable></literal>と同等です(<xref linkend="sec-journalctl-filter-fields"/>を参照)。
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl -u apache2
[...]
Jun 03 10:07:11 pinkiepie systemd[1]: Starting The Apache Webserver...
Jun 03 10:07:12 pinkiepie systemd[1]: Started The Apache Webserver.</screen>
    </listitem>
   </varlistentry>
  </variablelist>

  <para/>
 </sect1>
 <sect1 xml:id="sec-journalctl-filter">
  <title>ジャーナル出力のフィルタ</title>

  <para>
   スイッチなしで<command>journalctl</command>を呼び出すと、最も古いエントリを先頭にジャーナルのすべてのコンテンツが表示されます。出力は、特定のスイッチとフィールドによってフィルタできます。
  </para>

  <sect2 xml:id="sec-journalctl-filter-boot">
   <title>ブート番号に基づくフィルタ</title>
   <para>
    <command>journalctl</command>は特定のシステムブートに基づいてメッセージをフィルタできます。利用可能なブートを一覧もするには、次を実行します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl --list-boots
-1 097ed2cd99124a2391d2cffab1b566f0 Mon 2014-05-26 08:36:56 EDT—Fri 2014-05-30 05:33:44 EDT
 0 156019a44a774a0bb0148a92df4af81b Fri 2014-05-30 05:34:09 EDT—Fri 2014-05-30 06:15:01 EDT</screen>
   <para>
    1番目の列にはブートオフセットが一覧にされます。現在のブートの場合は<literal>0</literal>、直前のブートの場合は<literal>-1</literal>、その1つ前のブートの場合は<literal>-2</literal>といった具合になります。2番目の列には、ブートIDが含まれ、特定のブートに限定するためのタイムスタンプが続きます。
   </para>
   <para>
    現在のブートのすべてのメッセージを表示します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl -b</screen>
   <para>
    直前のブートのジャーナルメッセージを表示する必要がある場合は、オフセットパラメータを追加します。次の例は、直前のブートメッセージを出力します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl -b -1</screen>
   <para>
    もう1つの方法は、ブートIDに基づいてブートメッセージを一覧にする方法です。このためには、_BOOT_IDフィールドを使用します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl _BOOT_ID=156019a44a774a0bb0148a92df4af81b</screen>
  </sect2>

  <sect2 xml:id="sec-journalctl-filter-time">
   <title>時間間隔に基づくフィルタ</title>
   <para>
    開始日または終了日、あるいはその両方を指定して、<command>journalctl</command>の出力をフィルタできます。日付指定は、「2014-06-30 9:17:16」の形式にする必要があります。時間の部分を省略すると、夜中の12:00と想定されます。秒を省略すると、「:00」と想定されます。日付の部分を省略すると、当日と想定されます。数値式ではなく、キーワード「yesterday」、「today」、または「tomorrow」を指定することができます。これらは、当日の前日の夜中の12:00、当日の夜中の12:00、または当日の翌日の夜中の12:00を示します。「now」を指定すると、当日を示します。また、<literal>-</literal>または<literal>+</literal>をプレフィクスとして付けて、現在時刻の前後を示す相対時間を指定することもできます。
   </para>
   <para>
    現在時刻以降の新しいメッセージのみを表示し、出力を継続的に更新します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl --since "now" -f</screen>
   <para>
    直前の夜12:00から午前3:20までのすべてのメッセージを表示します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl --since "today" --until "3:20"</screen>
  </sect2>

  <sect2 xml:id="sec-journalctl-filter-fields">
   <title>フィールドに基づくフィルタ</title>
   <para>
    特定のフィールドによってジャーナルの出力をフィルタできます。照合するフィールドの構文は、<literal>FIELD_NAME=MATCHED_VALUE</literal>です(<literal>_SYSTEMD_UNIT=httpd.service</literal>など)。1つのクエリに複数の照合を指定することで、出力メッセージをさらにフィルタすることができます。デフォルトフィールドのリストについては、<command>man 7 systemd.journal-fields</command>を参照してください。
   </para>
   <para>
    特定のプロセスIDによって生成されたメッセージを表示します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl _PID=1039</screen>
   <para>
    特定のユーザIDに属するメッセージを表示します。
   </para>
<screen># journalctl _UID=1000</screen>
   <para>
    カーネルリングバッファのメッセージを表示します(<command>dmesg</command>が生成するものと同じ)。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl _TRANSPORT=kernel</screen>
   <para>
    サービスの標準出力またはエラー出力のメッセージを表示します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl _TRANSPORT=stdout</screen>
   <para>
    指定されたサービスによって生成されたメッセージのみを表示します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl _SYSTEMD_UNIT=avahi-daemon.service</screen>
   <para>
    2つの異なるフィールドを指定すると、同時に両方の式に一致するエントリのみが表示されます。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl _SYSTEMD_UNIT=avahi-daemon.service _PID=1488</screen>
   <para>
    2つの照合が同じフィールドを示している場合は、いずれかの式に一致するすべてのエントリが表示されます。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl _SYSTEMD_UNIT=avahi-daemon.service _SYSTEMD_UNIT=dbus.service</screen>
   <para>
    「+」セパレータを使用して、2つの式を論理「OR」で組み合わせることができます。次の例は、プロセスIDが1480のAvahiサービスプロセスのすべてのメッセージと、D-Busサービスのすべてのメッセージを表示します。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl _SYSTEMD_UNIT=avahi-daemon.service _PID=1480 + _SYSTEMD_UNIT=dbus.service</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-journalctl-investigate">
  <title><systemitem class="daemon">systemd</systemitem>エラーの調査</title>

  <para>
   このセクションでは、<command>apache2</command>の起動時に<systemitem class="daemon">systemd</systemitem>によってレポートされたエラーを検出および修復する方法を示す簡単な例を紹介します。
  </para>

  <procedure>
   <step>
    <para>
     apache2サービスの起動を試みます。
    </para>
<screen># systemctl start apache2
Job for apache2.service failed. See 'systemctl status apache2' and 'journalctl -xn' for details.</screen>
   </step>
   <step>
    <para>
     サービスの状態に関する記述を確認します。
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl status apache2
apache2.service - The Apache Webserver
   Loaded: loaded (/usr/lib/systemd/system/apache2.service; disabled)
   Active: failed (Result: exit-code) since Tue 2014-06-03 11:08:13 CEST; 7min ago
  Process: 11026 ExecStop=/usr/sbin/start_apache2 -D SYSTEMD -DFOREGROUND \
           -k graceful-stop (code=exited, status=1/FAILURE)</screen>
    <para>
     障害の原因となっているプロセスのIDは、11026です。
    </para>
   </step>
   <step>
    <para>
     プロセスID11026に関連するメッセージの詳細バージョンを表示します。
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> journalctl -o verbose _PID=11026
[...]
MESSAGE=AH00526: Syntax error on line 6 of /etc/apache2/default-server.conf:
[...]
MESSAGE=Invalid command 'DocumenttRoot', perhaps misspelled or defined by a module
[...]</screen>
   </step>
   <step>
    <para>
     <filename>/etc/apache2/default-server.conf</filename>内のタイプミスを修復し、apache2サービスを起動して、そのステータスを出力します。
    </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl start apache2 &amp;&amp; systemctl status apache2
apache2.service - The Apache Webserver
   Loaded: loaded (/usr/lib/systemd/system/apache2.service; disabled)
   Active: active (running) since Tue 2014-06-03 11:26:24 CEST; 4ms ago
  Process: 11026 ExecStop=/usr/sbin/start_apache2 -D SYSTEMD -DFOREGROUND
           -k graceful-stop (code=exited, status=1/FAILURE)
 Main PID: 11263 (httpd2-prefork)
   Status: "Processing requests..."
   CGroup: /system.slice/apache2.service
           ├─11263 /usr/sbin/httpd2-prefork -f /etc/apache2/httpd.conf -D [...]
           ├─11280 /usr/sbin/httpd2-prefork -f /etc/apache2/httpd.conf -D [...]
           ├─11281 /usr/sbin/httpd2-prefork -f /etc/apache2/httpd.conf -D [...]
           ├─11282 /usr/sbin/httpd2-prefork -f /etc/apache2/httpd.conf -D [...]
           ├─11283 /usr/sbin/httpd2-prefork -f /etc/apache2/httpd.conf -D [...]
           └─11285 /usr/sbin/httpd2-prefork -f /etc/apache2/httpd.conf -D [...]
</screen>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-journalctl-config">
  <title>Journaldの設定</title>

  <para>
   systemd-journaldサービスの動作を調整するには、<filename>/etc/systemd/journald.conf</filename>を変更します。このセクションでは、基本的なオプションの設定のみを取り上げます。ファイルの詳細な説明については、<command>man 5 journald.conf</command>を参照してください。変更を有効にするために、次のコマンドでジャーナルを再起動する必要がある点に注意してください。
  </para>

<screen><prompt>&gt; </prompt><command>sudo</command> systemctl restart systemd-journald</screen>

  <sect2 xml:id="sec-journalctl-config-systemmaxuse">
   <title>ジャーナルサイズ制限の変更</title>
   <para>
    ジャーナルログデータを永続的な場所に保存する場合(<xref linkend="sec-journalctl-persistent"/>を参照)、ジャーナルログデータは<filename>/var/log/journal</filename>が存在するファイルシステムの最大10%を使用します。たとえば、<filename>/var/log/journal</filename>を30GBの<filename>/var</filename>パーティションに配置すると、ジャーナルは最大3GBのディスク容量を使用します。この制限を変更するには、<option>SystemMaxUse</option>オプションを変更(およびコメント解除)します。
   </para>
<screen>SystemMaxUse=50M</screen>
  </sect2>

  <sect2 xml:id="sec-journalctl-config-ttypath">
   <title>ジャーナルの<filename>/dev/ttyX</filename>への転送</title>
   <para>
    ジャーナルを端末デバイスに転送し、好みの端末画面(たとえば、<literal>/dev/tty12</literal>)でシステムメッセージに関する通知を受信できます。journaldオプションを次のように変更します。
   </para>
<screen>ForwardToConsole=yes
TTYPath=/dev/tty12</screen>
  </sect2>

  <sect2 xml:id="sec-journalctl-config-forwardtosyslog">
   <title>ジャーナルのsyslog機能への転送</title>
   <para>
    Journaldは、<systemitem>rsyslog</systemitem>などの従来のsyslog実装との下位互換性があります。以下が正しいことを確認します。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      rsyslogがインストールされている。
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> rpm -q rsyslog
rsyslog-7.4.8-2.16.x86_64</screen>
    </listitem>
    <listitem>
     <para>
      rsyslogサービスが有効である。
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> systemctl is-enabled rsyslog
enabled</screen>
    </listitem>
    <listitem>
     <para>
      <filename>/etc/systemd/journald.conf</filename>でsyslogへの転送が有効になっている。
     </para>
<screen>ForwardToSyslog=yes</screen>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-journalctl-yast">
  <title>YaSTを使用した<systemitem class="daemon">systemd</systemitem>ジャーナルのフィルタ</title>

  <para>
   (journalctl構文を処理することなく)systemdジャーナルを簡単にフィルタするには、YaSTのジャーナルモジュールを使用します。<command>sudo zypper in yast2-journal</command>を使用してモジュールをインストールした後、YaSTで<menuchoice> <guimenu>System (システム)</guimenu>
   <guimenu>Systemd Journal (systemdジャーナル)</guimenu> </menuchoice>の順に選択して起動します。または、コマンドラインで「<command>sudo yast2 journal</command>」と入力して起動します。
  </para>

  <figure xml:id="fig-journalctl-yast">
   <title>YaST systemdジャーナル</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="yast2_journal.png" width="80%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="yast2_journal.png" width="85%"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   このモジュールでは、ログエントリが表に表示されます。上部にある検索ボックスを使用すると、<command>grep</command>を使用する場合と同様に、特定の文字を含むエントリを検索することができます。日時、ユニット、ファイル、または優先度でエントリをフィルタするには、<guimenu>Change filters (フィルタの変更)</guimenu>をクリックし、個々のオプションを設定します。
  </para>
 </sect1>
 <sect1 xml:id="sec-journalctl-gnome-logs">
  <title>GNOMEでのログの表示</title>
  <para>
   <emphasis>GNOMEログ</emphasis>でジャーナルを表示することができます。アプリケーションメニューから開始します。システムログメッセージを表示するには、rootとして実行する必要があります(たとえば、<command>xdg-su gnome-logs</command>を使用)。このコマンドは、<keycombo> <keycap function="alt"/>
   <keycap>F2</keycap></keycombo>を押すと実行できます。
  </para>
 </sect1>
</chapter>
