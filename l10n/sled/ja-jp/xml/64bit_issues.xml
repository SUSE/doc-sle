<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="64bit_issues.xml" version="5.0" xml:id="cha-64bit">
 <title>64ビットシステム環境での32ビットと64ビットのアプリケーション</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  <phrase role="productname"><phrase os="sled">SUSE® Linux Enterprise Desktop</phrase></phrase>は64ビットプラットフォームで利用できます。ただし、開発者はすべての32ビットアプリケーションを64ビットシステムに移植しているわけではありません。この章では、32ビットサポートを64ビットの<phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase>プラットフォームで実装する方法について簡潔に説明します。
 </para>
 <para>
  <phrase os="sled;osuse"><phrase role="productname"><phrase os="sled">64ビットプラットフォームのAMD64およびIntel 64に対応したSUSE Linux Enterprise Desktop</phrase></phrase></phrase>は、既存の 32ビットアプリケーションが 64ビット環境で「出荷してすぐに」動作するように設計されています。<quote></quote>このサポートにより、対応する 64ビット移植版が使用可能になるのを待たなくても、使用したい 32ビットアプリケーションを引き続き使用できます。
 </para>


 <note>
  <title>32ビットアプリケーションを構築するためのサポートなし</title>
  <para>
   <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase>では 32ビットアプリケーションのコンパイルをサポートしていません。32ビットバイナリのランタイムサポートのみ提供します。
  </para>
 </note>


 <sect1 xml:id="sec-64bit-runt">
  <title>ランタイムサポート</title>

  <important>
   <title>アプリケーションバージョン間の競合</title>
   <para>
    アプリケーションが32ビットと64ビットの両方の環境で利用可能な場合は、両方のバージョンをインストールすると問題が発生する可能性があります。このような場合は、ランタイムエラーになるのを回避するために、インストールする一方のバージョンを決めてください。
   </para>
   <para>
    PAM(プラグ可能認証モジュール)は、このルールの例外です。<phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase>は、ユーザとアプリケーションを仲介するレイヤとしての認証プロセスでPAMを使用します。32ビットアプリケーションも実行する64ビットオペレーティングシステムでは、常に両方のPAMバージョンをインストールしてください。
   </para>
  </important>

  <para>
   正しく実行するには、すべてのアプリケーションに一連のライブラリが必要です。しかし残念ながら、32ビットバージョンと64ビットバージョンのこれらのライブラリの名前は同じです。そのため、ライブラリを別の方法で区別する必要があります。
  </para>

  <para>
   32ビットバージョンとの互換性を保持するため、64ビットライブラリと32ビットライブラリは同じ場所に保存されます。<filename>libc.so.6</filename>の32ビットバージョンは、32ビットと64ビットのどちらの環境でも<filename>/lib/libc.so.6</filename>の下にあります。
  </para>

  <para>
   64ビットのすべてのライブラリとオブジェクトファイルは、<filename>lib64</filename>というディレクトリにあります。通常、<filename>/lib</filename>および<filename>/usr/lib</filename>の下にある64ビットのオブジェクトファイルは、<filename>/lib64</filename>および<filename>/usr/lib64</filename>の下にあります。つまり、両方のバージョンのファイル名を変更しなくても済むように、32ビットライブラリで使用可能な領域は<filename>/lib</filename>および<filename>/usr/lib</filename>の下になっています。
  </para>

  <para>
   <filename>/lib</filename>の下にある32ビットサブディレクトリのデータコンテンツがワードサイズに依存しない場合、サブディレクトリは移動されません。このスキームは、LSB (Linux Standards Base)とFHS (File System Hierarchy Standard)に準拠しています。
  </para>
 </sect1>
 <sect1 xml:id="sec-64bit-kernel">
  <title>カーネル仕様</title>

  <para>
   AMD 64またはIntel 64向けの64ビットカーネルには、64ビットと32ビットのカーネルABI (アプリケーションバイナリインタフェース)が用意されています。32ビットのカーネルABIは、該当する32ビットカーネルのABIと同じものです。つまり、32ビットアプリケーションと64ビットアプリケーションが64ビットカーネルで通信できることを意味します。
  </para>

  <para>
   64ビットカーネルのシステムコールの32ビットエミュレーションはシステムプログラムによって使用されるすべてのAPIをサポートしていません。ただし、このサポートの有無はプラットフォームによって異なります。このため、<command>lspci</command>などのいくつかのアプリケーションは、コンパイルする必要があります。
  </para>

  <para>
   64ビットカーネルは64ビットカーネルモジュールのみロードすることができます。そのため、64ビットカーネル用に特別に64ビットモジュールをコンパイルする必要があります。64ビットカーネルでは、32ビットカーネルモジュールを使用することはできません。
  </para>

  <tip>
   <title>カーネルロード可能モジュール</title>
   <para>
    一部のアプリケーションには、カーネルでロード可能な個々のモジュールが必要です。32ビットアプリケーションを64ビットシステム環境で使用したい場合は、アプリケーションおよびSUSEのプロバイダに問い合わせてください。」カーネルロード可能モジュールの64ビットバージョンとカーネルAPIの32ビットコンパイルバージョンがこのモジュール用に入手可能であることを確認してください。
   </para>
  </tip>
 </sect1>
</chapter>
