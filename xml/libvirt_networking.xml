<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.libvirt.networks">
 <title>Managing Networks</title>
 <info>
  <abstract>
   <para>
    This chapter introduces common networking configurations supported by
    &libvirt;. It does not depend on the hypervisor used, which means that
    it is valid for all hypervisors supported by &libvirt;, such as &kvm; or
    &xen;. These setups can be achieved using both the graphical interface
    of &vmm; and the command line tool <command>virsh</command>.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
  </dm:docmanager>
 </info>
 <para>
  There are two common network setups to provide a &vmguest; with a network
  connection&mdash;either create a <emphasis>virtual network</emphasis> for
  the guest, or create a <emphasis>network bridge</emphasis> over a host's
  physical network interface and have the guest use it.
 </para>
 <sect1 xml:id="libvirt.networks.virtual">
  <title>Virtual Networks</title>

  <para>
   A virtual network is a computer network which does not consist of a
   physical network link, but rather uses a virtual network link. Each host
   can have a number of virtual networks defined. Virtual networks are based
   on virtual devices that connects virtual machines inside a hypervisor.
   They allow outgoing traffic translated to the LAN and are provided with
   DHCP and DNS services. Virtual networks can be either
   <emphasis>isolated</emphasis>, or <emphasis>forwarded</emphasis> to a
   physical network.
  </para>

  <para>
   Guests inside an <emphasis>isolated</emphasis> virtual network can
   communicate with each other, but cannot communicate with guests outside
   the virtual network. Also, guests not belonging to the isolated virtual
   network cannot communicated with guests inside.
  </para>

  <para>
   On the other hand, guests inside a <emphasis>forwarded</emphasis> (NAT,
   network address translation) virtual network can make any outgoing
   network connection they request. Incoming connections are allowed from
   &vmhost;, and from other guests connected to the same virtual network.
   All other incoming connections are blocked by
   <systemitem>iptables</systemitem> rules.
  </para>

  <para>
   A standard libvirt installation on &productname; already comes with a
   predefined virtual network providing DHCP server and network address
   translation (NAT) named "default".
  </para>

  <sect2 xml:id="libvirt.networks.virtual.vmm">
   <title>Managing Virtual Networks with &vmm;</title>
   <para>
    You can define, configure, and operate both isolated and forwarded
    virtual networks with &vmm;.
   </para>
   <sect3 xml:id="libvirt.networks.virtual.vmm.define">
    <title>Defining Virtual Networks</title>
    <procedure>
     <step>
      <para>
       Start &vmm;. In the list of available connections, left-click the
       name of the connection for which you need to configure the virtual
       network, and then select <guimenu>Details</guimenu>.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Connection Details</guimenu> window, click the
       <guimenu>Virtual Networks</guimenu> tab. You can see the list of all
       virtual networks available for the current connection. On the right,
       there are details of the highlighted virtual network.
      </para>
      <figure>
       <title>Connection Details</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="libvirt_vmm_conndetails.png" width="45%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="libvirt_vmm_conndetails.png" width="45%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </step>
     <step>
      <para>
       Click <inlinemediaobject>
       <imageobject>
        <imagedata fileref="plus_sign.png" width="10px"/>
       </imageobject>
       </inlinemediaobject> to add a new virtual network.
      </para>
     </step>
     <step>
      <para>
       Type a name for the new virtual network and click
       <guimenu>Forward</guimenu>.
      </para>
      <figure>
       <title>Create virtual network</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="libvirt_vmm_vnet_name.png" width="45%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="libvirt_vmm_vnet_name.png" width="45%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </step>
     <step>
      <para>
       If you want to specify an IPv4 network address space definition,
       activate the relevant option and type it into the
       <guimenu>Network</guimenu> text entry.
      </para>
      <figure>
       <title>Create virtual network</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="libvirt_vmm_vnet_ipv4.png" width="45%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="libvirt_vmm_vnet_ipv4.png" width="45%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </step>
     <step>
      <para>
       &libvirt; can provide your virtual network with a DHCP server. If you
       need it, activate <guimenu>Enable DHCPv4</guimenu>, then type the
       start and end IP address range of assignable addresses.
      </para>
     </step>
     <step>
      <para>
       To enable static routing for the new virtual network, activate the
       relevant option and type the network and gateway addresses.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Forward</guimenu> to proceed.
      </para>
     </step>
     <step>
      <para>
       To specify IPv6-related options&mdash;network address space, DHCPv6
       server, or static route&mdash;activatei <guimenu>Enable IPv6 network
       address space definition</guimenu> and activate/fill the relevant
       options.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Forward</guimenu> to proceed.
      </para>
     </step>
     <step>
      <para>
       Select whether you want isolated or forwarded virtual network.
      </para>
      <figure>
       <title>Create virtual network</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="libvirt_vmm_vnet_type.png" width="45%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="libvirt_vmm_vnet_type.png" width="45%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
      <para>
       For forwarded networks, specify the network interface to which the
       requests will be forwarded, and one of the forwarding modes: while
       <guimenu>NAT</guimenu> (network address translation) remaps the
       virtual network address space and allows sharing a single IP address,
       <guimenu>Routed</guimenu> connects the virtual switch to the physical
       host LAN with no network translation.
      </para>
     </step>
     <step>
      <para>
       If you did not specify IPv6 network address space definition earlier,
       you can enable IPv6 internal routing between virtual machines.
      </para>
     </step>
     <step>
      <para>
       Optionally, change the DNS domain name.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Finish</guimenu> to create the new virtual network. On
       &vmhost;, a new virtual network bridge <literal>virbrX</literal>is
       available, which corresponds to the newly create virtual network. You
       can check with <command>brctl show</command>. &libvirt; automatically
       adds iptables rules to allow traffic to/from guests attached to the
       new <emphasis>virbrX</emphasis> device.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="libvirt.networks.virtual.vmm.start">
    <title>Starting Virtual Networks</title>
    <para>
     To start a virtual network that is temporarily stopped, follow these
     steps:
    </para>
    <procedure>
     <step>
      <para>
       Start &vmm;. In the list of available connections, left-click the
       name of the connection for which you need to configure the virtual
       network, and then select <guimenu>Details</guimenu>.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Connection Details</guimenu> window, click the
       <guimenu>Virtual Networks</guimenu> tab. You can see the list of all
       virtual networks available for the current connection.
      </para>
     </step>
     <step>
      <para>
       Click <inlinemediaobject>
       <imageobject>
        <imagedata fileref="play_sign.png" width="10px"/>
       </imageobject>
       </inlinemediaobject> to start the virtual network.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="libvirt.networks.virtual.vmm.stop">
    <title>Stopping Virtual Networks</title>
    <para>
     To stop an active virtual network, follow these steps:
    </para>
    <procedure>
     <step>
      <para>
       Start &vmm;. In the list of available connections, left-click the
       name of the connection for which you need to configure the virtual
       network, and then select <guimenu>Details</guimenu>.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Connection Details</guimenu> window, click the
       <guimenu>Virtual Networks</guimenu> tab. You can see the list of all
       virtual networks available for the current connection.
      </para>
     </step>
     <step>
      <para>
       Click <inlinemediaobject>
       <imageobject>
        <imagedata fileref="stop_sign.png" width="10px"/>
       </imageobject>
       </inlinemediaobject> to stop the virtual network.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="libvirt.networks.virtual.vmm.delete">
    <title>Deleting Virtual Networks</title>
    <para>
     To delete a virtual network from &vmhost;, follow these steps:
    </para>
    <procedure>
     <step>
      <para>
       Start &vmm;. In the list of available connections, left-click the
       name of the connection for which you need to configure the virtual
       network, and then select <guimenu>Details</guimenu>.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Connection Details</guimenu> window, click the
       <guimenu>Virtual Networks</guimenu> tab. You can see the list of all
       virtual networks available for the current connection.
      </para>
     </step>
     <step>
      <para>
       Click <inlinemediaobject>
       <imageobject>
        <imagedata fileref="delete_sign.png" width="10px"/>
       </imageobject>
       </inlinemediaobject> to delete the virtual network.
      </para>
     </step>
    </procedure>
   </sect3>
  </sect2>

  <sect2 xml:id="libvirt.networks.virtual.virsh">
   <title>Managing Virtual Networks with <command>virsh</command></title>
   <para>
    You can manage &libvirt;-provided virtual networks with the
    <command>virsh</command> command line tool. To view all network related
    <command>virsh</command> commands, run
   </para>
<screen># virsh help network
Networking (help keyword 'network'):
 net-autostart                  autostart a network
        net-create                     create a network from an XML file
        net-define                     define (but don't start) a network from an XML file
        net-destroy                    destroy (stop) a network
        net-dumpxml                    network information in XML
        net-edit                       edit XML configuration for a network
        net-event                      Network Events
        net-info                       network information
        net-list                       list networks
        net-name                       convert a network UUID to network name
        net-start                      start a (previously defined) inactive network
        net-undefine                   undefine an inactive network
        net-update                     update parts of an existing network's configuration
 net-uuid                       convert a network name to network UUID</screen>
   <para>
    To view a brief help information for a specific <command>virsh</command>
    command, run <command>virsh help
    <replaceable>virsh_command</replaceable></command>:
   </para>
<screen># virsh help net-create
  NAME
    net-create - create a network from an XML file

  SYNOPSIS
    net-create &lt;file>

  DESCRIPTION
    Create a network.

  OPTIONS
    [--file] &lt;string>  file containing an XML network description</screen>
   <sect3 xml:id="libvirt.networks.virtual.virsh.create">
    <title>Creating a Network</title>
<!-- 2016-02-25 tbazant
     http://wiki.libvirt.org/page/VirtualNetworking#Creating_a_virtual_network
     http://libvirt.org/formatnetwork.html
     http://libvirt.org/sources/virshcmdref/html/sect-net-create.html
     http://libvirt.org/sources/virshcmdref/html/
     -->
    <para>
     To create a new <emphasis>running</emphasis> virtual network, run
    </para>
<screen>&prompt.root;virsh net-create <replaceable>vnet_definition.xml</replaceable></screen>
    <para>
     The <replaceable>vnet_definition.xml</replaceable> XML file includes
     the definition of the virtual network that &libvirt; accepts.
    </para>
    <para>
     To define a new virtual network without activating it, run
    </para>
<screen>&prompt.root;virsh net-define <replaceable>vnet_definition.xml</replaceable></screen>
    <para>
     The following examples illustrate definitions of different types of
     virtual networks.
    </para>
    <example>
     <title>NAT Based Network</title>
     <para>
      The following configuration allows &vmguest;s outgoing connectivity if
      it is available on &vmhost;. In the absence of &vmhost; networking, it
      allows guests to talk directly to each other.
     </para>
<screen>
&lt;network>
&lt;name>vnet_nated&lt;/name><co xml:id="vnet.xml.name"/>
&lt;bridge name="virbr1" /><co xml:id="vnet.xml.bridge"/>
 &lt;forward mode="nat"/><co xml:id="vnet.xml.forward"/>
 &lt;ip address="192.168.122.1" netmask="255.255.255.0"><co xml:id="vnet.xml.ip"/>
  &lt;dhcp>
   &lt;range start="192.168.122.2" end="192.168.122.254" /><co xml:id="vnet.xml.dhcp"/>
  &lt;/dhcp>
 &lt;/ip>
&lt;/network>
</screen>
     <calloutlist>
      <callout arearefs="vnet.xml.name">
       <para>
        The name of the new virtual network.
       </para>
      </callout>
      <callout arearefs="vnet.xml.bridge">
       <para>
        The name of the bridge device used to construct the virtual network.
        When defining a new network with a &lt;forward> mode of "nat" or
        "route" (or an isolated network with no &lt;forward> element),
        &libvirt; will automatically generate a unique name for the bridge
        device if none is given.
       </para>
      </callout>
      <callout arearefs="vnet.xml.forward">
       <para>
        Inclusion of the &lt;forward> element indicates that the virtual
        network will be connected to the physical LAN. The
        <literal>mode</literal> attribute specifies the forwarding method.
        The most common modes are "nat" (default, network address
        translation), "route" (direct forwarding to the physical network, no
        address translation), and "bridge" (network bridge configured
        outside of &libvirt;). If the &lt;forward> element is not specified,
        the virtual network will be isolated from other networks. For a
        complete list of forwarding modes, see
        <link xlink:href="http://libvirt.org/formatnetwork.html#elementsConnect"/>.
       </para>
      </callout>
      <callout arearefs="vnet.xml.ip">
       <para>
        The IP address and netmask for the network bridge.
       </para>
      </callout>
      <callout arearefs="vnet.xml.dhcp">
       <para>
        Enable DHCP server for the virtual network, offering IP addresses
        ranging from the specified <literal>start</literal> and
        <literal>end</literal> attribute.
       </para>
      </callout>
     </calloutlist>
    </example>
    <example>
     <title>Routed Network</title>
     <para>
      The following configuration routes traffic from the virtual network to
      the LAN without applying any NAT. The IP address range must be
      pre-configured in the routing tables of the router on &vmhost;
      network.
     </para>
<screen>
&lt;network>
 &lt;name>vnet_routed&lt;/name>
 &lt;bridge name="virbr1" />
 &lt;forward mode="route" dev="eth1"/><co xml:id="vnet.xml.route"/>
 &lt;ip address="192.168.122.1" netmask="255.255.255.0">
  &lt;dhcp>
   &lt;range start="192.168.122.2" end="192.168.122.254" />
  &lt;/dhcp>
 &lt;/ip>
&lt;/network>
</screen>
     <calloutlist>
      <callout arearefs="vnet.xml.route">
       <para>
        The guest traffic may only go out via the
        <systemitem>eth1</systemitem> network device on the &vmhost;.
       </para>
      </callout>
     </calloutlist>
    </example>
    <example>
     <title>Isolated Network</title>
     <para>
      This configuration provides a completely isolated private network. The
      guests can talk to each other, and to &vmhost;, but cannot reach any
      other machines on the LAN, as the &lt;forward> element is missing in
      the XML description.
     </para>
<screen>
&lt;network>
        &lt;name>vnet_isolated&lt;/name>
        &lt;bridge name="virbr3" />
        &lt;ip address="192.168.152.1" netmask="255.255.255.0">
                &lt;dhcp>
                        &lt;range start="192.168.152.2" end="192.168.152.254" />
                &lt;/dhcp>
        &lt;/ip>
&lt;/network>
</screen>
    </example>
    <example>
     <title>Using an Existing Bridge on &vmhost;</title>
     <para>
      This configuration shows how to use an existing &vmhost;'s network
      bridge <literal>br0</literal>. &vmguest;s are directly connected to
      the physical network. Their IP addresses will all be on the subnet of
      the physical network, and there will be no restrictions on incoming or
      outgoing connections.
     </para>
<screen>
&lt;network>
        &lt;name>host-bridge&lt;/name>
        &lt;forward mode="bridge"/>
        &lt;bridge name="br0"/>
&lt;/network>
</screen>
    </example>
   </sect3>
   <sect3 xml:id="libvirt.networks.virtual.virsh.list">
    <title>Listing Networks</title>
    <para>
     To list all virtual networks available to &libvirt;, run
    </para>
<screen>&prompt.root;virsh net-list --all

 Name                 State      Autostart     Persistent
----------------------------------------------------------
 crowbar              active     yes           yes
 vnet_nated           active     yes           yes
 vnet_routed          active     yes           yes
 vnet_isolated        inactive   yes           yes</screen>
   </sect3>
   <sect3 xml:id="libvirt.networks.virtual.virsh.info">
    <title>Getting Details about a Network</title>
    <para>
     To get detailed informaiton about a network, run
    </para>
<screen>&prompt.root;virsh net-info vnet_routed
Name:           vnet_routed
UUID:           756b48ff-d0c6-4c0a-804c-86c4c832a498
Active:         yes
Persistent:     yes
Autostart:      yes
Bridge:         virbr5</screen>
   </sect3>
   <sect3 xml:id="libvirt.networks.virtual.virsh.start">
    <title>Starting a Network</title>
    <para>
     To start an inactive network that was already defined, find its name
     (or unique identifier, UUID) with
    </para>
<screen>&prompt.root;virsh net-list --inactive
 Name                 State      Autostart     Persistent
----------------------------------------------------------
 vnet_isolated        inactive   yes           yes</screen>
    <para>
     and then run
    </para>
<screen>&prompt.root;virsh net-start vnet_isolated
Network vnet_isolated started</screen>
   </sect3>
   <sect3 xml:id="libvirt.networks.virtual.virsh.stop">
    <title>Stopping a Network</title>
    <para>
     To stop an active network, find its name (or unique identifier, UUID)
     with
    </para>
<screen>&prompt.root;virsh net-list --inactive
 Name                 State      Autostart     Persistent
----------------------------------------------------------
 vnet_isolated        active     yes           yes</screen>
    <para>
     and then run
    </para>
<screen>&prompt.root;virsh net-destroy vnet_isolated
Network vnet_isolated destroyed</screen>
   </sect3>
   <sect3 xml:id="libvirt.networks.virtual.virsh.undefine">
    <title>Removing a Network</title>
    <para>
     To remove the definition of an inactive network from &vmhost;
     permanently, run
    </para>
<screen>&prompt.root;virsh net-undefine vnet_isolated
Network vnet_isolated has been undefined</screen>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="libvirt.networks.bridged">
  <title>Bridged Networking</title>

  <para>
   A network bridge is used to connect two or more network segments. It
   behaves like a virtual network switch, and guest machines treat it
   transparently as a physical network interface. Any physical or virtual
   device can be connected to the bridge.
  </para>

  <para>
   If there is a network bridge present on &vmhost;, you can connect
   &vmguest; directly to it. This provides the &vmguest; with full incoming
   and outgoing network access.
  </para>

  <sect2 xml:id="libvirt.networks.bridged.yast">
   <title>Managing Network Bridges with &yast;</title>
   <para>
    This section includes procedures to add or remove network bridges with
    &yast;.
   </para>
   <sect3 xml:id="libvirt.networks.bridged.yast.add">
    <title>Adding a Network Bridge</title>
    <para>
     To add a network bridge on &vmhost;, follow these steps:
    </para>
    <procedure>
     <step>
      <para>
       Start
       <menuchoice><guimenu>&yast;</guimenu><guimenu>System</guimenu><guimenu>Network
       Settings</guimenu></menuchoice>.
      </para>
     </step>
     <step>
      <para>
       Activate the <guimenu>Overview</guimenu> tab and click
       <guimenu>Add</guimenu>.
      </para>
     </step>
     <step>
      <para>
       Select <guimenu>Bridge</guimenu> from the <guimenu>Device
       Type</guimenu> list and enter the bridge device interface name in the
       <guimenu>Configuration Name</guimenu> entry. Proceed with
       <guimenu>Next</guimenu>.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Address</guimenu> tab, specify networking details
       such as DHCP/static IP address, subnet mask or host name.
      </para>
     </step>
     <step>
      <para>
       Activate the <guimenu>Bridged Devices</guimenu> tab and activate the
       network devices you want to include in the network bridge.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Next</guimenu> to return to the
       <guimenu>Overview</guimenu> tab and confirm with
       <guimenu>OK</guimenu>. The new network bridge should be active on
       &vmhost; now.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="libvirt.networks.bridged.yast.rm">
    <title>Deleting a Network Bridge</title>
    <para>
     To delete an existing network bridge, follow these steps:
    </para>
    <procedure>
     <step>
      <para>
       Start
       <menuchoice><guimenu>&yast;</guimenu><guimenu>System</guimenu><guimenu>Network
       Settings</guimenu></menuchoice>.
      </para>
     </step>
     <step>
      <para>
       Select the bridge device you want to delete from the list in the
       <guimenu>Overview</guimenu> tab.
      </para>
     </step>
     <step>
      <para>
       Delete the bridge with <guimenu>Delete</guimenu> and confirm with
       <guimenu>OK</guimenu>.
      </para>
     </step>
    </procedure>
   </sect3>
  </sect2>

  <sect2 xml:id="libvirt.networks.bridged.add.brctl">
   <title>Managing Network Bridges with <command>brctl</command></title>
   <para>
    This section includes procedures to add or remove network bridges with
    the <command>brctl</command> command line tool.
   </para>
   <sect3 xml:id="libvirt.networks.bridged.add.brctl.add">
    <title>Adding a Network Bridge</title>
    <para>
     To add a new network bridge device on &vmhost; with
     <command>brctl</command>, follow these steps:
    </para>
    <procedure>
     <step>
      <para>
       Login as &rootuser; on the &vmhost; where you want to create a new
       network bridge.
      </para>
     </step>
     <step>
      <para>
       Choose a name for the new
       bridge&mdash;<replaceable>virbr_test</replaceable> in our
       example&mdash; and run
      </para>
<screen>&prompt.root;brctl addbr <replaceable>virbr_test</replaceable></screen>
     </step>
     <step>
      <para>
       Check if the bridge was create on &vmhost;:
      </para>
<screen>&prompt.root;brctl show
bridge name     bridge id           STP enabled     interfaces
br0             8000.e06995ec09e8   no              eth0
virbr0          8000.525400b37ec9   yes             virbr0-nic
virbr_test      8000.000000000000   no</screen>
      <para>
       <literal>virbr_test</literal> is present, but is not associated with
       any physical network interface.
      </para>
     </step>
     <step>
      <para>
       Add a network interface to the bridge:
      </para>
<screen>&prompt.root;brctl addif eth1</screen>
      <important>
       <para>
        You can only enslave a network interface that is not yet used by
        other network bridge.
       </para>
      </important>
     </step>
     <step>
      <para>
       Optionally, enable STP (see
       <link xlink:href="https://en.wikipedia.org/wiki/Spanning_Tree_Protocol">Spanning
       Tree Protocol</link>):
      </para>
<screen>&prompt.root;brctl stp <replaceable>virbr_test</replaceable> on</screen>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="libvirt.networks.bridged.add.brctl.del">
    <title>Deleting a Network Bridge</title>
    <para>
     To delete an existing network bridge device on &vmhost; with
     <command>brctl</command>, follow these steps:
    </para>
    <procedure>
     <step>
      <para>
       Login as &rootuser; on the &vmhost; where you want to delete an
       existing network bridge.
      </para>
     </step>
     <step>
      <para>
       List existing network bridges to identify the name of the bridge to
       remove:
      </para>
<screen>&prompt.root;brctl show
bridge name     bridge id           STP enabled     interfaces
br0             8000.e06995ec09e8   no              eth0
virbr0          8000.525400b37ec9   yes             virbr0-nic
virbr_test      8000.000000000000   yes             eth1</screen>
     </step>
     <step>
      <para>
       Delete the bridge:
      </para>
<screen>&prompt.root;brctl delbr <replaceable>virbr_test</replaceable></screen>
     </step>
    </procedure>
   </sect3>
  </sect2>
 </sect1>
</chapter>
