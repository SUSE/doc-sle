<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
  [
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha-containers-build"
  xml:lang="en"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Tool for Building Images and Managing Containers</title>
 </info>
 <para>
  This chapter provides a brief overview of tools for building images and
  managing containers. Most of the tools mentioned below are part of the
  <emphasis role="strong">&sls; 15 SP2 Containers Module</emphasis> . You
  can see the full list of packages in the <emphasis role="strong">Containers
  Module</emphasis> in the <link
  xlink:href="https://scc.suse.com/packages?name=SUSE%20Linux%20Enterprise%20Server&amp;version=15.2&amp;arch=x86_64&amp;query=&amp;module=1963">
  &suse; Customer Center </link> .
 </para>
 <sect1 xml:id="sec-build-tools">
  <title>Tools Available to Customers</title>

  <sect2 xml:id="sec-build-tools-docker">
   <title>Docker</title>
   <para>
    &docker; is a system for creating and managing containers. Its core is the
    Docker Open Source Engine&mdash;a lightweight virtualization solution to
    run containers simultaneously on a single host. &docker; containers can be
    built using Dockerfiles (see <xref linkend="Dockerfile"/>). For a general
    introduction to &deng;, refer to <xref linkend="cha-docker-overview"/>.
   </para>
  </sect2>

  <sect2 xml:id="sec-build-tools-podman">
   <title>Podman</title>
   <para>
    Podman stands for Pod Manager tool. It is a daemonless container engine for
    developing, managing, and running Open Container Initiative (OCI)
    containers on a Linux system, and it offers a drop-in alternative for
    &docker;. Podman is the default container runtime in &opensuse;
    Kubic&mdash;a certified Kubernetes distribution built on top of &opensuse;.
    For a general introduction to &podman;, refer to
    <xref linkend="cha-podman-overview"/>.
   </para>
  </sect2>

  <sect2 xml:id="sec-build-tools-buildah">
   <title>Buildah</title>
   <para>
    &buildah; facilitates building OCI container images. It is a complimentary
    tool to &podman;, and <literal> podman build </literal> uses &buildah; to
    perform container image builds. &buildah; makes it possible to build images
    from scratch, from existing images, and using Dockerfiles. OCI images built
    using the &buildah; command-line tool and the underlying OCI-based
    technologies (for example, <literal>containers/image</literal> and
    <literal>containers/storage</literal> ) are portable and can therefore run
    in a &deng; environment.
   </para>
   <para>
    For information on installing and using &buildah;, refer to
    <xref linkend="cha-buildah-overview" />.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-internal-build-tools">
  <title>SUSE Build Tools</title>

  <sect2 xml:id="sec-internal-build-tools-obs">
   <title>Open Build Service</title>
   <para>
    The Open Build Service (OBS) provides free infrastructure for building and
    storing RPM packages including various container formats. The
    <link xlink:href="https://registry.opensuse.org/cgi-bin/cooverview"> OBS
    Container Registry </link> provides a detailed listing of all container
    images built by the OBS, complete with commands for pulling the images into
    your local Docker environment. The OBS &opensuse;
    <link xlink:href="https://build.opensuse.org/image_templates"> container
    image templates </link> can be modified to specific needs, which offers the
    easiest way to create your own container branch. Container images can be
    built with native Docker tools from an existing image using a Dockerfile.
    Alternatively, images can be built from scratch using the &kiwi;
    image-building solution.
   </para>
   <para>
    Instructions on how to build images on OBS can be found at
    <link xlink:href="https://openbuildservice.org/2018/05/09/container-building-and-distribution/"/>
    .
   </para>
  </sect2>

  <sect2 xml:id="sec-internal-build-tools-kiwi">
   <title>&kiwi;</title>
   <para>
    KIWI Next Generation is a multi-purpose tool for building images. In
    addition to container images, regular installation ISO images, and images
    for virtual machines, &kiwi; can build images that boot via PXE or Vagrant
    boxes. The main building block in &kiwi; is an image XML description, a
    directory that includes the <filename>config.xml</filename> or
    <filename>.kiwi</filename> file along with scripts or configuration data.
    The process of creating images with &kiwi; is fully automated and does not
    require any user interaction. Any information required for the image
    creation process is provided by the primary configuration file
    <literal>config.xml</literal> . The image can be customized using the
    <filename>config.sh</filename> and <filename>images.sh</filename> scripts.
   </para>
   <note>
    <para>
     It is important to distinguish between KIWI NG (currently version 9.20.9)
     and its unmaintained legacy versions (7.x.x or older), now called
     <link xlink:href="https://documentation.suse.com/kiwi/"> KIWI Legacy
     </link> .
    </para>
   </note>
   <para>
    For specific information on how to install &kiwi; and use it to build
    images, see the <link xlink:href="http://osinside.github.io/kiwi/"> KIWI
    documentation </link> . A collection of example image descriptions can be
    found on the
    <link xlink:href="https://github.com/OSInside/kiwi-descriptions"> KIWI
    GitHub repository </link> .
   </para>
   <para>
    &kiwi;'s man pages provide information on using the tool. To access man
    pages, install the <package>kiwi-man-pages</package> package.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-building-official-slea-images">
  <title>Building Official &slea; Images</title>

  <para>
   Images are considered official only if they are built using the Internal
   Build Service.
  </para>

  <para>
   There are no official &slea; container images on
   <link xlink:href="https://build.opensuse.org" /> , and the RPMs exported
   there are not identical to the internal ones. This means that it is not
   possible to build officially supported images on
   <link xlink:href="https://build.opensuse.org" /> .
  </para>
 </sect1>
</chapter>
