<?xml version="1.0" encoding="UTF-8"?>

<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
                 type="text/xml"
                 title="Profiling step"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
  <!ENTITY as "alternatives system">
  <!ENTITY AS "Alternatives System">
]>
<chapter version="5.1"  xml:id="cha.update-alternative"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title><command>update-alternatives</command>: Managing Multiple Versions of Commands and Files</title>
 <info>
  <abstract>
   <para>
    Often, there are several versions of the same tool installed on a
    system.
    To give administrators a choice and to make it possible to install and
    use different versions side by side, the alternatives system allows
    managing such versions consistently.
   </para>
  </abstract>
 <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

  <sect1 xml:id="sec.ua.concept">
   <title>Conceptual Overview</title>
   <para>
    On &productname;, some programs perform the same or similar tasks. For example,
    if Java 1.7 and Java 1.8 are both installed on the system, the &as; script
    (<command>update-alternatives</command>) is called from inside the RPM package.
    By default, the &as; will refer to version 1.8: Higher versions also have a
    higher priority. However, the administrator can change the default and
    can point the generic name to version 1.7.
   </para>
   <para>
    The following terminology is used in this chapter:
   </para>
   <variablelist>
    <title>Terminology</title>
    <varlistentry>
     <term>Administrative directory</term>
     <listitem>
      <para>
       The default <filename class="directory"
        >/var/lib/rpm/alternatives</filename> directory contains information
       about the current state of alternatives.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Alternative</term>
     <listitem>
      <para>
       The name of a specific file in the file system, which can be made
       accessible via a generic name using the &as;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Alternatives directory</term>
     <listitem>
      <para>
       The default <filename class="directory">/etc/alternatives</filename>
       directory containing symbolic links.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Generic name</term>
     <listitem>
      <para>
       A name (for example, <command>/usr/bin/edit</command>) that refers to
       one file out of several available using the &as;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Link group</term>
     <listitem>
      <para>
       A set of related symbolic links that can be updated as a group.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Master link</term>
     <listitem>
      <para>
       The link in a link group that determines how the other links in the
       group are configured.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Slave link</term>
     <listitem>
      <para>
       A link in a link group controlled by the master link.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Symbolic link (Symlink)</term>
     <listitem>
      <para>
       A file that is a reference to another file in the same file system.
       The &as; uses symbolic links in the alternatives directory to switch
       between versions of a file.
      </para>
      <para>
       Symbolic links in the alternatives directory can be modified by the
       administrator through the <command>update-alternatives</command>
       command.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    The &as; provides the <command>update-alternatives</command> command to
    create, remove, maintain, and show information about symbolic links.
    While these symbolic links usually point to commands, they can also point
    to JAR archives, man pages, and other files.
    Examples in this chapter use commands and man pages, but they are also
    applicable to other file types.
   </para>
   <para>
    The &as; uses the alternatives directory to collect links to possible
    alternatives. When a new package with an alternative is installed,
    the new alternative is added to the system. Whether the new package's
    alternative is selected as the default depends on its priority and on the
    mode that is set. Usually, packages
    with a higher version also have a higher priority. The &as; can operate
    in two modes:
   </para>
   <itemizedlist>
    <listitem>
     <formalpara>
      <title>Automatic Mode</title>
      <para>
       In this mode, the &as; ensures that the links in the group point to
       the highest priority alternatives appropriate for the group.
      </para>
     </formalpara>
    </listitem>
    <listitem>
     <formalpara>
      <title>Manual Mode</title>
      <para>
       In this mode, the &as; does not make any changes to the system
       administrator's settings.
      </para>
     </formalpara>
    </listitem>
   </itemizedlist>
   <para>
    For example, the <command>java</command> command has the following link
    hierarchy in the &as;:
   </para>
   <example>
    <title>&AS; of the <command>java</command> Command</title>
    <screen>/usr/bin/java <co xml:id="co.ua.java.name"/>
 -> /etc/alternatives/java <co xml:id="co.ua.java.symbolic-link"/>
     -> /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java <co xml:id="co.ua.java.alternatives"/></screen>
    <!--<screen>&prompt.user;<command>ls</command> -l /usr/bin/java <co xml:id="co.ua.exa.usr_bin_java"/>
lrwxrwxrwx 1 root root 22 16. Feb 2017  /usr/bin/java -> /etc/alternatives/java <co xml:id="co.ua.exa.etc_alternatives_java"/>
&prompt.user;<command>ls</command> -l /etc/alternatives/java
lrwxrwxrwx 1 root root 41 11. Dez 16:48 /etc/alternatives/java -> /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java</screen>-->
    <calloutlist>
     <callout arearefs="co.ua.java.name">
      <para>
       The generic name.
      </para>
     </callout>
     <callout arearefs="co.ua.java.symbolic-link">
      <para>
       The symbolic link in the alternatives directory.
      </para>
     </callout>
     <callout arearefs="co.ua.java.alternatives">
      <para>
       One of the alternatives.
      </para>
     </callout>
    </calloutlist>
   </example>
  </sect1>

  <sect1 xml:id="sec.ua.use-cases">
   <title>Use Cases</title>
   <para>
    By default, the <command>update-alternatives</command> script is called
    from inside an RPM package. When a package is installed or removed, the
    script takes care of all its symbolic links.
    But you can run it manually from the command line for:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      displaying the current alternatives for a generic name.
     </para>
    </listitem>
    <listitem>
     <para>
      changing the defaults of an alternative.
     </para>
    </listitem>
    <listitem>
     <para>
     creating a set of related files for an alternative.
     </para>
    </listitem>
   </itemizedlist>
  </sect1>

  <sect1 xml:id="sec.ua.view">
   <title>Viewing Alternatives</title>
   <para>
    The easiest way to check the alternatives is to follow the symbolic links of
    your command.
    For example, if you want to know what the <command>java</command>
    command is referring to, use the following command:
   </para>
   <screen>&prompt.user;<command>readlink</command> --canonicalize /usr/bin/java
/usr/lib64/jvm/jre-1.8.0-openjdk/bin/java</screen>
   <para>
    If you see the same path (in our example, it is
    <filename>/usr/bin/java</filename>),
    there are no alternatives available for this command.
   </para>
   <!--<para>
    In case you want to get an overview of all possible alternatives, use the
    option <option>-\-config</option> like this:
   </para>
   <screen>&prompt.user;<command>sudo</command> update-alternatives -\-config java
There are 2 choices for the alternative java (providing /usr/bin/java).

  Selection    Path                                       Priority   Status
-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
* 0            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      auto mode
  1            /usr/lib64/jvm/jre-1.7.0-openjdk/bin/java   1705      manual mode
  2            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      manual mode</screen>
   <para>
    If you do not want to change anything, press <keycap function="enter"/>.
   </para>-->
   <para>
    To see the full alternatives (including slaves), use the
    <option>--display</option> option:
   </para>
   <screen>&prompt.user;<command>update-alternatives</command> --display java
java - auto mode
  link best version is /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java
  link currently points to /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java
  link java is /usr/bin/java
  slave java.1.gz is /usr/share/man/man1/java.1.gz
  slave jre is /usr/lib64/jvm/jre
  slave jre_exports is /usr/lib64/jvm-exports/jre
  slave keytool is /usr/bin/keytool
  slave keytool.1.gz is /usr/share/man/man1/keytool.1.gz
  slave orbd is /usr/bin/orbd
  slave orbd.1.gz is /usr/share/man/man1/orbd.1.gz
[...]</screen>
  </sect1>

  <sect1 xml:id="sec.ua.set">
   <title>Setting the Default Version of Alternatives</title>
   <para>
    By default, commands in <filename>/usr/bin</filename> refer to the
    alternatives directory with the highest priority. For example,
    by default, the command <command>java</command> shows the following
    version number:
   </para>
   <screen>&prompt.user;<command>java</command> -version
openjdk version "1.8.0_151"
OpenJDK Runtime Environment (IcedTea 3.6.0) (build 1.8.0_151-b12 suse-10.18.2-x86_64)
OpenJDK 64-Bit Server VM (build 25.151-b12, mixed mode)</screen>
   <para>
    To change the default <command>java</command> command to refer
    to a previous version, run:
   </para>
   <screen>&prompt.user;<command>sudo</command> update-alternatives --config java
root's password:
There are 2 choices for the alternative java (providing /usr/bin/java).

  Selection    Path                                       Priority   Status
------------------------------------------------------------
* 0            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      auto mode
  1            /usr/lib64/jvm/jre-1.7.0-openjdk/bin/java   1705      manual mode
  2            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      manual mode

Press &lt;enter> to keep the current choice[*], or type selection number:</screen>
   <para>
    Depending on your system and installed versions, the exact Java version
    number will be different.
    After you have selected <literal>1</literal>, <command>java</command>
    shows the following version number:
   </para>
   <screen>&prompt.user;<command>java</command> -version
java version "1.7.0_141"
OpenJDK Runtime Environment (IcedTea 2.6.10) (suse-42.3.1-x86_64)
OpenJDK 64-Bit Server VM (build 24.141-b02, mixed mode)</screen>
   <para>
    Also, keep in mind the following points:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      When working in manual mode and installing another Java
      version, the &as; neither touches the links nor changes the
      generic name.
     </para>
    </listitem>
    <listitem>
     <para>
      When working in automatic mode and installing another Java version,
      the &as; changes the Java master link and all slave links (as you can
      see in <xref linkend="sec.ua.view"/>).
      To check the master-slave relationships, use:
     </para>
     <screen>&prompt.user;update-alternatives --display java</screen>
    </listitem>
   </itemizedlist>
  </sect1>

  <sect1 xml:id="sec.ua.install">
   <title>Installing Custom Alternatives</title>
   <para>
    This section describes how to set up custom alternatives on a system.
    The example makes the following assumptions:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      There are two scripts, <command>foo-2</command> and <command>foo-3</command>,
      with similar functionality.
     </para>
    </listitem>
    <listitem>
     <para>
      The scripts are stored in the <filename>/usr/local/bin</filename>
      directory to avoid any conflicts with the system tools in
      <filename>/usr/bin</filename>.
     </para>
    </listitem>
    <listitem>
     <para>
      There is a master link <command>foo</command> that points to either
      <command>foo-2</command> or <command>foo-3</command>.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    To provide alternatives on your system, follow these steps:
   </para>
   <procedure>
    <step>
     <para>
      Copy your scripts into the <filename>/usr/local/bin</filename> directory.
     </para>
    </step>
    <step>
     <para>
      Make the scripts executable:
     </para>
     <screen>&prompt.root;<command>chmod</command> +x /usr/local/bin/foo-{2,3}</screen>
    </step>
    <step>
     <para>
      Run <command>update-alternatives</command> for both scripts:
     </para>
     <screen>&prompt.root;<command>update-alternatives</command> --install \
   /usr/local/bin/foo <co xml:id="co.ua.ua-install.usr-local-bin-foo"/>\
   foo <co xml:id="co.ua.ua-install.foo"/>\
   /usr/local/bin/foo-2 <co xml:id="co.ua.ua-install.usr-local-bin-foo.path"/>\
   200 <co xml:id="co.ua.ua-install.prio"/>
&prompt.root;<command>update-alternatives</command> --install \
   /usr/local/bin/foo <xref linkend="co.ua.ua-install.usr-local-bin-foo"/>\
   foo <xref linkend="co.ua.ua-install.foo"/>\
   /usr/local/bin/foo-3 <xref linkend="co.ua.ua-install.usr-local-bin-foo.path"/>\
   300 <xref linkend="co.ua.ua-install.prio"/></screen>
     <para>
      The options after <option>--install</option> have the following meanings:
     </para>
     <calloutlist>
      <callout arearefs="co.ua.ua-install.usr-local-bin-foo">
       <para>
        The generic name. To avoid confusion, this is usually the script
        name without any version numbers.
       </para>
      </callout>
      <callout arearefs="co.ua.ua-install.foo">
       <para>
        The name of the master link. Must be the same.
       </para>
      </callout>
      <callout arearefs="co.ua.ua-install.usr-local-bin-foo.path">
       <para>
        The path to the original script(s) located in
        <filename>/usr/local/bin</filename>.
       </para>
      </callout>
      <callout arearefs="co.ua.ua-install.prio">
       <para>
        The priority.
        We give <command>foo-2</command> a lower priority than
        <command>foo-3</command>.
        It is good practice to use a significant number increase to separate
        priorities. For example, a priority of 200 for <command>foo-2</command>
        and 300 for <command>foo-3</command>.
       </para>
      </callout>
     </calloutlist>
    </step>
    <step>
     <para>
      Check the master link:
     </para>
     <screen>&prompt.root;<command>update-alternatives</command> --display foo
foo - auto mode
  link best version is /usr/local/bin/foo-3
  link currently points to /usr/local/bin/foo-3
  link foo is /usr/local/bin/foo
/usr/local/bin/foo-2 - priority 200
/usr/local/bin/foo-3 - priority 300</screen>
    </step>
   </procedure>
   <para>
    After you completed the described steps, you can use the master link
    <command>/usr/local/bin/foo</command>.
   </para>
   <para>
    If needed, you can install additional alternatives.
    To remove an alternative, use the following command:
   </para>
   <screen>&prompt.root;<command>update-alternatives</command> --remove foo /usr/local/bin/foo-2</screen>
   <para>
    After this script has been removed, the &as; for the foo group looks
    like this:
   </para>
   <screen>&prompt.root;<command>update-alternatives</command> --display foo
foo - auto mode
  link best version is /usr/local/bin/foo-3
  link currently points to /usr/local/bin/foo-3
  link foo is /usr/local/bin/foo
/usr/local/bin/foo-3 - priority 300</screen>
  </sect1>

  <sect1 xml:id="sec.ua.slave">
   <title>Defining Dependent Alternatives</title>
   <para>
    If you have alternatives, the script itself is not enough. Most commands
    are not completely stand-alone: They usually ship with additional files,
    such as extensions, configurations, or man pages.
    To create alternatives which are dependent on a master
    link, use <emphasis>slave alternatives</emphasis>.
   </para>
   <para>
    Let us assume we want to extend our example in <xref linkend="sec.ua.install"/>
    and provide man pages and configuration files:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Two man pages, <filename>foo-2.1.gz</filename> and <filename>foo-3.1.gz</filename>
      stored in the <filename>/usr/local/man/man1</filename> directory.
     </para>
    </listitem>
    <listitem>
     <para>
      Two configuration files, <filename>foo-2.conf</filename> and
      <filename>foo-3.conf</filename>, stored in <filename>/etc</filename>.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Follow these steps to add the additional files to your alternatives:
   </para>
   <procedure>
    <step>
     <para>
      Copy the configuration files into <filename>/etc</filename>:
     </para>
     <screen>&prompt.root;<command>cp</command> foo-{2,3}.conf /etc</screen>
    </step>
    <step>
     <para>
      Copy the man pages into the <filename>/usr/local/man/man1</filename>
      directory:
     </para>
     <screen>&prompt.root;<command>cp</command> foo-{2,3}.1.gz /usr/local/man/man1/</screen>
    </step>
    <step>
     <para>
      Add the slave links to the main scripts with the <option>--slave</option>
      option:
     </para>
     <screen>&prompt.root;<command>update-alternatives</command> --install \
   /usr/local/bin/foo foo /usr/local/bin/foo-2 200 \
   --slave /usr/local/man/man1/foo.1.gz \
   foo.1.gz \
   /usr/local/man/man1/foo-2.1.gz \
   --slave /etc/foo.conf \
   foo.conf \
   /etc/foo-2.conf
&prompt.root;<command>update-alternatives</command> --install \
   /usr/local/bin/foo foo /usr/local/bin/foo-3 300 \
   --slave /usr/local/man/man1/foo.1.gz \
   foo.1.gz \
   /usr/local/man/man1/foo-3.1.gz \
   --slave /etc/foo.conf \
   foo.conf \
   /etc/foo-3.conf</screen>
    </step>
    <step>
     <para>Check the master link:</para>
     <screen>foo - auto mode
  link best version is /usr/local/bin/foo-3
  link currently points to /usr/local/bin/foo-3
  link foo is /usr/local/bin/foo
  slave foo.1.gz is /usr/local/man/man1/foo.1.gz
  slave foo.conf is /etc/foo.conf
/usr/local/bin/foo-2 - priority 200
  slave foo.1.gz: /usr/local/man/man1/foo-2.1.gz
  slave foo.conf: /etc/foo-2.conf
/usr/local/bin/foo-3 - priority 300
  slave foo.1.gz: /usr/local/man/man1/foo-3.1.gz
  slave foo.conf: /etc/foo-3.conf</screen>
    </step>
   </procedure>
   <para>
    If you change the links with <command>update-alternatives --config foo</command>
    to <command>foo-2</command>, then all slave links will change as well.
   </para>
  </sect1>
</chapter>
