<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="tuning_oprofile.xml" version="5.0" xml:id="cha-tuning-oprofile">

 <title>OProfile — 系统范围的分析器</title>
 <info>
      <abstract>
        <para>
    OProfile 是用于动态程序分析的分析器。它可以调查运行中程序的行为并收集信息。可以查看这些信息，并从中获得用于进一步优化的提示。
   </para>
        <para>
    无需重新编译或使用封装程序库即可使用 OProfile。甚至不需要内核补丁。通常，在分析应用程序时，预期会产生较小的开销，具体取决于工作负载和采样频率。
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
        </dm:bugtracker>
	<dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    
 <sect1 xml:id="sec-tuning-oprofile-overview">
  <title>概念概述</title>

  <para>
   OProfile 由一个内核驱动程序以及一个用于收集数据的守护程序构成。它使用许多处理器上都会提供的硬件性能计数器。OProfile 能够分析所有代码，包括内核、内核模块、内核中断处理程序、系统共享库和其他应用程序。
  </para>

  <para>
   新式处理器支持通过硬件由性能计数器执行分析。根据所用的处理器，可能会提供许多计数器，可以使用要计入的事件对每个计数器进行编程。每个计数器都有一个值来确定采样频率。值越小，则使用样本的频率越高。
  </para>

  <para>
   在执行后处理步骤期间，将收集所有信息，并将指令地址映射到某个函数名称。
  </para>
 </sect1>
 <sect1 xml:id="sec-tuning-oprofile-install">
  <title>安装和要求</title>

  <para>
   要使用 OProfile，请安装 <systemitem class="resource">oprofile</systemitem> 软件包。<phrase os="sles;sled">OProfile 可在 AMD64/Intel 64、IBM Z 和 POWER 处理器上运行。</phrase>
  </para>

  <para>
   为您要分析的相关应用程序安装 <filename>*-debuginfo</filename> 软件包非常有用。如果您想要分析内核，则还需要 <filename>debuginfo</filename> 软件包。
  </para>
 </sect1>
 <sect1 xml:id="sec-tuning-oprofile-utils">
  <title>可用的 OProfile 实用程序</title>

  <para>
   OProfile 包含多个实用程序，用于处理分析进程及其分析的数据。以下列表简要汇总了本章中使用的程序：
  </para>

  <variablelist>
   <varlistentry>
    <term><command>opannotate</command>
    </term>
    <listitem>
     <para>
      输出带批注的源代码或程序集列表（混合了分析信息）。可将带批注的报告与 <command>addr2line</command> 结合使用，以识别可能存在热点的源文件和行。有关更多信息，请参见<command>man addr2line</command>。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><command>operf</command>
    </term>
    <listitem>
     <para>
      分析器工具。例如，分析停止后，默认存储在 <filename><replaceable>CUR_DIR</replaceable>/oprofile_data/samples/current</filename> 中的数据可由 <command>opreport</command> 处理。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><command>ophelp</command>
    </term>
    <listitem>
     <para>
      列出可用事件和简短说明。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>opimport</command>
    </term>
    <listitem>
     <para>
      将样本数据库文件从外部二进制格式转换为本机格式。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>opreport</command>
    </term>
    <listitem>
     <para>
      基于分析的数据生成报告。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-tuning-oprofile-using">
  <title>使用 OProfile</title>

  <para>
   使用 OProfile 可以分析内核和应用程序。分析内核时，请告知 OProfile 要在何处查找 <filename>vmlinuz*</filename> 文件。使用 <option>--vmlinux</option> 选项并将其指向 <filename>vmlinuz*</filename>（通常位于 <filename>/boot</filename> 中）。如果您需要分析内核模块，OProfile 默认便会执行此操作。但是，请务必阅读 <link xlink:href="http://oprofile.sourceforge.net/doc/kernel-profiling.html"/>。
  </para>

  <para>
   应用程序通常不需要分析内核，因此您应该使用 <option>--no-vmlinux</option> 选项来减少信息量。
  </para>

  <sect2 xml:id="sec-tuning-oprofile-using-report">
   <title>创建报告</title>
   <para>
    启动守护程序、收集数据、停止守护程序，并创建应用程序 <replaceable>COMMAND</replaceable> 的报告。
   </para>
   <procedure>
    <step>
     <para>
      以 <systemitem class="username">root</systemitem> 用户身份打开外壳并登录。
     </para>
    </step>
    <step>
     <para>
      确定是要分析还是不分析 Linux 内核：
     </para>
     <substeps performance="required">
      <step>
       <formalpara>
        <title>分析 Linux 内核</title>
        <para>
         执行以下命令，因为 <command>operf</command> 只能处理未压缩的映像：
        </para>
       </formalpara>
<screen><prompt>&gt; </prompt>cp /boot/vmlinux-`uname -r`.gz /tmp
<prompt>&gt; </prompt>gunzip /tmp/vmlinux*.gz
<prompt>&gt; </prompt>operf--vmlinux=/tmp/vmlinux* <replaceable>COMMAND</replaceable>
</screen>
      </step>
      <step>
       <formalpara>
        <title>不分析 Linux 内核</title>
        <para>
         使用以下命令：
        </para>
       </formalpara>
<screen><prompt role="root"># </prompt>operf --no-vmlinux <replaceable>COMMAND</replaceable></screen>
       <para>
        要在输出中查看哪些函数调用了其他函数，请额外使用 <option>--callgraph</option> 选项并设置最大 <replaceable>DEPTH</replaceable>：
       </para>
<screen><prompt role="root"># </prompt>operf --no-vmlinux --callgraph
<replaceable>DEPTH</replaceable> <replaceable>COMMAND</replaceable></screen>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      <command>operf</command> 将其数据写入 <filename><replaceable>CUR_DIR</replaceable>/oprofile_data/samples/current</filename>。<command>operf</command> 命令完成（或者由 <keycombo><keycap function="control"/> <keycap>C</keycap></keycombo> 中止）后，即可使用 <command>oreport</command> 分析数据：
     </para>
<screen><prompt role="root"># </prompt>opreport
Overflow stats not available
CPU: CPU with timer interrupt, speed 0 MHz (estimated)
Profiling through timer interrupt
          TIMER:0|
  samples|      %|
------------------
    84877 98.3226 no-vmlinux
...</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-tuning-oprofile-events">
   <title>获取事件配置</title>
   <para>
    事件配置的一般过程如下：
   </para>
   <procedure>
    <step>
     <para>
      首先使用事件 <literal>CPU-CLK_UNHALTED</literal> 和 <literal>INST_RETIRED</literal> 找到优化机会。
     </para>
    </step>
    <step>
     <para>
      使用特定的事件查找瓶颈。要列出事件，请使用命令 <command>perf list</command>。
     </para>
    </step>
   </procedure>
   <para>
    如果您需要分析特定的事件，请先使用 <command>ophelp</command> 命令查看处理器支持的可用事件（从 Intel Core i5 CPU 生成的示例输出）：
   </para>
<screen><prompt role="root"># </prompt><command>ophelp</command>
oprofile: available events for CPU type "Intel Architectural Perfmon"

See Intel 64 and IA-32 Architectures Software Developer's Manual
Volume 3B (Document 253669) Chapter 18 for architectural perfmon events
This is a limited set of fallback events because oprofile does not know your CPU
CPU_CLK_UNHALTED: (counter: all))
        Clock cycles when not halted (min count: 6000)
INST_RETIRED: (counter: all))
        number of instructions retired (min count: 6000)
LLC_MISSES: (counter: all))
        Last level cache demand requests from this core that missed the LLC (min count: 6000)
        Unit masks (default 0x41)
        ----------
        0x41: No unit mask
LLC_REFS: (counter: all))
        Last level cache demand requests from this core (min count: 6000)
        Unit masks (default 0x4f)
        ----------
        0x4f: No unit mask
BR_MISS_PRED_RETIRED: (counter: all))
        number of mispredicted branches retired (precise) (min count: 500)</screen>
   <para>
    使用选项 <option>--event</option> 指定性能计数器事件。可以使用多个选项。此选项需要事件名称（通过 <command>ophelp</command> 获得）和采样率，例如：
   </para>
<screen><prompt role="root"># </prompt>operf --events CPU_CLK_UNHALTED:100000</screen>
   <warning>
    <title>使用 <literal>CPU_CLK_UNHALTED</literal> 设置采样率</title>
    <para>
     设置较低的采样率可能会严重影响系统性能，而设置较高的采样率可能会给系统造成较大程度的干扰，导致数据无用。建议微调要使用和不使用 OProfile 监视的性能度量，并通过试验来确定对性能干扰最轻的最小采样率。
    </para>
   </warning>


  </sect2>
 </sect1>
 
 <sect1 xml:id="sec-tuning-oprofiles-report">
  <title>生成报告</title>

  <para>
   在生成报告之前，请确保 <command>operf</command> 已停止。除非您已使用 <option>--session-dir</option> 提供了输出目录，否则 <command>operf</command> 会将其数据写入 <replaceable>CUR_DIR</replaceable>/oprofile_data/samples/current，因而报告工具 <command>opreport</command> 和 <command>opannotate</command> 默认会在此位置查找数据。
  </para>

  <para>
   不使用任何选项调用 <command>opreport</command> 可以提供完整摘要。使用某个可执行文件作为参数，检索仅来自于此可执行文件的分析数据。如果您要分析以 C++ 编写的应用程序，请使用 <option>--demangle smart</option> 选项。
  </para>

  <para>
   <command>opannotate</command> 生成的输出包含源代码中的批注。结合使用以下选项运行此命令：
  </para>

<screen><prompt role="root"># </prompt><command>opannotate</command> --source \
   --base-dirs=<replaceable>BASEDIR</replaceable> \
   --search-dirs=<replaceable>SEARCHDIR</replaceable> \
   --output-dir=annotated/ \
   /lib/libfoo.so</screen>

  <para>
   选项 <option>--base-dir</option> 包含从调试源文件拆分出的路径逗号分隔列表。在 <option>--search-dirs</option> 中查找之前已搜索过这些路径。<option>--search-dirs</option> 选项也是一个用于搜索源文件的目录逗号分隔列表。
  </para>

  <note>
   <title>带批注源代码中的误差</title>
   <para>
    由于编译器优化，代码可能会消失或显示在不同的位置。参考 <link xlink:href="http://oprofile.sourceforge.net/doc/debug-info.html"/> 中的信息可以全面了解这种行为的含义。
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-tuning-oprofile-moreinfo">
  <title>更多信息</title>

  <para>
   本章仅提供了简短概述。有关详细信息，请参考以下链接：
  </para>

  <variablelist>
   <varlistentry>
    <term><link xlink:href="http://oprofile.sourceforge.net"/>
    </term>
    <listitem>
     <para>
      项目主页。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>手册页</term>
    <listitem>
     <para>
      有关不同工具的选项的详细说明。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/usr/share/doc/packages/oprofile/oprofile.html</filename>
    </term>
    <listitem>
     <para>
      包含 OProfile 手册。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><link xlink:href="http://developer.intel.com/"/>
    </term>
    <listitem>
     <para>
      Intel 处理器的体系结构参考。
     </para>
    </listitem>
   </varlistentry>


   


  </variablelist>
 </sect1>
</chapter>
