<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="net_proxy.xml" version="5.0" xml:id="cha-squid">
 <title>Squidキャッシュプロキシサーバ</title>
 <info>
  <abstract>
   <para>
    Squidは、LinuxおよびUNIXプラットフォームで普及しているキャッシュプロキシサーバです。これは、WebまたはFTPサーバなど、要求されたインターネットオブジェクトを、サーバよりも要求しているワークステーションに近いマシン上に格納することを意味します。Squidは、応答時間や低帯域幅の使用を最適化するために複数の階層上でセットアップされます。エンドユーザにとって透過的なモードである場合もあります。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  Squidは、キャッシュプロキシサーバとして機能します。クライアント(この場合はWebブラウザ)からのオブジェクト要求をサーバにリダイレクトします。要求されたオブジェクトがサーバから到着すると、クライアントに配信され、そのコピーがディスクキャッシュに格納されます。キャッシングの利点は、さまざまなクライアントが同じオブジェクトを要求した場合に、これらのオブジェクトをハードディスクのキャッシュから提供できることです。これにより、クライアントはインターネットから取得する場合に比べてはるかに高速にデータを受信できます。また、ネットワークトラフィックも減少します。
 </para>
 <para>
  Squidは、実際のキャッシングのほか、次のような多様な機能を備えています。
 </para>
 <itemizedlist>
  <listitem>
   <para>
    プロキシサーバの複数の通信階層に負荷を分散
   </para>
  </listitem>
  <listitem>
   <para>
    プロキシサーバにアクセスする全クライアントの厳密なアクセス制御リストの定義
   </para>
  </listitem>
  <listitem>
   <para>
    他のアプリケーションを使用した特定のWebページへのアクセスの許可または拒否
   </para>
  </listitem>
  <listitem>
   <para>
    インターネットの閲覧習慣の評価を目的とした、頻繁に閲覧するWebページに関する統計の生成
   </para>
  </listitem>
 </itemizedlist>
 <para>
  Squidは汎用プロキシサーバではありません。通常は、HTTP接続のみのプロキシを行います。FTP、Gopher、SSL、およびWAISの各プロトコルをサポートしていますが、ニュースプロトコルやビデオ会議プロトコルなどの他のインターネットプロトコルはサポートしていません。Squidはさまざまなキャッシュ間に通信を提供するUDPプロトコルのみをサポートしているため、多くのマルチメディアプログラムはサポートされません。
 </para>
 <sect1 xml:id="sec-squid-cacheinfos">
  <title>プロキシサーバに関する注意事項</title>

  <para>
   キャッシュプロキシサーバとして、Squidは複数の方法で使用することができます。ファイアウォールと組み合わせると、セキュリティに役立ちます。複数のプロキシを一緒に使用できます。また、キャッシュされるオブジェクトのタイプ、およびその期間も決定できます。
  </para>

  <sect2 xml:id="sec-squid-security">
   <title>Squidとセキュリティ</title>
   <para>
    Squidをファイアウォールと併用し、社内ネットワークを外部から保護することもできます。ファイアウォールは、Squidを除く外部サービスに対する全クライアントのアクセスを拒否します。すべてのWeb接続は、プロキシサーバを使用して確立する必要があります。この設定では、SquidはWebアクセスを完全に制御します。
   </para>
   <para>
    ファイアウォール設定に非武装地帯(DMZ)が含まれている場合、このゾーン内でプロキシサーバが動作する必要があります。<xref linkend="sec-squid-proxyconfigtrans"/>では、<emphasis>透過型</emphasis>プロキシの実装方法について説明しています。この場合、プロキシサーバに関する情報が必要とされないので、クライアントの設定が簡略化されます。
   </para>
  </sect2>

  <sect2 xml:id="sec-squid-morecaches">
   <title>複数のキャッシュ</title>
   <para>
    Squidのインスタンスを複数設定して、それらの間でオブジェクトを交換できます。これにより、システム全体の負荷を削減し、ローカルネットワークからオブジェクトを取得する可能性を高めることができます。また、キャッシュから兄弟キャッシュまたは親キャッシュにオブジェクト要求を転送できるように、キャッシュ階層を設定することもできます。これにより、ローカルネットワーク内の他のキャッシュに、または直接ソースに、オブジェクトを要求できるようになります。
   </para>
   <para>
    ネットワークトラフィック全体が増大することは望ましくないため、キャッシュ階層に適切なトポロジを選択することがきわめて重要です。大規模ネットワークの場合は、サブネットごとにプロキシサーバを設定して親プロキシサーバに接続し、親プロキシサーバはISPのキャッシュプロキシサーバに接続すると有効です。
   </para>
   <para>
    この通信はすべて、UDPプロトコルの最上位で実行されるICP (Internet cache protocol)により処理されます。キャッシュ間のデータ転送は、TCPベースのHTTP (hyper text transmission protocol)により処理されます。
   </para>
   <para>
    オブジェクトを要求するのに最も適したサーバを検出するために、あるキャッシュからすべての兄弟プロキシにICP要求が送信されます。各兄弟プロキシは、ICPレスポンスを通じてこれらの要求に応答します。オブジェクトが検出された場合は<literal>HIT</literal>コード、検出されなかった場合は<literal>MISS</literal>コードを使用します。
   </para>
   <para>
    複数の<literal>HIT</literal>レスポンスが検出された場合、プロキシサーバは、最も短時間で応答したキャッシュまたは最も近接するキャッシュなどの要因に従ってダウンロード元のサーバを決定します。要求を満たすレスポンスが受信されなければ、要求は親キャッシュに送信されます。<remark>Is timestamp a factor? - sknorr, 2016-06-24</remark>
   </para>
   <note>
    <title>Squidによるオブジェクトの重複の回避方法</title>
    <para>
     ネットワーク上の様々なキャッシュ内でオブジェクトの重複を回避するために、CARP (Cache Array Routing Protocol)やHTCP (Hypertext Cache Protocol)など、他のICPプロトコルが使用されます。ネットワーク上で維持されるオブジェクトが多くなるほど、必要なオブジェクトを検出できる可能性が高くなります。
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec-squid-latching">
   <title>インターネットオブジェクトのキャッシュ</title>
   <para>
    動的に生成されるページやTLS/SSLで暗号化されたコンテンツなど、ネットワーク上で使用可能な多くのオブジェクトはスタティックではありません。この種のオブジェクトは、アクセスされるたびに変化するためキャッシュされません。<remark>Squid can now decrypt TLS traffic with plugins. Not sure whether
     that is then stored or not. Also, not sure how/whether to get this
     information in here. - sknorr, 2016-06-24
    </remark>
   </para>
   <para>
    オブジェクトをキャッシュにどのくらいの期間残しておくかを決めるために、オブジェクトにいくつかの状態のうち1つを割り当てます。Webサーバとプロキシサーバは、これらのオブジェクトにヘッダ(たとえば、<quote>Last modified</quote>または<quote>Expires</quote>とそれに対応する日付)を追加することでオブジェクトの状態を検出します。その他、オブジェクトをキャッシュしないように指定するヘッダも使用できます。
   </para>
   <para>
    キャッシュ内のオブジェクトは、主としてディスクの空き容量不足が原因で、LRU(Least Recently Used)などのアルゴリズムを使用して置換されます。これは、基本的には、長期間要求されていないオブジェクトがプロキシにより消去されることを意味します。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-squid-sysneeds">
  <title>システム要件</title>

  <para>
   システム要件に最も影響するのは、システムにかかる最大ネットワーク負荷です。そのため、負荷のピークを調べます。なぜなら、ピーク時の負荷は1日の平均負荷の4倍を超えることがあるためです。判断に迷う場合は、システム要件よりもやや多めに見積もります。Squidの動作が能力の限界に近づくと、サービス品質が著しく低下する可能性があります。次の各項では、システム要因を重要度に従って説明します。
  </para>



  <orderedlist>
   <listitem>
    <para>
     RAMサイズ
    </para>
   </listitem>
   <listitem>
    <para>
     CPU速度/物理CPUコア数
    </para>
   </listitem>
   <listitem>
    <para>
     ディスクキャッシュのサイズ
    </para>
   </listitem>
   <listitem>
    <para>
     ハードディスク/SSDとそのアーキテクチャ
    </para>
   </listitem>
  </orderedlist>

  <sect2 xml:id="sec-squid-ram">
   <title>RAM</title>
   <para>
    Squidに必要なメモリ容量(RAM)は、キャッシュ内のオブジェクト数に比例します。ランダムアクセスメモリの方が、ハードディスク/SSDよりもはるかに高速です。したがって、スワップディスクを使用するとシステムのパフォーマンスが大幅に低下するため、Squidプロセス用に十分なメモリを用意する必要があります。
   </para>
   <para>
    また、Squidでは、キャッシュオブジェクト参照と要求頻度の高いオブジェクトの取得を高速化するために、これらのデータがメインメモリに保存されます。その他、Squidでは、処理された全IPアドレスの表、正確なドメインネームキャッシュ、最もアクセス頻度の高いオブジェクト、アクセス制御リスト、バッファなどのデータもメモリに保持する必要があります。
   </para>
  </sect2>

  <sect2 xml:id="sec-squid-cpu">
   <title>CPU</title>
   <para>
    Squidは、プロセッサコアの数が比較的少ない(4～8個の物理コア)場合に、それぞれのコアがハイパフォーマンスで動作して、最高のパフォーマンスを発揮するように調整されます。ハイパースレディングなどの、仮想コアを提供する技術は、パフォーマンスを低下させます。
   </para>
   <para>
    複数のCPUコアを最大限に活用するには、さまざまなキャッシュデバイスにデータを書き込む複数のワーカスレッドをセットアップする必要があります。多くの場合、マルチコアサポートはデフォルトで無効になっています。
   </para>
  </sect2>

  <sect2 xml:id="sec-squid-sysneeds-cache-size">
   <title>ディスクキャッシュのサイズ</title>
   <para>
    キャッシュ容量が小さいと、キャッシュが簡単にいっぱいになってしまい、要求頻度の低いオブジェクトが新規オブジェクトに置き換えられるため、<literal>HIT</literal>(要求された既存のオブジェクトの検出)の可能性は低くなります。逆に、キャッシュに1GBが使用可能で、ユーザが1日あたりの閲覧で10MBしか使用しなければ、キャッシュがいっぱいになるまでに100日以上かかることになります。
   </para>
   <para>
    必要なキャッシュサイズを判断するのに最も簡単な方法は、接続の最大転送速度を考慮することです。1MBit/秒接続の場合、最大転送速度は128KB/秒です。このトラフィックがすべてキャッシュに入ると、1時間で合計460MBとなります。このトラフィックは、すべて8時間の営業時間帯にのみ発生すると仮定すれば、1日に3.6GBに達します。通常、接続がデータ量の上限に達するまで使用されることはないため、キャッシュで処理される合計データ量は約2GBと想定できます。このため、この例では、Squidで1日にブラウズされたデータをキャッシュに保持するために、2GBのディスク容量が必要となります。
   </para>
  </sect2>

  <sect2 xml:id="sec-squid-sysneeds-disk">
   <title>ハードディスク/SSDのアーキテクチャ</title>

   <para>
    速度はキャッシュ処理に重要な役割を果たすため、この要因には特に注意する必要があります。ハードディスク/SSDの場合、このパラメータは「ランダムシーク時間」または「ランダム読み込み性能」と呼ばれ、ミリ秒単位で計測されます。<emphasis/><emphasis/>Squidがハードディスク/SSDとの間で読み書きするデータブロックは少数である傾向があるため、データのスループットよりもハードディスク/SSDのシーク時間/読み込み性能の方が重要です。
   </para>
   <para>
    プロキシサーバに使用する場合は、回転速度の高いハードディスクを選択するかSSDを選択するのが最善の方法です。ハードディスクを使用する場合は、キャッシュディレクトリを1つずつ持つ小容量のハードディスクを複数使用して、読み込み時間が長くなりすぎないようにする方がよいこともあります。
   </para>
   <para>
    RAIDシステムを使用すると、速度は低下しますが、信頼性を高めることができます。ただし、パフォーマンス上の理由により、(ソフトウェア)RAID5および同様の設定は避けてください。
   </para>
   <para>
    ファイルシステムの選択は、通常は決定的な要因にはなりません。ただし、マウントオプションの<literal>noatime</literal>を使用すると、パフォーマンスが向上する可能性があります。Squidでは独自のタイムスタンプが使用されるので、ファイルシステムでアクセス時間を追跡する必要はありません。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-squid-start">
  <title>Squidの基本的な使用法</title>

  <para>
   まだインストールしていない場合は、<package>squid</package>パッケージをインストールします。<systemitem>squid</systemitem>は、<phrase role="productname"><phrase os="sles">SUSE® Linux Enterprise Server</phrase></phrase>にデフォルトでインストールされるパッケージには含まれていません。
  </para>

  <para>
   Squidは<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>で事前に設定されているため、インストール直後に起動できます。スムーズに起動するように、インターネットおよび少なくとも1つのネームサーバにアクセスできるようにネットワークを設定してください。ダイナミックDNS設定でダイヤルアップ接続を使用すると、問題が発生する可能性があります。その場合は、少なくともネームサーバを明確に指定してください。<filename>/var/run/netconfig/resolv.conf</filename>内でDNSサーバが検出されないとSquidが起動しないためです。
  </para>

  <sect2 xml:id="sec-squid-start-commands">
   <title>Squidの起動</title>
   <para>
    Squidを起動するには、次のコマンドを使用します。
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> <command>systemctl start squid</command></screen>
   <para>
    Squidをシステムの起動時に起動する場合は、<command>systemctl enable squid</command>でサービスを有効にします。
   </para>
  </sect2>

  <sect2 xml:id="sec-squid-check">
   <title>Squidが機能しているかどうかの確認</title>
   <para>
    Squidが機能しているかどうかを確認するには、次のどちらかの方法を選択します。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <command>systemctl</command>を使用:
     </para>
<screen><prompt>tux &gt; </prompt><command>systemctl status squid</command></screen>
     <para>
      このコマンドの出力で、Squidが<literal>loaded</literal>および<literal>active (running)</literal>であることが示されます。
     </para>
    </listitem>
    <listitem>
     <para>
      Squid自体を使用:
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> <command>squid -k check | echo $?</command></screen>
     <para>
      このコマンドの出力は<literal>0</literal>になりますが、ほかの警告やメッセージが含まれる場合があります。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    ローカルシステム上でSquidの機能をテストするには、次のどちらかの方法を選択します。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <command>squidclient</command>を使用してテストできます。これは、<command>wget</command>または<command>curl</command>と同様に、Web要求に対する応答を出力できるコマンドラインツールです。
     </para>
     <para>
      これらのツールと異なり、<command>squidclient</command>は、Squidのデフォルトでセットアップされるプロキシである<literal>localhost:3128</literal>に自動的に接続します。ただし、Squidのこの設定を変更した場合は、コマンドラインオプションによって、異なる設定を使用するように<command>squidclient</command>を設定する必要があります。詳細については、<command>squidclient --help</command>を参照してください。
     </para>
     <example xml:id="ex-squidclient-request">
      <title><command>squidclient</command>による要求</title>
<screen><prompt>tux &gt; </prompt><command>squidclient http://www.example.org</command>
HTTP/1.1 200 OK
Cache-Control: max-age=604800
Content-Type: text/html
Date: Fri, 22 Jun 2016 12:00:00 GMT
Expires: Fri, 29 Jun 2016 12:00:00 GMT
Last-Modified: Fri, 09 Aug 2013 23:54:35 GMT
Server: ECS (iad/182A)
Vary: Accept-Encoding
X-Cache: HIT
x-ec-custom-error: 1
Content-Length: 1270
X-Cache: MISS from moon<co xml:id="co-squid-miss"/>
X-Cache-Lookup: MISS from moon:3128
Via: 1.1 moon (squid/3.5.16)<co xml:id="co-squid-via"/>
Connection: close

&lt;!doctype html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Example domain&lt;/title&gt;
[...]
&lt;/body&gt;
&lt;/html&gt;</screen>
      <para>
       <xref linkend="ex-squidclient-request"/>に示す出力は、次の2つの部分に分けられます。
      </para>
      <orderedlist>
       <listitem>
        <para>
         応答のプロトコルヘッダ: 空白行より前にある行
        </para>
       </listitem>
       <listitem>
        <para>
         応答の実際の内容: 空白行より後にある行
        </para>
       </listitem>
      </orderedlist>
      <para>
       Squidが使用されていることを確認するには、ヘッダの次の行を参照します。
      </para>
      <calloutlist>
       <callout arearefs="co-squid-miss">
        <para>
         ヘッダ<literal>X-Cache</literal>の値は、要求されたドキュメントがコンピュータ<systemitem>moon</systemitem>のSquidキャッシュに存在しなかった(<literal>MISS</literal>)ことを示します。
        </para>
        <para>
         上記の出力例には、<literal>X-Cache</literal>の行が2つあります。最初の<literal>X-Cache</literal>ヘッダは無視できます。これは、生成元のWebサーバの内部キャッシングソフトウェアにより出力されたものです。
        </para>
       </callout>
       <callout arearefs="co-squid-via">
        <para>
         ヘッダ<literal>Via</literal>の値は、HTTPバージョン、コンピュータ名、および使用されているSquidのバージョンを示します。
        </para>
       </callout>
      </calloutlist>
     </example>
    </listitem>
    <listitem>
     <para>
      ブラウザを使用して、プロキシとして<option>localhost</option>、ポートとして<option>3128</option>をセットアップします。次に、ページをロードして、ブラウザの<emphasis/>「インスペクタ」または「開発者ツール」<emphasis/>の<guimenu>ネットワーク</guimenu>パネルで、応答ヘッダを確認します。<xref linkend="ex-squidclient-request"/>と同様のヘッダが、再現されます。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    ユーザ全員にSquidおよびインターネットへのアクセスを許可するには、設定ファイル<filename>/etc/squid/squid.conf</filename>内のエントリを<option>http_access deny all</option>から<option>http_access allow all</option>に変更します。ただし、その場合は、この操作によりSquidが完全に誰でもアクセス可能になることに注意してください。したがって、プロキシサーバへのアクセスを制御するACL(アクセス制御リスト)を定義します。設定ファイルを変更した後、Squidを再ロードまたは再起動する必要があります。ACLの詳細については、<xref linkend="sec-squid-acl"/>を参照してください。
   </para>
   <para>
    Squidが正常に起動しても短時間で停止する場合は、ネームサーバエントリに誤りがないかどうかと、<filename>/var/run/netconfig/resolv.conf</filename>ファイルが欠落していないかどうかを確認してください。起動エラーの原因は、Squidにより<filename>/var/log/squid/cache.log</filename>ファイルに記録されます。
   </para>
  </sect2>

  <sect2 xml:id="sec-squid-stop">
   <title>Squidの停止、再ロード、および再起動</title>
   <para>
    Squidを再ロードするには、次のいずれかの方法を選択します。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <command>systemctl</command>を使用:
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> <command>systemctl</command> reload squid</screen>
     <para>
      あるいは、
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> <command>systemctl</command> restart squid</screen>
    </listitem>
    <listitem>
     <para>
      YaSTの使用:
     </para>
     <para>
      Squidモジュールで、<guimenu>設定を保存してsquidを再起動する</guimenu>をクリックします。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Squidを停止するには、次のいずれかの方法を選択します。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <command>systemctl</command>を使用:
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> <command>systemctl</command> stop squid</screen>
    </listitem>
    <listitem>
     <para>
      YaSTの使用
     </para>
     <para>
      Squidモジュールで、<guimenu>squidを停止する</guimenu>をクリックします。ボタン.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Squidのシャットダウンには時間がかかることがあります。クライアントへの接続を切断し、そのデータをディスクに書き込むまでに最大30秒待つからです(<filename>/etc/squid/squid.conf</filename>の<option>shutdown_lifetime</option>オプションを参照してください)。
   </para>
   <warning>
    <title>Squidの終了</title>
    <para>
     <command>kill</command>または<command>killall</command>を使ってSquidを終了すると、キャッシュが破損してしまう可能性があります。Squidを再起動できるようにするには、破損したキャッシュを削除する必要があります。
    </para>
   </warning>
  </sect2>

  <sect2 xml:id="sec-squid-remove">
   <title>Squidの削除</title>
   <para>
    システムからSquidを削除しても、キャッシュ階層やログファイルは削除されません。これらを削除するには、<filename>/var/cache/squid</filename>ディレクトリを手動で削除します。
   </para>
  </sect2>

  <sect2 xml:id="sec-squid-start-local-dns">
   <title>ローカルDNSサーバ</title>
   <para>
    サーバで独自ドメインを管理しない場合も、ローカルDNSサーバをセットアップすると有効です。ローカルDNSサーバは単にキャッシュ専用ネームサーバとして機能し、特に設定しなくてもルートネームサーバを介してDNSリクエストを解決できます(<xref linkend="sec-dns-bind"/>を参照)。ローカルDNSサーバを有効にする方法は、インターネット接続の設定時にダイナミックDNSを選択したかどうかによって異なります。
   </para>
   <variablelist>
    <varlistentry xml:id="vle-squid-dynamicdns">
     <term>ダイナミックDNS</term>
     <listitem>
      <para>
       通常、ダイナミックDNSを使用すると、インターネット接続の確立時にプロバイダによってDNSサーバが設定され、ローカルの<filename>/var/run/netconfig/resolv.conf</filename>ファイルが自動的に調整されます。この動作は<filename>/etc/sysconfig/network/config</filename>ファイルの
       <constant>NETCONFIG_DNS_POLICY</constant> sysconfig変数で制御されます。設定
       <constant>NETCONFIG_DNS_POLICY</constant> 次のように変更してください。 <constant>""</constant>
       YaST sysconfig エディタを使用します。
      </para>
      <para>
       次に、<filename>/var/run/netconfig/resolv.conf</filename>ファイルに、ローカルのDNSサーバ(名前は<systemitem class="ipaddress">localhost</systemitem>、IPアドレスは<systemitem class="domainname">127.0.0.1</systemitem>)を追加します。こうすれば、Squidは常に、ローカルのネームサーバを起動時に検出できます。
      </para>
      <remark>FIXME ke: check it. Do you have to set more variables?</remark>
      <para>
       プロバイダのネームサーバにアクセスするには、設定ファイル<filename>/etc/named.conf</filename>内の<systemitem>forwarders</systemitem>に、ネームサーバとそのIPアドレスを指定します。ダイナミックDNSを使用すると、接続の確立時にそれらが自動的に指定されるようにすることができます。そのためには、sysconfig変数を次のように設定します。
       <constant>NETCONFIG_DNS_POLICY</constant> 次のように変更してください。 <constant>auto</constant>をインストールします。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>スタティックDNS</term>
     <listitem>
      <para>
       スタティックDNSを使用する場合は、接続の確立時にいずれの自動DNS調整も行われないため、sysconfig変数を変更する必要はありません。ただし、<xref linkend="vle-squid-dynamicdns"/>の説明に従って、<filename>/var/run/netconfig/resolv.conf</filename>ファイルでローカルのDNSサーバを指定する必要があります。また、<filename>/etc/named.conf</filename>ファイル内の<systemitem>forwarders</systemitem>に、プロバイダのスタティックなネームサーバとそのIPアドレスを手動で指定する必要があります。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <tip>
    <title>DNSとファイアウォール</title>
    <para>
     ただし、ファイアウォールを実行している場合は、DNSリクエストがファイアウォールを通過できることを確認してください。
    </para>
   </tip>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-squid-yast">
  <title>YaST Squidモジュール</title>

  <para>
   YaST Squidモジュールには次のタブがあります。
  </para>

  <variablelist>
   <varlistentry>
    <term><guimenu>起動</guimenu></term>
    <listitem>
     <para>
      Squidの起動方法と、どのインタフェースでどのファイアウォールポートを開くかを指定します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>HTTPポート</guimenu></term>
    <listitem>
     <para>
      SquidがクライアントからのHTTP要求をリスンするすべてのポートを定義します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>更新パターン</guimenu></term>
    <listitem>
     <para>
      Squidがキャッシュ内のオブジェクトをどのように処理するかを定義します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>キャッシュの設定</guimenu></term>
    <listitem>
     <para>
      キャッシュメモリ、最大および最小のオブジェクトサイズなどに関する設定を定義します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>［Cache Directory］</guimenu></term>
    <listitem>
     <para>
      Squidがすべてのキャッシュスワップファイルを格納する、トップレベルディレクトリを定義します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>アクセス制御</guimenu></term>
    <listitem>
     <para>
      ACLグループ経由でSquidサーバへのアクセスを制御します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>ログとタイムアウト</guimenu></term>
    <listitem>
     <para>
      接続タイムアウトとクライアントの有効期間に加えて、アクセスログファイル、キャッシュログファイル、およびキャッシュ保存ログファイルへのパスを定義します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>その他</guimenu></term>
    <listitem>
     <para>
      管理者の言語とメールアドレスを設定します。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-squid-configfile">
  <title>Squid環境設定ファイル</title>

  <para>
   Squidのプロキシサーバ設定は、すべて<filename>/etc/squid/squid.conf</filename>ファイル内で行います。Squidを初めて起動する場合、このファイル内で設定を変更する必要はありませんが、外部クライアントは最初はアクセスを拒否されます。プロキシは<systemitem class="domainname">localhost</systemitem>に使用できます。デフォルトポートは<option>3128</option>です。プリインストール済みの設定ファイル<filename>/etc/squid/squid.conf</filename>には、オプションの詳細と多数の例が用意されています。
  </para>

  <para>
   多くのエントリはコメント付きであり、コメント文字<literal>#</literal>で始まります。関連する指定は行末にあります。示されている値は、通常はデフォルト値に関係しているため、いずれのパラメータも変更せずにコメント記号を削除しても、ほとんどの場合に影響はありません。コメント付きの行はそのまま残して、オプションと変更した値を次の行に挿入することをお勧めします。この方法では、デフォルト値を簡単に簡単に戻したり、変更した値と比較したりすることができます。
  </para>

  <tip>
   <title>更新後の設定ファイルの変更について</title>
   <para>
    Squidを旧バージョンから更新した場合は、新規の<filename>/etc/squid/squid.conf</filename>を編集して、旧バージョンのファイルで加えた変更のみを適用することをお勧めします。
   </para>
   <para>
    Squidのオプションは、追加、削除、または変更される場合があります。したがって、旧バージョンの<filename>squid.conf</filename>ファイルを使用すると、Squidが正常に機能しなくなる危険性があります。
   </para>
  </tip>

  <sect2 xml:id="sec-squid-configfile-general">
   <title>一般設定オプション</title>
   <para>
    次に、Squidの設定オプションの一部を示します。これがすべてではありません。Squidパッケージの<filename>/etc/squid/squid.conf.documented</filename>に、すべてのオプションが簡単な説明とともに記載されています。
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>http_port <replaceable>PORT</replaceable></literal></term>
     <listitem>
      <para>
       これは、Squidがクライアントリクエストをリスンするポートです。デフォルトポートは<option>3128</option>ですが、<option>8080</option>も一般的です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>cache_peer <replaceable>HOST_NAME</replaceable> <replaceable> TYPE</replaceable> <replaceable> PROXY_PORT</replaceable> <replaceable> ICP_PORT</replaceable></literal></term>
     <listitem>
      <para>
       このオプションを使用して、連携して動作するキャッシュのネットワークを作成できます。キャッシュピアは、同様にネットワークキャッシュをホストするコンピュータであり、ユーザ自身のコンピュータと特定の関係にあります。関係のタイプは、<replaceable>TYPE</replaceable>で指定します。指定できるタイプは、<literal>parent</literal>または<literal>sibling</literal>のいずれかです。
      </para>
      <para>
       <replaceable>HOST_NAME</replaceable>には、使用するプロキシサーバの名前またはIPアドレスを指定します。<replaceable>PROXY_PORT</replaceable>には、ブラウザで使用するポート番号(通常は<option>8080</option>)を指定します。<replaceable>ICP_PORT</replaceable>は、<option>7</option>に設定します。または、親のICPポートが不明で、プロバイダに無関係に使用される場合は、<option>0</option>に設定します。
      </para>
      <para>
       SquidをプロキシサーバではなくWebブラウザのように動作させるには、ICPプロトコルの使用を禁止します。そのためには、オプションの<option>default</option>と<option>no-query</option>を追加します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>cache_mem <replaceable>SIZE</replaceable></literal></term>
     <listitem>
      <para>
       このオプションは、Squidで頻繁に求められる応答に対して使用できるメモリ容量を定義します。デフォルトは<option>8MB</option>です。これは、Squidのメモリ使用量を指定するものではありません。また、Squidのメモリ使用量を超えても構いません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>cache_dir <replaceable>STORAGE_TYPE</replaceable> <replaceable> CACHE_DIRECTORY</replaceable> <replaceable> CACHE_SIZE</replaceable> <replaceable> LEVEL_1_DIRECTORIES</replaceable> <replaceable> LEVEL_2_DIRECTORIES</replaceable></literal></term>
     <listitem>
      <para>
       オプション<literal>cache_dir</literal>は、ディスクキャッシュに使用するディレクトリを定義します。<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>のデフォルト設定では、Squidはディスクキャッシュを作成しません。
      </para>
      <para>
       プレースホルダ<replaceable>STORAGE_TYPE</replaceable>には、次のいずれかを指定できます。
      </para>
      <itemizedlist>
       <listitem>
        <para>
         ディレクトリベースのストレージタイプ: <literal>ufs</literal>、<literal>aufs</literal>(デフォルト)、および<literal>diskd</literal>。これら3つはすべて、ストレージ形式<literal>ufs</literal>の一種です。ただし、<literal>ufs</literal>はコアSquidスレッドの一部として動作しますが、<literal>aufs</literal>は別スレッドで動作し、<literal>diskd</literal>は別プロセスを使用します。つまり、最後の2つのタイプでは、ディスクI/Oに起因するSquadのブロックが回避されます。
        </para>
       </listitem>
       <listitem>
        <para>
         データベースベースのストレージシステム: <literal>rock</literal>。このストレージ形式では、データベースファイルを1つ使用します。このファイルで、各オブジェクトが固定サイズのメモリユニット(<quote>スロット</quote>)を1つ以上占有します。
        </para>
       </listitem>
      </itemizedlist>
      <para>
       この後は、<literal>ufs</literal>ベースのストレージタイプのパラメータについてのみ説明します。<literal>rock</literal>のパラメータは多少異なっています。
      </para>
      <para>
       <replaceable>CACHE_DIRECTORY</replaceable>は、ディスクキャッシュに使用するディレクトリです。デフォルトでは、<filename>/var/cache/squid</filename>です。<replaceable>CACHE_SIZE</replaceable>は、このディレクトリの最大サイズ(メガバイト)です。デフォルトでは100MBに設定されています。使用可能なディスク容量の50～80%(最大)の値に設定します。
      </para>
      <para>
       最後の2つの値である<replaceable>LEVEL_1_DIRECTORIES</replaceable>と<replaceable>LEVEL_2_DIRECTORIES</replaceable>は、<replaceable>CACHE_DIRECTORY</replaceable>に作成されるサブディレクトリの数を指定します。デフォルトでは、<replaceable>CACHE_DIRECTORY</replaceable>の1つ下のレベルに16個のサブディレクトリが作成され、各サブディレクトリの下に256個ずつサブディレクトリが作成されます。ディレクトリが多すぎるとパフォーマンスが低下する可能性があるため、これらの数値を増やす場合は注意してください。
      </para>
      <para>
       複数のディスクでキャッシュを共有する場合は、複数の<option>cache_dir</option>行を指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>cache_access_log <replaceable>LOG_FILE</replaceable></option></term>
     <term><option>cache_log <replaceable>LOG_FILE</replaceable></option></term>
     <term><option>cache_store_log <replaceable>LOG_FILE</replaceable></option></term>
     <listitem>
      <para>
       これらの3つのオプションは、Squidがそのすべてのアクションを記録するパスを指定します。通常、ここでは何も変更する必要はありません。Squidの使用負荷が大きい場合は、キャッシュとログファイルを複数のディスクに分散すると有効な場合があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>client_netmask <replaceable>NETMASK</replaceable></option></term>
     <listitem>
      <para>
       このオプションを使用し、サブネットマスクを適用することにより、ログファイルでクライアントのIPアドレスをマスクできます。たとえば、IPアドレスの最終桁を<literal>0</literal>に設定するには、<systemitem class="netmask">255.255.255.0</systemitem>と指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>ftp_user <replaceable>E-MAIL</replaceable></option></term>
     <listitem>
      <para>
       このオプションを使用して、Squidで匿名FTPログインに使用する必要のあるパスワードを設定できます。一部のFTPサーバでは電子メールアドレスの妥当性が確認されるため、ここでは有効な電子メールアドレスを指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>cache_mgr <replaceable>E-MAIL</replaceable></option></term>
     <listitem>
      <para>
       Squidは、予期せずにクラッシュする場合、この電子メールアドレスにメッセージを送信します。デフォルトは<emphasis>webmaster</emphasis>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>logfile_rotate <replaceable>VALUE</replaceable></option></term>
     <listitem>
      <para>
       <command>squid</command> <option>-k rotate</option>を実行すると、<command>squid</command>はログファイルを循環利用することができます。このプロセス中にファイルに番号が割り当てられ、指定した値に達すると最も古いファイルが上書きされます。デフォルト値は<option>10</option>です。この場合、0～9の番号の付いているログファイルを循環利用します。
      </para>
      <para>
       ただし、<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>では、<systemitem class="daemon">logrotate</systemitem>と設定ファイル<filename>/etc/logrotate.d/squid</filename>を使用して自動的にログファイルの循環利用が実行されます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>append_domain <replaceable>DOMAIN</replaceable></option></term>
     <listitem>
      <para>
       <emphasis/>「append_domain」を使用して、ドメインが未指定の場合に自動的に追加されるドメインを指定します。通常、ここにはユーザ独自のドメインを指定します。したがって、ブラウザに<emphasis/>「www」と指定すると、ユーザ独自のWebサーバにアクセスします。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>forwarded_for <replaceable>STATE</replaceable></option></term>
     <listitem>
      <para>
       このオプションを<literal>on</literal>に設定すると、ヘッダに次のような行が追加されます。
      </para>
<screen>X-Forwarded-For: 192.168.0.1</screen>
      <para>
       このオプションを<literal>off</literal>に設定すると、SquidでHTTP要求からクライアントのIPアドレスとシステム名が削除されます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>negative_ttl <replaceable>TIME</replaceable></option></term>
     <term><option>negative_dns_ttl <replaceable>TIME</replaceable></option></term>
     <listitem>
      <para>
       これらのオプションを設定すると、Squidは、<literal>404</literal>応答など、いくつかの種類のエラーをキャッシュします。それ以降は、リソースが使用可能であっても、新しい要求の発行を拒否します。
      </para>
      <para>
       デフォルトでは、<option>negative_ttl</option>は<literal>0</literal>、<option>negative_dns_ttl</option>は<literal>1 minutes</literal>に設定されています。つまり、デフォルトでは、Web要求に対する否定応答はキャッシュされませんが、DNS要求に対する否定応答は1分間キャッシュされます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>never_direct allow <replaceable>ACL_NAME</replaceable></option></term>
     <listitem>
      <para>
       Squidがインターネットから要求を直接取り込むのを防ぐには、オプション<literal>never_direct</literal>を使用して他のプロキシサーバに強制的に接続します。このプロキシは、あらかじめ<option>cache_peer</option>で指定しておく必要があります。<literal>ACL_NAME</literal>として<replaceable>all</replaceable>を指定すると、すべての要求は<literal>parent</literal>に直接転送されます。たとえば、使用しているプロバイダが、そのプロキシを使用するように指定している場合、またはそのファイアウォールによるインターネットへの直接アクセスを拒否している場合は、この設定が必要になる可能性があります。
      </para>
      <remark>
       Last sentence sounds as if from another era... Does it still make sense?
       - sknorr, 2016-07-07
      </remark>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-squid-acl">
   <title>アクセス制御オプション</title>
   <para>
    Squidには、プロキシサーバへのアクセスを制御する詳細システムが用意されています。ACLは、順次処理されるルールを持つリストです。ACLは定義しなければ使用できません。<literal>all</literal>や<literal>localhost</literal>などのデフォルトACLがいくつか用意されています。ただし、ACLを定義しただけで、実際に適用されるわけではありません。実際に適用されるのは、対応する<option>http_access</option>ルールが存在する場合のみです。
   </para>
   <para>
    オプション<option>acl</option>の構文を次に示します。
   </para>
<screen>acl <replaceable>ACL_NAME</replaceable> <replaceable>TYPE</replaceable> <replaceable>DATA</replaceable></screen>
   <para>
    この構文のプレースホルダは、次のことを表します。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      名前<replaceable>ACL_NAME</replaceable>は任意に選択できます。
     </para>
    </listitem>
    <listitem>
     <para>
      <replaceable>TYPE</replaceable>は、<filename>/etc/squid/squid.conf</filename>ファイルの<literal>ACCESS CONTROLS</literal>セクションにある多数のオプションから選択できます。
     </para>
    </listitem>
    <listitem>
     <para>
      <replaceable>DATA</replaceable>の仕様は、個々のACLタイプ(たとえば、ホスト名、IPアドレス、URL)によって異なり、ファイルから読み込むこともできます。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    YaST squidモジュールにルールを追加するには、モジュールを開き、<guimenu>アクセス制御</guimenu>タブをクリックします。ACLグループリストの<guimenu>追加</guimenu>をクリックして、ルールの名前、タイプ、およびそのパラメータを入力します。
   </para>
   <para>
    ACLルールのタイプの詳細については、<link xlink:href="http://www.squid-cache.org/Versions/v3/3.5/cfgman/acl.html"/>のSquidのドキュメントを参照してください。
   </para>
   <example xml:id="ex-squid-school">
    <title>ACLルールの定義</title>
<screen>
acl mysurfers srcdomain .example.com <co xml:id="co-squid-school-surfer"/>
acl teachers src 192.168.1.0/255.255.255.0 <co xml:id="co-squid-school-teacher"/>
acl students src 192.168.7.0-192.168.9.0/255.255.255.0 <co xml:id="co-squid-school-student"/>
acl lunch time MTWHF 12:00-15:00 <co xml:id="co-squid-school-time"/>
</screen>
    <calloutlist>
     <callout arearefs="co-squid-school-surfer">
      <para>
       このACLは、<literal>mysurfers</literal>を、<literal>.example.com</literal>から訪問するすべてのユーザ(IPの逆引きにより決定)として定義します。
      </para>
     </callout>
     <callout arearefs="co-squid-school-teacher">
      <para>
       このACLは、<literal>teachers</literal>を、<literal>192.168.1.</literal>で始まるIPアドレスを持つコンピュータのユーザとして定義します。
      </para>
     </callout>
     <callout arearefs="co-squid-school-student">
      <para>
       このACLは、<literal>students</literal>を、<literal>192.168.7.</literal>、<literal>192.168.8.</literal>、または<literal>192.168.9.</literal>で始まるIPアドレスを持つコンピュータのユーザとして定義します。
      </para>
     </callout>
     <callout arearefs="co-squid-school-time">
      <para>
       このACLは、<literal>lunch</literal>を、月曜日から金曜日の午後0時から午後3時までの時間として定義します。
      </para>
     </callout>
    </calloutlist>
   </example>
   <variablelist>
    <varlistentry>
     <term>http_access allow <replaceable>ACL_NAME</replaceable></term>
     <listitem>
      <para>
       <option>http_access</option>では、プロキシサーバの使用を許可されるユーザと、インターネット上でどのユーザが何にアクセスできるかを定義します。この場合、ACLを定義する必要があります。<literal>localhost</literal>および<literal>all</literal>については、すでに説明したとおり、定義済みです。この2つのACLについて、<literal>deny</literal>または<literal>allow</literal>を使用してアクセスを拒否または許可できます。任意の数の<option>http_access</option>エントリを含むリストを作成し、上から下に処理できます。どちらが最初に発生するかに応じて、それぞれのURLへのアクセスが許可または拒否されます。最後のエントリは、常に<option>http_access deny all</option>にする必要があります。次の例では、<literal>localhost</literal>はすべてに自由にアクセスできますが、他のホストはいずれもアクセスを完全に拒否されます。
      </para>
<screen>
http_access allow localhost
http_access deny all
</screen>
      <para>
       また、このルールの使用を示す次の例では、グループ<systemitem class="groupname">teachers</systemitem>は常にインターネットへのアクセス権を持ちます。グループ<systemitem class="groupname">students</systemitem>は月曜日から金曜日のランチタイム中にのみアクセス権を取得します。
      </para>
<screen>
http_access deny localhost
http_access allow teachers
http_access allow students lunch time
http_access deny all
</screen>
      <para>
       設定ファイル<filename>/etc/squid/squid.conf</filename>では、読みやすいように、すべての<option>http_access</option>オプションをまとめて指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>url_rewrite_program <replaceable>PATH</replaceable></option></term>
     <listitem>
      <para>
       このオプションでは、URLリライタを指定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>auth_param basic program <replaceable>PATH</replaceable></option></term>
     <listitem>
      <para>
       プロキシサーバ上でユーザを認証する必要がある場合は、<filename>/usr/sbin/pam_auth</filename>などの対応するプログラムを設定します。最初に<command>pam_auth</command>にアクセスすると、ユーザ名とパスワードを指定する必要があるログインウィンドウが表示されます。また、有効なログインを持つクライアント以外はインターネットを使用できないように、ACLも必要です。
      </para>
<screen>
acl password proxy_auth REQUIRED

http_access allow password
http_access deny all
</screen>
      <para>
       <option>acl proxy_auth</option>オプションで<literal>REQUIRED</literal>を使用すると、有効なユーザ名がすべて受け入れられることを意味します。<literal>REQUIRED</literal>を、許可されるユーザ名のリストで置き換えることもできます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>ident_lookup_access allow <replaceable>ACL_NAME</replaceable></option></term>
     <listitem>
      <para>
       このオプションを使用して、タイプ<literal>src</literal>のACLで定義されているすべてのクライアントについて、各ユーザの識別情報を見つけるために、ident要求を実行します。または、このオプションをすべてのクライアントに対して使用するには、<replaceable>ACL_NAME</replaceable>として、事前定義されているACLである<literal>all</literal>を適用します。
      </para>
      <para>
       <option>ident_lookup_access</option>の対象として指定されているすべてのクライアントは、identデーモンを実行する必要があります。Linuxでは、<package>pidentd</package> (パッケージ<systemitem class="daemon">pidentd</systemitem>)をidentデーモンとして使用できます。他のオペレーティングシステムでは、通常は使用可能なフリーソフトウェアがあります。identによる検索が成功したクライアントのみが許可されるように、対応するACLを定義します。
      </para>
<screen>
acl identhosts ident REQUIRED

http_access allow identhosts
http_access deny all
</screen>
      <para>
       <option>acl identhosts ident</option>オプションで<literal>REQUIRED</literal>を使用すると、有効なユーザ名がすべて受け入れられることを意味します。<literal>REQUIRED</literal>を、許可されるユーザ名のリストで置き換えることもできます。
      </para>
      <para>
       <literal>ident</literal>を使用すると、その検索が要求ごとに繰り返されるため、アクセス速度が低下する場合があります。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-squid-proxyconfigtrans">
  <title>透過型プロキシの設定</title>

  <para>
   透過型プロキシはWebブラウザの要求を捕捉して応答するため、Webブラウザは要求したページを、出所を認識せずに受信します。名前が示すように、ユーザはこのプロセスの存在をまったく認識しません。
  </para>

  <para>
   プロキシサーバを使用する場合の一般的な動作としては、Webブラウザがプロキシサーバの特定のポートに要求を送信し、プロキシは常に、これらの要求されたオブジェクトを(オブジェクトがキャッシュに存在するかどうかに関係なく)提供します。ただし、次のような場合は、Squidの透過型プロキシモードを使用します。
  </para>

  <itemizedlist>
   <listitem>
    <para>
     セキュリティ上の理由から、すべてのクライアントがインターネットでのナビゲーションにはプロキシサーバを使用することを推奨される場合。
    </para>
   </listitem>
   <listitem>
    <para>
     すべてのクライアントが、プロキシサーバを認識しているかどうかに関係なく、そのプロキシサーバを使用する必要がある場合。
    </para>
   </listitem>
   <listitem>
    <para>
     ネットワーク内のプロキシサーバが移動されても、既存のクライアントは古い設定を保持する必要がある場合。
    </para>
   </listitem>
  </itemizedlist>

  <procedure xml:id="pro-squid-transparent-cli">
   <title>透過型プロキシサーバとしてのSquid (コマンドライン)</title>
   <step>
    <para>
     <filename>/etc/squid/squid.conf</filename>のオプション<option>http_port</option>の行にパラメータ<literal>transparent</literal>を追加します。この場合、次の2行になります。
    </para>
<screen>http_port 3128
http_port 3128 transparent</screen>
   </step>
   <step>
    <para>
     Squidを再起動します。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> <command>systemctl restart squid</command></screen>
   </step>
   <step xml:id="st-squid-transparent-cli-fwrules">
    <para>
     <option>http_proxy</option>で指定されたポートにHTTPトラフィックをリダイレクトするようにファイアウォールを設定します。上記の例では、ポート3128です。次に、ファイアウォール設定を再ロードします。これは、ゾーン<literal>internal</literal>がLANインタフェースに割り当てられていることが前提となります。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> <command>firewall-cmd</command> --permanent --zone=internal \
    --add-forward-port=port=80:proto=tcp:toport=3128:toaddr=<replaceable>LAN_IP</replaceable>
<prompt>tux &gt; </prompt><command>sudo</command> <command>firewall-cmd</command> --permanent --zone=internal --add-port=3128/tcp
<prompt>tux &gt; </prompt><command>sudo</command> <command>firewall-cmd</command> --reload</screen>
    <para>
     <replaceable>LAN_IP</replaceable>を、使用しているLANインタフェースまたはSquidがリスンしているインタフェースのIPアドレスに置き換えます。
    </para>
   </step>
   <step>
    <para>
     すべてが正常に機能していることを確認するには、<filename>/var/log/squid/access.log</filename>のSquidログを確認します。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-squid-cachemgr">
  <title>SquidキャッシュマネージャのCGIインタフェース(<systemitem class="resource">cachemgr.cgi</systemitem>)の使用</title>

  <para>
   SquidキャッシュマネージャのCGIインタフェース(<filename>cachemgr.cgi</filename>)は、実行中のSquidプロセスによるメモリ使用状況に関する統計を表示するCGIユーティリティです。また、キャッシュを管理し、サーバのロギングなしで統計を表示できる便利な手段でもあります。
  </para>

  <procedure xml:id="pro-squid-setup-cachemgr">
   <title><systemitem class="resource">cachemgr.cgi</systemitem>のセットアップ</title>
   <step>
    <para>
     システムでApache Webサーバが動作していることを確認します。<xref linkend="cha-apache2"/>の説明に従って、Apacheを設定します。特に、<xref linkend="sec-apache2-cgi"/>を参照してください。Apacheがすでに動作しているかどうかを確認するには、次のコマンドを実行します。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> <command>systemctl status apache2</command></screen>
    <para>
     <literal>inactive</literal>と表示された場合、<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>のデフォルト設定のままで、Apacheを起動できます。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> <command>systemctl start apache2</command></screen>
   </step>
   <step>
    <para>
     Apacheで<systemitem class="resource">cachemgr.cgi</systemitem>を有効にします。それには、<literal>ScriptAlias</literal>の設定ファイルを作成します。
    </para>
    <para>
     ディレクトリ<filename>/etc/apache2/conf.d</filename>にこのファイルを作成して、名前を<filename>cachemgr.conf</filename>と指定します。このファイルに、次の記述を追加します。
    </para>
<screen>ScriptAlias /squid/cgi-bin/ /usr/lib64/squid/

&lt;Directory "/usr/lib64/squid/"&gt;
Options +ExecCGI
AddHandler cgi-script .cgi
Require host <replaceable>HOST_NAME</replaceable>
&lt;/Directory&gt;
</screen>
    <para>
     <replaceable>HOST_NAME</replaceable>は、<systemitem class="resource">cachemgr.cgi</systemitem>にアクセスするコンピュータのホスト名で置き換えます。これにより、そのコンピュータだけが<systemitem class="resource">cachemgr.cgi</systemitem>にアクセスできるようになります。どこからでもアクセスできるようにするには、<literal>Require all granted</literal>で置き換えます。
    </para>
   </step>
   <step>
    <itemizedlist>
     <listitem>
      <para>
       SquidとApache Webサーバが同一コンピュータ上で動作する場合は、<filename>/etc/squid/squid.conf</filename>を変更する必要はありません。ただし、<filename>/etc/squid/squid.conf</filename>に次の行が含まれていることを確認します。
      </para>
<screen>
http_access allow manager localhost
http_access deny manager
  </screen>
      <para>
       これらの行は、マネージャインタフェースにアクセスできるのは同一コンピュータ(<literal>localhost</literal>)のみであり、それ以外はアクセスできないことを指定します。
      </para>
     </listitem>
     <listitem>
      <para>
       SquidとApache Webサーバが異なるコンピュータ上で動作する場合は、CGIスクリプトからSquidへのアクセスを許可するルールを別途追加する必要があります。Webサーバを表すACLを定義します(<replaceable>WEB_SERVER_IP</replaceable>をWebサーバのIPアドレスで置き換えます)。
      </para>
<screen>
acl webserver src <replaceable>WEB_SERVER_IP</replaceable>/255.255.255.255
</screen>
      <para>
       設定ファイルに次のルールが存在することを確認します。2番目の行だけが新しく追加されており、他の行はデフォルト設定です。ただし、この順序は重要です。
      </para>
<screen>
http_access allow manager localhost
http_access allow manager webserver
http_access deny manager
</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step performance="optional">
    <para>
     必要に応じて、<systemitem class="resource">cachemgr.cgi</systemitem>に1つ以上のパスワードを設定できます。これにより、リモートからキャッシュを終了する、キャッシュの詳細情報を表示するなどのアクションにもアクセスできるようになります。それには、オプション<option>cache_mgr</option>を設定して、オプション<option>cachemgr_passwd</option>にマネージャが使用する1つ以上のパスワードと許可するアクションのリストを設定します。
    </para>
    <para>
     たとえば、認証なしでインデックスページ、メニュー、およびカウンタの60分平均値の表示を明示的に有効にすること、パスワード<literal>secretpassword</literal>を使用した場合にオフラインモードのトグルを有効にすること、およびそれ以外は完全に無効にすることを指定するには、次の設定を使用します。
    </para>
<screen>
cache_mgr user
cachemgr_passwd none index menu 60min
cachemgr_passwd secretpassword offline_toggle
cachemgr_passwd disable all
</screen>
    <para>
     <option>cache_mgr</option>はユーザ名を定義します。<option>cachemgr_passwd</option>は、どのパスワードでどのアクションを許可するかを定義します。
    </para>
    <para>
     <literal>none</literal>と<literal>disable</literal>は特別なキーワードです。<literal>none</literal>を指定するとパスワードは不要であり、<literal>disable</literal>を指定すると機能が無条件に無効になります。
    </para>
    <para>
     アクションの全リストについては、<systemitem class="resource">cachemgr.cgi</systemitem>にログインした後に参照するのが一番よい方法です。設定ファイルで各操作を設定する方法を調べるには、アクションページのURLで、<literal>&amp;operation=</literal>より後の文字列を参照してください。<literal>all</literal>は、すべてのアクションを意味する特別なキーワードです。
    </para>
   </step>
   <step>
    <para>
     設定ファイルを変更した後にSquidとApacheを再起動します。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> <command>systemctl reload squid</command></screen>
   </step>
   <step>
    <para>
     統計情報を表示するには、セットアップした後で<systemitem class="resource">cachemgr.cgi</systemitem>ページに移動します。たとえば、<literal>http://webserver.example.org/squid/cgi-bin/cachemgr.cgi</literal>のようなURLになります。
    </para>
    <para>
     適切なサーバを選択して、ユーザ名とパスワードが設定されている場合はそれらを指定します。<guimenu>続行</guimenu>をクリックしてさまざまな統計情報をブラウズします。
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-squid-calamaris">
  <title>Calamarisを使用したキャッシュレポート生成</title>

  <para>
   Calamarisは、ASCIIまたはHTML形式でキャッシュアクティビティレポートを生成するためのPerlスクリプトです。このスクリプトはネイティブのSquidアクセスログファイルを処理します。Calamarisのホームページは<link xlink:href="http://cord.de/calamaris-english"/>にあります。このツールは<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>のデフォルトインストールスコープには含まれていません。これを使用するには、<systemitem>calamaris</systemitem>パッケージをインストールしてください。
  </para>

  <para>
   <systemitem class="username">root</systemitem>としてログインし、次のように入力します。
  </para>

<screen><prompt role="root">root # </prompt>cat access1.log [access2.log access3.log] | calamaris <replaceable>OPTIONS</replaceable> &gt; reportfile</screen>

  <para>
   複数のログファイルを使用する場合は、各ログファイルを古いものから時系列順に指定する必要があります。それには、上記の例のように1つずつファイルを指定するか、<filename>access{1..3}.log</filename>と指定します。
  </para>

  <para>
   <command>calamaris</command>には、次のオプションを指定できます。
  </para>

  <variablelist>
   <varlistentry>
    <term><option>-a</option></term>
    <listitem>
     <para>
      使用可能な全レポートを出力
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-w</option></term>
    <listitem>
     <para>
      HTMLレポートとして出力
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-l</option></term>
    <listitem>
     <para>
      レポートヘッダにメッセージまたはロゴを挿入
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   各種オプションの詳細については、「<command>man</command><option>calamaris</option>」と入力してプログラムのマニュアルページで参照できます。
  </para>

  <para>
   典型的な例を次に示します。
  </para>

<screen>
<prompt role="root">root # </prompt>cat access.log.{10..1} access.log | calamaris -a -w \
&gt; /usr/local/httpd/htdocs/Squid/squidreport.html
</screen>

  <para>
   このコマンドでは、レポートがWebサーバのディレクトリに生成されます。レポートを表示するにはApacheが必要です。
  </para>
 </sect1>
 <sect1 xml:id="sec-squid-moreinfo">
  <title>詳細情報</title>

  <para>
   <link xlink:href="http://www.squid-cache.org/"/>にあるSquidのホームページにアクセスしてください。ここにはS<quote>quid User Guide</quote>が置かれており、Squidに関する広範囲なFAQ集もあります。
  </para>

  <para>
   また、<link xlink:href="http://www.squid-cache.org/Support/mailing-lists.html"/>で、Squidに関するメーリングリストに登録できます。
  </para>
 </sect1>
</chapter>
