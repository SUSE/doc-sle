<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-libvirt-networks">
 <title>Managing Networks</title>
 <info>
  <abstract>
   <para>
    This chapter introduces common networking configurations supported by
    &libvirt;. It does not depend on the hypervisor used. It is valid for all
    hypervisors supported by &libvirt;, such as &kvm; or &xen;. These setups
    can be achieved using both the graphical interface of &vmm; and the command
    line tool <command>virsh</command>.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
  </dm:docmanager>
 </info>
 <para>
  There are two common network setups to provide a &vmguest; with a network
  connection:
 </para>
 <itemizedlist>
  <listitem>
   <para>
    A <emphasis>virtual network</emphasis> for the guest
   </para>
  </listitem>
  <listitem>
   <para>
    A <emphasis>network bridge</emphasis> over a host's physical network
    interface that the guest can use
   </para>
  </listitem>
 </itemizedlist>
 <sect1 xml:id="libvirt-networks-virtual">
  <title>Virtual Networks</title>

  <para>
   A virtual network is a computer network which does not consist of a physical
   network link, but rather uses a virtual network link. Each host can have
   several virtual networks defined. Virtual networks are based on virtual
   devices that connect virtual machines inside a hypervisor. They allow
   outgoing traffic translated to the LAN and are provided with DHCP and DNS
   services. Virtual networks can be either <emphasis>isolated</emphasis>, or
   <emphasis>forwarded</emphasis> to a physical network.
  </para>

  <para>
   Guests inside an <emphasis>isolated</emphasis> virtual network can
   communicate with each other, but cannot communicate with guests outside the
   virtual network. Also, guests not belonging to the isolated virtual network
   cannot communicate with guests inside.
  </para>

  <para>
   On the other hand, guests inside a <emphasis>forwarded</emphasis> (NAT,
   network address translation) virtual network can make any outgoing network
   connection they request. Incoming connections are allowed from &vmhost;, and
   from other guests connected to the same virtual network. All other incoming
   connections are blocked by <systemitem>iptables</systemitem> rules.
  </para>

  <para>
   A standard libvirt installation on &productname; already comes with a
   predefined virtual network providing DHCP server and network address
   translation (NAT) named "default".
  </para>

  <sect2 xml:id="libvirt-networks-virtual-vmm">
   <title>Managing Virtual Networks with &vmm;</title>
   <para>
    You can define, configure, and operate both isolated and forwarded virtual
    networks with &vmm;.
   </para>
   <sect3 xml:id="libvirt-networks-virtual-vmm-define">
    <title>Defining Virtual Networks</title>
    <procedure>
     <step>
      <para>
       Start &vmm;. In the list of available connections, right-click the name
       of the connection for which you need to configure the virtual network,
       and then select <guimenu>Details</guimenu>.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Connection Details</guimenu> window, click the
       <guimenu>Virtual Networks</guimenu> tab. You can see the list of all
       virtual networks available for the current connection. On the right,
       there are details of the selected virtual network.
      </para>
      <figure>
       <title>Connection Details</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="libvirt_vmm_conndetails.png" width="45%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="libvirt_vmm_conndetails.png" width="45%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </step>
     <step>
      <para>
       To add a new virtual network, click <guimenu>Add</guimenu>.
      </para>
     </step>
     <step>
      <para>
       Specify a name for the new virtual network and click
       <guimenu>Forward</guimenu>.
      </para>
      <figure>
       <title>Create virtual network</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="libvirt_vmm_vnet_name.png" width="45%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="libvirt_vmm_vnet_name.png" width="45%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </step>
     <step>
      <para>
       To specify an IPv4 network address space definition, activate the
       relevant option and type it into the <guimenu>Network</guimenu> text
       entry.
      </para>
      <figure>
       <title>Create virtual network</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="libvirt_vmm_vnet_ipv4.png" width="45%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="libvirt_vmm_vnet_ipv4.png" width="45%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </step>
     <step>
      <para>
       &libvirt; can provide your virtual network with a DHCP server. If you
       need it, activate <guimenu>Enable DHCPv4</guimenu>, then type the start
       and end IP address range of assignable addresses.
      </para>
     </step>
     <step>
      <para>
       To enable static routing for the new virtual network, activate the
       relevant option and type the network and gateway addresses.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Forward</guimenu> to proceed.
      </para>
     </step>
     <step>
      <para>
       To specify IPv6-related options&mdash;network address space, DHCPv6
       server, or static route&mdash;activate <guimenu>Enable IPv6 network
       address space definition</guimenu> and activate the relevant options and
       fill in the relevant boxes.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Forward</guimenu> to proceed.
      </para>
     </step>
     <step>
      <para>
       Select whether you want isolated or forwarded virtual network.
      </para>
      <figure>
       <title>Create virtual network</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="libvirt_vmm_vnet_type.png" width="45%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="libvirt_vmm_vnet_type.png" width="45%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
      <para>
       For forwarded networks, specify the network interface to which the
       requests will be forwarded, and one of the forwarding modes: While
       <guimenu>NAT</guimenu> (network address translation) remaps the virtual
       network address space and allows sharing a single IP address,
       <guimenu>Routed</guimenu> connects the virtual switch to the physical
       host LAN with no network translation.
      </para>
     </step>
     <step>
      <para>
       If you did not specify IPv6 network address space definition earlier,
       you can enable IPv6 internal routing between virtual machines.
      </para>
     </step>
     <step performance="optional">
      <para>
       Optionally, change the DNS domain name.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Finish</guimenu> to create the new virtual network. On
       the &vmhost;, a new virtual network bridge
       <literal>virbr<replaceable>X</replaceable></literal> is available, which
       corresponds to the newly created virtual network. You can check with
       <command>bridge link</command>. &libvirt; automatically adds iptables
       rules to allow traffic to/from guests attached to the new
       <emphasis>virbr<replaceable>X</replaceable></emphasis> device.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="libvirt-networks-virtual-vmm-start">
    <title>Starting Virtual Networks</title>
    <para>
     To start a virtual network that is temporarily stopped, follow these
     steps:
    </para>
    <procedure>
     <step>
      <para>
       Start &vmm;. In the list of available connections, right-click the name
       of the connection for which you need to configure the virtual network,
       and then select <guimenu>Details</guimenu>.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Connection Details</guimenu> window, click the
       <guimenu>Virtual Networks</guimenu> tab. You can see the list of all
       virtual networks available for the current connection.
      </para>
     </step>
     <step>
      <para>
       To start the virtual network, click <guimenu>Start</guimenu>.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="libvirt-networks-virtual-vmm-stop">
    <title>Stopping Virtual Networks</title>
    <para>
     To stop an active virtual network, follow these steps:
    </para>
    <procedure>
     <step>
      <para>
       Start &vmm;. In the list of available connections, right-click the name
       of the connection for which you need to configure the virtual network,
       and then select <guimenu>Details</guimenu>.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Connection Details</guimenu> window, click the
       <guimenu>Virtual Networks</guimenu> tab. You can see the list of all
       virtual networks available for the current connection.
      </para>
     </step>
     <step>
      <para>
       Select the virtual network to be stopped, then click <guimenu>Stop</guimenu>.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="libvirt-networks-virtual-vmm-delete">
    <title>Deleting Virtual Networks</title>
    <para>
     To delete a virtual network from &vmhost;, follow these steps:
    </para>
    <procedure>
     <step>
      <para>
       Start &vmm;. In the list of available connections, right-click the name
       of the connection for which you need to configure the virtual network,
       and then select <guimenu>Details</guimenu>.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Connection Details</guimenu> window, click the
       <guimenu>Virtual Networks</guimenu> tab. You can see the list of all
       virtual networks available for the current connection.
      </para>
     </step>
     <step>
      <para>
       Select the virtual network to be deleted, then click <guimenu>Delete</guimenu>.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="libvirt-networks-virtual-vmm-nsswitch">
<!-- fate#316628 -->
    <title>Obtaining IP Addresses with <command>nsswitch</command> for NAT Networks (in KVM)</title>
    <itemizedlist>
     <listitem>
      <para>
       On &vmhost;, install libvirt-nss, which provides NSS support for
       libvirt:
      </para>
<screen>&prompt.sudo;zypper in libvirt-nss</screen>
     </listitem>
     <listitem>
      <para>
       Add <literal>libvirt</literal> to
       <filename>/etc/nsswitch.conf</filename>:
      </para>
<screen>...
hosts:  files libvirt mdns_minimal [NOTFOUND=return] dns
...</screen>
     </listitem>
     <listitem>
      <para>
       If NSCD is running, restart it:
      </para>
<screen>&prompt.sudo;systemctl restart nscd</screen>
     </listitem>
    </itemizedlist>
    <para>
     Now you can reach the guest system by name from the host.
    </para>
    <para>
     The NSS module has limited functionality. It reads
     <filename>/var/lib/libvirt/dnsmasq/*.status</filename> files to find the
     host name and corresponding IP addresses in a JSON record describing each
     lease provided by <command>dnsmasq</command>. Host name translation can
     only be done on those &vmhost;s using a libvirt-managed bridged network
     backed by <command>dnsmasq</command>.
    </para>
    <para>
     For more information, see
     <link
     xlink:href="http://wiki.libvirt.org/page/NSS_module"/>.
    </para>
   </sect3>
  </sect2>

  <sect2 xml:id="libvirt-networks-virtual-virsh">
   <title>Managing Virtual Networks with <command>virsh</command></title>
   <para>
    You can manage &libvirt;-provided virtual networks with the
    <command>virsh</command> command line tool. To view all network related
    <command>virsh</command> commands, run
   </para>
<screen>&prompt.sudo;virsh help network
Networking (help keyword 'network'):
 net-autostart                  autostart a network
        net-create                     create a network from an XML file
        net-define                     define (but don't start) a network from an XML file
        net-destroy                    destroy (stop) a network
        net-dumpxml                    network information in XML
        net-edit                       edit XML configuration for a network
        net-event                      Network Events
        net-info                       network information
        net-list                       list networks
        net-name                       convert a network UUID to network name
        net-start                      start a (previously defined) inactive network
        net-undefine                   undefine an inactive network
        net-update                     update parts of an existing network's configuration
 net-uuid                       convert a network name to network UUID</screen>
   <para>
    To view brief help information for a specific <command>virsh</command>
    command, run <command>virsh help
    <replaceable>VIRSH_COMMAND</replaceable></command>:
   </para>
<screen>&prompt.sudo;virsh help net-create
  NAME
    net-create - create a network from an XML file

  SYNOPSIS
    net-create &lt;file>

  DESCRIPTION
    Create a network.

  OPTIONS
    [--file] &lt;string>  file containing an XML network description</screen>
   <sect3 xml:id="libvirt-networks-virtual-virsh-create">
    <title>Creating a Network</title>
<!-- 2016-02-25 tbazant
     http://wiki.libvirt.org/page/VirtualNetworking#Creating_a_virtual_network
     http://libvirt.org/formatnetwork.html
     http://libvirt.org/sources/virshcmdref/html/sect-net-create.html
     http://libvirt.org/sources/virshcmdref/html/
     -->
    <para>
     To create a new <emphasis>running</emphasis> virtual network, run
    </para>
<screen>&prompt.sudo;virsh net-create <replaceable>VNET_DEFINITION.xml</replaceable></screen>
    <para>
     The <replaceable>VNET_DEFINITION.xml</replaceable> XML file includes the
     definition of the virtual network that &libvirt; accepts.
    </para>
    <para>
     To define a new virtual network without activating it, run
    </para>
<screen>&prompt.sudo;virsh net-define <replaceable>VNET_DEFINITION.xml</replaceable></screen>
    <para>
     The following examples illustrate definitions of different types of
     virtual networks.
    </para>
    <example xml:id="ex-libvirt-net-nat">
     <title>NAT Based Network</title>
     <para>
      The following configuration allows &vmguest;s outgoing connectivity if it
      is available on &vmhost;. In the absence of &vmhost; networking, it
      allows guests to talk directly to each other.
     </para>
<screen>
&lt;network>
&lt;name>vnet_nated&lt;/name><co xml:id="vnet-xml-name"/>
&lt;bridge name="virbr1" /><co xml:id="vnet-xml-bridge"/>
 &lt;forward mode="nat"/><co xml:id="vnet-xml-forward"/>
 &lt;ip address="192.168.122.1" netmask="255.255.255.0"><co xml:id="vnet-xml-ip"/>
  &lt;dhcp>
   &lt;range start="192.168.122.2" end="192.168.122.254" /><co xml:id="vnet-xml-dhcp"/>
   &lt;host mac="52:54:00:c7:92:da" name="host1.testing.com" \
    ip="192.168.1.23.101" /><co xml:id="vnet-xml-dhcp-host"/>
   &lt;host mac="52:54:00:c7:92:db" name="host2.testing.com" \
    ip="192.168.1.23.102" />
   &lt;host mac="52:54:00:c7:92:dc" name="host3.testing.com" \
    ip="192.168.1.23.103" />
  &lt;/dhcp>
 &lt;/ip>
&lt;/network>
</screen>
     <calloutlist>
      <callout arearefs="vnet-xml-name">
       <para>
        The name of the new virtual network.
       </para>
      </callout>
      <callout arearefs="vnet-xml-bridge">
       <para>
        The name of the bridge device used to construct the virtual network.
        When defining a new network with a &lt;forward> mode of "nat" or
        "route" (or an isolated network with no &lt;forward> element),
        &libvirt; will automatically generate a unique name for the bridge
        device if none is given.
       </para>
      </callout>
      <callout arearefs="vnet-xml-forward">
       <para>
        Inclusion of the &lt;forward> element indicates that the virtual
        network will be connected to the physical LAN. The
        <literal>mode</literal> attribute specifies the forwarding method. The
        most common modes are "nat" (default, network address translation),
        "route" (direct forwarding to the physical network, no address
        translation), and "bridge" (network bridge configured outside of
        &libvirt;). If the &lt;forward> element is not specified, the virtual
        network will be isolated from other networks. For a complete list of
        forwarding modes, see
        <link xlink:href="http://libvirt.org/formatnetwork.html#elementsConnect"/>.
       </para>
      </callout>
      <callout arearefs="vnet-xml-ip">
       <para>
        The IP address and netmask for the network bridge.
       </para>
      </callout>
      <callout arearefs="vnet-xml-dhcp">
       <para>
        Enable DHCP server for the virtual network, offering IP addresses
        ranging from the specified <literal>start</literal> and
        <literal>end</literal> attribute.
       </para>
      </callout>
      <callout arearefs="vnet-xml-dhcp-host">
       <para>
        The optional &lt;host> elements specify hosts that will be given names
        and predefined IP addresses by the built-in DHCP server. Any IPv4 host
        element must specify the following: the MAC address of the host to be assigned a given
        name, the IP to be assigned to that host, and the name to be given to
        that host by the DHCP server. An IPv6 host element differs slightly
        from that for IPv4: there is no <literal>mac</literal> attribute since
        a MAC address has no defined meaning in IPv6. Instead, the
        <literal>name</literal> attribute is used to identify the host to be
        assigned the IPv6 address. For DHCPv6, the <literal>name</literal> is
        the plain name of the client host sent by the client to the server.
        Note that this method of assigning a specific IP address can also be
        used instead of the <literal>mac</literal> attribute for IPv4.
       </para>
      </callout>
     </calloutlist>
    </example>
    <example>
     <title>Routed Network</title>
     <para>
      The following configuration routes traffic from the virtual network to
      the LAN without applying any NAT. The IP address range must be
      preconfigured in the routing tables of the router on the &vmhost;
      network.
     </para>
<screen>
&lt;network>
 &lt;name>vnet_routed&lt;/name>
 &lt;bridge name="virbr1" />
 &lt;forward mode="route" dev="eth1"/><co xml:id="vnet-xml-route"/>
 &lt;ip address="192.168.122.1" netmask="255.255.255.0">
  &lt;dhcp>
   &lt;range start="192.168.122.2" end="192.168.122.254" />
  &lt;/dhcp>
 &lt;/ip>
&lt;/network>
</screen>
     <calloutlist>
      <callout arearefs="vnet-xml-route">
       <para>
        The guest traffic may only go out via the <systemitem>eth1</systemitem>
        network device on the &vmhost;.
       </para>
      </callout>
     </calloutlist>
    </example>
    <example>
     <title>Isolated Network</title>
     <para>
      This configuration provides a completely isolated private network. The
      guests can talk to each other, and to &vmhost;, but cannot reach any
      other machines on the LAN, as the &lt;forward> element is missing in the
      XML description.
     </para>
<screen>&lt;network>
 &lt;name>vnet_isolated&lt;/name>
 &lt;bridge name="virbr3" />
 &lt;ip address="192.168.152.1" netmask="255.255.255.0">
  &lt;dhcp>
   &lt;range start="192.168.152.2" end="192.168.152.254" />
  &lt;/dhcp>
 &lt;/ip>
 &lt;/network>
</screen>
    </example>
    <example>
     <title>Using an Existing Bridge on &vmhost;</title>
     <para>
      This configuration shows how to use an existing &vmhost;'s network bridge
      <literal>br0</literal>. &vmguest;s are directly connected to the physical
      network. Their IP addresses will all be on the subnet of the physical
      network, and there will be no restrictions on incoming or outgoing
      connections.
     </para>
<screen>&lt;network>
        &lt;name>host-bridge&lt;/name>
        &lt;forward mode="bridge"/>
        &lt;bridge name="br0"/>
&lt;/network>
</screen>
    </example>
   </sect3>
   <sect3 xml:id="libvirt-networks-virtual-virsh-list">
    <title>Listing Networks</title>
    <para>
     To list all virtual networks available to &libvirt;, run:
    </para>
<screen>&prompt.sudo;virsh net-list --all

 Name                 State      Autostart     Persistent
----------------------------------------------------------
 crowbar              active     yes           yes
 vnet_nated           active     yes           yes
 vnet_routed          active     yes           yes
 vnet_isolated        inactive   yes           yes</screen>
<!-- fate#316628: Tool to obtain IP address allocated (DHCP)
      for bridged network in KVM -->
    <para>
     To list available domains, run:
    </para>
<screen>&prompt.sudo;virsh list
 Id    Name                           State
----------------------------------------------------
 1     nated_sles12sp3                running
 ...</screen>
    <para>
     To get a list of interfaces of a running domain, run <option>domifaddr
     <replaceable>DOMAIN</replaceable></option>, or optionally specify the
     interface to limit the output to this interface. By default, it
     additionally outputs their IP and MAC addresses:
    </para>
<screen>&prompt.sudo;virsh domifaddr nated_sles12sp3 --interface vnet0 --source lease
 Name       MAC address          Protocol     Address
-------------------------------------------------------------------------------
 vnet0      52:54:00:9e:0d:2b    ipv6         fd00:dead:beef:55::140/64
 -          -                    ipv4         192.168.100.168/24</screen>
    <para>
     To print brief information of all virtual interfaces associated with the
     specified domain, run:
    </para>
<screen>&prompt.sudo;virsh domiflist nated_sles12sp3
Interface  Type       Source       Model       MAC
---------------------------------------------------------
vnet0      network    vnet_nated   virtio      52:54:00:9e:0d:2b</screen>
   </sect3>
   <sect3 xml:id="libvirt-networks-virtual-virsh-info">
    <title>Getting Details about a Network</title>
    <para>
     To get detailed information about a network, run:
    </para>
<screen>&prompt.sudo;virsh net-info vnet_routed
Name:           vnet_routed
UUID:           756b48ff-d0c6-4c0a-804c-86c4c832a498
Active:         yes
Persistent:     yes
Autostart:      yes
Bridge:         virbr5</screen>
   </sect3>
   <sect3 xml:id="libvirt-networks-virtual-virsh-start">
    <title>Starting a Network</title>
    <para>
     To start an inactive network that was already defined, find its name (or
     unique identifier, UUID) with:
    </para>
<screen>&prompt.sudo;virsh net-list --inactive
 Name                 State      Autostart     Persistent
----------------------------------------------------------
 vnet_isolated        inactive   yes           yes</screen>
    <para>
     Then run:
    </para>
<screen>&prompt.sudo;virsh net-start vnet_isolated
Network vnet_isolated started</screen>
   </sect3>
   <sect3 xml:id="libvirt-networks-virtual-virsh-stop">
    <title>Stopping a Network</title>
    <para>
     To stop an active network, find its name (or unique identifier, UUID)
     with:
    </para>
<screen>&prompt.sudo;virsh net-list --inactive
 Name                 State      Autostart     Persistent
----------------------------------------------------------
 vnet_isolated        active     yes           yes</screen>
    <para>
     Then run:
    </para>
<screen>&prompt.sudo;virsh net-destroy vnet_isolated
Network vnet_isolated destroyed</screen>
   </sect3>
   <sect3 xml:id="libvirt-networks-virtual-virsh-undefine">
    <title>Removing a Network</title>
    <para>
     To remove the definition of an inactive network from &vmhost; permanently,
     run:
    </para>
<screen>&prompt.sudo;virsh net-undefine vnet_isolated
Network vnet_isolated has been undefined</screen>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="libvirt-networks-bridged">
  <title>Bridged Networking</title>

  <para>
   A network bridge is used to connect two or more network segments. It behaves
   like a virtual network switch, and guest machines treat it transparently as
   a physical network interface. Any physical or virtual device can be
   connected to the bridge.
  </para>

  <para>
   If there is a network bridge present on &vmhost;, you can connect a
   &vmguest; to it directly. This provides the &vmguest; with full incoming and
   outgoing network access.
  </para>

  <sect2 xml:id="libvirt-networks-bridged-yast">
   <title>Managing Network Bridges with &yast;</title>
   <para>
    This section includes procedures to add or remove network bridges with
    &yast;.
   </para>
   <sect3 xml:id="libvirt-networks-bridged-yast-add">
    <title>Adding a Network Bridge</title>
    <para>
     To add a network bridge on &vmhost;, follow these steps:
    </para>
    <procedure>
     <step>
      <para>
       Start
       <menuchoice><guimenu>&yast;</guimenu><guimenu>System</guimenu><guimenu>Network
       Settings</guimenu></menuchoice>.
      </para>
     </step>
     <step>
      <para>
       Activate the <guimenu>Overview</guimenu> tab and click
       <guimenu>Add</guimenu>.
      </para>
     </step>
     <step>
      <para>
       Select <guimenu>Bridge</guimenu> from the <guimenu>Device Type</guimenu>
       list and enter the bridge device interface name in the
       <guimenu>Configuration Name</guimenu> entry. Proceed with
       <guimenu>Next</guimenu>.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Address</guimenu> tab, specify networking details such
       as DHCP/static IP address, subnet mask or host name.
      </para>
      <para>
       Using <guimenu>Dynamic Address</guimenu> is only useful when also
       assigning a device to a bridge that is connected to some DHCP server.
      </para>
      <para>
       If you intend to create a virtual bridge that has no connection to a
       real Ethernet device, use <guimenu>Statically assigned IP
       Address</guimenu>. In this case, it is a good idea to use addresses from
       the private IP address ranges, for example,
       <literal>192.168.x.x</literal> or <literal>10.x.x.x</literal>.
      </para>
      <para>
       To create a bridge that should only serve as a connection between the
       different guests without connection to the host system, set the IP
       address to <literal>0.0.0.0</literal> and the subnet mask to
       <literal>255.255.255.255</literal>. The network scripts handle this
       special address as an unset IP address.
      </para>
     </step>
     <step>
      <para>
       Activate the <guimenu>Bridged Devices</guimenu> tab and activate the
       network devices you want to include in the network bridge.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Next</guimenu> to return to the
       <guimenu>Overview</guimenu> tab and confirm with <guimenu>OK</guimenu>.
       The new network bridge should be active on &vmhost; now.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="libvirt-networks-bridged-yast-rm">
    <title>Deleting a Network Bridge</title>
    <para>
     To delete an existing network bridge, follow these steps:
    </para>
    <procedure>
     <step>
      <para>
       Start
       <menuchoice><guimenu>&yast;</guimenu><guimenu>System</guimenu><guimenu>Network
       Settings</guimenu></menuchoice>.
      </para>
     </step>
     <step>
      <para>
       Select the bridge device you want to delete from the list in the
       <guimenu>Overview</guimenu> tab.
      </para>
     </step>
     <step>
      <para>
       Delete the bridge with <guimenu>Delete</guimenu> and confirm with
       <guimenu>OK</guimenu>.
      </para>
     </step>
    </procedure>
   </sect3>
  </sect2>

  <sect2 xml:id="libvirt-networks-bridged-add-brctl">
   <title>Managing Network Bridges from the Command Line</title>
   <para>
    This section includes procedures to add or remove network bridges using the
    command line.
   </para>
   <sect3 xml:id="libvirt-networks-bridged-add-brctl-add">
    <title>Adding a Network Bridge</title>
    <para>
     To add a new network bridge device on &vmhost;, follow these steps:
    </para>
    <procedure>
     <step>
      <para>
       Log in as &rootuser; on the &vmhost; where you want to create a new
       network bridge.
      </para>
     </step>
     <step>
      <para>
       Choose a name for the new
       bridge&mdash;<replaceable>virbr_test</replaceable> in our
       example&mdash;and run
      </para>
<screen>&prompt.root;ip link add name <replaceable>VIRBR_TEST</replaceable> type bridge</screen>
     </step>
     <step>
      <para>
       Check if the bridge was created on &vmhost;:
      </para>
<screen>&prompt.root;bridge vlan
[...]
virbr_test  1 PVID Egress Untagged
</screen>
      <para>
       <literal>virbr_test</literal> is present, but is not associated with any
       physical network interface.
      </para>
     </step>
     <step>
      <para>
       Bring the network bridge up and add a network interface to the bridge:
      </para>
<screen>
&prompt.root;ip link set virbr_test up
&prompt.root;ip link set eth1 master virbr_test
</screen>
      <important>
       <title>Network Interface Must Be Unused</title>
       <para>
        You can only enslave a network interface that is not yet used by other
        network bridge.
       </para>
      </important>
     </step>
     <step>
      <para>
       Optionally, enable STP (see
       <link xlink:href="https://en.wikipedia.org/wiki/Spanning_Tree_Protocol">Spanning
       Tree Protocol</link>):
      </para>
<screen>&prompt.root;bridge link set dev virbr_test cost 4</screen>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="libvirt-networks-bridged-add-brctl-del">
    <title>Deleting a Network Bridge</title>
    <para>
     To delete an existing network bridge device on &vmhost; from the command
     line, follow these steps:
    </para>
    <procedure>
     <step>
      <para>
       Log in as &rootuser; on the &vmhost; where you want to delete an
       existing network bridge.
      </para>
     </step>
     <step>
      <para>
       List existing network bridges to identify the name of the bridge to
       remove:
      </para>
<screen>&prompt.root;bridge vlan
[...]
virbr_test  1 PVID Egress Untagged
</screen>
     </step>
     <step>
      <para>
       Delete the bridge:
      </para>
<screen>&prompt.root;ip link delete dev virbr_test</screen>
     </step>
    </procedure>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-xen-net-vlan">
   <title>Using VLAN Interfaces</title>
   <para>
    Sometimes, it is necessary to create a private connection either between
    two &vmhost;s or between &vmguest; systems. For example, to migrate
    &vmguest; to hosts in a different network segment, or to create a private
    bridge that only &vmguest; systems may connect to (even when running on
    different &vmhost; systems). An easy way to build such connections is to set
    up VLAN networks.
   </para>
   <para>
    VLAN interfaces are commonly set up on the &vmhost;. They either interconnect
    the different &vmhost; systems, or they may be set up as a physical
    interface to an otherwise virtual-only bridge. It is even possible to
    create a bridge with a VLAN as a physical interface that has no IP address
    in the &vmhost;. That way, the guest systems have no possibility to access
    the host over this network.
   </para>
   <para>
    Run the &yast; module <menuchoice><guimenu>System</guimenu><guimenu>Network
    Settings</guimenu></menuchoice>. Follow this procedure to set up the VLAN
    device:
   </para>
   <procedure>
    <title>Setting up VLAN Interfaces with &yast;</title>
    <step>
     <para>
      Click <guimenu>Add</guimenu> to create a new network interface.
     </para>
    </step>
    <step>
     <para>
      In the <guimenu>Hardware Dialog</guimenu>, select <guimenu>Device
      Type</guimenu> <guimenu>VLAN</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Change the value of <guimenu>Configuration Name</guimenu> to the ID of
      your VLAN. Note that VLAN ID <literal>1</literal> is commonly used for
      management purposes.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Select the interface that the VLAN device should connect to below
      <guimenu>Real Interface for VLAN</guimenu>. If the desired interface does
      not appear in the list, first set up this interface without an IP
      Address.
     </para>
    </step>
    <step>
     <para>
      Select the desired method for assigning an IP address to the VLAN device.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Next</guimenu> to finish the configuration.
     </para>
    </step>
   </procedure>
   <para>
    It is also possible to use the VLAN interface as a physical interface of a
    bridge. This makes it possible to connect several &vmhost;-only networks
    and allows to live-migrate &vmguest; systems that are connected to such a
    network.
   </para>
   <para>
    &yast; does not always allow to set no IP address. However, this may be a
    desired feature especially if &vmhost;-only networks should be connected.
    In this case, use the special address <literal>0.0.0.0</literal> with
    netmask <literal>255.255.255.255</literal>. The system scripts handle this
    address as no IP address set.
   </para>
  </sect2>
 </sect1>
</chapter>
