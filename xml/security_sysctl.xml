<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
 xml:id="cha-sec-sysctl">
 <title>Improving network security with <command>sysctl</command> variables</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
   </dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  Sysctl (system control) variables control certain kernel parameters that
  influence the behavior of different parts of the operating system, for example
  the Linux network stack. These parameters can be looked up in the
  <literal>proc</literal> file system, in <filename>/proc/sys</filename>. Many
  kernel parameters can be changed directly by writing a new value into a
  parameter pseudo file. However, these changes are not persisted and are lost
  after a system reboot. Therefore, we recommend configuring all changes in
  a sysctl configuration file to have them applied at every system start.
 </para>
 <para>
  In this chapter, several networking related variables are configured
  that improve the security features of Linux. Depending on the presence of a
  firewall and its settings, certain variables listed here already
  have the safe values by default. You can check the current value of a setting
  by using the <command>sysctl</command> utility like this:
 </para>
<screen>&prompt.user;/sbin/sysctl net.ipv4.conf.all.rp_filter
net.ipv4.conf.all.rp_filter = 2</screen>
 <para>
  To apply the following settings, create a configuration file
  <filename>/etc/sysctl.d/</filename>. The file needs to end with a
  <filename>.conf</filename> suffix, for example
  <filename>/etc/sysctl.d/network.conf</filename>. For details, refer to
  <command>man 5 sysctl.d</command>.
 </para>
 <para>
  Set the variables from the following list as appropriate for your environment.
 </para>

 <itemizedlist xml:id="il-security-sysctl">
  <listitem>
<screen># the default setting for this is 2 (loose mode)
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.rp_filter = 1</screen>
   <para>
    This setting enables the IPv4 reverse path filter in strict mode. It ensures
    that answers to incoming IP packets are always sent out via the interface
    from that the packets have been received. If the system would direct answer
    packets to a different outgoing interface according to the routing table,
    these packets would be discarded. The setting prevents certain kinds of
    IP spoofing attacks that are, for example, used for distributed denial-of-service
    (DDoS) attacks.
   </para>
  </listitem>
  <listitem>
<screen># the default setting for this should already be 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.all.accept_source_route = 0</screen>
   <para>
    This setting disables the acceptance of packets with the
    <option>SSR</option> option set in the IPv4 packet header. Packets that use
    <emphasis>Source Routing</emphasis> are rejected. This prevents IP
    packet redirection, that is redirection to a host behind a firewall, that is
    not directly reachable otherwise.
   </para>
  </listitem>
  <listitem>
<screen># the default setting for this should already be 1
net.ipv4.tcp_syncookies = 1</screen>
   <para>
    This enables TCP SYN Cookie Protection for IPv4 <emphasis>and</emphasis>
    IPv6. It addresses a specific denial-of-service attack on the TCP protocol
    level. The protection involves a small CPU trade-off in favor of avoiding
    memory exhaustion caused by attackers. The protection mechanism consists of
    a fallback algorithm that only comes into play when no further TCP
    connections can be accepted the normal way. The mechanism is not fully TCP
    protocol compliant and can thus cause protocol issues in certain TCP contexts.
    The alternative would be to drop additional connections in
    overload scenarios. This also needs a differentiation between legitimate
    high TCP load and a TCP denial-of-service attack. If you expect a high load
    of TCP connections on your system, then this setting could be
    counterproductive.
   </para>
  </listitem>
  <listitem>
<screen># default is 128
net.ipv4.tcp_max_syn_backlog = 4096</screen>
   <para>
    The TCP SYN backlog defines the number of SYN packets that are queued for
    further processing. Once the queue limit is exceeded, all new incoming
    SYN-packets are dropped and new TCP connections are not  possible (or the
    SYN cookie protection kicks in). Increasing this value improves the
    protection against TCP SYN flood attacks.
   </para>
  </listitem>
  <listitem>
<screen># the default setting for this should already be 1
net.ipv4.icmp_echo_ignore_broadcasts = 1</screen>
   <para>
    ICMP echo requests (ping) can be sent to an IPv4 broadcast address in order
    to scan a network for existing hosts / IP addresses or to perform an ICMP
    flood within a network segment. This setting causes the networking stack to
    ignore ICMP echo packets sent to a broadcast address.
   </para>
  </listitem>
  <listitem>
<screen># the default setting for this should already be 1
net.ipv4.icmp_ignore_bogus_error_responses = 1</screen>
   <para>
    This setting avoids filling up log files with unnecessary error messages
    coming from invalid responses to broadcast frames. Refer to <link
     xlink:href="https://datatracker.ietf.org/doc/html/rfc1122#section-3.2.2">RFC
     1122 <citetitle>Requirements for Internet Hosts -- Communication
      Layers</citetitle> Section 3.2.2</link> for more information.
   </para>
  </listitem>
  <listitem>
<screen># default should already be 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0</screen>
   <para>
    Disables the acceptance of ICMP redirect messages. These messages are
     sent by gateways to inform a host about a better route to an outside
    network. These redirects can be misused for man-in-the-middle attacks.
   </para>
  </listitem>
  <listitem>
<screen>net.ipv4.conf.default.secure_redirects = 0
net.ipv4.conf.all.secure_redirects = 0</screen>
   <para>
    Accepting 'secure' ICMP redirects (from those gateways listed as default
    gateways) has few legitimate uses. It should be disabled unless it is
    absolutely required.
   </para>
  </listitem>
  <listitem>
<screen>net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.all.send_redirects = 0</screen>
   <para>
    A node should not send IPv4 ICMP redirects, unless it acts as a router.
   </para>
  </listitem>
  <listitem>
<screen># default should already be 0
net.ipv4.ip_forward = 0
net.ipv6.conf.all.forwarding = 0
net.ipv6.conf.default.forwarding = 0</screen>
   <para>
    IP forwarding should only be enabled on systems acting as routers.
   </para>
  </listitem>
 </itemizedlist>
</chapter>
