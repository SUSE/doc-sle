<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook50-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE book
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<?provo dirname="security/"?>
<!--
FIXME:

* new rationale/ABOUT:
  - encourage investigative hardening
  - more focus on method and strategy - ask questions first, answer when question is sane.
  - add cyclic restart of procedure as a main argument: security as a process, not a state
* remove occurrences of EAL4+
* add chapter about reference to Common Criteria
  - evaluated configuration
  - value-add by evaluation
* fine-tuning, removal of some chapters
* sle11-sp2 specifics
  - pseudo file systems: debugfs, tmpfs, procfs, sysfs
  - AppArmor


-->
<book version="5.0" xml:lang="en" xml:id="book-hardening"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:assignee>fs@suse.com</dm:assignee>
   </dm:bugtracker>
  </dm:docmanager>

  <title>Security and Hardening Guide</title>
  <productname>&productname;</productname>
  <productnumber>&productnumber;</productnumber>
  <date>
   <?dbtimestamp format="B d, Y"?>
  </date>
  <xi:include href="common_copyright_gfdl.xml"/>
  <abstract>
   <para>&abstract_hardening;</para>
  </abstract>
 </info>
 <preface xml:id="pre-hardening-about">
  <title>About This Guide</title>
  <para>
   The &productname; Security and Hardening Guide deals with the
   particulars of installation and set up of a secure &productname;
   and additional post-install processes required to further secure
   and harden that installation. Security and hardening elements and
   procedures are best applied to a server both during installation and
   post-installation and aim to improve the fitness of the system for the
   purposes demanded by its administrator.
  </para>
  <para>
   This guide supports administrator in making security related choices and
   decisions. The individual steps and procedures should be seen as
   proposals, not as strict rules. You will often need to evaluate the
   usefulness of measures for your organization yourself.
  </para>
  <para>
   The objective is to improve the security value of the system. Definitions
   about the meaning of the term security vary, but we want to settle on one
   that is both simple and abstract:
  </para>
  <para>
   <emphasis>A good system does what it is expected to do, and it does it
   well.</emphasis>
  </para>
  <para>
   <emphasis>A secure system is a good system that does nothing
   else.</emphasis>
  </para>
  <para>
   The focus of this guide lies on doing <quote>nothing else</quote>. The
   Linux system is constructed in such way that security policies are
   enforced. These policies consist of the following concepts (fairly
   generic and incomplete list):
  </para>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     DAC (Discretionary Access Control): File and directory permissions, as
     set by <command>chmod</command> and <command>chown</command>.
    </para>
   </listitem>
   <listitem>
    <para>
     Privileged ports: TCP and UDP ports 0-1023 and raw sockets can only be
     used by &rootuser;.
    </para>
   </listitem>
   <listitem>
    <para>
     Other privileged operations: Loading kernel modules, configuring
     network interfaces, all security relevant settings of the Linux kernel.
     These are operations that can only be done by the root user, that is
     the user with the user ID 0, or any other process with the necessary
     capabilities.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   Attacking a system means to attempt to overcome privilege boundaries,
   for example by circumventing or breaking them. That means the
   administrator or programmer of the system has not anticipated this
   scenario.
  </para>
  <para>
   A hardened system raises the bar by reducing the area that the system
   exposes to the attacker (often called attack surface). A hardened
   system can also provide measures to reduce the impact of
   vulnerabilities in the parts of the systems that must be exposed to a
   potential attacker.
  </para>
  <para>
   Security is about decisions, and whenever security is in (apparent)
   opposition to function, these decisions become trade-offs. While it can
   be argued that all systems should be set up to be as securely as
   possible, some levels of security and hardening may very well be overkill
   in some cases. Each system's operational environment has its own security
   requirements derived from business drivers or regulatory compliance
   mandates. &sls; can, for example, be configured to comply with
   security standards, such as SOX, HIPAA and PCIDSS. It can also be set up
   to fulfill the requirements from the German Federal Office of Information
   Security (Bundesamt für Sicherheit in der Informationstechnik) as
   described in BSI TR-02102-1. An effective business requirements analysis
   should be performed to determine the right level of security and
   hardening to be applied to a server or defined as part of a baseline
   server build.
  </para>
  <para>
   As a final note before we begin: You may encounter individual
   requirements in regulatory compliance frameworks that may not make sense
   from a technical perspective, or they do not serve the purpose of
   improving security. It may be a productive attitude to simply implement
   what is required, but whenever there is a contradiction to security, an
   informed discussion in the documentation serves the overall purpose of
   your regulative compliance framework much more than blindly obeying the
   specifications. Feel encouraged to dispute list items that you think are
   counterproductive.
  </para>
  <sect1 xml:id="pre-hardening-about-assumptions">
   <title>Assumptions and Scope</title>

<!--
   <note>
    <para>
     As we go through this guide – we derive base assumptions from those
     provided from the EAL configuration. However, very few real-world
     environments provide for such a riskfree design constraint set. As
     such it can be considered that the EAL environment includes a generally
     cooperative usership with medium attack expertise and potential for
     individual users, and that the system runs physically protected in an
     untrusted network that can be considered hostile.
    </para>
   </note>
-->

   <para>
    References in this document will usually be made to a single server
    target or host, however the scope can generally be applied to more than one
    machine. We generally assume that the security target can cover one or
    more systems running &productname;.
   </para>

   <para>
    We explicitly do <emphasis>not</emphasis> make any assumptions about the
    hostility of the network that the systems are connected to, or the
    cooperative nature of the users that leverage the services provided by
    the systems.
   </para>

   <para>
    In turn, this means that you partially define your context on your own
    when reading through this document. You will need to broaden the meaning
    of individual portions to adapt it to your environment. In some cases,
    such as the use case of a server that is exposed to the Internet, this
    document may even be insufficient or incomplete; however, it may still
    serve as a good starting point on your journey toward an increased
    level of confidence that your system will behave like you want it to.
   </para>

   <para>
    About trust: Trust relationships exist among all systems that
    participate in networked transactions. In this way, the trust
    relationship between the people that use the systems is transported
    across these systems. The chain that is formed by your trust
    relationships is only as strong as the weakest link. It is good practice
    to graphically visualize the trust relationships with the services in a
    schematic overview or map of your network. Generally, it is up to the
    owner of a resource to enforce the policies imposed on that resource;
    this would usually be the server that provides the resource. The client
    that opens a connection to request the resource can only be made
    responsible for the actions that it performs. This refers to the action
    of opening the connection to start with, but to nothing else as such.
   </para>

   <para>
    The case of hostile users is special and unique: The Human Resources
    department may be able to solve some  security problems in your
    computing environment; in addition, some technical measures can be taken.
    Make sure that the necessary regulations in your environment fit your
    needs, and that they back your intentions instead of obstructing them if
    you need to work around a missing support from your HR department (and
    your management).
   </para>

   <para>
    Persons that have administrative privileges on a system are
    automatically considered trusted.
   </para>

   <para>
    A Linux system&mdash;without any additional security frameworks such as
    &selnx;&mdash;is a single level security system: From a security policy
    perspective there is only the superuser (root) and non-privileged users.
    System users are non-root user IDs that have access to files specific to
    their purpose. The separation of administrative duties is complicated by
    this simplicity. Some tools help: Use sudo(8) for administrative tasks,
    but be aware that after the privilege boundary is crossed, a program
    running with root privileges does not enforce any file access policies
    for non-privileged users anymore. vi(1) that runs as root can read and
    write to any file in the system.
   </para>

   <para>
    Another tool to mitigate the risk of abuse or accidental misuse of
    administrative privileges is NetIQ's Privileged User Manager product.
    More information is available here:
   </para>

   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      <link xlink:href="https://www.netiq.com/products/privileged-user-manager/"/>
     </para>
    </listitem>
   </itemizedlist>

<!--
    It is not intended to
    address the needs of an Internet-connected server, or the case where
    services are to be provided to potentially hostile users. Further
    network security design and requirements would be required in such an
    instance and cover multi-layered firewalls / DMZ setups / etc.
   </para>

   <para>
    It is also assumed that all network cabling <emphasis>must</emphasis> be
    secured and protected from tapping and any other modifications. A secure
    network is assumed for this configuration because detailed examination
    of cryptographic protocols is beyond the scope of this document.
   </para>

   <note>
    <para>
     Note: Again – these assumptions are a bit <quote>idyllic</quote>.
     Evaluation of the threat environment would define the need for
     crypto-supported services. Also a tap-safe network infrastructure might
     be a requirement based on the type of threats defined.
    </para>
   </note>
-->

   <para>
    Physical security of the server is another assumption made here, where
    the server is protected from theft and manipulation by unauthorized
    persons. A common sobering thought among security professionals is the
    <quote>ten-second Denial of Service</quote>: Unplug the wires and reboot
    the server. Physical security must be ensured and physical access must
    be controlled. Otherwise, all assumptions about at least the
    availability of these systems are void.
   </para>

   <note>
    <title>Cryptography</title>
    <para>
     The use of cryptography to protect the confidentiality of transactions
     with the services that your system provides is generally encouraged.
     The need to implement cryptographic enhancements is strongly dependent
     on the operational environments of all participating systems. Keep in
     mind that you need to verify all of the possible security benefits that
     cryptography can provide, for all of your services, and that these
     benefits are not delivered automatically by turning on the
     <quote>encrypt</quote> option of your service (if you can enjoy the
     idyllic situation where encryption is available as a button to check):
    </para>
    <variablelist>
     <varlistentry>
      <term>Confidentiality</term>
      <listitem>
       <para>
        Protection against reading the content of a transaction
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Privacy</term>
      <listitem>
       <para>
        Protection against knowing that a transaction exists, and some
        properties that it may have, such as size, identities of involved
        parties, their presence, etc.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Integrity</term>
      <listitem>
       <para>
        Protection against alteration of content. Be aware that cryptography
        does not automatically provide this kind of protection.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Authenticity</term>
      <listitem>
       <para>
        Protection against identity fraud. Cryptography that does not know
        about identities of participating entities cannot deliver this
        value.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <para>
     Keep in mind that encryption of data for confidentiality purposes can
     merely reduce the size of the data to protect from the actual size to
     the size of the key that is used to encrypt the data. This results in a
     key exchange problem for encrypted transactions, and in a key
     management problem for encrypted data storage. Since data is
     (typically, there are exceptions!) processed in clear, you need your
     vault unlocked while data within is being worked with. The encryption
     of such data on the file system or block device layer helps against the
     theft of the system, but it does not help the confidentiality of the
     data while the system is running.
    </para>
   </note>

<!--
    Also, all components in the network such as routers,
    switches and hubs that are used for communication are assumed to pass
    the user data reliably and without modification. Translations on
    protocol elements (for example NAT) are allowed just as long as those
    modifications don't lead to situations where data or information is
    routed to something other than the intended recipient system. Also, be
    aware that data passed to another system leaves the control of the
    sending system; therefore the protection of that data against
    unauthorized access needs to be enforced by the receiving system.

    *DUH* This is no statement about the obligation of the server to guard the data and the policy!
    -->

   <para>
    If you want to implement a consistent security policy covering multiple
    hosts on a network then organizational procedures
    <emphasis>must</emphasis> ensure that all those hosts can be trusted and
    are configured with compatible security configurations enforcing an
    organization wide security policy. Isolation of groups of systems that
    maintain data of the same trust domain can provide an adequate means of
    control; ultimately, the access controls to these systems, both for end
    users and for other systems, need to be carefully designed, configured,
    inspected and monitored.
   </para>

<!--
   <important>
    <para>
     If any connection is established with a system that is outside of the
     customer's control, enforcement of security policies for information
     passed to that system is not possible. Systems outside of the customer
     realm of control should also be considered beyond the scope of this
     document – or at least the configuration prescribed.
    </para>
   </important>
-->

   <important>
    <title>Trusting Data</title>
    <para>
     Data can only be trusted to the degree that is associated with the
     domain it comes from. If data leaves the domain in which security
     policies can be enforced, it should consequently be associated with the
     trust of the target domain.
    </para>
   </important>

   <para>
    For a review of industry best practices on security, the development of
    sound security processes, controls, development, reviews, audit
    practices and incident management, you can review a public RFC (request
    for comments). RFC 2196 is the ongoing work of the world-wide community
    and individual security and process experts. You can review it online
    here: <link xlink:href="http://www.faqs.org/rfcs/rfc2196.html"/>. An RFC
    is an open and living document that invites comments and review.
    Enhancements and improvements are welcome; you will find instructions on
    where to send those suggestions within the document itself.
   </para>

   <para>
    This guide provides initial guidance on how to set up and secure a
    &productname; installation but it is not intended to be the only
    information required for a system administrator to learn how to operate
    Linux securely. Assumptions are made within this guide that the reader
    has knowledge and understanding of operating security principles in
    general, and of Linux administrative commands and configuration options
    in particular.
   </para>

<!-- It is strongly advised that a
    customer organization that wants to operate their systems in the
    resultant secure configurations have their administrators trained in
    operating system security principles, &sle; security functions,
    properties and configuration. &suse; has developed ATT (Advanced
    Technical Training) courses for &productname; security and advanced
    administration. Courses range from introductory to advanced and are the
    basis for two of the leading &suse; and industry Linux certifications,
    the Certified Linux Professional and the Certified Linux Engineer.
   </para>

   <itemizedlist>
    <listitem>
     <para>
      <ulink
       url="http://www.novell.com/training/certinfo/clp/roadmap_10.html"/>
     </para>
    </listitem>
    <listitem>
     <para>
      <ulink
       url="http://www.novell.com/training/certinfo/cle/roadmap_10.html"/>
     </para>
    </listitem>
   </itemizedlist>

   <para>
    A common security axiom is <quote>Trust ... No One!</quote> or
    <quote>trust only those who have something considerable to
    lose...</quote>. While it is important that every organization can trust
    their system administrators not to deliberately undermine the security
    of the system, we will cover system configuration, including audit
    functions, which can be used to make users accountable for their
    actions. However, it is necessary to point out that an administrator may
    be able to stop the audit subsystem and reconfigure it such that his
    actions no longer get audited. Well trained and trustworthy
    administrators are therefore a key element for the secure operation of
    the system.
   </para>

   <para>
    Much of the configuration information outlined in this guide is provided
    in compliance with the requirements defined for &suse; to acquire the
    EAL Common Criteria certifications and is information a system
    administrator should use when installing, configuring, and operating the
    system to meet certified levels of security. To get an understanding of
    the differing levels you can visit the Common Criteria website or for
    more succinct reference – wikipedia.
   </para>

   <itemizedlist>
    <listitem>
     <para>
      <ulink url="https://www.commoncriteriaportal.org/"/>
     </para>
    </listitem>
    <listitem>
     <para>
      <ulink url="https://www.commoncriteriaportal.org/"/>
     </para>
    </listitem>
    <listitem>
     <para>
      <ulink url="http://en.wikipedia.org/wiki/Common_Criteria"/>
     </para>
    </listitem>
    <listitem>
     <para>
      <ulink url="https://www.commoncriteriaportal.org/"/>
     </para>
    </listitem>
   </itemizedlist>

   <para>
    As a major portion of the hardened setup guidance has been placed here,
    and some has been modified, access to the original <quote>Common
    Criteria EAL4+ Evaluated Configuration Guide for &sls; on IBM
    Hardware</quote>” by Klaus Weidner can be found on the &productname;
    shipping DVD. You can find the package that contains the unedited
    version on the DVD in the /suse/noarch/ directory. The package name
    (which needs to be installed as part of the EAL criteria hardening) is
    <systemitem
     class="resource">certification-sles-ibm-eal4.rpm</systemitem>.
    Once installed, a pdf and other forms of the configuration guide can be
    found on the system in
    <filename>/usr/share/doc/packages/certification-sles-ibm-eal4/</filename>.
   </para>

   <para>
    You can also find a copy of this documentation in a variety of formats
    on the &suse; FTP site. You can also find different CAPP certification
    efforts (with different sponsors HP and IBM) from various &productname;
    versions 8, 9 and 10:
   </para>

   <para>
    <ulink
     url="ftp://anonymous@ftp.suse.com/pub/projects/security/CommonCriteria/"/>
   </para>

   <para>
    A final note of merit, the EAL 4+ (augmented) certification explicitly
    defines the hardware platform used to achieve the certification, and as
    such it could be argued that any variation on the hardware platform
    could ostensibly invalidate the certification itself. While this could
    be argued to the <quote>letter of the law</quote>, the practical and
    pragmatic reality is that a CC EAL certification is referenced in the
    industry to provide a level of intrinsic trust for
    companies wishing to implement an operating system or technology. Minor
    modifications to the hardware reference platform should not be
    considered a risk.
   </para>

   <note>
    <para>
     Note: The specific hardware configuration constraint is merely due to
     the way the EAL certification process is run – sponsored by a third
     party, as is the hardware.
    </para>
   </note>

   <para>
    As the EAL levels go up so do the intrinsic costs associated with
    garnering a particular level of certification for the vendor who makes
    the product. Upper level EAL certifications have real monetary costs in
    addition to considerable labor and research/design efforts. While it may
    be considered that an EAL 6 or 7 certification on an operating system
    would garner more revenue due to its demonstrated security capabilities,
    it isn't guaranteed nor even something most consumers would require.
    Most commercially available operating systems are rated at EAL 4 today,
    and very specialized OSes garner an EAL 5 or higher typically by
    extensive planning (from the start) and use security kernels
    designed for a specific purpose. Another commonly heard description of a
    <quote>secure system</quote> is one that is disconnected, powered-off,
    buried 10 feet underground and covered with cement... and of course, if
    followed, that system would be of very little value to anyone. System
    security and the <quote>usefulness</quote> of a particular system is a
    constant balancing act. Using sound and pragmatic logic to determine the
    value of the system and/or the data it protects or serves can help
    determine the level of system protections one should or even should
    <emphasis>not</emphasis> apply to it.
   </para>

-->
  </sect1>
  <sect1 xml:id="sec-content-hardening">
   <title>Contents of this Book</title>

   <para>
    <xref linkend="part-setup-for-eal"/> contains a reference to Common
    Criteria and &productname;. <xref linkend="part-sec-prot"/> contains
    more general system security and service protection schemes.
   </para>

<!--
   <note>
    <para>
     Please keep in mind that we use the EAL/CC evaluation guide as a means
     to describe a variety of services that can be hardened, processes that
     can or should be followed, operational functionality of &productname;,
     components, pieces and parts. Together, the eal script that can be run
     should never be considered the be-all-end-all method to harden or
     secure a &productname; system... it is merely a tool used here to
     facilitate discussion and learning. A beginning, perhaps – but not an
     end.
    </para>
   </note>
-->
  </sect1>
  <xi:include href="common_intro_available_doc_i.xml"/>
  <xi:include href="common_intro_feedback_i.xml"/>
  <xi:include href="common_intro_typografie_i.xml"/>
 </preface>
 <part xml:id="part-setup-for-eal">
  <title>Common Criteria</title>
  <info/>
  <chapter xml:id="cha-setup-for-eal-intro">
<!--
   <sect1 id="sec-setup-for-eal-intro-usage">
    <title>Guide Usage</title>

    <para>
     In using this guide you should keep the following points in mind:
    </para>

    <variablelist>
     <varlistentry>
      <term>Sectioning Order and Section Cohesion</term>
      <listitem>
       <para>
        Just a general caution, each section might build on information and
        recommendations discussed in prior sections. It is wise to read each
        section to gain complete understanding (if possible) as the
        instructions/recommendations should never be applied to a system
        blindly. Relevant examples and descriptions may occur after the
        instructions for a particular action.
       </para>
       <para>
        There are two distinct sections for the system set up, system-level
        installation/configuration and service-level
        installation/configuration. The system-level recommendations should
        be applied to all hosts; however service-level guidance may or may
        not be applicable. In the case of services, you will apply the
        guidance if the machine is either a server or a client for that
        service, and ensure that the service is disabled (or as previously
        mentioned, the package removed from the system) according to the
        instructions provided if the machine is neither a server nor a
        client.
       </para>
       <para>
        Also, as mentioned previously, the first sections describe an EAL 4+
        installation and setup. As additional services are added, they may
        be outside of the EAL 4+ base installation and configuration
        (<quote>certified target of evaluation</quote>) yet should not be
        considered 'non-secure'. Additional content depth, recommendations
        and examples will be included to provide for increased flexibility
        in securing and hardening system implementations.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Testing and Fingerprinting</term>
      <listitem>
       <para>
        Each component and recommendation should be tested. In the Delivery
        Guide, guidance was described for a prototype and lab environment.
        This is where testing should occur. Overall, any recommendations
        made here should always be tested in a non-production environment
        before deployment. This test environment should simulate the setup
        in which the system will be deployed as closely as possible.
       </para>
       <para>
        Fingerprinting is the process of storing a 'picture' of a system so
        it can be referenced and compared later to prove its integrity has
        not been compromised. Details will be given in this guide for the
        use of <systemitem class="resource">AIDE</systemitem> (the Advanced
        Intrusion Detection Environment). It is used as an example, but the
        fingerprinting guidance is sound. There are several third-party
        providers of system integrity and audit solutions. However,
        <systemitem class="resource">AIDE</systemitem> is included with
        &productname;, is OpenSource, and fairly easy to implement. In the
        event of a system breach, having a system fingerprint can prove
        invaluable when it comes to forensic analysis.
       </para>
       <note>
        <para>
         Note: Earlier versions of &productname;
         included<systemitem class="resource"> TripWire</systemitem>.
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Root Shell Environment Assumed</term>
      <listitem>
       <para>
        Most of the actions listed in this document are written with the
        assumption that they will be executed by the &rootuser; user running
        the /bin/bash shell. Any commands preceded with a hash mark (#)
        assume that the administrator will execute the commands as
        &rootuser;, in other words, they will be applied via the usage of
        sudo whenever possible (or use su to gain root privileges if sudo
        cannot be used).
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Reboots / Restarts</term>
      <listitem>
       <para>
        A system restart or reboot might be required after some actions in
        order to complete the reconfiguration of the system. Attempts will
        be made to mention when a reboot is explicitly required. However, in
        some cases, changes will not take effect until a reboot is
        performed. To ensure that changes are applied properly and
        to test functionality, it is always a good practice to reboot the
        system after applying a set of recommendations from this guide if a
        reboot is specified.There are only few system changes that
        require a reboot.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Hardware Preparation</term>
      <listitem>
       <para>
        If possible, BIOS passwords should be enabled. They are no
        guarantee, but are decent protection from low-level hardware
        configuration changes. Physical access must be controlled to ensure
        that the BIOS 'clear' hardware-jumpers could not be manipulated on
        the motherboard to bypass this protection.
       </para>
       <note>
        <para>
         The caveat to this is that a BIOS passwords can also be problematic
         or detrimental. If physical access/safety can be assured – you
         may opt to refrain from their usage. Booting from a forensics or
         rescue image may not be possible – if a system
         failure or break in – if a BIOS password preempts a boot.
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>System User Requirements</term>
      <listitem>
       <para>
        The assumption is made that the hardened host will reside in a
        friendly environment, one with cooperative and
        security-minded users. Users who will use the system responsibly to
        fulfill their tasks.
       </para>
       <para>
        Note that system availability is not addressed in this guide, and a
        malicious user could disable a server through resource exhaustion,
        denial-of-service attacks or like methods. High availability is
        addressed in other playbooks and can be at the server or service
        level. Of particular interest to many &productname; customers is the
        fact that high-availability tools are available for and supported with
        the &productname; distributions (&productname; 10 and higher).
       </para>
       <para>
        A set of baseline user account requirements are prescribed here in
        accordance with the EAL 4+ evaluation. These requirements are not
        exhaustive, yet provide a minimum level of trusted security for a
        user environment. Other requirements may be necessary depending on
        other policy constraints like SOX, auditing, etc.
       </para>
       <para>
        The requirements for users specifically include:
       </para>
       <variablelist>
        <varlistentry>
         <term>Prescribed Usage / Access Control</term>
         <listitem>
          <para>
           User accounts <emphasis>must</emphasis> be assigned only to those
           users with a need to access the data protected by
           the system. These users <emphasis>must</emphasis> be sufficiently
           trustworthy not to abuse those privileges. Again, the concept of
           domain control needs to be considered. Once data
           leaves a system the system has no control and cannot prevent that
           data from being intentionally redistributed to unauthorized third
           parties by an authorized user.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>Granted Trust</term>
         <listitem>
          <para>
           All users of the system <emphasis>must</emphasis> be sufficiently
           skilled to understand the security implications of their actions,
           and <emphasis>must</emphasis> understand and follow a base set of
           security guidelines. There is a baseline set of these
           requirements in a later section. Appropriate training
           <emphasis>must</emphasis> be available to ensure this. Further,
           best practices suggest some sort of User/Acceptable Use policy be
           maintained and logged. As part of many auditing standards, these
           types of policies are required to be signed and stored before
           access is granted to systems including host access, remote
           access, Internet access, etc.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
       <para>
        Normally it is part the responsibility of system administrators to
        verify that these requirements are met, and to be available to users
        if they need help in maintaining the security of their data.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect1>
   <sect1 id="sec-setup-for-eal-intro-host-security">
    <title>Host Security Functions</title>

    <para>
     This section summarizes the security functions that were covered by the
     EAL 4+ certified evaluation. Refer to the appropriate sections for
     information on configuring, using, and managing any of these functions.
     Further examples and details may be provided in later sections if that
     detail is granular and out-of-scope of the base evaluation. All section
     numbers referenced in this guide will correspond directly with those in
     the native <quote>Common Criteria EAL4+ Evaluated Configuration Guide
     for &suse; LINUX Enterprise Server on IBM Hardware</quote> for clarity,
     however this synchronization will not begin until section 2.2 (EAL 4+
     Installation). Also note that more detail (for clarity-sake) will be
     provided in this guide. When in doubt, refer to man pages, the Internet
     or check other references. There is a wealth of information available
     in the topic of *nix system security or computer
     security in general. A list of sources will be included
     in an appendix of this guide.
    </para>

    <sect2 id="sec-setup-for-eal-intro-host-security-auth">
     <title>Identification and Authentication</title>
     <variablelist>
      <varlistentry>
       <term>Pluggable Authentication Module (PAM)</term>
       <listitem>
        <para>
         <xref linkend="cha-setup-for-eal-securing-background-pam"/> will
         describe PAM and its usage. Extra details will be provided on PAM
         'stacks' and how to extend PAM to meet your usage requirements. PAM
         documentation is located on the system in
         <filename>/usr/share/doc/packages/pam/</filename> and you can check
         the pam man page with <command>man 8 pam</command>.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>loginRequired</term>
       <listitem>
        <para>
         The setup and configuration of system logins will be covered in
         <xref linkend="cha-setup-for-eal-securing-background-login-defs"/>.
         Also refer to the <literal>login</literal> and
         <literal>login.defs</literal> man pages for additional information.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>OpenSSH</term>
       <listitem>
        <para>
         OpenSSH is used by default in &productname; and its usage and setup
         are described in
         <xref
          linkend="cha-setup-for-eal-securing-background-ssh"/>
         and the <systemitem class="daemon">sshd</systemitem>,
         <command>ssh</command>, <literal>sshd_config</literal> man pages.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><systemitem class="daemon">vsftpd</systemitem>
       </term>
       <listitem>
        <para>
         The Very Secure FTP daemon is discussed in
         <xref
          linkend="cha-setup-for-eal-securing-background-ftp"/>
         and the <systemitem class="daemon">vsftpd</systemitem> and
         <literal>vsftpd.conf</literal> man pages. Usage of FTP may not be a
         service that is required in all host configurations, but it was
         part of the EAL 4+ configuration test.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><command>su</command>
       </term>
       <listitem>
        <para>
         The usage of the <command>su</command> command is prescribed
         <xref
          linkend="sec-setup-for-eal-operating-root"/> in.
         Further details can be found in the <command>su</command> man page.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </sect2>

    <sect2 id="sec-setup-for-eal-intro-host-security-audit">
     <title>Audit</title>
     <para>
      The audit subsystem has changed considerably from version to version
      of &productname; with updates being made at both the kernel and
      user-space. In recent updates to &productname; 10 SP2, more features
      and functionality has been introduced furthering the capabilities and
      configuration possibilities. The audit subsystem has distinct
      components for event detection and configuration, proxy handling, and
      reporting. Details will be covered in
      <xref
       linkend="sec-setup-for-eal-monitoring-audit"/>. You
      should also refer to the
      <systemitem class="daemon">auditd</systemitem> man page, whose
      <quote>SEE ALSO</quote> section points to the remaining audit
      subsystem man pages (for example <literal>auditd.conf</literal>,
      <systemitem class="daemon">audispd</systemitem>,
      <command>ausearch</command>, <command>aureport</command> and
      <command>auditctl</command>).
     </para>
     <para>
      Additional information will be covered in later chapters. The audit
      subsystem is very powerful and flexible. Many customers choose to
      purchase third-party products for audit event tracking and reporting
      when a detailed knowledge of the Linux Auditing System might have
      satisfied their needs with no additional costs.
     </para>
    </sect2>

    <sect2 id="sec-setup-for-eal-intro-host-security-access">
     <title>Discretionary Access Control</title>
     <para>
      Discretionary access control will be covered in
      <xref
       linkend="sec-setup-for-eal-user-acl"/>. Further, System V
      interprocesses communication objects (for example message queues, semaphore
      sets and shared memory segments) and security permissions and
      processes will be covered in
      <xref
       linkend="sec-setup-for-eal-operating-sysv-memory"/>.
     </para>
    </sect2>

    <sect2 id="sec-setup-for-eal-intro-host-security-object-reuse">
     <title>Object Reuse</title>
     <para>
      According to the &productname; High Level Design document, the kernel
      automatically ensures that new objects (disk files, memory, IPC) do
      not contain any traces of previous contents. The design has even been
      enhanced in the latest editions of &productname; to include further
      security enhancements in the kernel and user-space.
     </para>
     <para>
      Some examples include:
     </para>
     <variablelist>
      <varlistentry>
       <term>Randomization:</term>
       <listitem>
        <para>
         Better address space randomization is available for binaries
         compiled with PIE support (-fPIE). Randomizations include the
         address where the binary is mapped and the head start address.
         Stack and mmap areas are already randomized for all other binaries.
         Randomization is typically an anti-worm measure, not typically an
         anti-overflow solution.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>Fstack-protection</term>
       <listitem>
        <para>
         fstack-protector runtime stack overrun heuristics are enabled
         for all packages
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </sect2>

    <sect2 id="sec-setup-for-eal-intro-host-security-manage">
     <title>Security Management and System Protection</title>
     <para>
      These topics will be covered as complete chapters. General operation
      and system management will be covered in
      <xref
       linkend="cha-setup-for-eal-operating"/> and system
      monitoring, logging and audit will be handled in
      <xref
       linkend="cha-setup-for-eal-monitoring"/>.
     </para>
    </sect2>

    <sect2 id="sec-setup-for-eal-intro-host-security-communication">
     <title>Secure Communication</title>
     <variablelist>
      <varlistentry>
       <term>stunnel</term>
       <listitem>
        <para>
         Encryption methods and secure communications are expansive topics.
         The EAL 4+ evaluation guide, the usage of stunnel was described to
         provide a universal SSL tunnel for applications or services. In
         <xref
          linkend="sec-setup-for-eal-operating-stunnel"/> the
         specifics will be covered. See also the <literal>stunnel</literal>
         man page.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>SSH System Operation Procedures for Secure Systems</term>
       <listitem>
        <para>
         <xref
          linkend="cha-setup-for-eal-securing-background-ssh"/>
         will cover the configuration and usage of SSH with further details
         available within the <systemitem class="daemon">sshd</systemitem>,
         <command>ssh</command>, <literal>sshd_config</literal> man pages.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </sect2>
   </sect1>
   <sect1 id="sec-setup-for-eal-intro-events">
    <title>Overview of Security Relevant Events</title>

    <para>
     The audit subsystem is intended to be the central interface for
     collecting and viewing the record of security relevant events. Formerly
     called the Linux Audit Subsystem (LauS). It was developed by &suse; for
     &productname; 9 (Open Sourced and released under GPL) to attain a CC
     EAL 4 certificate. Since then it has been reworked, renamed simply
     audit, and adopted upstream into the kernel and is now common to the
     2.6 kernel.
    </para>

    <para>
     The events being monitored by default in the evaluated configuration
     include:
    </para>

    <itemizedlist>
     <listitem>
      <para>
       All authentication done through the PAM library, including the
       identity and location (where available) of the user and the success
       or failure result.
      </para>
     </listitem>
     <listitem>
      <para>
       Any use of <command>su</command> to change identity. All actions done
       as part of a su session are marked in the audit record along with the
       original user's login user ID.
      </para>
     </listitem>
     <listitem>
      <para>
       The addition, change or deletion of any users or groups.
      </para>
     </listitem>
     <listitem>
      <para>
       Any changes and/or change attempts to the contents of any security
       critical files.
      </para>
     </listitem>
     <listitem>
      <para>
       Any changes to the access permissions or ownership of any files or
       IPC (interprocess communication) objects.
      </para>
     </listitem>
     <listitem>
      <para>
       Changes to or new binding network ports and accepting connections.
      </para>
     </listitem>
    </itemizedlist>

    <para>
     Details will be covered in
     <xref linkend="cha-setup-for-eal-monitoring"/>.
    </para>
   </sect1>
   <sect1 id="sec-setup-for-eal-intro-events-sle11">

    <title>&productname; 11 Enhancements</title>

    <para>
     As previously mentioned in the section above, there have been some
     variations in capabilities as the &productname; operating system has
     matured from version to version, service pack to service pack in some
     instances. Even the included binaries themselves in &productname; 11
     have included security enhancements during compilation as improvements
     have been developed. Here are some examples:
    </para>

    <orderedlist>
     <listitem>
      <para>
       Randomization and Enhanced fstack-protection&mdash;see
       <xref
        linkend="sec-setup-for-eal-intro-host-security-object-reuse"/>.
      </para>
     </listitem>
     <listitem>
      <para>
       <literal>D_FORTIFY_SOURCE</literal> flag enabled at compilation time
       – provides compile-time and runtime based overflow protection and
       format string checking. This was included in SLE 10 as well.
      </para>
     </listitem>
     <listitem>
      <para>
       A new &yast; module for Audit. This will ease the setup and
       configuration of the audit modules as part of the Linux Audit
       Framework (CAPP/EAL capable in SLE10SP2 and certified as of
       SLE10SP1).
      </para>
     </listitem>
     <listitem>
      <para>
       Several &aa; enhancements.
      </para>
     </listitem>
     <listitem>
      <para>
       PolicyKit – this allows for more fine-grained access controls for
       administration access. Enables limited/reduced root access for some
       configuration tasks.
      </para>
     </listitem>
     <listitem>
      <para>
       Additional code and design reviews/improvements by the &suse;
       Security Team – securing new features.
      </para>
     </listitem>
    </orderedlist>
   </sect1>

-->
   <title>Overview and rationale</title>
   <info>
    <abstract>
     <para>
      <remark>sknorr, 2014-07-14: update necessary, we are past Q2/2012</remark>
<!-- tbazant 2014-09-05, commenting for now as it's invalid
     Common Criteria certificates have been published for every major
     release of the &productname; since version 8. In Q2/2012, the
     &productname; &productnumber; is expected to receive a Common Criteria
     v3.1 OSPP EAL4+ certificate. As of the time of writing of this
     document, the evaluation is progressing, while the product is under
     development at the same time.
     -->
     </para>
    </abstract>
   </info>
   <sect1 xml:id="sec-setup-for-eal-intro-generic">
    <title>What is the Common Criteria Certification?</title>

    <para>
     Common Criteria is the best known and most widely used methodology to
     evaluate and measure the security value of an IT product. The
     methodology aims to be independent, as an independent laboratory
     conducts the evaluation, which a certification body will certify
     afterward. Security Functional Requirements (SFR) are summarized in
     so-called Protection Profiles (PP), which allows the comparison of
     security functions of different products if the definition of the
     Security Target (ST) (which typically uses a reference to the PP if one
     exists that fits the purpose of the product) and the Evaluation
     Assurance Levels are comparable.
    </para>

    <para>
     A clear definition of security in IT products is challenging. Security
     should be considered a process that never ends, not a static condition
     that can be met or not. A Common Criteria certificate (below EA7) does
     not make a clear statement about error proneness of the system (while
     many of the flaws that exist specifically in operating systems are
     security-relevant), but it adds an important value to the product that
     cannot be described with the presence of technology alone: That someone
     has independently inspected the design of the system in such way that
     it corresponds to the claims that are made, and that explicit care has
     been taken in producing and maintaining the product.
    </para>

    <para>
     The certificate states a degree of maturity of both the product with
     its security functions and the processes of the company that has
     designed, built and engineered the product, and that will maintain the
     product across its life cycle. As such, Common Criteria aims to be
     fairly holistic with its approach to take everything into account that
     is relevant for the security of an IT product.
    </para>

    <para>
     The Evaluation Assurance Level (EAL) shall denote the degree of
     confidence that the product fulfills the described claims. The levels
     are from 1 through 7:
    </para>

    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       EAL1: Functionally tested
      </para>
     </listitem>
     <listitem>
      <para>
       EAL2: Structurally tested
      </para>
     </listitem>
     <listitem>
      <para>
       EAL3: Methodically tested and checked
      </para>
     </listitem>
     <listitem>
      <para>
       EAL4: Methodically designed, tested and reviewed
      </para>
     </listitem>
     <listitem>
      <para>
       EAL5: Semi-formally designed and tested
      </para>
     </listitem>
     <listitem>
      <para>
       EAL6: Semi-formally verified design and tested
      </para>
     </listitem>
     <listitem>
      <para>
       EAL7: Formally verified design and tested
      </para>
     </listitem>
    </itemizedlist>

    <para>
     While EAL1 only provides basic assurance for products to meet security
     requirements, EAL2 to 4 are medium assurance levels. EAL5-EAL7 describe
     medium-to-high and high assurance; EAL4 is expected to be the highest
     level of assurance that a product can have if it has not been designed
     from the start to achieve a higher level of assurance.
    </para>

    <para>
     Many commonly known General Purpose/Utility Computing operating systems
     have been awarded a Common Criteria certificate at EAL4. A "+" after
     the assurance level denotes an augmentation to the EAL, an addition
     that is useful for the articulation of security value, but formally not
     needed at the corresponding EAL.
    </para>

    <para>
     The &productname; version 8 was the first Linux system to achieve
     EAL3+ (Augmentation: Basic Flaw Remediation) in 2003; Version 9 of SLES
     was the first Linux based operating system to reach EAL4+ in 2004. More
     certifications and re-certifications have followed targeting SLES 9 and
     SLES 10-SP1, until the &productname; version Service Pack 2 was
     evaluated in 2011/2012.
    </para>

    <para>
     The Common Criteria evaluations inspect a specific configuration of the
     product in an evaluated setup. The <quote>Administrator's Guide</quote>
     is a document that comes with a Common Criteria certified product and
     describes the individual steps that need to be taken to install and
     configure the product to a state like it was evaluated.
    </para>

    <para>
     Very often, the evaluated configuration is used as a reference for the
     secure installation of the &productname;. It is however incorrect to
     understand the evaluated configuration as a hardened configuration: the
     removal of setuid bits and the prescription of administrative
     procedures after installation is there to reach a specific
     configuration that is sane, but this process is clearly insufficient
     for a hardening claim.
    </para>

    <para>
     Earlier versions of this document have contained a substantial part
     that links to Common Criteria evaluated configurations. For clarity and
     to avoid confusion these chapters have been removed.
    </para>

    <para>
     Instead, this guide recommends the lecture the documentation that comes
     with the Common Criteria certificate to understand the Common Criteria
     evaluation of &productname; in general, the security functions that
     are in place within the operating system and how these security
     functions are relevant for the mitigation of threats. The High Level
     Design documentation encompasses the design specifics of the
     &productname;: Authentication mechanisms, access controls, audit
     subsystem and system log files, to name a few of them. The accumulated
     knowledge contained in the documentation allows decision making for
     hardening purposes at an informed level&mdash;find it at
     <link xlink:href="http://www.suse.com/security/"/>.
    </para>

    <para>
     Apart from the valuable documentation that comes with the Common
     Criteria effort, the following manual pages may be of greater interest
     to the inclined reader:
    </para>

    <para>
     <quote>pam(8), pam(5)</quote>
    </para>

    <para>
     <quote>apparmor(7)</quote> and referred man pages
    </para>

    <para>
     <quote>rsyslogd(8), syslog(8), syslogd(8)</quote>
    </para>

    <para>
     <quote>fstab(5), mount(8), losetup(8), cryptsetup(8)</quote>
    </para>

    <para>
     <quote>haveged(8), random(4)</quote>
    </para>

    <para>
     <quote>ssh(1), sshd(8), ssh_config(5), sshd_config(5), ssh-agent(1),
     ssh-add(1), ssh-keygen(1)</quote>
    </para>

    <para>
     <quote>cron(1), crontab(5), at(1), atd(8)</quote>
    </para>

    <para>
     <quote>systemctl(1), daemon(7), systemd.unit(5), systemd.special(5),
     kernel-command-line(7), bootup(7), systemd.directives</quote>
    </para>

<!--
    <para>
     The purpose of this part is to provide security configuration and
     hardening recommendations for the &sle; operating system. The guidance
     provided here should be applicable to all versions of the product from
     9 on, however many of the components are available (generally) in
     version 10 and later. Much of the content in this guide has been
     presented elsewhere as part of the base configuration details used to
     achieve the Common Criteria EAL 4+ certification. Where it will differ
     is in describing the addition of services and applications outside of
     the EAL 4+ scope. These descriptions will still focus on the security
     and hardening of these additions. However, due to the strict nature of
     the Common Criteria certification some services, and certainly third-party
     applications, could not be included.
    </para>

    <para>
     Attempts will be made to point out any differences applicable between
     &productname; version variants. Recommended settings for the basic
     operating system are provided, as well as for many commonly used
     services that the system can host in a network environment. Also, as
     there are security measures that can only be applied (easily) during a
     fresh installation, this document will begin with guidance as if the
     system is a new install of &productname; 10 SP2 version. As of
     publication, &productname; 11 has just shipped. As Linux itself
     continues to grow, change, improve exponentially as a secure operating
     system, this guide attempts to cover many versions of
     &productname;. You may note some differences depending on the version
     you are using. If known, any thing presented here that is subject to
     change based on &productname; versioning will be noted. Any
     enhancements (pertaining to security) with the newest &productname; 11
     releases will also be called out.
    </para>

    <para>
     Audience: The guide is intended for partners, consultants and technical
     specialists with some decent Linux background and basic system
     administration experience. Readers are assumed to possess basic system
     administration skills for Unix-like systems, as well as some
     familiarity with &suse; documentation and administration
     conventions.
    </para>

    <para>
     Some instructions within this guide may be complex. Directions should
     be followed completely and with understanding of their effects in order
     to avoid serious adverse implications to the system and its security.
    </para>

    <para>
     Additional discussion, information and examples will be included at
     various points to help further the understanding of a given topic. For
     example, due to the complex nature of the Pluggable Authentication
     Modules and architecture, extra attention will be placed on its
     discussion so that the native flexibility can be understood. For a more
     exhaustive understanding of all of the security components it is highly
     recommended to read the individual man pages (even the <quote>see
     also</quote> page references at the bottom of an individual man page)
     and to seek other on-line resources or documentation. The next section
     describes guiding principles and assumptions used in the document. It
     will also describe some of the base services for an EAL 4+ build.
    </para>

    <para>
     Later sections will augment the security and hardening processes for
     other services and more generalized procedures, but these will be
     separated from the EAL 4+ content as they may not be qualified as part
     of the certified configuration. This does <emphasis>not</emphasis> mean
     that they are not <quote>secure</quote>, only that they were not part of
     the defined target of evaluation that garnered the Common Criteria
     certification.
    </para>
-->
   </sect1>
   <sect1 xml:id="sec-setup-for-eal-intro-principals">
    <title>Generic Guiding Principles</title>

    <para>
     The following guiding principles motivate much of the advice in this
     guide, and security processes in general, and should also influence any
     configuration decisions that are not explicitly covered.
    </para>

    <variablelist>
     <varlistentry>
      <term>Use Data Encryption Whenever Possible</term>
      <listitem>
       <para>
        Refer to the <xref linkend="pre-hardening-about"/> section of this
        guide. In <xref linkend="pre-hardening-about-assumptions"/>, the
        limitations of cryptography are briefly outlined.
       </para>
       <para>
        Be aware that cryptography is certainly useful, but only for the
        specific purposes that it is good for. It is not a generic recipe
        for better security in a system, its use may even impose additional
        risk on the system. Make informed decisions about the use of
        cryptography, and feel obliged to have a reason for your decisions,
        no matter if they are for or against cryptography. A false sense of
        security can be more harmful than the weakness itself.
<!--
        Data transmissions over wired or wireless networks are susceptible
        to passive monitoring. If it is possible to encrypt these
        transmissions, and practical, it should be done. Even if the realm
        of control is exclusively on a local network, encryption should
        still be considered and implemented, especially authentication data
        like ID and passwords. Networks of machines with &productname;
        can and should be configured such that no
        unencrypted authentication data is ever transmitted between
        machines.
    -->
        &productname; supports encryption for generic network connections
        (the <command>openssl</command> command,
        <command>stunnel</command>), for remote login
        (<command>openssh</command>, <command>man ssh(1)</command>), for
        generic file encryption (<command>gpg</command>), for entire file
        systems at block layer (<command>dm_crypt</command>,
        <command>cryptsetup</command>) and for VPN
        (<command>iipsec</command>, <command>openvpn</command>).
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Minimal Package Installation</term>
      <listitem>
<!--
       <para>
       The easiest way to avoid vulnerabilities in software is to
       <emphasis>not</emphasis> install it! &productname; allows for careful
       management of the set of software packages installed on a system via
       the &yast; Software Management interface and the RPM package manager.
       </para>
   -->
       <para>
        Generally, an RPM software package consists of the package's meta
        data that is written to the RPM database upon installation, the
        package's files and directories and scripts that are being executed
        before and after installation and removal.
       </para>
       <para>
        If the package does <emphasis>not</emphasis> contain
       </para>
       <orderedlist spacing="normal">
        <listitem>
         <para>
          setuid- or setgid bits on any of the installed files
         </para>
        </listitem>
        <listitem>
         <para>
          group- or world-writable files or directories
         </para>
        </listitem>
        <listitem>
         <para>
          a service that is activated upon installation/activated by
          default.
         </para>
        </listitem>
       </orderedlist>
       <para>
        then the said package generally does not impose any security risk to
        the system. Under the above condition, the package is merely a
        collection of files, and their use shall not be automatically
        assumed if you do not have any local users on your system. Since the
        installation of such packages does not have any influence on the
        security value of the system, uninstalling them shouldn't neither.
       </para>
       <para>
        However, a fairly simple reason to keep to a minimal set of packages
        in your installation is that something that is not present cannot
        get used. Binaries not installed cannot be executed.
       </para>
       <para>
        A straight forward way of keeping to a minimal set of packages
        begins with the installation of the system. You can start the
        installation of your system by deselecting all packages and then
        select only those that you want to use. As an example, the selection
        of the apache2-mod_perl package in &yast; would automatically
        cause all packages to be selected for installation that are needed
        for the Apache package to operate. Dependencies have often been
        artificially cut down to be able to handle the system's dependency
        tree more flexibly. You should be safe if you chose the minimal
        system, and build the dependency tree from there with your (leaf)
        package selection.
       </para>
<!--
       <orderedlist>
        <listitem>
         <para>
          A setuid program is a binary that runs with the privileges of the
          binary file owner and not the privileges of the user who executes
          the program.
          Packages that include setuid programs may provide local attackers
          a potential path to privilege escalation. For this reason, setuid
          bits should be avoided, or the setuid bits should be removed unless
          explicitly required (example: passwd(1)).
         </para>
        </listitem>
        <listitem>
         <para>
          Packages that include network services may give this opportunity
          to network-based attackers. There are only two packages in &productname;
          that contain or provide network services and that are active by
          default after the installation: the openssh package (sshd secure shell daemon)
          and the rpcbind package (rpcbind, RPC portmapper, needed for NFS client
          mounts).
         </para>
        </listitem>
        <listitem>
         <para>
          Packages that include programs which are predictably executed by
          local users (for example after graphical login) may provide opportunities
          for Trojan horses or other attack code to be run undetected.
         </para>
        </listitem>
        <listitem>
         <para>
          The number of software packages installed on a system can almost
          always be significantly pruned to include only the software for
          which there is an environmental or operational need.
         </para>
        </listitem>
       </orderedlist>
 -->
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Service Isolation&mdash;Run Different Services on Separate
      Systems</term>
      <listitem>
       <para>
        Whenever possible, a server should be dedicated to serving exactly
        one service or application. This limits the number of other services
        that could be compromised in the event an attacker can successfully
        exploit a software flaw in one service (assuming that flaw allows
        access to others).
       </para>
       <para>
        This point can lead to healthy and robust dialog on system sizing
        and even further to consolidation or virtualization. The intent with
        this guidance is to reduce the fault domain and risk where possible.
       </para>
       <para>
        The use of AppArmor for services that are provided on a system is an
        effective means of containment. Refer to the AppArmor documentation
        on your system to learn more. <command>man apparmor</command> is a
        good starting point.
       </para>
       <para>
        The use of virtualization technology with &kvm; or with &xen;
        is supported with the &productname; version &productnumber;.
        While virtualization is generally designed for server consolidation
        purposes, its usefulness for service isolation is another good
        argument. Be aware that the capability of the hypervisor to separate
        virtual machines is not higher or stronger than the Linux kernel's
        capability to separate processes and their address spaces. The
        granularity at which virtualization technology tackles separation
        may however come with its benefits, being resource-hungry and
        somewhat clumsy on the other hand.
       </para>
       <note>
        <para>
         Virtualization technology cannot match or substitute the separation
         strength that is given by running services on different physical
         machines!
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       System fingerprinting and backups
      </term>
      <listitem>
       <para>
        In the case of the suspicion of an attack against the system,
        nothing can provide more comfort than
       </para>
       <orderedlist spacing="normal">
        <listitem>
         <para>
          a backup
         </para>
        </listitem>
        <listitem>
         <para>
          a fingerprint of your system to detect modifications
         </para>
        </listitem>
        <listitem>
         <para>
          having done your homework.
         </para>
        </listitem>
       </orderedlist>
       <para>
        Several tools exist on &productname; &productnumber; which can
        be effectively used for the detection of unknown, but yet successful
        attacks. These tools come at the cost of relatively little
        configuration effort, but with the benefit of being able to actually
        know what has been changed in your system.
       </para>
       <para>
        In particular, the use of
        <systemitem class="resource">AIDE</systemitem> is strongly
        encouraged. <systemitem class="resource">AIDE</systemitem>, when run
        for initialization, creates a hash database of all files in the
        system that are listed in its configuration file. This allows to
        verify the integrity of all cataloged files at a later time.
       </para>
       <note>
        <para>
         You need to copy the hash database that AIDE creates to a place
         that is inaccessible for potential attackers. Otherwise, the
         attacker may modify the integrity database after planting a
         backdoor, thereby defeating the purpose of the integrity
         measurement.
        </para>
       </note>
       <note>
        <para>
         An attacker may have planted a backdoor in the kernel. This has an
         entire variety of consequences: Apart from being very hard to
         detect, the kernel-based backdoor can effectively remove all traces
         of the system compromise to the degree that system alterations are
         almost invisible. By consequence, an integrity check needs to be
         done from a rescue system (or any other system where an independent
         system runs, and the target system's file systems are mounted
         manually).
        </para>
       </note>
       <note>
        <para>
         Security is a lively process. Essentially, in this context, this
         means that the application of security updates invalidates the
         integrity database. <command>rpm</command> <option>-qlv
         packagename</option> lists the files that are contained in a
         package. Generally spoken, the RPM subsystem is very powerful with
         the data that it maintains, and that is accessible with the
         <option>--queryformat</option> command line option. A differential
         update of integrity database with the changed files becomes more
         manageable with some fine-grained usage of RPM.
        </para>
       </note>
       <para>
        A fast and directly accessible backup adds distinct confidence about
        the integrity of your system and can substitute an integrity check
        such as described above with AIDE. It is important, though, that the
        backup mechanism/solution has adequate versioning support so that
        you can trace changes in the system. As an example: The installation
        times of packages (<command>rpm</command> <option>-q</option>
        <option>--queryformat='%{INSTALLTIME} %{NAME}\n'</option>
        <replaceable>PACKAGE NAME</replaceable>) must correspond to the changed files in the backup log
        files.
       </para>
       <note>
        <para>
         Make it an integral part of your security routine to verify that
         your backups work.
        </para>
       </note>
<!--

       <para>
        and the <systemitem class="resource">seccheck</systemitem> cron script
        this guide recommends and discusses the use of
        iptables for host-based firewalling (although, in general, usage of
        the &susefirewall; and configuring it with &yast; is easier and
        actually uses iptables), &aa; or SELinux (preview in &productname;
        11) for protection against vulnerable services, and a logging and
        auditing (<systemitem class="daemon">syslog-ng</systemitem> and
        <systemitem
         class="daemon">auditd</systemitem>)
        infrastructure for detection of problems. Also included in
        &productname; are some security specific tools that improve the
        general security, monitoring and reporting capabilities. Tools such
        as ,
         and
        <systemitem class="resource">nessus</systemitem>.
       </para>
-->
      </listitem>
     </varlistentry>
    </variablelist>
   </sect1>
<!--
   <sect1 id="sec-setup-for-eal-intro-usage">
    <title>Guide Usage</title>

    <para>
     In using this guide you should keep the following points in mind:
    </para>

    <variablelist>
     <varlistentry>
      <term>Sectioning Order and Section Cohesion</term>
      <listitem>
       <para>
        Just a general caution, each section might build on information and
        recommendations discussed in prior sections. It is wise to read each
        section to gain complete understanding (if possible) as the
        instructions/recommendations should never be applied to a system
        blindly. Relevant examples and descriptions may occur after the
        instructions for a particular action.
       </para>
       <para>
        There are two distinct sections for the system set up, system-level
        installation/configuration and service-level
        installation/configuration. The system-level recommendations should
        be applied to all hosts; however service-level guidance may or may
        not be applicable. In the case of services, you will apply the
        guidance if the machine is either a server or a client for that
        service, and ensure that the service is disabled (or as previously
        mentioned, the package removed from the system) according to the
        instructions provided if the machine is neither a server nor a
        client.
       </para>
       <para>
        Also, as mentioned previously, the first sections describe an EAL 4+
        installation and setup. As additional services are added, they may
        be outside of the EAL 4+ base installation and configuration
        (<quote>certified target of evaluation</quote>) yet should not be
        considered 'non-secure'. Additional content depth, recommendations
        and examples will be included to provide for increased flexibility
        in securing and hardening system implementations.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Testing and Fingerprinting</term>
      <listitem>
       <para>
        Each component and recommendation should be tested. In the Delivery
        Guide, guidance was described for a prototype and lab environment.
        This is where testing should occur. Overall, any recommendations
        made here should always be tested in a non-production environment
        before deployment. This test environment should simulate the setup
        in which the system will be deployed as closely as possible.
       </para>
       <para>
        Fingerprinting is the process of storing a 'picture' of a system so
        it can be referenced and compared later to prove its integrity has
        not been compromised. Details will be given in this guide for the
        use of <systemitem class="resource">AIDE</systemitem> (the Advanced
        Intrusion Detection Environment). It is used as an example, but the
        fingerprinting guidance is sound. There are several third-party
        providers of system integrity and audit solutions. However,
        <systemitem class="resource">AIDE</systemitem> is included with
        &productname;, is OpenSource, and fairly easy to implement. In the
        event of a system breach, having a system fingerprint can prove
        invaluable when it comes to forensic analysis.
       </para>
       <note>
        <para>
         Note: Earlier versions of &productname;
         included<systemitem class="resource"> TripWire</systemitem>.
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Root Shell Environment Assumed</term>
      <listitem>
       <para>
        Most of the actions listed in this document are written with the
        assumption that they will be executed by the &rootuser; user running
        the /bin/bash shell. Any commands preceded with a hash mark (#)
        assume that the administrator will execute the commands as
        &rootuser;, in other words, they will be applied via the usage of
        sudo whenever possible (or use su to gain root privileges if sudo
        cannot be used).
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Reboots / Restarts</term>
      <listitem>
       <para>
        A system restart or reboot might be required after some actions in
        order to complete the reconfiguration of the system. Attempts will
        be made to mention when a reboot is explicitly required. However, in
        some cases, changes will not take effect until a reboot is
        performed. To ensure that changes are applied properly and
        to test functionality, it is always a good practice to reboot the
        system after applying a set of recommendations from this guide if a
        reboot is specified.There are only few system changes that
        require a reboot.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Hardware Preparation</term>
      <listitem>
       <para>
        If possible, BIOS passwords should be enabled. They are no
        guarantee, but are decent protection from low-level hardware
        configuration changes. Physical access must be controlled to ensure
        that the BIOS 'clear' hardware-jumpers could not be manipulated on
        the motherboard to bypass this protection.
       </para>
       <note>
        <para>
         The caveat to this is that a BIOS passwords can also be problematic
         or detrimental. If physical access/safety can be assured – you
         may opt to refrain from their usage. Booting from a forensics or
         rescue image may not be possible – if a system
         failure or break in – if a BIOS password preempts a boot.
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>System User Requirements</term>
      <listitem>
       <para>
        The assumption is made that the hardened host will reside in a
        friendly environment, one with cooperative and
        security-minded users. Users who will use the system responsibly to
        fulfill their tasks.
       </para>
       <para>
        Note that system availability is not addressed in this guide, and a
        malicious user could disable a server through resource exhaustion,
        denial-of-service attacks or like methods. High availability is
        addressed in other playbooks and can be at the server or service
        level. Of particular interest to many &productname; customers is the
        fact that high-availability tools are included and supported with
        the &productname; distributions (&productname; 10 and higher) either
        in the base distribution or included as add-ons.
       </para>
       <para>
        A set of baseline user account requirements are prescribed here in
        accordance with the EAL 4+ evaluation. These requirements are not
        exhaustive, yet provide a minimum level of trusted security for a
        user environment. Other requirements may be necessary depending on
        other policy constraints like SOX, auditing, etc.
       </para>
       <para>
        The requirements for users specifically include:
       </para>
       <variablelist>
        <varlistentry>
         <term>Prescribed Usage / Access Control</term>
         <listitem>
          <para>
           User accounts <emphasis>must</emphasis> be assigned only to those
           users with a need to access the data protected by
           the system. These users <emphasis>must</emphasis> be sufficiently
           trustworthy not to abuse those privileges. Again, the concept of
           domain control needs to be considered. Once data
           leaves a system the system has no control and cannot prevent that
           data from being intentionally redistributed to unauthorized third
           parties by an authorized user.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>Granted Trust</term>
         <listitem>
          <para>
           All users of the system <emphasis>must</emphasis> be sufficiently
           skilled to understand the security implications of their actions,
           and <emphasis>must</emphasis> understand and follow a base set of
           security guidelines. There is a baseline set of these
           requirements in a later section. Appropriate training
           <emphasis>must</emphasis> be available to ensure this. Further,
           best practices suggest some sort of User/Acceptable Use policy be
           maintained and logged. As part of many auditing standards, these
           types of policies are required to be signed and stored before
           access is granted to systems including host access, remote
           access, Internet access, etc.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
       <para>
        Normally it is part the responsibility of system administrators to
        verify that these requirements are met, and to be available to users
        if they need help in maintaining the security of their data.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect1>
   <sect1 id="sec-setup-for-eal-intro-host-security">
    <title>Host Security Functions</title>

    <para>
     This section summarizes the security functions that were covered by the
     EAL 4+ certified evaluation. Refer to the appropriate sections for
     information on configuring, using, and managing any of these functions.
     Further examples and details may be provided in later sections if that
     detail is granular and out-of-scope of the base evaluation. All section
     numbers referenced in this guide will correspond directly with those in
     the native <quote>Common Criteria EAL4+ Evaluated Configuration Guide
     for &suse; LINUX Enterprise Server on IBM Hardware</quote> for clarity,
     however this synchronization will not begin until section 2.2 (EAL 4+
     Installation). Also note that more detail (for clarity-sake) will be
     provided in this guide. When in doubt, refer to man pages, the Internet
     or check other references. There is a wealth of information available
     in the topic of *nix system security or computer
     security in general. A list of sources will be included
     in an appendix of this guide.
    </para>

    <sect2 id="sec-setup-for-eal-intro-host-security-auth">
     <title>Identification and Authentication</title>
     <variablelist>
      <varlistentry>
       <term>Pluggable Authentication Module (PAM)</term>
       <listitem>
        <para>
         <xref linkend="cha-setup-for-eal-securing-background-pam"/> will
         describe PAM and its usage. Extra details will be provided on PAM
         'stacks' and how to extend PAM to meet your usage requirements. PAM
         documentation is located on the system in
         <filename>/usr/share/doc/packages/pam/</filename> and you can check
         the pam man page with <command>man 8 pam</command>.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>loginRequired</term>
       <listitem>
        <para>
         The setup and configuration of system logins will be covered in
         <xref linkend="cha-setup-for-eal-securing-background-login-defs"/>.
         Also refer to the <literal>login</literal> and
         <literal>login.defs</literal> man pages for additional information.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>OpenSSH</term>
       <listitem>
        <para>
         OpenSSH is used by default in &productname; and its usage and setup
         are described in
         <xref
          linkend="cha-setup-for-eal-securing-background-ssh"/>
         and the <systemitem class="daemon">sshd</systemitem>,
         <command>ssh</command>, <literal>sshd_config</literal> man pages.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><systemitem class="daemon">vsftpd</systemitem>
       </term>
       <listitem>
        <para>
         The Very Secure FTP daemon is discussed in
         <xref
          linkend="cha-setup-for-eal-securing-background-ftp"/>
         and the <systemitem class="daemon">vsftpd</systemitem> and
         <literal>vsftpd.conf</literal> man pages. Usage of FTP may not be a
         service that is required in all host configurations, but it was
         part of the EAL 4+ configuration test.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><command>su</command>
       </term>
       <listitem>
        <para>
         The usage of the <command>su</command> command is prescribed
         <xref
          linkend="sec-setup-for-eal-operating-root"/> in.
         Further details can be found in the <command>su</command> man page.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </sect2>

    <sect2 id="sec-setup-for-eal-intro-host-security-audit">
     <title>Audit</title>
     <para>
      The audit subsystem has changed considerably from version to version
      of &productname; with updates being made at both the kernel and
      user-space. In recent updates to &productname; 10 SP2, more features
      and functionality has been introduced furthering the capabilities and
      configuration possibilities. The audit subsystem has distinct
      components for event detection and configuration, proxy handling, and
      reporting. Details will be covered in
      <xref
       linkend="sec-setup-for-eal-monitoring-audit"/>. You
      should also refer to the
      <systemitem class="daemon">auditd</systemitem> man page, whose
      <quote>SEE ALSO</quote> section points to the remaining audit
      subsystem man pages (for example <literal>auditd.conf</literal>,
      <systemitem class="daemon">audispd</systemitem>,
      <command>ausearch</command>, <command>aureport</command> and
      <command>auditctl</command>).
     </para>
     <para>
      Additional information will be covered in later chapters. The audit
      subsystem is very powerful and flexible. Many customers choose to
      purchase third-party products for audit event tracking and reporting
      when a detailed knowledge of the Linux Auditing System might have
      satisfied their needs with no additional costs.
     </para>
    </sect2>

    <sect2 id="sec-setup-for-eal-intro-host-security-access">
     <title>Discretionary Access Control</title>
     <para>
      Discretionary access control will be covered in
      <xref
       linkend="sec-setup-for-eal-user-acl"/>. Further, System V
      interprocesses communication objects (for example message queues, semaphore
      sets and shared memory segments) and security permissions and
      processes will be covered in
      <xref
       linkend="sec-setup-for-eal-operating-sysv-memory"/>.
     </para>
    </sect2>

    <sect2 id="sec-setup-for-eal-intro-host-security-object-reuse">
     <title>Object Reuse</title>
     <para>
      According to the &productname; High Level Design document, the kernel
      automatically ensures that new objects (disk files, memory, IPC) do
      not contain any traces of previous contents. The design has even been
      enhanced in the latest editions of &productname; to include further
      security enhancements in the kernel and user-space.
     </para>
     <para>
      Some examples include:
     </para>
     <variablelist>
      <varlistentry>
       <term>Randomization:</term>
       <listitem>
        <para>
         Better address space randomization is available for binaries
         compiled with PIE support (-fPIE). Randomizations include the
         address where the binary is mapped and the head start address.
         Stack and mmap areas are already randomized for all other binaries.
         Randomization is typically an anti-worm measure, not typically an
         anti-overflow solution.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>Fstack-protection</term>
       <listitem>
        <para>
         fstack-protector runtime stack overrun heuristics are now enabled
         for all packages in the SLE11 code base.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </sect2>

    <sect2 id="sec-setup-for-eal-intro-host-security-manage">
     <title>Security Management and System Protection</title>
     <para>
      These topics will be covered as complete chapters. General operation
      and system management will be covered in
      <xref
       linkend="cha-setup-for-eal-operating"/> and system
      monitoring, logging and audit will be handled in
      <xref
       linkend="cha-setup-for-eal-monitoring"/>.
     </para>
    </sect2>

    <sect2 id="sec-setup-for-eal-intro-host-security-communication">
     <title>Secure Communication</title>
     <variablelist>
      <varlistentry>
       <term>stunnel</term>
       <listitem>
        <para>
         Encryption methods and secure communications are expansive topics.
         The EAL 4+ evaluation guide, the usage of stunnel was described to
         provide a universal SSL tunnel for applications or services. In
         <xref
          linkend="sec-setup-for-eal-operating-stunnel"/> the
         specifics will be covered. See also the <literal>stunnel</literal>
         man page.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>SSH System Operation Procedures for Secure Systems</term>
       <listitem>
        <para>
         <xref
          linkend="cha-setup-for-eal-securing-background-ssh"/>
         will cover the configuration and usage of SSH with further details
         available within the <systemitem class="daemon">sshd</systemitem>,
         <command>ssh</command>, <literal>sshd_config</literal> man pages.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </sect2>
   </sect1>
   <sect1 id="sec-setup-for-eal-intro-events">
    <title>Overview of Security Relevant Events</title>

    <para>
     The audit subsystem is intended to be the central interface for
     collecting and viewing the record of security relevant events. Formerly
     called the Linux Audit Subsystem (LauS). It was developed by &suse; for
     &productname; 9 (Open Sourced and released under GPL) to attain a CC
     EAL 4 certificate. Since then it has been reworked, renamed simply
     audit, and adopted upstream into the kernel and is now common to the
     2.6 kernel.
    </para>

    <para>
     The events being monitored by default in the evaluated configuration
     include:
    </para>

    <itemizedlist>
     <listitem>
      <para>
       All authentication done through the PAM library, including the
       identity and location (where available) of the user and the success
       or failure result.
      </para>
     </listitem>
     <listitem>
      <para>
       Any use of <command>su</command> to change identity. All actions done
       as part of a su session are marked in the audit record along with the
       original user's login user ID.
      </para>
     </listitem>
     <listitem>
      <para>
       The addition, change or deletion of any users or groups.
      </para>
     </listitem>
     <listitem>
      <para>
       Any changes and/or change attempts to the contents of any security
       critical files.
      </para>
     </listitem>
     <listitem>
      <para>
       Any changes to the access permissions or ownership of any files or
       IPC (interprocess communication) objects.
      </para>
     </listitem>
     <listitem>
      <para>
       Changes to or new binding network ports and accepting connections.
      </para>
     </listitem>
    </itemizedlist>

    <para>
     Details will be covered in
     <xref linkend="cha-setup-for-eal-monitoring"/>.
    </para>
   </sect1>
   <sect1 id="sec-setup-for-eal-intro-events-sle11">

    <title>&productname; 11 Enhancements</title>

    <para>
     As previously mentioned in the section above, there have been some
     variations in capabilities as the &productname; operating system has
     matured from version to version, service pack to service pack in some
     instances. Even the included binaries themselves in &productname; 11
     have included security enhancements during compilation as improvements
     have been developed. Here are some examples:
    </para>

    <orderedlist>
     <listitem>
      <para>
       Randomization and Enhanced fstack-protection&mdash;see
       <xref
        linkend="sec-setup-for-eal-intro-host-security-object-reuse"/>.
      </para>
     </listitem>
     <listitem>
      <para>
       <literal>D_FORTIFY_SOURCE</literal> flag enabled at compilation time
       – provides compile-time and runtime based overflow protection and
       format string checking. This was included in SLE 10 as well.
      </para>
     </listitem>
     <listitem>
      <para>
       A new &yast; module for Audit. This will ease the setup and
       configuration of the audit modules as part of the Linux Audit
       Framework (CAPP/EAL capable in SLE10SP2 and certified as of
       SLE10SP1).
      </para>
     </listitem>
     <listitem>
      <para>
       Several &aa; enhancements.
      </para>
     </listitem>
     <listitem>
      <para>
       PolicyKit – this allows for more fine-grained access controls for
       administration access. Enables limited/reduced root access for some
       configuration tasks.
      </para>
     </listitem>
     <listitem>
      <para>
       Additional code and design reviews/improvements by the &suse;
       Security Team – securing new features.
      </para>
     </listitem>
    </orderedlist>
   </sect1>

-->
  </chapter>
 </part>
 <part xml:id="part-sec-prot">
  <title>General System Security and Service Protection Methods</title>
  <info/>
  <chapter xml:id="cha-sec-prot-intro">
   <title>Introduction</title>
   <info/>
   <para>
    In <xref linkend="part-setup-for-eal"/> we mentioned the Common Criteria
    EAL 4+ certified installation and setup that was sponsored by IBM for a
    select subset of hardware. This certified build is a great first step
    for customers wanting to build a secure and hardened base system, yet
    might not address all of the services and software specifics that many
    customers would be interested in.
   </para>
   <para>
    This next part will present a more general view and give recommendations
    and guidance for &productname; system security. Some topics may seem
    repeated here (from the previous part) yet the context is very
    different. More detail will be provided in some sections and certainly
    some more general examples for a greater number of services.
   </para>
  </chapter>
  <chapter xml:id="cha-sec-prot-general">
<!--taroth 2014-03-18: disabling section completely since systemd does not really
    have the concept of  disabling stuff in a specific runlevel/target-->
<!--<sect1 id="sec-sec-prot-general-disable-services">
    <title>Disabling Runlevel Services</title>

    <para>
     One of the most important tasks is the removal of any network services
     from a systems start-up (init) process that are not needed. On &suse;
     systems you can list all services which are started at boot time using
     the following command:
    </para>

    <screen>systemctl -t service list-units</screen>

    <para>
     This command will list any service that has been enabled to start at
     any of the 7 init levels. 0 through 6 and also S (single user). Notice
     there may be quite a few services enabled on a given host, but many
     runlevel services (Stand-Alone Services) might not be for network
     related services. There are some services that are only run during the
     boot process. Make sure <emphasis>not</emphasis> to disable any runlevel
     services that are needed by the system to run smoothly. For example, many
     of these type of services will begin with a prefix of
     <literal>boot</literal>.
    </para>

    <para>
     Some examples of Runlevel System Services which you may or may not want
     to enable (check &yast; <guimenu>System Services (Runlevels)</guimenu>
     module for a complete list):
    </para>

    <table>
     <title><systemitem class="service">init</systemitem> Services and their Descriptions - Examples</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>
         <para>
          Service Name
         </para>
        </entry>
        <entry>
         <para>
          Description of Service
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          syslog
         </para>
        </entry>
        <entry>
         <para>
          important for syslog services
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          netfs
         </para>
        </entry>
        <entry>
         <para>
          needed only if there are NFS shares that should be mounted at boot
          time
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          network
         </para>
        </entry>
        <entry>
         <para>
          important for starting network interfaces (for example eth0, eth1,
          bonding,...)
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          random
         </para>
        </entry>
        <entry>
         <para>
          used for the system entropy pool
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          atd
         </para>
        </entry>
        <entry>
         <para>
          needed if the at(1) service is used instead of cron
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          apmd
         </para>
        </entry>
        <entry>
         <para>
          Advanced Power Management (APM) daemon is used for laptops and
          some desktops
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          iptables
         </para>
        </entry>
        <entry>
         <para>
          needed if Netfilter (iptables) Firewall is being used
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          ip6tables
         </para>
        </entry>
        <entry>
         <para>
          needed if ip6tables Firewall is being used
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          pcmcia
         </para>
        </entry>
        <entry>
         <para>
          not needed on servers - needed for laptops
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          irqbalance
         </para>
        </entry>
        <entry>
         <orderedlist>
          <listitem>
           <para>
            important for distributing interrupts across all CPUs
           </para>
          </listitem>
         </orderedlist>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          sendmail
         </para>
        </entry>
        <entry>
         <para>
          needed if Sendmail is used - Procmail should be used which is more
          secure
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autofs
         </para>
        </entry>
        <entry>
         <para>
          needed if automounter is used - production applications should not
          be dependent on automounter
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          sshd
         </para>
        </entry>
        <entry>
         <para>
          important for logins via SSH
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          portmap
         </para>
        </entry>
        <entry>
         <para>
          needed if for example NFS is being used
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          nfslock
         </para>
        </entry>
        <entry>
         <para>
          needed if NFS shares are mounted
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          nfs
         </para>
        </entry>
        <entry>
         <orderedlist>
          <listitem>
           <para>
            needed if server runs the NFS server
           </para>
          </listitem>
         </orderedlist>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          mdmonitor
         </para>
        </entry>
        <entry>
         <para>
          needed only if software RAID is being used
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          crond
         </para>
        </entry>
        <entry>
         <para>
          important for running cron jobs
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          xinetd
         </para>
        </entry>
        <entry>
         <para>
          needed if xinetd services are being used, see /etc/xinetd.d/ for
          list of services
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          cups
         </para>
        </entry>
        <entry>
         <para>
          needed if CUPS is used for the printing system
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          rhnsd
         </para>
        </entry>
        <entry>
         <para>
          needed if server should connect to RHN to check for software
          updates etc.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          sysstat
         </para>
        </entry>
        <entry>
         <para>
          needed to reset system statistics logs
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          audit
         </para>
        </entry>
        <entry>
         <para>
          needed only if Linux Audit Subsystem (LAuS) should run for
          collecting system call audit records
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          psacct
         </para>
        </entry>
        <entry>
         <para>
          needed only if kernel process accounting information is needed
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          smartd
         </para>
        </entry>
        <entry>
         <para>
          important for monitoring disk problems if hard disks support SMART
          technology
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          netdump
         </para>
        </entry>
        <entry>
         <orderedlist>
          <listitem>
           <para>
            important if kernel oops data and memory dumps should be sent to
            a Netdump server for server crashes
           </para>
          </listitem>
         </orderedlist>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>

    <para>
     The init (start/stop) scripts of all the runlevel services are found in
     the <filename>/etc/init.d</filename> directory. For example, if you
     don't know what the atd service does, go to
     <filename>/etc/init.d</filename> and open the file
     <filename>atd</filename>. And in the script look for lines that start
     programs. In the <systemitem class="daemon">atd</systemitem> script the
     <literal>startproc $ATD_BIN $ATD_ARGS</literal> line starts the
     process <systemitem class="daemon">atd</systemitem>. Now
     having the name of the program that is started by this service, you can
     check the online pages of <systemitem class="daemon">atd</systemitem>
     by running <command>man atd</command>. This will help you to find out
     more about a system service.
    </para>

    <para>
     To permanently disable for example the service nfs, run:
    </para>

<screen>&prompt.root;systemctl disable nfs</screen>

    <para>
     To immediately disable the service nfs, execute:
    </para>
<screen>&prompt.root;systemctl stop nfs</screen>

   </sect1>-->
<!--taroth 2014-02-13: FIXME: systemd, commenting for now, as this section
    needs rewrite (/etc/inittab and runlevels no longer exist):

   <sect1 id="sec-sec-prot-general-inittab">
    <title>Reviewing Inittab and Boot Scripts</title>
<remark></remark>
    <para>
     The inittab file located in <filename>/etc/inittab</filename> contains
     a running <quote>tab</quote> (table) or list of which processes are to
     be started at bootup during normal system operation. Some third-party
     vendors will install an entry there to ensure the initialization and
     start-up of dependent services. For example Oracle places cluster services
     start-up entries here to ensure they start at boot time. It is
     important to review this file and verify all entries (in the
     <filename>/etc/inittab</filename>) are appropriate in your environment.
    </para>

    <para>
     It is <emphasis>highly</emphasis> recommended to trap the <keycombo>
     <keycap function="control"/> <keycap function="alt"/>
     <keycap function="delete"/> </keycombo> key sequence to
     prevent accidental reboots. The following command uses the sed string
     processor to find the <literal>ca::ctrlaltdel</literal> string and add
     a <literal>#</literal> symbol to the front of it. This will comment-out
     the whole line – thereby disabling the entry:
    </para>

<screen>sed -i 's/\(ca::ctrlaltdel:\)/#\1/g' /etc/inittab</screen>

    <para>
     It is generally recommended to make the default runlevel of a
     production system set to <literal>3</literal> - which means, multiuser
     <emphasis>with</emphasis> networking but <emphasis>without</emphasis>
     graphics. In other words – the X subsystem should not be running. It
     uses server compute cycles and is generally not needed. In this case,
     it should be removed – if not used. Setting the default runlevel is
     normally done via &yast; at time of installation – or by using the
     <guimenu>System Services (Runlevel)</guimenu> tool in &yast;. This tool
     will set the inittab for you, or you can make the modification manually
     (ensuring <literal>id:3:initdefault</literal> is in the inittab):
    </para>

<screen>&prompt.root;grep ':initdefault' /etc/inittab
id:3:initdefault:</screen>

    <para>
     To have changes in <filename>/etc/inittab</filename> become effective
     immediately, you can tell init to re-examine the
     inititab like this:
    </para>

<screen>telinit q</screen>

    <para>
     Reviewing the System Services tool in &yast; is a great way to
     determine what will be started on a system. The <guimenu>System
     Services (Runlevel)</guimenu> tool has a normal and
     <guimenu>Expert</guimenu> mode. Switch to <guimenu>Expert</guimenu> to
     see some of the boot services. These can be important for things like
     multipath, etc.
    </para>
   </sect1>
   <sect1 id="sec-sec-prot-general-restrict-access">
    <title>Restricting System Access from Servers and Networks</title>

    <para>
     Normally a firewall is used to protect a server from other servers and
     networks – or to protect an environment from the server itself.
     However, you can also protect a server or more accurately, an
     individual service using a TCP wrapper (which is a function of
     <systemitem
      class="daemon">xinetd</systemitem> – already
     discussed above).
    </para>

    <para>
     The <systemitem class="daemon">xinetd</systemitem> super server that
     comes with &productname; provides a built-in TCP wrapper functionality.
     This can be used to specifically define network services to accept or
     deny incoming connections from specified hosts and networks. The TCP
     wrappers implements access control through the use of two files,
     <filename>/etc/hosts.allow</filename> and
     <filename>/etc/hosts.deny</filename>. Note that the
     <filename>hosts.allow</filename> file takes precedence over the
     <filename>hosts.deny</filename> file. And you should change the
     permissions on the two configuration files since they are both world
     readable. An important difference between the security provided by a
     TCP wrapper versus the use of netfilter (iptables) is that netfilter
     works at the network layer (layer 2) and can provide security before
     the traffic goes up the stack to the application layers. The trade-off
     however is that a TCP wrapper allows for the use of a
     banner - or a welcome message (per service) and some
     other things. It is best to know what an organization requires – so
     the best recommendation can be made.
    </para>

    <para>
     Generally, a best-practice strategy is to block all incoming requests
     by default, and allow only specific hosts or networks to connect.
     This is commonly called <quote>deny all, permit few</quote>. To
     use this strategy, edit the
     <filename>/etc/hosts.deny</filename> file and add the following line:
    </para>

<screen>ALL: ALL</screen>

    <para>
     Then, to accept incoming SSH connections from specific hosts
     (for example nodes <systemitem class="systemname">sles-ha1</systemitem>,
     <systemitem class="systemname">sles-ha2</systemitem> and
     <systemitem
      class="systemname">sles-ha3</systemitem>, modify the
     <filename>/etc/hosts.allow</filename> file and add the following line:
    </para>

<screen>sshd: sles-ha1 sles-ha2 sles-ha3</screen>

    <para>
     To accept incoming SSH connections from all servers from a specific
     network, add the name of the subnet to
     <filename>/etc/hosts.allow</filename>. Adjust the entry like this:
    </para>

<screen>sshd: sles-ha1 sles-ha2 sles-ha3 .network.&exampledomain;</screen>

    <para>
     Remember, each service can be defined separately. To accept
     incoming portmap connections from the host at IP address
     <literal>192.168.0.1</literal> and from the subnet
     <literal>192.168.5</literal>, the following modification can be made to
     <filename>/etc/hosts.allow</filename>:
    </para>

<screen>portmap: 192.168.0.1 192.168.5.</screen>

    <para>
     To accept connections from all servers on the subnet named
     .network.&exampledomain; but not from host
     badhost.network.&exampledomain;, add the following line to the
     <filename>/etc/hosts.allow</filename> file:
    </para>

<screen>ALL: .network.&exampledomain; EXCEPT badhost.network.&exampledomain;</screen>

    <para>
     Here are other examples that show some features of TCP wrapper: If you
     just want to restrict ssh connections without configuring or using
     <filename>/etc/hosts.deny</filename>, you can add the following entries
     to <filename>/etc/hosts.allow</filename>:
    </para>

<screen>sshd: rac1cluster rac2cluster rac3cluster
sshd: ALL: DENY</screen>

    <para>
     The version of TCP wrapper that comes with &productname; also supports
     the extended options documented in the <literal>hosts_options</literal>
     man page. Here is an example how an additional program can be spawned
     in for example the <filename>/etc/hosts.allow</filename> file:
    </para>

<screen>sshd: ALL : spawn echo "Login from %c to %s" | mail -s "Login Info for %s" log@loghost</screen>

    <para>
     For information on the % expansions, see <command>man
     hosts_access</command>.
    </para>

    <para>
     The TCP wrapper is quite flexible. And
     <systemitem class="daemon">xinetd</systemitem> provides its own set of
     host-based and time-based access control functions. You can even tell
     <systemitem class="daemon">xinetd</systemitem> to limit the rate of
     incoming connections. Various documentations about the
     <systemitem
      class="daemon">xinetd</systemitem> super daemon on
     the Internet and should be considered recommended reading. Just
     remember the trade-offs between a TCP wrapper and the &susefirewall;
     (netfilter/iptables).
    </para>
   </sect1>
   <sect1 id="sec-sec-prot-general-ssh">
    <title>Securing SSH</title>

    <para>
     Many network services like telnet, rlogin, and rsh are vulnerable to
     eavesdropping which is one of several reasons why SSH should be used
     instead. The &productname; default configuration for SSH meets the
     security requirements for many environments. However, there are a few
     parameters in <filename>/etc/ssh/sshd_config</filename> that you may
     want to change.
    </para>

    <para>
     The section on Restricting System Access from Servers and Networks
     shows how direct logins can be disabled for shared and system accounts
     including root. But it's prudent to disable direct root logins at the
     SSH level as well.
    </para>

<screen>PermitRootLogin no</screen>

    <para>
     Also ensure to have privilege separation enabled where the daemon is
     split into two parts. With privilege separation a small part of the
     code runs as root and the rest of the code runs in a chroot jail
     environment.
    </para>

<screen>UsePrivilegeSeparation yes</screen>

    <para>
     Since SSH protocol version 1 is not as secure you should limit the
     protocol to version 2 only:
    </para>

<screen>Protocol 2</screen>

    <para>
     You may also want to prevent SSH from setting up TCP port and X11
     forwarding if you don't need it:
    </para>

<screen>AllowTcpForwarding no
X11Forwarding no</screen>

    <para>
     Ensure the StrictModes directive is enabled which checks file
     permissions and ownerships of some important files in the user's home
     directory like <filename>~/.ssh</filename>,
     <filename>~/.ssh/authorized_keys</filename> etc. If any checks fail,
     the user won't be able to login.
    </para>

<screen>StrictModes yes</screen>

    <para>
     Ensure that all host-based authentications are disabled. These methods
     should be avoided as primary authentication.
    </para>

<screen>IgnoreRhosts yes
HostbasedAuthentication no
RhostsRSAAuthentication no</screen>

    <para>
     Disable sftp if it's not needed (by commenting it out with the
     <literal>#</literal>):
    </para>

<screen>#Subsystem sftp /usr/lib/misc/sftp-server</screen>

    <para>
     After changing any directives make sure to restart the
     <systemitem
      class="daemon">sshd</systemitem> daemon:
    </para>

<screen>/etc/init.d/sshd restart</screen>
   </sect1>-->
<!-- ============================================================== -->
<!-- ============================================================== -->
<!--taroth 2014-03-19: systemd - commenting because according to fcrozat
    this hack is needed anymore, booting in single mode in
    systemd requires root password
    <sect1 id="sec-sec-prot-general-single-user">
    <title>Single User Mode Password for &rootuser;</title>

    <para>
     &suse; includes the following entry in the
     <filename>/etc/inittab</filename> file to ensure that a root password
     is required for Single User Mode logins:
    </para>

<screen>~~:S:respawn:/sbin/sulogin</screen>

    <note>
     <para>
      This works well and will even restart the sulogin if terminated, but
      it can be easily circumvented!
     </para>
    </note>

    <para>
     The &grub; prompt can accept parameters allowing the execution of an
     alternate program – like the Bash shell (for example
     <option>init=/bin/bash</option>). This will place you at a root shell
     prompt without a password. This further enhances the need to password
     protect the &grub; boot loader.
<!-\- (as discussed in
     <xref linkend="cha-setup-for-eal-securing-background-boot"/>) -\->
     </para>
   </sect1>-->
   <title>Linux Security in General</title>
   <info/>
   <para>
    This portion of the guide will only give basic recommendations instead
    of strict rules. The procedures and examples here should give you the
    ability to apply security enhancement techniques to a wider variety of
    server-based services and programs.
   </para>
   <para>
    Some subjects of this chapter have been discussed before. However, you
    will find more details and explanations in this chapter. Selected
    general topics are:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      Physical Security – Protection of the server from environmental
      threats (people, places, things).
     </para>
    </listitem>
    <listitem>
     <para>
      Security Policies and Procedures – Server life cycle management,
      disk/media reclamation, backup and archive security.
     </para>
    </listitem>
    <listitem>
     <para>
      Systems Monitoring – Procedures around event
      notification/management.
     </para>
    </listitem>
    <listitem>
     <para>
      Systems Automation – Mechanisms and/or procedures for automatic
      security measures. Heuristics, account control, security reporting and
      remediation, automated shutdown, etc.
     </para>
    </listitem>
    <listitem>
     <para>
      Systems Management – Methods to obtaining packages, verification and
      signing keys, patching procedures and recommendations.
     </para>
    </listitem>
    <listitem>
     <para>
      Securing Network – Addition programs, ports and service wrappers –
      iptables, tcpwrappers, services.
     </para>
    </listitem>
    <listitem>
     <para>
      Remote Access – extra SSH information and key federation. CA
      integration.
     </para>
    </listitem>
    <listitem>
     <para>
      Common Services – mail, NFS and automount.
     </para>
    </listitem>
    <listitem>
     <para>
      Securing the kernel and Init Process – parameters, systemd targets,
      and boot scripts.
     </para>
    </listitem>
    <listitem>
     <para>
      Access Control – user/groups/permissions.
     </para>
    </listitem>
    <listitem>
     <para>
      Password Security and Warnings – Proper setup of passwords, banners
      and <systemitem class="daemon">xinetd</systemitem>.
     </para>
    </listitem>
    <listitem>
     <para>
      Miscellaneous Security – Assorted security settings and miscellany.
     </para>
    </listitem>
    <listitem>
     <para>
      Resources – Web links, documentation and example references, howtos
      and general information, product links.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    The sections will again be organized by a topical hierarchy for
    continuity-sake. Refer to the main table of contents for easy reference.
   </para>
   <sect1 xml:id="sec-sec-prot-general-physical">
    <title>Physical Security</title>

    <para>
     Physical security should be one of the utmost concerns. Linux
     production servers should be in locked data centers where only people
     have access that have passed security checks. Depending on the
     environment and circumstances, you can also consider boot loader
     passwords.
    </para>

    <para>
     Additionally, consider questions like:
    </para>

    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       Who has direct physical access to the host?
      </para>
     </listitem>
     <listitem>
      <para>
       Of those that do, should they?
      </para>
     </listitem>
     <listitem>
      <para>
       Can the host be protected from tampering and should it be?
      </para>
     </listitem>
    </itemizedlist>

    <para>
     The amount of physical security needed on a particular system depends
     on the situation, and can also vary widely by available funds.
    </para>

    <sect2 xml:id="sec-sec-prot-general-physical-locks">
     <title>System Locks</title>
     <para>
      Most server racks in data centers include a locking feature. Usually
      this will be a hasp/cylinder lock on the front of the rack that allows
      you to turn an included key to a locked or unlocked position –
      granting or denying entry. Cage locks can help prevent someone from
      tampering or stealing devices/media from the servers, or opening
      the cases and directly manipulating/sabotaging the hardware.
      Preventing system reboots or the booting from alternate devices is
      also important (for example CD/DVDs/USB drives/etc.).
     </para>
     <para>
      Some servers also have case locks. These locks can do different things
      according to the designs of the system vendor and construction. Many
      systems are designed to self-disable if attempts are made to open the
      system without unlocking. Others have device covers that will not let
      you plug in or unplug keyboards or mice. While locks are sometimes a
      useful feature, they are usually lower quality and easily defeated by
      attackers with ill intent.
     </para>
    </sect2>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-bios">
    <title>Locking Down the BIOS</title>

    <tip>
     <title>Secure Boot</title>
     <para>
      This section describes only basic methods to secure the boot process.
      To find out more about UEFI and the secure boot feature, see
      <xref linkend="sec-uefi-secboot"/>.
     </para>
    </tip>

    <para>
     The BIOS (Basic Input/Output System) or its successor UEFI (Unified
     Extensible Firmware Interface) is the lowest level of
     software/firmware that dictates system configuration and low-level
     hardware. When this document references the BIOS, it usually means
     BIOS and/or UEFI. &grub; and other Linux boot loaders access the
     BIOS to determine how to boot the host. Other hardware types
     (IBM &power;/&zseries;) that run Linux also have low-level
     software/firmware. Typically the BIOS can be configured to help prevent
     attackers from being able to reboot the host and manipulate the system.
    </para>

    <para>
     Most BIOS varieties allow the setting of a boot password. While this
     does not provide a high level of security (a BIOS can be reset, removed
     or modified – assuming case access), it can be another deterrent.
    </para>

    <para>
     Many BIOS capabilities have other various security settings –
     checking with the system vendor, the system documentation or examine
     the BIOS during a system boot.
    </para>

    <important>
     <title>Booting when a BIOS Password is Set</title>
     <para>
      If a system host has been set up with a boot password, the host will
      not boot up unattended (for example a system reboot, power failure,
      etc.). This is a trade-off.
     </para>
    </important>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-bootloader">
    <title>Security via the Boot Loaders</title>

    <para>
     The Linux boot loader &grub;, which is used by default in
     &productname;, can have a boot passwords set. It also provides a
     password feature, so that only administrators can start the interactive
     operations (for example editing menu entries and entering the command
     line interface). If a password is specified, &grub; will disallow
     any interactive control until you press the key <keycap>C</keycap> and
     <keycap>E</keycap> and enter a correct password.
    </para>

    <para>
     You can refer to the &grub; man page for examples.
    </para>

    <para>
     It is very important to keep in mind that when setting these passwords
     they will need to be remembered! Also, enabling these passwords might
     merely slow an intrusion, not necessarily prevent it. Again, someone
     could boot from a removable device, and mount your root partition. If
     you are using BIOS-level security and a boot loader, it is a good
     practice to disable the ability to boot from removable devices in your
     computer's BIOS, and then also password-protecting the BIOS itself.
    </para>

    <para>
     Also keep in mind that the boot loader configuration files will need to
     be protected by changing their mode to <literal>600</literal>
     (read/write for &rootuser; only), or others will be able to read
     your passwords or hashes!
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-seccheck">
    <title>Verifying Security Action with <command>seccheck</command></title>

    <para>
     It is highly recommended to have scripts in place which can verify that
     security actions or procedures have been run. Even the best systems
     administrators can make errors or forget something. If you have a small
     or large Linux installation or environment, you should consider the use
     of the <command>seccheck</command> scripts.
    </para>

    <para>
     <command>seccheck</command> is the &suse; Security Checker. It is a
     set of several shell scripts designed to check the local security of
     the system on a regular basis. There are three main scripts that are
     executed at different time intervals. They are
     <literal>security-daily,</literal> <literal>security-weekly</literal>
     and <literal>security-monthly</literal>. If <command>seccheck</command>
     is not installed on your system, install it with <command>sudo zypper
     in seccheck</command>. These scripts all have schedule entries that get
     placed in cron that determine when they run. Although cron scheduling
     is the default behavior, this can be controlled via configuration
     settings (see next section). The daily script runs at midnight, and if
     changes are detected since the last run (the night before), an e-mail
     noting the differences will be sent. The weekly script runs every
     Monday at 1:00 am, and only if changes to the last run (the week
     before) are found, a mail with the differences will be sent. The
     monthly script runs every on every 1st of the month and sends the full
     last daily and weekly report via e-mail.
    </para>

    <sect2 xml:id="sec-sec-prot-general-seccheck-config">
     <title>Seccheck Configuration</title>
     <para>
      Note that you can change the receiver of the seccheck mails from root
      to anyone else if you add an entry like this one to
      <filename>/etc/sysconfig/seccheck</filename>:
     </para>
<screen>SECCHK_USER="firewall" # exchange firewall is an admin user's account name</screen>
     <para>
      Also note that the <envar>START_SECCHK</envar> variable from
      <filename>/etc/sysconfig/seccheck</filename> controls whether the
      security check will be run from cron. (It is ignored if you call
      <command>security-control</command> manually.)
     </para>
     <para>
      The following daily checks are done:
     </para>
     <informaltable>
      <tgroup cols="2">
       <colspec colname="c1"/>
       <colspec colname="c2"/>
       <tbody>
        <row>
         <entry>
          <para>
           <filename>/etc/passwd</filename> check
          </para>
         </entry>
         <entry>
          <para>
           length/number/contents of fields, accounts with same UID accounts
           with UID/GID of 0 or 1 beside root and bin
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <filename>/etc/shadow</filename> check
          </para>
         </entry>
         <entry>
          <para>
           length/number/contents of fields, accounts with no password
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <filename>/etc/group</filename> check
          </para>
         </entry>
         <entry>
          <para>
           length/number/contents of fields
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           user root checks
          </para>
         </entry>
         <entry>
          <para>
           secure umask and <envar>PATH</envar>
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <filename>/etc/ftpusers</filename>
          </para>
         </entry>
         <entry>
          <para>
           checks if important system users are put there
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <filename>/etc/aliases</filename>
          </para>
         </entry>
         <entry>
          <para>
           checks for mail aliases which execute programs
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <filename>.rhosts</filename> check
          </para>
         </entry>
         <entry>
          <para>
           checks if users' <filename>.rhosts</filename> file contain +
           signs
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           homedirectory
          </para>
         </entry>
         <entry>
          <para>
           checks if home directories are writable or owned by someone else
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           dot-files check
          </para>
         </entry>
         <entry>
          <para>
           checks many dot-files in the home directories if they are
           writable or owned by someone else
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           mailbox check
          </para>
         </entry>
         <entry>
          <para>
           checks if user mailboxes are owned by user and are readable
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           NFS export check
          </para>
         </entry>
         <entry>
          <para>
           exports should not be exported globally
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           NFS import check
          </para>
         </entry>
         <entry>
          <para>
           NFS mounts should have the <option>nosuid</option> option set
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           promisc check
          </para>
         </entry>
         <entry>
          <para>
           checks if network cards are in promiscuous mode
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           list modules
          </para>
         </entry>
         <entry>
          <para>
           lists loaded modules
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           list sockets
          </para>
         </entry>
         <entry>
          <para>
           lists open ports
          </para>
         </entry>
        </row>
        <row>
         <entry namest="c1" nameend="c2">
          <para>
           Weekly Checks are as follows:
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           password check
          </para>
         </entry>
         <entry>
          <para>
           runs <command>john</command> to crack the password file, user
           will get an e-mail notice to change his password
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           RPM md5 check
          </para>
         </entry>
         <entry>
          <para>
           checks for changed files via RPM's MD5 checksum feature
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           suid/sgid check
          </para>
         </entry>
         <entry>
          <para>
           lists all SUID and SGID files
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           exec group write
          </para>
         </entry>
         <entry>
          <para>
           lists all executables which are group/world-writable
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           writable check
          </para>
         </entry>
         <entry>
          <para>
           lists all files which are world-writable (including executables)
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           device check
          </para>
         </entry>
         <entry>
          <para>
           lists all devices
          </para>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
<!-- 2014-08-29 tbazant: commenting out as requested
     <important>
      <para>
       For the weekly seccheck password check to work, the <quote>john the
       ripper</quote> package needs to be installed whitch could be considered
       a security risk in itself. It's important to understand the operation
       of john. Normally it will be used only to send notice of weak
       <remark>krahmer, vpereira 2014-08-14: John should never be installed on a productions system. This advice should be removed</remark>
       passwords to users as an e-mail as part of the weekly seccheck cron
       job. Since <quote>john</quote> would need to be installed separately,
       it is recommended to weigh the benefits and risks before doing so.
      </para>
     </important>
     -->
     <para>
      Additional monthly checks are also run, however the key difference is
      mainly that the monthly file is not a diff like the daily/weekly ones
      but the full reports in one file.
     </para>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-seccheck-autologout">
     <title>Automatic Logout</title>
     <para>
      The <systemitem>seccheck</systemitem> package provides an automatic
      logout feature. It is a script that runs every 10 minutes and checks
      both remote or local terminal sessions for inactivity, and terminates
      them if an idle time is exceeded.
     </para>
     <para>
      You can configure the functionality in the
      <filename>/etc/security/autologout.conf</filename> file. Parameters
      include default idle and logout delay times, and the configuration for
      limiting maximum idle times specific to users, groups, TTY devices and
      SSH sessions. <filename>/etc/security/autologout.conf</filename> also
      includes several configuration examples.
     </para>
     <tip>
      <para>
       The automatic logout feature is not enabled by default. To enable it,
       edit <filename>/etc/cron.d/autologout</filename> and uncomment the
       example cron line.
      </para>
     </tip>
    </sect2>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-retiring">
    <title>Retiring Linux Servers with Sensitive Data</title>

    <para>
<!-- As mentioned in <xref linkend="sec-setup-for-eal-operating-mount"/> -->
     Security policies usually contain some procedures for the treatment of
     storage media that is going to be retired or disposed of. Disk and
     media wipe procedures are frequently prescribed as is complete
     destruction of the media. You can find several free tools on the
     Internet. A search of <quote>dod disk wipe utility</quote> will yield
     several variants. To retire servers with sensitive data, it is
     important to ensure that data cannot be recovered from the hard disks.
     To ensure that all traces of data are removed, a wipe
     utility&mdash;such as <command>scrub</command>&mdash;can be used.
     Many wipe utilities overwrite the data several times. This
     assures that even sophisticated methods are not able to retrieve
     any parts of the wiped data. Some tools can even be operated from a
     bootable removable device and remove data according to the U.S.
     Department of Defense (DoD) standards. Note that many government
     agencies specify their own standards for data security. Some
     standards are stronger than others, yet may require more time to
     implement.
    </para>

    <important>
     <title>Wiping Wear Leveling Devices</title>
     <para>
      Some devices, like SSDs, use wear leveling and do not necessarily
      write new data in the same physical locations. Such devices
      usually provide their own erasing functionality.
     </para>
    </important>

    <sect2 xml:id="sec-sec-prot-general-retiring-scrub">
     <title>scrub: Disk Overwrite Utility</title>
     <para>
      <command>scrub</command> overwrites hard disks, files, and other
      devices with repeating patterns intended to make recovering data from
      these devices more difficult. It operates in three basic modes: on a
      character or block device, on a file, or on a directory specified. For
      more information, set the manual page <command>man 1 scrub</command>.
     </para>
     <variablelist>
      <title>Supported Scrub Methods</title>
      <varlistentry>
       <term>nnsa</term>
       <listitem>
        <para>
         4-pass NNSA Policy Letter NAP-14.1-C (XVI-8) for sanitizing
         removable and non-removable hard disks, which requires overwriting
         all locations with a pseudo random pattern twice and then with a
         known pattern: ran- dom(x2), 0x00, verify.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>dod</term>
       <listitem>
        <para>
         4-pass DoD 5220.22-M section 8-306 procedure (d) for sanitizing
         removable and non-removable rigid disks which requires overwriting
         all addressable locations with a character, its complement, a
         random character, then verify. Note: scrub performs the random pass
         first to make verification easier: random, 0x00, 0xff, verify.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>bsi</term>
       <listitem>
        <para>
         9-pass method recommended by the German Center of Security in
         Information Technologies
         (<link xlink:href="http://www.bsi.bund.de"/>): 0xff, 0xfe, 0xfd,
         0xfb, 0xf7, 0xef, 0xdf, 0xbf, 0x7f.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>gutmann</term>
       <listitem>
        <para>
         The canonical 35-pass sequence described in Gutmann's paper cited
         below.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>schneier</term>
       <listitem>
        <para>
         7-pass method described by Bruce Schneier in "Applied Cryptography"
         (1996): 0x00, 0xff, random(x5)
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>pfitzner7</term>
       <listitem>
        <para>
         Roy Pfitzner's 7-random-pass method: random(x7).
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>pfitzner33</term>
       <listitem>
        <para>
         Roy Pfitzner's 33-random-pass method: random(x33).
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>usarmy</term>
       <listitem>
        <para>
         US Army AR380-19 method: 0x00, 0xff, random. (Note: identical to
         DoD 522.22-M section 8-306 procedure (e) for sanitizing magnetic
         core memory).
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>fillzero</term>
       <listitem>
        <para>
         1-pass pattern: 0x00.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>fillff</term>
       <listitem>
        <para>
         1-pass pattern: 0xff.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>random</term>
       <listitem>
        <para>
         1-pass pattern: random(x1).
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>random2</term>
       <listitem>
        <para>
         2-pass pattern: random(x2).
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>old</term>
       <listitem>
        <para>
         6-pass pre-version 1.7 scrub method: 0x00, 0xff, 0xaa, 0x00, 0x55,
         verify.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>fastold</term>
       <listitem>
        <para>
         5-pass pattern: 0x00, 0xff, 0xaa, 0x55, verify.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>custom=string</term>
       <listitem>
        <para>
         1-pass custom pattern. String may contain C-style numerical
         escapes: \nnn (octal) or \xnn (hex).
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </sect2>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-backups">
    <title>Backups</title>

    <para>
     If your system is compromised, backups can be used to restore a prior
     system state. When bugs or accidents occur, backups can also be used to
     compare the current system against an older version. For production
     systems, it is very important to take some backups off-site for cases
     like disasters (for example off-site storage of tapes/recordable media,
     or off-site initiated).
    </para>

    <para>
     For legal reasons, some firms and organizations must be careful about
     backing up too much information and holding it too long. If your
     environment has a policy regarding the destruction of old paper files,
     you might need to extend this policy to Linux backup tapes as well.
    </para>

    <para>
     The rules about physical security of servers apply on backups as well.
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-partitions">
    <title>Disk Partitions</title>

    <para>
     Servers should have separate file systems for at least
     <filename>/</filename>, <filename>/boot</filename>,
     <filename>/usr</filename>, <filename>/var</filename>,
     <filename>/tmp</filename>, and <filename>/home</filename>. You do not
     want that for example logging and temporary space under
     <filename>/var</filename> and <filename>/tmp</filename> fill up the
     root partition. Third-party applications should be on separate file
     systems as well, for example under <filename>/opt</filename>.
    </para>

    <para>
     You are advised to review <xref linkend="part-setup-for-eal"/>. It is
     important to understand the need to separate the partitions that could
     impact a running system (for example, log files filling up
     <filename>/var/log</filename> are a good reason to separate
     <filename>/var</filename> from the <filename>/</filename> partition).
     Another thing to keep in mind is that you will likely need to leverage
     LVM or another volume manager or at the very least the extended
     partition type to work around the limitations of primary partitions (4
     partitions).
    </para>

    <para>
     Another capability in &productname; is encrypting a partition or
     even a single directory or file as a container. Refer to
     <xref linkend="cha-security-cryptofs"/> for details.
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-firewall">
    <title>Firewall (iptables)</title>

    <para>
     iptables will not be covered in detail in this guide. Most companies
     use dedicated firewalls or appliances to protect their servers in a
     production network. This is strongly recommended for secure
     environments. &productname; also includes &susefirewall; which is
     a wrapper for iptables and is enabled by default as a simple and
     layered protection.
    </para>

    <para>
     If you are also interested in Linux stateful firewalls using iptables,
     there are many guides on the Internet. See the Appendix for resources.
     For lots of iptables tutorials and examples, see
     <link xlink:href="http://www.linuxguruz.com/iptables/"/>.
<!-- An overview is also
     available at <xref linkend="sec-hardening-firewall-iptables"/>. -->
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-kernel">
    <title>Security Features in the Kernel</title>

    <para>
     The following list shows tunable kernel parameters you can use to
     secure your Linux server against attacks. Some are defaults
     already within the SLE distributions. To check the current status of
     any of these settings, you can query the kernel
     (<filename>/proc/sys/...</filename> contents). For example, the Source
     Routing setting is located in the
     <filename>/proc/sys/net/ipv4/conf/all/accept_source_route</filename>
     file. Simply display the contents of a file to see how the current
     running kernel is set up.
    </para>

    <para>
     For each tunable kernel parameter shown, the change to the entry that
     needs to be affected can be modified or added to the
     <filename>/etc/sysctl.conf</filename> configuration file to make the
     change persistent after a reboots.
    </para>

    <para>
     You can get a list of current kernel settings by using the command:
    </para>

<screen>&prompt.root;sysctl -a</screen>

    <para>
     It is even a very good idea to store the output of the kernel settings
     (for comparison or reference) by redirecting the output of the sysctl
     command to a file, for example
    </para>

<screen>&prompt.root;sysctl -A &gt; /root/sysctl.settings.store</screen>

    <para>
     Because &productname; includes, by default, security-focused kernel
     tuning parameters, you will find the existing
     <filename>/etc/sysctl.conf</filename> file to be sparsely populated.
     You may choose to use the above mentioned <quote>catalog</quote> method
     of storing the complete gamut of kernel settings and then choose those
     parameters you want to be reset at reboot. You can place these in the
     <filename>/etc/sysctl.conf</filename> file where they will be picked up
     upon a reboot or they can be inserted immediately (into the running
     kernel) by running the command <command>sysctl</command>
     <option>-p</option>.
    </para>

    <para>
     Many third-party applications like Oracle, SAP, DB2, Websphere, etc.
     recommend changing kernel parameters to ensure high performance for I/O
     or CPU processing. Having a full list of current settings can be
     helpful for reference.
    </para>

    <sect2 xml:id="sec-sec-prot-general-kernel-syn-cookie">
     <title>Enable TCP SYN Cookie Protection (default in &productname; &productnumber;)</title>
     <para>
      A SYN attack is a denial of service attack that consumes all the
      resources on a machine. Any server that is connected to a network is
      potentially subject to this attack. To enable TCP SYN Cookie
      Protection, edit the <filename>/etc/sysctl.conf</filename> file and
      ensure the following line and value exists:
     </para>
<screen>net.ipv4.tcp_syncookies = 1</screen>
     <note>
      <para>
       Despite the name of the configuration option, it applies to IP
       version 6 as well.
      </para>
     </note>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-route">
     <title>Disable IP Source Routing (default in &productname; &productnumber;)</title>
     <para>
      Source Routing is used to specify a path or route through the network
      from source to destination. This feature can be used by network people
      for diagnosing problems. However, if an intruder was able to send a
      source routed packet into the network, then he could intercept the
      replies and your server might not know that it is not communicating
      with a trusted server.
     </para>
<screen>net.ipv4.conf.all.accept_source_route = 0</screen>
     <para>
      or
     </para>
<screen>net.ipv6.conf.all.accept_source_route = 0</screen>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-icpm-redirect">
     <title>Disable ICMP Redirect Acceptance</title>
     <para>
      ICMP redirects are used by routers to tell the server that there is a
      better path to other networks than the one chosen by the server.
      However, an intruder could potentially use ICMP redirect packets to
      alter the host's routing table by causing traffic to use a path you
      did not intend. To disable ICMP Redirect Acceptance, edit the
      <filename>/etc/sysctl.conf</filename> file and add the following line:
     </para>
<screen>net.ipv4.conf.all.accept_redirects = 0</screen>
     <para>
      or
     </para>
<screen>net.ipv6.conf.all.accept_redirects = 0</screen>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-ip-spoofing">
     <title>Enable IP Spoofing Protection (default in &productname; &productnumber;)</title>
     <remark>krahmer 2014-08-14: IPv6 should be handled separately</remark>
     <para>
      IP spoofing is a technique where an intruder sends out packets which
      claim to be from another host by manipulating the source address. IP
      spoofing is very often used for denial of service attacks. For more
      information on IP Spoofing, see
      <link xlink:href="http://en.wikipedia.org/wiki/IP_address_spoofing"/>
     </para>
<screen>net.ipv4.conf.all.rp_filter = 1</screen>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-icpm-ignore">
     <title>Enable Ignoring to ICMP Requests</title>
     <para>
      If you want or need Linux to ignore <command>ping</command> requests,
      edit the <filename>/etc/sysctl.conf</filename> file and add the
      following line:
     </para>
<screen>net.ipv4.icmp_echo_ignore_all = 1</screen>
     <para>
      This cannot be done in many environments, as some monitoring systems
      use a rudimentary ICMP (ping) to determine the health of the device on
      the network (or at least its ability to respond).
     </para>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-broadcast">
     <title>Enable Ignoring Broadcasts Request (default in &productname; &productnumber;)</title>
     <para>
      If you want or need Linux to ignore broadcast requests.
     </para>
<screen>net.ipv4.icmp_echo_ignore_broadcasts = 1</screen>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-errormsg">
     <title>Enable Bad Error Message Protection (default in &productname; &productnumber;)</title>
     <para>
      To alert you about bad error messages in the network.
     </para>
<screen>net.ipv4.icmp_ignore_bogus_error_responses = 1</screen>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-logging">
     <title>Enable Logging of Spoofed Packets, Source Routed Packets, Redirect Packets</title>
     <para>
      To turn on logging for Spoofed Packets, Source Routed Packets, and
      Redirect Packets, edit the <filename>/etc/sysctl.conf</filename> file
      and add the following line:
     </para>
<screen>net.ipv4.conf.all.log_martians = 1</screen>
     <note>
      <para>
       Because of the way &productname; is set up (with rsyslog) for
       network event tracking, keep in mind that this can cause a large
       amount of messages to be logged.
      </para>
     </note>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-add-random">
     <title>Buffer Overflow Attack Mitigation</title>
     <para>
      Starting with the 2.6.x kernel releases, Linux offers
      <emphasis>Address Space Layout Randomization</emphasis> (ASLR) and
      the <emphasis>No-eXecute</emphasis> (NX bit) for mitigation of
      buffer overflow attacks. For more information, see:
     </para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        <link xlink:href="http://searchenterpriselinux.techtarget.com/tip/Linux-virtual-address-randomization-and-impacting-buffer-overflows"/>
       </para>
      </listitem>
      <listitem>
       <para>
        <link xlink:href="https://en.wikipedia.org/wiki/Address_space_layout_randomization"/>
       </para>
      </listitem>
      <listitem>
       <para>
        <link xlink:href="https://en.wikipedia.org/wiki/NX_bit"/>
       </para>
      </listitem>
     </itemizedlist>
     <para>
      Since version 12, &productname; already comes with some buffer
      overflow attack mitigation techniques being enabled by default.
     </para>
     <para>
      ASLR is enabled by default. This can be verified with the output
      of the following command. The expected result is 2:
     </para>
<screen>&prompt.user;cat /proc/sys/kernel/randomize_va_space
2</screen>
     <para>
      This randomizes the heap, stack, and load addresses of dynamically
      linked libraries. Programs that run privileged or process network data
      are already built using special compiler flags (PIE and
      _FORTIFY_SOURCE) to take even more advantage of randomizing the text
      and data segments as well.
     </para>
     <para>
      Executable space protection prevents the execution of memory space
      that is not intended for execution. Linux makes use of the
      <emphasis>No eXecute bit</emphasis>. This is enabled by default on
      the &productname; kernel for the &x86; and &x86-64; architecture.
      Use of the NX bit has to be supported by each individual
      program. You can check if your system supports the NX bit:
     </para>
<screen>&prompt.user;dmesg | grep '[NX|DX]*protection'
[    0.000000] NX (Execute Disable) protection: active</screen>
     <para>If NX is disabled, check your BIOS or UEFI for a setting that
      enables it and make sure that it is supported by your CPU.</para>
     <para>
      Furthermore, since version 12, &productname; prevents leaking of
      internal kernel addresses to make kernel exploits harder by setting
      the <literal>kptr_restrict</literal>:
     </para>
<screen>&prompt.user;cat /proc/sys/kernel/kptr_restrict
1</screen>
     <para>
      On CPU's that support it (newer &x86-64; CPUs) the kernel also uses the
      SMEP protection by default that prevents direct execution of user space
      code from inside the kernel. This is often used by kernel exploits and
      therefore a good hardening measure.
     </para>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-file-system">
     <title>File system hardening</title>
     <para>
      To mitigate vulnerabilities based on insecure file system access by
      privileged programs (tmp-races, TOCTOU) the Linux kernel offers two
      <command>sysctl</command> variables which should already be enabled by
      default on &productname; &productnumber;:
      <literal>fs.protected_hardlinks</literal> and
      <literal>fs.protected_symlinks</literal> or their corresponding
      <filename>/proc</filename> entries:
     </para>
     <screen>&prompt.user;cat /proc/sys/fs/protected_hardlinks
1</screen>
     <para>
      By setting this to <literal>1</literal>, users can no longer create soft
      or hard links to files which they do not own. This mitigates a commonly
      used exploitation vector for programs which call open(2), creat(2) or
      similar functions without care.
     </para>
<screen>&prompt.user;cat /proc/sys/fs/protected_symlinks
1</screen>
     <para>
      By setting this to <literal>1</literal>, symbolic links are permitted to
      be followed only when outside a sticky world-writable directory, or when
      the UID of the link and follower match, or when the directory owner
      matches the symlink's owner.
     </para>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-dmesg">
     <title>Increased <command>dmesg</command> Restrictions</title>
     <para>
      <command>dmesg</command> provides all kinds of system internal
      information, such as kernel addresses, crashes of services, and
      similar things that could be used by local attackers. This is why the
      access to <command>dmesg</command> is restricted to &rootuser; by
      default. The behavior is controlled by the
      <literal>kernel.dmesg_restrict</literal> option (defaults to 1). If
      set to 0, any user can view the output of <command>dmesg</command>.
     </para>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-devmem">
     <title>
      Filter access to <filename>/dev/mem</filename> (default in
      &productname; 12)
     </title>
     <para>
      <filename>/dev/mem</filename> hosts an image of the system's main
      memory, including kernel and user space memory. Allowing unfiltered
      access to this information is dangerous and therefore the kernel on
      &productname; has been compiled with <envar>CONFIG_STRICT_DEVMEM</envar>
      enabled. This setting restricts user space access to
      <filename>/dev/mem</filename> to memory mapped peripherals.
     </para>
    </sect2>

   </sect1>
   <sect1 xml:id="sec-sec-prot-general-aa">
    <title>&aa;</title>

    <para>
     Included with &productname;, &aa; is an application security tool
     designed to provide an easy-to-use security framework for your
     applications. &aa; proactively protects the operating system and
     applications from external or internal threats, even zero-day
     attacks, by enforcing a specified behavior and preventing some
     unknown application flaws from being exploited. &aa; security
     policies, called <quote>profiles</quote>, completely define which system
     resources and files can be accessed by each application. The
     profiles also define the access mode, for example read or write.
     Several default profiles are included with &aa;, and using a
     combination of advanced static analysis and learning-based tools,
     &aa; profiles for even very complex applications can be deployed
     successfully in a matter of hours.
    </para>

    <para>
     &aa; consists of:
    </para>

    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       A kernel extension which enforces the security profiles.
      </para>
     </listitem>
     <listitem>
      <para>
       A collection of RPMs, also shipped with &productname; that
       provides:
      </para>
      <itemizedlist mark="bullet" spacing="normal">
       <listitem>
        <para>
         A set of &aa; profiles for numerous programs that ship with
         &productname;.
        </para>
       </listitem>
       <listitem>
        <para>
         Tools to create and manage new and existing &aa; profiles.
        </para>
       </listitem>
       <listitem>
        <para>
         A &yast; user interface to manage reports and notification of
         security events.
        </para>
       </listitem>
       <listitem>
        <para>
         Documentation about the &aa; tools.
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </itemizedlist>

    <para>
     It is best to reboot a system after completing installation, so that
     &aa; can confine all system daemons.
    </para>

    <para>
     The &aa; quick-start and administrative guides are available online
     here:
    </para>

    <para>
     <xref linkend="part-apparmor"/>
    </para>

    <para>
     For additional details and step-by-step instructions on the usage and
     configuration of &aa; you can also refer to
     <xref linkend="part-apparmor"/>.
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-selinux">
    <title>&selnx;</title>

    <para>
     &selnx; is an advanced technology for securing Linux systems. It is
     included with <quote>basic enablement</quote> in &productname;
     &productnumber;, and is included with some other distributions by
     default. Hardening Linux using &selnx; technology, on its own, warrants
     its own security HOWTO and is out of scope for this guide. The book <link
     xlink:href="http://shop.oreilly.com/product/9780596007164.do">&selnx;:
     NSA's Open Source Security Enhanced Linux</link> contains a very good
     description of its setup and usage. As part of the <quote>basic
     enablement</quote>, &selnx; will not be officially supported, but
     packages have now been added to &productname; &productnumber; to enable
     its usage with minimal effort. While &aa; is much easier to use and has a
     similar feature set, knowing both will most certainly be beneficial.
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-remote">
    <title>FTP, <command>telnet</command>, and <command>rlogin</command> (rsh)</title>

    <para>
     The programs/protocols of FTP, <command>telnet</command>, and
     <command>rlogin</command> (<command>rsh</command>) are vulnerable to
     eavesdropping, which is one of the main reasons secure alternatives
     such as <command>ssh</command>, <command>scp</command> or
     <command>sftp</command> should be used instead. It is highly
     recommended not to run the insecure services. Because of the high risk,
     this guide does not cover these services (other than vsftp). It would
     also be a good idea (and part of our guidance, see next section) not to
     have FTP and Telnet server RPMs installed on the system. Note that the
     EAL 4+ evaluation had vsftp installed. The <quote>vs</quote> stands for
     <quote>very secure</quote>&mdash;which is a differentiator here when
     compared to normal FTP.
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-remove-packs">
    <title>Removing Unnecessary Software Packages (RPMs)</title>

    <para>
     A very important step in securing a Linux system is to determine the
     primary function(s) or role(s) of the Linux server. Otherwise, it can
     be difficult to understand what needs to be secured and securing these
     Linux systems can prove ineffective. Therefore, it is critical to look
     at the default list of software packages and remove any unnecessary
     packages or packages that do not comply with your defined security
     policies.
    </para>

    <para>
     Doing this will result in fewer packages that require updates and will
     simplify maintenance efforts when security alerts and patches are
     released. It is a best practice not to install, among others,
     development packages or desktop software packages (for example, an X
     Server) on production servers. If you do not need them, you should also
     uninstall, for example, the Apache Web server or Samba file sharing
     server.
    </para>

    <important>
     <title>Requirements of Third-party Installers</title>
     <para>
      Many third-party vendors like Oracle and IBM require a desktop
      environment and development libraries to run installers. To avoid this
      from having an impact on the security of their production servers,
      many organizations work around this by creating a silent installation
      (response file) in a development lab.
     </para>
    </important>

    <para>
     Also, other packages like FTP and Telnet daemons should not be
     installed as well unless there is a justified business reason for it
     (again, <command>ssh</command>, <command>scp</command> or
     <command>sftp</command> should be used as replacements).
    </para>

    <para>
     One of the first action items should be to create a Linux image that
     <emphasis>only</emphasis> contains RPMs needed by the system and
     applications, and those needed for maintenance and troubleshooting
     purposes. A good approach is to start with a minimum list of RPMs and
     then add packages as needed. This process is time-consuming but usually
     worth the effort.
    </para>

    <tip>
     <title>Just Enough Operating System (JeOS)</title>
     <para>
      The &suse; Appliance Program includes a component called JeOS (Just
      Enough Operating System). JeOS has a very small footprint and can be
      customized to fit the specific needs of a system developer. Main uses
      of JeOS are for hardware/software appliance or virtual machine
      development. Key benefits of JeOS are efficiency, higher performance,
      increased security and simplified management.
     </para>
     <para>
      If JeOS is not an option for you, a good choice is the minimal
      installation pattern.
     </para>
    </tip>

    <para>
     To generate a list of all installed RPMs, use the following command:
    </para>

<screen>&prompt.root;rpm -qa</screen>

    <para>
     To retrieve details about a particular RPM (from the RPM itself), run:
    </para>

<screen>&prompt.root;rpm -qi <replaceable>PACKAGE_NAME</replaceable></screen>

    <para>
     To check for and report potential conflicts and dependencies when
     deleting an RPM, run:
    </para>

<screen>&prompt.root;rpm -e --test <replaceable>PACKAGE_NAME</replaceable></screen>

    <para>
     This can be very useful, as running the removal command without a test
     can often yield a mass of complaints and require manual recursive
     dependency hunting.
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-patching">
    <title>Patching Linux Systems</title>

    <para>
     Building an infrastructure for patch management is another very
     important part of a proactive and secure production Linux environment.
    </para>

    <para>
     It is recommended to have a written security policy and procedure to
     handle Linux security updates and issues. For example, a security
     policy should detail the time frame for assessment, testing, and roll
     out of patches. Network related security vulnerabilities should get the
     highest priority and should be addressed immediately within a short
     time frame. The assessment phase should occur within a testing lab, and
     initial roll out should occur on development systems first
    </para>

    <para>
     A separate security log file should contain details on which Linux
     security announcements have been received, which patches have been
     researched and assessed, when patches have been applied, etc.
    </para>

    <para>
     &suse; releases their patches in three categories, security,
     recommended and optional. There are a few options that can be used to
     keep systems patched, up to date and secure. Each system can register
     and then retrieve updates via the &suse; Update Web site using the
     included &yast; tool&mdash;&yast; Online Update. &suse; has also
     created the &smtool; (&smt;), an efficient way to maintain a
     local repository of available/released patches/updates/fixes that
     systems can then pull from (reducing Internet traffic). &suse; also
     offers &susemgr; for the maintenance, patching, reporting and
     centralized management of Linux systems, not only &suse;, but other
     distributions as well.
    </para>

    <sect2 xml:id="sec-sec-prot-general-patching-you">
     <title>&yast; Online Update</title>
     <para>
      On a per-server basis, installation of important updates and
      improvements is possible using the &yast; Online Update tool.
      Current updates for the &sle; family are available from the product
      specific update catalogs containing patches. Installation of updates
      and improvements is accomplished using &yast; and selecting
      <guimenu>Online Update</guimenu> in the <guimenu>Software</guimenu>
      Group. All new patches (except the optional ones) that are currently
      available for your system will already be marked for installation.
      Clicking <guimenu>Accept</guimenu> will then automatically install
      these patches.
     </para>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-patching-auto">
     <title>Automatic Online Update</title>
     <para>
      &yast; also offers the possibility to set up an automatic update.
      Select <menuchoice> <guimenu>Software</guimenu> <guimenu> Automatic
      Online Update</guimenu></menuchoice>. Configure a Daily or a Weekly
      update. Some patches, such as kernel updates, require user
      interaction, which would cause the automatic update procedure to stop.
      Check <guimenu>Skip Interactive Patches</guimenu> for the update
      procedure to proceed automatically.
     </para>
     <para>
      In this case, run a manual Online Update from time to install patches
      that require interaction.
     </para>
     <para>
      When <guimenu>Only Download Patches</guimenu> is checked, the patches
      are downloaded at the specified time but not installed. They must be
      installed manually using <command>rpm</command>or
      <command>zypper</command>.
     </para>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-patching-smt">
     <title>&smtool;&mdash;&smt;</title>
     <para>
      The &smtool; for &sle; goes one step further than the Online
      Update process by establishing a proxy system with repository and
      registration targets. This helps customers centrally manage software
      updates within the firewall on a per-system basis, while maintaining
      their corporate security policies and regulatory compliance.
     </para>
     <para>
      The downloadable &smt;
      (<link xlink:href="http://download.suse.com/"/>) is integrated with
      &scc; (<link xlink:href="&sccurl;"/>) and provides a repository
      and registration target that is synchronized with it. This can be very
      helpful in tracking entitlements in large deployments. The &smt;
      maintains all the capabilities of &scc;, while allowing a more
      secure centralized deployment. It is included with every &sle;
      subscription and is therefore fully supported.
     </para>
     <para>
      The &smt; provides an alternative to the default configuration,
      which requires opening the firewall to outbound connections for each
      device to receive updates. That requirement often violates corporate
      security policies and can be seen as a threat to regulatory compliance
      by some organizations. Through its integration with &scc;, the
      &smt; ensures that each device can receive its appropriate updates
      without the need to open the firewall, and without any redundant
      bandwidth requirements.
     </para>
     <para>
      The &smt; also enables customers to locally track their &sle;
      devices (that is servers, desktops, or Point of Service terminals)
      throughout their enterprise. Now they can easily determine how many
      entitlements are in need of renewal at the end of a billing cycle
      without having to physically walk through the data center to manually
      update spreadsheets.
     </para>
     <para>
      The &smt; informs the &sle; devices of any available software
      updates. Each device then obtains the required software updates from
      the &smt;. The introduction of the &smt; improves the
      interaction among &sle; devices within the network and simplifies
      how they receive their system updates. The &smt; enables an
      infrastructure for several hundred &sle; devices per instance of
      each installation (depending on the specific usage profile). This
      offers more accurate and efficient server tracking.
     </para>
     <para>
      In a nutshell, the &smtool; for &sle; provides customers with:
     </para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        Assurance of firewall and regulatory compliance
       </para>
      </listitem>
      <listitem>
       <para>
        Reduced bandwidth usage during software updates
       </para>
      </listitem>
      <listitem>
       <para>
        Full support under active subscription from &suse;
       </para>
      </listitem>
      <listitem>
       <para>
        Maintenance of existing customer interface with &ncc;
       </para>
      </listitem>
      <listitem>
       <para>
        Accurate server entitlement tracking and effective measurement of
        subscription usage
       </para>
      </listitem>
      <listitem>
       <para>
        Automated process to easily tally entitlement totals (no more
        spreadsheets!)
       </para>
      </listitem>
      <listitem>
       <para>
        Simple installation process that automatically synchronizes server
        entitlement with &ncc;
       </para>
      </listitem>
     </itemizedlist>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-patching-suma">
     <title>&susemgr;</title>
     <para>
      &susemgr; automates Linux server management, allowing you to provision
      and maintain your servers faster and more accurately. It monitors the
      health of each Linux server from a single console so you can identify
      server performance issues before they impact your business. And it lets
      you comprehensively manage your Linux servers across physical, virtual
      and cloud environments while improving data center efficiency. &susemgr;
      delivers complete life cycle management for Linux:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        Asset management
       </para>
      </listitem>
      <listitem>
       <para>
        Provisioning
       </para>
      </listitem>
      <listitem>
       <para>
        Package management
       </para>
      </listitem>
      <listitem>
       <para>
        Patch management
       </para>
      </listitem>
      <listitem>
       <para>
        Configuration management
       </para>
      </listitem>
      <listitem>
       <para>
        Redeployment
       </para>
      </listitem>
     </itemizedlist>
     <para>
      For more information on &susemgr; refer to <link
      xlink:href="https://www.suse.com/products/suse-manager/"/>.
     </para>
    </sect2>

   </sect1>
   <sect1 xml:id="sec-sec-prot-general-ports">
    <title>Securing the Network&mdash;Open Network Ports Detection</title>

    <para>
     Securing a server requires that you know what it is serving; what
     services are running. Default server installations may have services
     running that aren't self apparent and open network ports that they are
     using. So, one of the most important tasks is to detect and close
     network ports that are not needed. To get a list of listening network
     ports (TCP and UDP sockets), you can use the <command>netstat</command>
     service run the following command:
    </para>

<screen>&prompt.root;netstat -tulp</screen>

    <para>
     Be aware that <command>netstat</command> output can be wider than a
     default terminal screen. If the screen is too narrow, the options
     described above will likely cause the output to wrap and be less
     legible.
    </para>

    <para>
     Below is an example of output from the above command:
    </para>

<screen>Proto Recv-Q Send-Q Local            Foreign         State   PID/Program
                    Address          Address                 name
tcp   0      0      *:auth           *.*             LISTEN  2328/xinetd
tcp   0      0      local[...].:smtp *.*             LISTEN  2360/sendmail:acce
tcp   0      0      *:ssh            *.*             LISTEN  2317/sshd</screen>

    <para>
     From the output above you can see that three TCP-based services are
     running and listening: xinetd, sendmail, and sshd. Sendmail should not
     be configured to listen for incoming network connections unless the
     server running it is a designated as a mail or relay server. Running a
     port scan from another server can confirm that, but make sure to obtain
     proper permissions to scan/probe a machine on a production network.
    </para>

    <important>
     <para>
      Some organizations consider port scans without permission a security
      offense.
     </para>
    </important>

    <para>
     Using the Nmap tool, such a probe/scan can be run:
    </para>

<screen>&prompt.root;nmap -sTU <replaceable>REMOTE_HOST</replaceable>
Starting nmap 3.70 ( http://www.insecure.org/nmap/ ) at 2004-12-10 22:51 CST
Interesting ports on &wsII; (&wsIIip;):
(The 3131 ports scanned but not shown below are in state: closed)
PORT     STATE         SERVICE
22/tcp   open          ssh
113/tcp  open          auth

Nmap run completed -- 1 IP address (1 host up) scanned in 221.669 seconds
     </screen>

    <para>
     Note that running the <command>nmap</command> command can take quite a
     while (in this example almost 4 minutes) depending on the options used.
     If you remove the UDP port scan (leave out the <option>-U</option>
     option), then <command>nmap</command> will finish the port scan nearly
     immediately. The results of <command>nmap</command> can vary widely and
     might not show all listening network sockets depending on the status of
     the &susefirewall; (or other) and if it has been set up to block any
     ports.
    </para>

    <para>
     From the sample run above, you see that the
     <systemitem class="daemon">xinetd</systemitem> daemon is listening on
     port auth (port 113) for <literal>IDENT</literal> (for more information
     on this service, see
     <xref linkend="sec-sec-prot-general-disable-xinetd-services"/>). You
     can also see that sendmail is not listening for remote incoming network
     connections.
    </para>

    <para>
     Another method to list all of the TCP and UDP sockets to which programs
     are listening (on a host) is to use the <command>lsof</command> command –
     which lists open files:
    </para>

<screen>&prompt.root;lsof -i -n | egrep 'COMMAND|LISTEN|UDP'
COMMAND  PID   USER   FD   TYPE    DEVICE SIZE/OFF NODE NAME
sshd     2317  root   3u   IPv6    6579   0t0      TCP *:ssh (LISTEN)
xinetd   2328  root   5u   IPv4    6698   0t0      TCP *:auth (LISTEN)
sendmail 2360  root   3u   IPv4    6729   0t0      TCP 127.0.0.1:smtp (LISTEN)</screen>
   </sect1>
<!--taroth 2014-03-18: disabling section completely since systemd does not really
    have the concept of  disabling stuff in a specific runlevel/target-->
<!--<sect1 id="sec-sec-prot-general-disable-services">
    <title>Disabling Runlevel Services</title>

    <para>
     One of the most important tasks is the removal of any network services
     from a systems start-up (init) process that are not needed. On &suse;
     systems you can list all services which are started at boot time using
     the following command:
    </para>

    <screen>systemctl -t service list-units</screen>

    <para>
     This command will list any service that has been enabled to start at
     any of the 7 init levels. 0 through 6 and also S (single user). Notice
     there may be quite a few services enabled on a given host, but many
     runlevel services (Stand-Alone Services) might not be for network
     related services. There are some services that are only run during the
     boot process. Make sure <emphasis>not</emphasis> to disable any runlevel
     services that are needed by the system to run smoothly. For example, many
     of these type of services will begin with a prefix of
     <literal>boot</literal>.
    </para>

    <para>
     Some examples of Runlevel System Services which you may or may not want
     to enable (check &yast; <guimenu>System Services (Runlevels)</guimenu>
     module for a complete list):
    </para>

    <table>
     <title><systemitem class="service">init</systemitem> Services and their Descriptions - Examples</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>
         <para>
          Service Name
         </para>
        </entry>
        <entry>
         <para>
          Description of Service
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          syslog
         </para>
        </entry>
        <entry>
         <para>
          important for syslog services
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          netfs
         </para>
        </entry>
        <entry>
         <para>
          needed only if there are NFS shares that should be mounted at boot
          time
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          network
         </para>
        </entry>
        <entry>
         <para>
          important for starting network interfaces (for example eth0, eth1,
          bonding,...)
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          random
         </para>
        </entry>
        <entry>
         <para>
          used for the system entropy pool
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          atd
         </para>
        </entry>
        <entry>
         <para>
          needed if the at(1) service is used instead of cron
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          apmd
         </para>
        </entry>
        <entry>
         <para>
          Advanced Power Management (APM) daemon is used for laptops and
          some desktops
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          iptables
         </para>
        </entry>
        <entry>
         <para>
          needed if Netfilter (iptables) Firewall is being used
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          ip6tables
         </para>
        </entry>
        <entry>
         <para>
          needed if ip6tables Firewall is being used
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          pcmcia
         </para>
        </entry>
        <entry>
         <para>
          not needed on servers - needed for laptops
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          irqbalance
         </para>
        </entry>
        <entry>
         <orderedlist>
          <listitem>
           <para>
            important for distributing interrupts across all CPUs
           </para>
          </listitem>
         </orderedlist>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          sendmail
         </para>
        </entry>
        <entry>
         <para>
          needed if Sendmail is used - Procmail should be used which is more
          secure
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          autofs
         </para>
        </entry>
        <entry>
         <para>
          needed if automounter is used - production applications should not
          be dependent on automounter
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          sshd
         </para>
        </entry>
        <entry>
         <para>
          important for logins via SSH
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          portmap
         </para>
        </entry>
        <entry>
         <para>
          needed if for example NFS is being used
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          nfslock
         </para>
        </entry>
        <entry>
         <para>
          needed if NFS shares are mounted
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          nfs
         </para>
        </entry>
        <entry>
         <orderedlist>
          <listitem>
           <para>
            needed if server runs the NFS server
           </para>
          </listitem>
         </orderedlist>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          mdmonitor
         </para>
        </entry>
        <entry>
         <para>
          needed only if software RAID is being used
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          crond
         </para>
        </entry>
        <entry>
         <para>
          important for running cron jobs
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          xinetd
         </para>
        </entry>
        <entry>
         <para>
          needed if xinetd services are being used, see /etc/xinetd.d/ for
          list of services
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          cups
         </para>
        </entry>
        <entry>
         <para>
          needed if CUPS is used for the printing system
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          rhnsd
         </para>
        </entry>
        <entry>
         <para>
          needed if server should connect to RHN to check for software
          updates etc.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          sysstat
         </para>
        </entry>
        <entry>
         <para>
          needed to reset system statistics logs
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          audit
         </para>
        </entry>
        <entry>
         <para>
          needed only if Linux Audit Subsystem (LAuS) should run for
          collecting system call audit records
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          psacct
         </para>
        </entry>
        <entry>
         <para>
          needed only if kernel process accounting information is needed
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          smartd
         </para>
        </entry>
        <entry>
         <para>
          important for monitoring disk problems if hard disks support SMART
          technology
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          netdump
         </para>
        </entry>
        <entry>
         <orderedlist>
          <listitem>
           <para>
            important if kernel oops data and memory dumps should be sent to
            a Netdump server for server crashes
           </para>
          </listitem>
         </orderedlist>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>

    <para>
     The init (start/stop) scripts of all the runlevel services are found in
     the <filename>/etc/init.d</filename> directory. For example, if you
     don't know what the atd service does, go to
     <filename>/etc/init.d</filename> and open the file
     <filename>atd</filename>. And in the script look for lines that start
     programs. In the <systemitem class="daemon">atd</systemitem> script the
     <literal>startproc $ATD_BIN $ATD_ARGS</literal> line starts the
     process <systemitem class="daemon">atd</systemitem>. Now
     having the name of the program that is started by this service, you can
     check the online pages of <systemitem class="daemon">atd</systemitem>
     by running <command>man atd</command>. This will help you to find out
     more about a system service.
    </para>

    <para>
     To permanently disable for example the service nfs, run:
    </para>

<screen>&prompt.root;systemctl disable nfs</screen>

    <para>
     To immediately disable the service nfs, execute:
    </para>
<screen>&prompt.root;systemctl stop nfs</screen>

   </sect1>-->
   <sect1 xml:id="sec-sec-prot-general-disable-xinetd-services">
    <title><systemitem class="daemon">xinetd</systemitem> Services - Disabling</title>

    <para>
     The <systemitem class="daemon">xinetd</systemitem> daemon is a
     replacement for inetd, the Internet services daemon. It monitors the
     ports for all network services configured in
     <filename>/etc/xinetd.d</filename>, and starts the services in response
     to incoming connections. To check if
     <systemitem class="daemon">xinetd</systemitem> is enabled and running,
     execute:
    </para>

<screen>&prompt.root;systemctl status xinetd</screen>

<!--taroth 2014-02-13: not sure what the expected result is:
       xinetd 0:off 1:off 2:off 3:on 4:on 5:on 6:off-->

<!--taroth 2014-03-18: systemd - according to fcrozat, xinetd is *not*
    managed by systemd, so let's keep the rc*command here for now...
    <screen>&prompt.root;systemctl is-enabled xinetd; echo $?</screen>
     <para>A value of <literal>0</literal> indicates that the service is enabled,
     <literal>1</literal> indicates that it is disabled.</para>-->

    <para>
     To check the current status of the
     <systemitem class="daemon">xinetd</systemitem> service, execute:
    </para>

<screen>&prompt.root;systemctl status xinetd</screen>

    <para>
     If <systemitem class="daemon">xinetd</systemitem> is active, it is very
     important to see which services are active and being controlled by
     <systemitem class="daemon">xinetd</systemitem>. The following command
     will list all services configured in <filename>/etc/xinetd.d</filename>
     and whether <systemitem class="daemon">xinetd</systemitem> monitors the
     ports for these services:
    </para>

<!--taroth 2014-03-18: systemd - according to fcrozat no change here, as systemd
 does not manage xinetd-->

<screen>&prompt.root;chkconfig -list | awk '/xinetd based services/,/""/'
xinetd based services:

  chargen:     off
  chargen-udp: off
  cups-lpd:    off
  cvs:         off
  daytime:     off
  daytime-udp: off
  discard:     off
  discard-udp: off
  echo:        off
  echo-udp:    off
  netstat:     off
  rsync:       off
  sane-port:   off
  servers:     off
  services:    off
  svnserve:    off
  swat:        off
  systat:      off
  tftp:        on
  time:        off
  time-udp:    off
  vnc:         off</screen>

    <para>
     To get a list of only active services for which xinetd monitors the
     ports, you could run (where the <option>-v</option> option of grep does
     an inverse-match) :
    </para>

<!--taroth 2014-03-18: systemd - according to fcrozat no change here, as systemd
     does not manage xinetd-->

<screen>&prompt.root;chkconfig --list | awk '/xinetd based services/,/""/' | grep -v off
xinetd based services:

  tftp:        on</screen>

    <para>
     In the above example you can see that the
     <systemitem class="resource">telnet-server</systemitem> package is not
     installed on the system. If the Telnet Server package
     <systemitem class="resource">telnet-server</systemitem> would be
     installed, it would show up on the list whether it is active. Here is
     an example how to disable a service. Assuming the
     <systemitem class="service">tftp</systemitem> service is active, run
     the following commands to disable it and to see how the telnet service
     entries are being updated:
    </para>

<screen>&prompt.user;sudo systemctl status tftp
tftp.service - Tftp Server
Loaded: loaded (/usr/lib/systemd/system/tftp.service; static)
Active: active (running) since Fri 2014-09-05 07:56:23 CEST; 2h 1min ago

# sudo cat /etc/xinetd.d/tftp | grep disable
   disable = no

# sudo systemctl disable tftp

# systemctl status tftp
tftp.service - Tftp Server
Loaded: loaded (/usr/lib/systemd/system/tftp.service; static)
Active: inactive (dead)

# sudo cat /etc/xinetd.d/tftp | grep disable
      disable = yes</screen>

    <para>
     For the TFTP service it would be better to remove the package from the
     system since removal is always safer than disabling (when possible):
    </para>

<screen>&prompt.root;rpm -e tftp</screen>

    <sect2 xml:id="sec-sec-prot-general-disable-xinetd-services-inventory">
     <title>Inventory <systemitem class="daemon">xinetd</systemitem> services</title>
     <para>
      It is important to investigate <emphasis>all</emphasis> active
      <systemitem class="daemon">xinetd</systemitem> services and to disable
      them (or remove their packages) if they are not needed. To find out
      what a service does, here is a viable approach. Using the
      <systemitem class="service">tftp</systemitem> service as an example
      and assuming its function is unknown and it is listed as an active
      service. Execute the following commands:
     </para>
<screen>&prompt.root;grep " server" /etc/xinetd.d/tftp
  server = /usr/sbin/in.tftpd
  server_args = -s /tftpboot</screen>
     <para>
      To read the manual:
     </para>
<screen>&prompt.root;man in.tftpd
TFTPD(8)               System Manager's Manual              TFTPD(8)



NAME
       tftpd - IPv4 Trivial File Transfer Protocol server

SYNOPSIS
       in.tftpd [options...]  directory...

DESCRIPTION
       tftpd  is  a  server  for the Trivial File Transfer Protocol.
       The TFTP protocol is extensively used to support remote boot-
       ing  of  diskless devices.  The server is normally started by
       inetd, but can also run stand-alone.
[...]</screen>
     <para>
      To determine what package supplies the in.tftpd binary:
     </para>
<screen>&prompt.root;rpm -qf /usr/sbin/in.tftpd
tftp-0.48-101.16</screen>
     <para>
      To get a description of TFTP and its usage, etc:
     </para>
<screen>&prompt.root;rpm -qi tftp-0.48-101.16| awk '/Description/,/""/'
Description :
The Trivial File Transfer Protocol (TFTP) is normally used only for
booting diskless workstations and for getting or saving network
component configuration files.</screen>
     <para>
      To get a list of what files are installed via the TFTP package (RPM),
      execute the <command>rpm</command> command with the following options:
     </para>
<screen>&prompt.root;rpm -ql tftp-0.48-101.16
/etc/xinetd.d/tftp
/usr/bin/tftp
/usr/sbin/in.tftpd
/usr/share/doc/packages/tftp
/usr/share/doc/packages/tftp/README
/usr/share/doc/packages/tftp/README.security
/usr/share/doc/packages/tftp/sample.rules
/usr/share/man/man1/tftp.1.gz
/usr/share/man/man8/in.tftpd.8.gz
/usr/share/man/man8/tftpd.8.gz</screen>
     <para>
      This example described what could be done to find out information
      about services (specifically ones started by
      <systemitem class="daemon">xinetd</systemitem>) even if an online
      manual did not exist for the binary <filename>in.ftpd</filename>. This
      example yielded a man page – but you may not always find one. The
      RPM commands in the example are very commonly used for a variety of
      reasons. It is also possible to use the &yast; software management
      interface to retrieve all of the resultant information – however
      having a knowledge of RPM command syntax can save quite a bit of time.
      Again to disable the TFTP service, execute the following command:
     </para>
<screen>&prompt.root;systemctl disable tftp</screen>
     <para>
      The <systemitem class="daemon">xinetd</systemitem> daemon is quite
      flexible and has many features. Here are a few functionalities of
      <systemitem class="daemon">xinetd</systemitem>:
     </para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        Access control for TCP, UDP, and RPC services.
       </para>
      </listitem>
      <listitem>
       <para>
        Access limitations based on time.
       </para>
      </listitem>
      <listitem>
       <para>
        Provides mechanisms to prevent DoS attacks.
       </para>
      </listitem>
     </itemizedlist>
     <para>
      For more specific information on Xinetd, review the documentation and
      usage examples at the xinetd GitHub page
      <link xlink:href="https://github.com/xinetd-org/xinetd"/>.
     </para>
    </sect2>
   </sect1>
<!--taroth 2014-02-13: FIXME: systemd, commenting for now, as this section
    needs rewrite (/etc/inittab and runlevels no longer exist):

   <sect1 id="sec-sec-prot-general-inittab">
    <title>Reviewing Inittab and Boot Scripts</title>
<remark></remark>
    <para>
     The inittab file located in <filename>/etc/inittab</filename> contains
     a running <quote>tab</quote> (table) or list of which processes are to
     be started at bootup during normal system operation. Some third-party
     vendors will install an entry there to ensure the initialization and
     start-up of dependent services. For example Oracle places cluster services
     start-up entries here to ensure they start at boot time. It is
     important to review this file and verify all entries (in the
     <filename>/etc/inittab</filename>) are appropriate in your environment.
    </para>

    <para>
     It is <emphasis>highly</emphasis> recommended to trap the <keycombo>
     <keycap function="control"/> <keycap function="alt"/>
     <keycap function="delete"/> </keycombo> key sequence to
     prevent accidental reboots. The following command uses the sed string
     processor to find the <literal>ca::ctrlaltdel</literal> string and add
     a <literal>#</literal> symbol to the front of it. This will comment-out
     the whole line – thereby disabling the entry:
    </para>

<screen>sed -i 's/\(ca::ctrlaltdel:\)/#\1/g' /etc/inittab</screen>

    <para>
     It is generally recommended to make the default runlevel of a
     production system set to <literal>3</literal> - which means, multiuser
     <emphasis>with</emphasis> networking but <emphasis>without</emphasis>
     graphics. In other words – the X subsystem should not be running. It
     uses server compute cycles and is generally not needed. In this case,
     it should be removed – if not used. Setting the default runlevel is
     normally done via &yast; at time of installation – or by using the
     <guimenu>System Services (Runlevel)</guimenu> tool in &yast;. This tool
     will set the inittab for you, or you can make the modification manually
     (ensuring <literal>id:3:initdefault</literal> is in the inittab):
    </para>

<screen>&prompt.root;grep ':initdefault' /etc/inittab
id:3:initdefault:</screen>

    <para>
     To have changes in <filename>/etc/inittab</filename> become effective
     immediately, you can tell init to re-examine the
     inititab like this:
    </para>

<screen>telinit q</screen>

    <para>
     Reviewing the System Services tool in &yast; is a great way to
     determine what will be started on a system. The <guimenu>System
     Services (Runlevel)</guimenu> tool has a normal and
     <guimenu>Expert</guimenu> mode. Switch to <guimenu>Expert</guimenu> to
     see some of the boot services. These can be important for things like
     multipath, etc.
    </para>
   </sect1>
   <sect1 id="sec-sec-prot-general-restrict-access">
    <title>Restricting System Access from Servers and Networks</title>

    <para>
     Normally a firewall is used to protect a server from other servers and
     networks – or to protect an environment from the server itself.
     However, you can also protect a server or more accurately, an
     individual service using a TCP wrapper (which is a function of
     <systemitem
      class="daemon">xinetd</systemitem> – already
     discussed above).
    </para>

    <para>
     The <systemitem class="daemon">xinetd</systemitem> super server that
     comes with &productname; provides a built-in TCP wrapper functionality.
     This can be used to specifically define network services to accept or
     deny incoming connections from specified hosts and networks. The TCP
     wrappers implements access control through the use of two files,
     <filename>/etc/hosts.allow</filename> and
     <filename>/etc/hosts.deny</filename>. Note that the
     <filename>hosts.allow</filename> file takes precedence over the
     <filename>hosts.deny</filename> file. And you should change the
     permissions on the two configuration files since they are both world
     readable. An important difference between the security provided by a
     TCP wrapper versus the use of netfilter (iptables) is that netfilter
     works at the network layer (layer 2) and can provide security before
     the traffic goes up the stack to the application layers. The trade-off
     however is that a TCP wrapper allows for the use of a
     banner - or a welcome message (per service) and some
     other things. It is best to know what an organization requires – so
     the best recommendation can be made.
    </para>

    <para>
     Generally, a best-practice strategy is to block all incoming requests
     by default, and allow only specific hosts or networks to connect.
     This is commonly called <quote>deny all, permit few</quote>. To
     use this strategy, edit the
     <filename>/etc/hosts.deny</filename> file and add the following line:
    </para>

<screen>ALL: ALL</screen>

    <para>
     Then, to accept incoming SSH connections from specific hosts
     (for example nodes <systemitem class="systemname">sles-ha1</systemitem>,
     <systemitem class="systemname">sles-ha2</systemitem> and
     <systemitem
      class="systemname">sles-ha3</systemitem>, modify the
     <filename>/etc/hosts.allow</filename> file and add the following line:
    </para>

<screen>sshd: sles-ha1 sles-ha2 sles-ha3</screen>

    <para>
     To accept incoming SSH connections from all servers from a specific
     network, add the name of the subnet to
     <filename>/etc/hosts.allow</filename>. Adjust the entry like this:
    </para>

<screen>sshd: sles-ha1 sles-ha2 sles-ha3 .network.&exampledomain;</screen>

    <para>
     Remember, each service can be defined separately. To accept
     incoming portmap connections from the host at IP address
     <literal>192.168.0.1</literal> and from the subnet
     <literal>192.168.5</literal>, the following modification can be made to
     <filename>/etc/hosts.allow</filename>:
    </para>

<screen>portmap: 192.168.0.1 192.168.5.</screen>

    <para>
     To accept connections from all servers on the subnet named
     .network.&exampledomain; but not from host
     badhost.network.&exampledomain;, add the following line to the
     <filename>/etc/hosts.allow</filename> file:
    </para>

<screen>ALL: .network.&exampledomain; EXCEPT badhost.network.&exampledomain;</screen>

    <para>
     Here are other examples that show some features of TCP wrapper: If you
     just want to restrict ssh connections without configuring or using
     <filename>/etc/hosts.deny</filename>, you can add the following entries
     to <filename>/etc/hosts.allow</filename>:
    </para>

<screen>sshd: rac1cluster rac2cluster rac3cluster
sshd: ALL: DENY</screen>

    <para>
     The version of TCP wrapper that comes with &productname; also supports
     the extended options documented in the <literal>hosts_options</literal>
     man page. Here is an example how an additional program can be spawned
     in for example the <filename>/etc/hosts.allow</filename> file:
    </para>

<screen>sshd: ALL : spawn echo "Login from %c to %s" | mail -s "Login Info for %s" log@loghost</screen>

    <para>
     For information on the % expansions, see <command>man
     hosts_access</command>.
    </para>

    <para>
     The TCP wrapper is quite flexible. And
     <systemitem class="daemon">xinetd</systemitem> provides its own set of
     host-based and time-based access control functions. You can even tell
     <systemitem class="daemon">xinetd</systemitem> to limit the rate of
     incoming connections. Various documentations about the
     <systemitem
      class="daemon">xinetd</systemitem> super daemon on
     the Internet and should be considered recommended reading. Just
     remember the trade-offs between a TCP wrapper and the &susefirewall;
     (netfilter/iptables).
    </para>
   </sect1>
   <sect1 id="sec-sec-prot-general-ssh">
    <title>Securing SSH</title>

    <para>
     Many network services like telnet, rlogin, and rsh are vulnerable to
     eavesdropping which is one of several reasons why SSH should be used
     instead. The &productname; default configuration for SSH meets the
     security requirements for many environments. However, there are a few
     parameters in <filename>/etc/ssh/sshd_config</filename> that you may
     want to change.
    </para>

    <para>
     The section on Restricting System Access from Servers and Networks
     shows how direct logins can be disabled for shared and system accounts
     including root. But it's prudent to disable direct root logins at the
     SSH level as well.
    </para>

<screen>PermitRootLogin no</screen>

    <para>
     Also ensure to have privilege separation enabled where the daemon is
     split into two parts. With privilege separation a small part of the
     code runs as root and the rest of the code runs in a chroot jail
     environment.
    </para>

<screen>UsePrivilegeSeparation yes</screen>

    <para>
     Since SSH protocol version 1 is not as secure you should limit the
     protocol to version 2 only:
    </para>

<screen>Protocol 2</screen>

    <para>
     You may also want to prevent SSH from setting up TCP port and X11
     forwarding if you don't need it:
    </para>

<screen>AllowTcpForwarding no
X11Forwarding no</screen>

    <para>
     Ensure the StrictModes directive is enabled which checks file
     permissions and ownerships of some important files in the user's home
     directory like <filename>~/.ssh</filename>,
     <filename>~/.ssh/authorized_keys</filename> etc. If any checks fail,
     the user won't be able to login.
    </para>

<screen>StrictModes yes</screen>

    <para>
     Ensure that all host-based authentications are disabled. These methods
     should be avoided as primary authentication.
    </para>

<screen>IgnoreRhosts yes
HostbasedAuthentication no
RhostsRSAAuthentication no</screen>

    <para>
     Disable sftp if it's not needed (by commenting it out with the
     <literal>#</literal>):
    </para>

<screen>#Subsystem sftp /usr/lib/misc/sftp-server</screen>

    <para>
     After changing any directives make sure to restart the
     <systemitem
      class="daemon">sshd</systemitem> daemon:
    </para>

<screen>/etc/init.d/sshd restart</screen>
   </sect1>-->
   <sect1 xml:id="sec-sec-prot-general-postfix">
    <title>Securing Postfix</title>

    <para>
     Postfix is a replacement for Sendmail and has several security
     advantages over Sendmail. Postfix is the default mail system in
     &productname; and consists of several small programs that each
     perform their own small task&mdash;most of these programs run in a chroot
     jail. This is one of the reasons Postfix is recommended over Sendmail.
    </para>

    <para>
     Linux servers that are not dedicated mail or relay servers should not
     accept external e-mails. However, it is important for production
     servers to send local e-mails to a relay server&mdash;some security
     setups (for example the seccheck scripts) can be configured to send
     e-mails to someone other than &rootuser;, even off the local system.
    </para>

    <para>
     Verify the following parameters in
     <filename>/etc/postfix/main.cf</filename> are set to ensure that
     Postfix accepts only local e-mails for delivery (look toward the
     bottom of the file as the top portion is mostly commented-out example
     entries and explanations):
    </para>

<screen>mydestination = $myhostname, localhost.$mydomain, localhost
inet_interfaces = localhost</screen>

    <para>
     The <literal>mydestination</literal> parameter lists all domains to
     receive e-mails for. The <literal>inet_interfaces</literal> parameter
     specifies the network to listen on. After reconfiguring Postfix, a
     restart of the mail system is necessary:
    </para>

<screen>&prompt.root;systemctl restart postfix</screen>

    <para>
     Verify that Postfix is not listening for network requests (incoming) by
     running one of these commands from another host:
    </para>

<screen>nmap -sT -p 25 <replaceable>REMOTE_HOST</replaceable>
telnet &lt;remote_host&gt; 25</screen>

    <note>
     <para>
      Running these commands on the local host will provide inaccurate
      results because Postfix is supposed to accept connections from the local
      node.  Use an external host for correct results.
     </para>
    </note>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-nfs">
    <title>File Systems: Securing NFS</title>

    <para>
     NFS (Network File System) allows servers to share files over a network.
     But like all network services using NFS involves risks.
    </para>

    <para>
     Here are some basic rules:
    </para>

    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       NFS should not be enabled if not needed.
      </para>
     </listitem>
     <listitem>
      <para>
       If NFS is truly needed, use a TCP wrapper to restrict remote access.
      </para>
     </listitem>
     <listitem>
      <para>
       Ensure to export only to those hosts that really need access.
      </para>
     </listitem>
     <listitem>
      <para>
       Use a fully qualified domain name to diminish any spoofing attempts.
      </para>
     </listitem>
     <listitem>
      <para>
       Export only as read-only whenever possible.
      </para>
     </listitem>
     <listitem>
      <para>
       Use NFS only over TCP.
      </para>
     </listitem>
    </itemizedlist>

    <para>
     If you do not have shared directories to export, then ensure that the
     NFS service is <emphasis>not</emphasis> enabled nor running on the
     system:
    </para>

    <para>
     Check the NFS service status:
    </para>

<screen>&prompt.root;systemctl status nfsserver
<!--Checking for kernel based NFS server:
idmapd                                                    running
mountd                                                    unused
statd                                                     unused
nfsd                                                      unused--></screen>

    <para>
     Check the current targets:
    </para>

<!--taroth 2014-02-13: commenting due to systemd-->

<!--<screen>&prompt.root;chkconfig -l nfsserver
nfsserver 0:off 1:off 2:off 3:off 4:off 5:off 6:off</screen>-->

<screen>&prompt.root;ls /etc/systemd/system/*.wants/nfsserver.service</screen>

<!--taroth 2014-02-13: not sure what the expected result is?
      maybe ls: cannot access /etc/systemd/system/*.wants/nfsserver.service: No such file or directory
      -->

    <sect2 xml:id="sec-sec-prot-general-nfs-start">
     <title>Enabling and Starting NFS Server</title>
     <para>
      If NFS must be used, it can be activated using the following commands
      on &productname; or more simply and securely with the &yast;
      plug-in (ncurses). Access it directly from command line with
      <command>yast nfs_server</command> or <command>yast
      nfs_client</command> – or manually:
     </para>
<screen>&prompt.root;systemctl enable nfs
systemctl start nfs</screen>
     <para>
      Portmapper information:
     </para>
<screen>&prompt.root;rpcinfo -p <replaceable>SERVERNAME</replaceable>
   program vers proto   port
    100000    2   tcp    111  portmapper
    100000    2   udp    111  portmapper
    100003    2   udp   2049  nfs
    100003    3   udp   2049  nfs
    100003    2   tcp   2049  nfs
    100003    3   tcp   2049  nfs
    100005    1   udp    623  mountd
    100005    1   tcp    626  mountd
    100005    2   udp    623  mountd
    100005    2   tcp    626  mountd
    100005    3   udp    623  mountd
    100005    3   tcp    626  mountd</screen>
     <para>
      If you run it from an "untrusted" server or network, you should get
      the following output:
     </para>
<screen>&prompt.root;rpcinfo -p <replaceable>SERVERNAME</replaceable>
No remote programs registered.</screen>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-nfs-export">
     <title>Exporting NFS</title>
     <para>
      To allow a client access to a file system or directory, the
      <filename>/etc/exports</filename> file serves as the access control
      list. To give the network "network.&exampledomain;" read-only
      access to <filename>/pub</filename>, the entries in
      <filename>/etc/exports</filename> would look like as follows:
     </para>
<screen>
      /pub *.network.&exampledomain;(ro,sync)
     </screen>
     <para>
      It is very important <emphasis>not</emphasis> to give write access to
      NFS clients if not absolutely needed! Entries in
      <filename>/etc/exports</filename> are exported read-only
      (<option>ro</option> option) by default. To allow servers
      <systemitem class="systemname">sles-ha1</systemitem>,
      <systemitem class="systemname">sles-ha2</systemitem> and
      <systemitem class="systemname">sles-ha3</systemitem> read-write access
      to the <filename>/data/MYSQL</filename> directory, the entries in
      <filename>/etc/exports</filename> would look like as follows:
     </para>
<screen>/data/MYSQL sles-ha1.&exampledomain;(rw,sync) sles-ha2.&exampledomain;(rw,sync) sles-ha3.&exampledomain;(rw,sync)
     </screen>
     <para>
      Note that the options <emphasis>must not</emphasis> be separated from
      the host names or networks with whitespace(s). Also, fully qualified
      domain names should <emphasis>always</emphasis> be used to diminish
      spoofing attempts. All entries in <filename>/etc/exports</filename>
      are exported with the <option>root_squash</option> option (<quote>root
      squashing</quote>) by default. This means that a root user on a client
      machine does not have root privileges (root access) to files on
      exported NFS. It is not recommended to turn <quote>root
      squashing</quote> off using the <option>no_root_squash</option>
      option! After you have made all your entries in
      <filename>/etc/exports</filename>, you can export all file
      systems/directories using the following command:
     </para>
<screen>&prompt.root;exportfs -a</screen>
     <para>
      To unexport all shared file systems/directories, run:
     </para>
<screen>&prompt.root;exportfs -ua</screen>
     <para>
      To see all shared file systems/directories, run:
     </para>
<screen>&prompt.root;showmount -e localhost
Export list for localhost:

/pub *.network.&exampledomain;/data/MYSQL
sles-ha1.&exampledomain;,sles-ha2.&exampledomain;,sles-ha3.&exampledomain;</screen>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-nfs-tcp">
     <title>Using NFS over TCP</title>
     <para>
      If you need NFS, it is recommended to use NFS only over TCP since NFS
      over UDP is not secure. All 2.4 and later kernels support NFS over TCP
      on the client side. Server support for TCP appeared in later 2.4
      kernels and beyond. To mount a shared directory using NFS over TCP, it
      is necessary to use the <option>proto=tcp</option> mount option:
     </para>
<screen>&prompt.root;mount -o proto=tcp <replaceable>SERVERNAME</replaceable>:/pub /usr/local/pub
     </screen>
     <para>
      Verify that the target directory, in this case
      <filename>/usr/local/pub</filename>, exists on the client:
     </para>
<screen>&prompt.root;mount [...] <replaceable>SERVERNAME</replaceable>:/pub on
/usr/local/pub type nfs (rw,proto=tcp,addr=&nfsip;)</screen>
     <para>
      To have the shared directory mounted on the client at boot time, use
      the <filename>/etc/fstab</filename> file. For the above example, the
      <filename>/etc/fstab</filename> entry could look like this:
     </para>
<screen><replaceable>SERVERNAME</replaceable>:/pub /usr/local/pub nfs rsize=8192,wsize=8192,timeo=14,intr,tcp 0 0
     </screen>
    </sect2>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-scp">
    <title>Copying Files Using SSH Without Providing Login Prompts</title>

    <para>
     This example is needed in some cases to enable files to be copied over
     the network using SSH without providing an interactive login prompt.
     This allows trusted hosts to be set up&mdash;an example of federation.
    </para>

    <para>
     SSH can allow a forced command using the <quote>command</quote> option.
     Using this option it is possible to disable scp (secure copy) and
     enforce every passed <command>ssh</command> command to be ignored. On
     the server side where you want to retrieve the file from, add the
     following entry to the beginning of the SSH key in the
     <filename>~/.ssh/authorized_keys</filename> file (the
     <filename>~</filename> represents a particular users home directory –
     &rootuser;'s home directory is <filename>/root</filename> – other
     users typically reside in
     <filename>/home/<replaceable>USERNAME</replaceable></filename>):
    </para>

<screen>command="/bin/cat ~/&lt;file_name&gt;" ssh-rsa AAAAB3N...{etc}
</screen>

    <para>
     To copy now the file from the remote server, run the following command:
    </para>

    <para>
     ssh <replaceable>USER</replaceable>@<replaceable>SERVERNAME</replaceable>
     <replaceable>LOCAL_FILE</replaceable>
    </para>

    <para>
     Since <command>/bin/cat</command> is run on the server side, its output
     needs to be redirected to the local file.
    </para>

    <para>
     Another approach is to replace the <command>/bin/cat</command>
     (referenced above) with your own script that checks the passed SSH
     commands by reading the environment variable
     <envar>$SSH_ORIGINAL_COMMAND</envar>. For example:
    </para>

<screen>#!/bin/ksh
 if [[ $SSH_ORIGINAL_COMMAND = "File1" ||
       $SSH_ORIGINAL_COMMAND = "File2" ]]
 then
     /bin/cat $SSH_ORIGINAL_COMMAND
 else
     echo "Invalid file name!"
     exit 1
 fi</screen>

    <para>
     So you replace the <command>/bin/cat</command> portion with the script
     name in <filename>~/.ssh/authorized_keys</filename>, and run the
     following command to copy <filename>Foo1</filename>:
    </para>

<screen>&prompt.user;ssh <replaceable>USER</replaceable>@<replaceable>SERVERNAME</replaceable> Foo1 &gt; <replaceable>LOCAL_FILE</replaceable></screen>

    <para>
     To copy <filename>Foo 2</filename>, run:
    </para>

<screen>&prompt.user;ssh <replaceable>USER</replaceable>@<replaceable>SERVERNAME</replaceable> Foo2 &gt; <replaceable>LOCAL_FILE</replaceable></screen>

    <para>
     With the modifications above, every other variety of passed parameters
     will return errors.
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-check-perms">
    <title>Checking File Permissions and Ownership</title>

    <para>
     The following sections deal with some ways the default permissions and
     file settings can be modified to enhance the security of a host. It is
     important to note that the use of the default &productname;
     utilities like <command>seccheck</command> - can be run to lock down
     and improve the general file security and user environment. However, it
     is beneficial to understand how to modify these things.
    </para>

    <para>
     &productname; hosts include 3 defaults settings for file
     permissions: <filename>permissions.easy</filename>,
     <filename>permissions.secure</filename>, and
     <filename>permissions.paranoid</filename>, all located in the
     <filename>/etc</filename> directory. The purpose of these files is to
     define special permissions, such as world-writable directories or, for
     files, the setuser ID bit (programs with the setuser ID bit set do not
     run with the permissions of the user that has launched it, but with the
     permissions of the file owner, usually &rootuser;).
    </para>

    <para>
     Administrators can use the file
     <filename>/etc/permissions.local</filename> to add their own settings.
     The easiest way to implement one of the default permission rule-sets
     above is to use the <guimenu>Local Security</guimenu> module in
     &yast;.
    </para>

    <para>
     Each of the following topics will be modified by a selected rule-set,
     but the information is important to understand on its own.
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-umask">
    <title>Default umask</title>

    <para>
     The <command>umask</command> (user file-creation mode mask) command is
     a shell built-in command which determines the default file permissions
     for newly created files. This can be overwritten by system calls but
     many programs and utilities use <command>umask</command>. By default,
     &suse; sets <command>umask</command> to <literal>022</literal>. You
     can modify this by changing the value in
     <filename>/etc/profile</filename>.
    </para>

    <para>
     The <command>id</command> command will print out the current user
     identity information. Example from a non-root prompt:
    </para>

<screen>&prompt.user;id
uid=1000(ne0) gid=100(users) groups=16(dialout),33(video),100(users)</screen>

    <remark>jsegitz 2014-08-13: I don't really get why id is shown here
    tbazant 2014-09-01: probably to compare the command's output when root vs
    when not root</remark>

    <para>
     And to determine the active umask, use the <command>umask</command>
     command:
    </para>

<screen>&prompt.user;umask
0022</screen>

    <para>
     Now, for comparison's sake, the same commands from the root user:
    </para>

<screen>&prompt.root;id
uid=0(root) gid=0(root) groups=0(root)
&prompt.root;umask
0022</screen>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-s-bit">
    <title>SUID/SGID Files</title>

    <para>
     When the SUID (set user ID) or SGID (set group ID) bits are set on an
     executable, it executes with the UID or GID of the owner of the
     executable rather than that of the person executing it. This means
     that, for example, all executables that have the SUID bit set and are
     owned by root are executed with the UID of root. A good example is the
     passwd command that allows ordinary users to update the password field
     in the /etc/shadow file which is owned by root.
    </para>

    <para>
     But SUID/SGID bits can be misused when the SUID/SGID executable has a
     security hole. Therefore, you should search the entire system for
     SUID/SGID executables and document it. For example, ensure that code
     developers do not set SUID/SGID bits on their programs if it is not an
     absolute requirement. Very often you can use workarounds like removing
     the executable bit for world/others. However, a better approach is to
     change the design of the software if possible.
    </para>

    <para>
     To search the entire system for SUID or SGID files, you can run the
     following command:
    </para>

<!-- fs 2011-10-17:
    This and the following find examples should probably also exclude /sys
-->

<screen>&prompt.root;find / -path /proc -prune -o -type f -perm '/6000' -ls</screen>

    <para>
     The <option>-prune</option> option in this example is used to skip the
     /proc file system.
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-filepermissions">
    <title>World-Writable Files</title>

    <para>
     World-writable files are a security risk since it allows anyone to
     modify them. Additionally, world-writable directories allow anyone to
     add or delete files. To locate world-writable files and directories,
     you can use the following command:
    </para>

<screen>&prompt.root;find / -path /proc -prune -o -perm -2 ! -type l -ls</screen>

    <para>
     The <option>! -type l</option> parameter skips all symbolic links since
     symbolic links are always world-writable. However, this is not a
     problem as long as the target of the link is not world-writable, which
     is checked by the above find command.
    </para>

    <para>
     World-writable directories with sticky bit&mdash;directory or file
     ownership where only the item's owner, the directory's owner, or
     &rootuser; can rename or delete files&mdash;such as the
     <filename>/tmp</filename> directory do not allow anyone except the
     owner of a file to delete or modify it in this directory. The sticky
     bit makes files stick to the user who created it and it prevents other
     users from deleting and renaming the files. Therefore, depending on the
     purpose of the directory world-writable directories with sticky are
     usually not an issue. An example is the <filename>/tmp</filename>
     directory:
    </para>

<screen>&prompt.user;ls -ld /tmp
drwxrwxrwt 18 root root 16384 Dec 23 22:20 /tmp</screen>

    <para>
     The <literal>t</literal> mode, which denotes the sticky bit, allows
     files to be deleted and renamed only if the user is the owner of this
     file or the owner of the directory.
    </para>

    <para>
     &productname; supports file capabilities to allow more fine grained
     privileges to be given to programs rather than the full power of root:
    </para>

<screen>&prompt.root;getcap -v /usr/bin/ping
      /usr/bin/ping = cap_new_raw+eip</screen>

    <para>
     The previous command only grants the CAP_NET_RAW capability to whoever
     executes ping. In case of vulnerabilities inside ping, an attacker can
     gain at most this capability in contrast to full root when granting the
     ping binary SUID root rights. Whenever possible, file capabilities
     should be chosen in favor of the suid-to-root bit. But this only
     applies when the binary is suid to root, not to other users such as
     <literal>news</literal>, <literal>lp</literal> and alike.
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-orphaned">
    <title>Orphaned or Unowned Files</title>

    <para>
     Files not owned by any user or group might not necessarily be a
     security problem in itself. However, unowned files could pose a
     security problem in the future. For example, if a new user is created
     and the new users happens to get the same UID as the unowned files
     have, then this new user will automatically become the owner of these
     files.
    </para>

    <para>
     To locate files not owned by any user or group, use the following
     command:
    </para>

<screen>&prompt.root;find / -path /proc -prune -o -nouser -o -nogroup</screen>
   </sect1>
<!-- ============================================================== -->
   <sect1 xml:id="sec-sec-prot-general-removable-media">
    <title>Restricting Access to Removable Media</title>

<!-- fate#312966 -->

    <para>
     In some environments it is required to restrict access to removable
     media such as USB storage or optical devices. The tools coming with the
     <systemitem>udisks2</systemitem> package help with such a
     configuration.
    </para>

    <procedure>
     <step>
      <para>
       Create a rules file
       <filename>/etc/polkit-1/rules.d/01-restrict-removable-media.rules</filename>
       similar to the following:
      </para>
      <screen>// Allow users in group 'mmedia_all' to mount/unmount all type of drives
// Allow users in group 'mmedia_removable' to mount/umount USB storage drives
// Allow users in group 'mmedia_optical' to mount/unmount Optical drives
polkit.addRule(function(action, subject) {
  if (/^org\.freedesktop\.udisks2\.filesystem-.*mount.*$/.test(action.id) &amp;&amp;
  action.lookup("drive.removable") == "true") {
    if (subject.isInGroup("mmedia_all")) {
      return polkit.Result.YES;
    } else {
      if (/.*optical.*/.test(action.lookup("drive.removable.media"))) {
        if (subject.isInGroup("mmedia_optical"))
        return polkit.Result.YES;
      } else if (/.*floppy.*/.test(action.lookup("drive.removable.media"))) {
        return polkit.Result.NO;
      } else if (action.lookup("drive.removable.bus") == "usb") {
        if (subject.isInGroup("mmedia_removable"))
        return polkit.Result.YES;
      }
      return polkit.Result.NO;
    }
  }
});</screen>

      <important>
       <title>Naming of the Rules File</title>
       <para>
        Rules files are processed in alphabetical order. Functions are called
        in the order they were added until one of the functions returns a
        value. Hence, to add an authorization rule that is processed before
        other rules, put it in a file in /etc/polkit-1/rules.d with a name
        that sorts before other rules files, for example
        <filename>01-restrict-removable-media.rules</filename>. Each function
        should return a value from <literal>polkit.Result</literal>.
       </para>
       <para>
        <!-- http://doccomments.provo.novell.com/comments/29432 -->
        The name of a rules file must start with a digit, otherwise it
        will be ignored.
       </para>
      </important>
     </step>
     <step>
      <para>
       Restart <systemitem>udisks2</systemitem>:
      </para>
<screen>&prompt.root;systemctl restart udisks2</screen>
     </step>
     <step>
      <para>
       Restart <systemitem>polkit</systemitem>
      </para>
<screen>&prompt.root;systemctl restart polkit</screen>
     </step>
     <step>
      <para>
       In &yast;, click <menuchoice><guimenu>Security and
       Users</guimenu><guimenu>User and Group
       Management</guimenu><guimenu>Groups</guimenu></menuchoice> to create
       the three groups <literal>mmedia_all</literal>,
       <literal>mmedia_optical</literal>, and
       <literal>mmedia_removable</literal>. Then add the users to these
       groups as wanted.
      </para>
     </step>
    </procedure>
   </sect1>
<!-- ============================================================== -->
   <sect1 xml:id="sec-sec-prot-general-accounts">
    <title>Various Account Checks</title>

    <para/>

    <sect2 xml:id="sec-sec-prot-general-accounts-unlocked">
     <title>Unlocked Accounts</title>
     <para>
      It is important that all system and vendor accounts that are not used
      for logins are locked. To get a list of unlocked accounts on your
      system, you can check for accounts that do <emphasis>not</emphasis>
      have an encrypted password string starting with <literal>!</literal>
      or <literal>*</literal> in the <filename>/etc/shadow</filename> file.
      If you lock an account using <command>passwd</command>
      <option>-l</option>, it will put a <literal>!!</literal> in front of
      the encrypted password, effectively disabling the password. If you
      lock an account using <command>usermod</command> <option>-L</option>,
      it will put a <literal>!</literal> in front of the encrypted password.
      Many system and shared accounts are usually locked by default by
      having a <literal>*</literal> or <literal>!!</literal> in the password
      field which renders the encrypted password into an invalid string.
      Hence, to get a list of all unlocked (encryptable) accounts, run
      (<command>egrep</command> is used to allow use of
      regular-expressions):
     </para>
<screen>&prompt.root;egrep -v ':\*|:\!' /etc/shadow | awk -F: '{print $1}'</screen>
     <para>
      Also make sure all accounts have a <literal>x</literal> in the
      password field in <filename>/etc/passwd</filename>. The following
      command lists all accounts that do not have a <literal>x</literal> in
      the password field:
     </para>
<screen>&prompt.root;grep -v ':x:' /etc/passwd</screen>
     <para>
      An <literal>x</literal> in the password fields means that the password
      has been shadowed, for example the encrypted password needs to be
      looked up in the <filename>/etc/shadow</filename> file. If the
      password field in <filename>/etc/passwd</filename> is empty, then the
      system will not look up the shadow file and it will not prompt the user
      for a password at the login prompt.
     </para>
    </sect2>

    <sect2 xml:id="sec-sec-prot-general-accounts-unused">
     <title>Unused Accounts</title>
     <para>
      All system or vendor accounts that are not being used by users,
      applications, by the system or by daemons should be removed from the
      system. You can use the following command to find out if there are any
      files owned by a specific account:
     </para>
<screen>&prompt.root;find / -path /proc -prune -o -user <replaceable>ACCOUNT</replaceable> -ls</screen>
     <para>
      The <option>-prune</option> option in this example is used to skip the
      /proc file system. If you are sure that an account can be deleted, you
      can remove the account using the following command:
     </para>
<screen>&prompt.root;userdel -r <replaceable>ACCOUNT</replaceable></screen>
     <para>
      Without the <option>-r</option> option <command>userdel</command> will not delete the
      user's home directory and mail spool
      (<filename>/var/spool/mail/<replaceable>USER</replaceable></filename>).
      Note that many system accounts have no home directory.
     </para>
    </sect2>
   </sect1>
<!--taroth 2014-03-19: systemd - commenting because according to fcrozat
    this hack is needed anymore, booting in single mode in
    systemd requires root password
    <sect1 id="sec-sec-prot-general-single-user">
    <title>Single User Mode Password for &rootuser;</title>

    <para>
     &suse; includes the following entry in the
     <filename>/etc/inittab</filename> file to ensure that a root password
     is required for Single User Mode logins:
    </para>

<screen>~~:S:respawn:/sbin/sulogin</screen>

    <note>
     <para>
      This works well and will even restart the sulogin if terminated, but
      it can be easily circumvented!
     </para>
    </note>

    <para>
     The &grub; prompt can accept parameters allowing the execution of an
     alternate program – like the Bash shell (for example
     <option>init=/bin/bash</option>). This will place you at a root shell
     prompt without a password. This further enhances the need to password
     protect the &grub; boot loader.
<!-\- (as discussed in
     <xref linkend="cha-setup-for-eal-securing-background-boot"/>) -\->
     </para>
   </sect1>-->
   <sect1 xml:id="sec-sec-prot-general-pw-aging">
    <title>Enabling Password Aging</title>

    <para>
     Password expiration is a general best practice&mdash;but might
     need to be excluded for some system and shared accounts (for example
     Oracle, etc.). Expiring password on those accounts could lead to system
     outages if the application account expires.
    </para>

    <para>
     Typically a corporate policy should be developed that dictates
     rules/procedures regarding password changes for system and shared
     accounts. However, normal user account passwords should expire
     automatically. The following example shows how password expiration can
     be set up for individual user accounts.
    </para>

    <para>
     The following files and parameters in the table can be used when a new
     account is created with the <command>useradd</command> command.
     Settings such as these are stored for each user account in the
     <filename>/etc/shadow</filename> file. If using the &yast; tool
     (<guimenu>User and Group Management</guimenu>) to add users, the
     settings are available on a per-user basis. Here are the various
     settings&mdash;some of which can also be system-wide (for example
     modification of <filename>/etc/login.defs</filename> and
     <filename>/etc/default/useradd</filename>):
    </para>

    <informaltable>
     <tgroup cols="3">
      <tbody>
       <row>
        <entry>
         <para>
          <filename>/etc/login.defs</filename>
         </para>
        </entry>
        <entry>
         <para>
          <literal>PASS_MAX_DAYS</literal>
         </para>
        </entry>
        <entry>
         <para>
          Maximum number of days a password is valid.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <filename>/etc/login.defs</filename>
         </para>
        </entry>
        <entry>
         <para>
          <literal>PASS_MIN_DAYS</literal>
         </para>
        </entry>
        <entry>
         <para>
          Minimum number of days before a user can change the password since
          the last change.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <filename>/etc/login.defs</filename>
         </para>
        </entry>
        <entry>
         <para>
          <literal>PASS_WARN_AGE</literal>
         </para>
        </entry>
        <entry>
         <para>
          Number of days when the password change reminder starts.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <filename>/etc/default/useradd</filename>
         </para>
        </entry>
        <entry>
         <para>
          <literal>INACTIVE</literal>
         </para>
        </entry>
        <entry>
         <para>
          Number of days after password expiration that account is disabled.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          <filename>/etc/default/useradd</filename>
         </para>
        </entry>
        <entry>
         <para>
          <literal>EXPIRE</literal>
         </para>
        </entry>
        <entry>
         <para>
          Account expiration date in the format YYYY-MM-DD.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>

    <note>
     <para>
      Users created prior to these modifications will not be affected.
     </para>
    </note>

    <para>
     Ensure that the above parameters are changed in the
     <filename>/etc/login.defs</filename> and
     <filename>/etc/default/useradd</filename> files. Review of the
     <filename>/etc/shadow</filename> file will show how these settings get
     stored after adding a user.
    </para>

    <para>
     To create a new user account, execute the following command:
    </para>

<screen>&prompt.root;useradd -c "<replaceable>TEST_USER</replaceable>" -g <replaceable>USERS</replaceable> <replaceable>TEST</replaceable></screen>

    <para>
     The <option>-g</option> option specifies the primary group for this
     account:
    </para>

<screen>&prompt.root;id <replaceable>TEST</replaceable>
uid=509(test) gid=100(users) groups=100(users)</screen>

    <para>
     The settings in <filename>/etc/login.defs</filename> and
     <filename>/etc/default/useradd</filename> are recorded for the test
     user in the <filename>/etc/shadow</filename> file as follows:
    </para>

<screen>&prompt.root;grep <replaceable>TEST</replaceable> /etc/shadow
test:!!:12742:7:60:7:14::</screen>

    <para>
     Password aging can be modified at any time by use of the
     <command>chage</command> command. To disable password aging for system
     and shared accounts, you can run the following <command>chage</command> command:
    </para>

<screen>&prompt.root;chage -M -1 <replaceable>SYSTEM_ACCOUNT_NAME</replaceable></screen>

    <para>
     To get password expiration information:
    </para>

<screen>&prompt.root;chage -l <replaceable>SYSTEM_ACCOUNT_NAME</replaceable></screen>

    <para>
     For example:
    </para>

<screen>&prompt.root;chage -l <replaceable>TEST</replaceable>
Minimum: 7
Maximum: 60
Warning: 7
Inactive: 14
Last Change: Jan 11, 2015
Password Expires: Mar 12, 2015
Password Inactive: Mar 26, 2015
Account Expires: Never</screen>
   </sect1>
   <sect1 xml:id="sec-sec-prot-general-pw-strength">
    <title>Stronger Password Enforcement</title>

    <para>
     On an audited system it is important to restrict people from using
     simple passwords that can be cracked too easily. Writing down complex
     passwords is all right as long as they are stored securely. Some will
     argue that strong passwords protect you against dictionary attacks and
     those type of attacks can be defeated by locking accounts after a few
     failed attempts. However, this is not always an option. If set up like
     this, locking system accounts could bring down your applications and
     systems which would be nothing short of a denial of service attack –
     another issue.
    </para>

    <para>
     At any rate, it is important to practice effective password management
     safety. Most companies require that passwords have at the very least a
     number, one lowercase letter, and one uppercase letter. Policies vary,
     but maintaining a balance between password strength/complexity and
     management is sometimes difficult.
    </para>
   </sect1>

   <xi:include href="hardening_pam_stack.xml"/>

   <sect1 xml:id="sec-sec-prot-dos">
    <title>Preventing Accidental Denial of Service</title>

    <para>
     Linux allows you to set limits on the amount of system resources that
     users and groups can consume. This is also very handy if bugs in
     programs cause them to use up too much resources (for example memory
     leaks), slow down the machine, or even render the system unusable.
     Incorrect settings can allow programs to use too many resources which
     may make the server unresponsive to new connections or even local
     logins (for example if a program uses up all available file handles on
     the host). This can also be a security concern if someone is allowed to
     consume all system resources and therefore cause a denial of service
     attack – either unplanned or worse, planned. Setting resource limits
     for users and groups may be an effective way to protect systems,
     depending on the environment.
    </para>

    <sect2 xml:id="sec-sec-prot-dos-restrict-ressources">
     <title>Example for Restricting System Resources</title>
     <para>
      The following example demonstrates the practical usage of setting or
      restricting system resource consumption for an Oracle user account.
      For a list of system resource settings, see
      <filename>/etc/security/limits.conf</filename> or <command>man
      limits.conf</command>.
     </para>
     <para>
      Most shells like Bash provide control over various resources (for
      example the maximum allowable number of open file descriptors or the
      maximum number of processes) that are available on a per/user basis.
      To examine all current limits in the shell execute:
     </para>
<screen>&prompt.root;ulimit -a</screen>
     <para>
      For more information on <command>ulimit</command> for the Bash shell,
      examine the Bash man pages.
     </para>
     <important>
      <title>Setting Limits for SSH Sessions</title>
      <para>
       Setting "hard" and "soft" limits might not behave as expected when
       using an SSH session. To see valid behavior it may be necessary to
       login as root and then su to the id with limits (for example,
       <literal>oracle</literal> in these examples). Resource limits should
       also work assuming the application has been started automatically
       during the boot process. It may be necessary to set
       <option>UsePrivilegeSeparation</option> in
       <filename>/etc/ssh/sshd_config</filename> to "no" and restart the SSH
       daemon (<command>systemctl restart sshd</command>) if it
       seems that the changes to resource limits are not working (via SSH).
       However this is not generally recommended – as it weakens a systems
       security.
      </para>
     </important>
     <tip>
      <title>Disabling Password Logins via <command>ssh</command></title>
      <para>
       You can add some extra security to your server by disabling password
       authentication for SSH. Remember that you need to have SSH keys
       configured, otherwise you cannot access the server. To disable
       password login, add the following lines to
       <filename>/etc/ssh/sshd_config</filename>:
      </para>
<screen>UseLogin no
UsePAM no
PasswordAuthentication no
PubkeyAuthentication yes</screen>
     </tip>
     <para>
      In this example, a change to the number of file handles or open files
      that the user <literal>oracle</literal> can use is made by editing
      <filename>/etc/security/limits.conf</filename> as &rootuser; making
      the following changes:
     </para>
<screen>oracle           soft    nofile          4096
oracle           hard    nofile          63536</screen>
     <para>
      The soft limit in the first line defines the limit on the number of
      file handles (open files) that the
      <systemitem class="username">oracle</systemitem> user will have after
      login. If the user sees error messages about running out of file
      handles, then the user can increase the number of file handles like in
      this example up to the hard limit (in this example 63536) by
      executing:
     </para>
<screen>&prompt.root;ulimit -n 63536</screen>
     <para>
      You can set the soft and hard limits higher if necessary.
     </para>
     <note>
      <para>
       It is important to be judicious with the usage of ulimits.
       Allowing a "hard" limit for <quote>nofile</quote> for a user that
       equals the kernel limit (<filename>/proc/sys/fs/file-max</filename>)
       is very bad! If the user consumes all the available file handles,
       the system cannot initiate new logins as accessing (opening) PAM
       modules which are required for performing a login will not be
       possible.
      </para>
     </note>
     <para>
      You also need to ensure that <literal>pam_limits</literal> is either
      configured globally in <filename>/etc/pam.d/common-auth</filename>, or
      for individual services like SSH, su, login, and telnet in:
     </para>
     <simplelist>
      <member><filename>/etc/pam.d/sshd</filename> (for SSH)</member>
      <member><filename>/etc/pam.d/su</filename> (for su)</member>
      <member><filename>/etc/pam.d/login</filename> (local logins and telnet)</member>
     </simplelist>
     <para>
      If you do not want to enable it for all logins, there is a specific PAM
      module that will read the
      <filename>/etc/security/limits.conf</filename> file. Entries in pam
      configuration directives will have entries like:
     </para>
<screen>session     required      /lib/security/pam_limits.so
session     required      /lib/security/pam_unix.so</screen>
     <para>
      It is important to note that changes are not immediate and require a
      new login session:
     </para>
<screen>&prompt.root;su – oracle
&prompt.user;ulimit -n
4096</screen>
     <para>
      Note that these examples are specific to the Bash shell -
      <command>ulimit</command> options are different for other shells. The
      default limit for the user <literal>oracle</literal> is
      <literal>4096</literal>. To increase the number of file handles the
      user <literal>oracle</literal> can use to <literal>63536</literal>,
      do:
     </para>
<screen>&prompt.root;su – oracle
&prompt.user;ulimit -n
4096
&prompt.user;ulimit -n 63536
&prompt.user;ulimit -n
63536</screen>
     <para>
      Making this permanent requires the addition of the setting,
      <literal>ulimit -n 63536</literal>, (again, for Bash) to the users
      profile (<filename>~/.bashrc</filename> or
      <filename>~/.profile</filename> file) which is the user start-up file
      for the Bash shell on &productname; (to verify your shell run: echo
      <envar>$SHELL</envar>). To do this you could simply type (or
      copy/paste – if you are reading this on the system) the following
      commands for the Bash shell of the user <literal>oracle</literal>:
     </para>
<screen>&prompt.root;su - oracle
&prompt.user;cat &gt;&gt; ~oracle/.bash_profile &lt;&lt; EOF
ulimit -n 63536
EOF</screen>
    </sect2>
   </sect1>
   <sect1 xml:id="sec-sec-prot-banners">
    <title>Displaying Login Banners</title>

    <para>
     It is often necessary to place a banner on login screens on all servers
     for legal/audit policy reasons and to deter intruders, etc.
    </para>

    <para>
     If you want to print a legal banner after a user logs in using SSH,
     local console, etc., you can leverage the <filename>/etc/motd</filename>
     (motd = message of the day) file. The file exists on &suse;,
     however it is empty. Simply add content to the file that is
     applicable/required by the organization.
    </para>

    <note>
     <title>Banner Length</title>
     <para>
      Try to keep the content to a single page (or less), as it will
      scroll the screen if it does not fit.
     </para>
    </note>

    <para>
     For SSH you can edit the <quote>Banner</quote> parameter in the
     <filename>/etc/ssh/sshd_config</filename> file which will then
     appropriately display the banner text before the login prompt. For
     local console logins you can edit the <filename>/etc/issue</filename>
     file which will display the banner before the login prompt. For GDM,
     you could make the following changes to require a user to acknowledge
     the legal banner by selecting <guimenu>Yes</guimenu> or
     <guimenu>No</guimenu>. Edit the
     <filename>/etc/gdm/PreSession/Default</filename> file and add the
     following lines at the beginning of the script:
    </para>

<screen>if ! gdialog --yesno '\n<replaceable>This system is classified...</replaceable>\n' 10 10; then
    sleep 10
    exit 1;
fi</screen>

    <para>
     The <replaceable>This system is classified...</replaceable> test should
     be replaced with the valid text. It is important to note that this
     dialog will not prevent a login from progressing.
    </para>
   </sect1>
   <sect1 xml:id="sec-sec-prot-misc">
    <title>Miscellaneous</title>

    <para/>

    <sect2 xml:id="sec-sec-prot-misc-aide">
     <title>Host-Based Linux Monitoring and Intrusion Detection</title>
     <para>
      Before you place a host into production or even on a network, consider
      the use of a system integrity checker, like
      <command>seccheck</command> (already discussed in
      <xref linkend="sec-sec-prot-general-seccheck"/>), so in case
      of unauthorized changes, notifications will be issued. Also consider
      the use of an intrusion detection environment, like AIDE, the
      Advanced Intrusion Detection Environment.
     </para>
     <para>
      AIDE is a GPL licensed and open source intrusion detection system. It
      could be considered a system fingerprinting mechanism. AIDE works by
      creating a database containing information about the files on your
      system. The database is created from rules laid out in the
      configuration file aide.conf. When AIDE is run, this database is
      referenced to check for changes (or created for the first time).
      Assuming a comparison check is being run, any changes not permitted by
      the configuration file are reported.
     </para>
     <para>
      By leveraging AIDE&mdash;storing a copy of the host's database in a
      secure location&mdash;and comparing it (on a scheduled basis or as
      part of a forensic effort), system integrity/insurance can be a matter
      of heuristics and procedure. If an intruder compromises your system,
      the comparison effort will enable an administrator or security officer
      to know what has changed on the host. The initial database should be
      created as a final step&mdash;<emphasis>before</emphasis> a system gets
      deployed into production.
     </para>
     <para>
      It is outside the scope of this article to cover Linux Monitoring and
      detailed Intrusion Detection systems (IDS) or solutions, however
      there is a plethora of information about configuring AIDE or other
      solutions and many informative articles on the Web.
     </para>
    </sect2>

    <sect2 xml:id="sec-sec-prot-misc-account-utils">
     <title>Connect Accounting Utilities</title>
     <para>
      Here is a list of commands you can use to get data about user logins:
     </para>
     <formalpara>
      <title><command>who</command></title>
      <para>
       Lists currently logged in users.
      </para>
     </formalpara>
     <formalpara>
      <title><command>w</command></title>
      <para>
       Shows who is logged in and what they are doing.
      </para>
     </formalpara>
     <formalpara>
      <title><command>last</command></title>
      <para>
       Shows a list of last logged in users, including login time, logout
       time, login IP address, etc.
      </para>
     </formalpara>
     <formalpara>
      <title><command>lastb</command></title>
      <para>
       Same as <command>last</command>, except that by default it shows
       <filename>/var/log/btmp</filename>, which contains all the bad login
       attempts.
      </para>
     </formalpara>
     <formalpara>
      <title><command>lastlog</command></title>
      <para>
       <remark>jsegitz 2014-08-14: not available anymore, see above
       tbazant 2014-09-01: i have it in sle 12 rc2</remark>
       This command reports data maintained in
       <filename>/var/log/lastlog</filename>, which is a record of the last
       time a user logged in.
      </para>
     </formalpara>
     <formalpara>
      <title><command>ac</command></title>
      <para>
       Available after installing the <systemitem>acct</systemitem> package.
       Prints the connect time in hours on a per-user basis or daily basis,
       etc. This command reads <filename>/var/log/wtmp</filename>.
      </para>
     </formalpara>
     <formalpara>
      <title><command>dump-utmp</command></title>
      <para>
       Converts raw data from /var/run/utmp or
       <filename>/var/log/wtmp</filename> into ASCII-parsable format.
      </para>
     </formalpara>
     <para>
      Also check the <filename>/var/log/messages</filename> file, or the
      output of <command>journalctl</command> if no logging facility is
      running. See <xref linkend="cha-journalctl"/> for more information on
      the &systemd; journal.
     </para>
    </sect2>

    <sect2 xml:id="sec-sec-prot-misc-other">
     <title>Other</title>
     <para>
      Finally, the following items are relevant to the system security as
      well, and misconfiguration can cause many problems – and should be
      reviewed:
     </para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        Resolver (<filename>/etc/hosts</filename>,
        <filename>/etc/resolv.conf</filename>,
        <filename>/etc/nsswitch.conf</filename>).
       </para>
      </listitem>
      <listitem>
       <para>
        NTP configuration (<filename>/etc/ntp.conf</filename>).
       </para>
      </listitem>
     </itemizedlist>
    </sect2>
   </sect1>
  </chapter>
 </part>
 <!--<appendix xml:id="app-hardening-docupdates">
<!-\-list of xrefs, latest date sorted upmost-\->
  <title>Documentation Updates</title>
  <info/>
  <para>
   This chapter lists content changes for this document since the release of
   &productnamereg; 11 SP3.
  </para>
  <para>
   This manual was updated on the following dates:
  </para>
<!-\-list of xrefs, latest date sorted upmost-\->
  <itemizedlist>
  <listitem>
   <para>
    <xref linkend="sec-hardening-docupdates-sle12-sp2-ga" xrefstyle="SectTitleOnPage"/>
   </para>
  </listitem>
  <listitem>
   <para>
    <xref linkend="sec-hardening-docupdates-sle12-sp1" xrefstyle="SectTitleOnPage"/>
   </para>
  </listitem>
   <listitem>
    <para>
     <xref linkend="sec-hardening-docupdates-sle12-ga-maint1" xrefstyle="SectTitleOnPage"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec-hardening-docupdates-sle12-ga" xrefstyle="SectTitleOnPage"/>
    </para>
   </listitem>
  </itemizedlist>

 <sect1 xml:id="sec-hardening-docupdates-sle12-sp2-ga">
  <title>November 2016 (Initial Release of &productname; 12 SP2)</title>
  <variablelist>
   <varlistentry>
    <term>All sections</term>
    <listitem>
     <para>Unified input line style.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><xref linkend="sec-sec-prot-general-scp"/></term>
    <listitem>
     <para>Replaced depricated ~/.ssh/authorized_keys2 and rsa-dss</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><xref linkend="sec-sec-prot-general-bios"/></term>
    <listitem>
     <para>Referenced UEFI</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><xref linkend="sec-sec-prot-general-pam-pw-previous"/></term>
    <listitem>
     <para>
      Fix configuration description (<link
      xlink:href="https://bugzilla.suse.com/show_bug.cgi?id=977984"/>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><xref linkend="sec-sec-prot-general-removable-media"/></term>
    <listitem>
     <para>
      Name of rules files must start with a digit (Doc comment #29432).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><xref linkend="sec-sec-prot-general-retiring"/></term>
    <listitem>
     <para>More information about wiping files, wear leveling devices</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><xref linkend="sec-sec-prot-general-add-random"/></term>
    <listitem>
     <para>Address Space Layout Randomization and No Execute bit do not
      prevent buffer overflows but buffer overflow attacks.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Bugfixes</term>
    <listitem>
     <para>
      PAM related fixes (<link
      xlink:href="https://bugzilla.suse.com/show_bug.cgi?id=978001"/>, <link
      xlink:href="https://bugzilla.suse.com/show_bug.cgi?id=977984"/>, <link
      xlink:href="https://bugzilla.suse.com/show_bug.cgi?id=977988"/>).
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-hardening-docupdates-sle12-sp1">
  <title>December 2015 (Initial Release of &productname; 12 SP1)</title>
  <!-\-list of general issues that apply to all books-\->
  <xi:include href="common_docupdates_sp1_i.xml"/>
  <variablelist>
   <varlistentry>
    <term></term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        Added <xref linkend="sec-sec-prot-general-patching-suma"/> (Doc
        comment #26206).
       </para>
      </listitem>
      <listitem>
       <para>
        Added <xref linkend="sec-sec-prot-general-devmem"/> (Fate #315172).
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Bugfixes</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        Access to Removable Media Cannot be Restricted as Described
        (<link
        xlink:href="https://bugzilla.suse.com/show_bug.cgi?id=929918"/>).
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
  </variablelist>
  </sect1>

  <sect1 xml:id="sec-hardening-docupdates-sle12-ga-maint1">
   <title>February 2015 (Documentation Maintenance Update)</title>

   <variablelist>
    <varlistentry>
     <term>Bugfixes</term>
     <listitem>
      <itemizedlist>
       <listitem>
        <para>
         SLES hardening documentation wrong/incomplete&mdash;password strength
         (<link
         xlink:href="https://bugzilla.suse.com/show_bug.cgi?id=907754"/>).
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect1>
  <sect1 xml:id="sec-hardening-docupdates-sle12-ga">
   <title>October 2014 (Initial Release of &productname; 12)</title>
   <!-\-list of general issues that apply to all books-\->
   <xi:include href="common_docupdates_ga_i.xml"/>
   <variablelist>
    <varlistentry>
<!-\- Retiring Linux Servers with Sensitive Data -\->
     <term><xref linkend="sec-sec-prot-general-retiring"/>
     </term>
     <listitem>
      <itemizedlist mark="bullet" spacing="normal">
       <listitem>
<!-\- FATE #315530 'RDRAND enabling for scrub/diskscrub' -\->
        <para>
         Added <xref linkend="sec-sec-prot-general-retiring-scrub"/> (Fate
         #315530).
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
<!-\- Security Features in the Kernel -\->
     <term><xref linkend="sec-sec-prot-general-add-random"/>
     </term>
     <listitem>
      <itemizedlist mark="bullet" spacing="normal">
       <listitem>
<!-\- FATE #315175 'hardening: restrict dmesg' -\->
        <para>
         Added <xref linkend="sec-sec-prot-general-dmesg"/> (Fate #315175).
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
<!-\- Verifying Security Action with seccheck -\->
     <term><xref linkend="sec-sec-prot-general-seccheck"/>
     </term>
     <listitem>
      <itemizedlist mark="bullet" spacing="normal">
       <listitem>
<!-\- FATE #312303 'Idle autologout capability for shell console' -\->
        <para>
         Added <xref linkend="sec-sec-prot-general-seccheck-config"/> (Fate
         #312303).
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Obsolete Content</term>
     <listitem>
      <itemizedlist mark="bullet" spacing="normal">
       <listitem>
        <para/>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
<!-\-list all bugfixes/doc comments fixes here and add ulink for them -\->
    <varlistentry>
     <term>Bugfixes</term>
     <listitem>
      <itemizedlist mark="bullet" spacing="normal">
       <listitem>
<!-\- BNC #892282, Remove documentation references to ZENworks Linux
      Management -\->
        <para>
         Removed all content about or references to ZENworks Linux
         Management.
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect1>
 </appendix>-->
</book>
