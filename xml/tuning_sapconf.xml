<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-tuning-sapconf">
 <info>
  <title>Tuning &sle; for &sap;</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  This chapter presents information about preparing and tuning &productname;
  to work optimally with &sap; applications with &sapconf;. &sapconf; is for
  &sle; systems that install &sap; applications. Customers who have
  &sles4sap; should use &saptune;.
 </para>

 <note>
   <title>The <command>sapconf</command> command has been removed</title>
   <para>
    In &sls; and &productname; 11 and 12, the <command>sapconf</command> command
    was included in the package with the same name.
  </para>
  <para>
    For &sls; and &productname; 15, this has been changed:
    The command <command>sapconf</command> has been removed from the
    <package>sapconf</package> package. The package contains a &systemd; service
    only. There is no &sapconf; command line tool anymore, no &sapconf;/&tuned; profiles,
    and no &tuned;.
   </para>
  </note>

  <sect1 xml:id="sec-sapconf-5">
  <title>Tuning &slea; Systems with &sapconf; 5</title>
  <para>
   The package <systemitem>sapconf</systemitem> is available in &sls; and &s4s;.
   It sets recommended parameters for the following types of &sap; applications:
   &netweaver;, &hana;, and &hana;-based applications.
  </para>

  <variablelist>
   <title>Overview of &sapconf;5 in &slsreg;&nbsp;12</title>
   <varlistentry>
    <term>&sapconf;5 (without &tuned;)</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para><systemitem>sapconf-netweaver</systemitem> (&sapconf; profile as a replacement for &tuned; profile)</para>
      </listitem>
      <listitem>
       <para><systemitem>sapconf-hana</systemitem> (&sapconf; profile as a replacement for &tuned; profile)</para>
      </listitem>
      <listitem>
       <para><systemitem>sapconf-bobj</systemitem> (&sapconf; profile as a replacement for &tuned; profile)</para>
      </listitem>
      <listitem>
       <para><systemitem>sapconf-ase</systemitem> (&sapconf; profile as a replacement for &tuned; profile)</para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
  </variablelist>

  <variablelist>
   <title>Overview of &sapconf;5 in &slsreg;&nbsp;15</title>
   <varlistentry>
    <term>&sapconf;5 (without &tuned;)</term>
    <listitem>
     <para>no profiles anymore</para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   Note that if you previously made changes to the system tuning, those
   changes may be overwritten by &sapconf;.
  </para>
  <para>
   &sapconf;&nbsp;5 ships a &systemd; service which applies the tuning and ensures that
   related services are running.
  </para>
  <para>
   To use &sapconf;, make sure
   that the package <package>sapconf</package> is installed on your system.
  </para>

  <note>
   <title>No profiles in &sls; and &productname;Â &productnumber;</title>
   <para>
    In &sls; and &productname; 15, &sapconf; no longer supports profiles.
   </para>
  </note>

  <sect2 xml:id="sec-sapconf-5-verify">
   <title>Verifying &sapconf; setup</title>
   <para>
    With &sapconf; 5.0.2 and up, the check tool <command>sapconf_check</command> is available,
    which verifies the correct setup of &sapconf;. For example:
   </para>
   <screen>&prompt.root;<command>sapconf_check</command>
This is sapconf_check v1.0.
It verifies if sapconf is set up correctly and will give advice to do so.
Please keep in mind:
{{ - This tool does not check, if the tuning itself works correctly.}}
{{ - Follow the hints from top to down to minimize side effects.}}
Checking sapconf
================
[ OK ] sapconf package has version 5.0.2
[ OK ] saptune.service is inactive
[ OK ] saptune.service is disabled
[WARN] tuned.service is enabled/active with profile 'virtual-guest -> Sapconf does not require tuned! Run 'systemctl stop tuned.service', if not needed otherwise.
[FAIL] sapconf.service is inactive -> Run 'systemctl start sapconf.service' to activate the tuning now.
[FAIL] sapconf.service is disabled -> Run 'systemctl enable sapconf.service' to activate sapconf at boot.1 warning(s) have been found.
2 error(s) have been found.
Sapconf will not work properly!</screen>
   <para>
    If <command>sapconf_check</command> finds problems, it will give hints
    on how to resolve the issue.
    The tool will not verify whether the system has been tuned correctly. It
    only checks that &sapconf;
    is set up correctly and has been started.
   </para>
  </sect2>

  <sect2 xml:id="sec-sapconf-5-enable">
   <title>Enabling and disabling &sapconf; and viewing its status</title>
   <para>
    After the installation of &sapconf;, the &sapconf; service is enabled.
   </para>
   <para>
    You can inspect or change the status of &sapconf; as described in the
    following:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      To see the status of the service
      <systemitem class="daemon">sapconf</systemitem>:
     </para>
     <screen>&prompt.root;<command>systemctl status sapconf</command></screen>
     <para>
      The service should be displayed as <emphasis>active (exited)</emphasis>.
     </para>
    </listitem>
    <listitem>
     <para>
      To start the service
      <systemitem class="daemon">sapconf</systemitem>:
     </para>
     <screen>&prompt.root;<command>systemctl start sapconf</command></screen>
    </listitem>
    <listitem>
     <para>
      Should <systemitem class="daemon">sapconf</systemitem> be disabled,
      enable and start it with:
     </para>
     <screen>&prompt.root;<command>systemctl enable --now sapconf</command></screen>
    </listitem>
    <listitem>
     <para>
      To stop the service
      <systemitem class="daemon">sapconf</systemitem>:
     </para>
     <screen>&prompt.root;<command>systemctl stop sapconf</command></screen>
     <para>
      This command will disable the vast majority of optimizations immediately. The only
      exceptions from this rule are options that require a system reboot to enable/disable.
     </para>
    </listitem>
    <listitem>
     <para>
      To disable <systemitem class="daemon">sapconf</systemitem>, use:
     </para>
     <screen>&prompt.root;<command>systemctl disable sapconf</command></screen>
     <para>
      If you have not specifically enabled any of the services that &sapconf;
      depends on yourself, this will also disable most tuning parameters and
      all services used by &sapconf;.
     </para>
    </listitem>
   </itemizedlist>

   <tip>
    <title>Additional services that &sapconf; relies on</title>
    <para>
     In addition to the &sapconf; service it also relies on the following two services:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <systemitem class="daemon">sysstat</systemitem> which collects data on
       system activity.
      </para>
     </listitem>
     <listitem>
      <para>
       <systemitem class="daemon">uuidd</systemitem> which generates time-based
       UUIDs that are guaranteed to be unique even in settings where many
       processor cores are involved. This is necessary for &sap; applications.
      </para>
     </listitem>
    </itemizedlist>
   </tip>
  </sect2>
  <sect2 xml:id="sec-sapconf-5-configure">
   <title>Configuring &sapconf;5</title>
   <para>
    In general, the default configuration of &sapconf; already uses the
    parameter values recommended by &sap;. However, if you have special
    needs, you can configure the tool to better suit those.
   </para>
   <para>
    All parameters of &sapconf; can be found in the file
    <filename>/etc/sysconfig/sapconf</filename>.
    The file can be edited directly. All parameters in this file are
    explained by means of comments and references to &sap; Notes, which can
    be viewed at <link xlink:href="https://launchpad.support.sap.com/"/>.
   </para>
   <para>
    When &sapconf; is updated, all customized parameters from this file will
    be preserved as much as possible. However, sometimes parameters cannot
    be transferred cleanly to the new configuration file. Therefore, after
    updating it is advisable to check the difference between the previous
    custom configuration, which during the update is moved to
    <filename>/etc/sysconfig/sapconf.rpmsave</filename>,
    and the new version at <filename>/etc/sysconfig/sapconf</filename>.
   </para>
   <para>
    Log messages related to this file are written to
    <filename>/var/log/sapconf.log</filename>.
   </para>
   <para>
    When editing either of these files, you will find that some values are
    commented by means of a <literal>#</literal> character at the beginning of
    the line. This means that while the parameter is relevant for tuning, there
    is no suitable default for it.
   </para>
   <para>
    Conversely, you can add <literal>#</literal> characters to the beginning of
    the line to comment specific parameters. However, you should avoid this
    practice, as it can lead to &sapconf; not properly applying the profile.
   </para>
   <para>
    To apply the edited configuration, restart &sapconf;:
   </para>
   <screen>&prompt.root;<command>systemctl restart sapconf</command></screen>
   <para>
    Confirming that a certain parameter value was applied correctly works
    differently for different parameters. Hence, the following serves as an
    example only:
   </para>
   <example xml:id="ex-sapconf-change-parameter-5">
    <title>Checking Parameters</title>
    <para>
     To confirm that the setting for <literal>TCP_SLOW_START</literal> was
     applied, do the following:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       View the log file of &sapconf; to see whether it applied the value.
       Within <filename>/var/log/sapconf.log</filename>, check for a line
       containing this text:
      </para>
      <screen>Change net.ipv4.tcp_slow_start_after_idle from 1 to 0</screen>
      <para>
       Alternatively, the parameter may have already been set correctly
       before &sapconf; was started. In this case, &sapconf; will not change
       its value:
      </para>
      <screen>Leaving net.ipv4.tcp_slow_start_after_idle unchanged at 1</screen>
     </listitem>
     <listitem>
      <para>
       The underlying option behind <literal>TCP_SLOW_START</literal> can be
       manually configured at
       <filename>/proc/sys/net.ipv4.tcp_slow_start_after_idle</filename>.
       To check its actual current value, use:
      </para>
      <screen>&prompt.root;<command>sysctl net.ipv4.tcp_slow_start_after_idle</command></screen>
     </listitem>
    </itemizedlist>
   </example>
  </sect2>
  <sect2 xml:id="sec-sapconf-5-remove">
   <title>Removing &sapconf;</title>
   <para>
    To remove &sapconf; from a system, uninstall its package with:
   </para>
   <screen>&prompt.root;<command>zypper rm sapconf</command></screen>
   <para>
    Note that when doing this, dependencies of &sapconf; will remain installed.
    However, the service <systemitem class="daemon">sysstat</systemitem> will
    go into a disabled state. If it is still relevant to you, make sure to
    enable it again.
   </para>
  </sect2>
  <sect2 xml:id="sec-sapconf-5-more">
   <title>For more information</title>
   <para>
    The following man pages provide additional information about &sapconf;:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Detailed description of all tuning parameters set by &sapconf;:
      <command>man 5 sapconf</command>
     </para>
    </listitem>
    <listitem>
     <para>
      Information about configuring and customizing the &sapconf; profile:
      <command>man 7 sapconf</command>
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Also see the blog series detailing the updated version of &sapconf; at
    <link xlink:href="https://www.suse.com/c/a-new-sapconf-is-available/"/>.
   </para>
  </sect2>
  <sect2 xml:id="sec-sapconf-5-tuned">
   <title>Using <command>tuned</command> together with  &sapconf;</title>
   <para>
    With version 5, &sapconf; does not rely on &tuned; anymore. This means both tools
    can be used independently.
    &sapconf; will print a warning in its log if the <command>tuned</command> service
    is started.
   </para>
   <important>
    <title>Using <command>tuned</command> and &sapconf; together</title>
    <para>
     If you are going to use <command>tuned</command> and &sapconf; simultaneously,
     be very careful, that both tools do not configure the same system parameters.
    </para>
   </important>
  </sect2>
 </sect1>
</chapter>
