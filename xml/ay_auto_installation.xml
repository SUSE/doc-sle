<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" 
xmlns:xi="http://www.w3.org/2001/XInclude" 
xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" 
xml:id="Invoking">

 <title>The Auto-Installation Process</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

  <sect1 xml:id="Installation-process">
   <title>Introduction</title>

   <para>
    After the system has booted into an automatic installation and the
    control file has been retrieved, &yast; configures the system
    according to the information provided in the control file. All
    configuration settings are summarized in a window that is shown by
    default and should be deactivated if a fully automatic installation is
    needed.
   </para>

   <para>
    By the time &yast; displays the summary of the configuration,
    &yast; has only probed hardware and prepared the system for
    auto-installation. Nothing has been changed in the system yet. In case
    of any error, you can still abort the process.
   </para>

   <para>
    A system should be automatically installable without the need to have
    any graphic adapter or monitor. Having a monitor attached to the client
    machine is nevertheless recommended so you can supervise the process and
    to get feedback in case of errors. Choose between the graphical and the
    text-based Ncurses interfaces. For headless clients, system messages can
    be monitored using the serial console.
   </para>

   <sect2 xml:id="Installation-Interface-X11">
    <title>X11 Interface (graphical)</title>
    <para>
     This is the default interface while auto-installing. No special
     variables are required to activate it.
    </para>
   </sect2>

   <sect2 xml:id="Installation-Interface-SerialConsole">
    <title>Serial Console</title>
    <para>
     Start installing a system using the serial console by adding the
     keyword <literal>console</literal> (for example
     <literal>console=ttyS0</literal>) to the command line of the kernel.
     This starts <command>linuxrc</command> in console mode and later &yast; in
     serial console mode.
    </para>
   </sect2>

   <sect2 xml:id="Installation-Interface-Ncurses">
    <title>Text-based &yast; Installation</title>
    <para>
     This option can also be activated on the command line. To start
     &yast; in text mode, add <literal>textmode=1</literal> on the
     command line.
    </para>
    <para>
     Starting &yast; in the text mode is recommended when installing a client
     with less than 64 MB or when X11 should not be configured, especially
     on headless machines.
    </para>
   </sect2>
  </sect1>
  <sect1 xml:id="bootmedium">
   <title>Choosing the Right Boot Medium</title>

   <para>
    There are different methods for booting the client. The computer can
    boot from its network interface card (NIC) to receive the boot images
    via DHCP or TFTP. Alternatively a suitable kernel and initrd image can
    be loaded from a flash disk (for example, a USB stick) or a bootable
    DVD-ROM.
   </para>

   <para>
    &yast; will check for <filename>autoinst.xml</filename> in the root
    directory of the boot medium or the initrd upon start-up and switch to
    an automated installation if it was found. In case the control file is
    named differently or located elsewhere, specify its location on the
    kernel command line with the parameter
    <literal>&ay;=<replaceable>URL</replaceable></literal>.
   </para>

   <sect2 xml:id="bootmedium-flash">
    <title>Booting from a Flash Disk (for example, a USB stick)</title>
    <para>
     For testing/rescue purposes or because the NIC does not have a PROM or
     PXE you can build a bootable flash disk to use with &ay;. Flash
     disks can also store the control file.
    </para>
    <tip>
     <title>
      Copying the Installation Media Image to a Removable Flash Disk
     </title>
     <para>
      Use the following command to copy the contents of the installation image
      to a removable flash disk.
     </para>
     <screen>&prompt.sudo;dd if=<replaceable>IMAGE</replaceable> of=<replaceable>FLASH_DISK</replaceable> bs=4M &amp;&amp; sync</screen>
     <para>
      <replaceable>IMAGE</replaceable> needs to be replaced with the path to the
      <filename>&installmedia;</filename> or <filename>&packagemedia;</filename>
      image file. <replaceable>FLASH_DISK</replaceable> needs to be replaced
      with the flash device. To identify the device, insert it and run:
     </para>
     <screen>&prompt.root;grep -Ff &lt;(hwinfo --disk --short) &lt;(hwinfo --usb --short)
      disk:
      /dev/sdc             General USB Flash Disk</screen>
     <para>
      Make sure the size of the device is sufficient for the desired image. You
      can check the size of the device with:
     </para>
     <screen>&prompt.root;fdisk -l /dev/sdc | grep -e "^/dev"
      /dev/sdc1  *     2048 31490047 31488000  15G 83 Linux</screen>
     <para>
      In this example, the device has a capacity of 15 GB. The command to use for
      the <filename>&packagemedia;</filename> would be:
     </para>
     <screen>dd if=&packagemedia; of=/dev/sdc1 bs=4M &amp;&amp; sync</screen>
     <para>
      The device must not be mounted when running the <command>dd</command>
      command. Note that all data on the partition will be erased!
     </para>
    </tip>
   </sect2>

   <sect2 xml:id="bootmedium-installer">
    <title>Booting from the &sle; Installation Media</title>
    <para>
     You can use the &sle; installation media
     (<filename>&installmedia;</filename> or
     <filename>&packagemedia;</filename>) in combination with other media. For
     example, the control file can be provided via a flash disk or a specified
     location on the network. Alternatively, create a customized installation
     media that includes the control file.
    </para>
   </sect2>

   <sect2 xml:id="bootmedium-pxe">
    <title>Booting via PXE over the Network</title>
    <para>
     Booting via PXE requires a DHCP and a TFTP server in your network. The
     computer will then boot without a physical medium.  <phrase
     os="sles;sled">For instructions on setting up the required
     infrastructure, see <xref linkend="cha-remote-installation"/>.</phrase>
    </para>
    <para>
     If you install via PXE, the installation will run in an endless
     loop. This happens because after the first reboot, the machine performs
     the PXE boot again and restarts the installation instead of booting from
     the hard disk for the second stage of the installation.
    </para>
    <para>
     There are several ways to solve this problem. You can use an HTTP
     server to provide the &ay; control file. Alternatively, instead of a static
     control file, run a CGI script on the Web server that provides the
     control file and changes the TFTP server configuration for your target
     host. This way, the next PXE boot of the machine will be from the hard disk by
     default.
    </para>
    <para>
     Another way is to use &ay; to upload a new PXE boot configuration
     for the target host via the control file:
    </para>
<screen>&lt;pxe&gt;
  &lt;pxe_localboot config:type="boolean"&gt;true&lt;/pxe_localboot&gt;
  &lt;pxelinux-config&gt;
    DEFAULT linux
    LABEL linux
    localboot 0
  &lt;/pxelinux-config&gt;
  &lt;tftp-server&gt;&tftpip;&lt;/tftp-server&gt;
  &lt;pxelinux-dir&gt;/pxelinux.cfg&lt;/pxelinux-dir&gt;
  &lt;filename&gt;__MAC__&lt;/filename&gt;
&lt;/pxe&gt;</screen>
    <para>
     This entry will upload a new configuration for the target host to the
     TFTP server shortly before the first reboot happens. In most
     installations the TFTP daemon runs as user
     <systemitem class="username">nobody</systemitem>. You need to make sure
     this user has write permissions to the
     <filename>pxelinux.cfg</filename> directory. You can also configure the
     file name that will be uploaded. If you use the <quote>magic</quote>
     <literal>__MAC__</literal> file name, the file name will be the MAC
     address of your machine like, for example
     <literal>01-08-00-27-79-49-ee</literal>. If the file name setting is
     missing, the IP address will be used for the file name.
    </para>
    <para>
     To do another auto-installation on the same machine, you
     need to remove the file from the TFTP server.
    </para>
   </sect2>
  </sect1>
  <sect1 xml:id="invoking-autoinst">
   <title>Invoking the Auto-Installation Process</title>

   <para>
    <remark role="fixme">Add a short description</remark>
   </para>

   <sect2 xml:id="invoking-autoinst-options">
    <title>Command Line Options</title>
    <para>
     Adding the command line variable <literal>autoyast</literal> causes
     <command>linuxrc</command> to start in automated mode. The <command>linuxrc</command>
     program searches for a configuration file, which should be distinguished
     from the main control file, in the following places:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       in the root directory of the initial RAM disk used for booting the
       system;
      </para>
     </listitem>
     <listitem>
      <para>
       in the root directory of the boot medium.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     The <command>linuxrc</command> configuration file supports multiple
     keywords. For a detailed description of how <command>linuxrc</command>
     works and other keywords, see <xref linkend="appendix-linuxrc"/>. Some of
     the more common ones are:
    </para>

    <variablelist>
     <varlistentry>
      <term>autoupgrade</term>
      <listitem>
       <para>
        Initiate an automatic upgrade using &ay;; see <xref linkend="CreateProfile-upgrade"/>.
       </para>
      </listitem>
     </varlistentry>
    
    <varlistentry>
     <term>autoyast</term>
     <listitem>
      <para>
       Location of the control file for automatic installation;
       see <xref linkend="Commandline-ay"/> for details.
       </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>ifcfg</term>
     <listitem>
      <para>
       Configure and start the network. Required if the &ay; is to be
       fetched from a remote location. See <xref linkend="ay-adv-network"/>
       for details.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>insmod</term>
     <listitem>
       <para>
        Kernel modules to load
       </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>install</term>
     <listitem>
      <para>
       Location of the installation directory, for example
       <literal>install=nfs://192.168.2.1/CDs/</literal>.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>instmode</term>
     <listitem>
      <para>
       Installation mode, for example <literal>nfs</literal>,
       <literal>http</literal> etc. (not needed if
       <literal>install</literal> is set).
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>rootpassword</term>
     <listitem>
      <para>
       Password for root user if not specified in &ay; profile
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>server</term>
     <listitem>
      <para>
       Server (NFS) to contact for source directory
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>serverdir</term>
     <listitem>
      <para>
       Directory on NFS Server
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term>y2confirm</term>
     <listitem>
      <para>
       Even with &lt;confirm&gt;no&lt;/confirm&gt; in the
       control file, the confirm proposal comes up.
      </para>
     </listitem>
    </varlistentry>
    
    </variablelist>
    
    <!-- fs 2016-07-29: better use ifcfg
     <para>
     <literal>gateway</literal>
     <literal>nameserver</literal>
     <literal>netdevice</literal>
     </para>
     <para>
     Network device to use for network setup (for BOOTP and DHCP
     requests)
     </para>
     <literal>netmask</literal>
     <literal>hostip</literal>
     <para>
     When empty, client sends BOOTP request, otherwise client is
     configured with entered IP configuration.
     </para>
    -->
    
    <para>
     These variables and keywords will bring the system up to the point
     where &yast; can take over with the main control file. Currently,
     the source medium is automatically discovered, which in some cases
     makes it possible to initiate the auto-install process without giving
     any instructions to <command>linuxrc</command>.
    </para>
    <para>
     The traditional <command>linuxrc</command> configuration file (<filename>info</filename>)
     has the function of giving the client enough information about the
     installation server and the location of the sources. Usually, this file
     is not required, but it is needed in special network environments
     where DHCP and BOOTP are not used or when special kernel modules need
     to be loaded.
    </para>
    <para>
     You can pass keywords to <command>linuxrc</command> using the kernel
     command line. This can be done in several ways. You can specify
     <command>linuxrc</command> keywords along with other kernel parameters
     interactively at boot time, in the usual way. You can also insert kernel
     parameters into custom network-bootable disk images. It is also possible to
     configure a DHCP server to pass kernel parameters in combination with
     Etherboot or PXE.
    </para>
    <note>
      <title>Using <literal>autoyast2</literal> Boot Option instead of <literal>autoyast</literal></title>
      <para>
          The <literal>autoyast2</literal> option is similar to the <literal>autoyast</literal> option, but
          <command>linuxrc</command> parses the provided value and, for example,
          tries to configure a network when needed. This option is not described in this documentation.
          For information about differences between the &ay; and
          <command>linuxrc</command> URI syntax, see the <command>linuxrc</command> appendix:
          <xref linkend="appendix-linuxrc"/>. &ay;'s rules and classes are
          <emphasis>not</emphasis> supported.
      </para>
    </note>
    <para>
     The command line variable <literal>autoyast</literal> can be used in
     the format described in the following list.
    </para>
    <variablelist xml:id="Commandline-ay">
        <title>&ay; Control File Locations</title>
        <varlistentry>
            <term>Format of URIs</term>
            <listitem>
                <para>
                    The <literal>autoyast</literal> syntax for the URIs for your control file 
                    locations can be confusing. The format is SCHEMA://HOST/PATH-TO-FILE.
                    The number of forward slashes to use varies. For remote locations of 
                    your control file, the URI looks like this example for an NFS server, with 
                    two slashes: <literal>autoyast=nfs://SERVER/PATH</literal>.
                </para>
                <para>
                    It is different when your control file is on a local file system. For example,
                    <literal>autoyast=usb:///profile.xml</literal> is the same as 
                    <literal>autoyast=usb://localhost/profile.xml</literal>.
                    You may omit the local host name, but you must keep the third slash.
                    <literal>autoyast=usb://profile.xml</literal> will fail because 
                    <literal>profile.xml</literal> is interpreted as the host name.
                </para>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term>When no control file specification is needed</term>
            <listitem>
                <para>
                    For upgrades, no <literal>autoyast</literal> variable is needed for
                    an automated offline upgrade, see 
                    <xref linkend="pro-upgrade-offline-upgrade-mode"/>.
                </para>
                <para>
                    For new installations, <literal>autoyast</literal> will be started if a 
                    file named <filename>autoinst.xml</filename> is in one of the following
                    three locations:
           </para>
           <orderedlist>
             <listitem>
               <para>
                 The root directory of the installation flash disk (for example, a USB stick)
               </para>
             </listitem>
             <listitem>
               <para>
                 The root directory of the installation medium
               </para>
             </listitem>
             <listitem>
               <para>
                 The root directory of the initial RAM disk used to boot the system
               </para>
             </listitem>
           </orderedlist>
            </listitem>
        </varlistentry>
        <varlistentry>
            <term><literal>autoyast=file:///<replaceable>PATH</replaceable></literal></term>
            <listitem>
                <para>
                  Looks for control file in the specified path, relative to the source
                  root directory, for example
                 <literal>file:///autoinst.xml</literal> when the control file is in
                 the top-level directory of any local file system, including mounted
                 external devices such as a CD or USB drive. (This is the same as
                 <literal>file://<replaceable>localhost/autoinst.xml</replaceable></literal>.)
              </para>
         </listitem>
     </varlistentry>
     <varlistentry>
         <term> <literal>autoyast=device://<replaceable>DEVICE</replaceable>/<replaceable>FILENAME</replaceable></literal></term>
          <listitem>
              <para>
                Looks for the control file on a storage device. Do not specify the
                full path to the device, but the device name only 
                (for example, <literal>device://<replaceable>vda1/autoyast.xml</replaceable></literal>).
                You may also omit specifying the device and trigger 
                <literal>autoyast</literal> to search all devices, for example,
               <literal>autoyast=device://<replaceable>localhost/autoinst.xml</replaceable></literal>, 
               or <literal>autoyast=device:///<replaceable>autoinst.xml</replaceable></literal>.
              </para>
         </listitem>
     </varlistentry>
     <varlistentry>
         <term><literal>autoyast=nfs://<replaceable>SERVER</replaceable>/<replaceable>PATH</replaceable></literal></term>
          <listitem>
              <para>
                  Looks for the control file on an NFS server.
              </para>
         </listitem>
     </varlistentry> 
     <varlistentry>
         <term><literal>autoyast=http://[user:password@]<replaceable>SERVER</replaceable>/<replaceable>PATH</replaceable></literal></term>
          <listitem>
              <para>
                Retrieves the control file from a Web server using the HTTP
                protocol. Specifying a user name and a password is optional.
              </para>
         </listitem>
     </varlistentry>     
     <varlistentry>
         <term><literal>autoyast=https://[user:password@]<replaceable>SERVER</replaceable>/<replaceable>PATH</replaceable></literal></term>
          <listitem>
              <para>
                 Retrieves the control file from a Web server using HTTPS.
                 Specifying a user name and a password is optional.
              </para>
         </listitem>
     </varlistentry>     
     <varlistentry>
         <term><literal>autoyast=tftp://<replaceable>SERVER</replaceable>/<replaceable>PATH</replaceable></literal></term>
          <listitem>
              <para>
                  Retrieve the control file via TFTP.
              </para>
         </listitem>
     </varlistentry>     
     <varlistentry>
         <term><literal>autoyast=ftp://[user:password@]<replaceable>SERVER</replaceable>/<replaceable>PATH</replaceable></literal></term>
          <listitem>
              <para>
                Retrieve the control file via FTP. Specifying a user name and a password is optional.   
              </para>
         </listitem>
     </varlistentry>     
     <varlistentry>
         <term><literal>autoyast=usb:///<replaceable>PATH</replaceable></literal></term>
          <listitem>
              <para>
                  Retrieve the control file from USB devices (<literal>autoyast</literal> will search
                 all connected USB devices).
              </para>
         </listitem>
     </varlistentry>     
     <varlistentry>
         <term><literal>autoyast=relurl://<replaceable>PATH</replaceable></literal></term>
          <listitem>
              <para>
                  Retrieve the control file from the installation source: either from the
                  default installation source or from the installation source defined in
                 <literal>install=<replaceable>INSTALLATION_SOURCE_PATH</replaceable></literal>.
              </para>
         </listitem>
     </varlistentry>     
     <varlistentry>
         <term><literal>autoyast=cifs://<replaceable>SERVER</replaceable>/<replaceable>PATH</replaceable></literal></term>
          <listitem>
              <para>
                  Looks for the control file on a CIFS server.
              </para>
         </listitem>
     </varlistentry>     
     <varlistentry>
         <term><literal>autoyast=label://<replaceable>LABEL</replaceable>/<replaceable>PATH</replaceable></literal></term>
          <listitem>
              <para>
                  Searches for a control file on a device with the specified label.
              </para>
         </listitem>
     </varlistentry>        
    </variablelist>
    <para>
     Several scenarios for auto-installation are possible using different
     types of infrastructure and source media. The simplest way is to use
     the appropriate installation media of &productname;
     (<filename>&installmedia;</filename> or
     <filename>&packagemedia;</filename>). But to initiate the
     auto-installation process, the auto-installation command line
     variable should be entered at system boot-up and the control file
     should be accessible for &yast;.
    </para>
    <para>
     In a scripting context, you can use a serial console for your virtual
     machine, that allows you to work in text mode. Then you can pass the
     required parameters from an expect script or equivalent.
    </para>
    <para>
     The following list of scenarios explains how the control file can be supplied:
    </para>
    <variablelist>
     <varlistentry>
      <term>Using the &productname; installation media</term>
      <listitem>
       <para>
        When using the original installation media
        (<filename>&installmedia;</filename> or
        <filename>&packagemedia;</filename> is needed), the control file
        needs to be accessible via flash disk (for example, a USB stick) or network:
       </para>
       <formalpara>
        <title>Flash Disk (for example, a USB stick)</title>
        <para>
         Access the control file via the
         <literal>autoyast=usb://<replaceable>PATH</replaceable></literal>
         option.
        </para>
       </formalpara>
       <formalpara>
        <title>Network</title>
        <para>
         Access the control file via the following commands:
         <literal>autoyast=nfs://..</literal>,
         <literal>autoyast=ftp://..</literal>,
         <literal>autoyast=http://..</literal>,
         <literal>autoyast=https://..</literal>,
         <literal>autoyast=tftp://..</literal>, or
         <literal>autoyast=cifs://..</literal>.
         Network access needs to be defined using the boot options in linuxrc.
         This can be done via DHCP:
         <command>netsetup=dhcp autoyast=http://163.122.3.5/autoyast.xml</command>
        </para>
       </formalpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Using a Custom installation media</term>
      <listitem>
       <para>
        In this case, you can include the control file directly on the
        installation media. When placing it in the root directory and naming it
        <filename>autoinst.xml</filename>, it will automatically be found
        and used for the installation. Otherwise use
        <literal>autoyast=file:///<replaceable>PATH</replaceable></literal>
        to specify the path to the control file.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Using a Network Installation Source</term>
      <listitem>
       <para>
        This option is the most important one because installations of multiple
        machines are usually done using SLP or NFS servers and other network
        services like BOOTP and DHCP. The easiest way to make the control file
        available is to place it in the root directory of the installation
        source, naming it <filename>autoinst.xml</filename>. In this case, it
        will automatically be found and used for the installation. The control
        file can also reside in the following places:
       </para>
       <formalpara>
        <title>Flash Disk (for example, a USB stick)</title>
        <para>
         Access the control file via the
         <literal>autoyast=usb://<replaceable>PATH</replaceable></literal>
         option.
        </para>
       </formalpara>
       <formalpara>
        <title>Network</title>
        <para>
         Access the control file via the following commands:
         <literal>autoyast=nfs://..</literal>,
         <literal>autoyast=ftp://..</literal>,
         <literal>autoyast=http://..</literal>,
         <literal>autoyast=https://..</literal>,
         <literal>autoyast=tftp://..</literal>, or
         <literal>autoyast=cifs://..</literal>.
        </para>
       </formalpara>
      </listitem>
     </varlistentry>
    </variablelist>
    <note>
     <title>Disabling Network and DHCP</title>
     <para>
      To disable the network during installations where it is not needed or
      unavailable, for example when auto-installing from DVD-ROMs, use the
      <command>linuxrc</command> option <literal>netsetup=0</literal> to disable
      the network setup.
     </para>
    </note>
    <para>
     With all &ay; invocation options it is possible to specify the location of
     the control file in the following ways:
    </para>
<!-- numeration="arabic" -->
    <orderedlist>
     <listitem>
      <para>
       Specify the exact location of the control file:
      </para>
<screen>autoyast=http://192.168.1.1/control-files/client01.xml</screen>
     </listitem>
     <listitem>
      <para>
       Specify a directory where several control files are located:
      </para>
<screen>autoyast=http://192.168.1.1/control-files/</screen>
      <para>
         In this case the relevant control file is retrieved using the hex
         digit representation of the IP as described below.
      </para>
      <para>
         The path of this directory needs to end with a <literal>/</literal>.
      </para>
      <para>
        The files in the directory must not have any extension, for example <literal>.xml</literal>.
        So the file name needs to be the IP or MAC address only.
      </para>
      <screen>&prompt.user;ls -r control-files
C00002 0080C8F6484C default</screen>
     </listitem>
    </orderedlist>
    <para>
     If only the path prefix variable is defined, &yast; will fetch the
     control file from the specified location in the following way:
    </para>
<!-- numeration="arabic" -->
    <orderedlist>
     <listitem>
      <para>
       First, it will search for the control file using its own IP address
       in uppercase hexadecimal, for example <literal>192.0.2.91 -&gt;
       C000025B</literal>.
      </para>
     </listitem>
     <listitem>
      <para>
       If this file is not found, &yast; will remove one hex digit and
       try again. This action is repeated until the file with the correct
       name is found. Ultimately, it will try looking for a file with the
       MAC address of the client as the file name (mac should have the
       following syntax: <literal>0080C8F6484C</literal>) and if not found a
       file named <filename>default</filename> (in lowercase).
      </para>
     </listitem>
    </orderedlist>
    <para>
     As an example, for 192.0.2.91, the HTTP client will try:
    </para>
<!-- role="literallayout" -->
<screen>C000025B
C000025
C00002
C0000
C000
C00
C0
C
0080C8F6484C
default</screen>
    <para>
     in that order.
    </para>
    <para>
     To determine the hex representation of the IP address of the client,
     use the utility called <command>/usr/bin/gethostip</command> available
     with the <systemitem class="resource">syslinux</systemitem> package.
    </para>
    <example>
     <title>Determine HEX code for an IP address</title>
<screen>&prompt.user;/usr/bin/gethostip 10.10.0.1
10.10.0.1 10.10.0.1 0A0A0001</screen>
    </example>
   </sect2>

   <sect2 xml:id="autoinstall-singlesystem">
    <title>Auto-installing a Single System</title>
    <para>
     The easiest way to auto-install a system without any network connection is
     to use the original &productname; DVD-ROMs and a flash disk (for example,
     a USB stick). You do not need to set up an installation server nor the
     network environment.
    </para>
    <para>
     Create the control file and name it <filename>autoinst.xml</filename>.
     Copy the file <filename>autoinst.xml</filename> to the flash disk.
    </para>
   </sect2>

   <sect2 xml:id="invoking-autoinst-linuxrc">
    <title>Combining the <command>linuxrc</command> <filename>info</filename> File with the &ay; Control File</title>
    <para>
     If you choose to pass information to <command>linuxrc</command> using the
     <filename>info</filename> file or as boot options, you may integrate the
     keywords into the &ay; control file. Add an <literal>info_file</literal> 
     section as shown in the example below. This section contains 
     keyword&mdash;value pairs, separated by colons, one pair per line.
    </para>
    <para>

    </para>
    <example>
     <title><command>linuxrc</command> Options in the &ay; Control File</title>
<screen><![CDATA[....
  <install>
....
    <init>
        <info_file>

install: nfs://192.168.1.1/CDs/full-x86_64
dud: https://example.com/driver_updates/filename.dud
upgrade: 1
textmode: 1
      </info_file>
    </init>
......
  </install>
  ....]]>
</screen>
    </example>
    <para>
     Note that the <literal>autoyast2</literal> keyword must point to the same
     file. If it is on a flash disk (for example, a USB stick), then the option
     <literal>usb://</literal> needs to be used. If the
     <filename>info</filename> file is stored in the initial RAM disk, the
     <literal>file:///</literal> option needs to be used.
    </para>
   </sect2>
  </sect1>
  <sect1 xml:id="System-Configuration">
   <title>System Configuration</title>

   <para>
    The system configuration during auto-installation is the most important
    part of the whole process. As you have seen in the previous chapters,
    almost anything can be configured automatically on the target system. In
    addition to the pre-defined directives, you can always use post-scripts
    to change other things in the system. Additionally you can change any
    system variables, and if required, copy complete configuration files
    into the target system.
   </para>

   <sect2 xml:id="System-Configuration-post">
    <title>Post-Install and System Configuration</title>
    <para>
     The post-installation and system configuration are initiated directly
     after the last package is installed on the target system and continue
     after the system has booted for the first time.
    </para>
    <para>
     Before the system is booted for the first time, &ay; writes all data
     collected during installation and writes the boot loader in the
     specified location. In addition to these regular tasks, &ay;
     executes the chroot-scripts as specified in the control file. Note that
     these scripts are executed while the system is not yet mounted.
    </para>
    <para>
     If a different kernel than the default is installed, a hard reboot will
     be required. A hard reboot can also be forced during auto-installation,
     independent of the installed kernel. Use the <literal>reboot</literal>
     property of the <literal>general</literal> resource (see
     <xref linkend="CreateProfile-General"/>).
    </para>
   </sect2>

   <sect2 xml:id="System-Configuration-custom">
    <title>System Customization</title>
    <para>
     Most of the system customization is done in the second stage of the
     installation. If you require customization that cannot be done using
     &ay; resources, use post-install scripts for further modifications.
    </para>
    <para>
     You can define an unlimited number of custom scripts in the control
     file, either by editing the control file or by using the configuration
     system.
    </para>
   </sect2>
  </sect1>
 </chapter>
