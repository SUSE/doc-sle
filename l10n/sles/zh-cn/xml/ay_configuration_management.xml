<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ay_configuration_management.xml" version="5.0" xml:id="CreateProfile-ConfigurationManagement">
  <title>配置管理</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>是</dm:translation>
  </dm:docmanager>
 </info>

 <para>
      AutoYaST 允许将一部分配置委派给某个<emphasis>配置管理工具</emphasis>（例如 Salt）。AutoYaST 负责处理基本系统安装（分区、网络设置等），剩余的配置任务可委派给其他工具。
    </para>

   <note>
    <title>只有 Salt 受官方支持</title>
    <para>
      虽然本文档中提及了 Puppet，但只有 Salt 才受官方支持。不过，我们欢迎您报告在使用 Puppet 过程中发现的任何问题。
    </para>
   </note>

    <para>
     AutoYaST 支持两种不同的方法：
    </para>

    <itemizedlist>
     <listitem>
      <para>
       使用配置管理服务器。在这种情况下，AutoYaST 将设置一个配置管理工具。此工具会连接到主服务器以获取配置系统的指令。
      </para>
     </listitem>
     <listitem>
      <para>
       从其他位置（例如 HTTP 服务器，或 USB 记忆棒等闪存盘）获取配置，并以独立模式运行配置管理工具。
      </para>
     </listitem>
    </itemizedlist>

    <sect2 xml:id="CreateProfile-ConfigurationManagement-Server">
     <title>连接到配置管理服务器</title>

     <para>
      当配置管理服务器（Salt 中的<emphasis>主服务器</emphasis>，以及 Puppet jargon）已准备就绪时，此方法特别有用。在这种情况下，最困难的环节可能是设置适当的身份验证机制。
     </para>

     <para>
      Salt 和 Puppet 都支持以下身份验证方法：
     </para>

     <itemizedlist>
      <listitem>
       <para>
        即时手动身份验证。当 AutoYaST 启动客户端时，会生成一个新的身份验证请求。管理员可在服务器上手动接受此请求。AutoYaST 将重试连接。如果同时已接受密钥，则 AutoYaST 会继续安装。
       </para>
      </listitem>
      <listitem>
       <para>
        使用预置种子密钥。请参见所选配置管理系统的文档来了解如何生成此类密钥。使用 <literal>keys_url</literal> 选项告知 AutoYaST 要在何处查找密钥。
       </para>
      </listitem>
     </itemizedlist>

     <para>
      在以下配置示例中，AutoYaST 将启动客户端来生成身份验证请求。它最多尝试连接三次，两次尝试之间等待 15 秒。
     </para>

     <example xml:id="configuration-management-manual-authentication">
      <title>使用手动身份验证的客户端/服务器</title>
<screen>&lt;configuration_management&gt;
    &lt;type&gt;salt&lt;/type&gt;
    &lt;master&gt;my-salt-server.example.net&lt;/master&gt;
    &lt;auth_attempts config:type="integer"&gt;3&lt;/auth_attempts&gt;
    &lt;auth_time_out config:type="integer"&gt;15&lt;/auth_time_out&gt;
&lt;/configuration_management&gt;</screen>
     </example>

     <para>
      但是，在以下示例中，AutoYaST 将从闪存盘（例如 USB 记忆棒）检索密钥，并使用这些密钥连接到主服务器。
     </para>

     <example xml:id="configuration-management-preseed-keys">
      <title>使用预置种子密钥的客户端/服务器</title>
<screen>&lt;configuration_management&gt;
    &lt;type&gt;salt&lt;/type&gt;
    &lt;master&gt;my-salt-server.example.net&lt;/master&gt;
    &lt;keys_url&gt;usb:/&lt;/keys_url&gt;
&lt;/configuration_management&gt;</screen>
     </example>

     <para>
      下表汇总了这些方案支持的选项。
     </para>

     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>
          <para>
           属性
          </para>
         </entry>
         <entry>
          <para>
           值
          </para>
         </entry>
         <entry>
          <para>
           说明
          </para>
         </entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>
          <para>
           <literal>type</literal>
          </para>
         </entry>
         <entry>
          <para>
           字符串
          </para>
         </entry>
         <entry>
          <para>
           配置管理名称。目前只有 <literal>salt</literal> 受官方支持。
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <literal>master</literal>
          </para>
         </entry>
         <entry>
          <para>
           字符串
          </para>
         </entry>
         <entry>
          <para>
           配置管理服务器的主机名或 IP 地址。
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <literal>auth_attempts</literal>
          </para>
         </entry>
         <entry>
          <para>
           整数
          </para>
         </entry>
         <entry>
          <para>
           尝试连接服务器的最大次数。默认值为三次尝试。
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <literal>auth_time_out</literal>
          </para>
         </entry>
         <entry>
          <para>
           整数
          </para>
         </entry>
         <entry>
          <para>
           尝试连接服务器的间隔时间（以秒为单位）。默认值为 15 秒。
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <literal>keys_url</literal>
          </para>
         </entry>
         <entry>
          <para>
           所用密钥的 URL
          </para>
         </entry>
         <entry>
          <para>
           包含文件 <literal>default.key</literal> 和 <literal>default.pub</literal> 的 HTTP 服务器、硬盘、闪存盘或类似设备的路径。配置管理主服务器必须知道此密钥。
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <literal>enable_services</literal>
          </para>
         </entry>
         <entry>
          <para>
           True/False
          </para>
         </entry>
         <entry>
          <para>
           安装后在客户端启用配置管理服务。默认值为 <literal>true</literal>。
          </para>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </sect2>

    <sect2 xml:id="CreateProfile-ConfigurationManagement-Masterless">
     <title>以独立模式运行</title>
     <para>
       对于简单的方案，不必要部署配置管理服务器。可以改用<emphasis>独立</emphasis>（或<emphasis>无主服务器</emphasis>）模式的 Salt 或 Puppet。
     </para>

     <para>
      由于没有服务器，AutoYaST 需要知道从何处获取配置。请将配置放入 TAR 存档并将其储存在任何位置（例如闪存盘、HTTP/HTTPS 服务器或 NFS/SMB 共享上）。
     </para>

     <para>
      该 TAR 存档的布局必须与预期相同，即放在 Salt 服务器中的 <literal>/srv</literal> 下。这意味着，您需要将 Salt 状态放入 <filename>salt</filename> 目录，并将公式放入单独的 <filename>formulas</filename> 目录。
     </para>

     <para>
      此外，还可以创建一个 <filename>pillar</filename> 目录用于包含 pillar 数据。或者，可以使用 <literal>pillar_url</literal> 选项在单独的 TAR 存档中提供这些数据。
     </para>

     <example xml:id="configuration-management-masterless">
      <title>独立模式</title>
<screen>&lt;configuration_management&gt;
    &lt;type&gt;salt&lt;/type&gt;
    &lt;states_url&gt;my-salt-server.example.net&lt;/states_url&gt;
    &lt;pillar_url&gt;my-salt-server.example.net&lt;/pillar_url&gt;
&lt;/configuration_management&gt;</screen>
     </example>

     <informaltable>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>
          <para>
           属性
          </para>
         </entry>
         <entry>
          <para>
           值
          </para>
         </entry>
         <entry>
          <para>
           说明
          </para>
         </entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>
          <para>
           <literal>type</literal>
          </para>
         </entry>
         <entry>
          <para>
           字符串
          </para>
         </entry>
         <entry>
          <para>
           配置管理名称。目前只有 <literal>salt</literal> 受官方支持。
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <literal>states_url</literal>
          </para>
         </entry>
         <entry>
          <para>
           URL
          </para>
         </entry>
         <entry>
          <para>
           Salt 状态 TAR 存档的位置。此存档可以包含公式和 pillar。文件必须位于 <filename>salt</filename> 目录。
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <literal>pillar_url</literal>
          </para>
         </entry>
         <entry>
          <para>
           URL
          </para>
         </entry>
         <entry>
          <para>
           包含 pillar 的 TAR 存档的位置。
          </para>
         </entry>
        </row>
        <row>
         <entry>
          <para>
           <literal>modules_url</literal>
          </para>
         </entry>
         <entry>
          <para>
           URL
          </para>
         </entry>
         <entry>
          <para>
           Puppet 模块的位置。
          </para>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </sect2>

    <sect2 xml:id="CreateProfile-ConfigurationManagement-SUMAFormulasSupport">
     <title>SUSE Manager Salt 公式支持</title>

     <para>
      AutoYaST 以独立模式运行时，可提供 SUSE Manager Salt 公式支持。如果在状态 TAR 存档中找到了公式，AutoYaST 会显示一个屏幕，让用户选择和配置所要应用的公式。
     </para>

     <para>
      请记住，此功能会导致 AutoYaST 无法执行无人照管的安装，因为 AutoYaST 在此情况下会等待用户的输入。
     </para>
    </sect2>
  </sect1>
