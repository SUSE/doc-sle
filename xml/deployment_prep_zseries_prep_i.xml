<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<!--
   fs 02/28/2006:
     Do not change the following words/phrases (except in URls,
     packagenames etc.)in all zSeries documents, because they are trademarks:
      - Redbook, Redpiece, Redpaper
      - developerWorks
      - ESCON
      - HiperSockets
-->
<sect1 version="5.0" xml:id="sec.zseries.prep"
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Preparing for Installation</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <para>
  Learn how to make the data accessible for installation,
  install &productname; using different methods, and prepare and use the IPL of
  the &productname; installation system. Also find out about network
  configuration and network installation.
 </para>

 <sect2 xml:id="sec.prep.makeavail">
  <title>Making the Installation Data Available</title>
  <para>
   This section provides detailed information about making the &productname;
   IBM &zseries; installation data accessible for installation. Depending on
   your computer and system environment, choose between NFS or FTP
   installation. If you are running Microsoft Windows workstations in your
   environment, you can use the Windows network (including the SMB
   protocol) to install &productname; on your IBM &zseries; system.
  </para>
  <tip>
   <title>IPL from DVD</title>
   <para>
    Starting with Service Pack 1 of &sls; Version 10, it is
    possible to IPL from DVD and use the DVD as the installation medium. This
    is very convenient if you have restrictions setting up an installation
    server providing installation media over your network. The prerequisite is
    an FCP-attached SCSI DVD Drive.
   </para>
  </tip>
  <note>
   <title>No Installation <quote>From Hard Disk</quote></title>
   <para>
    It is not possible to install from hard disk by putting the content of the
    DVD to a partition on a DASD.
   </para>
  </note>
  <sect3 xml:id="sec.prep.makeavail.linuxws">
   <title>Using a Linux Workstation or &productname; DVD</title>
   <para>
    If you have a Linux workstation running in your computer environment, use
    the workstation to provide the installation data to the IBM &zseries;
    installation process by NFS or FTP. If the Linux workstation runs under
    &productname;, you can set up an installation server (NFS or FTP) using the
    &yast; <guimenu>Installation Server</guimenu> module as described in
    <xref
     linkend="sec.deployment.instserver.sles9"/>.
   </para>
   <sect4 xml:id="sec.prep.makeavail.linuxws.nfs">
    <title>Over NFS</title>
    <para>
     Use NFS (network file system) to make the installation media available.
    </para>
    <important>
     <title>Exporting Mounted Devices with NFS</title>
     <para>
      Exporting the file system root (<filename>/</filename>) does not imply
      the export of mounted devices, such as DVD. Explicitly name the mount
      point in <filename>/etc/exports</filename>:
     </para>
<screen>/media/dvd  *(ro)</screen>
     <para>
      After changing this file, restart the NFS server with the command
      <command>sudo systemctl restart nfsserver</command>.
     </para>
    </important>
   </sect4>
   <sect4 xml:id="sec.prep.makeavail.linuxws.ftp">
    <title>Over FTP</title>
    <para>
     Setting up an FTP server on a Linux system involves the installation and
     configuration of
     the server software like
     <package>pure-ftpd</package>
     or
     <package>vsftpd</package>. If you are using &productname;,
     refer to <xref linkend="cha.ftp"/> for installation instructions.
     Downloading the installation data via anonymous login is not supported,
     therefore you need to configure the FTP server to support user
     authentication.
    </para>
   </sect4>
   <sect4 xml:id="sec.prep.makeavail.linuxws.oncd">
    <title>&productname; on DVD</title>
    <para>
     DVD1 of the &productname; for IBM &zseries; contains a bootable Linux
     image for Intel-based workstations and an image for &zseries;.
    </para>
    <para>
     For Intel-based workstations, boot from this DVD, answer the questions
     regarding your language and keyboard layout, and select <guimenu>Start
     rescue system</guimenu>. You need at least 64&nbsp;MB RAM for this. No
     disk space is needed because the entire rescue system resides in the
     workstation's RAM. This approach takes some Linux and networking
     experience, because you need to set up the networking of the workstation
     manually.
    </para>
    <para>
     For &zseries;, IPL your LPAR/VM guest from this DVD as described in
     <xref linkend="sec.prep.ipling.lpar.dvd"/>. After entering your network
     parameters, the installation system treats the DVD as the source of
     installation data. Because &zseries; cannot have an X11-capable terminal
     attached directly, choose between VNC or SSH installation. SSH also
     provides a graphical installation by tunneling the X connection through
     SSH with <command>ssh -X</command>.
    </para>
   </sect4>
  </sect3>
  <sect3 xml:id="sec.prep.makeavail.windowsws">
   <title>Using a Microsoft Windows Workstation</title>
   <para>
    If there is a Microsoft Windows workstation available in your network, use
    this computer to make the installation media available. The easiest way to
    do this is to use the SMB protocol, already included in the Windows
    operating system. Be sure to activate <guimenu>SMB over TCP/IP</guimenu> as
    this enables the encapsulation of SMB packages into TCP/IP packages. Find
    details in the Windows online help or other Windows-related documentation
    that covers networking. Another option is to use FTP. This also requires
    some third-party software for Windows.
   </para>
   <sect4 xml:id="sec.prep.makeavail.windowsws.smb">
    <title>With SMB</title>
    <para>
     To make the installation media available with SMB, insert the
     &productname; DVD&nbsp;1 into the DVD drive of the Windows workstation.
     Then create a new share using the DVD-ROM drive's letter and make it
     available for everyone in the network.
    </para>
<!-- bnc#803514
         http://lists.samba.org/archive/samba-technical/2001-April/013007.html
    -->
    <para>
     The installation path in &yast; can be:
    </para>
<screen>smb://<replaceable>DOMAIN</replaceable>;<replaceable>USER</replaceable>:<replaceable>PW</replaceable>@<replaceable>SERVERNAME</replaceable>/<replaceable>SHAREPATH</replaceable></screen>
    <para>
     Where the placeholders mean:
    </para>
    <variablelist>
     <varlistentry>
      <term><replaceable>DOMAIN</replaceable>
      </term>
      <listitem>
       <para>
        Optional workgroup or active directory domain.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>USER</replaceable>
      </term>
      <term><replaceable>PW</replaceable>
      </term>
      <listitem>
       <para>
        Optional user name and password of a user who can access this server
        and its share.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>SERVERNAME</replaceable>
      </term>
      <listitem>
       <para>
        The name of the server that hosts the share(s).
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><replaceable>SHAREPATH</replaceable>
      </term>
      <listitem>
       <para>
        The path to the share(s).
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
<!-- syntax with ?workgroup=... seems not to work according to
       Martin Pluskal
     -->
<!--<screen>smb://<replaceable
      >USER</replaceable>:<replaceable
      >PW</replaceable>@<replaceable
      >SERVERNAME</replaceable>/<replaceable
      >SHAREPATH</replaceable>?workgroup=<replaceable
      >WORKGROUP</replaceable>;</screen>-->
    <para/>
<!--<tip>
     <title>SMB Installation Path for &yast;</title>
     <para>
      Consult the <filename>README</filename> from the highest directory of
      DVD&nbsp;1 for detailed information about the syntax of the
      installation path for &yast;.
     </para>
    </tip>-->
   </sect4>
   <sect4 xml:id="sec.prep.makeavail.windowsws.nfs">
    <title>With NFS</title>
    <para>
     Refer to the documentation provided with the third party product that
     enables NFS server services for your Windows workstation. The DVD-ROM
     drive containing the &productname; DVDs must be in the available NFS path.
    </para>
   </sect4>
   <sect4 xml:id="sec.prep.makeavail.windowsws.ftp">
    <title>With FTP</title>
    <para>
     Refer to the documentation provided with the third party product that is
     enabling FTP server services on your Windows workstation. The DVD-ROM
     drive containing the &productname; DVDs must be in the available FTP path.
    </para>
    <para>
     The FTP server that is bundled with some Microsoft Windows releases
     implements only a subset of the FTP commands, and it is not suitable for
     providing the installation data. If this applies to your Windows
     workstation, use a third party FTP server providing the required features.
    </para>
   </sect4>
   <sect4 xml:id="sec.prep.makeavail.windowsws.scsi">
    <title>Using an FCP-Attached SCSI DVD Drive</title>
    <para>
     After you IPLed from the SCSI DVD as described in
     <xref
      linkend="sec.info.iplopt.dvd"/>, the installation system uses
     the DVD as the installation medium. In that case, you do not need the
     installation media on an FTP, NFS, or SMB server. However, you need the
     network configuration data for your &productname;, because you must set up
     the network during the installation to perform a graphical installation by
     VNC or by X.
    </para>
   </sect4>
  </sect3>
  <sect3 xml:id="sec.prep.makeavail.zpxe_cobbler">
   <title>Using a Cobbler Server for zPXE</title>
   <para>
    IPLing from the network requires a Cobbler server, to provide the kernel,
    initrd, and the installation data. Preparing the Cobbler server requires
    four steps:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Importing the Installation Data
     </para>
    </listitem>
    <listitem>
     <para>
      Adding a Distribution
     </para>
    </listitem>
    <listitem>
     <para>
      Adding Profiles
     </para>
    </listitem>
    <listitem>
     <para>
      Adding Systems
     </para>
    </listitem>
   </itemizedlist>
   <sect4 xml:id="sec.prep.makeavail.zpxe_cobbler.import">
    <title>Importing the Installation Data</title>
    <para>
     Importing the media requires the installation source to be available on
     the Cobbler server&mdash;either from DVD or from a network source. Run the
     following command to import the data:
    </para>
<screen>&prompt.user;sudo cobbler import --path=<replaceable>PATH</replaceable><co xml:id="cobbler.import.path"/> --name=<replaceable>IDENTIFIER</replaceable><co xml:id="cobbler.import.dirname"/> --arch=s390x</screen>
    <calloutlist>
     <callout arearefs="cobbler.import.path">
      <para>
       Mount point of the installation data.
      </para>
     </callout>
     <callout arearefs="cobbler.import.dirname">
      <para>
       A string identifying the imported product, for example
       <quote>sles12_s390x</quote>. This string is used as the name for the
       subdirectory where the installation data is copied to. On a Cobbler
       server running on &sle; this is
       <filename>/srv/www/cobbler/ks_mirror/<replaceable>IDENTIFIER</replaceable></filename>.
       This path may be different if Cobbler runs on another operating system.
      </para>
     </callout>
    </calloutlist>
   </sect4>
   <sect4 xml:id="sec.prep.makeavail.zpxe_cobbler.add_distro">
    <title>Adding a Distribution</title>
    <para>
     By adding a distribution, you tell Cobbler to provide the kernel and the
     initrd required to IPL via zPXE. Run the following command on the Cobbler
     server to add &productname; for IBM &zseries;:
    </para>
<screen>&prompt.user;sudo cobbler distro add --arch=s390 --breed=suse --name="<replaceable>IDENTIFIER</replaceable>"<co xml:id="cobbler.add.identifier"/> \
  --os-version=sles12<co xml:id="cobbler.add.os"/> \
  --initrd=/srv/www/cobbler/ks_mirror/<replaceable>IDENTIFIER</replaceable>/boot/s390x/initrd<co xml:id="cobbler.add.initrd"/> \
  --kernel=/srv/www/cobbler/ks_mirror/<replaceable>IDENTIFIER</replaceable>/boot/s390x/linux<co xml:id="cobbler.add.kernel"/> \
  --kopts="install=http://cobbler.&exampledomain;/cobbler/ks_mirror/<replaceable>IDENTIFIER</replaceable>"<co xml:id="cobbler.add.server"/>
    </screen>
    <calloutlist>
     <callout arearefs="cobbler.add.identifier">
      <para>
       Custom identifier for the distribution, for example <quote>&slsa;
       &productnumber; &zseries;</quote>. Must be unique.
      </para>
     </callout>
     <callout arearefs="cobbler.add.os">
      <para>
       Operating system identifier. Use <literal>sles12</literal>.
      </para>
     </callout>
     <callout arearefs="cobbler.add.initrd">
      <para>
       Path to the initrd. The first part of the path
       (<filename>/srv/www/cobbler/ks_mirror/<replaceable>IDENTIFIER</replaceable>/</filename>)
       depends on the location where Cobbler imported the data and the
       subdirectory name you chose when importing the installation data.
      </para>
     </callout>
     <callout arearefs="cobbler.add.kernel">
      <para>
       Path to the kernel. The first part of the path
       (<filename>/srv/www/cobbler/ks_mirror/<replaceable>IDENTIFIER</replaceable>/</filename>)
       depends on the location where Cobbler imported the data and the
       subdirectory name you chose when importing the installation data.
      </para>
     </callout>
     <callout arearefs="cobbler.add.server">
      <para>
       URl to the installation directory on the Cobbler server.
      </para>
     </callout>
    </calloutlist>
   </sect4>
   <sect4 xml:id="sec.prep.makeavail.zpxe_cobbler.profile">
    <title>Adjusting the Profile</title>
    <para>
     When adding a distribution (see
     <xref
      linkend="sec.prep.makeavail.zpxe_cobbler.add_distro"/>) a
     profile with the corresponding <replaceable>IDENTIFIER</replaceable> is
     automatically generated. Use the following command to make a few required
     adjustments:
    </para>
<screen>&prompt.user;sudo cobbler distro edit \
--name=<replaceable>IDENTIFIER</replaceable><co xml:id="cobbler.profile.name"/> --os-version=sles10<co xml:id="cobbler.profile.os"/> --ksmeta=""<co xml:id="cobbler.profile.meta"/>
--kopts="install=http://cobbler.example.com/cobbler/ks_mirror/<replaceable>IDENTIFIER</replaceable>"<co xml:id="cobbler.profile.opts"/></screen>
    <calloutlist>
     <callout arearefs="cobbler.profile.name">
      <para>
       Identifier for the profile. Use the same string as specified when having
       added the distribution.
      </para>
     </callout>
     <callout arearefs="cobbler.profile.os">
      <para>
       Operating system version. Distribution to which the profile should
       apply. You must use the string specified with
       <option>--name=<replaceable>IDENTIFIER</replaceable></option> in the
       importing step here.
      </para>
     </callout>
     <callout arearefs="cobbler.profile.meta">
      <para>
       Option needed for templating kickstart files. Not used for &suse;, so
       set to an empty value as specified in the example.
      </para>
     </callout>
     <callout arearefs="cobbler.profile.opts">
      <para>
       Space-separated list of kernel parameters. Should include at least the
       <literal>install</literal> parameter as shown in the example.
      </para>
     </callout>
    </calloutlist>
   </sect4>
   <sect4 xml:id="sec.prep.makeavail.zpxe_cobbler.system">
    <title>Adding Systems</title>
    <para>
     The last step that is required is to add systems to the Cobbler server. A
     system addition needs to be done for every &zseries; guest that should
     boot via zPXE. Guests are identified via their z/VM user ID (in the
     following example, an ID called <quote>linux01</quote> is assumed). Note
     that this ID needs to be a lowercase string. To add a system, run the
     following command:
    </para>
<screen>&prompt.user;sudo cobbler system add --name=linux01 --hostname=linux01.example.com \
--profile=<replaceable>IDENTIFIER</replaceable> --interface=qdio \
--ip-address=&wsIVip; --subnet=&subnetII;.255 --netmask=&subnetmask; \
--name-servers=&dnsip; --name-servers-search=&exampledomain; \
--gateway=&routerintipII; --kopts="<replaceable>KERNEL_OPTIONS</replaceable>"</screen>
    <para>
     With the <option>--kopts</option> option you can specify the kernel and
     installation parameters you would normally specify in the parmfile. The
     parameters are entered as a space-separated list in the form of
     <replaceable>PARAMETER1=VALUE1 PARAMETER2=VALUE2</replaceable>. The
     installer will prompt you for missing parameters. For a completely
     automated installation you need to specify all parameters for networking,
     DASDs and provide an &ay; file. The following shows an example for a guest
     equipped with an OSA interface using the same network parameters as above.
    </para>
<screen>--kopts=" \
AutoYaST=http://&exampledomainip;.5/autoinst.xml \
Hostname=linux01.example.com \
Domain=&exampledomain; \
HostIP=&wsIVip; \
Gateway=&routerintipII; \
Nameserver=&dnsip; \
Searchdns=&exampledomain; \
InstNetDev=osa; \
Netmask=&subnetmask; \
Broadcast=&subnetII;.255 \
OsaInterface=qdio \
Layer2=0 \
PortNo=0 \
ReadChannel=0.0.0700 \
WriteChannel=0.0.0701 \
DataChannel=0.0.0702 \
DASD=600"</screen>
   </sect4>
  </sect3>
  <sect3 xml:id="sec.prep.makeavail.dvd_usb_hmc">
   <title>Installing from DVD or Flash Disk of the HMC</title>
   <para>
    To install &productname; on IBM &zseries; servers, usually a
    network installation source is needed. However, in certain environments, it
    could occur that this requirement cannot be fulfilled. With &sls;, you can
    use the existing DVD or the flash disk of the Hardware Management Console
    (HMC) as an installation source for installation on an LPAR.
   </para>
   <para>
    To install from the media in the DVD or the flash disk of the HMC, proceed
    as follows:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Add
     </para>
     <para>
      <option>install=hmc:/</option>
     </para>
     <para>
      to the <filename>parmfile</filename> (see
      <xref
       linkend="sec.appdendix.parm"/>) or kernel options.
     </para>
     <para/>
    </listitem>
    <listitem>
     <para>
      Alternatively, in manual mode, in <filename>linuxrc</filename>, choose:
     </para>
     <para>
      <emphasis role="italic">Start Installation</emphasis>, then
     </para>
     <para>
      <emphasis role="italic">Installation</emphasis>, then
     </para>
     <para>
      <emphasis role="italic">Hardware Management Console</emphasis>.
     </para>
     <para>
      The installation medium must be inserted in the HMC.
     </para>
    </listitem>
   </itemizedlist>
   <important>
    <title>Configure Network</title>
    <para>
     Do not forget to configure the network in <filename>linuxrc</filename>
     before starting the installation. There is no way to pass on boot
     parameters later in time, and it is very likely that you will need network
     access. In <filename>linuxrc</filename>, go to
     <emphasis role="italic">Start Installation</emphasis>, then choose
     <emphasis role="italic">Network Setup</emphasis>.
    </para>
   </important>
   <important>
    <title>Linux System Must Boot First</title>
    <para>
     Before granting access to the media in the DVD or the flash disk of the
     HMC, wait until the Linux system is booting. IPLing can disrupt the
     connection between the HMC and the LPAR. If the first attempt to use the
     described method fails, you can grant the access and retry the option
     <option>HMC</option>.
    </para>
   </important>
   <note>
    <title>Installation Repository</title>
    <para>
     Because of the transitory nature of the assignment, the DVD or the flash
     disk files will not be kept as a repository for installation. If you need
     an installation repository, register and use the online repository.
    </para>
   </note>
  </sect3>
 </sect2>

 <sect2 xml:id="sec.prep.inst_types">
  <title>Installation Types</title>
  <para>
   This section provides information about which steps must be performed to
   install &productname; for each of the installation modes and where to find
   the appropriate information. When the preparation steps described in the
   previous chapters have been completed, follow the installation overview
   of the desired installation mode to install &productname; on your system.
  </para>
  <para>
   As described in <xref linkend="sec.prep.makeavail"/>, there are three
   different installation modes for Linux on IBM &zseries;:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     LPAR installation
    </para>
   </listitem>
   <listitem>
    <para>
     z/VM installation
    </para>
   </listitem>
   <listitem>
    <para>
     KVM guest installation
    </para>
   </listitem>
  </itemizedlist>
  <procedure xml:id="pro.prep.inst_types.lpar">
   <title>Overview of an LPAR Installation</title>
   <step>
    <para>
     Prepare the devices needed for installation. See
     <xref
      linkend="sec.prep.prep_ipl.natlpar"/>.
    </para>
   </step>
   <step>
    <para>
     IPL the installation system. See
     <xref
      linkend="sec.prep.ipling.lpar"/>.
    </para>
   </step>
   <step>
    <para>
     Configure the network. See <xref linkend="sec.prep.netcfg"/>.
    </para>
   </step>
   <step>
    <para>
     Connect to the &productname; installation system. See
     <xref
      linkend="sec.prep.connect"/>.
    </para>
   </step>
   <step>
    <para>
     Start the installation using &yast; and IPL the installed system. See
     <xref linkend="cha.install"/>.
    </para>
   </step>
  </procedure>
  <procedure xml:id="pro.prep.inst_types.vm">
   <title>Installation Overview of z/VM Installation</title>
   <step>
    <para>
     Prepare the devices needed for installation. See
     <xref
      linkend="sec.prep.prep_ipl.vm"/>.
    </para>
   </step>
   <step>
    <para>
     IPL the installation system. See
     <xref
      linkend="sec.prep.ipling.vm"/>.
    </para>
   </step>
   <step>
    <para>
     Configure the network. See <xref linkend="sec.prep.netcfg"/>.
    </para>
   </step>
   <step>
    <para>
     Connect to the &productname; installation system. See
     <xref
      linkend="sec.prep.connect"/>.
    </para>
   </step>
   <step>
    <para>
     Start the installation using &yast; and IPL the installed system. See
     <xref linkend="cha.install"/>.
    </para>
   </step>
  </procedure>
  <procedure xml:id="pro.prep.inst_types.kvm">
   <title>Overview of a KVM Guest Installation</title>
   <step>
    <para>
     Create a virtual disk image and write a domain XML file. See
     <xref linkend="sec.prep.prep_ipl.kvm"/>.
    </para>
   </step>
   <step>
    <para>
     Prepare the installation target and IPL the &vmguest;. See
     <xref linkend="sec.prep.ipling.kvm"/>.
    </para>
   </step>
   <step>
    <para>
     <xref linkend="sec.prep.netcfg.data"/>.
    </para>
   </step>
   <step>
    <para>
     Connect to the &productname; installation system. See
     <xref
      linkend="sec.prep.connect"/>.
    </para>
   </step>
   <step>
    <para>
     Start the installation using &yast; and IPL the installed system. See
     <xref linkend="cha.install"/>.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec.prep.prep_ipl">
  <title>Preparing the IPL of the &productname; Installation System</title>
  <para/>
  <sect3 xml:id="sec.prep.prep_ipl.natlpar">
   <title>Preparing the IPL of an LPAR Installation</title>
   <para>
    Configure your IBM &zseries; system to start in ESA/S390 or Linux-only mode
    with an appropriate activation profile and IOCDS. Consult IBM documentation
    for more on how to achieve this. Proceed with
    <xref linkend="sec.prep.ipling.lpar"/>.
   </para>
  </sect3>
  <sect3 xml:id="sec.prep.prep_ipl.vm">
   <title>Preparing the IPL of a z/VM Installation</title>
   <para/>
   <sect4 xml:id="sec.prep.prep_ipl.vm.linux_guest">
    <title>Adding a Linux Guest</title>
    <para>
     The first step is to attach and format one or multiple DASDs in the system
     to be used by the Linux guest in z/VM. Next, create a new user in z/VM.
     The example shows the directory for a user <literal>LINUX1</literal> with
     the password <literal>LINPWD</literal>, 1&nbsp;GB of memory (extendable up
     to 2&nbsp;GB), 32&nbsp;MB of expanded RAM (XSTORE), several minidisks
     (MDISK), two CPUs, and an OSA QDIO device.
    </para>
    <tip>
     <title>Assigning Memory to z/VM guests</title>
     <para>
      When assigning memory to a z/VM guest, make sure that the memory size
      suits the needs of your preferred installation type. See
      <xref linkend="sec.info_sysreq.sysreq.hw.mem"/>. To set the memory size
      to 1&nbsp;GB, use the command <command>CP DEFINE STORAGE 1G</command>.
      After the installation has finished, reset the memory size to the desired
      value.
     </para>
    </tip>
    <example xml:id="ex.prep.prep_ipl.vm.linux_guest.config">
     <title>Configuration of a z/VM Directory</title>
<screen>USER LINUX1 LINPWD 1024M 2048M G
*____________________________________________
* LINUX1
*____________________________________________
* This VM Linux guest has two CPUs defined.

CPU 01 CPUID 111111
CPU 02 CPUID 111222
IPL CMS PARM AUTOCR
IUCV ANY
IUCV ALLOW
MACH ESA 10
OPTION MAINTCCW RMCHINFO
SHARE RELATIVE 2000
CONSOLE 01C0 3270 A
SPOOL 000C 2540 READER *
SPOOL 000D 2540 PUNCH A
SPOOL 000E 3203 A
* OSA QDIO DEVICE DEFINITIONS
DEDICATE 9A0 9A0
DEDICATE 9A1 9A1
DEDICATE 9A2 9A2
*
LINK MAINT 0190 0190 RR
LINK MAINT 019E 019E RR
LINK MAINT 019D 019D RR
* MINIDISK DEFINITIONS
MDISK 201 3390 0001 0050 DASD40 MR ONE4ME TWO4ME THR4ME
MDISK 150 3390 0052 0200 DASD40 MR ONE4ME TWO4ME THR4ME
MDISK 151 3390 0253 2800 DASD40 MR ONE4ME TWO4ME THR4ME</screen>
    </example>
    <para>
     This example uses minidisk 201 as the guest's home disk. Minidisk 150 with
     200 cylinders is the Linux swap device. Disk 151 with 2800 cylinders holds
     the Linux installation.
    </para>
    <para>
     Now add (as the user
     <systemitem class="username"
      >MAINT</systemitem>) the guest to the
     user directory with <command>DIRM FOR LINUX1 ADD</command>. Enter the name
     of the guest (<literal>LINUX1</literal>) and press <keycap>F5</keycap>.
     Set up the environment of the user with:
    </para>
<screen>DIRM DIRECT
DIRM USER WITHPASS</screen>
    <para>
     The last command returns a reader file number. This number is needed for
     the next command:
    </para>
<screen>RECEIVE &lt;number&gt; USER DIRECT A (REPL)</screen>
    <para>
     You can now log in on the guest as user
     <systemitem
      class="username">LINUX1</systemitem>.
    </para>
    <para>
     If you do not have the <literal>dirmaint</literal> option available, refer
     to the IBM documentation to set up this user.
    </para>
    <para>
     Proceed with <xref linkend="sec.prep.ipling.vm"/>.
    </para>
   </sect4>
  </sect3>
  <sect3 xml:id="sec.prep.prep_ipl.kvm">
   <title>Preparing the IPL of a KVM Guest Installation</title>
   <para>
    A KVM guest installation requires a domain XML file defining
    the virtual machine and at least one virtual disk image for the
    installation.
   </para>
   <sect4 xml:id="sec.prep.prep_ipl.kvm.disk">
    <title>Create a Virtual Disk Image</title>
    <para>
     By default libvirt searches for disk images in
     <filename>/var/lib/libvirt/images/</filename> on the &vmhost;. Although images can
     also be stored anywhere on the file system, it is
     recommended to store all images in a single location for easier
     maintainability. The following example creates a qcow2 image with a size
     of 10 GB in <filename>/var/lib/libvirt/images/</filename>. For more
     information refer to <xref linkend="cha.qemu.guest_inst.qemu-img"
     />.
    </para>
    <procedure>
     <step>
      <para>
       Log in to the KVM host server.
      </para>
     </step>
     <step>
      <para>
       Run the following command to create the image:
      </para>
<screen>&prompt.user;sudo qemu-img create -f qcow2 /var/lib/libvirt/images/s12lin_qcow2.img 10G</screen>
     </step>
    </procedure>
   </sect4>
   <sect4 xml:id="sec.prep.prep_ipl.kvm.domain">
    <title>Write a Domain XML File</title>
    <para>
     A domain XML file is used to define the &vmguest;. To create the domain
     XML file open an empty file <filename>s12-1.xml</filename> with an editor
     and create a file like in the following example.
    </para>
    <example>
     <title>Example Domain XML File</title>
     <para>
      The following example creates a &vmguest; with a single CPU, 1 GB RAM,
      and the virtual disk image created in the previous section (<xref
      linkend="sec.prep.prep_ipl.kvm.disk"/>). It assumes that the host network
      interface to which the virtual server is attached is
      <literal>bond0</literal>. Change the source devices element to match your
      network setup.
     </para>
<screen><![CDATA[<domain type="kvm">
 <name>s12-1</name>
 <description>Guest-System SUSE Sles12</description>
 <memory>1048576</memory>
 <vcpu>1</vcpu>
 <os>
  <type arch="s390x" machine="s390-ccw-virtio">hvm</type>
  <!-- Boot kernel - remove 3 lines after successfull installation -->
  <kernel>/var/lib/libvirt/images/s12-kernel.boot</kernel>
  <initrd>/var/lib/libvirt/images/s12-initrd.boot</initrd>
  <cmdline>linuxrcstderr=/dev/console</cmdline>
 </os>
 <iothreads>1</iothreads>
 <on_poweroff>destroy</on_poweroff>
 <on_reboot>restart</on_reboot>
 <on_crash>preserve</on_crash>
 <devices>
  <emulator>/usr/bin/qemu-system-s390x</emulator>
  <disk type="file" device="disk">
   <driver name="qemu" type="qcow2" cache="none" iothread="1" io="native"/>
   <source file="/var/lib/libvirt/images/s12lin_qcow2.img"/>
   <target dev="vda" bus="virtio"/>
  </disk>
  <interface type="direct">
   <source dev="bond0" mode="bridge"/>
   <model type="virtio"/>
  </interface>
  <console type="pty">
   <target type="sclp"/>
  </console>
 </devices>
</domain>]]></screen>
    </example>
   </sect4>
  </sect3>
 </sect2>

 <sect2 xml:id="sec.prep.ipling">
  <title>IPLing the &productname; Installation System</title>
  <para/>
  <sect3 xml:id="sec.prep.ipling.lpar">
   <title>IPLing an LPAR Installation</title>
   <para>
    There are different ways to IPL &productname; into an LPAR. The preferred
    way is to use the <guimenu>Load from CD-ROM or server</guimenu> feature of
    the SE or HMC.
   </para>
   <sect4 xml:id="sec.prep.ipling.lpar.cdrom">
    <title>IPL from DVD-ROM</title>
    <para>
     Mark the LPAR to install and select <guimenu>Load from CD-ROM or
     server</guimenu>. Leave the field for the file location blank or enter the
     path to the root directory of the first DVD-ROM and select continue. In
     the list of options that appears, select the default selection.
     <guimenu>Operating system messages</guimenu> should now show the kernel
     boot messages.
    </para>
   </sect4>
   <sect4 xml:id="sec.prep.ipling.lpar.dvd">
    <title>IPL from FCP-Attached SCSI DVD</title>
    <para>
     You can use the <guimenu>Load</guimenu> procedure by selecting
     <guimenu>SCSI</guimenu> as <guimenu>Load type</guimenu> to IPL from SCSI.
     Enter the WWPN (Worldwide port name) and LUN Logical unit number) provided
     by your SCSI bridge or storage (16 digits&mdash;do not omit the trailing
     0s). The boot program selector must be 2. Use your FCP adapter as
     <guimenu>Load address</guimenu> and perform an IPL.
    </para>
   </sect4>
  </sect3>
  <sect3 xml:id="sec.prep.ipling.vm">
   <title>IPLing a z/VM Installation</title>
   <para>
    This section is about IPLing the installation system to install
    &productname; for IBM &zseries; on a z/VM system.
   </para>
   <sect4 xml:id="sec.prep.ipling.vm.reader">
    <title>IPL from the z/VM Reader</title>
    <para>
     You need a working TCP/IP connection and an FTP client program within your
     newly defined z/VM guest to transfer the installation system via FTP.
     Setting up TCP/IP for z/VM is beyond the scope of this manual. Refer to
     the appropriate IBM documentation.
    </para>
    <para>
     Log in as the z/VM Linux guest to IPL. Make the content of the directory
     <filename>/boot/s390x</filename> on DVD&nbsp;1 of the &productname; for
     IBM &zseries; available via FTP within your network. From this directory,
     get the files <filename>linux</filename>, <filename>initrd</filename>,
     <filename>parmfile</filename>, and <filename>sles12.exec</filename>.
     Transfer the files with a fixed block size of 80 characters. Specify it
     with the FTP command <command>locsite fix 80</command>. It is important to
     copy <filename>linux</filename> (the Linux kernel) and
     <filename>initrd</filename> (the installation image) as binary files, so
     use the <literal>binary</literal> transfer mode.
     <filename>parmfile</filename> and <filename>sles12.exec</filename> need to
     be transferred in ASCII mode.
    </para>
    <para>
     The example shows the steps necessary. In this example, the required files
     are accessible from an FTP server at the IP address
     <literal>192.168.0.3</literal> and the login is
     <systemitem
      class="username">lininst</systemitem>. It may differ for
     your network.
    </para>
    <example xml:id="ex.prep.ipling.vm.reader.ftp.ftptrans">
     <title>Transferring the Binaries via FTP</title>
<screen>FTP 192.168.0.3
VM TCP/IP FTP Level 530
Connecting to 192.168.0.3, port 21
220 ftpserver FTP server (Version wu-2.4.2-academ[BETA-18](1)
Thu Feb 11 16:09:02 GMT 2010) ready.
USER
lininst
331 Password required for lininst
PASS
******
230 User lininst logged in.
Command:
binary
200 Type set to I
Command:
locsite fix 80
Command:
get /media/dvd1/boot/s390x/linux sles12.linux
200 PORT Command successful
150 Opening BINARY mode data connection for /media/dvd1/boot/s390x/linux
(10664192 bytes)
226 Transfer complete.
10664192 bytes transferred in 13.91 seconds.
Transfer rate 766.70 Kbytes/sec.
Command:
get /media/dvd1/boot/s390x/initrd sles12.initrd
200 PORT Command successful
150 Opening BINARY mode data connection for /media/dvd1/boot/s390x/initrd
(21403276 bytes)
226 Transfer complete.
21403276 bytes transferred in 27.916 seconds.
Transfer rate 766.70 Kbytes/sec.
Command:
ascii
200 Type set to A
Command:
get /media/dvd1/boot/s390x/parmfile sles12.parmfile
150 Opening ASCII mode data connection for /media/dvd1/boot/s390x/parmfile
(5 bytes)
226 Transfer complete.
5 bytes transferred in 0.092 seconds.
Transfer rate 0.05 Kbytes/sec.
Command:
get /media/dvd1/boot/s390x/sles12.exec sles12.exec
150 Opening ASCII mode data connection for /media/dvd1/boot/s390x/sles12.exec
(891 bytes)
226 Transfer complete.
891 bytes transferred in 0.097 seconds.
Transfer rate 0.89 Kbytes/sec.
Command:
quit</screen>
    </example>
    <para>
     Use the REXX script sles12.exec you downloaded to IPL the Linux
     installation system. This script loads the kernel, parmfile, and the
     initial RAM disk into the reader for IPL.
    </para>
    <example xml:id="sex.prep.ipling.vm.reader.startscript.slesexec">
     <title>SLES12 EXEC</title>
<screen>/* REXX LOAD EXEC FOR SUSE LINUX S/390 VM GUESTS       */
/* LOADS SUSE LINUX S/390 FILES INTO READER            */
SAY ''
SAY 'LOADING SLES12 FILES INTO READER...'
'CP CLOSE RDR'
'PURGE RDR ALL'
'SPOOL PUNCH * RDR'
'PUNCH SLES12 LINUX A (NOH'
'PUNCH SLES12 PARMFILE A (NOH'
'PUNCH SLES12 INITRD A (NOH'
'IPL 00C'</screen>
    </example>
    <para>
     With this script you can IPL the &productname; installation system with
     the command <command>sles12</command>. The Linux kernel then starts and
     prints its boot messages.
    </para>
    <para>
     To continue the installation, proceed to
     <xref
      linkend="sec.prep.netcfg"/>.
    </para>
   </sect4>
   <sect4 xml:id="sec.prep.ipling.vm.dvd">
    <title>IPL from FCP-Attached SCSI DVD</title>
    <para>
     To IPL in z/VM, prepare the SCSI IPL process by using the SET LOADDEV
     parameter:
    </para>
<screen>SET LOADDEV PORTNAME 200400E8 00D74E00 LUN 00020000 00000000 BOOT 2</screen>
    <para>
     After setting the LOADDEV parameter with the appropriate values, IPL your
     FCP adapter, for example:
    </para>
<screen>IPL FC00</screen>
    <para>
     To continue the installation, proceed with
     <xref
      linkend="sec.prep.netcfg"/>.
    </para>
   </sect4>
   <sect4 xml:id="sec.prep.ipling.vm.zpxe">
    <title>IPL from a Cobbler Server with zPXE</title>
    <para>
     To IPL from a Cobbler server with zPXE you need to transfer the
     <filename>zpxe.rexx</filename> script via FTP from the Cobbler server to
     your z/VM guest. The z/VM guest needs a working TCP/IP connection and an
     FTP client program.
    </para>
    <para>
     Log in as the z/VM Linux guest to IPL and transfer the script with a fixed
     size of 80 characters in ASCII mode (see
     <xref
      linkend="ex.prep.ipling.vm.reader.ftp.ftptrans"/> for an
     example). The <filename>zpxe.rexx</filename> script is available on the
     installation DVD at <filename>/boot/s390x/zpxe.rexx</filename> or on
     a &slea; Cobbler server at
     <filename>/usr/share/doc/packages/s390-tools/zpxe.rexx</filename>.
    </para>
    <para>
     <filename>zpxe.rexx</filename> is supposed to replace the
     <filename>PROFILE EXEC</filename> of your guest. Make a backup copy of the
     existing <filename>PROFILE EXEC</filename> and rename <filename>ZPXE
     REXX</filename> to <filename>PROFILE EXEC</filename>. Alternatively call
     <filename>ZPXE REXX</filename> from the existing <filename>PROFILE
     EXEC</filename> by using a new line with the following content:
     <literal>'ZPXE REXX'</literal>.
    </para>
    <para>
     The last step is to create a configuration file, <filename>ZPXE
     CONF</filename>, telling <filename>ZPXE REXX</filename> which Cobbler
     server to contact and which disk to IPL. Run <command>xedit zpxe conf
     a</command> and create <filename>ZPXE CONF</filename> with the following
     content (replace the example data accordingly):
    </para>
<screen>HOST cobbler.&exampledomain;
IPLDISK 600</screen>
    <para>
     On the next login to your z/VM guest, the Cobbler server will be
     connected. If an installation is scheduled on the Cobbler server, it will
     be executed. To schedule the installation, run the following command on
     the Cobbler server:
    </para>
<screen>&prompt.user;sudo cobbler system edit --name <replaceable>ID</replaceable><co xml:id="cobbler.sysedit.id"/> --netboot-enabled 1<co xml:id="cobbler.sysedit.netboot"/> --profile <replaceable>PROFILENAME</replaceable><co xml:id="cobbler.sysedit.profile"/></screen>
    <calloutlist>
     <callout arearefs="cobbler.sysedit.id">
      <para>
       z/VM user ID.
      </para>
     </callout>
     <callout arearefs="cobbler.sysedit.netboot">
      <para>
       Enable IPLing from the network.
      </para>
     </callout>
     <callout arearefs="cobbler.sysedit.profile">
      <para>
       Name of an existing profile, see
       <xref
        linkend="sec.prep.makeavail.zpxe_cobbler.profile"/>.
      </para>
     </callout>
    </calloutlist>
   </sect4>
  </sect3>
  <sect3 xml:id="sec.prep.ipling.kvm">
   <title>IPLing a KVM Guest Installation</title>
   <para>
    To start the guest installation, you first need to start the &vmguest;
    defined in <xref linkend="sec.prep.prep_ipl.kvm.disk"/>. A prerequisite for
    this is to first make the kernel and initrd required for IPLing available.
   </para>
   <sect4 xml:id="sec.prep.ipling.kvm.prep">
    <title>Preparing the installation source</title>
    <para>
     Kernel and initrd of the installation system need to be copied to the
     &vmhost; to be able to IPL the &vmguest; into the installation system.
    </para>
    <procedure>
     <step>
      <para>
       Log in to the KVM host and make sure you can connect to the remote host
       or device serving the installation source.
      </para>
     </step>
     <step>
      <para>
       Copy the following two files from the installation source to
       <filename>/var/lib/libvirt/images/</filename>. If the data is served
       from a remote host, use <command>ftp</command>, <command>sftp</command>,
       or <command>scp</command> to transfer the files:
      </para>
      <simplelist>
       <member><filename>/boot/s390x/initrd</filename>
       </member>
       <member><filename>/boot/s390x/cd.ikr</filename>
       </member>
      </simplelist>
     </step>
     <step>
      <para>
       Rename the files on the KVM host:
      </para>
<screen>&prompt.user;sudo cd /var/lib/libvirt/images/
&prompt.user;sudo mv initrd s12-initrd.boot
&prompt.user;sudo mv cd.ikr s12-kernel.boot</screen>
     </step>
    </procedure>
   </sect4>
   <sect4 xml:id="sec.prep.ipling.kvm.">
    <title>IPL the &vmguest;</title>
    <para>
     To IPL the &vmguest;, log in to the KVM host and run the following
     command:
    </para>
<screen>&prompt.user;virsh  create s12-1.xml --console</screen>
    <para>
     After the start-up of the &vmguest; has completed, the installation system
     starts and you will see the following message:
    </para>
<screen>Domain s12-1 started
Connected to domain s12-1
Escape character is ^]
Initializing cgroup subsys cpuset
Initializing cgroup subsys cpu
Initializing
cgroup subsys cpuacct
.
.
Please make sure your installation medium is available.
Retry?
0) &lt;-- Back &lt;--
1) Yes
2) No</screen>
    <para>
     Answer <guimenu>2) No</guimenu> and choose <guimenu>Installation</guimenu>
     on the next step. Proceed as described in
     <xref linkend="sec.prep.netcfg.data"/>.
    </para>
   </sect4>
  </sect3>
 </sect2>

 <sect2 xml:id="sec.prep.netcfg">
  <title>Network Configuration</title>
  <para>
   Wait until the kernel has completed its start-up routines. If you are
   installing in basic mode or in an LPAR, open the <guimenu>Operating System
   Messages</guimenu> on the HMC or SE.
  </para>
  <para>
   First, choose <guimenu>Start Installation</guimenu> in the linuxrc main menu
   then <guimenu>Start Installation or Update</guimenu> to start the
   installation process. Select <guimenu>Network</guimenu> as your installation
   medium then select the type of network protocol you will be using for the
   installation. <xref linkend="sec.prep.makeavail"/> describes how to make the
   installation data available for the various types of network connections.
   Currently, <guimenu>FTP</guimenu>, <guimenu>HTTP</guimenu>,
   <guimenu>NFS</guimenu>, and <guimenu>SMB/CIFS</guimenu> (Windows file
   sharing) are supported.
  </para>
  <para>
   Now choose an OSA or HiperSockets network device over which to receive the
   installation data from the list of available devices. The list may also
   contain CTC, ESCON, or IUCV devices, but they are no longer supported on
   &productname;.
  </para>
  <sect3 xml:id="sec.prep.netcfg.hypersockets">
   <title>Configure a HiperSockets Interface</title>
   <para>
    Select a Hipersocket device from the list of network devices. Then enter
    the numbers for the read, write and data channels:
   </para>
   <example xml:id="ex.appdendix.inst_netcontypes.types">
    <title>Supported Network Connection Types and Driver Parameters</title>
<screen>Choose the network device.

 1) IBM parallel CTC Adapter (0.0.0600)
 2) IBM parallel CTC Adapter (0.0.0601)
 3) IBM parallel CTC Adapter (0.0.0602)
 4) IBM Hipersocket (0.0.0800)
 5) IBM Hipersocket (0.0.0801)
 6) IBM Hipersocket (0.0.0802)
 7) IBM OSA Express Network card (0.0.0700)
 8) IBM OSA Express Network card (0.0.0701)
 9) IBM OSA Express Network card (0.0.0702)
10) IBM OSA Express Network card (0.0.f400)
11) IBM OSA Express Network card (0.0.f401)
12) IBM OSA Express Network card (0.0.f402)
13) IBM IUCV

&gt; 4

Device address for read channel. (Enter '+++' to abort).
[0.0.800]&gt; 0.0.800

Device address for write channel. (Enter '+++' to abort).
[0.0.801]&gt; 0.0.801

Device address for data channel. (Enter '+++' to abort).
[0.0.802]&gt; 0.0.802</screen>
   </example>
  </sect3>
  <sect3 xml:id="sec.prep.netcfg.osa">
   <title>Configure an OSA Express Device</title>
   <para>
    Select an OSA Express device from the list of network devices and provide a
    port number. Then enter the numbers for the read, write and data channels
    and the port name, if applicable. Choose whether to enable OSI Layer 2
    support.
   </para>
   <para>
    The port number was added to support the new 2 port OSA Express 3 Network
    devices. If you are not using an OSA Express 3 device, enter
    <literal>0</literal>. OSA Express cards also have the option of running in
    an <quote>OSI layer 2 support</quote> mode or using the older more common
    <quote>layer 3</quote> mode. The card mode affects all systems that share
    the device including systems on other LPARs. If in doubt, specify
    <literal>2</literal> for compatibility with the default mode used by other
    operating systems such as z/VM and z/OS. Consult with your hardware
    administrator for further information on these options.
   </para>
   <example xml:id="ex.appdendix.inst_netcontypes.gigabit.param">
    <title>Network Device Driver Parameters</title>
<screen>Choose the network device.

 1) IBM parallel CTC Adapter (0.0.0600)
 2) IBM parallel CTC Adapter (0.0.0601)
 3) IBM parallel CTC Adapter (0.0.0602)
 4) IBM Hipersocket (0.0.0800)
 5) IBM Hipersocket (0.0.0801)
 6) IBM Hipersocket (0.0.0802)
 7) IBM OSA Express Network card (0.0.0700)
 8) IBM OSA Express Network card (0.0.0701)
 9) IBM OSA Express Network card (0.0.0702)
10) IBM OSA Express Network card (0.0.f400)
11) IBM OSA Express Network card (0.0.f401)
12) IBM OSA Express Network card (0.0.f402)
13) IBM IUCV

&gt; 7

Enter the relative port number. (Enter '+++' to abort).
&gt; 0

Device address for read channel. (Enter '+++' to abort).
[0.0.0700]&gt; 0.0.0700

Device address for write channel. (Enter '+++' to abort).
[0.0.0701]&gt; 0.0.0701

Device address for data channel. (Enter '+++' to abort).
[0.0.0702]&gt; 0.0.0702

Enable OSI Layer 2 support?

0) &lt;-- Back &lt;--
1) Yes
2) No

&gt; 1

MAC address. (Enter '+++' to abort).
&gt; +++</screen>
   </example>
  </sect3>
  <sect3 xml:id="sec.prep.netcfg.data">
   <title>Set Up the Network and Select the Installation Source</title>
   <para>
    When all network device parameters have been entered, the respective driver
    is installed and you see the corresponding kernel messages.
   </para>
   <para>
    Next, decide whether to use DHCP autoconfiguration for setting up the
    network interface parameters. Because DHCP only works on a few devices and
    requires special hardware configuration settings, you probably want to say
    <guimenu>NO</guimenu> here. When you do so, you are prompted for the
    following networking parameters:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      The IP address of the system to install
     </para>
    </listitem>
    <listitem>
     <para>
      The corresponding netmask (if not having been specified with the IP
      address)
     </para>
    </listitem>
    <listitem>
     <para>
      The IP address of a gateway to reach the server
     </para>
    </listitem>
    <listitem>
     <para>
      A list of search domains covered by the domain name server (DNS)
     </para>
    </listitem>
    <listitem>
     <para>
      The IP address of your domain name server
     </para>
    </listitem>
   </itemizedlist>
   <example xml:id="ex.prep.netcfg.vm.network_setup">
    <title>Networking Parameters</title>
<screen>Automatic configuration via DHCP?

0) &lt;-- Back &lt;--
1) Yes
2) No

&gt; 2

Enter your IP address with network prefix.

You can enter more than one, separated by space, if necessary.
Leave empty for autoconfig.

Examples: 192.168.5.77/24 2001:db8:75:fff::3/64. (Enter '+++' to abort).
&gt; 192.168.0.20/24

Enter your name server IP address.

You can enter more than one, separated by space, if necessary.
Leave empty if you don't need one.

Examples: 192.168.5.77 2001:db8:75:fff::3. (Enter '+++' to abort).
&gt; 192.168.0.1

Enter your search domains, separated by a space:. (Enter '+++' to abort).
&gt; &exampledomain;

Enter the IP address of your name server. Leave empty if you do not need one. (En
ter '+++' to abort).
&gt; 192.168.0.1</screen>
   </example>
   <para>
    Finally, you are prompted for details on the installation server, such as
    the IP address, the directory containing the installation data, and login
    credentials. Once all required data is entered, the installation system
    loads.
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="sec.prep.connect">
  <title>Connecting to the &productname; Installation System</title>
  <para>
   After having loaded the installation system, linuxrc wants to know what type
   of display you want to use to control the installation procedure. Possible
   choices are <literal>X11</literal> (X Window System), <literal>VNC</literal>
   (Virtual Network Computing protocol), <literal>SSH</literal> (text mode or
   X11 installation via Secure Shell), or <literal>ASCII Console</literal>.
   Selecting <literal>VNC</literal> or <literal>SSH</literal> is recommended.
  </para>
  <para>
   When selecting the latter (<literal>ASCII Console</literal>), &yast; will be
   started in text mode and you can perform the installation directly within
   your terminal. See <xref
    linkend="cha.yast.text"/> for instructions on
   how to use &yast; in text mode. Using the <literal>ASCII Console</literal>
   is only useful when installing into LPAR.
  </para>
  <note>
   <title>Terminal Emulation for ASCII Console</title>
   <para>
    To be able to work with &yast; in text mode, it needs to run in a terminal
    with VT220/Linux emulation (also called <literal>ASCII console</literal>).
    You cannot use &yast; in a 3270 terminal, for example.
   </para>
  </note>
  <sect3 xml:id="sec.inst.connect.vnc_inst">
   <title>Initiating the Installation for VNC</title>
   <procedure>
    <step>
     <para>
      After the installation option <literal>VNC</literal> has been chosen, the
      VNC server starts. A short note displayed in the console provides
      information about which IP address and display number is needed for a
      connection with vncviewer.
     </para>
    </step>
    <step>
     <para>
      Start a VNC client application on your client system.
     </para>
    </step>
    <step>
     <para>
      Enter the IP address and the display number of the &productname;
      installation system when prompted to do so.
     </para>
    </step>
    <step>
     <para>
      After the connection has been established, start installing &productname;
      with &yast;.
     </para>
    </step>
   </procedure>
  </sect3>
  <sect3 xml:id="sec.inst.connect.x">
   <title>Initiating the Installation for the X Window System</title>
   <important>
    <title>X Authentication Mechanism</title>
    <para>
     The direct installation with the X Window System relies on a primitive
     authentication mechanism based on host names. This mechanism is disabled
     on current &productname; versions. Installation with SSH or VNC is
     preferred.
    </para>
   </important>
   <procedure>
    <step>
     <para>
      Make sure that the X server allows the client (the system that is
      installed) to connect. Set the variable
      <command>DISPLAYMANAGER_XSERVER_TCP_PORT_6000_OPEN="yes"</command> in the
      file <filename>/etc/sysconfig/displaymanager</filename>. Then restart the
      X server and allow client binding to the server using <command>xhost
      &lt;client IP address&gt;</command>.
     </para>
    </step>
    <step>
     <para>
      When prompted at the installation system, enter the IP address of the
      machine running the X server.
     </para>
    </step>
    <step>
     <para>
      Wait until &yast; opens then start the installation.
     </para>
    </step>
   </procedure>
  </sect3>
  <sect3 xml:id="sec.inst.connect.ssh">
   <title>Initiating the Installation for SSH</title>
   <para>
    To connect to an installation system with the name
    <literal>&exampleclient;</literal> using SSH, execute <command>ssh -X
    &exampleclient;</command>. If your workstation runs on Microsoft Windows,
    use the SSH and telnet client and terminal emulator Putty which is
    available from
    <link
     xlink:href="http://www.chiark.greenend.org.uk/~sgtatham/putty/"/>.
    Set <guimenu>Enable X11 forwarding</guimenu> in Putty under <menuchoice>
    <guimenu>Connection</guimenu> <guimenu>SSH</guimenu> <guimenu>X11</guimenu>
    </menuchoice>. If you use another operating system, execute <command>ssh -X
    &exampleclient;</command> to connect to an installation system with the
    name <systemitem>&exampleclient;</systemitem>. X-Forwarding over SSH is
    supported if you have a local X server available. Otherwise, &yast;
    provides a text interface over ncurses.
   </para>
   <para>
    A login prompt appears. Enter <literal>root</literal> and log in with your
    password. Enter <command>yast.ssh</command> to start &yast;. &yast; then
    guides you through the installation.
   </para>
   <para>
    Proceed with the detailed description of the installation procedure that
    can be found in <xref linkend="cha.install"/>.
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="sec.prep.boot_procedure">
  <title>The &productname; Boot Procedure on IBM &zseries;</title>
  <para>
   The boot process for &slsa; 10 and 11 followed the scheme provided below.
   For in-depth information refer to the documentation provided at
   <link
    xlink:href="http://www.ibm.com/developerworks/linux/linux390/documentation_suse.html"
   />.
  </para>
  <orderedlist>
   <listitem>
    <para>
     Provide the kernel.
    </para>
   </listitem>
   <listitem>
    <para>
     Provide or create an initrd for the given kernel.
    </para>
   </listitem>
   <listitem>
    <para>
     Provide the correct paths for the initrd and the kernel in
     <filename>/etc/zipl.conf</filename>.
    </para>
   </listitem>
   <listitem>
    <para>
     Install the configuration provided by <filename>/etc/zipl.conf</filename>
     to the system.
    </para>
   </listitem>
  </orderedlist>
  <para>
   With &slsa; 12 the way &productname; is booted on IBM &zseries; has changed.
   Several reasons led to this change:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Alignment with other architectures: From an administrative point of view
     &slsa; systems should behave the same on all architectures.
    </para>
   </listitem>
   <listitem>
    <para>
     Btrfs: The zipl boot loader is technically incompatible with Btrfs, the
     new default root file system for &slsa; (see
     <xref
      linkend="sec.filesystems.major.btrfs"/> for details).
    </para>
   </listitem>
   <listitem>
    <para>
     Support for system rollbacks with Snapper: Snapper, in combination with
     Btrfs, provides bootable system snapshots which can be used for system
     rollbacks (see <xref linkend="cha.snapper"/> for details).
    </para>
   </listitem>
  </itemizedlist>
  <para>
   For those reasons, starting with &slsa; 12, &grub; replaces zipl on IBM
   &productname; for &zseries;. &grub; on the &amd64;/&intel64; architecture
   includes device drivers on the firmware level to access the file system. On
   the mainframe there is no firmware and adding <literal>ccw</literal> to
   &grub; would not only be a major undertaking, but would also require a reimplementation
   of zipl in &grub;. Therefore &productname; uses a two-stage approach:
  </para>
  <variablelist>
   <varlistentry>
    <term>Stage One:</term>
    <listitem>
     <para>
      A separate partition containing the kernel and an initrd is mounted to
      <filename>/boot/zipl</filename> (somewhat similar to
      <filename>/boot/efi</filename> on UEFI platforms). This kernel and the
      initrd are loaded via zipl using the configuration from
      <filename>/boot/zipl/config</filename>.
     </para>
     <para>
      This configuration adds the keyword <literal>initgrub</literal> to the
      kernel command line. When the kernel and initrd are loaded, the initrd
      activates the devices required to mount the root file system (see
      <filename>/boot/zipl/active_devices.txt</filename>). Afterward a &grub;
      user space program is started, which reads
      <filename>/boot/grub2/grub.cfg</filename>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Stage Two:</term>
    <listitem>
     <para>
      The kernel and the initrd specified in
      <filename>/boot/grub2/grub.cfg</filename> are started via
      <command>kexec</command>. All devices listed in
      <filename>/boot/zipl/active_devices.txt</filename> are activated, the
      root file system is mounted and the boot procedure continues like on the
      other architectures.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>
</sect1>
