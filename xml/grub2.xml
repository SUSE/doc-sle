<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.grub2">
 <title>The Boot Loader &grub;</title>
 <info>
  <abstract>
   <para>
    This chapter describes how to configure &grub;, the boot loader used in
    &productnamereg;. It is the successor to the traditional GRUB boot
    loader&mdash;now called <quote>GRUB Legacy</quote>.
    <phrase os="sled;sles">&grub; has been the default boot loader in
    &productnamereg; since versionÂ 12.</phrase> A &yast; module is available
    for configuring the most important settings. The boot procedure as a whole
    is outlined in <xref linkend="cha.boot"/>. For details on Secure Boot
    support for UEFI machines, see <xref linkend="cha.uefi"/>.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="sec.grub2.new.features">
  <title>Main Differences between GRUB Legacy and &grub;</title>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     The configuration is stored in different files.
    </para>
   </listitem>
   <listitem>
    <para>
     More file systems are supported (for example, Btrfs).
    </para>
   </listitem>
   <listitem>
    <para>
     Can directly read files stored on LVM or RAID devices.
    </para>
   </listitem>
   <listitem>
    <para>
     The user interface can be translated and altered with themes.
    </para>
   </listitem>
   <listitem>
    <para>
     Includes a mechanism for loading modules to support additional features,
     such as file systems, etc.
    </para>
   </listitem>
   <listitem>
    <para>
     Automatically searches for and generates boot entries for other kernels
     and operating systems, such as Windows.
    </para>
   </listitem>
   <listitem>
    <para>
     Includes a minimal Bash-like console.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec.grub2.file_structure">
  <title>Configuration File Structure</title>

  <para>
   The configuration of &grub; is based on the following files:
  </para>

  <variablelist>
   <varlistentry>
    <term><filename>/boot/grub2/grub.cfg</filename>
    </term>
    <listitem>
     <para>
      This file contains the configuration of the &grub; menu items. It
      replaces <filename>menu.lst</filename> used in GRUB Legacy.
      <filename>grub.cfg</filename> is automatically generated by the
      <xref linkend="vle.grub2.mkconfig"/> command, and should not be edited.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/boot/grub2/custom.cfg</filename>
    </term>
    <listitem>
     <para>
      This optional file is directly sourced by <filename>grub.cfg</filename>
      at boot time and can be used to add custom items to the boot menu.
      Starting with &productname; <phrase
      os="sles,sled">12
      SP2</phrase><phrase os="osuse">Leap 42.2</phrase> these entries will also
      be parsed when using <command>grub-once</command>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/etc/default/grub</filename>
    </term>
    <listitem>
     <para>
      This file controls the user settings of &grub; and usually includes
      additional environmental settings such as backgrounds and themes.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Scripts under <filename>/etc/grub.d/</filename>
    </term>
    <listitem>
     <para>
      The scripts in this directory are read during execution of the
      <xref linkend="vle.grub2.mkconfig"/> command. Their instructions are
      integrated into the main configuration file
      <filename>/boot/grub/grub.cfg</filename>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="vle.grub2.sysconfig">
    <term><filename>/etc/sysconfig/bootloader</filename>
    </term>
    <listitem>
     <para>
      This configuration file is used when configuring the boot loader with
      &yast; and every time a new kernel is installed. It is evaluated by the
      perl-bootloader which modifies the boot loader configuration file (for
      example <filename>/boot/grub2/grub.cfg</filename> for &grub;)
      accordingly. <filename>/etc/sysconfig/bootloader</filename> is not a
      &grub;-specific configuration file&mdash;the values are applied to any
      boot loader installed on &productname;.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename arch="x86_64">/boot/grub2/x86_64-efi</filename>,
     <filename arch="power">/boot/grub2/power-ieee1275</filename>,
     <filename arch="zseries">/boot/grub2/s390x</filename>
    </term>
    <listitem>
     <para>
      These configuration files contain architecture-specific options.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   &grub; can be controlled in various ways. Boot entries from an existing
   configuration can be selected from the graphical menu (splash screen). The
   configuration is loaded from the file
   <filename>/boot/grub2/grub.cfg</filename> which is compiled from other
   configuration files (see below). All &grub; configuration files are
   considered system files, and you need &rootuser; privileges to edit them.
  </para>

  <note>
   <title>Activating Configuration Changes</title>
   <para>
    After having manually edited &grub; configuration files, you need to run
    <xref linkend="vle.grub2.mkconfig"/> to activate the changes. However, this
    is not necessary when changing the configuration with &yast;, since it will
    automatically run <xref linkend="vle.grub2.mkconfig"/>.
   </para>
  </note>

  <sect2 xml:id="sec.grub2.cfg">
   <title>The File <filename>/boot/grub2/grub.cfg</filename></title>
   <para>
    The graphical splash screen with the boot menu is based on the &grub;
    configuration file <filename>/boot/grub2/grub.cfg</filename>, which
    contains information about all partitions or operating systems that can be
    booted by the menu.
   </para>
   <para>
    Every time the system is booted, &grub; loads the menu file directly from
    the file system. For this reason, &grub; does not need to be re-installed
    after changes to the configuration file. <filename>grub.cfg</filename> is
    automatically rebuilt with kernel installations or removals.
   </para>
   <para>
    <filename>grub.cfg</filename> is compiled by the
    <xref linkend="vle.grub2.mkconfig"/> from the file
    <filename>/etc/default/grub</filename> and scripts found in the
    <filename>/etc/grub.d/</filename> directory. Therefore you should never
    edit the file manually. Instead, edit the related source files or use the
    &yast; <guimenu>Boot Loader</guimenu> module to modify the configuration as
    described in <xref linkend="sec.grub2.yast2.config"/>.
   </para>
  </sect2>

  <sect2 xml:id="sec.grub2.etc_default_grub">
   <title>The File <filename>/etc/default/grub</filename></title>
   <para>
    More general options of &grub; belong here, such as the time the menu is
    displayed, or the default OS to boot. To list all available options, see
    the output of the following command:
   </para>
<screen>&prompt.user;grep "export GRUB_DEFAULT" -A50 /usr/sbin/grub2-mkconfig | grep GRUB_</screen>
   <para>
    In addition to already defined variables, the user may introduce their own
    variables, and use them later in the scripts found in the
    <filename>/etc/grub.d</filename> directory.
   </para>
   <para>
    After having edited <filename>/etc/default/grub</filename>, run
    <xref linkend="vle.grub2.mkconfig"/> to update the main configuration file.
   </para>
   <note>
    <title>Scope</title>
    <remark>
     Do we really still have Xen-specific kernels? - sknorr, 2017-05-08
    </remark>
    <para>
     All options set in this file are general options that affect all boot
     entries. Specific options for &xen; kernels or the &xen; hypervisor can be
     set via the GRUB_*_XEN_* configuration options. See below for details.
    </para>
   </note>
   <variablelist>
    <varlistentry>
     <term><literal>GRUB_DEFAULT</literal>
     </term>
     <listitem>
      <para>
       Sets the boot menu entry that is booted by default. Its value can be a
       numeric value, the complete name of a menu entry, or
       <quote>saved</quote>.
      </para>
      <para>
       <literal>GRUB_DEFAULT=2</literal> boots the third (counted from zero)
       boot menu entry.
      </para>
      <para>
       <literal>GRUB_DEFAULT="2&gt;0"</literal> boots the first submenu entry
       of the third top-level menu entry.
      </para>
      <para>
       <literal>GRUB_DEFAULT="Example boot menu entry"</literal> boots the menu
       entry with the title <quote>Example boot menu entry</quote>.
      </para>
      <para>
       <literal>GRUB_DEFAULT=saved</literal> boots the entry specified by the
       <command>grub2-once</command> or <command>grub2-set-default</command>
       commands. While <command>grub2-reboot</command> sets the
       default boot entry for the next reboot only,
       <command>grub2-set-default</command> sets the default boot entry until
       changed. <command>grub2-editenv list</command> lists next boot entry.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_HIDDEN_TIMEOUT</literal>
     </term>
     <listitem>
      <para>
       Waits the specified number of seconds for the user to press a key.
       During the period no menu is shown unless the user presses a key. If no
       key is pressed during the time specified, the control is passed to
       <literal>GRUB_TIMEOUT</literal>.
       <literal>GRUB_HIDDEN_TIMEOUT=0</literal> first checks whether
       <keycap function="shift"/> is pressed and shows the boot menu if yes,
       otherwise immediately boots the default menu entry. This is the default
       when only one bootable OS is identified by &grub;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_HIDDEN_TIMEOUT_QUIET</literal>
     </term>
     <listitem>
      <para>
       If <literal>false</literal> is specified, a countdown timer is displayed
       on a blank screen when the <literal>GRUB_HIDDEN_TIMEOUT</literal>
       feature is active.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_TIMEOUT</literal>
     </term>
     <listitem>
      <para>
       Time period in seconds the boot menu is displayed before automatically
       booting the default boot entry. If you press a key, the timeout is
       cancelled and &grub; waits for you to make the selection manually.
       <literal>GRUB_TIMEOUT=-1</literal> will cause the menu to be displayed
       until you select the boot entry manually.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_LINUX</literal>
     </term>
     <listitem>
      <para>
       Entries on this line are added at the end of the boot entries for normal
       and recovery mode. Use it to add kernel parameters to the boot entry.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_LINUX_DEFAULT</literal>
     </term>
     <listitem>
      <para>
       Same as <literal>GRUB_CMDLINE_LINUX</literal> but the entries are
       appended in the normal mode only.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_LINUX_RECOVERY</literal>
     </term>
     <listitem>
      <para>
       Same as <literal>GRUB_CMDLINE_LINUX</literal> but the entries are
       appended in the recovery mode only.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_LINUX_XEN_REPLACE</literal>
     </term>
     <listitem>
      <para>
       This entry will completely replace the
       <literal>GRUB_CMDLINE_LINUX</literal> parameters for all &xen; boot
       entries.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_LINUX_XEN_REPLACE_DEFAULT</literal>
     </term>
     <listitem>
      <para>
       Same as <literal>GRUB_CMDLINE_LINUX_XEN_REPLACE</literal> but it will
       only replace parameters of<literal>GRUB_CMDLINE_LINUX_DEFAULT</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_XEN</literal>
     </term>
     <listitem>
      <para>
       This entry specifies the kernel parameters for the &xen; guest kernel
       only&mdash;the operation principle is the same as for
       <literal>GRUB_CMDLINE_LINUX</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_XEN_DEFAULT</literal>
     </term>
     <listitem>
      <para>
       Same as <literal>GRUB_CMDLINE_XEN</literal>&mdash;the operation
       principle is the same as for
       <literal>GRUB_CMDLINE_LINUX_DEFAULT</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_TERMINAL</literal>
     </term>
     <listitem>
      <para>
       Enables and specifies an input/output terminal device. Can be
       <literal>console</literal> (PC BIOS and EFI consoles),
       <literal>serial</literal> (serial terminal),
       <literal>ofconsole</literal> (Open Firmware console), or the default
       <literal>gfxterm</literal> (graphics-mode output). It is also possible
       to enable more than one device by quoting the required options, for
       example <literal>GRUB_TERMINAL="console serial"</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_GFXMODE</literal>
     </term>
     <listitem>
      <para>
       The resolution used for the <literal>gfxterm</literal> graphical
       terminal. Note that you can only use modes supported by your graphics
       card (VBE). The default is âautoâ, which tries to select a preferred
       resolution. You can display the screen resolutions available to &grub;
       by typing <command>videoinfo</command> in the &grub; command line. The
       command line is accessed by typing <keycap>C</keycap> when the &grub;
       boot menu screen is displayed.
      </para>
      <para>
       You can also specify a color depth by appending it to the resolution
       setting, for example <literal>GRUB_GFXMODE=1280x1024x24</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_BACKGROUND</literal>
     </term>
     <listitem>
      <para>
       Set a background image for the <literal>gfxterm</literal> graphical
       terminal. The image must be a file readable by &grub; at boot time, and
       it must end with the <literal>.png</literal>, <literal>.tga</literal>,
       <literal>.jpg</literal>, or <literal>.jpeg</literal> suffix. If
       necessary, the image will be scaled to fit the screen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_DISABLE_OS_PROBER</literal>
     </term>
     <listitem>
      <para>
       If this option is set to <literal>true</literal>, automatic searching
       for other operating systems is disabled. Only the kernel images in
       <filename>/boot/</filename> and the options from your own scripts in
       <filename>/etc/grub.d/</filename> are detected.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>SUSE_BTRFS_SNAPSHOT_BOOTING</literal>
     </term>
     <listitem>
      <para>
       If this option is set to <literal>true</literal>, &grub; can boot
       directly into Snapper snapshots. For more information, see
       <xref linkend="sec.snapper.snapshot-boot"/>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    For a complete list of options, see the
    <link xlink:href="http://www.gnu.org/software/grub/manual/grub.html#Simple-configuration">
    GNU GRUB manual</link>. For a complete list of possible parameters, see
    <link xlink:href="http://en.opensuse.org/Linuxrc"/>.
   </para>
  </sect2>

  <sect2 xml:id="sec.grub2.etc_grub_d">
   <title>Scripts in <filename>/etc/grub.d</filename></title>
   <para>
    The scripts in this directory are read during execution of the
    <xref linkend="vle.grub2.mkconfig"/> command, and their instructions are
    incorporated into <filename>/boot/grub2/grub.cfg</filename>. The order of
    menu items in <filename>grub.cfg</filename> is determined by the order in
    which the files in this directory are run. Files with a leading numeral are
    executed first, beginning with the lowest number.
    <filename>00_header</filename> is run before <filename>10_linux</filename>,
    which would run before <filename>40_custom</filename>. If files with
    alphabetic names are present, they are executed after the numerically-named
    files. Only executable files generate output to
    <filename>grub.cfg</filename> during execution of
    <command>grub2-mkconfig</command>. By default all files in the
    <filename>/etc/grub.d</filename> directory are executable.
   </para>
   <tip>
    <title>Persistent Custom Content in <filename>grub.cfg</filename></title>
    <para>
     Because <filename>/boot/grub2/grub.cfg</filename> is recompiled each time
     <command>grub2-mkconfig</command> is run, any custom content is lost.
     If you want to insert your lines directly into
     <filename>/boot/grub2/grub.cfg</filename> without losing them after
     <command>grub2-mkconfig</command> is run, insert it between
    </para>
    <screen>### BEGIN /etc/grub.d/90_persistent ###</screen>
    <para>
     and
    </para>
    <screen>### END /etc/grub.d/90_persistent ###</screen>
    <para>
     lines. The <filename>90_persistent</filename> script ensures that such
     content will be preserved.
    </para>
    <para>
     A list of the most important scripts follows:
    </para>
   </tip>
   <variablelist>
    <varlistentry>
     <term><filename>00_header</filename>
     </term>
     <listitem>
      <para>
       Sets environmental variables such as system file locations, display
       settings, themes, and previously saved entries. It also imports
       preferences stored in the <filename>/etc/default/grub</filename>.
       Normally you do not need to make changes to this file.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>10_linux</filename>
     </term>
     <listitem>
      <para>
       Identifies Linux kernels on the root device and creates relevant menu
       entries. This includes the associated recovery mode option if enabled.
       Only the latest kernel is displayed on the main menu page, with
       additional kernels included in a submenu.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>30_os-prober</filename>
     </term>
     <listitem>
      <para>
       This script uses <command>os-prober</command> to search for Linux and
       other operating systems and places the results in the &grub; menu. There
       are sections to identify specific other operating systems, such as
       Windows or macOS.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>40_custom</filename>
     </term>
     <listitem>
      <para>
       This file provides a simple way to include custom boot entries into
       <filename>grub.cfg</filename>. Make sure that you do not change the
       <literal>exec tail -n +3 $0</literal> part at the beginning.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    The processing sequence is set by the preceding numbers with the lowest
    number being executed first. If scripts are preceded by the same number the
    alphabetical order of the complete name decides the order.
   </para>
   <tip>
    <title><filename>/boot/grub2/custom.cfg</filename></title>
    <para>
     If you create <filename>/boot/grub2/custom.cfg</filename> and fill it with
     a custom content, it will be automatically included into
     <filename>/boot/grub2/grub.cfg</filename> at boot time.
    </para>
   </tip>
  </sect2>

  <sect2 xml:id="sec.grub2.map">
   <title>Mapping between BIOS Drives and Linux Devices</title>
   <para>
    In GRUB Legacy, the <filename>device.map</filename> configuration file was
    used to derive Linux device names from BIOS drive numbers. The mapping
    between BIOS drives and Linux devices cannot always be guessed correctly.
    For example, GRUB Legacy would get a wrong order if the boot sequence of
    IDE and SCSI drives is exchanged in the BIOS configuration.
   </para>
   <para>
    &grub; avoids this problem by using device ID strings (UUIDs) or file
    system labels when generating <filename>grub.cfg</filename>. &grub;
    utilities create a temporary device map on the fly, which is usually
    sufficient, particularly in the case of single-disk systems.
   </para>
   <para>
    However, if you need to override the &grub;'s automatic device mapping
    mechanism, create your custom mapping file
    <filename>/boot/grub2/device.map</filename>. The following example changes
    the mapping to make <literal>DISK 3</literal> the boot disk. Note that
    &grub; partition numbers start with <literal>1</literal> and not with
    <literal>0</literal> as in GRUB Legacy.
   </para>
<screen>(hd1)  /dev/disk-by-id/<replaceable>DISK3 ID</replaceable>
(hd2)  /dev/disk-by-id/<replaceable>DISK1 ID</replaceable>
(hd3)  /dev/disk-by-id/<replaceable>DISK2 ID</replaceable></screen>
  </sect2>

  <sect2 xml:id="sec.grub2.menu_change">
   <title>Editing Menu Entries during the Boot Procedure</title>
   <para>
    Being able to directly edit menu entries is useful when the system does not
    boot anymore because of a faulty configuration. It can also be used to test
    new settings without altering the system configuration.
   </para>
   <procedure>
    <step>
     <para>
      In the graphical boot menu, select the entry you want to edit with the
      arrow keys.
     </para>
    </step>
    <step>
     <para>
      Press <keycap>E</keycap> to open the text-based editor.
     </para>
    </step>
    <step>
     <para>
      Use the arrow keys to move to the line you want to edit.
     </para>
     <figure xml:id="fig.grub2.boot.editor">
      <title>&grub; Boot Editor</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="grub2_edit_config.png" width="75%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="grub2_edit_config.png" width="75%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
     <para>
      Now you have two options:
     </para>
     <substeps performance="required">
      <step>
       <para>
        Add space-separated parameters to the end of the line starting with
        <literal>linux</literal> or <literal>linuxefi</literal> to edit the
        kernel parameters. A complete list of parameters is available at
        <link xlink:href="http://en.opensuse.org/Linuxrc"/>.
       </para>
      </step>
      <step>
       <para>
        Or edit the general options to change for example the kernel version.
        The <keycap function="tab"/> key suggests all possible completions.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Press <keycap>F10</keycap> to boot the system with the changes you made
      or press <keycap function="escape"/> to discard your edits and return to
      the &grub; menu.
     </para>
    </step>
   </procedure>
   <para>
    Changes made this way only apply to the current boot process and are not
    saved permanently.
   </para>
   <important>
    <title>Keyboard Layout During the Boot Procedure</title>
    <para>
     The US keyboard layout is the only one available when booting. See
     <xref linkend="fig.trouble.install.keyboard_us"/>.
    </para>
   </important>
   <note arch="x86_64">
    <title>Boot Loader on the Installation Media</title>
    <para>
     The Boot Loader of the installation media on systems with a traditional
     BIOS is still GRUB Legacy. To add boot parameters, select an entry and start
     typing. Additions you make to the installation boot entry will be
     permanently saved in the installed system.
    </para>
   </note>
   <note arch="zseries">
    <title>Editing &grub; Menu Entries on &zseries;</title>
    <para>
     Cursor movement and editing commands on IBM &zseries; differ&mdash;see
     <xref linkend="sec.grub2.zseries"/> for details.
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec.grub2.password">
   <title>Setting a Boot Password</title>
   <para>
    Even before the operating system is booted, &grub; enables access to file
    systems. Users without root permissions can access files in your Linux
    system to which they have no access after the system is booted. To block
    this kind of access or to prevent users from booting certain menu entries,
    set a boot password.
   </para>
   <important>
    <title>Booting Requires Password</title>
    <para>
     If set, the boot password is required on every boot, which means the
     system does not boot automatically.
    </para>
   </important>
   <para>
    Proceed as follows to set a boot password. Alternatively use &yast;
    (<xref linkend="vle.grub2.yast2.boot.password"/>).
   </para>
   <procedure>
    <step>
     <para>
      Encrypt the password using <command>grub2-mkpasswd-pbkdf2:</command>
     </para>
<screen>&prompt.sudo;grub2-mkpasswd-pbkdf2
Password: ****
Reenter password: ****
PBKDF2 hash of your password is grub.pbkdf2.sha512.10000.9CA4611006FE96BC77A...
</screen>
    </step>
    <step>
     <para>
      Paste the resulting string into the file
      <filename>/etc/grub.d/40_custom</filename> together with the <command>set
      superusers</command> command.
     </para>
<screen>set superusers="root"
password_pbkdf2 root grub.pbkdf2.sha512.10000.9CA4611006FE96BC77A...</screen>
    </step>
    <step>
     <para>
      Run <xref linkend="vle.grub2.mkconfig"/> to import the changes into the
      main configuration file.
     </para>
    </step>
   </procedure>
   <para>
    After you reboot, you will be prompted for a user name and a password when
    trying to boot a menu entry. Enter <literal>root</literal> and the password
    you typed during the <command>grub2-mkpasswd-pbkdf2</command> command. If
    the credentials are correct, the system will boot the selected boot entry.
   </para>
   <para>
    For more information, see
    <link
    xlink:href="https://www.gnu.org/software/grub/manual/grub.html#Security"/>.
   </para>
  </sect2>
 </sect1>
 <xi:include href="grub2_yast_i.xml"/>
 <sect1 xml:id="sec.grub2.zseries">
  <title>Differences in Terminal Usage on &zseries;</title>

  <para>
   On 3215 and 3270 terminals there are some differences and limitations on how
   to move the cursor and how to issue editing commands within &grub;.
  </para>

  <sect2 xml:id="sec.grub2.zseries.limitations">
   <title>Limitations</title>
   <variablelist>
    <varlistentry>
     <term>Interactivity</term>
     <listitem>
      <para>
       Interactivity is strongly limited. Typing often does not result in
       visual feedback. To see where the cursor is, type an underscore
       (<keycap>_</keycap>).
      </para>
      <note>
       <title>3270 Compared to 3215</title>
       <para>
        The 3270 terminal is much better at displaying and refreshing screens
        than the 3215 terminal.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Cursor Movement</term>
     <listitem>
      <para>
       <quote>Traditional</quote> cursor movement is not possible.
       <keycap function="alt"/>, <keycap function="meta"/>,
       <keycap function="control"/> and the cursor keys do not work. To move
       the cursor, use the key combinations listed in
       <xref linkend="sec.grub2.zseries.keys"/>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Caret</term>
     <listitem>
      <para>
       The caret (<keycap>^</keycap>) is used as a control character. To type a
       literal <keycap>^</keycap> followed by a letter, type
       <keycap>^</keycap>, <keycap>^</keycap>,
       <replaceable>LETTER</replaceable>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Enter</term>
     <listitem>
      <para>
       The <keycap function="enter"/> key does not work, use
       <keycombo><keycap>^</keycap> <keycap>J</keycap></keycombo> instead.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec.grub2.zseries.keys">
   <title>Key Combinations</title>
   <informaltable>
    <tgroup cols="3">
     <tbody>
      <row>
       <entry morerows="2" valign="top">
        <para>
         Common Substitutes:
        </para>
       </entry>
       <entry>
        <para>
         <keycombo><keycap>^</keycap> <keycap>J</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         engage (<quote>Enter</quote>)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>L</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         abort, return to previous <quote>state</quote>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>I</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         tab completion (in edit and shell mode)
        </para>
       </entry>
      </row>
      <row>
       <entry morerows="8" valign="top">
        <para>
         Keys Available in Menu Mode:
        </para>
       </entry>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>A</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         first entry
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>E</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         last entry
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>P</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         previous entry
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>N</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         next entry
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>G</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         previous page
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>C</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         next page
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>F</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         boot selected entry or enter submenu (same as
         <keycombo><keycap>^</keycap><keycap>J</keycap></keycombo>)
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>E</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         edit selected entry
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>C</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         enter GRUB-Shell
        </para>
       </entry>
      </row>
      <row>
       <entry morerows="13" valign="top">
        <para>
         Keys Available in Edit Mode:
        </para>
       </entry>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>P</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         previous line
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>N</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         next line
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>B</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         backward char
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>F</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         forward char
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>A</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         beginning of line
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>E</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         end of line
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>H</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         backspace
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>D</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         delete
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>K</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         kill line
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>Y</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         yank
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>O</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         open line
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>L</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         refresh screen
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>X</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         boot entry
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>C</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         enter GRUB-Shell
        </para>
       </entry>
      </row>
      <row>
       <entry morerows="10" valign="top">
        <para>
         Keys Available in Command Line Mode:
        </para>
       </entry>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>P</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         previous command
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>N</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         next command from history
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>A</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         beginning of line
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>E</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         end of line
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>B</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         backward char
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>F</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         forward char
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>H</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         backspace
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>D</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         delete
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>K</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         kill line
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>U</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         discard line
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <keycombo><keycap>^</keycap><keycap>Y</keycap></keycombo>
        </para>
       </entry>
       <entry>
        <para>
         yank
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.grub2.commands">
  <title>Helpful &grub; Commands</title>

  <variablelist>
   <varlistentry xml:id="vle.grub2.mkconfig">
    <term><command>grub2-mkconfig</command>
    </term>
    <listitem>
     <para>
      Generates a new <filename>/boot/grub2/grub.cfg</filename> based on
      <filename>/etc/default/grub</filename> and the scripts from
      <filename>/etc/grub.d/</filename>.
     </para>
     <example>
      <title>Usage of grub2-mkconfig</title>
<screen>grub2-mkconfig -o /boot/grub2/grub.cfg</screen>
     </example>
     <tip>
      <title>Syntax Check</title>
      <para>
       Running <command>grub2-mkconfig</command> without any parameters prints
       the configuration to STDOUT where it can be reviewed. Use
       <xref linkend="vle.grub2.script_check"/> after
       <filename>/boot/grub2/grub.cfg</filename> has been written to check its
       syntax.
      </para>
     </tip>
     <important>
      <title><command>grub2-mkconfig</command> Cannot Repair UEFI Secure Boot Tables</title>
      <para>
       If you are using UEFI Secure Boot and your system is not reaching &grub;
       correctly anymore, you may need to additionally reinstall Shim and
       regenerate the UEFI boot table. To do so, use:
      </para>
<screen>&prompt.root;shim-install --config-file=/boot/grub2/grub.cfg</screen>
     </important>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="vle.grub2.mkrescue">
    <term><command>grub2-mkrescue</command></term>
    <listitem>
     <para>
      Creates a bootable rescue image of your installed &grub; configuration.
     </para>
     <example>
      <title>Usage of grub2-mkrescue</title>
<screen>grub2-mkrescue -o save_path/name.iso iso</screen>
     </example>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="vle.grub2.script_check">
    <term><command>grub2-script-check</command>
    </term>
    <listitem>
     <para>
      Checks the given file for syntax errors.
     </para>
     <example>
      <title>Usage of grub2-script-check</title>
<screen>grub2-script-check /boot/grub2/grub.cfg</screen>
     </example>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>grub2-once</command>
    </term>
    <listitem>
     <para>
      Set the default boot entry for the next boot only. To get the list of
      available boot entries use the <option>--list</option> option.
     </para>
     <example>
      <title>Usage of grub2-once</title>
<screen>grub2-once number_of_the_boot_entry</screen>
     </example>
     <tip>
      <title><command>grub2-once</command> Help</title>
      <para>
       Call the program without any option to get a full list of all possible
       options.
      </para>
     </tip>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec.grub2.info">
  <title>More Information</title>

  <para>
   Extensive information about &grub; is available at <link
   xlink:href="http://www.gnu.org/software/grub/"/>. Also refer to the
   <command>grub</command> info page. <phrase os="sles;sled">You can also
   search for the keyword <quote>&grub;</quote> in the Technical Information
   Search at <link xlink:href="http://www.suse.com/support"/> to get
   information about special issues.</phrase>
  </para>
 </sect1>
</chapter>
