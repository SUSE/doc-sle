<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-kvm-inst">
 <title>Guest Installation</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
  </dm:docmanager>
 </info>
 <para>
  A &vmguest; consists of an image containing an operating system and data
  files and a configuration file describing the &vmguest;'s virtual hardware
  resources. &vmguest;s are hosted on and controlled by the &vmhost;. This
  section provides generalized instructions for installing a &vmguest;. <phrase
  os="sles;sled">For a list of supported &vmguest;s refer to <xref
  linkend="cha-virt-support"/>.</phrase>
 </para>
 <para>
  Virtual machines have few if any requirements above those required to run the
  operating system. If the operating system has not been optimized for the
  virtual machine host environment, it can only run on
  <xref linkend="gloss-vt-hwassisted"/> virtualization computer hardware, in
  full virtualization mode, and requires specific device drivers to be loaded.
  The hardware that is presented to the &vmguest; depends on the configuration
  of the host.
 </para>
 <para>
  You should be aware of any licensing issues related to running a single
  licensed copy of an operating system on multiple virtual machines. Consult
  the operating system license agreement for more information.
 </para>
 <sect1 xml:id="sec-libvirt-inst-vmm">
  <title>GUI-Based Guest Installation</title>

  <para>
   The <guimenu>New VM</guimenu> wizard helps you through the steps required to
   create a virtual machine and install its operating system. There are two
   ways to start it: Within &vmm;, either click <guimenu>Create New Virtual
   Machine</guimenu> or choose <menuchoice> <guimenu>File</guimenu>
   <guimenu>New Virtual Machine</guimenu> </menuchoice>. Alternatively, start
   &yast; and choose <menuchoice><guimenu>Virtualization</guimenu>
   <guimenu>Create Virtual Machines for Xen and KVM</guimenu></menuchoice>.
  </para>

  <procedure>
   <step>
    <para>
     Start the <guimenu>New VM</guimenu> wizard either from &yast; or &vmm;.
    </para>
   </step>
   <step>
    <para>
     Choose an installation source&mdash;either a locally available media or a
     network installation source. If you want to set up your &vmguest; from an
     existing image, choose <guimenu>import existing disk image</guimenu>.
    </para>
    <para>
     On a &vmhost; running the &xen; hypervisor, you can choose whether to
     install a paravirtualized or a fully virtualized guest. The respective
     option is available under <guimenu>Architecture Options</guimenu>.
     Depending on this choice, not all installation options may be available.
    </para>
   </step>
   <step>
    <para>
     Depending on your choice in the previous step, you need to provide the
     following data:
    </para>
    <variablelist>
     <varlistentry>
      <term><guimenu>Local Installation Media (ISO image or CDROM)</guimenu>
      </term>
      <listitem>
       <para>
        Specify the path on the &vmhost; to an ISO image containing the
        installation data. If it is available as a volume in a libvirt storage
        pool, you can also select it using <guimenu>Browse</guimenu>. For more
        information, see <xref linkend="cha-libvirt-storage"/>.
       </para>
       <para>
        Alternatively, choose a physical CD-ROM or DVD inserted in the optical
        drive of the &vmhost;.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Network Installation (HTTP, FTP, or NFS)</guimenu>
      </term>
      <listitem>
       <para>
        Provide the <guimenu>URL</guimenu> pointing to the installation source.
        Valid URL prefixes are, for example, <literal>ftp://</literal>,
        <literal>http://</literal>, <literal>https://</literal>, and
        <literal>nfs://</literal>.
       </para>
       <para>
        Under <guimenu>URL Options</guimenu>, provide a path to an
        auto-installation file (&ay; or Kickstart, for example) and kernel
        parameters. Having provided a URL, the operating system should be
        automatically detected correctly. If this is not the case, deselect
        <guimenu>Automatically Detect Operating System Based on
        Install-Media</guimenu> and manually select the <guimenu>OS
        Type</guimenu> and <guimenu>Version</guimenu>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Network Boot (PXE)</guimenu>
      </term>
      <listitem>
       <para>
        When booting via PXE, you only need to provide the <guimenu>OS
        Type</guimenu> and the <guimenu>Version</guimenu>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><guimenu>Import Existing Disk Image</guimenu>
      </term>
      <listitem>
       <para>
        To set up the &vmguest; from an existing image, you need to specify the
        path on the &vmhost; to the image. If it is available as a volume in a
        libvirt storage pool, you can also select it using
        <guimenu>Browse</guimenu>. For more information, see
        <xref linkend="cha-libvirt-storage"/>.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </step>
   <step>
    <para>
     Choose the memory size and number of CPUs for the new virtual machine.
    </para>
   </step>
   <step>
    <para>
     This step is omitted when <guimenu>Import an Existing Image</guimenu> is
     chosen in the first step.
    </para>
    <para>
     Set up a virtual hard disk for the &vmguest;. Either create a new disk
     image or choose an existing one from a storage pool (for more information,
     see <xref linkend="cha-libvirt-storage"/>). If you choose to create a
     disk, a <literal>qcow2</literal> image will be created. By default, it is
     stored under <filename>/var/lib/libvirt/images</filename>.
    </para>
    <para>
     Setting up a disk is optional. If you are running a live system directly
     from CD or DVD, for example, you can omit this step by deactivating
     <guimenu>Enable Storage for this Virtual Machine</guimenu>.
    </para>
   </step>
   <step>
    <para>
     On the last screen of the wizard, specify the name for the virtual
     machine. To be offered the possibility to review and make changes to the
     virtualized hardware selection, activate <guimenu>Customize configuration
     before install</guimenu>. Find options to specify the network device under
     <guimenu>Network Selection</guimenu>.
    </para>
    <para>
     Click <guimenu>Finish</guimenu>.
    </para>
   </step>
   <step performance="optional">
    <para>
     If you kept the defaults in the previous step, the installation will now
     start. If you selected <guimenu>Customize configuration before
     install</guimenu>, a &vmguest; configuration dialog opens. For more
     information about configuring &vmguest;s, see
     <xref linkend="cha-libvirt-config-gui"/>.
    </para>
    <para>
     When you are done configuring, click <guimenu>Begin
     Installation</guimenu>.
    </para>
   </step>
  </procedure>

  <tip xml:id="tip-libvirt-inst-vmm-sticky">
   <title>Passing Key Combinations to Virtual Machines</title>
   <para>
    The installation starts in a &vmm; console window. Some key combinations,
    such as <keycombo> <keycap function="control"/> <keycap function="alt"/>
    <keycap>F1</keycap> </keycombo>, are recognized by the &vmhost; but are not
    passed to the virtual machine. To bypass the &vmhost;, &vmm; provides the
    <quote>sticky key</quote> functionality. Pressing
    <keycap function="control"/>, <keycap function="alt"/>, or
    <keycap function="shift"/> three times makes the key sticky, then you can
    press the remaining keys to pass the combination to the virtual machine.
   </para>
   <para>
    For example, to pass <keycombo> <keycap function="control"/>
    <keycap function="alt"/> <keycap>F2</keycap> </keycombo> to a Linux virtual
    machine, press <keycap function="control"/> three times, then press
    <keycombo> <keycap function="alt"/> <keycap>F2</keycap> </keycombo>. You
    can also press <keycap function="alt"/> three times, then press <keycombo>
    <keycap function="control"/> <keycap>F2</keycap> </keycombo>.
   </para>
   <para>
    The sticky key functionality is available in the &vmm; during and after
    installing a &vmguest;.
   </para>
  </tip>
 </sect1>
 <sect1 xml:id="sec-libvirt-inst-virt-install">
  <title>Installing from the Command Line with <command>virt-install</command></title>

  <para>
   <command>virt-install</command> is a command line tool that helps you create
   new virtual machines using the &libvirt; library. It is useful if you cannot
   use the graphical user interface, or need to automatize the process of
   creating virtual machines.
  </para>

  <para>
   <command>virt-install</command> is a complex script with a lot of command
   line switches. The following are required. For more information, see the man
   page of <command>virt-install</command> (1).
  </para>

  <variablelist>
   <varlistentry>
    <term>General Options</term>
    <listitem>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        <option>--name <replaceable>VM_GUEST_NAME</replaceable></option>:
        Specify the name of the new virtual machine. The name must be unique
        across all guests known to the hypervisor on the same connection. It is
        used to create and name the guestâ€™s configuration file and you can
        access the guest with this name from <command>virsh</command>.
        Alphanumeric and <literal>_-.:+</literal> characters are allowed.
       </para>
      </listitem>
      <listitem>
       <para>
        <option>--memory <replaceable>REQUIRED_MEMORY</replaceable></option>:
        Specify the amount of memory to allocate for the new virtual machine in
        megabytes.
       </para>
      </listitem>
      <listitem>
       <para>
        <option>--vcpus <replaceable>NUMBER_OF_CPUS</replaceable></option>:
        Specify the number of virtual CPUs. For best performance, the number of
        virtual processors should be less than or equal to the number of
        physical processors.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Virtualization Type</term>
    <listitem>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        <option>--paravirt</option>: Set up a paravirtualized guest. This is
        the default if the &vmhost; supports paravirtualization and full
        virtualization.
       </para>
      </listitem>
      <listitem>
       <para>
        <option>--hvm</option>: Set up a fully virtualized guest.
       </para>
      </listitem>
      <listitem>
       <para>
        <option>--virt-type <replaceable>HYPERVISOR</replaceable></option>:
        Specify the hypervisor. Supported values are <literal>kvm</literal>,
        <literal>xen</literal>, or <literal>lxc</literal>.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Guest Storage</term>
    <listitem>
     <para>
      Specify one of <option>--disk</option>, <option>--filesystem</option> or
      <option>--nodisks</option> the type of the storage for the new virtual
      machine. For example, <option>--disk size=10</option> creates 10 GB disk
      in the default image location for the hypervisor and uses it for the
      &vmguest;. <option>--filesystem
      <replaceable>/export/path/on/vmhost</replaceable></option> specifies the
      directory on the &vmhost; to be exported to the guest. And
      <option>--nodisks</option> sets up a &vmguest; without a local storage
      (good for Live CDs).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Installation Method</term>
    <listitem>
     <para>
      Specify the installation method using one of <option>--location</option>,
      <option>--cdrom</option>, <option>--pxe</option>,
      <option>--import</option>, or <option>--boot </option>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Accessing the Installation</term>
    <listitem>
     <para>
      Use the <option>--graphics <replaceable>VALUE</replaceable></option>
      option to specify how to access the installation. &productname; supports
      the values <literal>vnc</literal> or <literal>none</literal>.
     </para>
     <para>
      If using VNC, <command>virt-install</command> tries to launch
      <command>virt-viewer</command>. If it is not installed or cannot be run,
      connect to the &vmguest; manually with you preferred viewer. To
      explicitly prevent <command>virt-install</command> from launching the
      viewer use <option>--noautoconsole</option>. To define a password for
      accessing the VNC session, use the following syntax: <option>--graphics
      vnc,password=<replaceable>PASSWORD</replaceable></option>.
     </para>
     <para>
      In case you are using <option>--graphics none</option>, you can access
      the &vmguest; through operating system supported services, such as SSH or
      VNC. Refer to the operating system installation manual on how to set up
      these services in the installation system.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Passing Kernel and Initrd Files</term>
    <listitem>
     <para>
      It is possible to directly specify the Kernel and Initrd of the
      installer, for example from a network source. <phrase
      os="sles;sled;">To set up a network source, see <xref linkend="sec-deployment-instserver-http"/>.</phrase>
     </para>
     <para>
      To pass additional boot parameters, use the
      <option>--extra-args</option> option. This can be used to specify
      a network configuration. For details, see <xref os="sles;sled"
      linkend="cha-boot-parameters"/><link os="osuse"
      xlink:href="https://en.opensuse.org/SDB:Linuxrc"/>.
     </para>
     <example>
      <title>Loading Kernel and Initrd from HTTP Server</title>
<screen os="osuse">&prompt.root;<command>virt-install</command> --location \
"http://download.opensuse.org/pub/opensuse/distribution/leap/15.0/repo/oss" \
--extra-args="textmode=1" --name "Leap15" --memory 2048 --virt-type kvm \
--connect qemu:///system --disk size=10 --graphics vnc --network \
network=vnet_nated</screen>
<screen os="sles;sled">&prompt.root;<command>virt-install</command> --location "http://example.tld/REPOSITORY/DVD1/" \
--extra-args="textmode=1" --name "SLES15" --memory 2048 --virt-type kvm\
--connect qemu:///system --disk size=10 --graphics vnc \
--network network=vnet_nated</screen>
     </example>
    </listitem>
   </varlistentry>
   <varlistentry arch="x86_64">
    <term>Enabling the Console</term>
    <listitem>
     <para>
      By default, the console is not enabled for new virtual machines installed
      using <command>virt-install</command>. To enable it, use
      <option>--extra-args="console=ttyS0 textmode=1"</option> as in the
      following example:
     </para>
<screen>&prompt.user;virt-install --virt-type kvm --name sles12 --memory 1024 \
 --disk /var/lib/libvirt/images/disk1.qcow2 --os-variant sles12
 --extra-args="console=ttyS0 textmode=1" --graphics none</screen>
     <para>
      After the installation finishes, the
      <filename>/etc/default/grub</filename> file in the VM image will be
      updated with the <option>console=ttyS0</option> option on the
      <literal>GRUB_CMDLINE_LINUX_DEFAULT</literal> line.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="vle-libvirt-inst-virt-install-ovmf">
    <term>Using UEFI and Secure Boot</term>
    <listitem>
     <para>
      Install OVMF as described in <xref
      linkend="sec-vt-installation-ovmf" />. Then add the
      <option>--boot uefi</option> option to the
      <command>virt-install</command> command.
     </para>
     <para>
      Secure boot will be used automatically when setting up a new VM
      with OVMF. To use a specific firmware, use <option>--boot
      loader=/usr/share/qemu/ovmf-<replaceable>VERSION</replaceable>.bin</option>.
      Replace <replaceable>VERSION</replaceable> with the file you
      need.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <example xml:id="ex-libvirt-inst-virt-install-example">
   <title>Example of a <command>virt-install</command> command line</title>
   <para>
    The following command line example creates a new &sled; 12 virtual machine
    with a virtio accelerated disk and network card. It creates a new 10 GB
    qcow2 disk image as a storage, the source installation media being the host
    CD-ROM drive. It will use VNC graphics, and it will auto-launch the
    graphical client.
   </para>
   <variablelist>
    <varlistentry>
     <term>KVM</term>
     <listitem>
<screen>&prompt.user;virt-install --connect qemu:///system --virt-type kvm  --name sled12 \
--memory 1024 --disk size=10 --cdrom /dev/cdrom --graphics vnc \
--os-variant sled12</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>&xen;</term>
     <listitem>
<screen>&prompt.user;virt-install --connect xen:// --virt-type xen  --name sled12 \
--memory 1024 --disk size=10 --cdrom /dev/cdrom --graphics vnc \
--os-variant sled12</screen>
     </listitem>
    </varlistentry>
   </variablelist>
  </example>
 </sect1>
 <sect1 xml:id="sec-libvirt-inst-advanced">
  <title>Advanced Guest Installation Scenarios</title>

  <para>
   This section provides instructions for operations exceeding the scope of a
   normal installation, such as memory ballooning and installing add-on
   products.
  </para>

  <sect2 xml:id="libvirt-advanced-balloon" os="sles;sled">
   <title>Memory Ballooning with Windows Guests</title>
   <para>
    Memory ballooning is a method to change the amount of memory used by
    &vmguest; at runtime. Both the &kvm; and &xen; hypervisors provide this
    method, but it needs to be supported by the guest as well.
   </para>
   <para>
    While openSUSE and SLE-based guests support memory ballooning, Windows
    guests need the
    <link xlink:href="https://www.suse.com/products/vmdriverpack/">Virtual
    Machine Driver Pack (VMDP)</link> to provide ballooning. To set the maximum
    memory greater than the initial memory configured for Windows guests,
    follow these steps:
   </para>
   <procedure>
    <step>
     <para>
      Install the Windows guest with the maximum memory equal or less than the
      initial value.
     </para>
    </step>
    <step>
     <para>
      Install the Virtual Machine Driver Pack in the Windows guest to provide
      required drivers.
     </para>
    </step>
    <step>
     <para>
      Shut down the Windows guest.
     </para>
    </step>
    <step>
     <para>
      Reset the maximum memory of the Windows guest to the required value.
     </para>
    </step>
    <step>
     <para>
      Start the Windows guest again.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="cha-kvm-inst-virtman-advanced-addons">
   <title>Including Add-on Products in the Installation</title>
   <para>
    Some operating systems such as &productname; offer to include add-on
    products in the installation process. If the add-on product installation
    source is provided via &scc;, no special &vmguest; configuration is needed.
    If it is provided via CD/DVD or ISO image, it is necessary to provide the
    &vmguest; installation system with both the standard installation medium
    image and the image of the add-on product.
   </para>
   <para>
    If you are using the GUI-based installation, select <guimenu>Customize
     Configuration Before Install</guimenu> in the last step of the wizard and
    add the add-on product ISO image via <menuchoice><guimenu>Add
      Hardware</guimenu> <guimenu>Storage</guimenu></menuchoice>. Specify the
    path to the image and set the <guimenu>Device Type</guimenu> to
    <guimenu>CD-ROM</guimenu>.
   </para>
   <para>
    If you are installing from the command line, you need to set up the virtual
    CD/DVD drives with the <option>--disk</option> parameter rather than with
    <option>--cdrom</option>. The device that is specified first is used for
    booting. The following example will install &sls; 15 together with &suse;
    Enterprise Storage extension:
   </para>
<screen>&prompt.user;virt-install --name sles15+storage --memory 2048 --disk size=10 \
 --disk /path/to/&packagemedia;-x86_64-GM-DVD1.iso,device=cdrom \
 --disk /path/to/SUSE-Enterprise-Storage-<replaceable>VERSION</replaceable>-DVD-<replaceable>ARCH</replaceable>-Media1.iso,device=cdrom \
 --graphics vnc --os-variant sles15</screen>
  </sect2>
 </sect1>
</chapter>
