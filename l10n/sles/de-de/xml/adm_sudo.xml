<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="adm_sudo.xml" version="5.0" xml:id="cha-adm-sudo"> <title>Grundlegende Infos zu <command>sudo</command></title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker/>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <para>
  Für bestimmte Kommandos sind root-Berechtigungen erforderlich. Die Anmeldung als <systemitem class="username">root</systemitem> ist aus Sicherheitsgründen und zur Vermeidung von Fehlern jedoch nicht zu empfehlen. Es ist sicherer, sich als normaler Benutzer anzumelden und dann mit <command>sudo</command> Kommandos mit höheren Rechten auszuführen.
 </para>
 <para>
  Auf <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> ist <command>sudo</command> standardmäßig auf eine ähnliche Funktionsweise wie <command>su</command> konfiguriert. <command>sudo</command> ist jedoch eine flexible Methode, mit der Benutzer Kommandos mit den Rechten eines beliebigen anderen Benutzers ausführen können. Dies kann dazu genutzt werden, Rollen mit bestimmten Berechtigungen bestimmten Benutzern und Gruppen zuzuweisen. Es ist beispielsweise möglich, Mitgliedern der Gruppe <systemitem class="groupname">Benutzer</systemitem> das Ausführen eines Kommandos mit den Berechtigungen des Benutzers <systemitem class="username">wilber</systemitem> zu erlauben. Der Zugriff auf das Kommando wird weiter eingeschränkt, wenn Kommandooptionen nicht zugelassen werden. Während „su“ immer das <systemitem class="username">root</systemitem>-Passwort für die Authentifizierung mit PAM erfordert, kann <command>sudo</command> für die Authentifizierung mit Ihren eigenen Berechtigungsnachweisen konfiguriert werden. Benutzer müssen folglich ihr <systemitem class="username">root</systemitem>-Passwort nicht bekanntgeben, was die Sicherheit erhöht.
 </para>
 <sect1 xml:id="sec-adm-sudo-usage">
  <title>Grundlegende Verwendung von <command>sudo</command></title>

  <para>
   Im folgenden Kapitel wird die grundlegende Verwendung von <command>sudo</command> vorgestellt.
  </para>

  <sect2 xml:id="sec-adm-sudo-usage-cmd">
   <title>Ausführung eines einzelnen Kommandos</title>
   <para>
    Als normaler Benutzer können Sie alle Kommandos als <systemitem class="username">root</systemitem> ausführen, indem Sie <command>sudo</command> vor das Kommando setzen. Dadurch werden Sie aufgefordert, das root-Passwort anzugeben. Bei erfolgreicher Authentifizierung wird daraufhin das Kommando als <systemitem class="username">root</systemitem> ausgeführt:
   </para>
<screen>
<prompt>tux &gt; </prompt><command>id -un</command><co xml:id="co-sudo-usage-id"/>
tux
<prompt>tux &gt; </prompt><command>sudo</command> <command>id -un</command>
root's password:<co xml:id="co-sudo-usage-pw"/>
root
<prompt>tux &gt; </prompt><command>id -un</command>
tux<co xml:id="co-sudo-usage-after"/>
<prompt>tux &gt; </prompt><command>sudo</command> <command>id -un</command>
<co xml:id="co-sudo-usage-nopw"/>
root
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-usage-id">
     <para>
      Das Kommando <command>id -un</command> druckt den Anmeldenamen des aktuellen Benutzers.
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-pw">
     <para>
      Das Passwort wird bei der Eingabe weder als Klartext noch durch maskierende Zeichen angezeigt.
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-after">
     <para>
      Nur Kommandos, die mit <command>sudo</command> beginnen, werden mit höheren Rechten ausgeführt.
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-nopw">
     <para>
      Die erhöhten Rechte bleiben für bestimmte Zeit erhalten, sodass Sie das <systemitem class="username">root</systemitem>-Passwort nicht erneut eingeben müssen. erneut angeben müssen.
     </para>
    </callout>
   </calloutlist>
   <tip>
    <title>E/A-Umleitung</title>
    <para>
     Die E/A-Umleitung funktioniert nicht mit <command>sudo</command>:
    </para>
<screen>
<prompt>tux &gt; </prompt><command>sudo</command> echo s &gt; /proc/sysrq-trigger
bash: /proc/sysrq-trigger: Permission denied
<prompt>tux &gt; </prompt><command>sudo</command> cat &lt; /proc/1/maps
bash: /proc/1/maps: Permission denied
</screen>
    <para>
     Im oben genannten Beispiel werden nur die Kommandos <command>echo</command> und <command>cat</command> mit erhöhten Rechten ausgeführt. Die Umleitung wird von der Shell des Benutzers mit Benutzerrechten ausgeführt. Für eine Umleitung mit erhöhten Rechten müssen Sie eine Shell starten wie in <xref linkend="sec-sudo-shell"/> beschrieben oder das <command>dd</command>-Dienstprogramm verwenden:
    </para>
<screen>
echo s | sudo dd of=/proc/sysrq-trigger
sudo dd if=/proc/1/maps | cat 
</screen>
   </tip>
  </sect2>

  <sect2 xml:id="sec-sudo-shell">
   <title>Starten einer Shell</title>
   <para>
    Es ist nicht immer praktisch, <command>sudo</command> jedes mal zur Ausführung eines Kommandos mit erhöhten Rechten zu verwenden. Sie können zwar das Kommando <command>sudo bash</command> verwenden, doch zum Starten einer Shell empfiehlt sich die Verwendung einer der integrierten Methoden:
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>sudo -s (&lt;Kommando&gt;)</literal>
     </term>
     <listitem>
      <para>
       Startet eine von der Umgebungsvariablen<envar>SHELL</envar> angegebene Shell oder die Standard-Shell des Zielbenutzers. Falls ein Kommando angegeben ist, wird es (mit der Option <option>-c</option>) an die Shell übergeben. Andernfalls wird die Shell im interaktiven Modus ausgeführt. 
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -s
root's password:
<prompt>root:/home/tux # </prompt>exit
<prompt>tux:~ &gt; </prompt>
</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>sudo -i (&lt;Kommando&gt;)</literal>
     </term>
     <listitem>
      <para>
       Ähnlich wie <option>-s</option>, doch die Shell wird als Anmeldungs-Shell gestartet. Dies bedeutet, dass die Startdateien der Shell (<filename>.profile</filename> usw.) verarbeitet werden und das aktuelle Arbeitsverzeichnis als Basisverzeichnis des Zielbenutzers festgelegt wird.
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:~ # </prompt>exit
<prompt>tux:~ &gt; </prompt>
            </screen>
     </listitem>
    </varlistentry>
   </variablelist>
     <tip>
   <title>Umgebungsvariablen</title>
   <para>
    Standardmäßig gibt <command>sudo</command> keine Umgebungsvariablen weiter. Dieses Verhalten kann mit der Option <literal>env_reset</literal> geändert werden (weitere Informationen finden Sie unter <xref linkend="tab-adm-sudo-options"/>).
   </para>
  </tip>
  </sect2>

 </sect1>
 <sect1 xml:id="sec-sudo-conf">
  <title>Konfigurieren von <command>sudo</command></title>

  <para>
   <command>sudo</command> umfasst eine breite Palette an konfigurierbaren Optionen.
  </para>

  <note>
   <title>Versehentliches Aussperren aus sudo</title>
   <para>
    Wenn Sie sich versehentlich aus <command>sudo</command> ausgesperrt haben, starten Sie mit <command>su -</command> und dem <systemitem class="username">root</systemitem>-Passwort eine root-Shell. Beheben Sie den Fehler mit <command>visudo</command>.
   </para>
  </note>

  <sect2 xml:id="sec-sudo-conf-edit">
   <title>Bearbeiten der Konfigurationsdateien</title>
   <para>
    Die Hauptkonfigurationsdatei mit den Richtlinien für <command>sudo</command> ist <filename>/etc/sudoers</filename>. Da es möglich ist, sich selbst aus dem System auszusperren, wenn die Datei nicht gut erstellt ist, wird dringend empfohlen, <command>visudo</command> zum Bearbeiten zu verwenden. Es verhindert Bearbeitungskonflikte und prüft auf Syntaxfehler, bevor die Änderungen gespeichert werden.
   </para>
   <para>
    Sie können statt visudo auch einen anderen Editor verwenden. Legen Sie dazu die Umgebungsvariable <envar>EDITOR</envar> fest, wie zum Beispiel:
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo</screen>
   <para>
    Denken Sie daran, dass die Datei <filename>/etc/sudoers</filename> von den Systempaketen bereitgestellt wird und direkt in der Datei vorgenommene Änderungen möglicherweise Aktualisierungen beschädigen. Daher wird empfohlen, benutzerdefinierte Konfigurationen in Dateien im Verzeichnis <filename>/etc/sudoers.d/</filename> abzulegen. Erstellen oder bearbeiten Sie eine Datei mit folgendem Kommando:
   </para>
<screen>sudo visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <para>
    Mit folgendem Kommando wird die Datei geöffnet und ein anderer Editor verwendet (in diesem Fall <command>nano</command>):
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <note>
    <title>Ignorierte Dateien in <filename>/etc/sudoers.d</filename></title>
    <para>
     Die Anweisung <literal>#includedir</literal> in <filename>/etc/sudoers</filename> ignoriert Dateien, die auf das Zeichen <literal>~</literal> (Tilde) enden oder das Zeichen <literal>.</literal> (Punkt) enthalten.
    </para>
   </note>
   <para>
    Führen Sie <command>man 8 visudo</command> aus, um weitere Informationen zum Kommando <command>visudo</command> zu erhalten.
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-syntax">
   <title>Basiskonfigurationssyntax von sudoers</title>
   <para>
    Die sudoers-Konfigurationsdateien enthalten zwei Optionstypen: Zeichenketten und Flags. Zeichenketten können beliebige Werte enthalten, Flags hingegen können nur aktiviert (ON) oder deaktiviert (OFF) werden. Die wichtigsten Syntaxkonstrukte für sudoers-Konfigurationsdateien sind:
   </para>
<screen>
# Everything on a line after # is ignored <co xml:id="co-sudo-syntax-comment"/>
Defaults !insults # Disable the insults flag <co xml:id="co-sudo-syntax-flag"/>
Defaults env_keep += "DISPLAY HOME" # Add DISPLAY and HOME to env_keep
tux ALL = NOPASSWD: /usr/bin/frobnicate, PASSWD: /usr/bin/journalctl <co xml:id="co-sudo-syntax-rule"/>
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-syntax-comment">
     <para>
      Es gibt zwei Ausnahmen: <literal>#include</literal> und <literal>#includedir</literal> sind normale Kommandos.
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-flag">
     <para>
      Entfernen Sie das Ausrufezeichen (<literal>!</literal>, um das gewünschte Flag zu aktivieren (ON).
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-rule">
     <para>
      Siehe <xref linkend="sec-sudo-conf-rule"/>.
     </para>
    </callout>
   </calloutlist>

   <variablelist xml:id="tab-adm-sudo-options"><title>Hilfreiche Flags und Optionen</title>
   <varlistentry>
    <term>
     <literal>targetpw</literal>
    </term>
    <listitem>
     <para>
      Dieses Flag steuert, ob der aufrufende Benutzer das Passwort des Zielbenutzers (ON) (beispielsweise <systemitem class="username">root</systemitem>) oder des aufrufenden Benutzers (OFF) eingeben muss.
     </para>
<screen>Defaults targetpw # Turn targetpw flag ON</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <literal>rootpw</literal>
    </term>
    <listitem>
      <para>
       Bei diesem Flag fordert <command>sudo</command> zur Eingabe des <systemitem class="username">root</systemitem>-Passworts auf. Die Standardeinstellung ist “OFF”.
      </para>
<screen>Defaults !rootpw # Turn rootpw flag OFF</screen>
    </listitem>
   </varlistentry>
     <varlistentry>
    <term>
     <literal>env_reset</literal>
    </term>
    <listitem>
      <para>
       Bei diesem Flag konstruiert <command>sudo</command> eine minimale Umgebung mit <envar>TERM</envar>, <envar>PATH</envar>, <envar>HOME</envar>, <envar>MAIL</envar>, <envar>SHELL</envar>, <envar>LOGNAME</envar>, <envar>USER</envar>, <envar>USERNAME</envar> und <envar>SUDO_*</envar>. Zusätzlich werden Variablen, die in <literal>env_keep</literal> aufgelistet sind, aus der aufrufenden Umgebung importiert. Standardmäßig ist ON festgelegt.
      </para>
<screen>Defaults env_reset # Turn env_reset flag ON</screen>
     </listitem>
     </varlistentry>
       <varlistentry>
    <term>
     <literal>env_keep</literal>
    </term>
    <listitem>
      <para>
       Eine Liste der Umgebungsvariablen, die beizubehalten sind, wenn für das Flag <literal>env_reset</literal> ON festgelegt ist.
      </para>
<screen>
# Set env_keep to contain EDITOR and PROMPT
Defaults env_keep = "EDITOR PROMPT"
Defaults env_keep += "JRE_HOME" # Add JRE_HOME
Defaults env_keep -= "JRE_HOME" # Remove JRE_HOME
</screen>
    </listitem>
       </varlistentry>
         <varlistentry>
    <term>
     <literal>env_delete</literal>
    </term>
    <listitem>
      <para>
       Eine Liste der Umgebungsvariablen, die zu löschen sind, wenn für das Flag <literal>env_reset</literal> OFF festgelegt ist.
      </para>
<screen>
# Set env_delete to contain EDITOR and PROMPT
Defaults env_delete = "EDITOR PROMPT"
Defaults env_delete += "JRE_HOME" # Add JRE_HOME
Defaults env_delete -= "JRE_HOME" # Remove JRE_HOME
</screen>
     </listitem>
  </varlistentry>
   </variablelist>

   <para>
    Das Token <literal>Defaults</literal> kann auch zum Erstellen von Aliassen für eine Sammlung von Benutzern, Hosts oder Kommandos verwendet werden. Außerdem ist es möglich, eine Option anzuwenden, die nur für eine bestimmte Reihe von Benutzern gültig ist.
   </para>
   <para>
    Genauere Informationen zur Konfigurationsdatei <filename>/etc/sudoers</filename> erhalten Sie mit dem Kommando <command>man 5 sudoers</command>.
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-rule">
   <title>Grundlegende sudoers-Regeln</title>
   <para>
    Jede Regel befolgt folgendes Schema (<literal>[]</literal> markiert optionale Teile):
   </para>
<screen>
#Who      Where         As whom      Tag                What
User_List Host_List = [(User_List)] [NOPASSWD:|PASSWD:] Cmnd_List
</screen>
   <variablelist>
    <title>sudoers-Regelsyntax</title>
    <varlistentry>
     <term><literal>User_List</literal>
     </term>
     <listitem>
      <para>
       Eine oder mehrere (durch Komma getrennte) Kennungen: Entweder ein Benutzername, eine Gruppe im Format <literal>%GROUPNAME</literal> oder eine Benutzer-ID im Format <literal>#UID</literal>. Eine Negierung wird mit dem Präfix <literal>!</literal> Präfix.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Host_List</literal>
     </term>
     <listitem>
      <para>
       Eine oder mehrere (durch Komma getrennte) Kennungen: Entweder ein (vollständig qualifizierter) Hostname oder eine IP-Adresse. Eine Negierung wird mit dem Präfix <literal>!</literal> Präfix. <literal>ALL</literal> ist eine häufige Wahl für <literal>Host_List</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>NOPASSWD:|PASSWD:</literal>
     </term>
     <listitem>
      <para>
       Der Benutzer wird nicht aufgefordert, ein Passwort einzugeben, wenn Kommandos ausgeführt werden, die <literal>Cmd_List</literal> nach <literal>NOPASSWD:</literal> entsprechen.
      </para>
      <para>
       <literal>PASSWD</literal> ist der Standard. Es muss nur angegeben werden, wenn sich sowohl <literal>PASSWD</literal> als auch <literal>NOPASSWD</literal> auf derselben Zeile befinden:
      </para>
<screen>tux ALL = PASSWD: /usr/bin/foo, NOPASSWD: /usr/bin/bar</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Cmnd_List</literal>
     </term>
     <listitem>
      <para>
       Einer oder mehrere (durch Komma getrennte) Bezeichner: Ein Pfad zu einer ausführbaren Datei, gefolgt von einem optionalen zulässigen Argument.
      </para>
<screen>
/usr/bin/foo     # Anything allowed
/usr/bin/foo bar # Only "/usr/bin/foo bar" allowed
/usr/bin/foo ""  # No arguments allowed
</screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    <literal>ALL</literal> kann als <literal>User_List</literal>, <literal>Host_List</literal> und <literal>Cmnd_List</literal> verwendet werden.
   </para>
   <para>
    Eine Regel, die es <systemitem class="username">tux</systemitem> erlaubt, alle Kommandos als „root“ ohne Eingabe des Passworts auszuführen:
   </para>
<screen>tux ALL = NOPASSWD: ALL</screen>
   <para>
    Eine Regel, die es <systemitem class="username">tux</systemitem> erlaubt, <command>systemctl restart apache2</command> auszuführen:
   </para>
<screen>tux ALL = /usr/bin/systemctl restart apache2</screen>
   <para>
    Eine Regel, die es <systemitem class="username">tux</systemitem> erlaubt, <command>wall</command> als <systemitem>admin</systemitem> ohne Argumente auszuführen:
   </para>
<screen>tux ALL = (admin) /usr/bin/wall ""</screen>
   <warning>
    <title>Unsichere Regeln</title>
    <para>
     Verwenden Sie <emphasis>keine</emphasis> Regeln wie <literal>ALL ALL = ALL</literal> ohne <literal>Defaults targetpw</literal>. Andernfalls kann jeder Benutzer Kommandos als <systemitem class="username">root</systemitem> ausführen.
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-sudo-usecases">
  <title><command>sudo</command>-Anwendungsfälle</title>

  <para>
   Die Standardkonfiguration funktioniert bei standardmäßigen Verwendungsszenarien, lässt sich jedoch für spezifische Bedürfnisse anpassen.
  </para>

  <sect2 xml:id="sec-sudo-usecases-userpw">
   <title>Verwenden von <command>sudo</command> ohne <systemitem class="username">root</systemitem>-Passwort</title>
   <para>
    Grundsätzlich können Mitglieder der Gruppe <systemitem class="groupname">wheel</systemitem> alle Kommandos mit <command>sudo</command> als „root“ ausführen. In der folgenden Vorgehensweise wird erklärt, wie ein Benutzerkonto zur Gruppe <systemitem class="groupname">wheel</systemitem> hinzugefügt wird.
   </para>
   <procedure>
    <step>
     <para>
      Fügen Sie Ihr Benutzerkonto zur Gruppe <systemitem class="groupname">wheel</systemitem> hinzu.
     </para>
     <para>
      Falls Ihr Benutzerkonto nicht bereits Mitglied der Gruppe <systemitem class="groupname">wheel</systemitem> ist, fügen Sie es mit dem Kommando <command>sudo usermod -a -G wheel <replaceable>USERNAME</replaceable></command> hinzu. Melden Sie sich ab und wieder an, um die Änderung zu aktivieren. Überprüfen Sie, ob die Änderung erfolgreich war, indem Sie das Kommando <command>groups <replaceable>BENUTZERNAME</replaceable></command> ausführen.
     </para>
    </step>
    <step>
     <para>
      Authentifizieren Sie sich mit dem normalen Passwort des Benutzerkontos.
     </para>
     <para>
      Erstellen Sie die Datei <filename>/etc/sudoers.d/userpw</filename> mit dem Kommando <command>visudo</command> (siehe <xref linkend="sec-sudo-conf-edit"/>) und fügen Sie Folgendes hinzu:
     </para>
<screen>Defaults !targetpw</screen>
    </step>
    <step>
     <para>
      Wählen Sie eine neue Standardregel aus.
     </para>
     <para>
      Falls Sie möchten, dass Benutzer ihre Passwörter erneut eingeben oder nicht, entfernen Sie das Kommentarzeichen in der entsprechenden Zeile in <filename>/etc/sudoers</filename> und kommentieren Sie die Standardregel aus.
     </para>
<screen>
## Uncomment to allow members of group wheel to execute any command
# %wheel ALL=(ALL) ALL

## Same thing without a password
# %wheel ALL=(ALL) NOPASSWD: ALL
</screen>
    </step>
    <step>
     <para>
      Gestalten Sie die Standardregel restriktiver.
     </para>
     <para>
      Kommentieren Sie die Regel, die alles erlaubt, in <filename>/etc/sudoers</filename> aus oder löschen Sie sie:
     </para>
<screen>ALL     ALL=(ALL) ALL   # WARNING! Only use this together with 'Defaults targetpw'!</screen>
     <warning>
      <title>Gefährliche Regel in sudoers</title>
      <para>
       Überspringen Sie diesen Schritt nicht. Andernfalls kann <emphasis>jeder beliebige</emphasis> Benutzer <emphasis>jedes beliebige</emphasis> Kommando als <systemitem class="username">root</systemitem> ausführen.
      </para>
     </warning>
    </step>
    <step>
     <para>
      Testen Sie die Konfiguration.
     </para>
     <para>
      Führen Sie <command>sudo</command> als Mitglied und Nicht-Mitglied von <systemitem class="groupname">wheel</systemitem> aus.
     </para>
<screen>
<prompt>tux:~ &gt; </prompt>groups
users wheel
<prompt>tux:~ &gt; </prompt>sudo id -un
tux's password:
root
<prompt>wilber:~ &gt; </prompt>groups
users
<prompt>wilber:~ &gt; </prompt>sudo id -un
wilber is not in the sudoers file.  This incident will be reported.
</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-sudo-usecases-xorg">
   <title>Verwenden von <command>sudo</command> mit X.Org-Anwendungen</title>
   <para>
    Werden grafische Anwendungen mit <command>sudo</command> gestartet, führt dies normalerweise zu folgendem Fehler:
   </para>
<screen>
<prompt>tux &gt; </prompt><command>sudo</command> xterm
xterm: Xt error: Can't open display: %s
xterm: DISPLAY is not set
</screen>
   <para>
    Eine einfache Behelfslösung ist xhost. Damit wird dem root-Benutzer vorübergehend der Zugriff auf die X-Sitzung des lokalen Benutzers gestattet. Dies erfolgt mit folgendem Kommando:
   </para>
<screen>xhost si:localuser:root</screen>
   <para>
    Folgendes Kommando entfernt den gewährten Zugriff:
   </para>
<screen>xhost -si:localuser:root</screen>
   <warning>
    <title>Potenzielles Sicherheitsproblem</title>
    <para>
     Die Ausführung grafischer Anwendungen mit root-Rechten beeinträchtigt die Sicherheit. Es wird empfohlen, den root-Zugriff für eine grafische  Anwendung nur in Ausnahmefällen zu aktivieren. Außerdem sollte der gewährte root-Zugriff sofort nach Schließen der grafischen Anwendung entzogen werden.
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-adm-sudo-moreinfo">
  <title>Weitere Informationen</title>
  <para>
   Das Kommando <command>sudo --help</command> gibt einen kurzen Überblick über die verfügbaren Kommandozeilenoptionen und das Kommando <command>man sudoers</command> detaillierte Informationen über sudoers und dessen Konfiguration.<filename/>
  </para>
 </sect1>
</chapter>
