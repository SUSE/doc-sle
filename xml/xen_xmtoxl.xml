<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<appendix xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-xmtoxl">
<!-- xen2libvirt -->
<!-- xm vs xl -->
<!-- external ref -->
<!-- savin xen to xm -->
<!-- Glossary -->
<!--
 <xi:include href="xm_vs_xl_glossary.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
-->
 <title>XM, XL Toolstacks, and the &libvirt; Framework</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
    </info>
    <sect1 xml:id="sec-xmtoxl-intro">
  <title>&xen; Toolstacks</title>

  <para>
   Since the early &xen; 2.x releases, <command>xend</command> has been
   the de facto toolstack for managing &xen; installations. In &xen;
   4.1, a new toolstack called libxenlight (also known as libxl) was
   introduced with technology preview status. libxl is a small, low-level
   library written in C. It has been designed to provide a simple API for
   all client toolstacks
   (<link xlink:href="http://wiki.xen.org/wiki/XAPI">XAPI</link>,
   &libvirt;, xl). In &xen; 4.2, libxl was promoted to officially
   supported status and <command>xend</command> was marked deprecated.
   <command>xend</command> has been included in the &xen; 4.3 and 4.4
   series to give users ample time to convert their tooling to libxl. It
   has been removed from the upstream &xen; project and will no longer be
   provided starting with the &xen; 4.5 series and &productname;
   <phrase os="sles;sled">12 SP1</phrase><phrase os="osuse">42.1</phrase>.
  </para>

  <para>
   <phrase os="sles;sled">Although &slsa; 11 SP3 contains &xen; 4.2, &suse;
   retained the <command>xend</command> toolstack since making such an invasive
   change in a service pack would be too disruptive for &sle;
   customers. However, &slsa; 12 provides a suitable opportunity to move to the
   new libxl toolstack and remove the deprecated, unmaintained
   <command>xend</command> stack</phrase>. Starting with &productname; <phrase
   os="sles;sled">12 SP1</phrase><phrase os="osuse">42.1</phrase>,
   <command>xend</command> is no longer supported.
  </para>

  <para>
   One of the major differences between <command>xend</command> and libxl is
   that the former is stateful, while the latter is stateless. With
   <command>xend</command>, all client applications such as
   <command>xm</command> and &libvirt; see the same system state.
   <command>xend</command> is responsible for maintaining state for the
   entire &xen; host. In libxl, client applications such as
   <command>xl</command> or &libvirt; must maintain state. Thus domains
   created with <command>xl</command> or not visible or known to other libxl
   applications such as &libvirt;. Generally, it is discouraged to mix
   and match libxl applications and is preferred that a single libxl
   application be used to manage a &xen; host. In &productname;, we
   recommend to use &libvirt; to manage &xen; hosts. This allows
   management of the &xen; system through &libvirt; applications such
   as <command>virt-manager</command>, <command>virt-install</command>,
   <command>virt-viewer</command>,
   libguestfs, etc. If <command>xl</command> is used to manage the &xen;
   host, any virtual machines under its management will not be accessible
   to &libvirt;. Hence, they are not accessible to any of the &libvirt;
   applications.
  </para>

  <sect2 xml:id="sec-xmtoxl-upgrade">
   <title>Upgrading from xend/xm to xl/libxl</title>
   <para>
    The <command>xl</command> application, along with its configuration
    format (see <command>man xl.cfg</command>), was designed to be
    backward-compatible with the <command>xm</command> application and its
    configuration format (see <command>man xm.cfg</command>). Existing
    <command>xm</command> configuration should be usable with
    <command>xl</command>. Since libxl is stateless, and
    <command>xl</command> does not support the notion of managed domains,
    &suse; recommends using &libvirt; to manage &xen; hosts.
    &suse; has provided a tool called <command>xen2libvirt</command>, which
    provides a simple mechanism to import domains previously managed by
    <command>xend</command> into &libvirt;. See
    <xref linkend="xen-xen2libvirt"/> for more information on
    <command>xen2libvirt</command>.
   </para>
  </sect2>

  <sect2 xml:id="sec-xmltoxl-design">
   <title>XL design</title>
   <para>
    The basic structure of every <command>xl</command> command is:
   </para>
<screen><command>xl subcommand</command> <option>OPTIONS</option> <replaceable>DOMAIN</replaceable></screen>
   <para>
    <replaceable>DOMAIN</replaceable> is the numeric domain id, or the
    domain name (which will be internally translated to domain id), and
    <replaceable>OPTIONS</replaceable> are subcommand specific options.
   </para>
   <para>
    Although xl/libxl was designed to be backward-compatible with xm/xend,
    there are a few differences that should be noted:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      Managed or persistent domains. &libvirt; now provides this
      functionality.
     </para>
    </listitem>
    <listitem>
     <para>
      xl/libxl does not support Python code in the domain configuration
      files.
     </para>
    </listitem>
    <listitem>
     <para>
      xl/libxl does not support creating domains from SXP format
      configuration files (<command>xm</command> <option>create</option>
      -F).
     </para>
    </listitem>
    <listitem>
     <para>
      xl/libxl does not support sharing storage across DomU's via
      <command>w!</command> in domain configuration files.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    xl/libxl is relatively new and under heavy development, hence a few
    features are still missing with regard to the xm/xend toolstack:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      SCSI LUN/Host pass-through (PVSCSI)
     </para>
    </listitem>
    <listitem>
     <para>
      USB pass-through (PVUSB)
     </para>
    </listitem>
    <listitem>
     <para>
      Direct Kernel Boot for fully virtualized Linux guests for &xen;
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-xmtoxl-checklist">
   <title>Checklist before Upgrade</title>
   <para>
    <phrase os="sles;sled">Before upgrading a &slsa; 11 SP4 Xen host to &slsa;
    15:</phrase>
    <phrase os="osuse">Before upgrading a Leap 42.1 Xen host to Leap
    15:</phrase>
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      You must remove any Python code from your xm domain configuration
      files.
     </para>
    </listitem>
    <listitem>
     <para>
      It is recommended to capture the libvirt domain XML from all existing
      virtual machines using <command>virsh</command>
      <option>dumpxml</option> <replaceable>DOMAIN_NAME</replaceable>
      <replaceable>DOMAIN_NAME.xml</replaceable>.
     </para>
    </listitem>
    <listitem>
     <para>
      It is recommended to do a backup of
      <filename>/etc/xen/xend-config.sxp</filename> and
      <filename>/boot/grub/menu.lst</filename> files to keep references of
      previous parameters used for &xen;.
     </para>
    </listitem>
   </itemizedlist>
   <note>
    <para>
     Currently, live migrating virtual machines running on a <phrase os="sles;sled">&slsa; 11 SP4
     &xen; host to a &slsa; 15</phrase><phrase os="osuse">Leap 42.1
     &xen; host to a Leap 15</phrase> &xen; host is not supported. The
     <command>xend</command> and libxl toolstacks are not
     runtime-compatible. Virtual machine downtime will be required to move
     the virtual machines.
    </para>
   </note>
  </sect2>
 </sect1>
<!-- xen2libvirt -->
 <xi:include href="xm_vs_xl_xen2libvirt.xml"/>
<!-- xm vs xl -->
 <xi:include href="xm_vs_xl.xml"/>
<!-- external ref -->
 <xi:include href="xm_vs_xl_links.xml"/>
<!-- savin xen to xm -->
 <sect1 xml:id="sec-libvirt-managing-export-Xen-xm">
  <title>Saving a &xen; Guest Configuration in an <command>xm</command> Compatible Format</title>

  <para>
   Although <command>xl</command> is now the current toolkit for managing
   &xen; guests (apart from the preferred &libvirt;), you may need to
   export the guest configuration to the previously used
   <command>xm</command> format. To do this, follow these steps:
  </para>

  <procedure>
   <step>
    <para>
     First export the guest configuration to a file:
    </para>
<screen>&prompt.user;virsh dumpxml guest_id &gt; guest_cfg.xml</screen>
   </step>
   <step>
    <para>
     Then convert the configuration to the <command>xm</command> format:
    </para>
<screen>&prompt.user;virsh domxml-to-native xen-xm guest_cfg.xml &gt; guest_xm_cfg</screen>
   </step>
  </procedure>
 </sect1>
<!-- Glossary -->
<!--
 <xi:include href="xm_vs_xl_glossary.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
-->
</appendix>
