<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xml:id="cha.registry.installation" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.0"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Storing Images</title>
 <para>
  Prior to creating your own images, you should decide where you will store the
  images. The easiest solution is to push these images to the
  <link xlink:href="https://hub.docker.com">&dhub;</link>. By default, all
  images pushed to the &dhub; are public. This is probably fine as long as
  this does not violate your company's policy and your images do not contain
  sensitive data or proprietary software.
 </para>
 <para>
  If you need to restrict access to your &docker; images, there are two options:
 </para>
 <itemizedlist>
  <listitem>
   <para>
    <!-- Are we really advertising the services of some unaffiliated third
    party? - sknorr, 2017-12-07 -->
    Get a subscription on &dhub; that unlocks the feature to create private
    repositories.
   </para>
   <para>
    Run an on-site &dreg; where to store all the &docker; images used by
    your organization or company and combine them with Portus to secure the
    registry.
   </para>
  </listitem>
 </itemizedlist>
 <para>
  This chapter describes how to set up an on-site &dreg; and how to
  combine it with Portus.
 </para>
 <sect1 xml:id="sec.docker.registry.definition">
  <title>What is &dreg;?</title>

  <para>
   The &dreg; is an open-source project created by Docker Inc. It
   allows the storage and retrieval of &docker; images. By running a local
   instance of the &dreg; it is possible to completely avoid usage of
   &dhub;.
  </para>

  <para>
   &dreg; is also used by &dhub;. However, &dhub;,
   as seen from the user perspective, is made of the following parts at least:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     The user interface (UI): The part that is accessed by users with their
     browser. The UI provides a nice and intuitive way to browse the contents
     of &dhub; either manually or by using a search feature. It also
     allows to create organizations made by different users.
    </para>
    <para>
     This component is closed-source.
    </para>
   </listitem>
   <listitem>
    <para>
     The authentication component: This is used to protect the images stored
     inside of &dhub;. It validates all push, pull and search requests.
    </para>
    <para>
     This component is closed-source.
    </para>
   </listitem>
   <listitem>
    <para>
     The storage back-end: This is where &docker; images are sent and
     downloaded from. It is provided by &dreg;.
    </para>
    <para>
     This component is open-source.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec.docker.registry.installation">
  <title>Installing and Setting Up &dreg;</title>

  <procedure>
   <step>
    <para>
     Install the <systemitem>docker-distribution-registry</systemitem> package:
    </para>
    <screen>&prompt.sudo;zypper install docker-distribution-registry</screen>
   </step>
   <step>
    <para>
     To automatically start the &dreg; at boot time:
    </para>
    <screen>&prompt.sudo;systemctl enable registry</screen>
   </step>
   <step>
    <para>
     Start the &dreg;:
    </para>
    <screen>&prompt.sudo;systemctl start registry</screen>
   </step>
  </procedure>

  <para>
   The &dreg; configuration is defined inside of
   <filename>/etc/registry/config.yml</filename>.
  </para>

  <para>
   With the default configuration the registry listens on ports
   <literal>5000</literal> and stores the &docker; images under
   <filename>/var/lib/docker-registry</filename>.
  </para>

  <note>
   <title>Incompatible Versions of &deng; and &dreg;</title>
   <para>
    &dreg; 2.3 is not compatible with &deng; versions older
    than 1.10, because v2 manifests were only introduced with &deng; 1.10. As
    &deng; and &dreg; can be installed on different boxes, the
    versions might be incompatible. If you experience communication errors
    between &deng; and &dreg;, update both to the latest versions.
   </para>
  </note>

  <!--
      fcastelli 2015-07-08: TODO: update once we create a TID illustrating the secure setup of
      Docker registry and Portus.
     -->

  <para>
   For more details about &dreg; and its configuration, see the
   official documentation at:
   <link xlink:href="https://docs.docker.com/registry/"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec.docker.registry.limitations">
  <title>Limitations</title>

  <para>
   The &dreg; has two major limitations:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     It lacks any form of authentication. That means everybody with access to
     the &dreg; can push and pull images to it. That also includes the
     possibility to overwrite already existing images.
    </para>
   </listitem>
   <listitem>
    <para>
     There is no way to see which images have been pushed to the &dreg;.
     You need to manually take notes of what is being stored inside
     of it. There is also no search functionality, which makes collaboration
     harder.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec.docker.portus">
  <title>Portus</title>

  <para>
   Portus is an authentication service and user interface for the &dreg;.
   It is an open source project created by &suse; to address all the
   limitations faced by the local instances of &dreg;.
   By combining Portus and &dreg;, it is possible to have a secure and
   enterprise ready on-premise version of the &dhub;.
  </para>

  <para>
   Portus is accessible for &slsa; customers as a &docker; image. This image can
   be pulled from the &suse; Container Registry, and customers should use this
   instead of the community version that can be found on the Docker hub. So, for
   example, if you want to pull the <literal>2.4.0</literal> tag, you can
   perform the following command:
  </para>

  <screen>&prompt.user;<command>docker pull registry.suse.com/sles12/portus:2.4.0</command></screen>

  <para>
   The image that &slsa; customers will use has the exact same code as the one
   from the community. Therefore, in order to set it up you may follow the same
   instructions as explained here:
   <link xlink:href="http://port.us.org/docs/deploy.html"/>.
  </para>
 </sect1>
</chapter>
