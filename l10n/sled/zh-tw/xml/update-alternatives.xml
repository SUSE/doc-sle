<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
                 type="text/xml"
                 title="Profiling step"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="update-alternatives.xml" version="5.1" xml:id="cha-update-alternative"> <title><command>update-alternatives</command>：管理指令和檔案的多個版本</title>
 <info>
      <abstract>
        <para>
    系統上往往會安裝同一個工具的多個版本。為了讓管理員有選擇，以及能一起安裝和使用多個不同的版本，替代項系統提供了以一致的方式管理此類版本的功能。
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker/>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <sect1 xml:id="sec-ua-concept">
   <title>綜覽</title>
   <para>
    在 <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase> 上，有些程式執行的是相同或類似的任務。例如，如果系統上既安裝了 Java 1.7，也安裝了 Java 1.8，則會從 RPM 套件中呼叫替代項系統程序檔 (<command>update-alternatives</command>)。替代項系統預設將參考版本 1.8：版本越高，優先程度也就越高。不過，管理員可以變更該預設設定，並可將一般名稱指向版本 1.7。
   </para>
   <para>
    本章使用了下列術語：
   </para>
   <variablelist>
    <title>術語</title>
    <varlistentry>
     <term>管理目錄</term>
     <listitem>
      <para>
       預設的 <filename class="directory">/var/lib/rpm/alternatives</filename> 目錄，其中包含有關替代項目前狀態的資訊。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>替代項</term>
     <listitem>
      <para>
       檔案系統中某個特定檔案的名稱，可使用替代項系統透過一般名稱存取。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>替代項目錄</term>
     <listitem>
      <para>
       包含符號連結的預設 <filename class="directory">/etc/alternatives</filename> 目錄。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>一般名稱</term>
     <listitem>
      <para>
       該名稱 (例如 <command>/usr/bin/edit</command>) 參考可透過替代項系統使用的多個檔案中的一個。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>連結群組</term>
     <listitem>
      <para>
       一組相關的符號連結，可做為一個群組更新。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>主連結</term>
     <listitem>
      <para>
       連結群組中用於確定如何設定群組中其他連結的連結。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>從屬連結</term>
     <listitem>
      <para>
       連結群組中受主連結控制的連結。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>符號連結 (symlink)</term>
     <listitem>
      <para>
       在同一檔案系統中做為另一個檔案的參考的檔案。替代項系統使用替代項目錄中的符號連結，在一個檔案的各個版本之間切換。
      </para>
      <para>
       管理員可透過 <command>update-alternatives</command> 指令修改替代項目錄中的符號連結。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    替代項系統提供 <command>update-alternatives</command> 指令供您建立、移除、維護和顯示有關符號連結的資訊。雖然這些符號連結通常是指向指令，但它們也可以指向 JAR 歸檔、man 頁面及其他檔案。本章中的範例使用了指令和 man 頁面，但它們也適用於其他檔案類型。
   </para>
   <para>
    替代項系統使用替代項目錄來收集指向可能的替代項的連結。安裝包含替代項的新套件時，會將新的替代項新增至系統。是否將新套件的替代項選為預設值取決於它的優先程度和設定的模式。一般而言，版本較高的套件優先程度也較高。替代項系統可以在兩種模式下運作：
   </para>
   <itemizedlist>
    <listitem>
     <formalpara>
      <title>自動模式</title>
      <para>
       在此模式下，替代項系統會確保群組中的連結指向適合群組且優先程度最高的替代項。
      </para>
     </formalpara>
    </listitem>
    <listitem>
     <formalpara>
      <title>手動模式</title>
      <para>
       在此模式下，替代項系統不會對系統管理員的設定進行任何變更。
      </para>
     </formalpara>
    </listitem>
   </itemizedlist>
   <para>
    例如，在替代項系統中，<command>java</command> 指令具有以下連結階層：
   </para>
   <example>
    <title><command>java</command> 指令的替代項系統</title>
    <screen>/usr/bin/java <co xml:id="co-ua-java-name"/>
 -&gt; /etc/alternatives/java <co xml:id="co-ua-java-symbolic-link"/>
     -&gt; /usr/lib64/jvm/jre-10-openjdk/bin/java <co xml:id="co-ua-java-alternatives"/></screen>
    
    <calloutlist>
     <callout arearefs="co-ua-java-name">
      <para>
       一般名稱。
      </para>
     </callout>
     <callout arearefs="co-ua-java-symbolic-link">
      <para>
       替代項目錄中的符號連結。
      </para>
     </callout>
     <callout arearefs="co-ua-java-alternatives">
      <para>
       替代項之一。
      </para>
     </callout>
    </calloutlist>
   </example>
  </sect1>

  <sect1 xml:id="sec-ua-use-cases">
   <title>使用案例</title>
   <para>
    預設從 RPM 套件中呼叫 <command>update-alternatives</command> 程序檔。安裝或移除一個套件時，該程序檔會處理該套件所有的符號連結。不過，您可以從指令行中手動執行該程序檔，以便：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      顯示一般名稱的目前替代項。
     </para>
    </listitem>
    <listitem>
     <para>
      變更替代項的預設值。
     </para>
    </listitem>
    <listitem>
     <para>
     為替代項建立一組相關的檔案。
     </para>
    </listitem>
   </itemizedlist>
  </sect1>

  <sect1 xml:id="sec-ua-view-all">
   <title>取得替代項的綜覽</title>
   <para>
    若要取回所有已設定替代項的名稱，請使用：
   </para>
 <screen><prompt>tux &gt; </prompt><command>ls /var/lib/alternatives</command></screen>
   <para>
    若要取得所有已設定替代項的綜覽及其值，請使用
   </para>
   <screen><prompt>tux &gt; </prompt><command>sudo</command> <command>update-alternatives --get-selections</command>
asadmin                        auto     /usr/bin/asadmin-2.7
awk                            auto     /usr/bin/gawk
chardetect                     auto     /usr/bin/chardetect-3.6
dbus-launch                    auto     /usr/bin/dbus-launch.x11
default-displaymanager         auto     /usr/lib/X11/displaymanagers/gdm
[...]</screen>
  </sect1>

  <sect1 xml:id="sec-ua-view">
   <title>檢視關於特定替代項的詳細資料</title>
   <para>
    檢查替代項最簡單的方法就是查看指令的符號連結。例如，如果您想知道 <command>java</command> 指令參考的是什麼，請使用以下指令：
   </para>
   <screen><prompt>tux &gt; </prompt><command>readlink --canonicalize /usr/bin/java</command>
/usr/lib64/jvm/jre-10-openjdk/bin/java</screen>
   <para>
    如果您看到相同的路徑 (在本例中為 <filename>/usr/bin/java</filename>)，則此指令沒有替代項。
   </para>
   
   <para>
    若要查看全部的替代項 (包括從屬連結)，請使用 <option>--display</option> 選項：
   </para>
   <screen><prompt>tux &gt; </prompt><command>sudo</command> <command>update-alternatives --display java</command>
java - auto mode
  link best version is /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java
  link currently points to /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java
  link java is /usr/bin/java
  slave java.1.gz is /usr/share/man/man1/java.1.gz
  slave jre is /usr/lib64/jvm/jre
  slave jre_exports is /usr/lib64/jvm-exports/jre
  slave keytool is /usr/bin/keytool
  slave keytool.1.gz is /usr/share/man/man1/keytool.1.gz
  slave orbd is /usr/bin/orbd
  slave orbd.1.gz is /usr/share/man/man1/orbd.1.gz
[...]</screen>
  </sect1>

  <sect1 xml:id="sec-ua-set">
   <title>設定替代項的預設版本</title>
   <para>
    <filename>/usr/bin</filename> 中的指令預設會參考優先程度最高的替代項目錄。例如，<command>java</command> 指令預設會顯示下面的版本號碼：
   </para>
   <screen><prompt>tux &gt; </prompt><command>java -version</command>
openjdk version "10.0.1" 2018-04-17
OpenJDK Runtime Environment (build 10.0.1+10-suse-lp150.1.11-x8664)
OpenJDK 64-Bit Server VM (build 10.0.1+10-suse-lp150.1.11-x8664, mixed mode)</screen>
   <para>
    若要將預設 <command>java</command> 指令變更為參考先前的版本，請執行：
   </para>
   <screen><prompt>tux &gt; </prompt><command>sudo</command> <command>update-alternatives --config java</command>
root's password:
There are 2 choices for the alternative java (providing /usr/bin/java).

  Selection    Path                                       Priority   Status
------------------------------------------------------------
* 0            /usr/lib64/jvm/jre-10-openjdk/bin/java      2005      auto mode
  1            /usr/lib64/jvm/jre-1.8.0-openjdk/bin/java   1805      manual mode
  2            /usr/lib64/jvm/jre-10-openjdk/bin/java      2005      manual mode
  3            /usr/lib64/jvm/jre-11-openjdk/bin/java      0         manual mode

Press &lt;enter&gt; to keep the current choice[*], or type selection number:</screen>
   <para>
    根據您的系統和安裝的版本而定，具體的 Java 版本號碼會有所不同。選取 <literal>1</literal> 之後，<command>java</command> 會顯示下面的版本號碼：
   </para>
   <screen><prompt>tux &gt; </prompt><command>java -version</command>
java version "1.8.0_171"
OpenJDK Runtime Environment (IcedTea 3.8.0) (build 1.8.0_171-b11 suse-lp150.2.3.1-x86_64)
OpenJDK 64-Bit Server VM (build 25.171-b11, mixed mode)</screen>
   <para>
    另外，請記住以下幾點：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      在手動模式下安裝另一個 Java 版本時，替代項系統既不會變更連結，也不會變更一般名稱。
     </para>
    </listitem>
    <listitem>
     <para>
      在自動模式下安裝另一個 Java 版本時，替代項系統會變更 Java 主連結及所有從屬連結 (如<xref linkend="sec-ua-view"/>中所示)。若要檢查主/從關係，請使用：
     </para>
     <screen><prompt>tux &gt; </prompt><command>sudo</command> <command>update-alternatives --display java</command></screen>
    </listitem>
   </itemizedlist>
  </sect1>

  <sect1 xml:id="sec-ua-install">
   <title>安裝自訂替代項</title>
   <para>
    本節介紹如何在系統上設定自訂替代項。範例做了以下假設：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      有兩個具有類似功能的程序檔：<command>foo-2</command> 和 <command>foo-3</command>。
     </para>
    </listitem>
    <listitem>
     <para>
      這些程序檔儲存在 <filename>/usr/local/bin</filename> 目錄中，以免與 <filename>/usr/bin</filename> 中的系統工具產生任何衝突。
     </para>
    </listitem>
    <listitem>
     <para>
      有一個主連結 <command>foo</command> 指向 <command>foo-2</command> 或 <command>foo-3</command>。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    若要在您的系統上提供替代項，請執行以下步驟：
   </para>
   <procedure>
    <step>
     <para>
      將您的程序檔複製到 <filename>/usr/local/bin</filename> 目錄中。
     </para>
    </step>
    <step>
     <para>
      讓程序檔可執行：
     </para>
     <screen><prompt>tux &gt; </prompt><command>sudo</command> <command>chmod +x /usr/local/bin/foo-{2,3}</command></screen>
    </step>
    <step>
     <para>
      針對兩個程序檔執行 <command>update-alternatives</command>：
     </para>
     <screen><prompt>tux &gt; </prompt><command>sudo</command> update-alternatives --install \
   /usr/local/bin/foo <co xml:id="co-ua-ua-install-usr-local-bin-foo"/>\
   foo <co xml:id="co-ua-ua-install-foo"/>\
   /usr/local/bin/foo-2 <co xml:id="co-ua-ua-install-usr-local-bin-foo-path"/>\
   200 <co xml:id="co-ua-ua-install-prio"/>
<prompt>tux &gt; </prompt><command>sudo</command> update-alternatives --install \
   /usr/local/bin/foo <xref linkend="co-ua-ua-install-usr-local-bin-foo"/>\
   foo <xref linkend="co-ua-ua-install-foo"/>\
   /usr/local/bin/foo-3 <xref linkend="co-ua-ua-install-usr-local-bin-foo-path"/>\
   300 <xref linkend="co-ua-ua-install-prio"/></screen>
     <para>
      <option>--install</option> 後面的選項具有以下意義：
     </para>
     <calloutlist>
      <callout arearefs="co-ua-ua-install-usr-local-bin-foo">
       <para>
        一般名稱。為了避免混淆，該名稱通常是不含任何版本號碼的程序檔名稱。
       </para>
      </callout>
      <callout arearefs="co-ua-ua-install-foo">
       <para>
        主連結的名稱。必須相同。
       </para>
      </callout>
      <callout arearefs="co-ua-ua-install-usr-local-bin-foo-path">
       <para>
        位於 <filename>/usr/local/bin</filename> 中的原始程序檔的路徑。
       </para>
      </callout>
      <callout arearefs="co-ua-ua-install-prio">
       <para>
        優先程度.我們給 <command>foo-2</command> 設定一個低於 <command>foo-3</command> 的優先程度。最好使用增大得非常明顯的數字來區分優先程度。例如，<command>foo-2</command> 的優先程度是 200，<command>foo-3</command> 的優先程度是 300。
       </para>
      </callout>
     </calloutlist>
    </step>
    <step>
     <para>
      檢查主連結：
     </para>
     <screen><prompt>tux &gt; </prompt><command>sudo</command> <command>update-alternatives --display foo</command>
foo - auto mode
  link best version is /usr/local/bin/foo-3
  link currently points to /usr/local/bin/foo-3
  link foo is /usr/local/bin/foo
/usr/local/bin/foo-2 - priority 200
/usr/local/bin/foo-3 - priority 300</screen>
    </step>
   </procedure>
   <para>
    完成所述步驟後，便可以使用主連結 <command>/usr/local/bin/foo</command> 了。
   </para>
   <para>
    如果需要，可以安裝其他替代項。若要移除替代項，請使用以下指令：
   </para>
   <screen><prompt>tux &gt; </prompt><command>sudo</command> <command>update-alternatives --remove foo /usr/local/bin/foo-2</command></screen>
   <para>
    移除此程序檔之後，foo 群組的替代項系統看上去如下所示：
   </para>
   <screen><prompt>tux &gt; </prompt><command>sudo</command> <command>update-alternatives --display foo</command>
foo - auto mode
  link best version is /usr/local/bin/foo-3
  link currently points to /usr/local/bin/foo-3
  link foo is /usr/local/bin/foo
/usr/local/bin/foo-3 - priority 300</screen>
  </sect1>

  <sect1 xml:id="sec-ua-slave">
   <title>定義相依替代項</title>
   <para>
    如果您有替代項，則僅憑程序檔本身不足以完成任務。大部分指令都不是完全獨立的：它們通常隨附其他檔案，例如延伸、組態或 man 頁面。若要建立依賴於主連結的替代項，請使用<emphasis>從屬替代項</emphasis>。
   </para>
   <para>
    我們假設要延伸<xref linkend="sec-ua-install"/>中的範例，並提供 man 頁面和組態檔案：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      兩個 man 頁面 (<filename>foo-2.1.gz</filename> 和 <filename>foo-3.1.gz</filename>) 儲存在 <filename>/usr/local/man/man1</filename> 目錄中。
     </para>
    </listitem>
    <listitem>
     <para>
      兩個組態檔案 (<filename>foo-2.conf</filename> 和 <filename>foo-3.conf</filename>) 儲存在 <filename>/etc</filename> 中。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    請執行以下步驟將其他檔案新增至替代項中：
   </para>
   <procedure>
    <step>
     <para>
      將組態檔案複製到 <filename>/etc</filename> 中：
     </para>
     <screen><prompt>tux &gt; </prompt><command>sudo</command> <command>cp foo-{2,3}.conf /etc</command></screen>
    </step>
    <step>
     <para>
      將 man 頁面複製到 <filename>/usr/local/man/man1</filename> 目錄中：
     </para>
     <screen><prompt>tux &gt; </prompt><command>sudo</command> <command>cp foo-{2,3}.1.gz /usr/local/man/man1/</command></screen>
    </step>
    <step>
     <para>
      使用 <option>--slave</option> 選項將從屬連結新增至主程序檔：
     </para>
     <screen><prompt>tux &gt; </prompt><command>sudo</command> <command>update-alternatives --install \
   /usr/local/bin/foo foo /usr/local/bin/foo-2 200 \
   --slave /usr/local/man/man1/foo.1.gz \
   foo.1.gz \
   /usr/local/man/man1/foo-2.1.gz \
   --slave /etc/foo.conf \
   foo.conf \
   /etc/foo-2.conf</command>
<prompt>tux &gt; </prompt><command>sudo</command> <command>update-alternatives --install \
   /usr/local/bin/foo foo /usr/local/bin/foo-3 300 \
   --slave /usr/local/man/man1/foo.1.gz \
   foo.1.gz \
   /usr/local/man/man1/foo-3.1.gz \
   --slave /etc/foo.conf \
   foo.conf \
   /etc/foo-3.conf</command></screen>
    </step>
    <step>
     <para>檢查主連結：</para>
     <screen>foo - auto mode
  link best version is /usr/local/bin/foo-3
  link currently points to /usr/local/bin/foo-3
  link foo is /usr/local/bin/foo
  slave foo.1.gz is /usr/local/man/man1/foo.1.gz
  slave foo.conf is /etc/foo.conf
/usr/local/bin/foo-2 - priority 200
  slave foo.1.gz: /usr/local/man/man1/foo-2.1.gz
  slave foo.conf: /etc/foo-2.conf
/usr/local/bin/foo-3 - priority 300
  slave foo.1.gz: /usr/local/man/man1/foo-3.1.gz
  slave foo.conf: /etc/foo-3.conf</screen>
    </step>
   </procedure>
   <para>
    如果您使用 <command>update-alternatives --config foo</command> 將連結變更為 <command>foo-2</command>，則所有從屬連結也會隨之變更。
   </para>
  </sect1>

  
</chapter>
