<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.tools.intro">
 <title>Virtualization Tools</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
   </dm:bugtracker>
  </dm:docmanager>
  <abstract>
   <para>
    &libvirt; is a library that provides a common API for managing popular
    virtualization solutions, among them &kvm;, &lxc;, and &xen;. The library
    provides a normalized management API for these virtualization solutions,
    allowing a stable, cross-hypervisor interface for higher-level management
    tools. The library also provides APIs for management of virtual networks
    and storage on the &vmhost;. The configuration of each &vmguest; is stored
    in an XML file.
   </para>
   <para>
    With &libvirt; you can also manage your &vmguest;s remotely. It supports
    TLS encryption, x509 certificates and authentication with SASL. This
    enables managing &vmhost;s centrally from a single workstation,
    alleviating the need to access each &vmhost; individually.
   </para>
   <para>
    Using the &libvirt;-based tools is the recommended way of managing
    &vmguest;s. Interoperability between &libvirt; and &libvirt;-based
    applications has been tested and is an essential part of &suse;'s support
    stance.
   </para>
  </abstract>
 </info>

 <sect1 xml:id="sec.tools.intro.console">
  <title>Virtualization Console Tools</title>

  <para>
   The following libvirt-based tools for the command line are available on
   &productname;. All tools are provided by packages carrying the tool's name.
  </para>

  <variablelist>
   <varlistentry>
    <term><command>virsh</command>
    </term>
    <listitem>
     <para>
      A command line tool to manage &vmguest;s with similar functionality
      as the &vmm;. Allows you to change a &vmguest;'s status (start,
      stop, pause, etc.), to set up new guests and devices, or to edit
      existing configurations. <command>virsh</command> is also useful to
      script &vmguest; management operations.
     </para>
     <para>
      <command>virsh</command> takes the first argument as a
      command and further arguments as options to this command:
     </para>
     <screen>virsh [-c <replaceable>URI</replaceable>] <replaceable>COMMAND</replaceable> <replaceable>DOMAIN-ID</replaceable> [OPTIONS]</screen>
     <para>
      Like <command>zypper</command>, <command>virsh</command> can also
      be called without a command. In this case it starts a shell waiting for
      your commands. This mode is useful when having to run subsequent
      commands:
     </para>
     <screen>~&gt; virsh -c qemu+ssh://&exampleuserII_plain;@&wsIVname;/system
Enter passphrase for key '/home/&exampleuserII_plain;/.ssh/id_rsa':
Welcome to virsh, the virtualization interactive terminal.

Type:  'help' for help with commands
       'quit' to quit

virsh # hostname
&wsIVname;</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>virt-install</command>
    </term>
    <listitem>
     <para>
      A command line tool for creating new &vmguest;s using the
      &libvirt; library. It supports graphical installations via VNC or
      <xref linkend="gloss.vt.acronym.spice"/> protocols. Given suitable
      command line arguments, <command>virt-install</command> can run
      completely unattended. This allows for easy automation of guest
      installs. <command>virt-install</command> is the default installation
      tool used by the &vmm;.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec.tools.intro.gui">
  <title>Virtualization GUI Tools</title>

  <para>
   The following libvirt-based graphical tools are available on
   &productname;. All tools are provided by packages carrying the tool's name.
  </para>

  <variablelist>
   <varlistentry>
    <term>&vmm; (<command>virt-manager</command>)</term>
    <listitem>
     <para>
      The &vmm; is a desktop tool for managing &vmguest;s. It provides the
      ability to control the lifecycle of existing machines (start/shutdown,
      pause/resume, save/restore) and create new &vmguest;s. It allows
      managing various types of storage and virtual networks. It provides
      access to the graphical console of &vmguest;s with a built-in VNC viewer
      and can be used to view performance
      statistics. <command>virt-manager</command> supports connecting to a
      local &libvirtd;, managing a local &vmhost;, or a remote &libvirtd;
      managing a remote &vmhost;.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="virt_virt-manager.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="virt_virt-manager.png" width="80%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
     <para>
      To start the &vmm;, enter <command>virt-manager</command> at the command
      prompt.
     </para>
     <note>
      <para>
       To disable automatic USB device redirection for &vmguest; using spice,
       either launch <command>virt-manager</command> with the
       <option>--spice-disable-auto-usbredir</option> parameter or run the
       following command to persistently change the default behavior:
      </para>
      <screen>&prompt.user;dconf write /org/virt-manager/virt-manager/console/auto-redirect false</screen>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>virt-viewer</command>
    </term>
    <listitem>
     <para>
      A viewer for the graphical console of a &vmguest;. It uses SPICE
      (configured by default on the &vmguest;) or VNC protocols and supports
      TLS and x509 certificates. &vmguest;s can be accessed by name, ID, or
      UUID. If the guest is not already running, the viewer can be told to
      wait until the guest starts, before attempting to connect to the
      console. <command>virt-viewer</command> is not installed by default and
      is available after installing the package <systemitem
      class="resource">virt-viewer</systemitem>.
     </para>
     <informalfigure os="sled;sles">
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="virt_virt-viewer.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="virt_virt-viewer.png" width="80%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>

     <informalfigure os="osuse">
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="virt_virt-viewer_osuse.png" width="80%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="virt_virt-viewer_osuse.png" width="80%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
     <note>
      <para>
       To disable automatic USB device redirection for &vmguest; using spice,
       add an empty filter using the
       <option>--spice-usbredir-auto-redirect-filter=''</option> parameter.
      </para>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>yast2 vm</command></term>
    <listitem>
     <para>
      A &yast; module that simplifies the installation of virtualization tools
      and can set up a network bridge:
     </para>
     <informalfigure pgwide="0">
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="yast2_vm.png" width="56%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="yast2_vm.png" width="56%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
