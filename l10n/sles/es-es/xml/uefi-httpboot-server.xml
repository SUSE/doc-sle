<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="uefi-httpboot-server.xml" version="5.0" xml:id="cha-deployment-prep-uefi-httpboot">
 <title>Configuración de un servidor de arranque HTTP UEFI</title>
 <info>
  <abstract>
   <para>
    En este capítulo se describe cómo instalar y configurar un servidor de arranque HTTP UEFI.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>sí</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="httpboot-intro">
  <title>Introducción</title>

  <para>
   El arranque HTTP combina DHCP, DNS y HTTP para permitir el arranque y la distribución de sistemas a través de la red. El arranque HTTP se puede utilizar como sustituto de alto rendimiento de PXE. El arranque HTTP permite arrancar un servidor desde un URI a través de HTTP, transfiriendo rápidamente archivos grandes, como el núcleo de Linux y el sistema de archivos raíz, desde servidores fuera de la red local.
  </para>

  <sect2 xml:id="httpboot-client">
   <title>Configuración del equipo cliente</title>
   <para>
    La habilitación del arranque HTTP en un equipo cliente físico depende del hardware específico. Consulte en la documentación cómo habilitar el arranque HTTP en su equipo concreto.
   </para>
  </sect2>

  <sect2 xml:id="httpboot-preparation">
   <title>Preparación</title>
   <para>
    La configuración descrita aquí utiliza las subredes IP 192.168.111.0/24 (IPv4) y 2001:db8:f00f:cafe::/64 (IPv6) y las direcciones IP del servidor son 192.168.111.1 (IPv4) y 2001:db8:f00f:cafe::1/64 (IPv6) como ejemplos. Ajuste estos valores para que coincidan con su configuración específica.
   </para>
   <para>
    Instale los siguientes paquetes en el equipo que tiene previsto utilizar como servidor de arranque HTTP: <package>dhcp-server</package>,
    <package>apache2</package> (o bien <package>lighttpd</package>), y
    <package>dnsmasq</package>.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="httpboot-configure-server">
  <title>Configuración del servidor</title>

  <sect2 xml:id="httpboot-dns-server">
   <title>Servidor DNS</title>
   <para>
    Aunque la configuración del servidor DNS es opcional, permite asignar un nombre fácil de usar al servidor de arranque HTTP. Para configurar el servidor DNS, añada lo siguiente al archivo <filename>/etc/dnsmasq.conf</filename>:
   </para>
<screen>interface=eth0
addn-hosts=/etc/dnsmasq.d/hosts.conf</screen>
   <para>
    Asigne un nombre de dominio a las direcciones IP del archivo <filename>/etc/dnsmasq.d/hosts.conf</filename>:
   </para>
<screen>192.168.111.1 www.httpboot.local
2001:db8:f00f:cafe::1 www.httpboot.local</screen>
   <para>
    Inicie el servidor DNS.
   </para>
<screen>systemctl start dnsmasq</screen>
   <note>
    <title>uso del cargador de arranque <phrase role="productname">suplementario</phrase></title>
    <para>
     Debido a un cambio en UEFI 2.7, se recomienda utilizar un cargador de arranque suplementario de SLE 15 o posterior para evitar posibles errores causados por el nodo DNS adicional.
    </para>
   </note>
   <sect3 xml:id="httpboot-dhcpv4-server">
    <title>Configuración del servidor DHCPv4</title>
    <para>
     Antes de configurar los servidores DHCP, especifique la interfaz de red para ellos en <filename>/etc/sysconfig/dhcpd</filename>:
    </para>
<screen>DHCPD_INTERFACE="eth0"
DHCPD6_INTERFACE="eth0"</screen>
    <para>
     De esta forma, los servidores DHCP proporcionan el servicio solo en la interfaz <literal>eth0</literal>.
    </para>
    <para>
     Para configurar un servidor DHCPv4 para el arranque PXE y el arranque HTTP, añada la siguiente configuración al archivo <filename>/etc/dhcpd.conf</filename>:
    </para>
<screen>option domain-name-servers 192.168.111.1;
option routers 192.168.111.1;
default-lease-time 14400;
ddns-update-style none;
  subnet 192.168.111.0 netmask 255.255.255.0 {
    range dynamic-bootp 192.168.111.100 192.168.111.120;
    default-lease-time 14400;
    max-lease-time 172800;
    class "pxeclients"{
      match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
      next-server 192.168.111.1;
      filename "/bootx64.efi";
    }
    class "httpclients" {
      match if substring (option vendor-class-identifier, 0, 10) = "HTTPClient";
      option vendor-class-identifier "HTTPClient";
      filename "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi";
    }
}</screen>
    <para>
     Tenga en cuenta que el servidor DHCPv4 debe utilizar el parámetro <literal>HTTPClient</literal> para el ID de clase de proveedor, ya que el cliente lo utiliza para identificar una oferta de arranque HTTP.
    </para>
    <para>
     Inicie el daemon DHCP:
    </para>
    <para>
     <literal>systemctl start dhcpd</literal>
    </para>
   </sect3>
   <sect3 xml:id="httpboot-dhcpv6-server">
    <title>Configuración del servidor DHCPv6</title>
    <para>
     Para configurar el servidor DHCPv6, añada la siguiente configuración a <filename>/etc/dhcpd6.conf</filename>:
    </para>
<screen>option dhcp6.bootfile-url code 59 = string;
option dhcp6.vendor-class code 16 = {integer 32, integer 16, string};
subnet6 2001:db8:f00f:cafe::/64 {
        range6 2001:db8:f00f:cafe::42:10 2001:db8:f00f:cafe::42:99;
        option dhcp6.bootfile-url "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi";
        option dhcp6.name-servers 2001:db8:f00f:cafe::1;
        option dhcp6.vendor-class 0 10 "HTTPClient";
}</screen>
    <para>
     Esta configuración define el tipo de URL de arranque, la clase de proveedor y otras opciones necesarias. De forma similar a la configuración de DHCPv4, es necesario proporcionar la URL de arranque, que debe tener una dirección IPv6. También es necesario especificar la opción de clase de proveedor. En DHCPv6, está formada por el número de empresa y los datos de la clase de proveedor (longitud y contenido). Dado que el controlador de arranque HTTP ignora el número de empresa, puede definirlo en <literal>0</literal>. El contenido de los datos de la clase de proveedor debe ser <literal>HTTPClient</literal>; de lo contrario, el cliente ignorará la oferta.
    </para>
    <para>
     La implementación de arranque HTTP anterior, que no sigue la especificación <link xlink:href="https://tools.ietf.org/html/rfc3315">RFC 3315</link>, requiere una configuración diferente:
    </para>
<screen>option dhcp6.bootfile-url code 59 = string;
option dhcp6.vendor-class code 16 = string;
        subnet6 2001:db8:f00f:cafe::/64 {
        range6 2001:db8:f00f:cafe::42:10 2001:db8:f00f:cafe::42:99;
        option dhcp6.bootfile-url "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi;
	option dhcp6.name-servers 2001:db8:f00f:cafe::1;
	option dhcp6.vendor-class "HTTPClient";
}</screen>
    <para>
     Inicie el daemon <literal>dhcpv6</literal>.
    </para>
<screen>systemctl start dhcpd6</screen>
    <sect4 xml:id="httpboot-dhcpv6-pxe-server">
     <title>Configuración del servidor DHCPv6 para el arranque PXE y HTTP</title>
     <para>
      Con la siguiente configuración, es posible configurar el servidor DHCPv6 para el arranque PXE y el arranque HTTP:
     </para>
<screen>option dhcp6.bootfile-url code 59 = string;
option dhcp6.vendor-class code 16 = {integer 32, integer 16, string};

subnet6 2001:db8:f00f:cafe::/64 {
        range6 2001:db8:f00f:cafe::42:10 2001:db8:f00f:cafe::42:99;

        class "PXEClient" {
	        match substring (option dhcp6.vendor-class, 6, 9);
	}

        subclass "PXEClient" "PXEClient" {
	        option dhcp6.bootfile-url "tftp://[2001:db8:f00f:cafe::1]/bootloader.efi";
	}

	class "HTTPClient"; {
	        match substring (option dhcp6.vendor-class, 6, 10);
	}

	subclass "HTTPClient" "HTTPClient" {
	        option dhcp6.bootfile-url "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi";
		option dhcp6.name-servers 2001:db8:f00f:cafe::1;
		option dhcp6.vendor-class 0 10 "HTTPClient";
	}
}</screen>
     <para>
      También es posible hacer coincidir la clase de proveedor con una arquitectura específica, como se indica a continuación:
     </para>
<screen>class "HTTPClient" {
        match substring (option dhcp6.vendor-class, 6, 21);
	}

subclass "HTTPClient" "HTTPClient":Arch:00016 {
        option dhcp6.bootfile-url "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi";
	option dhcp6.name-servers 2001:db8:f00f:cafe::1;
	option dhcp6.vendor-class 0 10 "HTTPClient";
}</screen>
     <para>
      En este ejemplo, <literal>HTTPClient:Arch:00016</literal> hace referencia a un cliente de arranque HTTP AMD64/Intel 64. Esta configuración permite que el servidor sirva a diferentes arquitecturas simultáneamente.
     </para>
    </sect4>
    <sect4 xml:id="httpboot-firewall">
     <title>Configuración del cortafuegos</title>
     <para>
      Si el filtro RP del cortafuegos descarta paquetes DHCPv6, compruebe su registro. En caso de que contenga la entrada <literal>rpfilter_DROP</literal>, inhabilite el filtro utilizando la siguiente configuración en <filename>/etc/firewalld/firewalld.conf</filename>:
     </para>
     <para>
      <literal>IPv6_rpfilter=no</literal>
     </para>
    </sect4>
   </sect3>
   <sect3 xml:id="httpboot-tftp-server">
    <title>Distribución de un servidor TFTP (opcional)</title>
    <para>
     Para proporcionar compatibilidad tanto con el arranque PXE como con el arranque HTTP, distribuya un servidor TFTP. Instale el paquete <package>tftp</package> e iniciar el servicio:
    </para>
<screen> systemctl start tftp.socket
systemctl start tftp.service</screen>
    <para>
     También es necesario instalar un paquete
     <package>tftpboot-installation</package> específico para utilizarlo con el arranque PXE. Ejecute el comando <command>zypper se tftpboot</command> para obtener una lista de los paquetes <package>tftp-installation</package> disponibles y, a continuación, instale el paquete para la versión y la arquitectura del sistema que desee, por ejemplo:
     <package>tftpboot-installation-SLE-15-SP3-x86_64</package> Por ejemplo,
     <package os="sles;sled">tftpboot-installation-SLE-<replaceable>VERSIÓN</replaceable>-x86_64</package>
     (sustituya <replaceable>VERSIÓN</replaceable> por la versión real). Copie el contenido del directorio <filename os="sles;sled">SLE-<replaceable>VERSIÓN</replaceable>-x86_64</filename> en el directorio raíz del servidor TFTP:
    </para>


    <para>
     Para obtener más información, consulte el archivo <filename os="sles;sled">/usr/share/tftpboot-installation/SLE-<replaceable>VERSIÓN</replaceable>-x86_64/README</filename>
    </para>
   </sect3>
   <sect3 xml:id="httpboot-http-server">
    <title>Configuración del servidor HTTP</title>
    <para>
     Copie todo el contenido de la primera imagen ISO del sistema en el directorio <filename os="sles;sled">/srv/www/htdocs/sle/</filename>. A continuación, edite el archivo <filename os="sles;sled">/srv/www/htdocs/sle/grub.cfg</filename>. Utilice el siguiente ejemplo como referencia:
    </para>
<screen>timeout=60
default=1

menuentry 'Installation IPv4' --class opensuse --class gnu-linux --class gnu --class os {
    set gfxpayload=keep
    echo 'Loading kernel ...'
    linuxefi /sle/boot/x86_64/loader/linux install=http://www.httpboot.local/sle
    echo 'Loading initial ramdisk ...'
    initrdefi /sle/boot/x86_64/loader/initrd
}

menuentry 'Installation IPv6' --class opensuse --class gnu-linux --class gnu --class os {
    set gfxpayload=keep
    echo 'Loading kernel ...'
    linuxefi /sle/boot/x86_64/loader/linux install=install=http://www.httpboot.local/sle ipv6only=1 ifcfg=*=dhcp6,DHCLIENT6_MODE=managed
    echo 'Loading initial ramdisk ...'
    initrdefi /sle/boot/x86_64/loader/initrd
}</screen>
    <sect4 xml:id="httpboot-lighttpd">
     <title>Configuración de lighttpd</title>
     <para>
      Para habilitar la compatibilidad con IPv4 e IPv6 en lighttpd, modifique <filename>/etc/lighttpd/lighttpd.conf</filename> de la siguiente manera:
     </para>
<screen>##
## Use IPv6?
##
#server.use-ipv6 = "enable"
$SERVER["socket"] == "[::]:80" {  }</screen>
     <para>
      Inicie el daemon <literal>lighttpd</literal>:
     </para>
<screen>systemctl start lighttpd</screen>
    </sect4>
    <sect4 xml:id="httpboot-apache2">
     <title>Configuración de apache2</title>
     <para>
      Apache no requiere configuración adicional. Inicie el daemon <literal>apache2</literal>:
     </para>
<screen>systemctl start apache2</screen>
    </sect4>
   </sect3>
   <sect3 xml:id="httpboot-http-server-ssl-support">
    <title>Habilitación de la compatibilidad con SSL para el servidor HTTP (opcional)</title>
    <para>
     Para utilizar el arranque HTTPS, debe convertir un certificado de servidor existente al formato <literal>DER</literal> e inscribirlo en el firmware del cliente.
    </para>
    <para>
     Suponiendo que ya tenga un certificado instalado en el servidor, conviértalo al formato <literal>DER</literal> para utilizarlo con el cliente mediante el siguiente comando:
    </para>
<screen>openssl x509 -in <replaceable>CERTIFICATE</replaceable>.crt -outform der -out <replaceable>CERTIFICATE</replaceable>.der</screen>
    <sect4 xml:id="httpboot-enroll-certificate-physical-machine">
     <title>Inscripción del certificado del servidor en el firmware del cliente</title>
     <para>
      El procedimiento exacto para inscribir el certificado convertido depende de la implementación específica del firmware del cliente. Para cierto hardware, debe inscribir el certificado manualmente a través de la interfaz de usuario del firmware mediante un dispositivo de almacenamiento externo con el certificado. Los equipos compatibles con Redfish pueden inscribir el certificado de forma remota. Consulte la documentación de su hardware específico para obtener más información sobre cómo inscribir certificados.
     </para>
    </sect4>
    <sect4 xml:id="httpboot-ssl-lighttpd">
     <title>Habilitación de la compatibilidad con SSL en lighttpd</title>
     <para>
      Dado que lighttpd necesita la clave privada y el certificado en el mismo archivo, unifíquelos mediante el siguiente comando:
     </para>
<screen>cat <replaceable>CERTIFICATE</replaceable>.crt server.key &gt; <replaceable>CERTIFICATE</replaceable>.pem</screen>
     <para>
      Copie <filename><replaceable>CERTIFICADO</replaceable>.pem</filename> en el directorio <filename>/etc/ssl/private/</filename>.
     </para>
<screen>cp server-almighty.pem /etc/ssl/private/
chown -R root:lighttpd /etc/ssl/private/server-almighty.pem
chmod 640 /etc/ssl/private/server-almighty.pem</screen>
     <para>
      Asegúrese de que <literal>mod_openssl</literal> aparece en la sección <literal>server.modules</literal> del archivo <filename>/etc/lighttpd/modules.conf</filename>, por ejemplo:
     </para>
<screen>server.modules = (
  "mod_access",
  "mod_openssl",
)</screen>
     <para>
      Añada las siguientes líneas a la sección <literal>SSL Support</literal> de <filename>/etc/lighttpd/lighttpd.conf</filename>:
     </para>
<screen># IPv4
$SERVER["socket"] == ":443" {
    ssl.engine                 = "enable"
    ssl.pemfile                = "/etc/ssl/private/server-almighty.pem"
}
# IPv6
$SERVER["socket"] == "[::]:443" {
    ssl.engine                 = "enable"
    ssl.pemfile                = "/etc/ssl/private/server-almighty.pem"
}</screen>
     <para>
      Reinicie lighttpd para activar la compatibilidad con SSL:
     </para>
<screen>systemctl restart lighttpd</screen>
    </sect4>
    <sect4 xml:id="http-ssl-apache">
     <title>Habilitación de la compatibilidad con SSL en Apache</title>
     <para>
      Abra el archivo <filename>/etc/sysconfig/apache2</filename> y añada el indicador SSL de la siguiente manera:
     </para>
<screen>APACHE_SERVER_FLAGS="SSL"</screen>
     <para>
      Asegúrese de que el módulo <literal>ssl</literal> aparece en <literal>APACHE_MODULES</literal>, por ejemplo:
     </para>
     <para>
      A continuación, copie la clave privada y el certificado en el directorio <filename>/etc/apache2/</filename>.
     </para>
<screen>cp server.key /etc/apache2/ssl.key/
chown wwwrun /etc/apache2/ssl.key/server.key
chmod 600 /etc/apache2/ssl.key/server.key
cp server.crt /etc/apache2/ssl.crt/</screen>
     <para>
      Cree la configuración de ssl vhost.
     </para>
<screen>cd /etc/apache2/vhosts.d
cp vhost-ssl.template vhost-ssl.conf</screen>
     <para>
      Edite <filename>/etc/apache2/vhosts.d/vhost-ssl.conf</filename> para cambiar la clave privada y el certificado:
     </para>
<screen>SSLCertificateFile /etc/apache2/ssl.crt/server.crt
 SSLCertificateKeyFile /etc/apache2/ssl.key/server.key</screen>
     <para>
      Reinicie apache para activar la compatibilidad con SSL:
     </para>
<screen>systemctl restart apache2</screen>
    </sect4>
    <sect4 xml:id="httpboot-modify-dhcp-configuration">
     <title>Modificación de la configuración de DHCP</title>
     <para>
      Sustituya el prefijo <literal>http://</literal> por <literal>https://</literal> en <filename>dhcpd.conf/dhcpd6.conf</filename> y reinicie el servidor DHCP.
     </para>
<screen>systemctl restart dhcpd
systemctl restart dhcpd6</screen>
    </sect4>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="httpboot-client-boot">
  <title>Arranque del cliente mediante arranque HTTP</title>

  <para>
   Si el firmware ya admite el arranque HTTP, conecte el cable y elija la opción de arranque correcta.
  </para>
 </sect1>
</chapter>
