<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ulp.xml" version="5.0" xml:id="cha-ulp" xml:lang="ja">
  <title>ユーザ空間ライブパッチ</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
    <abstract>
      <para>
        この章では、ユーザスペースのライブパッチの基本原理と使用方法について説明します。
      </para>
    </abstract>
  </info>
  <sect1 xml:id="sec-ulp">
    <title>ユーザ空間ライブパッチについて</title>

    

    

    <para>
      ユーザ空間ライブパッチ(ULP)とは、実行中のプロセスで使用されるライブラリに、中断することなくパッチを適用するプロセスのことです。ライブパッチとしてセキュリティ修正が利用できるようになるたびに、ライブパッチを適用した後にプロセスを再起動することなくカスタマサービスが保護されます。
    </para>

    <para>
      ライブパッチ操作は、<systemitem>libpulp</systemitem>の一部である<systemitem>ulp</systemitem>ツールを使用して実行されます。<systemitem>libpulp</systemitem>は、<systemitem>libpulp.so</systemitem>ライブラリと、<command>ulp</command>バイナリで構成されるフレームワークで、ライブラリをライブパッチ可能にし、ライブパッチを適用します。
    </para>

    <tip>
      <para>
        標準ユーザまたは特権を持つユーザのいずれかとして<command>sudo</command>メカニズムを使用して<command>ulp</command>コマンドを実行できます。両者の違いは、<command>sudo</command>を使用して<command>ulp</command>を実行すると、<systemitem class="username">root</systemitem>によって実行されているプロセスまたはパッチプロセスの情報を表示できることです。
      </para>
    </tip>

    <sect2 xml:id="sec-ulp-prereqs">
      <title>前提条件</title>
      <para>
        ULPを機能させるには、2つの要件を満たす必要があります。
      </para>
      <itemizedlist>
        
        <listitem os="sles;sled">
          <para>
            次を実行してシステムにULPをインストールしている。
          </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper in libpulp0 libpulp-tools</screen>
        </listitem>
        <listitem>
          <para>
            目的のライブパッチサポートを含むアプリケーションを<systemitem>libpulp.so.0</systemitem>ライブラリをプリロードすることによって起動する必要がある。詳しくは<xref linkend="sec-ulp-libpulp"/>を参照してください。
          </para>
        </listitem>
      </itemizedlist>
    </sect2>

    <sect2 xml:id="sec-ulp-supported-libs">
      <title>サポートされているライブラリ</title>
      <para>
        現在は、<systemitem>glibc</systemitem>および<systemitem>openssl</systemitem> (<systemitem>openssl1_1</systemitem>)のみがサポートされています。追加のパッケージは、ライブパッチ用に準備できてから使用できるようになります。<systemitem>glibc</systemitem>および<systemitem>openssl</systemitem>のライブパッチを受け取るには、<package>glibc-livepatches</package>と<package>openssl-livepatches</package>パッケージの両方をインストールしてください。
      </para>
<screen os="sled;sles"><prompt>&gt; </prompt>zypper install glibc-livepatches openssl-livepatches</screen>

      
    </sect2>

    <sect2 xml:id="sec-ulp-libpulp">
      <title><systemitem>libpulp</systemitem>の使用</title>
      <para>
        アプリケーションでライブパッチを有効にするには、アプリケーション起動時に<systemitem>libpulp.so.0</systemitem>ライブラリをプリロードする必要があります。
      </para>
<screen><prompt>&gt; </prompt>LD_PRELOAD=/usr/lib64/libpulp.so.0 <replaceable>APPLICATION_CMD</replaceable></screen>
      <sect3 xml:id="sec-ulp-livepatch-check">
        <title>ライブラリがライブパッチ可能かどうかの確認</title>
        <para>
          ライブラリがライブパッチ可能かどうかを確認するには、次のコマンドを使用します。
        </para>
<screen><prompt>&gt; </prompt>ulp livepatchable <replaceable>PATH_TO_LIBRARY</replaceable></screen>
      </sect3>
      <sect3 xml:id="sec-ulp-livepatch-container-check">
        <title><filename>.so</filename>ファイルがライブパッチコンテナかどうかの確認</title>
        <para>
          共有オブジェクト(<filename>.so</filename>)は、ULPパッチ記述が埋め込まれている場合にはライブパッチコンテナです。次のコマンドを使用して確認できます。
        </para>
<screen><prompt>&gt; </prompt>readelf -S <replaceable>SHARED_OBJECT</replaceable> | grep .ulp</screen>
        <para>
          共有オブジェクトに<literal>.ulp</literal>セクションと<literal>.ulp.rev</literal>セクションの両方があることを出力が示している場合、ライブパッチコンテナです。
        </para>
      </sect3>
      <sect3 xml:id="sec-ulp-apply-livepatch">
        <title>ライブパッチの適用</title>
        <para>
          ライブパッチは、次のような、<command>ulp trigger</command>コマンドを使用して適用されます。
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> <replaceable>LIVEPATCH</replaceable>.so</screen>
        <para>
          <literal>PID</literal>を、パッチを適用するライブラリを使用する実行中のプロセスのプロセスIDで置き換え、<literal>LIVEPATCH.so</literal>を実際のライブパッチファイルで置き換えます。このコマンドは、次のステータスメッセージのいずれかを返します。
        </para>
        <variablelist>
          <varlistentry>
            <term>SUCCESS</term>
            <listitem>
              <para>
                ライブパッチ操作は成功しました。
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>SKIPPED</term>
            <listitem>
              <para>
                パッチは、プロセスでロードされたどのライブラリ用にも設計されていなかったためスキップされました。
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ERROR</term>
            <listitem>
              <para>
                エラーが発生しました。<systemitem>libpulp</systemitem>内部メッセージバッファを調べることにより、より多くの情報を取得できます。詳細については、<xref linkend="sec-ulp-internal-messages"/>を参照してください。
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>
          ワイルドカードを使用して複数のライブパッチを適用することもできます。次に例を示します。
        </para>
<screen><prompt>&gt; </prompt>ulp trigger '*.so'</screen>
        <para>
          このコマンドは、現在のフォルダ内のすべてのパッチを<systemitem>libpulp</systemitem>ライブラリがロードされているすべてのプロセスに適用しようとします。パッチは、プロセスに不適である場合、自動的にスキップされます。最後に、適用に成功したパッチ数および適用されたプロセス数がツールに表示されます。
        </para>
      </sect3>
      <sect3 xml:id="sec-ulp-revert-livepatch">
        <title>ライブパッチを元に戻す</title>
        <para>
          <command>ulp trigger</command>コマンドを使用してライブパッチを元に戻します。ライブパッチを元に戻すには、2つの方法があります。<option>--revert</option>スイッチを使用し、ライブパッチコンテナを渡すことで、ライブパッチを元に戻すことができます。
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> --revert <replaceable>LIVEPATCH</replaceable>.so</screen>
        <para>
          または、特定のライブラリに関連付けられているすべてのパッチを削除することもできます。次に例を示します。
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> --revert-all=<replaceable>LIBRARY</replaceable></screen>
        <para>
          この例では、<replaceable>LIBRARY</replaceable>は、<systemitem>libcrypto.so.1.1</systemitem>などの実際のライブラリを表します。
        </para>
        <para>
          後者の方法は、元のライブパッチのソースコードを利用できない場合に便利です。または、特定の古いパッチを削除し、新しいパッチを適用するが、同時にターゲットアプリケーションがセキュアコードの実行を継続する場合です。次に例を示します。
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable>  --revert-all=libcrypto.so.1.1 new_livepatch2.so</screen>
      </sect3>
      <sect3 xml:id="sec-ulp-verify-patches">
        <title>適用パッチの表示</title>
        <para>
          次を実行することによって、ライブパッチが適用されているアプリケーションを確認できます。
        </para>
<screen><prompt>&gt; </prompt>ulp patches</screen>
        <para>
          ライブパッチ可能なライブラリ、プログラムにロードされているパッチ、およびパッチが対処しているバグが出力に示されます。
        </para>
<screen>PID: 10636, name: test
  Livepatchable libraries:
    in /lib64/libc.so.6:
      livepatch: libc_livepatch1.so
        bug labels: jsc#SLE-0000
    in /usr/lib64/libpulp.so.0:</screen>
        <para>
          ライブパッチによってパッチされている機能を確認することも可能です。
        </para>
<screen><prompt>&gt; </prompt>ulp dump <replaceable>LIVEPATCH.so</replaceable></screen>
      </sect3>
      <sect3 xml:id="sec-ulp-internal-messages">
        <title>内部メッセージキューの表示</title>
        <para>
          <systemitem>libpulp.so</systemitem>からのログメッセージは、ライブラリ内のバッファに格納され、ユーザが要求しない限り表示されません。これらのメッセージを表示するには、次を実行します。
        </para>
<screen><prompt>&gt; </prompt>ulp messages -p <replaceable>PID</replaceable></screen>
      </sect3>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-ulp-info">
    <title>詳細情報</title>

    <para>
      <systemitem>libpulp</systemitem>に関する詳細については、プロジェクトの<link xlink:href="https://github.com/SUSE/libpulp">Git
      repository</link>を参照してください。
    </para>
  </sect1>
</chapter>
