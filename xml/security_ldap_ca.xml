<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<sect1 xmlns="http://docbook.org/ns/docbook"
       xmlns:xi="http://www.w3.org/2001/XInclude"
       xmlns:xlink="http://www.w3.org/1999/xlink"
       version="5.0"
       xml:id="sec-security-ldap-server-ca">
 <info>
  <title>Importing TLS server certificates and keys</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  You can manage your CA certificates and keys for &ds389; with the following
  command line tools: <command>certutil</command>, <command>openssl</command>, and
  <command>pk12util</command>.
 </para>
 <para>
  For testing purposes, you can use the self-signed certificate that
  <command>dscreate</command> creates when you create a new &ds389a;
  instance. Find the certificate at
  <filename>/etc/dirsrv/slapd-<replaceable>INSTANCE-NAME</replaceable>/ca.crt</filename>.
  </para>
  <para>
    For production environments, it is a best practice to use a third-party
    certificate authority, such as Let's Encrypt, CAcert.org, SSL.com, or
    whatever CA you choose. Request a server certificate, a client
    certificate, and a root certificate.
  </para>
 <procedure>
  <important>
  <para>
  The Mozilla NSS (Network Security Services ) toolkit uses nicknames for certificates in the certificate store.
  The server certificate uses the nickname <emphasis>Server-Cert</emphasis>.
  </para>
  </important>
 <step>
  <para>
   Use the following commands to remove the Self-Signed-CA and Server-Cert from the instance:
  </para>
<screen>&prompt.sudo;<command>dsctl <replaceable>INSTANCE_NAME</replaceable> tls remove-cert Self-Signed-CA</command>
&prompt.sudo;<command>dsctl <replaceable>INSTANCE_NAME</replaceable> tls remove-cert Server-Cert
</command>
</screen>

  <para>
   Replace <replaceable>INSTANCE_NAME</replaceable> with the instance name of the directory server.
   This is LDAP1 in the previous sections.
  </para>
 </step>
 <step>
   <para>
    Import the CA that has signed your certificate.
   </para>
   <screen>&prompt.sudo;<command>sudo dsctl <replaceable>INSTANCE_NAME</replaceable> tls import-ca
   /path/to/CA/in/PEM/format/CA.pem  <replaceable>NICKNAME_FOR_CA</replaceable>
</command>
</screen>
<para>Replace <literal>INSTANCE_NAME</literal> with the instance name of the directory server.
Replace <literal>/path/to/CA/in/PEM/format/CA.pem</literal> with the full path to the CA certificate file in the PEM format.
Replace <literal>NICKNAME_FOR_CA </literal> with a nickname for the CA. </para>
 </step>
 <step>
  <para>
   Import the server certificate and the key for the certificate.
  </para>
  <screen>&prompt.sudo;<command>dsctl <replaceable>INSTANCE_NAME</replaceable> tls import-server-key-cert
  <replaceable>/path/to/SERVER.pem</replaceable> <replaceable>/path/to/SERVER.key</replaceable></command>
  </screen>
  <para> Replace <literal>INSTANCE_NAME</literal> with the instance name of the directory server.
Replace <literal>/path/to/SERVER.pem</literal> with the full path to the server certificate in PEM format.
Replace <literal>/path/to/SERVER.key</literal> with the full path to the server certificate key file in the PEM format.
</para>
</step>
<step>
  <para>
   Restart the instance so that the new certificates are used.
  </para>
  <screen>&prompt.sudo;<command>systemctl restart dirsrv@<replaceable>INSTANCE-NAME.</replaceable>.service
</command> </screen>
<para>Replace  <literal>INSTANCE_NAME</literal> with the instance name of the directory server.</para>
</step>
 </procedure>
 </sect1>
