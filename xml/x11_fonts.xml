<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="sec.x11.fontsys">
 <title>Installing and Configuring Fonts</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <para>
  Fonts in Linux can be categorized into two parts:
 </para>

 <variablelist>
  <varlistentry>
   <term>Outline or Vector Fonts</term>
   <listitem>
    <para>
     Contains a mathematical description as drawing instructions about the
     shape of a glyph. As such, each glyph can be scaled to arbitrary sizes
     without loss of quality. Before such a font (or glyph) can be used, the
     mathematical descriptions need to be transformed into a raster (grid).
     This process is called <emphasis>font rasterization</emphasis>.
     <emphasis>Font hinting</emphasis> (embedded inside the font) improves and
     optimizes the rendering result for a particular size. Rasterization and
     hinting is done with the FreeType library.
    </para>
    <para>
     Common formats under Linux are PostScript Type 1 and Type 2, TrueType, and
     OpenType.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>Bitmap or Raster Fonts</term>
   <listitem>
    <para>
     Consists of an array of pixels designed for a specific font size. Bitmap
     fonts are extremely fast and simple to render. However, compared to vector
     fonts, bitmap fonts cannot be scaled without losing quality. As such,
     these fonts are usually distributed in different sizes. These days, bitmap
     fonts are still used in the Linux console and sometimes in terminals.
    </para>
    <para>
     Under Linux, Portable Compiled Format (PCF) or Glyph Bitmap Distribution
     Format (BDF) are the most common formats.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>

 <para>
  The appearance of these fonts can be influenced by two main aspects:
 </para>

 <itemizedlist mark="bullet" spacing="normal">
  <listitem>
   <para>
    choosing a suitable font family,
   </para>
  </listitem>
  <listitem>
   <para>
    rendering the font with an algorithm that achieves results comfortable for
    the receiver's eyes.
   </para>
  </listitem>
 </itemizedlist>

 <para>
  The last point is only relevant to vector fonts. Although the above two
  points are highly subjective, some defaults need to be created.
 </para>

 <para>
  Linux font rendering systems consist of several libraries with different
  relations. The basic font rendering library is
  <link xlink:href="http://www.freetype.org/">FreeType</link>, which converts
  font glyphs of supported formats into optimized bitmap glyphs. The rendering
  process is controlled by an algorithm and its parameters (which may be
  subject to patent issues).
 </para>

 <para>
  Every program or library which uses FreeType should consult the
  <link xlink:href="http://www.fontconfig.org/">Fontconfig</link> library. This
  library gathers font configuration from users and from the system. When a
  user amends his Fontconfig setting, this change will result in
  Fontconfig-aware applications.
 </para>

 <para>
  More sophisticated OpenType shaping needed for scripts such as Arabic, Han or
  Phags-Pa and other higher level text processing is done using
  <link xlink:href="http://www.harfbuzz.org/">Harfbuzz</link> or
  <link xlink:href="http://www.pango.org/">Pango</link>.
 </para>

 <sect2 xml:id="sec.x11.fontsys.showing.fonts">
  <title>Showing Installed Fonts</title>
  <para>
   To get an overview about which fonts are installed on your system, ask the
   commands <command>rpm</command> or <command>fc-list</command>. Both will
   give you a good answer, but may return a different list depending on system
   and user configuration:
  </para>
  <variablelist>
   <varlistentry>
    <term><command>rpm</command>
    </term>
    <listitem>
     <para>
      Invoke <command>rpm</command> to see which software packages containing
      fonts are installed on your system:
     </para>
<screen>rpm -qa '*fonts*'</screen>
     <para>
      Every font package should satisfy this expression. However, the command
      may return some false positives like <literal>fonts-config</literal>
      (which is neither a font nor does it contain fonts).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>fc-list</command>
    </term>
    <listitem>
     <para>
      Invoke <command>fc-list</command> to get an overview about what font
      families can be accessed, whether they are installed on the system or in
      your home:
     </para>
<screen>fc-list ':' family</screen>
     <note>
      <title>Command <command>fc-list</command></title>
      <para>
       The command <command>fc-list</command> is a wrapper to the Fontconfig
       library. It is possible to query a lot of interesting information from
       Fontconfig&mdash;or, to be more precise, from its cache. See
       <command>man 1 fc-list</command> for more details.
      </para>
     </note>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2 xml:id="sec.x11.fontsys.viewing">
  <title>Viewing Fonts</title>
  <para>
   If you want to know what an installed font family looks like, either use the
   command <command>ftview</command> (package
   <systemitem>ft2demos</systemitem>) or visit
   <link xlink:href="http://fontinfo.opensuse.org/"/>. For example, to display
   the FreeMono font in 14 point, use <command>ftview</command> like this:
  </para>
<screen>ftview 14 /usr/share/fonts/truetype/FreeMono.ttf</screen>
  <para>
   If you need further information, go to
   <link xlink:href="http://fontinfo.opensuse.org/"/> to find out which styles
   (regular, bold, italic, etc.) and languages are supported.
  </para>
 </sect2>

 <sect2 xml:id="sec.x11.fontsys.querying">
  <title>Querying Fonts</title>
  <para>
   To query which font is used when a pattern is given, use the
   <command>fc-match</command> command.
  </para>
  <para>
   For example, if your pattern contains an already installed font,
   <command>fc-match</command> returns the file name, font family, and the
   style:
  </para>
<screen>&prompt.user;fc-match 'Liberation Serif'
LiberationSerif-Regular.ttf: "Liberation Serif" "Regular"</screen>
  <para>
   If the desired font does not exist on your system, Fontconfig's matching
   rules take place and try to find the most similar fonts available. This
   means, your request is substituted:
  </para>
<screen>&prompt.user;fc-match 'Foo Family'
DejaVuSans.ttf: "DejaVu Sans" "Book"</screen>
  <para>
   Fontconfig supports <emphasis>aliases</emphasis>: a name is substituted with
   another family name. A typical example are the generic names such as
   <quote>sans-serif</quote>, <quote>serif</quote>, and
   <quote>monospace</quote>. These alias names can be substituted by real
   family names or even a preference list of family names:
  </para>
<screen>&prompt.user;for font in serif sans mono; do fc-match "$font" ; done
DejaVuSerif.ttf: "DejaVu Serif" "Book"
DejaVuSans.ttf: "DejaVu Sans" "Book"
DejaVuSansMono.ttf: "DejaVu Sans Mono" "Book"</screen>
  <para>
   The result may vary on your system, depending on which fonts are currently
   installed.
  </para>
  <note>
   <title>Similarity Rules according to Fontconfig</title>
   <para>
    Fontconfig <emphasis>always</emphasis> returns a real family (if at least
    one is installed) according to the given request, as similar as possible.
    <quote>Similarity</quote> depends on Fontconfig's internal metrics and on
    the user's or administrator's Fontconfig settings.
   </para>
  </note>
 </sect2>

 <sect2 xml:id="sec.x11.fontsys.install">
  <title>Installing Fonts</title>
  <para>
   To install a new font there are these major methods:
  </para>
  <orderedlist spacing="normal">
   <listitem>
    <para>
     Manually install the font files such as <filename>*.ttf</filename> or
     <filename>*.otf</filename> to a known font directory. If it needs to be
     system-wide, use the standard directory
     <filename>/usr/share/fonts</filename>. For installation in your home
     directory, use <filename>~/.config/fonts</filename>.
    </para>
    <para>
     If you want to deviate from the standard directories, Fontconfig allows
     you to choose another one. Let Fontconfig know by using the
     <literal>&lt;dir&gt;</literal> element, see
     <xref linkend="sec.x11.fontsys.config.fontconfig"/> for details.
    </para>
   </listitem>
   <listitem>
    <para>
     Install fonts using <command>zypper</command>. Lots of fonts are already
     available as a package, be it on your &suse; distribution or in the
     <link xlink:href="http://download.opensuse.org/repositories/M17N:/fonts/">M17N:fonts</link>
     repository. Add the repository to your list using the following command.
     For example, to add a repository for &slea; 12:
    </para>
<screen>sudo zypper ar
     <phrase
       os="sles;sled">http://download.opensuse.org/repositories/M17N:/fonts/SLE_12_SP3/</phrase><phrase
       os="osuse">http://download.opensuse.org/repositories/M17N:/fonts/openSUSE_Leap_42.3/</phrase></screen>
    <para>
     To search for your <replaceable>FONT_FAMILY_NAME</replaceable> use this
     command:
    </para>
<screen>sudo zypper se '<replaceable>FONT_FAMILY_NAME</replaceable>*fonts'</screen>
   </listitem>
<!-- Currently disabled -->
<!--<listitem>
       <para>Install fonts using the 1-click process, available at <ulink url="http://fontinfo.opensuse.org/"/>,
       section <quote>Software Package Information</quote>. It contains a font card (specimen). See also
       <xref linkend="sec.x11.fontsys.viewing"/>.</para>
       </listitem>-->
  </orderedlist>
 </sect2>

 <sect2 xml:id="sec.x11.fontsys.config">
  <title>Configuring the Appearance of Fonts</title>
  <para>
   Depending on the rendering medium, and font size, the result may be
   unsatisfactory. For example, an average monitor these days has a resolution
   of 100dpi which makes pixels too big and glyphs look clunky.
  </para>
  <para>
   There are several algorithms available to deal with low resolutions, such as
   anti-aliasing (grayscale smoothing), hinting (fitting to the grid), or
   subpixel rendering (tripling resolution in one direction). These algorithms
   can also differ from one font format to another.
  </para>
  <important>
   <title>Patent Issues with Subpixel Rendering</title>
   <para>
    Subpixel rendering is not used in &suse; distributions.
    Although FreeType2 has support for this algorithm, it is covered by several
    patents expiring at the end of the year 2019. Therefore, setting subpixel
    rendering options in Fontconfig has no effect unless the system has a
    FreeType2 library with subpixel rendering compiled in.
   </para>
  </important>
  <para>
   Via Fontconfig, it is possible to select a rendering algorithms for every
   font individually or for a set of fonts.
  </para>
  <sect3 xml:id="sec.x11.fontsys.config.sysconfig">
   <title>Configuring Fonts via <literal>sysconfig</literal></title>
   <para>
    &productname; comes with a <literal>sysconfig</literal> layer above
    Fontconfig. This is a good starting point for experimenting with font
    configuration. To change the default settings, edit the configuration file
    <filename>/etc/sysconfig/fonts-config</filename>. (or use the &yast;
    sysconfig module). After you have edited the file, run
    <command>fonts-config</command>:
   </para>
<screen>sudo /usr/sbin/fonts-config</screen>
   <para>
    Restart the application to make the effect visible. Keep in mind the
    following issues:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      A few applications do need not to be restarted. For example, Firefox
      re-reads Fontconfig configuration from time to time. Newly created or
      reloaded tabs get new font configurations later.
     </para>
    </listitem>
    <listitem>
     <para>
      The <command>fonts-config</command> script is called automatically after
      every package installation or removal (if not, it is a bug of the font
      software package).
     </para>
    </listitem>
    <listitem>
     <para>
      Every sysconfig variable can be temporarily overridden by the
      <command>fonts-config</command> command line option. See
      <command>fonts-config --help</command> for details.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    There are several sysconfig variables which can be altered. See
    <command>man 1 fonts-config</command> or the help page of the &yast;
    sysconfig module. The following variables are examples:
   </para>
   <variablelist>
    <varlistentry>
     <term>Usage of Rendering Algorithms</term>
     <listitem>
      <para>
       Consider <varname>FORCE_HINTSTYLE</varname>,
       <varname>FORCE_AUTOHINT</varname>, <varname>FORCE_BW</varname>,
       <varname>FORCE_BW_MONOSPACE</varname>,
       <varname>USE_EMBEDDED_BITMAPS</varname> and
       <varname>EMBEDDED_BITMAP_LANGAGES</varname>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Preference Lists of Generic Aliases</term>
     <listitem>
      <para>
       Use <varname>PREFER_SANS_FAMILIES</varname>,
       <varname>PREFER_SERIF_FAMILIES</varname>,
       <varname>PREFER_MONO_FAMILIES</varname> and
       <varname>SEARCH_METRIC_COMPATIBLE</varname>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    The following list provides some configuration examples, sorted from the
    <quote>most readable</quote> fonts (more contrast) to <quote>most
    beautiful</quote> (more smoothed).
   </para>
   <variablelist>
    <varlistentry xml:id="vle.x11.fontsys.sysconfig.bitmap">
     <term>Bitmap Fonts</term>
     <listitem>
      <para>
       Prefer bitmap fonts via the <varname>PREFER_*_FAMILIES</varname>
       variables. Follow the example in the help section for these variables.
       Be aware that these fonts are rendered black and white, not smoothed and
       that bitmap fonts are available in several sizes only. Consider using
      </para>
<screen>SEARCH_METRIC_COMPATIBLE="no"</screen>
      <para>
       to disable metric compatibility-driven family name substitutions.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="vle.x11.fontsys.sysconfig.bw">
     <term>Scalable Fonts Rendered Black and White</term>
     <listitem>
      <para>
       Scalable fonts rendered without antialiasing can result in a similar
       outcome to bitmap fonts, while maintaining font scalability. Use well
       hinted fonts like the Liberation families. Unfortunately, there is a
       lack of well hinted fonts though. Set the following variable to force
       this method:
      </para>
<screen>FORCE_BW="yes"</screen>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="vle.x11.fontsys.sysconfig.bw_monospace">
     <term>Monospaced Fonts Rendered Black and White</term>
     <listitem>
      <para>
       Render monospaced fonts without antialiasing only, otherwise use default
       settings:
      </para>
<screen>FORCE_BW_MONOSPACE="yes"</screen>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="vle.x11.fontsys.sysconfig.default">
     <term>Default Settings</term>
     <listitem>
      <para>
       All fonts are rendered with antialiasing. Well hinted fonts will be
       rendered with the <emphasis>byte code interpreter</emphasis> (BCI) and
       the rest with autohinter (<literal>hintstyle=hintslight</literal>).
       Leave all relevant sysconfig variables to the default setting.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="vle.x11.fontsys.sysconfig.cff">
     <term>CFF Fonts</term>
     <listitem>
      <para>
       Use fonts in CFF format. They can be considered also more readable than
       the default TrueType fonts given the current improvements in FreeType2.
       Try them out by following the example of
       <literal>PREFER_*_FAMILIES</literal>. Possibly make them more dark and
       bold with:
      </para>
<screen>SEARCH_METRIC_COMPATIBLE="no"</screen>
      <para>
       as they are rendered by <literal>hintstyle=hintslight</literal> by
       default. Also consider using:
      </para>
<screen>SEARCH_METRIC_COMPATIBLE="no"</screen>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ex.x11.fontsys.sysconfig.autohint">
     <term>Autohinter Exclusively</term>
     <listitem>
      <para>
       Even for a well hinted font, use FreeType2's autohinter. That can lead
       to thicker, sometimes fuzzier letter shapes with lower contrast. Set the
       following variable to activate this:
      </para>
<screen>FORCE_AUTOHINTER="yes"</screen>
      <para>
       Use <literal>FORCE_HINTSTYLE</literal> to control the level of hinting.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3 xml:id="sec.x11.fontsys.config.fontconfig">
   <title>Diving into Fontconfig XML</title>
   <para>
    Fontconfig's configuration format is the <emphasis>eXtensible Markup
    Language</emphasis> (XML). These few examples are not a complete reference,
    but a brief overview. Details and other inspiration can be found in
    <command>man 5 fonts-conf</command> or in
    <filename>/etc/fonts/conf.d/</filename>.
   </para>
   <para>
    The central Fontconfig configuration file is
    <filename>/etc/fonts/fonts.conf</filename>, which&mdash;along other
    work&mdash;includes the whole <filename>/etc/fonts/conf.d/</filename>
    directory. To customize Fontconfig, there are two places where you can
    insert your changes:
   </para>
   <orderedlist xml:id="ol.x11.fontsys.configfiles" spacing="normal">
    <title>Fontconfig Configuration Files</title>
    <listitem>
     <formalpara>
      <title>System-wide changes</title>
      <para>
       Edit the file <filename>/etc/fonts/local.conf</filename> (by default, it
       contains an empty <literal>fontconfig</literal> element).
      </para>
     </formalpara>
    </listitem>
    <listitem>
     <formalpara>
      <title>User-specific changes</title>
      <para>
       Edit the file <filename>~/.config/fontconfig/fonts.conf</filename>.
       Place Fontconfig configuration files in the
       <filename>~/.config/fontconfig/conf.d/</filename> directory.
      </para>
     </formalpara>
    </listitem>
   </orderedlist>
   <para>
    User-specific changes overwrite any system-wide settings.
   </para>
   <note>
    <title>Deprecated User Configuration File</title>
    <para>
     The file <filename>~/.fonts.conf</filename> is marked as deprecated and
     should not be used anymore. Use
     <filename>~/.config/fontconfig/fonts.conf</filename> instead.
    </para>
   </note>
   <para>
    Every configuration file needs to have a <literal>fontconfig</literal>
    element. As such, the minimal file looks like this:
   </para>
<screen>&lt;?xml version="1.0"?&gt;
   &lt;!DOCTYPE fontconfig SYSTEM "fonts.dtd"&gt;
   &lt;fontconfig&gt;
   &lt;!-- Insert your changes here --&gt;
   &lt;/fontconfig&gt;</screen>
   <para>
    If the default directories are not enough, insert the
    <literal>dir</literal> element with the respective directory:
   </para>
<screen>&lt;dir&gt;/usr/share/fonts2&lt;/dir&gt;</screen>
   <para>
    Fontconfig searches <emphasis>recursively</emphasis> for fonts.
   </para>
   <para>
    Font-rendering algorithms can be chosen with following Fontconfig snippet
    (see <xref linkend="ex.x11.fontsys.fontconfig.rendering_algorithms"/>):
   </para>
   <example xml:id="ex.x11.fontsys.fontconfig.rendering_algorithms">
    <title>Specifying Rendering Algorithms</title>
<screen>&lt;match target="font"&gt;
 &lt;test name="family"&gt;
  &lt;string&gt;<replaceable>FAMILY_NAME</replaceable>&lt;/string&gt;
 &lt;/test&gt;
 &lt;edit name="antialias" mode="assign"&gt;
  &lt;bool&gt;true&lt;/bool&gt;
 &lt;/edit&gt;
 &lt;edit name="hinting" mode="assign"&gt;
  &lt;bool&gt;true&lt;/bool&gt;
 &lt;/edit&gt;
 &lt;edit name="autohint" mode="assign"&gt;
  &lt;bool&gt;false&lt;/bool&gt;
 &lt;/edit&gt;
 &lt;edit name="hintstyle" mode="assign"&gt;
  &lt;const&gt;hintfull&lt;/const&gt;
 &lt;/edit&gt;
&lt;/match&gt;</screen>
   </example>
   <para>
    Various properties of fonts can be tested. For example, the
    <literal>&lt;test&gt;</literal> element can test for the font family (as
    shown in the example), size interval, spacing, font format, and others.
    When abandoning <literal>&lt;test&gt;</literal> completely, all
    <literal>&lt;edit&gt;</literal> elements will be applied to every font
    (global change).
   </para>
   <example xml:id="ex.x11.fontsys.fontconfig.aliases1">
    <title>Aliases and Family Name Substitutions</title>
    <variablelist>
     <varlistentry xml:id="vle.x11.fontsys.example.alias.default">
      <term>Rule 1</term>
      <listitem>
<screen>&lt;alias&gt;
 &lt;family&gt;Alegreya SC&lt;/family&gt;
 &lt;default&gt;
  &lt;family&gt;serif&lt;/family&gt;
 &lt;/default&gt;
&lt;/alias&gt;</screen>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vle.x11.fontsys.example.alias.prefer">
      <term>Rule 2</term>
      <listitem>
<screen>&lt;alias&gt;
 &lt;family&gt;serif&lt;/family&gt;
 &lt;prefer&gt;
  &lt;family&gt;Droid Serif&lt;/family&gt;
 &lt;/prefer&gt;
&lt;/alias&gt;</screen>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vle.x11.fontsys.example.alias.accept">
      <term>Rule 3</term>
      <listitem>
<screen>&lt;alias&gt;
 &lt;family&gt;serif&lt;/family&gt;
 &lt;accept&gt;
  &lt;family&gt;STIXGeneral&lt;/family&gt;
 &lt;/accept&gt;
&lt;/alias&gt;</screen>
      </listitem>
     </varlistentry>
    </variablelist>
   </example>
   <para>
    The rules from <xref linkend="ex.x11.fontsys.fontconfig.aliases1"/> create
    a <emphasis>prioritized family list</emphasis> (PFL). Depending on the
    element, different actions are performed:
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>&lt;default&gt;</literal> from
     <xref linkend="vle.x11.fontsys.example.alias.default"/>
     </term>
     <listitem>
      <para>
       This rule adds a <literal>serif</literal> family name <emphasis>at the
       end</emphasis> of the PFL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>&lt;prefer&gt;</literal> from
     <xref linkend="vle.x11.fontsys.example.alias.prefer"/>
     </term>
     <listitem>
      <para>
       This rule adds <quote>Droid Serif</quote> <emphasis>just
       before</emphasis> the first occurrence of <literal>serif</literal> in
       the PFL, whenever <literal>Alegreya SC</literal> is in PFL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>&lt;accept&gt;</literal> from <xref linkend="vle.x11.fontsys.example.alias.accept"/>
     </term>
     <listitem>
      <para>
       This rule adds a <quote>STIXGeneral</quote> family name <emphasis>just
       after</emphasis> the first occurrence of the <literal>serif</literal>
       family name in the PFL.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    Putting this together, when snippets occur in the order
    <xref linkend="vle.x11.fontsys.example.alias.default"/> -
    <xref linkend="vle.x11.fontsys.example.alias.prefer"/> -
    <xref linkend="vle.x11.fontsys.example.alias.accept"/> and the user
    requests <quote>Alegreya SC</quote>, then the PFL is created as depicted in
    <xref linkend="tab.x11.fontsys.example.alias"/>.
   </para>
   <table xml:id="tab.x11.fontsys.example.alias">
    <title>Generating PFL from Fontconfig rules</title>
    <tgroup cols="2">
     <colspec colwidth="1*"/>
     <colspec colwidth="3*"/>
     <thead>
      <row>
       <entry>
        <para>
         Order
        </para>
       </entry>
       <entry>
        <para>
         Current PFL
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         Request
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <xref linkend="vle.x11.fontsys.example.alias.default"/>
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>, <literal>serif</literal>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <xref linkend="vle.x11.fontsys.example.alias.prefer"/>
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>, <literal>Droid Serif</literal>,
         <literal>serif</literal>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <xref linkend="vle.x11.fontsys.example.alias.accept"/>
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>, <literal>Droid Serif</literal>,
         <literal>serif</literal>, <literal>STIXGeneral</literal>
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <para>
    In Fontconfig's metrics, the family name has the highest priority over
    other patterns, like style, size, etc. Fontconfig checks which family is
    currently installed on the system. If <quote>Alegreya SC</quote> is
    installed, then Fontconfig returns it. If not, it asks for <quote>Droid
    Serif</quote>, etc.
   </para>
   <para>
    Be careful. When the order of Fontconfig snippets is changed, Fontconfig
    can return different results, as depicted in
    <xref linkend="tab.x11.fontsys.example.alias2"/>.
   </para>
   <table xml:id="tab.x11.fontsys.example.alias2">
    <title>Results from Generating PFL from Fontconfig Rules with Changed Order</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>
        <para>
         Order
        </para>
       </entry>
       <entry>
        <para>
         Current PFL
        </para>
       </entry>
       <entry>
        <para>
         Note
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         Request
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>
        </para>
       </entry>
       <entry>
        <para>
         Same request performed.
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <xref linkend="vle.x11.fontsys.example.alias.prefer"/>
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>
        </para>
       </entry>
       <entry>
        <para>
         <literal>serif</literal> not in PFL, nothing is substituted
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <xref linkend="vle.x11.fontsys.example.alias.accept"/>
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>
        </para>
       </entry>
       <entry>
        <para>
         <literal>serif</literal> not in PFL, nothing is substituted
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <xref linkend="vle.x11.fontsys.example.alias.default"/>
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>, <literal>serif</literal>
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal> present in PFL, substitution is
         performed
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <note>
    <title>Implication</title>
    <para>
     Think of the <literal>&lt;default&gt;</literal> alias as a classification
     or inclusion of this group (if not installed). As the example shows,
     <literal>&lt;default&gt;</literal> should always precede the
     <literal>&lt;prefer&gt;</literal> and <literal>&lt;accept&gt;</literal>
     aliases of that group.
    </para>
    <para>
     <literal>&lt;default&gt;</literal> classification is not limited to the
     generic aliases serif, sans-serif and monospace. See
     <filename>/usr/share/fontconfig/conf.avail/30-metric-aliases.conf</filename>
     for a complex example.
    </para>
<!-- Commented out as this  -->
<!--<para>
        We can also think about Fontconfig alias system as of oriented graph.
        <literal>&lt;default></literal> alias creates edges from specific
        families (here <literal>Alegreya SC</literal>) to generic names
        (here <literal>serif</literal>), whereas
        <literal>&lt;prefer></literal> and <literal>&lt;accept></literal>
        aliases create edges from generics (here <literal>serif</literal>)
        to specifics (here <literal>Droid Serif</literal> and
        <literal>STIXGeneral</literal>).
        </para>-->
   </note>
   <para>
    The following Fontconfig snippet in
    <xref linkend="ex.x11.fontsys.fontconfig.aliases2"/> creates a
    <literal>serif</literal> group. Every family in this group could substitute
    others when a former font is not installed.
   </para>
   <example xml:id="ex.x11.fontsys.fontconfig.aliases2">
    <title>Aliases and Family Name Substitutions</title>
<screen>&lt;alias&gt;
 &lt;family&gt;Alegreya SC&lt;/family&gt;
 &lt;default&gt;
  &lt;family&gt;serif&lt;/family&gt;
 &lt;/default&gt;
&lt;/alias&gt;
&lt;alias&gt;
 &lt;family&gt;Droid Serif&lt;/family&gt;
 &lt;default&gt;
  &lt;family&gt;serif&lt;/family&gt;
 &lt;/default&gt;
&lt;/alias&gt;
&lt;alias&gt;
 &lt;family&gt;STIXGeneral&lt;/family&gt;
 &lt;default&gt;
  &lt;family&gt;serif&lt;/family&gt;
 &lt;/default&gt;
&lt;/alias&gt;
&lt;alias&gt;
 &lt;family&gt;serif&lt;/family&gt;
 &lt;accept&gt;
  &lt;family&gt;Droid Serif&lt;/family&gt;
  &lt;family&gt;STIXGeneral&lt;/family&gt;
  &lt;family&gt;Alegreya SC&lt;/family&gt;
 &lt;/accept&gt;
&lt;/alias&gt;</screen>
   </example>
   <para>
    Priority is given by the order in the <literal>&lt;accept&gt;</literal>
    alias. Similarly, stronger <literal>&lt;prefer&gt;</literal> aliases can be
    used.
   </para>
   <para>
    <xref linkend="ex.x11.fontsys.fontconfig.aliases1"/> is expanded by
    <xref linkend="ex.x11.fontsys.fontconfig.aliases3"/>.
   </para>
   <example xml:id="ex.x11.fontsys.fontconfig.aliases3">
    <title>Aliases and Family Names Substitutions</title>
    <variablelist>
     <varlistentry xml:id="vle.x11.fontsys.example.alias.accept2">
      <term>Rule 4</term>
      <listitem>
<screen>&lt;alias&gt;
 &lt;family&gt;serif&lt;/family&gt;
 &lt;accept&gt;
  &lt;family&gt;Liberation Serif&lt;/family&gt;
 &lt;/accept&gt;
&lt;/alias&gt;</screen>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vle.x11.fontsys.example.alias.prefer2">
      <term>Rule 5</term>
      <listitem>
<screen>&lt;alias&gt;
 &lt;family&gt;serif&lt;/family&gt;
 &lt;prefer&gt;
  &lt;family&gt;DejaVu Serif&lt;/family&gt;
 &lt;/prefer&gt;
&lt;/alias&gt;</screen>
      </listitem>
     </varlistentry>
    </variablelist>
   </example>
   <para>
    The expanded configuration from
    <xref linkend="ex.x11.fontsys.fontconfig.aliases3"/> would lead to the
    following PFL evolution:
   </para>
   <table xml:id="tab.x11.fontsys.example.alias3">
    <title>Results from Generating PFL from Fontconfig Rules</title>
    <tgroup cols="2">
     <colspec colwidth="1*"/>
     <colspec colwidth="3*"/>
     <thead>
      <row>
       <entry>
        <para>
         Order
        </para>
       </entry>
       <entry>
        <para>
         Current PFL
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         Request
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <xref linkend="vle.x11.fontsys.example.alias.default"/>
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>, <literal>serif</literal>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <xref linkend="vle.x11.fontsys.example.alias.prefer"/>
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>, <literal>Droid Serif</literal>,
         <literal>serif</literal>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <xref linkend="vle.x11.fontsys.example.alias.accept"/>
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>, <literal>Droid Serif</literal>,
         <literal>serif</literal>, <literal>STIXGeneral</literal>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <xref linkend="vle.x11.fontsys.example.alias.accept2"/>
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>, <literal>Droid Serif</literal>,
         <literal>serif</literal>, <literal>Liberation Serif</literal>,
         <literal>STIXGeneral</literal>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <xref linkend="vle.x11.fontsys.example.alias.prefer2"/>
        </para>
       </entry>
       <entry>
        <para>
         <literal>Alegreya SC</literal>, <literal>Droid Serif</literal>,
         <literal>DejaVu Serif</literal>, <literal>serif</literal>,
         <literal>Liberation Serif</literal>, <literal>STIXGeneral</literal>
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <note>
    <title>Implications.</title>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       In case multiple <literal>&lt;accept&gt;</literal> declarations for the
       same generic name exist, the declaration that is parsed last
       <quote>wins</quote>. If possible, do not use
       <literal>&lt;accept&gt;</literal> <emphasis role="bold">after</emphasis>
       user (<filename>/etc/fonts/conf.d/*-user.conf</filename>) when creating
       a system-wide configuration.
      </para>
     </listitem>
     <listitem>
      <para>
       In case multiple <literal>&lt;prefer</literal> declarations for the same
       generic name exist, the declaration that is parsed last
       <quote>wins</quote>. If possible, do not use
       <literal>&lt;prefer&gt;</literal>
       <emphasis role="bold">before</emphasis> user in the system-wide
       configuration.
      </para>
     </listitem>
     <listitem>
      <para>
       Every <literal>&lt;prefer&gt;</literal> declaration overwrites
       <literal>&lt;accept&gt;</literal> declarations for the same generic
       name. If the administrator wants to allow the user to utilize even
       <literal>&lt;accept&gt;</literal> and not only
       <literal>&lt;prefer&gt;</literal>,the administrator should not use
       <literal>&lt;prefer&gt;</literal> in the system-wide configuration. On
       the other hand, as users mostly use <literal>&lt;prefer&gt;</literal>,
       this should not have any detrimental effect. We also see the use of
       <literal>&lt;prefer&gt;</literal> also in system wide configurations.
      </para>
     </listitem>
    </itemizedlist>
   </note>
  </sect3>
 </sect2>
</sect1>
