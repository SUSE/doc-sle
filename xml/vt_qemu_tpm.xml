<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="tpm">
  <title>Software TPM emulator</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker></dm:bugtracker>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>
  <sect1 xml:id="tpm-introduction">
    <title>Introduction</title>

    <para>
      The Trusted Platform Module (TPM) is a cryptoprocessor that secures
      hardware using cryptographic keys. For developers who use the TPM to
      develop security features, a software TPM emulator is a convenient
      solution. Compared to a hardware TPM device, the emulator has no limit on
      the number of guests that can access it. Also, it is simple to switch
      between TPM versions 1.2 and 2.0. &qemu; supports the software TPM
      emulator that is included in the <package>swtpm</package> package.
    </para>
  </sect1>
  <sect1 xml:id="tpm-prerequisite">
    <title>Prerequisites</title>

    <para>
      Before you can install and use the software TPM emulator, you need to
      install the &libvirt; virtualization environment. Refer to
      <xref
    linkend="install-virtualization-components"/> and install one
      of the provided virtualization solutions.
    </para>
  </sect1>
  <sect1 xml:id="tpm-installation">
    <title>Installation</title>

    <para>
      To use the software TPM emulator, install the <package>swtpm</package>
      package:
    </para>

<screen>&prompt.sudo;zypper install swtpm</screen>
  </sect1>
  <sect1 xml:id="tpm-qemu">
    <title>Using <command>swtpm</command> with &qemu;</title>

    <para>
      <command>swtpm</command> provides three types of interface:
      <literal>socket</literal>, <literal>chardev</literal>, and
      <literal>cuse</literal>. This procedure focuses on the
      <emphasis>socket</emphasis> interface.
    </para>

    <procedure>
      <step>
        <para>
          Create a directory <filename>mytpm0</filename> inside the VM
          directory to store the TPM states&mdash;for example,
          <filename>/var/lib/libvirt/qemu/sle15sp3</filename>:
        </para>
<screen>&prompt.sudo;mkdir /var/lib/libvirt/qemu/sle15sp3/mytpm0</screen>
      </step>
      <step>
        <para>
          Start <command>swtmp</command>. It creates a socket file that &qemu;
          can use&mdash;for example,
          <filename>/var/lib/libvirt/qemu/sle15sp3</filename>:
        </para>
<screen>
 &prompt.sudo;swtpm socket
  --tpmstate dir=/var/lib/libvirt/qemu/sle15sp3/mytpm0 \
  --ctrl type=unixio,path=/var/lib/libvirt/qemu/sle15sp3/mytpm0/swtpm-sock \
  --log level=20
 </screen>
        <tip>
          <title>TPM version 2.0</title>
          <para>
            By default, <command>swtpm</command> starts a TPM version 1.2
            emulator and stores its states in the
            <filename>tpm-00.permall</filename> directory. To create a TPM 2.0
            instance, run:
          </para>
<screen>
 &prompt.sudo;swtpm socket
  --tpm2
  --tpmstate dir=/var/lib/libvirt/qemu/sle15sp3/mytpm0 \
  --ctrl type=unixio,path=/var/lib/libvirt/qemu/sle15sp3/mytpm0/swtpm-sock \
  --log level=20
 </screen>
          <para>
            TPM 2.0 states are stored in the
            <filename>tpm2-00.permall</filename> directory.
          </para>
        </tip>
      </step>
      <step>
        <para>
          Add the following command line parameters to the &qemusystemarch;
          command:
        </para>
<screen>
&prompt.user;qemu-system-x86_64 \
[...]
-chardev socket,id=chrtpm,path=/var/lib/libvirt/qemu/sle15sp3/mytpm0/swtpm-sock \
-tpmdev emulator,id=tpm0,chardev=chrtpm \
-device tpm-tis,tpmdev=tpm0
</screen>
      </step>
      <step>
        <para>
          Verify that the TPM device is available in the guest by running the
          following command:
        </para>
<screen>&prompt.user;tpm_version
TPM 1.2 Version Info:
Chip Version:        1.2.18.158
Spec Level:          2
Errata Revision:     3
TPM Vendor ID:       IBM
TPM Version:         01010000
Manufacturer Info:   49424d00
</screen>
      </step>
    </procedure>
  </sect1>
  <sect1 xml:id="tpm-libvirt">
    <title>Using swtpm with &libvirt;</title>

    <para>
      To use swtpm with &libvirt;, add the following TPM device to the guest
      XML specification:
    </para>

<screen>
&lt;devices>
 &lt;tpm model='tpm-tis'>
  &lt;backend type='emulator' version='2.0'/>
 &lt;/tpm>
&lt;/devices>
</screen>

    <para>
      &libvirt; starts swtpm for the guest automatically. You do not need to
      start it manually in advance. The corresponding
      <filename>permall</filename> file is created in
      <filename>/var/lib/libvirt/swtpm/<replaceable>VM_UUID</replaceable></filename>.
    </para>
  </sect1>
  <sect1 xml:id="tpm-ovmf">
    <title>TPM measurement with OVMF firmware</title>

    <para>
      If the guest uses the Open Virtual Machine Firmware (OVMF), it measures
      components with TPM. You can find the event log in
      <filename>/sys/kernel/security/tpm0/binary_bios_measurements</filename>.
    </para>
  </sect1>
  <sect1 xml:id="qemu-tpm-resources">
    <title>Resources</title>

    <itemizedlist>
      <listitem>
        <para>
          Wikipedia offers a thorough description of the TPM at the page
          <link xlink:href="https://en.wikipedia.org/wiki/Trusted_Platform_Module"/>.
        </para>
      </listitem>
      <listitem>
        <para>
          Configuring a specific virtualization environment on &productname; is
          described in <xref linkend="cha-vt-installation"/>.
        </para>
      </listitem>
      <listitem>
        <para>
          Details on the use of <package>swtpm</package> are on its manual page
          (<command>man 8 swtpm</command>).
        </para>
      </listitem>
      <listitem>
        <para>
          A detailed &libvirt; specification of TPM is at
          <link xlink:href="https://libvirt.org/formatdomain.html#elementsTpm"/>
        </para>
      </listitem>
      <listitem>
        <para>
          A description of enabling UEFI firmware by using OVMF is at
          <xref linkend="sec-vt-installation-ovmf"/>.
        </para>
      </listitem>
    </itemizedlist>
  </sect1>
</chapter>
