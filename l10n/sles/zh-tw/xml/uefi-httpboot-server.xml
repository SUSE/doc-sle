<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="uefi-httpboot-server.xml" version="5.0" xml:id="cha-deployment-prep-uefi-httpboot">
 <title>設定 UEFI HTTP 開機伺服器</title>
 <info>
  <abstract>
   <para>
    本章介紹如何設定和組態 UEFI HTTP 開機伺服器。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>是</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="httpboot-intro">
  <title>簡介</title>

  <para>
   HTTP 開機結合了 DHCP、DNS 和 HTTP，可讓您透過網路開機和部署系統。HTTP 開機可做為 PXE 的高效能替代功能。HTTP 開機允許透過 HTTP 從 URI 將伺服器開機，從而可從本地網路外部的伺服器快速傳輸大型檔案，例如 Linux 核心和根檔案系統。
  </para>

  <sect2 xml:id="httpboot-client">
   <title>設定用戶端機器</title>
   <para>
    依據您的特定硬體，在實體用戶端機器上啟用 HTTP 開機。如需關於如何在特定機器上啟用 HTTP 開機的更多資訊，請參閱相關文件。
   </para>
  </sect2>

  <sect2 xml:id="httpboot-preparation">
   <title>準備</title>
   <para>
    例如，此處所述的設定使用 192.168.111.0/24 (IPv4) 和 2001:db8:f00f:cafe::/64 (IPv6) IP 子網路，伺服器 IP 位址為 192.168.111.1(IPv4) 和 2001:db8:f00f:cafe::1/64 (IPv6)。請依據您的特定設定調整這些值。
   </para>
   <para>
    在您打算做為 HTTP 開機伺服器的機器上安裝以下套件： <package>dhcp-server</package>、
    <package>apache2</package> (或 <package>lighttpd</package>) 與
    <package>dnsmasq</package>。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="httpboot-configure-server">
  <title>設定伺服器</title>

  <sect2 xml:id="httpboot-dns-server">
   <title>DNS 伺服器</title>
   <para>
    雖然設定 DNS 伺服器是選擇性步驟，但這可讓您為 HTTP 開機伺服器指定一個使用者易記的名稱。若要設定 DNS 伺服器，請新增以下內容至 <filename>/etc/dnsmasq.conf</filename> 檔案：
   </para>
<screen>interface=eth0
addn-hosts=/etc/dnsmasq.d/hosts.conf</screen>
   <para>
    為 <filename>/etc/dnsmasq.d/hosts.conf</filename> 檔案中的 IP 位址指定網域名稱：
   </para>
<screen>192.168.111.1 www.httpboot.local
2001:db8:f00f:cafe::1 www.httpboot.local</screen>
   <para>
    啟動 DNS 伺服器。
   </para>
<screen>systemctl start dnsmasq</screen>
   <note>
    <title>使用 <phrase role="productname">shim</phrase> 開機載入程式</title>
    <para>
     由於 UEFI 2.7 中的某個變更，我們建議使用 SLE 15 或更新版本中的 shim 開機載入程式，以避免該附加 DNS 節點可能導致的錯誤。
    </para>
   </note>
   <sect3 xml:id="httpboot-dhcpv4-server">
    <title>設定 DHCPv4 伺服器</title>
    <para>
     設定 DHCP 伺服器之前，需在 <filename>/etc/sysconfig/dhcpd</filename> 中指定伺服器的網路介面：
    </para>
<screen>DHCPD_INTERFACE="eth0"
DHCPD6_INTERFACE="eth0"</screen>
    <para>
     這樣一來，DHCP 伺服器就只會在 <literal>eth0</literal> 介面上提供服務。
    </para>
    <para>
     若要設定同時用於 PXE 開機和 HTTP 開機的 DHCPv4 伺服器，請將以下組態新增至 <filename>/etc/dhcpd.conf</filename> 檔案：
    </para>
<screen>option domain-name-servers 192.168.111.1;
option routers 192.168.111.1;
default-lease-time 14400;
ddns-update-style none;
  subnet 192.168.111.0 netmask 255.255.255.0 {
    range dynamic-bootp 192.168.111.100 192.168.111.120;
    default-lease-time 14400;
    max-lease-time 172800;
    class "pxeclients"{
      match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
      next-server 192.168.111.1;
      filename "/bootx64.efi";
    }
    class "httpclients" {
      match if substring (option vendor-class-identifier, 0, 10) = "HTTPClient";
      option vendor-class-identifier "HTTPClient";
      filename "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi";
    }
}</screen>
    <para>
     請注意，DHCPv4 伺服器必須使用 <literal>HTTPClient</literal> 參數來表示廠商類別 ID，因為用戶端使用該參數來識別 HTTP 開機服務。
    </para>
    <para>
     啟動 DHCP 精靈：
    </para>
    <para>
     <literal>systemctl start dhcpd</literal>
    </para>
   </sect3>
   <sect3 xml:id="httpboot-dhcpv6-server">
    <title>設定 DHCPv6 伺服器</title>
    <para>
     若要設定 DHCPv6 伺服器，請新增以下組態至 <filename>/etc/dhcpd6.conf</filename>：
    </para>
<screen>option dhcp6.bootfile-url code 59 = string;
option dhcp6.vendor-class code 16 = {integer 32, integer 16, string};
subnet6 2001:db8:f00f:cafe::/64 {
        range6 2001:db8:f00f:cafe::42:10 2001:db8:f00f:cafe::42:99;
        option dhcp6.bootfile-url "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi";
        option dhcp6.name-servers 2001:db8:f00f:cafe::1;
        option dhcp6.vendor-class 0 10 "HTTPClient";
}</screen>
    <para>
     此組態定義開機 URL 的類型、廠商類別和其他必需的選項。與 DHCPv4 設定類似，需要提供開機 URL，該 URL 必須包含 IPv6 位址。還需要指定廠商類別選項。在 DHCPv6 中，它由企業編號和廠商類別資料 (長度和內容) 組成。由於 HTTP 開機驅動程式會忽略企業編號，因此可將其設為 <literal>0</literal>。廠商類別資料的內容必須是 <literal>HTTPClient</literal>；否則，用戶端將會忽略該服務。
    </para>
    <para>
     較舊的 HTTP 開機實作不遵循 <link xlink:href="https://tools.ietf.org/html/rfc3315">RFC 3315</link>，需要使用不同的組態：
    </para>
<screen>option dhcp6.bootfile-url code 59 = string;
option dhcp6.vendor-class code 16 = string;
        subnet6 2001:db8:f00f:cafe::/64 {
        range6 2001:db8:f00f:cafe::42:10 2001:db8:f00f:cafe::42:99;
        option dhcp6.bootfile-url "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi;
	option dhcp6.name-servers 2001:db8:f00f:cafe::1;
	option dhcp6.vendor-class "HTTPClient";
}</screen>
    <para>
     啟動 <literal>dhcpv6</literal> 精靈。
    </para>
<screen>systemctl start dhcpd6</screen>
    <sect4 xml:id="httpboot-dhcpv6-pxe-server">
     <title>設定同時用於 PXE 開機和 HTTP 開機的 DHCPv6 伺服器</title>
     <para>
      使用以下組態可以設定同時用於 PXE 開機和 HTTP 開機的 DHCPv6 伺服器：
     </para>
<screen>option dhcp6.bootfile-url code 59 = string;
option dhcp6.vendor-class code 16 = {integer 32, integer 16, string};

subnet6 2001:db8:f00f:cafe::/64 {
        range6 2001:db8:f00f:cafe::42:10 2001:db8:f00f:cafe::42:99;

        class "PXEClient" {
	        match substring (option dhcp6.vendor-class, 6, 9);
	}

        subclass "PXEClient" "PXEClient" {
	        option dhcp6.bootfile-url "tftp://[2001:db8:f00f:cafe::1]/bootloader.efi";
	}

	class "HTTPClient"; {
	        match substring (option dhcp6.vendor-class, 6, 10);
	}

	subclass "HTTPClient" "HTTPClient" {
	        option dhcp6.bootfile-url "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi";
		option dhcp6.name-servers 2001:db8:f00f:cafe::1;
		option dhcp6.vendor-class 0 10 "HTTPClient";
	}
}</screen>
     <para>
      您也可以依如下所示將廠商類別與特定架構進行比對：
     </para>
<screen>class "HTTPClient" {
        match substring (option dhcp6.vendor-class, 6, 21);
	}

subclass "HTTPClient" "HTTPClient":Arch:00016 {
        option dhcp6.bootfile-url "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi";
	option dhcp6.name-servers 2001:db8:f00f:cafe::1;
	option dhcp6.vendor-class 0 10 "HTTPClient";
}</screen>
     <para>
      在此範例中，<literal>HTTPClient:Arch:00016</literal> 表示 AMD64/Intel 64 HTTP 開機用戶端。此組態允許伺服器同時為不同的架構提供服務。
     </para>
    </sect4>
    <sect4 xml:id="httpboot-firewall">
     <title>設定防火牆</title>
     <para>
      如果防火牆中的 RP 過濾器丟棄了 DHCPv6 封包，請檢查其記錄。如果記錄中包含 <literal>rpfilter_DROP</literal> 項目，請在 <filename>/etc/firewalld/firewalld.conf</filename> 中使用以下組態停用該過濾器：
     </para>
     <para>
      <literal>IPv6_rpfilter=no</literal>
     </para>
    </sect4>
   </sect3>
   <sect3 xml:id="httpboot-tftp-server">
    <title>部署 TFTP 伺服器 (選擇性)</title>
    <para>
     若要同時為 PXE 開機和 HTTP 開機提供支援，請部署 TFTP 伺服器。安裝 <package>tftp</package> 並啟動服務：
    </para>
<screen> systemctl start tftp.socket
systemctl start tftp.service</screen>
    <para>
     還需要安裝用於 PXE 開機的特定
     <package>tftpboot-installation</package> 套件。執行 <command>zypper se tftpboot</command> 指令以列出可用的 <package>tftp-installation</package> 套件，然後安裝所需系統版本和架構的套件，例如
     <package>tftpboot-installation-SLE-15-SP3-x86_64</package> 例如，
     <package os="sles;sled">tftpboot-installation-SLE-<replaceable>VERSION</replaceable>-x86_64</package>
     (以實際版本取代 <replaceable>VERSION</replaceable>)。將 <filename os="sles;sled">SLE-<replaceable>VERSION</replaceable>-x86_64</filename> 目錄的內容複製到 TFTP 伺服器的根目錄中：
    </para>


    <para>
     如需詳細資訊，請參閱 <filename os="sles;sled">/usr/share/tftpboot-installation/SLE-<replaceable>VERSION</replaceable>-x86_64/README</filename>
    </para>
   </sect3>
   <sect3 xml:id="httpboot-http-server">
    <title>設定 HTTP 伺服器</title>
    <para>
     將第一個系統 ISO 影像的所有內容複製到 <filename os="sles;sled">/srv/www/htdocs/sle/</filename> 目錄中。然後編輯 <filename os="sles;sled">/srv/www/htdocs/sle/grub.cfg</filename> 檔案。使用下面的範例做為參考：
    </para>
<screen>timeout=60
default=1

menuentry 'Installation IPv4' --class opensuse --class gnu-linux --class gnu --class os {
    set gfxpayload=keep
    echo 'Loading kernel ...'
    linuxefi /sle/boot/x86_64/loader/linux install=http://www.httpboot.local/sle
    echo 'Loading initial ramdisk ...'
    initrdefi /sle/boot/x86_64/loader/initrd
}

menuentry 'Installation IPv6' --class opensuse --class gnu-linux --class gnu --class os {
    set gfxpayload=keep
    echo 'Loading kernel ...'
    linuxefi /sle/boot/x86_64/loader/linux install=install=http://www.httpboot.local/sle ipv6only=1 ifcfg=*=dhcp6,DHCLIENT6_MODE=managed
    echo 'Loading initial ramdisk ...'
    initrdefi /sle/boot/x86_64/loader/initrd
}</screen>
    <sect4 xml:id="httpboot-lighttpd">
     <title>設定 lighttpd</title>
     <para>
      若要在 lighttpd 中同時啟用 IPv4 和 IPv6 支援，請依以下所示修改 <filename>/etc/lighttpd/lighttpd.conf</filename>：
     </para>
<screen>##
## Use IPv6?
##
#server.use-ipv6 = "enable"
$SERVER["socket"] == "[::]:80" {  }</screen>
     <para>
      啟動 <literal>lighttpd</literal> 精靈：
     </para>
<screen>systemctl start lighttpd</screen>
    </sect4>
    <sect4 xml:id="httpboot-apache2">
     <title>設定 apache2</title>
     <para>
      Apache 不需要額外的組態。啟動 <literal>apache2</literal> 精靈：
     </para>
<screen>systemctl start apache2</screen>
    </sect4>
   </sect3>
   <sect3 xml:id="httpboot-http-server-ssl-support">
    <title>為 HTTP 伺服器啟用 SSL 支援 (選擇性)</title>
    <para>
     若要使用 HTTPS 開機，您需要將現有伺服器證書轉換為 <literal>DER</literal> 格式，並將其註冊到用戶端韌體中。
    </para>
    <para>
     假設您的伺服器上已安裝證書，請使用以下指令將其轉換為 <literal>DER</literal> 格式，以用於用戶端：
    </para>
<screen>openssl x509 -in <replaceable>CERTIFICATE</replaceable>.crt -outform der -out <replaceable>CERTIFICATE</replaceable>.der</screen>
    <sect4 xml:id="httpboot-enroll-certificate-physical-machine">
     <title>將伺服器證書註冊到用戶端韌體中</title>
     <para>
      註冊已轉換證書的確切程序取決於用戶端韌體的具體實作。對於某些硬體，您需要使用包含證書的外部儲存裝置，透過韌體 UI 以手動方式註冊證書。支援 Redfish 的機器可以從遠端註冊證書。如需註冊證書的詳細資訊，請參閱特定硬體的相應文件。
     </para>
    </sect4>
    <sect4 xml:id="httpboot-ssl-lighttpd">
     <title>在 lighttpd 中啟用 SSL 支援</title>
     <para>
      由於 lighttpd 需要私密金鑰和證書儲存在同一個檔案中，請使用以下指令整合這些資料：
     </para>
<screen>cat <replaceable>CERTIFICATE</replaceable>.crt server.key &gt; <replaceable>CERTIFICATE</replaceable>.pem</screen>
     <para>
      將 <filename><replaceable>CERTIFICATE</replaceable>.pem</filename> 複製到 <filename>/etc/ssl/private/</filename> 目錄中。
     </para>
<screen>cp server-almighty.pem /etc/ssl/private/
chown -R root:lighttpd /etc/ssl/private/server-almighty.pem
chmod 640 /etc/ssl/private/server-almighty.pem</screen>
     <para>
      確定 <literal>mod_openssl</literal> 列在 <filename>/etc/lighttpd/modules.conf</filename> 檔案的 <literal>server.modules</literal> 部分，例如：
     </para>
<screen>server.modules = (
  "mod_access",
  "mod_openssl",
)</screen>
     <para>
      將下面幾行新增至 <filename>/etc/lighttpd/lighttpd.conf</filename> 中的 <literal>SSL Support</literal> 部分：
     </para>
<screen># IPv4
$SERVER["socket"] == ":443" {
    ssl.engine                 = "enable"
    ssl.pemfile                = "/etc/ssl/private/server-almighty.pem"
}
# IPv6
$SERVER["socket"] == "[::]:443" {
    ssl.engine                 = "enable"
    ssl.pemfile                = "/etc/ssl/private/server-almighty.pem"
}</screen>
     <para>
      重新啟動 lighttpd 以啟用 SSL 支援：
     </para>
<screen>systemctl restart lighttpd</screen>
    </sect4>
    <sect4 xml:id="http-ssl-apache">
     <title>在 Apache 中啟用 SSL 支援</title>
     <para>
      開啟 <filename>/etc/sysconfig/apache2</filename> 檔案，並依如下所示新增 SSL 旗標：
     </para>
<screen>APACHE_SERVER_FLAGS="SSL"</screen>
     <para>
      請確定 <literal>ssl</literal> 模組列在 <literal>APACHE_MODULES</literal> 中，例如：
     </para>
     <para>
      接下來，將私密金鑰和證書複製到 <filename>/etc/apache2/</filename> 目錄中。
     </para>
<screen>cp server.key /etc/apache2/ssl.key/
chown wwwrun /etc/apache2/ssl.key/server.key
chmod 600 /etc/apache2/ssl.key/server.key
cp server.crt /etc/apache2/ssl.crt/</screen>
     <para>
      建立 ssl vhost 組態。
     </para>
<screen>cd /etc/apache2/vhosts.d
cp vhost-ssl.template vhost-ssl.conf</screen>
     <para>
      編輯 <filename>/etc/apache2/vhosts.d/vhost-ssl.conf</filename> 以變更私密金鑰和證書：
     </para>
<screen>SSLCertificateFile /etc/apache2/ssl.crt/server.crt
 SSLCertificateKeyFile /etc/apache2/ssl.key/server.key</screen>
     <para>
      重新啟動 apache 以啟用 SSL 支援：
     </para>
<screen>systemctl restart apache2</screen>
    </sect4>
    <sect4 xml:id="httpboot-modify-dhcp-configuration">
     <title>修改 DHCP 組態</title>
     <para>
      在 <filename>dhcpd.conf/dhcpd6.conf</filename> 中，以 <literal>https://</literal> 取代 <literal>http://</literal> 字首，然後重新啟動 DHCP 伺服器。
     </para>
<screen>systemctl restart dhcpd
systemctl restart dhcpd6</screen>
    </sect4>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="httpboot-client-boot">
  <title>透過 HTTP 開機將用戶端開機</title>

  <para>
   如果韌體已支援 HTTP 開機，請插入電纜並選擇正確的開機選項。
  </para>
 </sect1>
</chapter>
