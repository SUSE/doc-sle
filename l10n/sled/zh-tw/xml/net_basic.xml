<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="net_basic.xml" version="5.0" xml:id="cha-network"> <title>基本網路知識</title>
 <info>
      <abstract>
        <para>
    Linux 提供所有必要的網路工具及功能，以整合到所有類型的網路結構。可以透過 YaST 設定使用網路卡進行的網路存取。也可使用手動方式來設定組態。本章僅討論基本機制及相關的網路組態檔案。
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker/>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <para>
  Linux 及其他 Unix 作業系統使用 TCP/IP 通訊協定。它不是單一網路通訊協定，而是能夠提供各種服務的網路通訊協定家族的一員。<xref linkend="tab-net-basic-tcpproto"/>中所列的通訊協定用於透過 TCP/IP 在兩部機器之間交換資料。由 TCP/IP 組合而成的各個網路形成了一個跨國網路，也稱為<quote>網際網路</quote>。
 </para>
 <para>
  RFC 代表<emphasis>要求建議</emphasis> (Request for Comments)。RFC 是描述作業系統及其應用程式的各種網際網路通訊協定和執行程序的文件。RFC 文件描述網際網路通訊協定的設定。如需有關 RFC 的詳細資訊，請參閱 <link xlink:href="http://www.ietf.org/rfc.html"/>。
 </para>
 <variablelist xml:id="tab-net-basic-tcpproto">
  <title>TCP/IP 通訊協定系列中的數種通訊協定</title>
  <varlistentry>
   <term>TCP</term>
   <listitem>
    <para>
     傳輸控制通訊協定：連接導向的安全通訊協定。傳輸的資料首先由應用程式當做資料流傳送出去，然後再由作業系統轉換為適當格式。資料送達目的地主機的相關應用程式時，使用的仍是最初傳送的原始資料流格式。TCP 可以判斷在傳輸期間是否有遺失或打亂了任何資料。只要是資料順序很重要的地方，就會執行 TCP。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>UDP</term>
   <listitem>
    <para>
     使用者資料包通訊協定：無連接、不安全的通訊協定。要傳送的資料以應用程式產生的封包形式加以傳送。不會保證資料抵達接收者時的順序，而且可能會發生資料遺失的情況。UDP 適用以記錄為導向的應用程式。它的特點是延遲時間比 TCP 短。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>ICMP</term>
   <listitem>
    <para>
     網際網路控制訊息通訊協定：這不是用於最終使用者的通訊協定，而是用來發出錯誤報告的特殊控制通訊協定，能夠控制參與 TCP/IP 資料傳輸的機器的行為。此外，它還提供特殊的回音模式，可以使用 ping 程式檢視。
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>IGMP</term>
   <listitem>
    <para>
     網際網路群組管理通訊協定：此通訊協定在實做 IP 多點廣播時控制機器行為。
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 <para>
  如 <xref linkend="fig-net-basic-OSI"/> 中所顯示，資料交換發生在不同層。實際的網路層是透過 IP (網際網路通訊協定，Internet Protocol) 進行不安全的資料傳輸。在 IP 的上方，TCP (傳輸控制通訊協定，Transmission Control Protocol) 可以保證資料傳輸某種程度的安全性。IP 層由基礎硬體相依通訊協定提供支援，例如乙太網路。
 </para>
 <figure xml:id="fig-net-basic-OSI">
  <title>TCP/IP 的簡化層模型</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata width="100%" fileref="net_basic_osi.svg" format="SVG"/>
   </imageobject>
   <imageobject role="html">
    <imagedata width="75%" fileref="net_basic_osi.png" format="PNG"/>
   </imageobject>
  </mediaobject>
 </figure>
 <para>
  圖表提供每層的一或兩個範例。層的順序是依據<emphasis>抽象階層 (abstraction level)</emphasis>。最低層非常靠近硬體。不過，最上層對硬體而言幾乎是完全抽象的。每層都有自己的特殊功能。這些特殊功能通常隱含於其描述中。資料連結層及實體層代表所使用的實體網路 (例如乙太網路)。
 </para>
 <para>
  幾乎所有的硬體通訊協定都是採用封包導向模式。要傳輸的資料會收集在<emphasis>封包</emphasis>中 (無法一次全部傳送)。TCP/IP 封包的大小上限約為 64 KB。由於網路硬體可能有所限制，因此封包一般都很小。乙太網路上資料封包的大小上限約為 1500 個位元組。在乙太網路上傳送資料時，TCP/IP 封包的大小受此數量限制。如果傳送更多資料，則需要由作業系統傳送更多資料封包。
 </para>
 <para>
  因為每層有自己指定的功能，關於每層的其他資訊必須儲存於資料封包中。這些資訊放在封包的「<emphasis>標頭</emphasis>」中。每層皆在產生的封包前端附加小的資料區塊，稱為通訊協定標頭。有關在乙太網路纜線上傳送的 TCP/IP 資料封包範例，請參閱<xref linkend="fig-net-basic-TCPPaket"/>中的說明。proof sum 位於封包結尾，不在開頭處。這樣可幫助網路硬體簡化程序。
 </para>
 <figure xml:id="fig-net-basic-TCPPaket">
  <title>TCP/IP 乙太網路封包</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata width="80%" fileref="net_basic_tcppacket.svg" format="SVG"/>
   </imageobject>
   <imageobject role="html">
    <imagedata width="75%" fileref="net_basic_tcppacket.png" format="PNG"/>
   </imageobject>
  </mediaobject>
 </figure>
 <para>
  當應用程式在網路上傳送資料時，資料會經過每一層，除實體層外，全部在 Linux 核心執行。每層都負責準備資料使其能夠傳送到下一層。最底層最後要負責傳送資料。接收到資料時則反轉執行整個程序。就如同洋蔥的層級一般，在每層中，會從已傳輸的資料上移除通訊協定標頭。最後，傳輸層負責讓目的地端的應用程式可以使用資料。以這種方式，每層僅直接與上下兩層通訊。對於應用程式而言，資料是透過無線連接還是有線連接傳輸都無關緊要。同樣地，對於資料線而言，只要封包的格式正確，無論傳送的是哪種類型的資料也是無關的。
 </para>
 <sect1 xml:id="sec-network-addresses">
  <title>IP 位址和路由</title>

  <para>
   在此節中的討論僅限於 IPv4 網路。如需有關 IPv6 通訊協定 (IPv4 的後繼者) 的資訊，請參閱<xref linkend="sec-network-ipv6"/>。
  </para>

  <sect2 xml:id="sec-network-addresses-ip">
   <title>IP 位址</title>
   <para>
    網際網路上的每台電腦都有唯一的 32 位元位址。這些 32 位元 (或 4 位元組) 通常按<xref linkend="aus-net-basic-ipaddress"/>中第二列所述寫入。
   </para>
   <example xml:id="aus-net-basic-ipaddress">
    <title>撰寫 IP 位址</title>
<screen>IP Address (binary):  11000000 10101000 00000000 00010100
IP Address (decimal):      192.     168.       0.      20</screen>
   </example>
   <para>
    採用十進位格式，四位元組以十進位數字系統撰寫，以句號分隔。IP 位址是指定給主機或網路介面。每個 IP 位址在全球範圍內只能使用一次。此規則有例外狀況，但下文中並未提及。
   </para>
   <para>
    IP 位址中的點表示階層系統。直到 1990 年代，IP 位址仍嚴格地以類別加以分類。然而，事實證明此系統太過死板，因此已停止使用。現在，則是使用<emphasis>無類別路由 (classless routing)</emphasis>，即 CIDR (無類別網域間路由，classless interdomain routing)。
   </para>
  </sect2>

  <sect2 xml:id="sec-network-addresses-route">
   <title>網路遮罩和路由</title>
   <para>
    網路遮罩用於定義子網路的位址範圍。如果兩台主機位於相同的子網路內，它們之間可直接連接。如果它們不在同一個子網路內，則需要用於處理子網路所有流量之閘道的位址。若要檢查兩個 IP 位址是否位於同一子網路，只要使用網路遮罩 <quote>AND</quote> 兩個位址。如果結果相同，兩個 IP 位址位於同一個網路。如果不同，遠端的 IP 位址，即為遠端介面，只能透過閘道來通訊。
   </para>
   <para>
    若要瞭解網路遮罩如何作用，請參閱<xref linkend="tab-net-basic-netmask"/>。網路遮罩由 32 位元組成，可辨認 IP 位址有多少屬於網路。這些位元為 <literal>1</literal> 標示 IP 位址中的對應位元，即表示為同屬一個網路。對於所有值為 <literal>0</literal> 的位元，標示其屬於子網路內。這表示愈多位元為 <literal>1</literal>，子網路就愈小。因為網路遮罩永遠由多個連續的 <literal>1</literal> 位元組成，也可以計算網路遮罩內的位元數。在<xref linkend="tab-net-basic-netmask"/>中，第一個 24 位元的網路也可寫成 <literal>192.168.0.0/24</literal>。
   </para>
   <example xml:id="tab-net-basic-netmask">
    <title>將 IP 位址連結到網路遮罩</title>
<screen>IP address (192.168.0.20):  11000000 10101000 00000000 00010100
Netmask   (255.255.255.0):  11111111 11111111 11111111 00000000
---------------------------------------------------------------
Result of the link:         11000000 10101000 00000000 00000000
In the decimal system:           192.     168.       0.       0

IP address (213.95.15.200): 11010101 10111111 00001111 11001000
Netmask    (255.255.255.0): 11111111 11111111 11111111 00000000
---------------------------------------------------------------
Result of the link:         11010101 10111111 00001111 00000000
In the decimal system:           213.      95.      15.       0</screen>
   </example>
   <para>
    舉另外一個例子：使用相同乙太網路纜線連接的所有機器，通常位於同一個子網路中，而且可以直接存取。即使以交換器或橋接器實際分配子網路時，仍然可以直接連接這些主機。
   </para>
   <para>
    位於本地子網路外的 IP 位址只能在設定目標網路的閘道時，才能與本地通訊。在大部分的狀況下，只能有一個閘道來處理所有對外的通訊。但是，您也可以為不同的子網路，設定多個閘道。
   </para>
   <para>
    如果已經設定閘道，所有的外部 IP 封包會傳送到適當的閘道。然後此閘道會試圖以同樣方式傳送封包--主機對主機--直到連結到目標主機或封包 TTL (持續時間) 過期。
   </para>
   <variablelist xml:id="net-basic-spezial-net">
    <title>特定位址</title>
    <varlistentry>
     <term>
      基本網路位址
     </term>
     <listitem>
      <para>
       這是網路遮罩「及」網路中的任何位址，如 <literal>Result</literal> 下的<xref linkend="tab-net-basic-netmask"/> 所顯示。此位址不能指定給任何主機。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      廣播位址
     </term>
     <listitem>
      <para>
       這可以解釋為：<quote>存取此子網路中的所有主機。</quote>。若要產生此位址，網路遮罩會以二進位格式反轉，連結到具有邏輯 OR 的基本網路位址。因此以上範例會得到 192.168.0.255。此位址無法指派給任何主機。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      本地主機
     </term>
     <listitem>
      <para>
       位址 <systemitem class="ipaddress">127.0.0.1</systemitem> 是指定到每個主機上的「<quote>迴路裝置</quote>」(loopback device)。使用此位址以及完整迴路網路 <systemitem class="ipaddress">127.0.0.0/8</systemitem> 中的所有位址 (使用 IPv4 定義)，可以設定與您自己機器之間的連接。如果使用 IPv6，則只有一個迴路位址 (<systemitem class="ipaddress">::1</systemitem>)。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    因為 IP 位址在全世界必須是唯一的，您不能選取隨機位址。如果要設立私人 IP 結構的網路，有三種位址網域可以使用。這些將無法從其他網際網路取得連結，因為他們無法透過網路傳送。這些位址網域在 RFC 1597 指定並列於 <xref linkend="tab-net-basic-privat-net"/> 中。
   </para>
   <table xml:id="tab-net-basic-privat-net">
    <title>私人 IP 位址網域</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>
        <para>
         網路/網路遮罩
        </para>
       </entry>
       <entry>
        <para>
         領域
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         <systemitem class="ipaddress">10.0.0.0</systemitem>/<systemitem class="netmask">255.0.0.0</systemitem>
        </para>
       </entry>
       <entry>
        <para>
         <systemitem class="ipaddress">10.x.x.x</systemitem>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <systemitem class="ipaddress">172.16.0.0</systemitem>/<systemitem class="netmask">255.240.0.0</systemitem>
        </para>
       </entry>
       <entry>
        <para>
         <systemitem class="ipaddress">172.16.x.x</systemitem> – <systemitem class="ipaddress">172.31.x.x</systemitem>
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <systemitem class="ipaddress">192.168.0.0</systemitem>/<systemitem class="netmask">255.255.0.0</systemitem>
        </para>
       </entry>
       <entry>
        <para>
         <systemitem class="ipaddress">192.168.x.x</systemitem>
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-network-ipv6">
  <title>IPv6 - 新一代網際網路</title>

  

  <para>
   由於全球資訊網 (WWW) 的出現，過去十五年內，越來越多的電腦透過 TCP/IP 進行通訊，網際網路的規模發生了爆炸性的增長。自從 CERN 的 Tim Berners-Lee (<link xlink:href="http://public.web.cern.ch"/>) 於 1990 年發明 WWW 以來，網際網路主機的數量從幾千台成長為幾百萬台。
  </para>

  <para>
   如前面所述，IPv4 位址僅由 32 個位元組成。而且，損失了一些 IP 位址 — 由於組織網路的方式，使得這些 IP 位址無法使用。您的子網路中可用的位址數量是位元數的平方減 2。例如，子網路有 2 個、6 個或 14 個位址可用。例如，如果要連接 128 個主機到網際網路，則子網路需要 256 個 IP 位址，但是其中只有 254 個可用，因為子網路結構本身需要用掉兩個 IP 位址：廣播與基本網路位址。
  </para>

  <para>
   在目前的 IPv4 通訊協定之下，DHCP 或 NAT (網路位址轉譯，Network Address Translation) 是典型的機制，可用來避免位址可能不足的問題。搭配保持私人和公用位址空間分開的方式，能夠減輕短少的情形。其中產生的問題是在於其組態，設定麻煩且難於維護。若要在 IPv4 網路中設定主機，需要一些位址項目，如主機自己的 IP 位址、子網路遮罩、閘道位址，可能還需要名稱伺服器位址。您必須知道所有這些項目，且無法從其他地方取得。
  </para>

  <para>
   透過 IPv6，位址短少及繁複組態的情形應該都成為過去式了。以下小節說明更多 IPv6 改善的部分及它帶來的好處，還有關於從舊通訊協定轉移到新通訊協定的資訊。
  </para>

  <sect2 xml:id="sec-network-ipv6-adv">
   <title>優點</title>
   <para>
    新通訊協定帶來的最為重要同時也最為顯著的改進是極大地擴充了可用的位址空間。IPv6 位址是由 128 個位元值組成，而不是傳統的 32 個位元。這樣提供了數以千兆的 IP 位址。
   </para>
   <para>
    然而，IPv6 位址不僅是在長度方面與之前的位址不同；這些位置的內部結構也不同，可能包含有關系統及其所屬網路的更明確資訊。有關 IPv6 的詳細資訊，可以在 <xref linkend="sec-network-ipv6-address"/> 中找到。
   </para>
   <para>
    以下列出了新通訊協定的其他優點：
   </para>
   <variablelist>
    <varlistentry>
     <term>自動設定</term>
     <listitem>
      <para>
       IPv6 讓網路能夠「<quote>隨插即用</quote>」(plug and play)，表示新設定的系統不需經過任何手動設定，即可整合到 (區域) 網路。新主機使用其自動設定組態機制，從鄰近的路由器上可用的資訊取得自己的位址，依賴的是稱為「<emphasis>網路芳鄰探查</emphasis>」(Neighbor Discovery，ND) 的通訊協定。這個方法不需要管理員的介入，而且不需要維護分配位址的中央伺服器，這是 IPv4 的另一個優勢，因為自動位址分配需要 DHCP 伺服器。
      </para>
      <para>
       但是，如果路由器連接到交換器，則路由器應傳送具有旗標的週期性通告，告知網路中的主機彼此如何進行互動。如需詳細資訊，請參閱 RFC 2462、<systemitem>radvd.conf(5)</systemitem> man 頁面以及 RFC 3315。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>機動性</term>
     <listitem>
      <para>
       IPv6 能夠同時將數個位址指定給一個網路介面。這樣使用者能夠輕鬆存取多個網路，如同使用行動電話企業提供的國際漫遊服務一般輕鬆自如。當您帶著行動電話出國時，電話只要進入通訊區域就會自動登入國外的服務，這樣無論您身處何地，用同一個號碼都可以聯絡到您，而且您也能像在國內一樣撥打電話。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>安全通訊</term>
     <listitem>
      <para>
       使用 IPv4，網路安全性是附加的功能。IPv6 包括 IPSec 為其中一個核心功能，允許系統在安全的通道上進行通訊，避免網際網路上的外人竊聽。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>反向相容性</term>
     <listitem>
      <para>
       實際上，不可能一次將整個網際網路從 IPv4 切換到 IPv6。因此關鍵在於，兩個通訊協定不僅能夠共存於網際網路上，而且能夠共存於一個系統中。使用相容位址 (IPv4 位址可以輕鬆轉換為 IPv6 位址) 和多個通道可以確保這一點。請參閱<xref linkend="sec-network-ipv6-coexist"/>。另外，系統可以仰賴「<emphasis>雙重堆疊 IP</emphasis>」(Dual Stack IP) 技術，同時支援這兩種通訊協定，這表示系統有兩個完全分開的網路堆疊，如此一來，兩種通訊協定版本不會相互干擾。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>透過多路廣播自訂量身訂做的服務</term>
     <listitem>
      <para>
       利用 IPv4，有些服務 (如 SMB) 需要廣播它們的封包到區域網路上的所有主機。IPv6 使伺服器能夠透過<emphasis>多點傳播</emphasis>對主機定址 (即將多個主機做為群組的一部分定址)，因而提供了更精細的方法。這種方法與透過<emphasis>廣播</emphasis>對所有主機定址，或透過<emphasis>單點傳播</emphasis>個別對每個主機定址均不同。定址為群組的主機，取決於具體的應用程式。例如，有些預先定義的群組可以定址所有名稱伺服器 (「<emphasis>所有名稱伺服器多點傳播群組</emphasis>」) 或所有路由器 (「<emphasis>所有路由器多點傳播群組</emphasis>」)。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-network-ipv6-address">
   <title>位址類型和結構</title>
   <para>
    如上所述，目前的 IP 通訊協定存在兩個重要限制：IP 位址日益短缺，並且設定網路、維護路由表的任務變得越來越複雜繁重。IPv6 透過擴充位址空間到 128 個位元解決了第一個問題。透過引入階層位址結構，結合尖端網路位址配置技術及<emphasis>多重定址</emphasis>功能 (將數個位址指定給同一個裝置，進而支援對多個網路的存取)，第二個問題也得到緩解。
   </para>
   <para>
    使用 IPv6 時，瞭解三種不同類型的位址是很有用的：
   </para>
   <variablelist>
    <varlistentry>
     <term>單點傳播</term>
     <listitem>
      <para>
       這類位址恰好與一個網路介面有關聯。這類位址的封包僅傳送到一個目的地。因此，單點廣播位址用來傳送封包到區域網路或網際網路上的個別主機。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>多點傳播</term>
     <listitem>
      <para>
       這類位址與一組網路介面有關聯。這類位址的封包會傳送到屬於該組的所有目的地。多點傳播位址主要由特定網路服務使用，可直接與特定主機群組通訊。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>任點廣播 (Anycast)</term>
     <listitem>
      <para>
       這類位址與一組介面有關聯。這類位址的封包會根據基礎路由通訊協定的原則，傳送到最靠近傳送者的群組成員。使用任點廣播位址，讓主機更易於找出在指定網路區域中提供特定服務的伺服器。相同類型的所有伺服器擁有一樣的任點廣播位址。只要主機要求服務，它會從最靠近位置的伺服器接收回覆，由路由通訊協定決定。如果此伺服器因為某種原因失敗，通訊協定會自動選取第二個最靠近的伺服器，或是選取第三個伺服器，依此類推。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    IPv6 位址由八個四位數欄位組成，每個都代表 16 個位元，以十六進位標記法寫入。位址與位址之間以冒號 (<literal>:</literal>) 分隔。指定欄位內的任何前導零位元組可以刪除，但是欄位內或尾端的零不能刪除。另一個慣例是多於四個連續的零位元組可能會摺疊成兩個冒號。然而，每個位址只允許一個 <literal>::</literal>。這類的簡略的標記法，顯示於<xref linkend="aus-netz-ipv6-add"/> 中，其中三行都是代表相同的位址。
   </para>
   <example xml:id="aus-netz-ipv6-add">
    <title>範例 IPv6 位址</title>
<screen>fe80 : 0000 : 0000 : 0000 : 0000 : 10 : 1000 : 1a4
fe80 :    0 :    0 :    0 :    0 : 10 : 1000 : 1a4
fe80 :                           : 10 : 1000 : 1a4</screen>
   </example>
   <para>
    IPv6 位址的每個部分都有定義的功能。第一個位元組形成字首，指定位址類型。中間的部分是位址的網路部分，但是可能不會使用。位址的尾端形成主機部分。透過 IPv6，在位址尾端的斜線後表示字首的長度，可以定義網路遮罩。位址如 <xref linkend="aus-netz-ipv6-addpre"/> 中所示，包含的資訊是形成位址網路部分的前 64 個位元以及形成其主機部分的最後 64 個位元。換句話說，<literal>64</literal> 表示網路遮罩從左邊開始填入 64 個 1 位元值。就像 IPv4 一樣，IP 位址使用 AND 結合網路遮罩的值，判斷主機是否位於相同的子網路或在另一個子網路。
   </para>
   <example xml:id="aus-netz-ipv6-addpre">
    <title>指定字首長度的 IPv6 位址</title>
<screen>fe80::10:1000:1a4/64</screen>
   </example>
   <para>
    IPv6 知道關於數個字首的預定類型。<xref linkend="list-net-basic-ipv6-prefix"/>中列出了其中的一部分。
   </para>
   <variablelist xml:id="list-net-basic-ipv6-prefix">
    <title>各種 IPv6 字首</title>
    <varlistentry>
     <term><systemitem class="ipaddress">00</systemitem>
     </term>
     <listitem>
      <para>
       IPv4 位址與透過 IPv6 的 IPv4 相容位址。這些位址用來維護與 IPv4 的相容性。其使用仍然要求路由器能夠轉譯 IPv6 封包為 IPv4 封包。數個特殊的位址，如迴路裝置的位址，也有此字首。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><systemitem class="ipaddress">2</systemitem> 或 <systemitem class="ipaddress">3</systemitem> 做為第一個數字
     </term>
     <listitem>
      <para>
       可彙總的全域單點廣播位址。類似 IPv4，可以指定介面來構成特定子網路的部分。目前有下列位址空間：<systemitem class="ipaddress">2001::/16</systemitem> (產品品質位址空間) 與 <systemitem class="ipaddress">2002::/16</systemitem> (6to4 位址空間)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><systemitem class="ipaddress">fe80::/10</systemitem>
     </term>
     <listitem>
      <para>
       連結本地位址。不應路由具有這種字首的位址，因此僅能從相同的子網路內進行連接。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><systemitem class="ipaddress">fec0::/10</systemitem>
     </term>
     <listitem>
      <para>
       本地網站位址。這些位址可以傳送，但是僅能在所屬組織的網路內傳送。事實上，它們等同於目前私人網路位址空間的 IPv6 (例如，<systemitem class="ipaddress">10.x.x.x</systemitem>)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><systemitem class="ipaddress">ff</systemitem>
     </term>
     <listitem>
      <para>
       這些都是多點傳播位址。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    單點廣播位址由三個基本元件組成：
   </para>
   <variablelist>
    <varlistentry>
     <term>公用拓撲</term>
     <listitem>
      <para>
       第一個部分 (也包含上述的其中一種字首) 用來透過公用網際網路傳送封包。它包含了有關提供網際網路存取的公司或機構資訊。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>站點拓樸</term>
     <listitem>
      <para>
       第二個部分包含有關傳送封包的目的地子網路的路由資訊。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>介面識別碼 (Interface ID)</term>
     <listitem>
      <para>
       第三個部分識別傳送封包的介面。它也允許 MAC 形成部分的位址。這個前提是 MAC 在全球是唯一的，由硬體廠商在裝置中編碼固定識別碼，可相當程度地簡化組態程序。事實上，結合前 64 個位址位元形成 <literal>EUI-64</literal> 記號，加上從 MAC 取得的最後 48 個位元，而其餘的 24 個位元則包含有關記號類型的特殊資訊。如此一來，就可以給沒有 MAC 的介面指定 <literal>EUI-64</literal> 記號，例如以 PPP 為基礎的介面。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    在此基本結構的最上層，IPv6 會分辨五種不同類型的單點廣播位址：
   </para>
   <variablelist>
    <varlistentry>
     <term><systemitem class="ipaddress">::</systemitem> (未指定的) </term>
     <listitem>
      <para>
       在首次啟始化介面時 (此時尚無法透過其他方法確定位址)，主機會使用此位址做為其來源位址。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><systemitem class="ipaddress">::1</systemitem> (迴路) </term>
     <listitem>
      <para>
       迴路裝置的位址。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>IPv4 相容位址</term>
     <listitem>
      <para>
       IPv6 位址是由 IPv4 位址以及由 96 個零位元組成的字首形成的。這類相容性位址用於通道 (請參閱<xref linkend="sec-network-ipv6-coexist"/>)，允許 IPv4 與 IPv6 主機在純 IPv4 環境中彼此通訊。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>對應至 IPv6 的 IPv4 位址</term>
     <listitem>
      <para>
       這類位址以 IPv6 標記法指定純 IPv4 位址。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>本地位址</term>
     <listitem>
      <para>
       有兩種位址類型用於本地：
      </para>
      <variablelist>
       <varlistentry>
        <term>連結本地</term>
        <listitem>
         <para>
          這類位址僅能用於本地子網路。不應將此類型之來源位址或目標位址的封包路由到網際網路或其他子網路。這些位址包含特殊字首 (<systemitem class="ipaddress">fe80::/10</systemitem>) 以及網路卡的介面識別碼，加上由空位元組所組成的中間部分。自動設定組態以便與屬於相同子網路中的其他主機通訊時，會使用這類位址。
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>網站本地</term>
        <listitem>
         <para>
          具有這種位址的封包可以路由到其他子網路，但是不能路由到更寬廣的網際網路 — 不得跨越組織內部網路。這類位址用於內部網路，而且等同於 IPv4 所定義的私人位址空間。它們包含特殊字首 (<systemitem class="ipaddress">fec0::/10</systemitem>)、介面 ID 以及指定子網路 ID 的 16 位元欄位。同樣地，餘下的將填入零位元組。
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    因為引入了 IPv6 這種全新的功能，所以每個網路介面通常會取得數個 IP 位址，其優點是可透過相同介面存取數個網路。其中一個網路可以使用 MAC 和已知的字首以完全自動化的方式設定，在啟用 IPv6 (使用連結本地位址) 後可以連接區域網路上的所有主機。利用形成位址部分的 MAC，全球使用的任何 IP 位址都成為唯一的。位址的唯一變數部分，是指定<emphasis>網站拓撲</emphasis>和<emphasis>公用拓撲</emphasis>，該部分視主機目前正在操作的實際網路而定。
   </para>
   <para>
    如果主機要在不同的網路之間往返，至少需要兩個位址。其中一個，即<emphasis>主位址</emphasis>，不僅包含了介面識別碼，也包含了其通常所屬之主網路 (及其對應字首) 的識別碼。主位址是靜態位址，因此它通常不會變更。儘管如此，預定要送到行動主機的所有封包，還是可以傳送到主位址，無論是在主網路或其他外部網路中操作。這可藉由 IPv6 全新功能來達成，如「<emphasis>無狀態自動設定</emphasis>」與「<emphasis>網路芳鄰探查</emphasis>」。除了其主位址外，行動主機也取得一或多個其他的位址，這些位址屬於漫遊的外部網路。這些外部網路稱為 <emphasis>care-of</emphasis> 位址。主網路具有封包在外部漫遊時轉寄預定要送到主機的裝置。在 IPv6 環境中，這個任務是由<emphasis>主代理程式</emphasis>執行的，它會取得所有預定要送到主位址的封包，透過通道轉送它們。另一方面，預定送到 care-of 位址的封包會直接傳送到行動主機，不會特別繞行。
   </para>
  </sect2>

  <sect2 xml:id="sec-network-ipv6-coexist">
   <title>IPv4 與 IPv6 的共存</title>
   <para>
    連接網際網路的所有主機從 IPv4 轉移到 IPv6 是一種漸進程序。這兩種通訊協定某些時候會共存。在一個系統上共存，可保證執行兩種通訊協定的「<emphasis>雙重堆疊</emphasis>」。但這仍然沒有解決啟用了 IPv6 的主機如何與 IPv4 主機通訊，以及應如何透過目前的網路 (絕大部分都以 IPv4 為基礎) 傳輸 IPv6 封包的問題。最佳的解決方案是提供通道及相容性位址 (請參閱<xref linkend="sec-network-ipv6-address"/>)。
   </para>
   <para>
    IPv6 主機或多或少孤立於 (全球) IPv4 網路間，可透過通道通訊：IPv6 封包會被包成 IPv4 封包，在 IPv4 網路中移動。兩個 IPv4 主機之間的連接，稱為「<emphasis>通道</emphasis>」。為實現此功能，封包必須包含 IPv6 目的地位址 (或對應字首) 以及通道接收端上遠端主機的 IPv4 位址。基本通道可以根據主機管理員之間的協議「手動」設定；這也稱為「<emphasis>靜態通道</emphasis>」。
   </para>
   <para>
    不過，靜態通道的組態及維護通常需要密集勞力，才能使用它們應付每天的通訊需求。因此，IPv6 提供三種不同的<emphasis>「動態通道」</emphasis>方法：
   </para>
   <variablelist>
    <varlistentry>
     <term>6over4</term>
     <listitem>
      <para>
       IPv6 封包會自動封裝成 IPv4 封包，透過能夠多點傳播的 IPv4 網路進行傳送。IPv6 的訣竅是將整個網路 (網際網路) 視為一個大型的區域網路 (LAN)。如此即能自動判定 IPv4 通道的接收端。然而，這個方法不能過多地延伸，而且不易推廣，因為 IP 多點傳播在網際網路上尚未普及。所以，它僅能為啟用多點傳播的小型公司或機構的網路提供解決方案。這個方法的規格詳述於 RFC 2529。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>6to4</term>
     <listitem>
      <para>
       利用此方法，IPv4 位址會自動從 IPv6 位址產生，使得隔離的 IPv6 主機能夠在 IPv4 網路上通訊。不過，用此方法在隔離的 IPv6 主機與網際網路之間通訊時存在一些問題。該方法詳述於 RFC 3056。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>IPv6 通道仲介</term>
     <listitem>
      <para>
       這個方法仰賴提供 IPv6 主機專屬通道的特殊伺服器。詳述於 RFC 3053。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-network-ipv6-config">
   <title>設定 IPv6</title>

   <para>
    若要設定 IPv6，通常不需要在個別工作站中做任何變更。IPv6 預設會開啟這個選項。若要在安裝的系統上停用或啟用 IPv6，請使用 YaST <guimenu>網路設定</guimenu>模組。在<guimenu>全域選項</guimenu>索引標籤上，視需要選取或取消選取<guimenu>啟用 IPv6</guimenu> 選項。若要暫時啟用直至下次重新開機，請以 <systemitem class="username">root</systemitem> 身分輸入 <command>modprobe</command> <option>-i ipv6</option>。載入 IPv6 模組後無法將其卸載。
   </para>
   <para>
    由於 IPv6 的自動組態概念，網路卡會在<emphasis>連結本地</emphasis>網路中指定一個位址。工作站通常不會進行路由表格管理。工作站可使用「<emphasis>路由器通告通訊協定</emphasis>」，向網路路由器查詢應使用的前置號碼和閘道。可使用 radvd 程式來設定 IPv6 路由器。此程式會通知工作站該 IPv6 位址應使用的前置號碼和路由器。或者，也可使用 zebra/quagga 自動設定位址和路由的組態。
   </para>

   <para>
    如需如何使用 <filename>/etc/sysconfig/network</filename> 檔案設定各種通道類型的資訊，請參閱 <literal>ifcfg-tunnel</literal> 的 man 頁面 (<command>man ifcfg-tunnel</command>)。
   </para>
  </sect2>

  <sect2 xml:id="sec-network-ipv6-moreinfo">
   <title>更多資訊</title>
   <para>
    上述綜覽沒有完整地涵蓋 IPv6 主題。如果要深入瞭解該新通訊協定，請參閱以下線上文件和書籍：
   </para>
   <variablelist>
    <varlistentry>
     <term><link xlink:href="http://www.ipv6.org/"/>
     </term>
     <listitem>
      <para>
       所有有關 IPv6 的入門資訊。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><link xlink:href="http://www.ipv6day.org"/>
     </term>
     <listitem>
      <para>
       啟動您 IPv6 網路所需的所有資訊。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><link xlink:href="http://www.ipv6-to-standard.org/"/>
     </term>
     <listitem>
      <para>
       啟用 IPv6 產品的清單。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><link xlink:href="http://www.bieringer.de/linux/IPv6/"/>
     </term>
     <listitem>
      <para>
       在此處可找到 Linux IPv6-HOWTO 和許多與此主題相關的連結。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>RFC 2460</term>
     <listitem>
      <para>
       有關 IPv6 的基本 RFC。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>IPv6 essentials</term>
     <listitem>
      <para>
       描述此主題所有重要面向的書籍，<emphasis>《IPv6 Essentials》</emphasis>由 Silivia Hagen 所著 (ISBN 0-596-00125-8)。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-network-nameres">
  <title>名稱解析</title>

  <para>
   DNS 協助指定 IP 位址給一或多個名稱以及指定名稱給 IP 位址。在 Linux 中，這種轉換通常是由已知為 bind 的特殊類型軟體執行的。處理這個轉換的機器稱為「<emphasis>名稱伺服器</emphasis>」(name server)。所有名稱元件之間以句號分隔，它們共同組成一個階層系統。但是，名稱階層與上述的 IP 位址階層無關。
  </para>

  <para>
   考慮使用完整名稱，如 <systemitem class="fqdomainname">jupiter.example.com</systemitem>，以 <systemitem class="fqdomainname">hostname.domain</systemitem> 格式來寫入。完整名稱，也稱為<emphasis>完全合格的網域名稱</emphasis> (FQDN)，由主機名稱和網域名稱 (<systemitem class="domainname">example.com</systemitem>) 組成。後者也包含了「<emphasis>最上層網域</emphasis>」(top level domain) 或 TLD (<systemitem class="domainname">com</systemitem>)。
  </para>

  <para>
   TLD 指定因為過去的緣故變得相當混淆。習慣上，美國使用三個字母的網域名稱。全世界的其他國家，則是使用兩個字母的 ISO 國際代碼為標準。除此之外，2000 年引入了較長的 TLD，代表特定活動範圍 (例如，<systemitem class="domainname">.info</systemitem>、<systemitem class="domainname">.name</systemitem>、<systemitem class="domainname">.museum</systemitem>)。
  </para>

  <para>
   在早期的網際網路 (1990 年前)，是使用檔案 <filename>/etc/hosts</filename> 儲存網際網路上所有機器的代表名稱。這種方式，對於連接到網際網路、快速增長的電腦數量層面而言，很快就證實是不切實際的。基於此因素，又開發出分散式的資料庫，以廣泛分散的方式來儲存主機名稱。這種資料庫與名稱伺服器類似，沒有有關網際網路上所有主機的立即可用資料，但是可以分散要求到其他名稱伺服器。
  </para>

  <para>
   階層的最上層是由「<emphasis>root 名稱伺服器</emphasis>」(root name server) 所使用。這些 root 名稱伺服器管理最上層網域，且由「網路資訊中心」(Network Information Center，NIC) 負責管理。每個 root 名稱伺服器知道負責指定最上層網域的名稱伺服器。有關最上層網域 NIC 的資訊可從 <link xlink:href="http://www.internic.net"/> 取得。
  </para>

  <para>
   DNS 的功能不只是解析主機名稱。名稱伺服器也知道哪個主機，即<emphasis>「郵件交換器」(Mail Exchanger，MX)</emphasis>，負責接收該領域的電子郵件。
  </para>

  <para>
   若要讓您的機器能夠解析 IP 位址，它必須知道至少一個名稱伺服器及其 IP 位址。使用 YaST 可輕鬆指定此類名稱伺服器。 
  </para>

  <para>
   <literal>whois</literal> 通訊協定與 DNS 密切相關。利用此程式，可快速找出負責指定網域的伺服器。
  </para>



  <note>
   <title>MDNS 和 .local 網域名稱</title>
   <para>
    <literal>.local</literal> 最上層網域將被解析程式視為連結本地網域。DNS 要求將做為多點傳播 DNS 要求予以傳送，而非通常的 DNS 要求。如果已在名稱伺服器組態中使用了 <literal>.local</literal> 網域，則必須在 <filename>/etc/host.conf</filename> 中關閉此選項。如需詳細資訊，請參閱 <filename>host.conf</filename> 手冊頁。
   </para>
   <para>
    若要在安裝期間關閉 MDNS，請使用 <literal>nomdns=1</literal> 開機參數。
   </para>
   <para>
    如需有關多點傳播 DNS 的詳細資訊，請參閱 <link xlink:href="http://www.multicastdns.org"/>。
   </para>
  </note>
 </sect1>
 <xi:include href="net_yast.xml"/>
 <xi:include href="networkmanager.xml"/>
 <xi:include href="net_wicked.xml"/>
 
 <xi:include href="net_bonding.xml"/>
 <xi:include href="net_teaming.xml"/>
 
</chapter>
