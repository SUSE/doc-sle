<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook50-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="art_amd-sev.xml" xml:id="article-amd-sev" xml:lang="zh-cn" version="5.0"> <title>AMD 安全加密虚拟化 (AMD-SEV) 指南</title>
 <info>
      <productname><phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase></productname>
      <productnumber><phrase role="productnumber"><phrase os="sles;sled">15 SP3</phrase></phrase></productnumber>
      <date>
        <?dbtimestamp format="B d, Y" ?>


      </date>
      <abstract>
        <para>
    AMD 的安全加密虚拟化 (SEV) 可让您加密虚拟机的内存。这是 Linux 内置的基于内核的虚拟机 (KVM) 超级管理程序的新功能。其目的是为了提高系统安全性，尤其在使用永久性内存的情况下。
   </para>
        <para>
    本文旨在提供 SEV 的工作原理以及如何启用和配置 SEV 的基本知识。文中还涉及了与非加密虚拟化相比使用 SEV 的一些限制。
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <sect1 xml:id="sec-amd-sev-intro">
 <title>SEV 简介</title>
 <para>
  对磁盘上储存的计算机数据进行加密这项功能已得到广泛部署，但 RAM 中储存的数据并未加密。这可能会导致这些数据暴露给通过软件或硬件嗅探入侵主机系统的攻击者。新的永久性内存技术让此问题变得更加严重：用户可从系统上取下 NVDIMM（非易失性内存模块）实体且其上的数据将保持不变，就像硬盘或 SSD 上的数据一样。如果未加密，储存的任何信息（如敏感数据、口令或机密密钥）都可能轻易泄露。
 </para>
 <para>
  AMD 的 SEV（安全加密虚拟化）技术通过独有的密钥以透明方式加密每个 VM 的内存，可以保护 Linux KVM 虚拟机。SEV 还可计算出内存内容的签名，该签名可发送给 VM 的所有者，作为固件已正确加密内存的证明。SEV 特别适用于云计算环境，在此环境中，VM 托管在远程服务器上，并不在 VM 所有者的控制之下。这样可减少需要置于超级管理程序及其主机系统管理员控制之下的可信 VM 的数量。
 </para>
 <para>
  在 SUSE Linux Enterprise 12 SP4 及以上版本和即将推出的 SUSE Linux Enterprise 15 维护版本中，内核、QEMU 和 <package>libvirt</package> 支持使用 SEV 创建和管理 VM。
 </para>
 </sect1>

 

 <sect1 xml:id="sec-amd-sev-hostreqs">
  <title>VM 主机要求</title>
  <para>
   VM 主机硬件必须支持 AMD 的 SEV 技术。要检测主机硬件是否支持 SEV，请检查 <tag class="attribute">sev</tag> 属性是否包含在 <package>libvirt</package> 的功能中，并且其值是否设置恰当：
  </para>
<screen>&lt;domainCapabilities&gt;
   ...
   &lt;features&gt;
   ...
   &lt;sev supported='yes'/&gt;
   ...
   &lt;/sev&gt;
   &lt;/features&gt;
&lt;/domainCapabilities&gt;</screen>
  <para>
   此外，请确保 <package>kvm_amd</package> 内核模块已启用 <parameter>sev</parameter> 参数：
  </para>
  <screen>/sys/module/kvm_amd/parameters/sev = 1</screen>
 </sect1>

 <sect1 xml:id="sec-amd-sev-vmreqs">
  <title>VM 要求</title>
  <para>
   VM 必须为新型 <literal>Q35</literal> 计算机类型且必须使用 UEFI 固件。
  </para>
  <note>
   <title>Q35 中无 IDE 支持</title>
   <para>
    Q35 计算机类型没有 IDE 控制器，不支持 IDE 磁盘。
   </para>
  </note>
  <para>
   所有 <literal>virtio</literal> 设备都需要配置
   <tag class="attribute">iommu='on'</tag> 属性（在其
   <tag class="starttag">driver</tag> 配置中）。此外，必须锁定对 VM 使用的所有内存区域的直接内存访问 (DMA)，以防发生交换。
  </para>
 </sect1>
 <sect1 xml:id="sec-amd-sev-config">
  <title>VM 配置</title>
  <example xml:id="sec-amd-sev-conffile">
   <title>示例配置文件</title>
   <para>
    例如，配置了 4 GB 内存的 SEV 加密 VM 将包含以下 XML 配置：
   </para>
   <screen>&lt;domain type='kvm'&gt;
    &lt;memory unit='KiB'&gt;4194304&lt;/memory&gt;
    &lt;currentMemory unit='KiB'&gt;4194304&lt;/currentMemory&gt;
    &lt;memoryBacking&gt;
    &lt;locked/&gt;
    &lt;/memoryBacking&gt;
    &lt;os&gt;
    &lt;type arch='x86_64' machine='pc-q35-2.11'&gt;hvm&lt;/type&gt;
    &lt;loader readonly='yes' type='pflash'&gt;/usr/share/qemu/ovmf-x86_64-ms-4m-code.bin&lt;/loader&gt;
    &lt;nvram&gt;/var/lib/libvirt/qemu/nvram/sles15-sev-guest_VARS.fd&lt;/nvram&gt;
    &lt;boot dev='hd'/&gt;
    &lt;/os&gt;
    &lt;launchSecurity <co xml:id="sec-amd-sev-ex-launchsecurity"/> type='sev'&gt;
    &lt;cbitpos&gt;47&lt;/cbitpos&gt; <co xml:id="sec-amd-sev-ex-cbitpos"/>
    &lt;reducedPhysBits&gt;1&lt;/reducedPhysBits&gt; <co xml:id="sec-amd-sev-ex-reducedphysbits"/>
    &lt;policy&gt;0x0033&lt;/policy&gt; <co xml:id="sec-amd-sev-ex-policy"/>
    &lt;/launchSecurity&gt;
    &lt;devices&gt;
    &lt;disk type='file' device='disk'&gt;
    &lt;driver iommu='on' name='qemu' type='raw'/&gt;
    &lt;target dev='vda' bus='virtio'/&gt;
    &lt;source file='/vmimages/sev-guest-disk.raw'/&gt;
    &lt;/disk&gt;
    &lt;rng model='virtio'&gt;
    &lt;driver iommu='on'/&gt;
    ...
    &lt;/rng&gt;
    &lt;memballoon model='virtio'&gt;
    &lt;driver iommu='on' /&gt; <co xml:id="sec-amd-sev-ex-iommu"/>
    ...
    &lt;/memballoon&gt;
    &lt;video&gt;
    &lt;model type='qxl' ram='65536' vram='65536' vgamem='16384' heads='1' primary='yes'/&gt;
    &lt;/video&gt;
    ...
    &lt;/devices&gt;
    ...
    &lt;/domain&gt;</screen>
   <calloutlist>
    <callout arearefs="sec-amd-sev-ex-launchsecurity">
     <para>
      元素 <tag class="element">launchSecurity type='sev'</tag> ，其内容启用了 VM 内存内容加密。
     </para>
    </callout>
    <callout arearefs="sec-amd-sev-ex-cbitpos">
     <para>
      启用内存加密后，如果某个内存页受保护，会使用其中一个物理地址位（也称为 C 位）进行标记。必需的 <tag class="element">cbitpos</tag> 元素，提供 Guest 页表项中 C 位的位置。例如，值 <literal>47</literal> 表示页表项中的第 47 位将决定该页是否加密。C 位数字从主机的 CPUID 读取，因此与硬件相关。元素 <tag class="element">cbitpos</tag> 的值与超级管理程序相关，可从域功能中的 <tag class="element">sev</tag>
      元素获取。
     </para>
    </callout>
    <callout arearefs="sec-amd-sev-ex-reducedphysbits">
     <para>
      启用内存加密后，我们会丢失物理地址空间的某些位。必需的 <tag class="element">reducedPhysBits</tag> 元素提供此物理地址位缩减。与 <tag class="element">cbitpos</tag>类似， <tag class="element">reducedPhysBits</tag> 的值与处理器系列相关，可从域功能中的 <tag class="element">sev</tag> 元素获取。
     </para>
    </callout>
    <callout arearefs="sec-amd-sev-ex-policy">
     <para>
      必需的 <tag class="element">policy</tag> 元素提供必须由 SEV 固件维护的 Guest 策略。此策略由固件强制实施，用于限制在 VM 上可由超级管理程序执行的配置和操作命令。启动 VM 时提供的 Guest 策略与该 VM 绑定在一起，且在其整个生命周期都无法更改。
     </para>
    </callout>
    <callout arearefs="sec-amd-sev-ex-iommu">
     <para>
      除了 <tag class="element">launchSecurity</tag> 设置外，SEV 加密的 VM 还必须设置 <tag class="attribute">iommu='on'</tag> 属性（在每个 <literal>virtio</literal> 设备中）。需要指定此属性才能为 QEMU 内的设备启用 DMA API。
     </para>
    </callout>
   </calloutlist>
  </example>

  <para>
   Guest 策略是定义如下的 4 个无符号字节：
  </para>
  <table xml:id="table-guestpolicy">
   <title>Guest 策略定义</title>
   <tgroup cols="2">
    <colspec colnum="1" colname="1" colwidth="20*"/>
    <colspec colnum="2" colname="2" colwidth="80*"/>
    <thead>
     <row>
      <entry>
       <para>位</para>
      </entry>
      <entry>
       <para>定义</para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>0</para>
      </entry>
      <entry>
       <para>
        如果设置，则不允许调试 Guest
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>1</para>
      </entry>
      <entry>
       <para>
        如果设置，则不允许与其他 Guest 共享密钥
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>2</para>
      </entry>
      <entry>
       <para>
        如果设置，则需要 SEV-ES
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>3</para>
      </entry>
      <entry>
       <para>
        如果设置，则不允许将 Guest 发送到其他平台
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>4</para>
      </entry>
      <entry>
       <para>
        如果设置，则不得将 Guest 传送到不属于该域的其他平台
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>5</para>
      </entry>
      <entry>
       <para>
        如果设置，则不得将 Guest 传送到不支持 SEV 的其他平台
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>6-15</para>
      </entry>
      <entry>
       <para>
        保留
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>16-32 </para>
      </entry>
      <entry>
       <para>
        不得将 Guest 传送到固件版本更低的其他平台
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   可选 <tag class="element">dhCert</tag> 元素提供 Guest 所有者的 base64 编码 Diffie-Hellman (DH) 密钥。该密钥用于在 SEV 固件与 Guest 所有者之间协商主机密密钥。此主机密密钥之后会用于在 SEV 固件与 Guest 所有者之间建立可信通道。
  </para>
  <para>
   可选 <tag class="element">session</tag> 元素提供 Guest 所有者的 base64 编码会话 Blob，如 SEV API 规范中定义。请参见 SEV 规范中针对会话 Blob 格式的 LAUNCH_START 部分。
  </para>
  <para>
   SEV 加密的 VM 还必须锁定其所有内存区域，以允许 DMA 并防止发生交换。必须使用 <tag class="element">memoryBacking</tag> 的
   <tag class="element">locked</tag>子元素指定内存的显式锁定。可通过将虚拟机配置为使用<literal>大页</literal>来避免进行显式内存锁定。有关在 VM 中使用大页的详细信息，请参见<citetitle>虚拟化最佳实践</citetitle><xref linkend="sec-vt-best-mem-huge-pages"/>。
  </para>
  <para>
   如果产生的开销与非 SEV VM 所需并无不同，那么固定内存时设置正确的硬限制就重要得多。如果限制过低，VM 将被终止。
  </para>
 </sect1>

 <sect1 xml:id="sec-amd-sev-limits">
  <title>当前限制</title>
  <itemizedlist>
   <listitem>
    <para>
     在 SEV 加密的 VM 内运行的 Guest 操作系统必须包含 SEV 支持。目前 SUSE Linux Enterprise Server 12 SP4、SUSE Linux Enterprise Server 15 和 SUSE Linux Enterprise Server 15 SP1 都提供此支持。
    </para>
   </listitem>
   <listitem>
    <para>
     当前不支持涉及保存及恢复实例的内存和状态的任何操作。这表示 SEV 加密的 VM 无法从快照恢复，并且无法进行实时迁移。加密的 VM 可照常在其他主机上关闭和重启动。
    </para>
   </listitem>
   <listitem>
    <para>
     SEV 加密的 VM 无法包含可直接访问的主机设备（即 PCI 直通）。
    </para>
   </listitem>
  </itemizedlist>
  <para>
   未来，当硬件、固件和各层软件具有新的功能时，将会去除这些限制。
  </para>
 </sect1>

 <sect1 xml:id="sec-amd-sev-moreinfo">
  <title>更多信息</title>
  <itemizedlist>
   <listitem>
    <para>
     <link xlink:href="https://developer.amd.com/sev"/> — AMD-SEV 登录页
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="https://developer.amd.com/wp-content/resources/55766.PDF"/> — AMD SEV-KM API 规范 (PDF)
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="https://github.com/AMDESE/AMDSEV/"/> — 包含示例和工具的 AMD SEV GitHub 储存库
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="https://libvirt.org/formatdomain.html#sev"/> — libvirt SEV 配置设置
    </para>
   </listitem>
  </itemizedlist>
 </sect1>

 <xi:include href="common_gfdl1.2_i.xml"/>

</article>
