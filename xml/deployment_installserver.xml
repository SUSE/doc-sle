<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter version="5.0" role="General" xml:id="cha.deployment.instserver"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Setting Up a Network Installation Source</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  &productnamereg; can be installed in different ways. Apart from the usual
  media installation covered in <xref linkend="cha.install"/>, you can choose from
  various network-based approaches or even opt for an unattended installation of &productname;.
 </para>
 <para>
  Each method is introduced by means of two short checklists: one listing the
  prerequisites for this method and the other illustrating the basic procedure.
  More detail is then provided for all the techniques used in these
  installation scenarios.
 </para>
 <para>
  Depending on the operating system of the machine used as the
  network installation source for &productname;, there are several options for
  the server configuration. The easiest way to set up an installation server is
  to use &yast; on &sls; or &opensuse;.
 </para>
 <tip>
  <title>Installation Server Operating System</title>
  <para>
   You can even use a Microsoft Windows machine as the installation server for
   your Linux deployment. See <xref linkend="sec.deployment.instserver.smb"/>
   for details.
  </para>
 </tip>
 <sect1 xml:id="sec.deployment.instserver.sles9">
  <title>Setting Up an Installation Server Using &yast;</title>

  <para>
   &yast; offers a graphical tool for creating network repositories. It
   supports HTTP, FTP, and NFS network installation servers.
  </para>

  <procedure xml:id="proc.deployment.instserver.sles9">
   <step>
    <para>
     Log in as &rootuser; to the machine that should act as installation
     server.
    </para>
   </step>
   <step>
    <para>
     Start <menuchoice> <guimenu>&yast;</guimenu>
     <guimenu>Miscellaneous</guimenu> <guimenu>Installation
     Server</guimenu></menuchoice>.
    </para>
   </step>
   <step>
    <para>
     Select the repository type (HTTP, FTP, or NFS). The selected service is
     started automatically every time the system starts. If a service of the
     selected type is already running on your system and you want to configure
     it manually for the server, deactivate the automatic configuration of the
     server service with <guimenu>Do Not Configure Any Network
     Services</guimenu>. In both cases, define the directory in which the
     installation data should be made available on the server.
    </para>
   </step>
   <step>
    <para>
     Configure the required repository type. This step relates to the automatic
     configuration of server services. It is skipped when automatic
     configuration is deactivated.
    </para>
    <para>
<!--adjust to standard network example-->
     Define an alias for the root directory of the FTP or HTTP server on which
     the installation data should be found. The repository will later be
     located under
     <literal>ftp://<replaceable>Server-IP</replaceable>/<replaceable>Alias</replaceable>/<replaceable>Name</replaceable></literal>
     (FTP) or under
     <literal>http://<replaceable>Server-IP</replaceable>/<replaceable>Alias</replaceable>/<replaceable>Name</replaceable></literal>
     (HTTP). <replaceable>Name</replaceable> stands for the name of the
     repository, which is defined in the following step. If you selected NFS in
     the previous step, define wild cards and export options. The NFS server
     will be accessible under
     <literal>nfs://<replaceable>Server-IP</replaceable>/<replaceable>Name</replaceable></literal>.
     Details of NFS and exports can be found in <xref linkend="cha.nfs"/>.
    </para>
    <tip>
     <title>Firewall Settings</title>
     <para>
      Make sure that the firewall settings of your server system allow traffic
      on the ports for HTTP, NFS, and FTP. If they currently do not, enable
      <guimenu>Open Port in Firewall</guimenu> or check <guimenu>Firewall
      Details</guimenu> first.
     </para>
    </tip>
   </step>
   <step>
    <para>
     Configure the repository. Before the installation media are copied to
     their destination, define the name of the repository (ideally, an easily
     remembered abbreviation of the product and version). &yast; allows
     providing ISO images of the media instead of copies of the installation
     DVDs. If you want this, activate the relevant check box and specify the
     directory path under which the ISO files can be found locally. Depending
     on the product to distribute using this installation server, it might be
     necessary to add additional media, such as service pack DVDs as extra
     repositories. To announce your installation server in the network via
     OpenSLP, activate the appropriate option.
    </para>
    <tip>
     <title>Announcing the Repository</title>
     <para>
      Consider announcing your repository via OpenSLP if your network setup
      supports this option. This saves you from entering the network
      installation path on every target machine. The target systems are booted
      using the SLP boot option and find the network repository without any
      further configuration. For details on this option, refer to
      <xref linkend="cha.boot_parameters"/>.
     </para>
    </tip>
   </step>
   <step>
    <para>
     Configuring extra repositories. &yast; follows a specific naming
     convention to configure add-on CDs or service pack CDs repositories.
     Configuration is accepted only if the repository name of the add-on CDs starts with the repository name of the installation media, In other
     words, if you chose <literal>SLES12SP1</literal> as repository name for
     DVD1 than you should chose <literal>SLES12SP1addon</literal> repository
     name for DVD2. Same applies to SDK CDs.
    </para>
   </step>
   <step>
    <para>
     Upload the installation data. The most lengthy step in configuring an
     installation server is copying the actual installation media. Insert the
     media in the sequence requested by &yast; and wait for the copying
     procedure to end. When the sources have been fully copied, return to the
     overview of existing repositories and close the configuration by selecting
     <guimenu>Finish</guimenu>.
    </para>
    <para>
     Your installation server is now fully configured and ready for service. It
     is automatically started every time the system is started. No further
     intervention is required. You only need to configure and start this
     service correctly by hand if you have deactivated the automatic
     configuration of the selected network service with &yast; as an initial
     step.
    </para>
   </step>
  </procedure>

  <para>
   To deactivate a repository, select the repository to remove then select
   <guimenu>Delete</guimenu>. The installation data are removed from the
   system. To deactivate the network service, use the respective &yast; module.
  </para>

  <para>
   If your installation server needs to provide the installation data for more
   than one product of the product version, start the &yast; installation
   server module and select <guimenu>Add</guimenu> in the overview of existing
   repositories to configure the new repository.
  </para>
 </sect1>
 <sect1 xml:id="sec.deployment.instserver.nfs">
  <title>Setting Up an NFS Repository Manually</title>

  <important os="sled">
   <para>
    This assumes that you are using some kind of &suselinux;-based operating
    system on the machine that will serve as installation server. If this is
    not the case, turn to the other vendor's documentation on NFS instead of
    following these instructions.
   </para>
  </important>

  <para>
   Setting up an NFS source for installation is done in two main steps. In the
   first step, create the directory structure holding the installation data and
   copy the installation media over to this structure. Second, export the
   directory holding the installation data to the network.
  </para>

  <procedure xml:id="proc.deployment.instserver.nfs.cdir">
   <para>
    To create a directory to hold the installation data, proceed as follows:
   </para>
   <step>
    <para>
     Log in as &rootuser;.
    </para>
   </step>
   <step>
    <para>
     Create a directory that will later hold all installation data and change
     into this directory. For example:
    </para>
<screen>&prompt.root;mkdir /srv/install/<replaceable>PRODUCT</replaceable>/<replaceable>PRODUCTVERSION</replaceable>
&prompt.root;cd /srv/install/<replaceable>PRODUCT</replaceable>/<replaceable>PRODUCTVERSION</replaceable></screen>
    <para>
     Replace <replaceable>PRODUCT</replaceable> with an abbreviation of the
     product name and <replaceable>PRODUCTVERSION</replaceable> with a string
     that contains the product name and version.
    </para>
   </step>
   <step>
    <para>
     For each DVD contained in the media kit execute the following commands:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Copy the entire content of the installation DVD into the installation
       server directory:
      </para>
<screen>&prompt.root;cp -a /media/<replaceable>PATH_TO_YOUR_DVD_DRIVE</replaceable> .</screen>
      <para>
       Replace <replaceable>PATH_TO_YOUR_DVD_DRIVE</replaceable> with the
       actual path under which your DVD drive is addressed. Depending on the
       type of drive used in your system, this can be
       <filename>cdrom</filename>, <filename>cdrecorder</filename>,
       <filename>dvd</filename>, or <filename>dvdrecorder</filename>.
      </para>
     </step>
     <step>
      <para>
       Rename the directory to the DVD number:
      </para>
<screen>&prompt.root;mv <replaceable>PATH_TO_YOUR_DVD_DRIVE</replaceable> DVD<replaceable>X</replaceable></screen>
      <para>
       Replace <replaceable>X</replaceable> with the actual number of your DVD.
      </para>
     </step>
    </substeps>
   </step>
  </procedure>

  <procedure xml:id="proc.deployment.instserver.nfs.export">
   <para>
    On &productname;, you can export the repository with NFS using &yast;.
    Proceed as follows:
   </para>
   <step>
    <para>
     Log in as &rootuser;.
    </para>
   </step>
   <step>
    <para>
     Start <menuchoice> <guimenu>&yast;</guimenu> <guimenu>Network
     Services</guimenu> <guimenu>NFS Server</guimenu></menuchoice>.
    </para>
   </step>
   <step>
    <para>
     Select <guimenu>Start</guimenu> and <guimenu>Open Port in
     Firewall</guimenu> and click <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Select <guimenu>Add Directory</guimenu> and browse for the directory
     containing the installation sources, in this case,
     <filename><replaceable>PRODUCTVERSION</replaceable></filename>.
    </para>
   </step>
   <step>
    <para>
     Select <guimenu>Add Host</guimenu> and enter the host names of the
     machines to which to export the installation data. Instead of specifying
     host names here, you could also use wild cards, ranges of network
     addresses, or the domain name of your network. Enter the appropriate
     export options or leave the default, which works fine in most setups. For
     more information about the syntax used in exporting NFS shares, read the
     <systemitem>exports</systemitem> man page.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Finish</guimenu>. The NFS server holding the &productname;
     repository is automatically started and integrated into the boot process.
    </para>
   </step>
  </procedure>

  <procedure xml:id="proc.deployment.instserver.nfs.exportman">
   <para>
    If you prefer manually exporting the repository via NFS instead of using
    the &yast; NFS Server module, proceed as follows:
   </para>
   <step>
    <para>
     Log in as &rootuser;.
    </para>
   </step>
   <step>
    <para>
     Open the file <filename>/etc/exports</filename> and enter the following
     line:
    </para>
<screen>/<replaceable>PRODUCTVERSION</replaceable> *(ro,root_squash,sync)</screen>
    <para>
     This exports the directory
     <filename>/<replaceable>PRODUCTVERSION</replaceable></filename> to any
     host that is part of this network or to any host that can connect to this
     server. To limit the access to this server, use netmasks or domain names
     instead of the general wild card <literal>*</literal>. Refer to the
     <systemitem>export</systemitem> man page for details. Save and exit this
     configuration file.
    </para>
   </step>
   <step>
    <para>
     To add the NFS service to the list of servers started during system boot,
     execute the following commands:
    </para>
<screen>&prompt.root;systemctl enable nfsserver</screen>
   </step>
   <step>
    <para>
     Start the NFS server with <command>systemctl start nfsserver</command>. If
     you need to change the configuration of your NFS server later, modify the
     configuration file and restart the NFS daemon with <command>systemctl
     restart nfsserver</command>.
    </para>
   </step>
  </procedure>

  <procedure xml:id="proc.deployment.instserver.nfs.slpann">
   <para>
    Announcing the NFS server via OpenSLP makes its address known to all
    clients in your network.
   </para>
   <step>
    <para>
     Log in as &rootuser;.
    </para>
   </step>
   <step>
    <para>
     Create the <filename>/etc/slp.reg.d/install.suse.nfs.reg</filename>
     configuration file with the following lines:
    </para>
<screen><?dbsuse-fo font-size="7pt"?># Register the NFS Installation Server
service:install.suse:nfs://$HOSTNAME/<replaceable>PATH_TO_REPOSITORY</replaceable>/DVD1,en,65535
description=NFS Repository</screen>
    <para>
     Replace <replaceable>PATH_TO_REPOSITORY</replaceable> with the actual path
     to the installation source on your server.
    </para>
   </step>
   <step>
    <para>
     Start the OpenSLP daemon with <command>systemctl start slpd</command>.
    </para>
   </step>
  </procedure>

  <para os="sles">
   For more information about OpenSLP, refer to the package documentation
   located under <filename>/usr/share/doc/packages/openslp/</filename> or refer
   to <xref linkend="cha.slp"/>. More Information about NFS, refer to
   <xref linkend="cha.nfs"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec.deployment.instserver.ftp">
  <title>Setting Up an FTP Repository Manually</title>

  <para>
   Creating an FTP repository is very similar to creating an NFS repository. An
   FTP repository can be announced over the network using OpenSLP as well.
  </para>

  <procedure xml:id="proc.deployment.instserver.ftp">
   <step>
    <para>
     Create a directory holding the installation sources as described in
     <xref linkend="sec.deployment.instserver.nfs"/>.
    </para>
   </step>
   <step>
    <para>
     Configure the FTP server to distribute the contents of your installation
     directory:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Log in as &rootuser; and install the package
       <systemitem>vsftpd</systemitem> using the &yast; software management.
      </para>
     </step>
     <step>
      <para>
       Enter the FTP server root directory:
      </para>
<screen>&prompt.root;cd <option>/srv/ftp</option></screen>
     </step>
     <step>
      <para>
       Create a subdirectory holding the installation sources in the FTP root
       directory:
      </para>
<screen>&prompt.root;mkdir <replaceable>REPOSITORY</replaceable></screen>
      <para>
       Replace <replaceable>REPOSITORY</replaceable> with the product name.
      </para>
     </step>
     <step>
      <para>
       Mount the contents of the installation repository into the change root
       environment of the FTP server:
      </para>
<screen>&prompt.root;mount --bind <replaceable>PATH_TO_REPOSITORY</replaceable> /srv/ftp/<replaceable>REPOSITORY</replaceable></screen>
      <para>
       Replace <replaceable>PATH_TO_REPOSITORY</replaceable> and
       <replaceable>REPOSITORY</replaceable> with values matching your setup.
       If you need to make this permanent, add it to
       <filename>/etc/fstab</filename>.
      </para>
     </step>
     <step>
      <para>
       Start vsftpd with <command>vsftpd</command>.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Announce the repository via OpenSLP, if this is supported by your network
     setup:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Create the <filename>/etc/slp.reg.d/install.suse.ftp.reg</filename>
       configuration file with the following lines:
      </para>
<screen><?dbsuse-fo font-size="7pt"?># Register the FTP Installation Server
service:install.suse:ftp://$HOSTNAME/<replaceable>REPOSITORY</replaceable>/DVD1,en,65535
description=FTP Repository</screen>
      <para>
       Replace <replaceable>REPOSITORY</replaceable> with the actual name to
       the repository directory on your server. The <literal>service:</literal>
       line should be entered as one continuous line.
      </para>
     </step>
     <step>
      <para>
       Start the OpenSLP daemon with <command>systemctl start slpd</command>.
      </para>
     </step>
    </substeps>
   </step>
  </procedure>

  <tip os="sles">
   <title>Configuring an FTP Server with &yast;</title>
   <para>
    If you prefer using &yast; instead of manually configuring the FTP installation
    server, refer to <xref linkend="cha.ftp"/> for more information on how to
    use the &yast; FTP server module.
   </para>
  </tip>
 </sect1>
 <sect1 xml:id="sec.deployment.instserver.http">
  <title>Setting Up an HTTP Repository Manually</title>

  <para>
   Creating an HTTP repository is very similar to creating an NFS repository.
   An HTTP repository can be announced over the network using OpenSLP as well.
  </para>

  <procedure xml:id="proc.deployment.instserver.http">
   <step>
    <para>
     Create a directory holding the installation sources as described in
     <xref linkend="sec.deployment.instserver.nfs"/>.
    </para>
   </step>
   <step>
    <para>
     Configure the HTTP server to distribute the contents of your installation
     directory:
    </para>
    <substeps performance="required">
     <step>
      <para>
       <phrase os="sles">Install the Web server Apache as described in
       <xref linkend="sec.apache2.quickstart.installation"/></phrase><phrase os="sled">Install
       the Web server Apache</phrase>.
      </para>
     </step>
     <step>
      <para>
       Enter the root directory of the HTTP server
       (<filename>/srv/www/htdocs</filename>) and create the subdirectory that
       will hold the installation sources:
      </para>
<screen>&prompt.root;mkdir <replaceable>REPOSITORY</replaceable></screen>
      <para>
       Replace <replaceable>REPOSITORY</replaceable> with the product name.
      </para>
     </step>
     <step>
      <para>
       Create a symbolic link from the location of the installation sources to
       the root directory of the Web server
       (<filename>/srv/www/htdocs</filename>):
      </para>
<screen>&prompt.root;ln -s <replaceable>/PATH_TO_REPOSITORY</replaceable>/srv/www/htdocs/<replaceable>REPOSITORY</replaceable></screen>
     </step>
     <step>
      <para>
       Modify the configuration file of the HTTP server
       (<filename>/etc/apache2/default-server.conf</filename>) to make it
       follow symbolic links. Replace the following line:
      </para>
<screen>Options None</screen>
      <para>
       with
      </para>
<screen>Options Indexes FollowSymLinks</screen>
     </step>
     <step>
      <para>
       Reload the HTTP server configuration using <command>systemctl reload
       apache2</command>.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Announce the repository via OpenSLP, if this is supported by your network
     setup:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Create the <filename>/etc/slp.reg.d/install.suse.http.reg</filename>
       configuration file with the following lines:
      </para>
<screen><?dbsuse-fo font-size="6.5pt"?># Register the HTTP Installation Server<!--adjust to standard network example-->
service:install.suse:http://$HOSTNAME/<replaceable>REPOSITORY</replaceable>/DVD1/,en,65535
description=HTTP Repository</screen>
      <para>
       Replace <replaceable>REPOSITORY</replaceable> with the actual path to
       the repository on your server. The <literal>service:</literal> line
       should be entered as one continuous line.
      </para>
     </step>
     <step>
      <para>
       Start the OpenSLP daemon using <command>systemctl start slpd</command>.
      </para>
     </step>
    </substeps>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.deployment.instserver.smb">
  <title>Managing an SMB Repository</title>

  <para>
   Using SMB, you can import the installation sources from a Microsoft Windows
   server and start your Linux deployment even with no Linux machine around.
  </para>

  <procedure xml:id="proc.deployment.instserver.smb.export">
   <para>
    To set up an exported Windows Share holding your &productname; repository,
    proceed as follows:
   </para>
   <step>
    <para>
     Log in to your Windows machine.
    </para>
   </step>
   <step>
    <para>
     Create a new directory that will hold the entire installation tree and
     name it <filename>INSTALL</filename>, for example.
    </para>
   </step>
   <step>
    <para>
     Export this share according the procedure outlined in your Windows
     documentation.
    </para>
   </step>
   <step>
    <para>
     Enter this share and create a subdirectory, called
     <filename><replaceable>PRODUCT</replaceable></filename>. Replace
     <replaceable>PRODUCT</replaceable> with the actual product name.
    </para>
   </step>
   <step>
    <para>
     Enter the <filename>INSTALL/<replaceable>PRODUCT</replaceable></filename>
     directory and copy each DVD to a separate directory, such as
     <literal>DVD1</literal> and <literal>DVD2</literal>.
    </para>
   </step>
  </procedure>

  <para>
   To use an SMB mounted share as a repository, proceed as follows:
  </para>

  <procedure xml:id="proc.deployment.instserver.smb.use">
   <step>
    <para>
     Boot the installation target.
    </para>
   </step>
   <step>
    <para>
     Select <guimenu>Installation</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Press <keycap>F4</keycap> for a selection of the repository.
    </para>
   </step>
   <step>
    <para>
     Choose SMB and enter the Windows machine's name or IP address, the share
     name
     (<filename>INSTALL/<replaceable>PRODUCT</replaceable>/DVD1</filename>, in
     this example), user name, and password. The syntax looks like this:
    </para>
<screen>smb://workdomain;user:password@server/INSTALL/DVD1</screen>
    <para>
     After you press <keycap function="enter"/>, &yast; starts and you can
     perform the installation.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.remote_installation.iso">
  <title>Using ISO Images of the Installation Media on the Server</title>

  <para>
   Instead of copying physical media into your server directory manually, you
   can also mount the ISO images of the installation media into your
   installation server and use them as a repository. To set up an HTTP, NFS or
   FTP server that uses ISO images instead of media copies, proceed as follows:
  </para>

  <procedure>
   <step>
    <para>
     Download the ISO images and save them to the machine to use as the
     installation server.
    </para>
   </step>
   <step>
    <para>
     Log in as &rootuser;.
    </para>
   </step>
   <step>
    <para>
     Choose and create an appropriate location for the installation data, as
     described in <xref linkend="sec.deployment.instserver.nfs"/>,
     <xref linkend="sec.deployment.instserver.ftp"/>, or
     <xref linkend="sec.deployment.instserver.http"/>.
    </para>
   </step>
   <step>
    <para>
     Create subdirectories for each DVD.
    </para>
   </step>
   <step>
    <para>
     To mount and unpack each ISO image to the final location, issue the
     following command:
    </para>
<screen>&prompt.root;mount -o loop <replaceable>PATH_TO_ISO</replaceable> <replaceable>PATH_TO_REPOSITORY</replaceable>/<replaceable>PRODUCT</replaceable>/<replaceable>MEDIUMX</replaceable></screen>
    <para>
     Replace <replaceable>PATH_TO_ISO</replaceable> with the path to your local
     copy of the ISO image, <replaceable>PATH_TO_REPOSITORY</replaceable> with
     the source directory of your server, <replaceable>PRODUCT</replaceable>
     with the product name, and <replaceable>MEDIUMX</replaceable> with the
     type (CD or DVD) and number of media you are using.
    </para>
   </step>
   <step>
    <para>
     Repeat the previous step to mount all ISO images needed for your product.
    </para>
   </step>
   <step>
    <para>
     Start your installation server as usual, as described in
     <xref linkend="sec.deployment.instserver.nfs"/>,
     <xref linkend="sec.deployment.instserver.ftp"/>, or
     <xref linkend="sec.deployment.instserver.http"/>.
    </para>
   </step>
  </procedure>

  <para>
   To automatically mount the ISO images at boot time, add the respective mount
   entries to <filename>/etc/fstab</filename>. An entry according to the
   previous example would look like the following:
  </para>

<screen><replaceable>PATH_TO_ISO</replaceable>&nbsp;<replaceable>PATH_TO_REPOSITORY</replaceable>/<replaceable>PRODUCT</replaceable><replaceable>MEDIUM</replaceable>&nbsp;auto&nbsp;loop</screen>
 </sect1>
</chapter>
