<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-tuning-resources">
<!--
 <sect1 id="cha-tuning-resources-misc">
  <title>Miscellaneous</title>
  <para></para>
  <sect2 id="cha-tuning-resources-misc-ttys">
   <title>Disabling ttys</title>
   <para>
    By default &productname; comes with six active ttys.
   </para>
  </sect2>
 </sect1>
-->
<!--

Large page support
~~~~~~~~~~~~~~~~~~
    http://lwn.net/Articles/6969/
    http://linuxgazette.net/155/krishnakumar.html
    http://lifecs.likai.org/2009/01/uses-of-hugetlb.html



  - file descriptors:
    ulimit: default=unlimited??
    ulimit -a shows everything

  - speed of DNS requests
     start nscd (active by default)

  - adding swap on the fly
    swapon / swapoff

  - xrestop
    -> already in utilities

  - free disk space

  - s.m.a.r.t.

  - system load

  - Process priority and nice level

-ttys

-->
 <title>General System Resource Management</title>
 <info>
  <abstract>
   <para>
    Tuning the system is not only about optimizing the kernel or getting the
    most out of your application, it begins with setting up a lean and fast
    system. The way you set up your partitions and file systems can influence
    the server's speed. The number of active services and the way routine tasks
    are scheduled also affects performance.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
  </dm:docmanager>
 </info>
 <sect1 xml:id="cha-tuning-resources-installation">
  <title>Planning the Installation</title>

  <para>
   A carefully planned installation ensures that the system is set up
   exactly as you need it for the given purpose. It also saves considerable
   time when fine tuning the system. All changes suggested in this section
   can be made in the <guimenu>Installation Settings</guimenu> step during
   the installation. See <xref linkend="sec-yast-install-proposal"/> for details.
  </para>

  <sect2 xml:id="cha-tuning-resources-installation-partitioning">
   <title>Partitioning</title>
   <para>
    Depending on the server's range of applications and the hardware layout,
    the partitioning scheme can influence the machine's performance (although
    to a lesser extent only). It is beyond the scope of this manual to suggest
    different partitioning schemes for particular workloads. However, the
    following rules will positively affect performance. They do not apply when
    using an external storage system.
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      Make sure there always is some free space available on the disk, since a
      full disk delivers inferior performance
     </para>
    </listitem>
    <listitem>
     <para>
      Disperse simultaneous read and write access onto different disks by, for
      example:
     </para>
     <itemizedlist mark="bullet" spacing="normal">
      <listitem>
       <para>
        using separate disks for the operating system, data, and log files
       </para>
      </listitem>
      <listitem>
       <para>
        placing a mail server's spool directory on a separate disk
       </para>
      </listitem>
      <listitem>
       <para>
        distributing the user directories of a home server between different
        disks
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="cha-tuning-resources-installation-scope">
   <title>Installation Scope</title>
   <para>
    The installation scope has no direct influence on the machine's
    performance, but a carefully chosen scope of packages has advantages. It is
    recommended to install the minimum of packages needed to run the server. A
    system with a minimum set of packages is easier to maintain and has fewer
    potential security issues. Furthermore, a tailor made installation scope
    also ensures that no unnecessary services are started by default.
   </para>
   <para>
    &productname; lets you customize the installation scope on the Installation
    Summary screen. By default, you can select or remove preconfigured patterns
    for specific tasks, but it is also possible to start the &yast; Software
    Manager for a fine-grained package-based selection.
   </para>
   <para>
    One or more of the following default patterns may not be needed in all
    cases:
   </para>
   <variablelist>
    <varlistentry>
     <term><guimenu>&gnome; Desktop Environment</guimenu></term>
     <listitem>
      <para>
       Servers rarely need a full desktop environment. In case a graphical
       environment is needed, a more economical solution such as IceWM can be
       sufficient.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>X Window System</guimenu></term>
     <listitem>
      <para>
       When solely administrating the server and its applications via command
       line, consider not installing this pattern. However, keep in mind that
       it is needed to run GUI applications from a remote machine. If your
       application is managed by a GUI or if you prefer the GUI version of
       &yast;, keep this pattern.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Print Server</guimenu></term>
     <listitem>
      <para>
       This pattern is only needed if you want to print from the machine.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="cha-tuning-resources-installation-target">
   <title>Default Target</title>
   <para>
    A running &xgeneric; consumes many resources and is rarely needed on a
    server. It is strongly recommended to start the system in target
    <systemitem>multi-user.target</systemitem>. You will still be able to
    remotely start graphical applications.
<!-- 2014-08-20, tiwai: startx no longer works for users -->
<!--
         or use the <command>startx</command>
         command to start a local graphical desktop.
    -->
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="cha-tuning-resources-services">
  <title>Disabling Unnecessary Services</title>

  <para>
   The default installation starts several services (the number varies with the
   installation scope). Since each service consumes resources, it is
   recommended to disable the ones not needed. Run <menuchoice>
   <guimenu>&yast;</guimenu> <guimenu>System</guimenu>
   <guimenu>&ycc_runlevel;</guimenu> </menuchoice> to start the services
   management module.
  </para>

  <para>
   If you are using the graphical version of &yast;, you can click the column
   headlines to sort the list of services. Use this to get an overview of which
   services are currently running.
<!--or which services are started in the server's default
    runlevel. Click a service to see its description.-->
   Use the <guimenu>Start/Stop</guimenu> button to disable the service for the
   running session. To permanently disable it, use the
   <guimenu>Enable/Disable</guimenu> button.
  </para>

  <para>
   The following list shows services that are started by default after the
   installation of &productname;. Check which of the components you need, and
   disable the others:
  </para>

  <variablelist>
   <varlistentry>
    <term><guimenu>alsasound</guimenu></term>
    <listitem>
     <para>
      Loads the Advanced Linux Sound System.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>auditd</guimenu></term>
    <listitem>
     <para>
      A daemon for the Audit system (see <xref linkend="part-audit"/> for
      details). Disable this if you do not use Audit.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>bluez-coldplug</guimenu></term>
    <listitem>
     <para>
      Handles cold plugging of Bluetooth dongles.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>cups</guimenu></term>
    <listitem>
     <para>
      A printer daemon.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>java.binfmt_misc</guimenu></term>
    <listitem>
     <para>
      Enables the execution of <filename>*.class</filename> or
      <filename>*.jar</filename> Java programs.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>nfs</guimenu></term>
    <listitem>
     <para>
      Services needed to mount NFS.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>smbfs</guimenu></term>
    <listitem>
     <para>
      Services needed to mount SMB/CIFS file systems from a Windows* server.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>splash / splash_early</guimenu></term>
    <listitem>
     <para>
      Shows the splash screen on start-up.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="cha-tuning-resources-disk">
  <title>File Systems and Disk Access</title>

  <para>
   Hard disks are the slowest components in a computer system and therefore
   often the cause for a bottleneck. Using the file system that best suits your
   workload helps to improve performance. Using special mount options or
   prioritizing a process's I/O priority are further means to speed up the
   system.
  </para>

  <sect2 xml:id="cha-tuning-resources-disk-filesystems">
   <title>File Systems</title>
   <para>
    &productname; ships with several file systems, including Btrfs, Ext4, Ext3,
    Ext2, ReiserFS, and XFS. Each file system has its own advantages and
    disadvantages.<phrase os="sles"> Refer to <xref linkend="cha-filesystems"/>
    for detailed information.</phrase>
   </para>
   <sect3 xml:id="cha-tuning-resources-disk-filesystems-nfs">
    <title>NFS</title>
    <para>
     NFS (Version 3) tuning is covered in detail in the NFS Howto at
     <link xlink:href="http://nfs.sourceforge.net/nfs-howto/"/>. The first
     thing to experiment with when mounting NFS shares is increasing the read
     write blocksize to <literal>32768</literal> by using the mount options
     <option>wsize</option> and <option>rsize</option>.
    </para>
   </sect3>
  </sect2>

  <sect2 xml:id="cha-tuning-resources-disk-mount">
   <title>Time Stamp Update Policy</title>
   <para>
    Each file and directory in a file system has three time stamps associated
    with it: a time when the file was last read called <emphasis>access
    time</emphasis>, a time when the file data was last modified called
    <emphasis>modification time</emphasis>, and a time when the file metadata
    was last modified called <emphasis>change time</emphasis>. Keeping access
    time always up to date has significant performance overhead since every
    read-only access will incur a write operation. Thus by default every file
    system updates access time only if current file access time is older than a
    day or if it is older than file modification or change time. This feature
    is called <emphasis>relative access time</emphasis> and the corresponding
    mount option is <option>relatime</option>. Updates of access time can be
    completely disabled using the <option>noatime</option> mount option,
    however you need to verify your applications do not use it. This can be
    true for file and Web servers or for network storage. If the default
    relative access time update policy is not suitable for your applications,
    use the <option>strictatime</option> mount option.
   </para>
   <para>
    Some file systems (for example Ext4) also support lazy time stamp updates.
    When this feature is enabled using the <option>lazytime</option> mount
    option, updates of all time stamps happen in memory but they are not
    written to disk. That happens only in response to
    <systemitem>fsync</systemitem> or <systemitem>sync</systemitem> system
    calls, when the file information is written due to another reason such as
    file size update, when time stamps are older than 24 hours, or when cached
    file information needs to be evicted from memory.
   </para>
   <para>
    To update mount options used for a file system, either edit
    <filename>/etc/fstab</filename> directly, or use the <guimenu>Fstab
    Options</guimenu> dialog when editing or adding a partition with the &yast;
    Partitioner.
   </para>
  </sect2>

  <sect2 xml:id="cha-tuning-resources-disk-ionice">
   <title>Prioritizing Disk Access with <command>ionice</command></title>
   <para>
    The <command>ionice</command> command lets you prioritize disk access for
    single processes. This enables you to give less I/O priority to background
    processes with heavy disk access that are not time-critical, such as backup
    jobs. <command>ionice</command> also lets you raise the I/O priority for a
    specific process to make sure this process always has immediate access to
    the disk. The caveat with this feature is that standard writes are cached in
    the page cache and are written back to persistent storage only later by an
    independent kernel process. Thus, the I/O priority setting generally does
    not apply for these writes. Also be aware that
    I/O class and priority setting are obeyed only by
    <emphasis>CFQ</emphasis> I/O scheduler for legacy block I/O path
    (refer to <xref linkend="cha-tuning-io-schedulers"/>) and
    <emphasis>BFQ</emphasis> I/O scheduler for blk-mq I/O path (refer
    to <xref linkend="cha-tuning-io-schedulers-blkmq"/>).  You can set
    the following three scheduling classes:
   </para>
   <variablelist>
    <varlistentry>
     <term>Idle</term>
     <listitem>
      <para>
       A process from the idle scheduling class is only granted disk access
       when no other process has asked for disk I/O.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Best effort</term>
     <listitem>
      <para>
       The default scheduling class used for any process that has not asked for
       a specific I/O priority. Priority within this class can be adjusted to a
       level from <literal>0</literal> to <literal>7</literal> (with
       <literal>0</literal> being the highest priority). Programs running at
       the same best-effort priority are served in a round-robin fashion. Some
       kernel versions treat priority within the best-effort class
       differently&mdash;for details, refer to the
       <systemitem>ionice(1)</systemitem> man page.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Real-time</term>
     <listitem>
      <para>
       Processes in this class are always granted disk access first. Fine-tune
       the priority level from <literal>0</literal> to <literal>7</literal>
       (with <literal>0</literal> being the highest priority). Use with care,
       since it can starve other processes.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    For more details and the exact command syntax refer to the
    <systemitem>ionice(1)</systemitem> man page. If you need more reliable
    control over bandwidth available to each application, use
    Kernel Control Groups as described in
    <xref linkend="cha-tuning-cgroups"/>.
   </para>
  </sect2>
 </sect1>
<!--
 <sect1 id="cha-tuning-resources-misc">
  <title>Miscellaneous</title>
  <para></para>
  <sect2 id="cha-tuning-resources-misc-ttys">
   <title>Disabling ttys</title>
   <para>
    By default &productname; comes with six active ttys.
   </para>
  </sect2>
 </sect1>
-->
<!--

Large page support
~~~~~~~~~~~~~~~~~~
    http://lwn.net/Articles/6969/
    http://linuxgazette.net/155/krishnakumar.html
    http://lifecs.likai.org/2009/01/uses-of-hugetlb.html



  - file descriptors:
    ulimit: default=unlimited??
    ulimit -a shows everything

  - speed of DNS requests
     start nscd (active by default)

  - adding swap on the fly
    swapon / swapoff

  - xrestop
    -> already in utilities

  - free disk space

  - s.m.a.r.t.

  - system load

  - Process priority and nice level

-ttys

-->
</chapter>
