<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="kernel_modules.xml" version="5.0" xml:id="cha-mod">
 <title>管理内核模块</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
   虽然 Linux 属于单内核，但可通过内核模块加以扩展。这些特殊对象可以插入到内核中，并可按需去除。就实际角度而言，内核模块使添加和去除内核本身未包含的驱动程序和接口成为现实。Linux 提供了若干用于管理内核模块的命令。
 </para>
 <sect1 xml:id="sec-mod-lsmod">
  <title>使用 lsmod 和 modinfo 列出装载的模块</title>
  <para>
    使用 <command>lsmod</command> 命令可查看目前装载了哪些内核模块。该命令的输出可能如下所示：
  </para>
  <screen><prompt>&gt; </prompt>lsmod
Module                  Size  Used by
snd_usb_audio         188416  2
snd_usbmidi_lib        36864  1 snd_usb_audio
hid_plantronics        16384  0
snd_rawmidi            36864  1 snd_usbmidi_lib
snd_seq_device         16384  1 snd_rawmidi
fuse                  106496  3
nfsv3                  45056  1
nfs_acl                16384  1 nfsv3</screen>
  <para>
    输出内容分为三列：<literal>Module</literal> 列列出所装载模块的名称，<literal>Size</literal> 列显示各模块的大小。<literal>Used by</literal> 列显示引用模块的进程数及其名称。请注意，此列表可能不完整。
  </para>
  <para>
    要查看有关特定内核模块的详细信息，请使用 <command>modinfo <replaceable>MODULE_NAME</replaceable></command> 命令。其中 <replaceable>MODULE_NAME</replaceable> 为所需内核模块的名称。请注意，<command>modinfo</command> 二进制文件位于用户的 PATH 环境变量中未包含的 <filename>/sbin</filename> 目录下。这意味着，当您以普通用户身份运行 <command>modinfo</command> 命令时，必须指定该二进制文件的完整路径：
  </para>
  <screen><prompt>&gt; </prompt>/sbin/modinfo kvm
filename:       /lib/modules/5.3.18-57-default/kernel/arch/x86/kvm/kvm.ko.xz
license:        GPL
author:         Qumranet
suserelease:    SLE15-SP3
srcversion:     3D8FBA9060D4537359A06FC
depends:        irqbypass
supported:      yes
retpoline:      Y
intree:         Y
name:           kvm
vermagic:       5.3.18-57-default SMP mod_unload modversions 
      </screen>
  </sect1>
  <sect1 xml:id="sec-mod-modprobe">
    <title>添加和去除内核模块</title>
    <para>
      虽然可以使用 <systemitem>insmod</systemitem> 和 <systemitem>rmmod</systemitem> 分别添加和去除内核模块，但建议使用 <systemitem>modprobe</systemitem> 工具来执行这些操作。<systemitem>modprobe</systemitem> 具有多项重要优势，包括自动解析依赖项和将内核模块列入黑名单。
    </para>
    <para>
      如果不指定任何参数，使用 <systemitem>modprobe</systemitem> 命令会安装指定的内核模块。必须使用 root 特权来运行 <systemitem>modprobe</systemitem>：
    </para>
    <screen><prompt>&gt; </prompt><command>sudo</command> modprobe acpi</screen>
    <para>
      要去除内核模块，请使用 <command>-r</command> 参数：
    </para>
    <screen><prompt>&gt; </prompt><command>sudo</command> modprobe -r acpi</screen>
    <sect2 xml:id="sec-mod-modprobe-d">
    <title>引导时自动装载内核模块</title>
    <para>
      您可以选择不手动装载内核模块，而是使用 <systemitem>system-modules-load.service</systemitem> 服务在引导过程中自动装载这些模块。要启用内核模块，请将 <filename>.conf</filename> 文件添加到 <filename>/etc/modules-load.d/</filename> 目录下。建议为配置文件指定与模块相同的名称，例如：</para>
    <screen>/etc/modules-load.d/rt2800usb.conf</screen>
    <para>
      配置文件中必须包含所需内核模块的名称（例如 <literal>rt2800usb</literal>）。
    </para>
    <para>
      通过上述的这个技巧，无需指定任何参数即可装载内核模块。如果您需要使用特定选项装载内核模块，请将配置文件添加到 <filename>/etc/modprobe.d/</filename> 目录下。该文件的扩展名必须为 <filename>.conf</filename>。文件名必须符合以下命名约定：<literal>priority-modulename.conf</literal>，例如：<filename>50-thinkfan.conf</filename>。配置文件中必须包含内核模块名称及所需参数。您可以使用以下示例命令来创建包含内核模块名称及其参数的配置文件：</para>
      <screen><prompt>&gt; </prompt>echo "options thinkpad_acpi fan_control=1" | sudo tee /etc/modprobe.d/thinkfan.conf</screen>

      <note>
        <title>装载内核模块</title>
        <para>
          当检测到设备或用户空间请求特定功能时，系统会自动装载大多数内核模块。因此，很少需要手动将模块添加到 <filename>/etc/modules-load.d/</filename>。
         </para>
        </note>

    </sect2>
    <sect2 xml:id="sec-mod-modprobe-blacklist">
    <title>使用 modprobe 将内核模块列入黑名单</title>
    <para>
      将某个内核模块列入黑名单后，引导期间便不再会装载该模块。当要禁用您怀疑可能导致系统出现问题的某个模块时，此功能十分有用。请注意，您仍可通过使用 <systemitem>insmod</systemitem> 或 <systemitem>modprobe</systemitem> 工具来手动装载列入黑名单的内核模块。
    </para>
    <para>
      要将模块列入黑名单，请创建包含以下内容的 <filename>/etc/modprobe.d/60-blacklist-<replaceable>MODULE_NAME</replaceable>.conf</filename> 文件：
    </para>
    <screen>blacklist <replaceable>MODULE_NAME</replaceable></screen>
    <para>
      以 root 身份运行 <command>dracut</command> 命令生成新的 <systemitem>initrd</systemitem> 映像，然后重引导计算机（将 <replaceable>NAME</replaceable> 替换为当前 initrd 的名称，将 <replaceable>KERNELVERSION</replaceable> 替换为当前运行的内核）：
    </para>
    <screen><prompt>&gt; </prompt>su
echo "blacklist nouveau" &gt;&gt; /etc/modprobe.d/60-blacklist-nouveau.conf
/usr/bin/dracut --logfile /var/log/YaST2/mkinitrd.log --force /boot/$initrd-<replaceable>NAME</replaceable> $<replaceable>KERNELVERSION</replaceable>
reboot</screen>
    <para>
      如果只想临时禁用内核模块，可在引导期间即时将其列入黑名单。要实现此目的，请在引导屏幕显示时按 <keycap>E</keycap> 键。这样，您会进入一个可供您修改引导参数的小编辑器。找到如下所示的行：
    </para>
    <screen>linux /boot/vmlinuz...splash= silent quiet showopts</screen>
    <para>
      在该行末尾添加 <command>modprobe.blacklist=<replaceable>MODULE_NAME</replaceable></command> 命令。例如：
    </para>
    <screen>linux /boot/vmlinuz...splash= silent quiet showopts modprobe.blacklist=nouveau</screen>
    <para>
      按 <keycap>F10</keycap> 或 <keycombo><keycap function="control"/><keycap>X</keycap></keycombo> 以按照指定配置引导。
    </para>
    <para>
      要通过 GRUB 将某个内核模块永久列入黑名单，请打开要编辑的 <filename>/etc/default/grub</filename> 文件，在 <command>GRUB_CMD_LINUX</command> 命令中添加 <command>modprobe.blacklist=<replaceable>MODULE_NAME</replaceable></command> 选项。然后运行 <command>sudo grub2-mkconfig -o /boot/grub2/grub.cfg</command> 命令使更改生效。
    </para>
    </sect2>
 </sect1>
</chapter>
