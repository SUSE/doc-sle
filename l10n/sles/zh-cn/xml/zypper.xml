<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="zypper.xml" version="5.0" xml:id="sec-zypper">
 <title>使用 Zypper</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <para>
  Zypper 是用于安装、更新和去除软件包的命令行软件包管理器。它还可管理软件源。这一点对于完成远程软件管理任务或从外壳脚本管理软件尤其有用。
 </para>

 <sect2 xml:id="sec-zypper-usage">
  <title>一般使用</title>
  <para>
   Zypper 的常用语法为：
  </para>
<screen>zypper <option>[--global-options]</option> <replaceable>COMMAND</replaceable> <option> [--command-options]</option> <option>[arguments]</option></screen>

  <para>
   不需要括在括号中的组件。有关常规选项和所有命令的列表，请参见 <command>zypper help</command>。要获取有关特定命令的帮助，请键入 <command>zypper help </command>
   <replaceable>命令</replaceable>。
  </para>
  <variablelist>
   <varlistentry>
    <term>Zypper 命令</term>
    <listitem>
     <para>
      执行 Zypper 最简单的方式是，键入其名称后跟一个命令。例如，要将所有需要的补丁应用于系统，请使用：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>全局选项</term>
    <listitem>
     <para>
      此外，您还可以选择使用一个或多个全局选项，只需在命令前面键入它们即可：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper --non-interactive patch</screen>
     <para>
      在上面的示例中，选项 <option>--non-interactive</option> 表示在不询问任何问题的情况下运行命令（自动应用默认回答）。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>命令特定的选项</term>
    <listitem>
     <para>
      要使用特定于某个命令的选项，请紧接在该命令后面键入这些选项：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --auto-agree-with-licenses</screen>
     <para>
      在上面的示例中，<option>--auto-agree-with-licenses</option> 用于将所有需要的补丁应用于系统，不要求您确认任何许可条款，而是自动接受许可条款。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>参数</term>
    <listitem>
     <para>
      某些命令需要一个或多个参数。例如，使用 <command>install</command> 命令时，需要指定您要<emphasis>安装</emphasis>的一个或多个软件包：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install mplayer</screen>
     <para>
      某些选项还需要单个参数。用以下命令可列出所有已知软件集：
     </para>
<screen><prompt>&gt; </prompt>zypper search -t pattern</screen>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   您可以组合上述所有软件集。例如，下面的命令将在详细模式下安装 <package>mc</package>factory<package>vim</package> 软件源中的 <literal> 和 </literal> 软件包：
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper -v install --from factory mc vim</screen>
  <para>
   <option>--from</option> 选项可在从指定软件源请求软件包时让所有软件源都处于启用状态（以解决任何依赖问题）。<option>--repo</option> 是 <option>--from</option> 的别名，您可以使用两者中的任何一个。
  </para>
  <para>
   多数 Zypper 命令都有 <literal>dry-run</literal> 选项，它模拟给定的命令。它可用于测试。
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper remove --dry-run MozillaFirefox</screen>
  <para>
   Zypper 支持 <option>--userdata <replaceable>字符串</replaceable></option>全局选项。您可以使用此选项指定一个将会写入 Zypper 的日志文件和插件（例如 Btrfs 插件）的字符串。它可以用于标记和标识日志文件中的事务。
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper --userdata <replaceable>STRING</replaceable> patch</screen>
 </sect2>

 <sect2 xml:id="sec-zypper-subcommands">
  <title>使用 Zypper 子命令</title>
  <para>
   Zypper 子命令是储存在 <option>zypper_execdir</option> 配置选项所指定的目录中的可执行文件。默认目录为 <filename>/usr/lib/zypper/commands</filename>。如果在该位置找不到某个子命令，Zypper 会自动在其余 $PATH 位置搜索该子命令。这样，您便可以创建自己的本地扩展并将其储存在用户空间中。
  </para>
  <para>
   不支持在 Zypper 外壳中执行子命令和使用全局 Zypper 选项。
  </para>
  <para>
   列出可用的子命令：
  </para>
<screen><prompt>&gt; </prompt>zypper help subcommand
[...]
Available zypper subcommands in '/usr/lib/zypper/commands'

  appstream-cache
  lifecycle
  migration
  search-packages

Zypper subcommands available from elsewhere on your $PATH

  log                   Zypper logfile reader
                            (/usr/sbin/zypper-log)
</screen>
  <para>
   查看子命令的帮助屏幕：
  </para>
<screen>
<prompt>&gt; </prompt>zypper help appstream-cache
</screen>
 </sect2>

 <sect2 xml:id="sec-zypper-softman">
  <title>使用 Zypper 安装和去除软件</title>
  <para>
   要安装或去除软件包，请使用以下命令：
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install <replaceable>PACKAGE_NAME</replaceable>
<prompt>&gt; </prompt><command>sudo</command> zypper remove <replaceable>PACKAGE_NAME</replaceable></screen>

  <warning>
   <title>不要去除必需的系统软件包</title>
   <para>
    不要去除必需的系统软件包，例如 <package>glibc</package> , <package>zypper</package> , <package>kernel</package> .如果去除这些包，系统可能会变得不稳定，或完全停止工作。
   </para>
  </warning>
  <sect3 xml:id="sec-zypper-selectpackage">
   <title>选择要安装或去除的软件包</title>
   <para>
    可以使用 <command>zypper install</command> 和 <command>zypper remove</command> 命令通过多种方法来找到软件包。
   </para>
   <variablelist>
    <varlistentry>
     <term>按确切的软件包名称</term>
     <listitem>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install MozillaFirefox</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>按确切的软件包名称和版本号</term>
     <listitem>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install MozillaFirefox-52.2</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>按软件源别名和软件包名称</term>
     <listitem>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install mozilla:MozillaFirefox</screen>
      <para>
       其中 <literal>mozilla</literal> 是用于安装的软件源别名。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>按使用通配符的软件包名称</term>
     <listitem>
      <para>
       您可以选择名称以特定字符串开头或结尾的所有软件包。使用通配符要小心，特别是去除软件包的时候。以下命令将安装名称以<quote>Moz</quote>开头的所有软件包：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install 'Moz*'</screen>
      <tip>
       <title>去除所有 <filename>-debuginfo</filename> 软件包</title>
       <para>
        在调试问题时，您有时需要临时安装大量的 <filename>-debuginfo</filename> 软件包，以获取有关正在运行的进程的详细信息。在调试会话完成后，如果您需要清理环境，请运行以下命令：
       </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper remove '*-debuginfo'</screen>
      </tip>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>按功能</term>
     <listitem>
      <para>
       例如，要安装不知道名称的软件包，这些功能就很有用。下面的命令将安装软件包 <package>MozillaFirefox</package>:
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install firefox</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>按功能、硬件体系结构或版本</term>
     <listitem>
      <para>
       可以结合功能指定硬件体系结构和版本：
      </para>
      <itemizedlist>
       <listitem>
        <para>
         所需硬件体系结构的名称需要追加在功能的后面，两者以句点分隔。例如，要指定 AMD64/Intel 64 体系结构（在 Zypper 中命名为 <literal>x86_64</literal>），请使用：
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install 'firefox.x86_64'</screen>
       </listitem>
       <listitem>
        <para>
         版本必须追加到字符串的末尾，并且前面必须带有一个运算符：<literal>&lt;</literal>（小于）、<literal>&lt;=</literal>（小于等于）、<literal>=</literal>（等于）、<literal>&gt;=</literal>（大于等于）或 <literal>&gt;</literal>（大于）。
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install 'firefox&gt;=74.2'</screen>
       </listitem>
       <listitem>
        <para>
         还可以指定硬件体系结构与版本组合要求：
        </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install 'firefox.x86_64&gt;=74.2'</screen>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>按 RPM 文件的路径</term>
     <listitem>
      <para>
       您还可以指定软件包的本地或远程路径：
      </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install /tmp/install/MozillaFirefox.rpm
<prompt>&gt; </prompt><command>sudo</command> zypper install http://download.example.com/MozillaFirefox.rpm</screen>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3 xml:id="sec-zypper-combineinstall">
   <title>同时安装和去除软件包</title>
   <para>
    要同时安装和去除软件包，请使用 <literal>+/-</literal> 修饰符。要安装 <package>emacs</package> 并同时去除 <package>vim</package>，请使用：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install emacs -vim</screen>
   <para>
    要去除 <package>emacs</package> 并同时安装 <package>vim</package>，请使用：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper remove emacs +vim</screen>
   <para>
    为避免 <literal>-</literal> 开头的软件包名称被解释为命令行选项，要始终把它用作第二个参数。如果做不到这点，在它之前加上 <literal>--</literal>：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install -emacs +vim       # Wrong
<prompt>&gt; </prompt><command>sudo</command> zypper install vim -emacs        # Correct
<prompt>&gt; </prompt><command>sudo</command> zypper install -- -emacs +vim    # Correct
<prompt>&gt; </prompt><command>sudo</command> zypper remove emacs +vim         # Correct</screen>
  </sect3>
  <sect3 xml:id="sec-zypper-clean">
   <title>清理已去除软件包的依赖项</title>
   <para>
    如果您想将在指定的软件包去除后不再需要的所有软件包（随指定的软件包）自动去除，请使用 <option>--clean-deps</option> 选项：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper rm --clean-deps <replaceable>PACKAGE_NAME</replaceable></screen>
  </sect3>
  <sect3 xml:id="sec-zypper-script">
   <title>在脚本中使用 Zypper</title>
   <para>
    默认情况下，在安装或删除选定软件包之前或发生问题时，Zypper 会要求确认。您可以使用 <option>--non-interactive</option> 选项覆盖此行为。必须在实际命令（<command>install</command>、<command>remove</command> 和 <command>patch</command>）的前面指定此选项，如下所示：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper <option>--non-interactive</option> install <replaceable>PACKAGE_NAME</replaceable></screen>
   <para>
    该选项允许在脚本和 cron 任务中使用 Zypper。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-softman-sources">
   <title>安装或下载源软件包</title>
   <para>
    要安装某个软件包的对应源软件包，请使用：
   </para>
<screen><prompt>&gt; </prompt>zypper source-install <replaceable>PACKAGE_NAME</replaceable></screen>
   <para>
    以 <systemitem class="username">root</systemitem> 身份执行时，源软件包的默认安装位置为 <filename>/usr/src/packages/</filename>；以用户身份运行时，则为 <filename>~/rpmbuild</filename>。可以在本地 <command>rpm</command> 配置中更改这些值。
   </para>
   <para>
    使用此命令还会安装指定软件包的版本依赖项。如果不想执行此操作，请添加开关 <literal>-D</literal>：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper source-install -D <replaceable>PACKAGE_NAME</replaceable></screen>
   <para>
    要只安装版本依赖项，请使用 <literal>-d</literal>。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper source-install -d <replaceable>PACKAGE_NAME</replaceable></screen>
   <para>
    当然，只有当软件源列表中启用了含有源软件包的软件源时，才能这样做（默认添加但不启用它）。请参见<xref linkend="sec-zypper-instrepo"/> 了解有关软件源管理的细节。
   </para>
   <para>
    可使用以下方法来获取软件源中所有源软件包的列表：
   </para>
<screen><prompt>&gt; </prompt>zypper search -t srcpackage</screen>
   <para>
    您也可以将所有已安装软件包的源软件包下载到本地目录。要下载源软件包，请使用：
   </para>
<screen><prompt>&gt; </prompt>zypper source-download</screen>
   <para>
    默认的下载目录是 <filename>/var/cache/zypper/source-download</filename>。您可以使用 <option>--directory</option> 选项更改下载目录。若只想显示缺失或多余的软件包而不进行下载或删除任何内容，请使用 <option>--status</option> 选项。要删除多余的源软件包，请使用 <option>--delete</option> 选项。要禁用删除，请使用 <option>--no-delete</option> 选项。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-softman-pluscontent">
   <title>从禁用的软件源安装软件包</title>
   <para>
    通常，您只能安装或刷新来自启用的软件源的软件包。<option>--plus-content <replaceable>标记</replaceable></option>选项可帮助您指定要刷新的、要在当前 Zypper 会话期间暂时启用的，以及要在会话完成后禁用的软件源。
   </para>
   <para>
    例如，要启用可以提供其他 <filename>-debuginfo</filename> 或 <filename>-debugsource</filename> 软件包的软件源，请使用 <option>--plus-content debug</option>。可以多次指定此选项。
   </para>
   <para>
    要暂时启用此类“调试”软件源以安装特定的 <filename>-debuginfo</filename> 软件包，请按如下所示使用该选项：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper --plus-content debug \
   install "debuginfo(build-id)=eb844a5c20c70a59fc693cd1061f851fb7d046f4"</screen>
   <para>
    对于缺少的 debuginfo 软件包，<command>gdb</command> 将会报告 <literal>build-id</literal> 字符串。
   </para>
   <note>
    <title>已禁用安装媒体</title>
    <para>
     <remark>cwickert 2019-04-18: JSC#SLE-3191</remark>
      仍会配置 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 安装媒体中的软件源，但成功安装后会禁用这些软件源。您可以使用 <option>--plus-content</option> 选项从安装媒体而不是联机软件源安装软件包。在调用 <command>zypper</command> 之前，请确保该媒体可用，例如，将 DVD 插入计算机的光驱中。
    </para>
   </note>
  </sect3>
  <sect3 xml:id="sec-zypper-softman-util">
   <title>实用程序</title>
   <para>
    要校验所有依赖项是否仍然满足，并修复缺少的依赖项，请使用：
   </para>
<screen><prompt>&gt; </prompt>zypper verify</screen>
   <para>
    除了依赖项必须满足外，某些软件包还<quote>推荐</quote>其他软件包。只有在实际可用并可安装时才会安装这些推荐软件包。如果推荐的软件包在推荐它们的软件包已安装（通过添加其他软件包或硬件）之后才可用，请使用以下命令：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper install-new-recommends</screen>
   <para>
    此命令在插入网络摄像头或 Wi-Fi 设备后非常有用。如果可用，它将安装设备驱动程序和相关软件。只有在满足特定硬件依赖项后，才可安装驱动程序和相关软件。
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="sec-zypper-softup">
  <title>使用 Zypper 更新软件</title>
  <para>
   用 Zypper 更新软件有三种方式：安装软件包、安装软件包的新版本或更新整个分发包。最后一种方式可通过 <command>zypper dist-upgrade</command> 来实现。<phrase role="productname"><phrase os="sles">中介绍了如何升级 </phrase></phrase>SUSE Linux Enterprise Server<phrase os="sles;sled"><xref linkend="cha-upgrade-paths"/></phrase>。
  </para>
  <sect3 xml:id="sec-zypper-softup-patch">
   <title>安装全部所需的补丁</title>
   <para>
    要安装已安装软件包的新版本，最可靠的方式是<emphasis>增补</emphasis> SUSE Linux Enterprise。这种方式可保证安装版本正确的所有必需软件包，并确保忽略被视为<emphasis>冲突</emphasis>的软件包版本。
   </para>
   <para>
    要安装所有适用于您系统的正式发布的补丁，请运行：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch</screen>
   <para>
    系统将会检查您计算机上配置的软件源中提供的所有补丁是否与您的安装相关。如果相关（未分为<literal>可选</literal>或<literal>功能</literal>类别），则会立即安装这些补丁。如果 <command>zypper patch</command> 成功，便可确保不会安装带漏洞版本的软件包，除非您确认该例外。<phrase os="sles;sled">请注意，正式的更新软件源仅在注册 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 安装后才可用。</phrase>
   </para>
   <para>
    如果即将安装的补丁所包含的更改要求重引导系统，您会在重引导前收到警告。
   </para>
   <para>
    单纯使用 <command>zypper patch</command> 命令不会应用来自第三方软件源的软件包。要同时更新第三方软件源，请使用 <literal>with-update</literal> 命令选项，如下所示：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --with-update</screen>
   <para>
    要额外安装可选补丁，请使用：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --with-optional</screen>
   <remark>
    The structure here is a bit unfortunate: We explain how to use the
    --cve/--bugzilla options in more detail below ("Listing Patches").
    However, the first bit people get is the very brief intro immediately below.
    Not sure whether to replicate all the information from "Listing Patches"
    here.
    - sknorr, 2016-04-25
   </remark>
   <para>
    要安装与特定 Bugzilla 问题相关的所有补丁，请使用：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --bugzilla=<replaceable>NUMBER</replaceable></screen>
   <para>
    要安装与特定 CVE 数据库项相关的所有补丁，请使用：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --cve=<replaceable>NUMBER</replaceable></screen>
   <para>
    例如，要安装 CVE 编号为 <literal>CVE-2010-2713</literal> 的安全补丁，请执行：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --cve=CVE-2010-2713</screen>
   <para>
    如果只想安装影响 Zypper 和软件包管理本身的补丁，请使用：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper patch --updatestack-only</screen>
   <para>
    请记住，如果您使用了 <literal>updatestack-only</literal> 命令选项，将会丢弃原本还会更新其他软件源的其他命令选项。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-softup-listpatch">
   <title>列出补丁</title>
   <para>
    为了让您确定补丁是否可用，Zypper 允许您查看以下信息：
   </para>
   <variablelist>
    <varlistentry>
     <term>所需补丁的数目</term>
     <listitem>
      <para>
       要列出所需补丁（适用于您的系统但尚未安装的补丁）的数目，请使用 <command>patch-check</command>：
      </para>
<screen><prompt>&gt; </prompt>zypper patch-check
Loading repository data...
Reading installed packages...
5 patches needed (1 security patch)</screen>
      <para>
       可以结合 <option>--updatestack-only</option> 选项使用此命令，以便仅列出影响 Zypper 和软件包管理本身的补丁。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>所需补丁的列表</term>
     <listitem>
      <para>
       要列出全部所需的补丁（适用于您的系统但尚未安装的补丁），请使用 <command>zypper list-patches</command>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>所有补丁的列表</term>
     <listitem>
      <para>
       要列出 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 可用的所有补丁，而不管它们是否已安装或适用于您的安装，请使用 <command>zypper patches</command>。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    还可以列出并安装与特定问题相关的补丁。要列出特定的补丁，请使用带以下选项的 <command>zypper list-patches</command> 命令：
   </para>
   <variablelist>
    <varlistentry>
     <term>按 Bugzilla 问题</term>
     <listitem>
      <para>
       要列出与 Bugzilla 问题相关的全部所需补丁，请使用 <option>--bugzilla</option> 选项。
      </para>
      <para>
       要列出针对特定 Bug 的补丁，您也可以指定 Bug 编号：<option>--bugzilla=<replaceable>编号</replaceable></option>。要搜索与多个 Bugzilla 问题相关的补丁，请在 bug 编号之间添加逗号，例如：
      </para>
<screen><prompt>&gt; </prompt>zypper list-patches --bugzilla=972197,956917</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>按 CVE 编号</term>
     <listitem>
      <para>
       要列出与 CVE（公共漏洞和披露）数据库中某个项相关的全部所需补丁，请使用 <option>--cve</option> 选项。
      </para>
      <para>
       要列出针对特定 CVE 数据库项的补丁，您也可以指定 CVE 编号：<option>--cve=<replaceable>编号</replaceable></option>。要搜索与多个 CVE 数据库项相关的补丁，请在 CVE 编号之间添加逗号，例如：
      </para>
<screen><prompt>&gt; </prompt>zypper list-patches --cve=CVE-2016-2315,CVE-2016-2324</screen>
     </listitem>
     </varlistentry>
     <varlistentry>
      <term>列出已撤回的补丁</term>
      <listitem>
        <para>
          在 SUSE Linux Enterprise 15 代码流中，一些补丁可自动撤回。维护更新会经过仔细测试，因为更新有可能包含新的 Bug。如果发现某个补丁包含 Bug，将会发布一个新的更新（版本号更高）以还原有 Bug 的更新，并会阻止再次安装有 Bug 的更新。您可以使用 <command>zypper</command> 列出已撤回的补丁：
        </para>
        <screen><prompt>&gt; </prompt><command>zypper lp --all |grep retracted</command>
SLE-Module-Basesystem15-SP3-Updates | SUSE-SLE-Module-Basesystem-15-SP3-2021-1965 
 | recommended | important | ---    | retracted  | Recommended update for multipath-tools 
SLE-Module-Basesystem15-SP3-Updates | SUSE-SLE-Module-Basesystem-15-SP3-2021-2689 
 | security    | important | ---    | retracted  | Security update for cpio
SLE-Module-Basesystem15-SP3-Updates | SUSE-SLE-Module-Basesystem-15-SP3-2021-3655 
 | security    | important | reboot | retracted  | Security update for the Linux Kernel</screen> 
        <para>
          查看有关已撤回（或任何）补丁的完整信息：
        </para>
        <screen><prompt>&gt; </prompt><command>zypper patch-info SUSE-SLE-Product-SLES-15-2021-2689</command>
Loading repository data...
Reading installed packages...

Information for patch SUSE-SLE-Product-SLES-15-2021-2689:
---------------------------------------------------------
Repository  : SLE-Product-SLES15-LTSS-Updates
Name        : SUSE-SLE-Product-SLES-15-2021-2689
Version     : 1
Arch        : noarch
Vendor      : maint-coord@suse.de
Status      : retracted
Category    : security
Severity    : important
Created On  : Mon 16 Aug 2021 03:44:00 AM PDT
Interactive : ---
Summary     : Security update for cpio
Description : 
    This update for cpio fixes the following issues:

    It was possible to trigger Remote code execution due to a integer overflow 
    (CVE-2021-38185, bsc#1189206)

    UPDATE:
    This update was buggy and could lead to hangs, so it has been retracted. 
    There will be a follow up update.
    [...]</screen>   
      </listitem>
     </varlistentry>
     <varlistentry>
       <term>具有冲突软件包的补丁</term>
       <listitem>
<screen>
Information for patch openSUSE-SLE-15.3-2022-333:
-------------------------------------------------
Repository  : Update repository with updates from SUSE Linux Enterprise 15
Name        : openSUSE-SLE-15.3-2022-333
Version     : 1
Arch        : noarch
Vendor      : maint-coord@suse.de
Status      : needed
Category    : security
Severity    : important
Created On  : Fri Feb  4 09:30:32 2022
Interactive : reboot
Summary     : Security update for xen
Description :
    This update for xen fixes the following issues:

    - CVE-2022-23033: Fixed guest_physmap_remove_page not removing the p2m mappings. (XSA-393) (bsc#1194576)
    - CVE-2022-23034: Fixed possible DoS by a PV guest Xen while unmapping a grant. (XSA-394) (bsc#1194581)
    - CVE-2022-23035: Fixed insufficient cleanup of passed-through device IRQs. (XSA-395) (bsc#1194588)
Provides    : patch:openSUSE-SLE-15.3-2022-333 = 1
Conflicts   : [22]
    xen.src &lt; 4.14.3_06-150300.3.18.2
    xen.noarch &lt; 4.14.3_06-150300.3.18.2
    xen.x86_64 &lt; 4.14.3_06-150300.3.18.2
    xen-devel.x86_64 &lt; 4.14.3_06-150300.3.18.2
    xen-devel.noarch &lt; 4.14.3_06-150300.3.18.2
[...]
</screen>
        <para>
         上面的补丁与 22 个软件包的受影响或带漏洞版本冲突。如果安装了这些受影响或带漏洞软件包中的任何一个，将会触发冲突，并且补丁会划分为<emphasis>需要</emphasis>类别。<command>zypper patch</command> 会尝试安装所有可用的补丁。如果遇到问题，它会报告这些问题，以告知您并非所有更新都已安装。可以通过更新受影响或带漏洞软件包或者去除这些软件包来解决冲突。由于 SUSE 更新软件源也提供固定的软件包，因此更新是解决冲突的标准方法。例如，如果由于依赖关系问题或软件包锁定而无法更新软件包，则会在用户批准后将其删除。
        </para>
       </listitem>
      </varlistentry>
    </variablelist>
   <para>
    要列出所有补丁而不管是否需要安装它们，请另外使用 <option>--all</option> 选项。例如，要列出指派有 CVE 编号的所有补丁，请使用：
   </para>
<screen><?dbsuse-fo font-size="0.70em"?>
<prompt>&gt; </prompt>zypper list-patches --all --cve
Issue | No.           | Patch             | Category    | Severity  | Status
------+---------------+-------------------+-------------+-----------+----------
cve   | CVE-2019-0287 | SUSE-SLE-Module.. | recommended | moderate  | needed
cve   | CVE-2019-3566 | SUSE-SLE-SERVER.. | recommended | moderate  | not needed
[...]</screen>
  </sect3>
  <sect3 xml:id="sec-zypper-softup-update">
   <title>安装新的软件包版本</title>
   <para>
    如果某个安装源只包含新软件包，但未提供补丁，则 <command>zypper patch</command> 不会产生任何作用。要将所有已安装的软件包更新为较新的可用版本，请使用以下命令：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper update</screen>
<important>
 <para>
  <command>zypper update</command> 会忽略有问题的软件包。例如，如果某个软件包被锁定，即使该软件包有更高的版本可用，<command>zypper update</command> 也会忽略该软件包。相反，如果软件包被视为带漏洞，<command>zypper patch</command> 会报告冲突。
 </para>
</important>
   <para>
    要更新个别软件包，请用更新或安装命令指定软件包：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper update <replaceable>PACKAGE_NAME</replaceable>
<prompt>&gt; </prompt><command>sudo</command> zypper install <replaceable>PACKAGE_NAME</replaceable></screen>
   <para>
    可使用此命令来获取所有新的可安装软件包的列表：
   </para>
<screen><prompt>&gt; </prompt>zypper list-updates</screen>
   <para>
    请注意，此命令只会列出符合以下准则的软件包：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      与已安装的软件包拥有相同的供应商，
     </para>
    </listitem>
    <listitem>
     <para>
      由至少与已安装软件包拥有相同优先级的软件源提供，
     </para>
    </listitem>
    <listitem>
     <para>
      可安装（满足所有依赖项）。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    <emphasis>所有</emphasis>新的可用软件包（无论是否可安装）的列表可通过以下方式获取：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper list-updates --all</screen>
   <para>
    要找出新软件包无法安装的原因，请使用上面所述的 <command>zypper install</command> 或 <command>zypper update</command> 命令。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-softup-orphaned">
   <title>识别孤立的软件包</title>
   <para>
    每当您从 Zypper 中去除某个软件源或者升级系统时，某些软件包可能会进入<quote>孤立</quote>状态。这些<emphasis>孤立的</emphasis>软件包不再属于任何活动软件源。以下命令可以列出这些软件包：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper packages --orphaned</screen>
   <para>
    借助此列表，您可以确定是否仍然需要某个软件包，或者是否可以安全去除某个软件包。
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="sec-zypper-ps">
  <title>识别使用已删除文件的进程和服务</title>
  <para>
   在增补、更新或去除软件包时，系统上可能有一些正在运行的进程仍在使用已被更新或去除操作删除的文件。运行 <command>zypper ps</command> 可以列出使用已删除文件的进程。如果此类进程属于某个已知的服务，则会列出服务名称，方便您重启动该服务。默认情况下，<command>zypper ps</command> 会显示一个表：
  </para>
<screen><?dbsuse-fo font-size="0.70em"?>
<prompt>&gt; </prompt>zypper ps
PID   | PPID | UID | User  | Command      | Service      | Files
------+------+-----+-------+--------------+--------------+-------------------
814   | 1    | 481 | avahi | avahi-daemon | avahi-daemon | /lib64/ld-2.19.s-&gt;
      |      |     |       |              |              | /lib64/libdl-2.1-&gt;
      |      |     |       |              |              | /lib64/libpthrea-&gt;
      |      |     |       |              |              | /lib64/libc-2.19-&gt;
[...]</screen>
  <simplelist><member><emphasis role="bold">PID</emphasis>：进程 ID
   </member><member><emphasis role="bold">PPID</emphasis>：父进程 ID
   </member><member><emphasis role="bold">UID</emphasis>：运行进程的用户的 ID
   </member><member><emphasis role="bold">登录</emphasis>：运行进程的用户的登录名
   </member><member><emphasis role="bold">命令</emphasis>：用于执行进程的命令
   </member><member><emphasis role="bold">服务</emphasis>：服务名称（仅当命令与系统服务关联时）
   </member><member><emphasis role="bold">文件</emphasis>：已删除文件的列表
   </member>
  </simplelist>
  <para>
   通过如下方式可控制 <command>zypper ps</command> 的输出格式：
  </para>
  <variablelist>
   <varlistentry>
    <term><command>zypper ps</command><option>-s</option></term>
    <listitem>
     <para>
      创建一份简短表格，其中不会显示已删除的文件。
     </para>
<screen><?dbsuse-fo font-size="0.70em"?>
<prompt>&gt; </prompt>zypper ps -s
PID   | PPID | UID  | User    | Command      | Service
------+------+------+---------+--------------+--------------
814   | 1    | 481  | avahi   | avahi-daemon | avahi-daemon
817   | 1    | 0    | root    | irqbalance   | irqbalance
1567  | 1    | 0    | root    | sshd         | sshd
1761  | 1    | 0    | root    | master       | postfix
1764  | 1761 | 51   | postfix | pickup       | postfix
1765  | 1761 | 51   | postfix | qmgr         | postfix
2031  | 2027 | 1000 | tux     | bash         |</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>zypper ps</command><option>-ss</option></term>
    <listitem>
     <para>
      仅显示与系统服务关联的进程。
     </para>
<screen>PID   | PPID | UID  | User    | Command      | Service
------+------+------+---------+--------------+--------------
814   | 1    | 481  | avahi   | avahi-daemon | avahi-daemon
817   | 1    | 0    | root    | irqbalance   | irqbalance
1567  | 1    | 0    | root    | sshd         | sshd
1761  | 1    | 0    | root    | master       | postfix
1764  | 1761 | 51   | postfix | pickup       | postfix
1765  | 1761 | 51   | postfix | qmgr         | postfix</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>zypper ps</command><option>-sss</option></term>
    <listitem>
     <para>
      仅显示使用已删除文件的系统服务。
     </para>
<screen>avahi-daemon
irqbalance
postfix
sshd</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>zypper ps</command><option>--print &quot;systemctl status %s&quot;</option></term>
    <listitem>
     <para>
      显示用于检索可能需要重启动的服务状态信息的命令。
     </para>
<screen>systemctl status avahi-daemon
systemctl status irqbalance
systemctl status postfix
systemctl status sshd</screen>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   有关服务处理的详细信息，请参见<xref linkend="cha-systemd"/>。
  </para>
 </sect2>


 <sect2 xml:id="sec-zypper-instrepo">
  <title>使用 Zypper 管理软件源</title>
  <para>
   Zypper 的所有安装或补丁命令均基于已知软件源列表。要列出系统已知的所有软件源，请使用命令：
  </para>
<screen><prompt>&gt; </prompt>zypper repos</screen>
  <para>
   结果将类似于与以下输出：
  </para>
  <example xml:id="ex-zypper-repos">
   <title>Zypper — 已知软件源的列表</title>
<screen os="sles;sled"><prompt>&gt; </prompt>zypper repos
# | Alias        | Name          | Enabled | Refresh
--+--------------+---------------+---------+--------
1 | SLEHA-15-GEO | SLEHA-15-GEO  | Yes     | No
2 | SLEHA-15     | SLEHA-15      | Yes     | No
3 | SLES15       | SLES15        | Yes     | No</screen>

  </example>
  <para>
   当在各个命令中指定软件源时，可以使用别名、URI 或 <command>zypper repos</command> 命令输出中的软件源编号。软件源别名是用于软件源处理命令中的软件源名称的简短版本。请注意，在修改软件源列表后，软件源编号可能会更改。别名本身不会更改。
  </para>
  <para>
   默认情况下不显示软件源的 URI 或优先级之类的细节。用以下命令可以列出所有细节：
  </para>
<screen><prompt>&gt; </prompt>zypper repos -d</screen>
  <sect3 xml:id="sec-zypper-instrepo-add">
   <title>添加软件源</title>
   <para>
    要添加软件源，请运行
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper addrepo <replaceable>URI</replaceable> <replaceable>ALIAS</replaceable></screen>
   <para>
    <replaceable>URI</replaceable> 可以是互联网软件源、网络资源、目录、CD 或 DVD（有关细节请参见 <link xlink:href="https://en.opensuse.org/openSUSE:Libzypp_URIs"/>）。<replaceable>ALIAS</replaceable> 是软件源的唯一简写标识符。您可以随意选择别名，前提是它必须唯一。如果指定的别名已在使用，Zypper 将发出警告。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-instrepo-refresh">
   <title>刷新软件源</title>
   <para>
    <command>zypper</command> 可让您从配置的软件源中提取软件包的更改。要提取更改，请运行：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper refresh</screen>
   <note>
    <title><command>zypper</command> 的默认行为</title>
    <para>
     有些命令默认会自动执行 <command>refresh</command>，因此您不需要明确运行该命令。
    </para>
   </note>
   <para>
    使用 <command>refresh</command> 命令时搭配 <literal>--plus-content</literal> 选项还可查看已禁用软件源中的更改：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper --plus-content refresh</screen>
   <para>
    该选项虽然会提取软件源中的更改，但会使禁用软件源的状态保持不变，即仍为禁用。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-instrepo-rm">
   <title>去除软件源</title>
   <para>
    要从列表中去除某个软件源，请将命令 <command>zypper removerepo</command> 与要删除的软件源的别名或编号结合使用。例如，要从<xref linkend="ex-zypper-repos"/>中去除软件源 <literal os="sles;sled">SLEHA-12-GEO</literal>，请使用下列命令之一：
   </para>
<screen os="sles;sled"><prompt>&gt; </prompt><command>sudo</command> zypper removerepo 1
<prompt>&gt; </prompt><command>sudo</command> zypper removerepo "SLEHA-12-GEO"</screen>

  </sect3>
  <sect3 xml:id="sec-zypper-instrepo-mofify">
   <title>修改软件源</title>
   <para>
    用 <command>zypper modifyrepo</command> 启用或禁用软件源。您还可以用该命令更改软件源的属性（例如刷新行为、名称或优先级）。以下命令将会启用名为 <literal>updates</literal> 的软件源、打开自动刷新并将其优先级设置为 20：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper modifyrepo -er -p 20 'updates'</screen>
   <para>
    修改软件源并不局限于单个软件源 — 您也可以对组执行该操作：
   </para>
   <simplelist><member><option>-a</option>：所有软件源</member><member><option>-l</option>：本地软件源</member><member><option>-t</option>：远程软件源</member><member><option>-m <replaceable>TYPE</replaceable></option>：特定类型的软件源（其中 <replaceable>TYPE</replaceable> 可以是以下之一：<literal>http</literal>、<literal>https</literal>、<literal>ftp</literal>、<literal>cd</literal>、<literal>dvd</literal>、<literal>dir</literal>、<literal>file</literal>、<literal>cifs</literal>、<literal>smb</literal>、<literal>nfs</literal>、<literal>hd</literal>、<literal>iso</literal>） </member>
   </simplelist>
   <para>
    要重命名安装源别名，请使用 <literal>renamerepo</literal> 命令。以下示例将别名从 <literal>Mozilla Firefox</literal> 更改为 <literal>firefox</literal>：
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper renamerepo 'Mozilla Firefox' firefox</screen>
  </sect3>
 </sect2>

 <sect2 xml:id="sec-zypper-query">
  <title>使用 Zypper 查询软件源和软件包</title>
  <para>
   Zypper 提供各种查询软件源或软件包的方式。要获取所有可用的产品、软件集、软件包或补丁的列表，请使用以下命令：
  </para>
<screen><prompt>&gt; </prompt>zypper products
<prompt>&gt; </prompt>zypper patterns
<prompt>&gt; </prompt>zypper packages
<prompt>&gt; </prompt>zypper patches</screen>
  <para>
   要查询特定软件包的所有软件源，请使用 <literal>search</literal>。要获得有关特定软件包的信息，请使用 <literal>info</literal> 命令。
  </para>
  <sect3 xml:id="sec-zypper-query-search">
   <title>搜索软件</title>
   <para>
    <command>zypper search</command> 命令可对软件包名或（视情况）对软件包摘要和说明执行搜索。括在 <literal>/</literal> 中的字符串会解译为正则表达式。默认情况下搜索不区分大小写。
   </para>
   <variablelist>
    <varlistentry>
     <term>执行简单搜索来查找包含 <literal>fire</literal> 的软件包名称</term>
     <listitem>
<screen><prompt>&gt; </prompt>zypper search "fire"</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>执行简单搜索来查找确切的软件包 <literal>MozillaFirefox</literal></term>
     <listitem>
<screen><prompt>&gt; </prompt>zypper search --match-exact "MozillaFirefox"</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>同时在软件包描述和摘要中搜索</term>
     <listitem>
<screen><prompt>&gt; </prompt>zypper search -d fire</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>仅显示尚未安装的软件包</term>
     <listitem>
<screen><prompt>&gt; </prompt>zypper search -u fire</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>显示包含字符串 <literal>fir</literal> 且该字符串后面不是 <literal>e</literal> 的软件包</term>
     <listitem>
<screen><prompt>&gt; </prompt>zypper se "/fir[^e]/"</screen>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect3>
  <sect3 xml:id="sec-zypper-query-search-packages" os="sles;sled">
   <title>在所有 SLE 模块中搜索软件包</title>
   <para>
    要搜索当前已启用的 SLE 模块内部和外部的软件包，请使用 <command>search-packages</command> 子命令。此命令会联系 SUSE Customer Center，并在所有模块中搜索匹配的软件包，例如：
   </para>
<screen><prompt>&gt; </prompt>zypper search-packages <replaceable>package1</replaceable> <replaceable>package2</replaceable></screen>
   <para>
    <command>zypper search-packages</command> 提供以下选项：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      搜索与您的搜索字符串完全匹配的软件包：<option>-x</option>、<option>--match-exact</option>
     </para>
    </listitem>
    <listitem>
     <para>
      按模块对结果进行分组（默认：按软件包分组）：<option>-g、</option> <option>--group-by-module</option>
     </para>
    </listitem>
    <listitem>
     <para>
      显示有关软件包的更多详细信息：<option>-d</option>、<option>--details</option>
     </para>
    </listitem>
    <listitem>
     <para>
      以 XML 格式输出搜索结果：<option>--xmlout</option>
     </para>
    </listitem>
   </itemizedlist>
  </sect3>
  <sect3 xml:id="sec-zypper-query-what-provides">
   <title>搜索特定功能</title>
   <para>
    要搜索提供特殊功能的软件包，请使用命令 <literal>what-provides</literal>。例如，如果您想知道哪个软件包提供 Perl 模块 <literal>SVN::Core</literal>，请使用以下命令：
   </para>
<screen><prompt>&gt; </prompt>zypper what-provides 'perl(SVN::Core)'</screen>
   <para>
    <literal>what-provides <replaceable>软件包名</replaceable></literal>与 <command>rpm -q --whatprovides</command>
    <replaceable> 软件包名</replaceable>类似，不过 RPM 只能查询 RPM 数据库（即所有已安装的软件包的数据库）。另一方面，Zypper 将告诉您任意软件源的功能的提供商，而非仅已安装的软件源功能的提供商。
   </para>
  </sect3>
  <sect3 xml:id="sec-zypper-query-info">
   <title>显示软件包信息</title>
   <para>
    要查询个别软件包，请使用 <command>info</command> 命令，并用完整软件包名称作为参数。这会显示有关某个软件包的详细信息。如果软件包名与软件源中的所有软件包名都不匹配，该命令会输出非软件包匹配项的详细信息。如果您请求特定类型（通过使用 <literal>-t</literal> 选项），但该类型不存在，该命令会输出其他可用的匹配项，但不提供详细信息。
   </para>
   <para>
    如果您指定源软件包，该命令会显示基于该源软件包构建的二进制软件包。如果您指定二进制软件包，该命令会输出用来构建该二进制软件包的源软件包。
   </para>
   <para>
    如果还要显示该软件包必需/推荐的软件包，则使用选项 <option>--requires</option> 和 <option>--recommends</option>：
   </para>
<screen><prompt>&gt; </prompt>zypper info --requires MozillaFirefox</screen>
  </sect3>
 </sect2>

 <sect2 xml:id="sec-zypper-lifecycle" os="sles;sled">
  <title>显示生命周期信息</title>
  <para>
   SUSE 产品的支持周期一般为 10 年。通常，您可以使用 SUSE 的延长支持产品将标准生命周期延长三年。根据您的产品，在 <link xlink:href="https://www.suse.com/lifecycle"/> 中找到具体的支持生命周期。
  </para>
  <para>
   要检查您的产品和所支持软件包的生命周期，请如下所示使用 <command>zypper lifecycle</command> 命令：
  </para>
<screen><prompt role="root"># </prompt><command>zypper lifecycle</command>
    Product end of support
Codestream: SUSE Linux Enterprise Server 15             2028-07-31
    Product: SUSE Linux Enterprise Server 15 SP3        n/a*

Module end of support
Basesystem Module                                       n/a*
Desktop Applications Module                             n/a*
Server Applications Module                              n/a*

Package end of support if different from product:
autofs                                   Now, installed 5.1.3-7.3.1, update available 5.1.3-7.6.1
</screen>
 </sect2>

 <sect2 xml:id="sec-zypper-configure">
  <title>配置 Zypper</title>
  <para>
   Zypper 现在随附配置文件，允许您永久更改 Zypper 的行为（系统范围或用户特定）。要进行系统范围更改，请编辑 <filename>/etc/zypp/zypper.conf</filename>。要进行用户特定的更改，请编辑 <filename>~/.zypper.conf</filename>。如果 <filename>~/.zypper.conf</filename> 尚不存在，您可以使用 <filename>/etc/zypp/zypper.conf</filename> 作为模板：将其复制到 <filename>~/.zypper.conf</filename> 并根据您的喜好进行调整。请参见文件中的注释，获取有关可用选项的帮助。
  </para>
 </sect2>

 <sect2 xml:id="sec-zypper-trouble">
  <title>查错</title>
  <para>
   如果您在访问配置的软件源中的软件包时遇到问题（例如，尽管您知道某个软件包在某个软件源中，但 Zypper 找不到该软件包），刷新软件源或许可以解决问题：
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper refresh</screen>
  <para>
   如果不起作用，则尝试
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper refresh -fdb</screen>
  <para>
   这会强制完全刷新和重构建数据库，包括强制下载原始元数据。
  </para>
 </sect2>

 <sect2 xml:id="sec-zypper-rollback">
  <title>Btrfs 文件系统上的 Zypper 回滚功能</title>
  <para>
   如果根分区上使用的是 Btrfs 文件系统，且系统中安装了 <command>snapper</command>，当 Zypper 提交对文件系统所做的更改以创建相应的文件系统快照时，会自动调用 <command>snapper</command>。这些快照可用于还原 Zypper 进行的任何更改。有关更多信息，请参见<xref linkend="cha-snapper"/>。
  </para>
 </sect2>

 <sect2 xml:id="sec-zypper-more">
  <title>更多信息</title>
  <para>
   有关从命令行管理软件的详细信息，请输入 <command>zypper help</command>、<command>zypper help </command>
   <replaceable>命令</replaceable>，或参见 <command>zypper(8)</command> 手册页。有关详尽的命令参考、最重要的命令的<literal>速查表</literal>，以及如何在脚本和应用程序中使用 Zypper 的信息，请参见 <link xlink:href="https://en.opensuse.org/SDB:Zypper_usage"/>。最新 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 版本的软件更改列表可在 <link xlink:href="https://en.opensuse.org/openSUSE:Zypper_versions"/> 中找到。
  </para>
 </sect2>
</sect1>
