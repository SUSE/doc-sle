<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<!--
  TODO for 11.2: Maybe add csync utility into this chapter?

  Add section about csync (http://www.csync.org) from Andreas Schneider (anschneider)
  First announced at opensuse-announce mailinglist 08. January 2008 by Zonker.

  From the announcement:
  »[...] As mobile computing becomes more and more important, file
  synchronization is more important than ever. Our jobs often require
  working not only on multiple computers, but in multiple locations, and
  disconnected from our networks. To help solve this problem, we need
  effective strategies for replication of user data and files.

  csync is a bidirectional file synchronizer for Linux and allows to
  keep two copies of files and directories in sync. It uses uses widely
  adopted protocols like smb or sftp so that there is no need for a
  server component of csync. It is a user-level program which means
  there is no need to be a superuser. With pam_csync it is possible to
  create roaming home directories.
  [...]«

-->
<chapter version="5.0" xml:id="cha.net.sync"
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>File Copying and Synchronization with RSync and CSync</title>
 <info>
  <abstract>
   <para>
    These days, many people use several computers&mdash;one computer at home,
    one or several computers at the workplace, and possibly a laptop, tablet,
    or a smartphone on the road. Many files are needed on all these computers.
    You should be able to work with all computers and modify the files so that
    you have the latest version of the data available on all computers.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <!--<sect1 xml:id="sec.net.sync.soft">
  <title>Available Data Synchronization Software</title>

  <para>
   Data synchronization is no problem for computers that are permanently linked
   by means of a fast network. In this case, use a network file system, like
   NFS, and store the files on a server, enabling all hosts to access the same
   data via the network. This approach is impossible if the network connection
   is poor or not permanent. When you are on the road with a laptop, copies of
   all needed files must be on the local hard disk. However, it is then
   necessary to synchronize modified files. When you modify a file on one
   computer, make sure a copy of the file is updated on all other computers.
   For occasional copies, this can be done manually with <command>scp</command>
   or <command>rsync</command>. However,
   if many files are involved, the procedure can be complicated and requires
   great care to avoid errors, such as overwriting a new file with an old file.
  </para>

  <para>
   The time-consuming and error-prone task of manually synchronizing data can
   be avoided by using one of the programs that use various methods to automate
   this job. The following summaries are merely intended to convey a general
   understanding of how these programs work and how they can be used. If you
   plan to use them, read the program documentation.
  </para>

  <!-\-<para>
<!-\\- http://doccomments.provo.novell.com/comments/28800 -\\->
   These days file synchronization can also be done with a cloud computing
   solution.
  </para>-\->
 </sect1>-->
 <warning>
  <title>Risk of Data Loss</title>
  <para>
   Before you start managing your data with a synchronization system, you
   should be well acquainted with the program used and test its functionality.
   A backup is indispensable for important files.
  </para>
 </warning>

 <sect1 xml:id="sec.net.sync.rsync">
  <title>File Copying with Rsync</title>
  <para>
    When large directory structures need to be
    synchronized over slow network connections, the tool Rsync offers
    well-developed mechanisms for transmitting only changes within files. This
    not only applies to text files, but also binary files. To detect the
    differences between files, Rsync subdivides the files into blocks and
    computes check sums over them.
   </para>
   <para>
    The effort put into the detection of the changes comes at a price. The
    systems to synchronize should be scaled generously for the usage of rsync.
    RAM is especially important.
   </para>
  <para>
   Rsync is useful when large amounts of data need to be transmitted regularly
   while not changing too much. This is, for example, often the case when
   creating backups. Another application concerns staging servers. These are
   servers that store complete directory trees of Web servers that are
   regularly mirrored onto a Web server in a DMZ.
  </para>
  <para> Although its name suggest that Rsync is a synchronization tool, it is
   not. By design, Rsync is a <emphasis>unidirectional</emphasis> tool, it
   copies files or directories only one way: from source to destination. It
   does not and cannot do the reverse. If you need a bidirectional tool which
   is able to synchronize both source and destination, use Csync. </para>

  <!-- Use cases and properties of Rsync? -->

  <sect2 xml:id="sec.net.sync.rsync.syntax">
   <title>Basic Syntax</title>
   <para>
    Rsync is a command line tool which the following basic syntax:
   </para>
   <screen>rsync [OPTION] SOURCE [SOURCE]... DEST</screen>
   <para> You can use Rsync to any machine that you have access to and write
    permissions, be it local or remote. <replaceable>SOURCE</replaceable> can
    be added one or many times. The <replaceable>SOURCE</replaceable> and
     <replaceable>DEST</replaceable> placeholders can be paths, URLs, or a
    combination of these. </para>
   <para>
    The most common options for rsync:
   </para>
   <variablelist>
    <varlistentry>
     <term><option>-v</option></term>
     <listitem>
      <para> Outputs more verbose text</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-a</option></term>
     <listitem>
      <para>
       Archive mode; copy files recursively and perserves timestamps, user
       and group ownership, file permissions, symbolic links.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-z</option></term>
     <listitem>
      <para>Compress the transmitted data</para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para> Rsync has a peculiar syntax when it comes to directory names: the
     <emphasis>trailing slash</emphasis>. If you put a trailing slash after the
    directory it means the <emphasis>content</emphasis> of that directory. If
    you omit the slash, you mean the name itself. </para>
  </sect2>
  <sect2 xml:id="sec.net.sync.rsync.copy.local.files-and-dirs">
   <title>Copying Files and Directories Locally</title>
   <para> Assuming a directory <filename>/var/backup</filename>
    with write permissions.
    To copy a single file on your local machine from
    one path to another path, use the following command: </para>
   <screen>&prompt.user;<command>rsync</command> -avz backup.tar.xz /var/backup/</screen>
   <para>The file <filename>backup.tar.xz</filename> is copied to
     <filename>/var/backup/</filename>, the absolute path will be
     <filename>/var/backup/backup.tar.xz</filename>.</para>
   <para>
    Keep in mind to insert the <emphasis>trailing slash</emphasis> after the
    <filename>/var/backup/</filename> directory! If you do not insert the slash,
    the file <filename>backup.tar.xz</filename> is copied to <filename>/var/backup</filename>
    (file) <emphasis>not</emphasis> inside the directory <filename>/var/backup/</filename>!
   </para>
   <para>
    To copy a directory is similar to copy a single file. The following
    example copies the directory <filename>&exampleuser_plain;/</filename> and
    its content into the directory <filename>/var/backup/</filename>: </para>
    <screen>&prompt.user;<command>rsync</command> -avz &exampleuser_plain; /var/backup/</screen>
    <para> Find the copy in the absolute path
     <filename>/var/backup/&exampleuser_plain;/</filename>. </para>
  </sect2>
  <sect2 xml:id="sec.net.sync.rsync.copy.remote.files-and-dirs">
   <title>Copying Files and Directories Remotely</title>
   <para> To copy files from or to remote directories requires an IP address or
    a domain name. A user name can be optional in case your current user name is
    equal to the remote user name. </para>
   <para> To copy the file <filename>file.tar.xz</filename> from your local
    host to the remote host <systemitem
     class="ipaddress">&exampledomain1ip;.1</systemitem> with same users (being
    local and remote), use the following command:
   </para>
   <screen>&prompt.user;<command>rsync</command> -avz file.tar.xz  &exampleuser_plain;@&exampledomain1ip;.1:</screen>
    <para> Depending on what you prefer, these commands are also possible and
    equivalent: </para>
   <screen>&prompt.user;<command>rsync</command> -avz file.tar.xz &exampledomain1ip;.1:~
&prompt.user;<command>rsync</command> -avz file.tar.xz &exampledomain1ip;.1:/home/&exampleuser_plain;</screen>
    <para> In all cases with standard configuration, you will be asked to
     enter your passphrase of the remote user. This command will copy the
     <filename>file.tar.xz</filename> to the home directory of user
     &exampleuser; (usually <filename>/home/&exampleuser_plain;</filename>).
    </para>
   <para>
    To copy a directory remotely is similar to copy a directory locally.
    The following example copies the directory <filename>&exampleuser_plain;/</filename> and
    its content into the remote directory <filename>/var/backup/</filename> on
    the <systemitem class="ipaddress">&exampledomain1ip;.1</systemitem> host:
   </para>
   <screen>&prompt.user;<command>rsync</command> -avz &exampleuser_plain; &exampledomain1ip;.1:/var/backup/</screen>
   <para>
    Pretending you have write permissions on the host <systemitem class="ipaddress">&exampledomain1ip;.1</systemitem>, you will find the
    copy in the absolute path <filename>/var/backup/&exampleuser_plain;</filename>.
   </para>
  </sect2>

  <sect2 xml:id="sec.net.sync.rsync.server">
   <title>Configuring and Using a Rsyncd Server</title>
   <para>
    Rsync can be operated as a daemon listing on port 873 for incoming
    connections. This daemon can receive <quote>copying targets</quote>.
   </para>
   <para>
    The following procedure creates a Rsync server on
    <systemitem>&wsI;</systemitem> with a <emphasis>backup</emphasis> target.
    This target can be read from and written to:
   </para>
   <procedure>
    <title>Setting Up the Rsync Server</title>
    <step>
     <para>
      Create a directory where you want to store all your backup files.
      In this example, we use <filename>/var/backup</filename>:
     </para>
     <screen>&prompt.root;<command>mkdir</command> /var/backup</screen>
    </step>
    <step>
     <para>Decide of the ownership, we use in this case the backup for a single
     user, so the directory should be owned by user &exampleuser; in group
     <systemitem class="groupname">users</systemitem>:</para>
     <screen>&prompt.root;<command>chown</command> &exampleuser_plain;.users /var/backup</screen>
    </step>
    <step>
     <para>
      On &wsI;, configure the rsyncd daemon in the configuration file
      <filename>/etc/rsyncd.conf</filename>:
     </para>
     <screen>
use chroot = true
transfer logging = true
log format = %h %o %f %l %b
log file = /var/log/rsyncd.log

[backup]
   uid = &exampleuser_plain;
   gid = users
   path = /var/backup
   comment = Our backup target</screen>
    </step>
    <step>
     <para>Create the directory <filename>/var/backup</filename> belonging
      to &rootuser;.</para>
    </step>
    <step>
     <para>
      Start and enable the rsyncd daemon with:
     </para>
     <screen>&prompt.root;<command>systemctl</command> enable rsyncd
&prompt.root;<command>systemctl</command> start rsyncd</screen>
     <!--<para>
      <remark>taroth 2014-02-25: systemd - what about xinetd? is this
    still valid?</remark> - taroth 2014-03-17: for the records, here fcrozat's
    answer: xinetd is still there (although systemd can provide similar  functionalities
    but the configuration is different)
      rsyncd can alternatively be started by xinetd. This is, however, only
      recommended for servers that rarely use rsyncd.
     </para> -->
    </step>
    <step>
     <para>
      Test the access to your Rsync server:
     </para>
     <screen>&prompt.user;<command>rsync</command> &wsI;::</screen>
     <para>
      It will respond with:
     </para>
     <screen>backup          Our backup target</screen>
     <para>If not, check your configuration file, firewall and network settings.</para>
    </step>
   </procedure>
   
   <para>
    The above steps created a Rsync server which can now be used to store
    backups.
    The example also creates a log file listing all connections. This file is
    stored in <filename>/var/log/rsyncd.log</filename>.
   </para>
   <para>
    To list all the content of your backup target, use the following command:
   </para>
<screen>rsync -avz &wsI;::backup</screen>
   <para>
    This command lists all files present in the directory
    <filename>/var/backup</filename> of the server. This request is also logged in
    the log file <filename>/var/log/rsyncd.log</filename>. To start an actual
    transfer, provide a target directory. Use <literal>.</literal> for the
    current directory. For example, the following command copies the current
    directory to your Rsync backup server:
   </para>
   <screen>rsync -avz . &wsI;::backup</screen>
   <para>
    By default, no files are deleted while synchronizing with Rsync. If this
    should be forced, the additional option <option>--delete</option> must be
    stated. To ensure that no newer files are deleted, the option
    <option>--update</option> can be used instead. Any conflicts that arise
    must be resolved manually.
   </para>
  </sect2>

 </sect1>

 <sect1 xml:id="sec.net.sync.summary">
  <title>For More Information</title>
  <para>TBD</para>
 </sect1>
</chapter>
