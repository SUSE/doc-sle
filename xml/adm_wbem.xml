<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<chapter version="5.0" xml:id="cha.wbem"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Web Based Enterprise Management Using SFCB</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
        </dm:bugtracker>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <para/>
 <sect1 xml:id="sec.wbem.intro">
  <title>Introduction and Basic Concept</title>

  <para>
   &slsreg; (&slsa;) provides a collection of open standards based
   tools for the unified management of disparate computing systems and
   environments. Our enterprise solutions implement the standards proposed
   by the Distributed Management Task Force. The following paragraphs
   describe their basic components.
  </para>

  <para>
   Distributed Management Task Force, Inc (DMTF) is the industry
   organization which leads the development of management standards for
   enterprise and Internet environments. Their goal is to unify management
   standards and initiatives, and to enable more integrated, cost effective
   and interoperable management solutions. DMTF standards provide common
   system management components for control and communication. Their
   solutions are independent of platforms and technologies. <emphasis>Web
   Based Enterprise Management</emphasis> and <emphasis>Common Information
   Model </emphasis> are one of their key technologies.
  </para>

  <para>
   Web Based Enterprise Management (WBEM) is a set of management and
   Internet standard technologies. WBEM is developed to unify the management
   of enterprise computing environments. It provides the ability for the
   industry to deliver a well-integrated collection of management tools
   using Web technologies. WBEM consists of the following standards:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     A data model: the Common Information Model (CIM) standard
    </para>
   </listitem>
   <listitem>
    <para>
     An encoding specification: CIM-XML Encoding Specification
    </para>
   </listitem>
   <listitem>
    <para>
     A transport mechanism: CIM operations over HTTP
    </para>
   </listitem>
  </itemizedlist>

  <para>
   Common Information Model is a conceptual information model that describes
   system management. It is not bound to a particular implementation and
   enables the interchange of management information between management
   systems, networks, services and applications. There are two parts to CIM
   &mdash; the CIM Specification and the CIM Schema.
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     The <emphasis>CIM Specification</emphasis> describes the language,
     naming and meta schema. The meta schema is a formal definition of the
     model. It defines the terms used to express the model and their usage
     and semantics. The elements of the meta schema are
     <emphasis>classes</emphasis>, <emphasis>properties</emphasis>, and
     <emphasis>methods</emphasis>. The meta schema also supports
     <emphasis>indications</emphasis> and <emphasis>associations</emphasis>
     as types of <emphasis>classes</emphasis>, and
     <emphasis>references</emphasis> as types of
     <emphasis>properties</emphasis>.
    </para>
   </listitem>
   <listitem>
    <para>
     The <emphasis>CIM Schema</emphasis> provides the actual model
     descriptions. It supplies a set of classes with properties and
     associations that provide a well understood conceptual framework within
     which it is possible to organize the available information about the
     managed environment.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The Common Information Model Object Manager (CIMOM) is a CIM object
   manager or, more specifically, an application that manages objects
   according to the CIM standard. CIMOM manages communication between CIMOM
   providers and a CIM client, where the administrator manages the system.
  </para>

  <para>
   <emphasis>CIMOM providers</emphasis> are software performing specific
   tasks within the CIMOM that are requested by client applications. Each
   provider instruments one or more aspects of the CIMOM's schema. These
   providers interact directly with the hardware.
  </para>

  <para>
   <emphasis>Standards Based Linux Instrumentation for Manageability
   (SBLIM)</emphasis> is a collection of tools designed to support Web-Based
   Enterprise Management (WBEM). &slsreg; uses the open source CIMOM (or
   CIM server) from the SBLIM project called <emphasis>Small Footprint CIM
   Broker</emphasis> .
  </para>

  <para>
   <emphasis>Small Footprint CIM Broker</emphasis> is a CIM server intended
   for use in resource-limited or embedded environments. It is designed to
   be modular and lightweight at the same time. Its based on open standards
   and it supports CMPI providers, CIM-XML encoding, and <emphasis>Managed
   Object Format (MOF)</emphasis>. It is highly configurable and performs
   stability even if the provider crashes. It is also easily accessible as
   it supports various transport protocols, such as HTTP, HTTPS, Unix domain
   sockets, Service Location Protocol (SLP), and Java Database Connectivity
   (JDBC).
  </para>
 </sect1>
 <sect1 xml:id="sec.wbem.setting">
  <title>Setting up SFCB</title>

  <para>
   To set up the Small Footprint CIM Broker (SFCB) environment, make sure
   the <guimenu>Web-Based Enterprise Management</guimenu> pattern in
   &yast; is selected during &productname; installation.
   Alternatively, select it as a component to install on a server that is
   already running. Make sure the following packages are installed on your
   system:
  </para>

  <variablelist>
   <varlistentry>
    <term>cim-schema, Common Information Model (CIM) Schema</term>
    <listitem>
     <para>
      Contains the Common Information Model (CIM). CIM is a model for
      describing overall management information in a network or enterprise
      environments. CIM consists of a specification and a schema. The
      specification defines the details for integration with other
      management models. The schema provides the actual model descriptions.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>cmpi-bindings-pywbem</term>
    <listitem>
     <para>
      Contains an adapter to write and run CMPI-type CIM providers in
      Python.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>cmpi-pywbem-base</term>
    <listitem>
     <para>
      Contains base system CIM providers.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>cmpi-pywbem-power-management</term>
    <listitem>
     <para>
      Contains power management providers based on DSP1027.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>python-pywbem</term>
    <listitem>
     <para>
      Contains a Python module for making CIM operation calls through the
      WBEM protocol to query and update managed objects.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>cmpi-provider-register, CIMOM neutral provider registration
        utility</term>
    <listitem>
     <para>
      Contains a utility allowing CMPI provider packages to register with
      whatever CIMOM happens to be present on the system.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>sblim-sfcb, Small Footprint CIM Broker</term>
    <listitem>
     <para>
      Contains Small Footprint CIM Broker. It is a CIM server conforming to
      the CIM Operations over HTTP protocol. It is robust, with low resource
      consumption and, therefore, specifically suited for embedded and
      resource constrained environments. SFCB supports providers written
      against the Common Manageability Programming Interface (CMPI).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>sblim-sfcc</term>
    <listitem>
     <para>
      Contains Small Footprint CIM Client library runtime libraries.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>sblim-wbemcli</term>
    <listitem>
     <para>
      Contains WBEM command line interface. It is a stand-alone command line
      WBEM client especially suited for basic systems management tasks.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>smis-providers</term>
    <listitem>
     <para>
      Contains providers to instrument the volumes and snapshots on the
      Linux file system. These are based on SNIA's SMI-S volume management
      profile and Copy Services profile respectively.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <figure xml:id="fig.wbem.setting.yast_install">
   <title>Package Selection for Web-Based Enterprise Management Pattern</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="yast_install_wbem.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="yast_install_wbem.png" width="75%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <sect2 xml:id="sec.wbem.setting.addinst">
   <title>Installing Additional Providers</title>
   <para>
    &productnamereg; software repository includes additional CIM
    providers that are not found in the Web-Based Enterprise Management
    installation pattern. You can easily get their list and installation
    status by searching the pattern <literal>sblim-cmpi-</literal> in the
    &yast; software installation module. These providers cover various
    tasks of system management, such as DHCP, NFS, or kernel parameters
    setting. It is useful to install those providers which you are going to
    use with SFCB.
   </para>
   <figure xml:id="fig.wbem.setting.yast_cimproviders_install">
    <title>Package selection of additional CIM providers</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast_cim_providers_install.png" width="80%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast_cim_providers_install.png" width="75%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>

  <sect2 xml:id="sec.wbem.setting.daemon">
   <title>Starting, Stopping and Checking Status for SFCB</title>
   <para>
    CIM server sfcbd daemon is installed together with Web-Based Enterprise
    Management software and is started by default at system start-up. The
    following table explains how to start, stop and check status for sfcbd.
   </para>
   <table xml:id="tab.wbem.setting.daemon.1" frame="topbot" rowsep="0">
    <title>Commands for Managing sfcbd</title>
    <tgroup cols="2">
     <colspec colnum="1" colname="1"/>
     <colspec colnum="2" colname="2"/>
     <thead>
      <row rowsep="1">
       <entry colname="1">
        <para>
         Task
        </para>
       </entry>
       <entry colname="2">
        <para>
         Linux Command
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row rowsep="0">
       <entry colname="1">
        <para>
         Start sfcbd
        </para>
       </entry>
       <entry colname="2">
        <para>
         Enter <command>systemctl start sfcb</command> as
         &rootuser; in the command line.
        </para>
       </entry>
      </row>
      <row rowsep="0">
       <entry colname="1">
        <para>
         Stop sfcbd
        </para>
       </entry>
       <entry colname="2">
        <para>
         Enter <command>systemctl stop sfcb</command> as
         &rootuser; in the command line.
        </para>
       </entry>
      </row>
      <row rowsep="0">
       <entry colname="1">
        <para>
         Check sfcbd status
        </para>
       </entry>
       <entry colname="2">
        <para>
         Enter <command>systemctl status sfcb</command>as
         &rootuser; in the command line.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect2>

  <sect2 xml:id="sec.wbem.setting.secure">
   <title>Ensuring Secure Access</title>
   <para>
    The default setup of SFCB is relatively secure. However, check that the
    access to SFCB components is as secure as required for your
    organization.
   </para>
   <sect3 xml:id="sec.wbem.setting.secure.cert">
    <title>Certificates</title>
    <para>
     Secure Socket Layers (SSL) transports require a certificate for secure
     communication to occur. When SFCB is installed, it has a self-signed
     certificate generated.
    </para>
    <para>
     You can replace the path to the default certificate with a path to a
     commercial or self-signed one by changing the
     <literal>sslCertificateFilePath:
     <replaceable>path_filename</replaceable> </literal> setting in
     <filename>/etc/sfcb/sfcb.cfg</filename>. The file must be in PEM
     format.
    </para>
    <para>
     The default generated server certificate is in the following location:
    </para>
    <para>
     <filename>/etc/sfcb/server.pem</filename>
    </para>
    <note>
     <title>Paths to SSL Certificates</title>
     <para>
      The default generated certificate files
      <filename>servercert.pem</filename> and <filename>
      serverkey.pem</filename> are stored under
      <filename>/etc/ssl/servercerts</filename> directory. Files
      <filename>/etc/sfcb/client.pem</filename>,
      <filename>/etc/sfcb/file.pem</filename> and
      <filename>/etc/sfcb/server.pem</filename> are symbolic links to these
      files.
     </para>
    </note>
    <para>
     If you want to generate a new certificate, enter the following command
     as &rootuser; in the command line:
    </para>
<screen>&prompt.user;sh /usr/share/sfcb/genSslCert.sh
Generating SSL certificates in .
Generating a 2048 bit RSA private key
...................................................................+++
.+++
writing new private key to '/var/tmp/sfcb.0Bjt69/key.pem'
-----</screen>
    <para>
     By default, the script generates certificates
     <filename>client.pem</filename> , <filename>file.pem</filename> and
     <filename>server.pem</filename> in the current working directory. If
     you want the script to generate the certificates in
     <filename>/etc/sfcb</filename> directory, you need to append it to the
     command. If these files already exist, a warning message is displayed
     and the old certificates are not overwritten.
    </para>
<screen>&prompt.user;sh /usr/share/sfcb/genSslCert.sh /etc/sfcb
Generating SSL certificates in .
WARNING: server.pem SSL Certificate file already exists.
         old file will be kept intact.
WARNING: client.pem SSL Certificate trust store already exists.
         old file will be kept intact.</screen>
    <para>
     You must remove the old certificates from the file system and run the
     command again.
    </para>
    <para>
     If you want to change the way SFCB uses certificates, see
     <xref linkend="sec.wbem.setting.secure.auth"/>.
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.setting.secure.ports">
    <title>Ports</title>
    <para>
     By default, SFCB is configured to accept all communications through the
     secure port 5989. The following paragraphs explain the communication
     port setup and recommended configuration.
    </para>
    <variablelist>
     <varlistentry>
      <term>Port 5989 (secure)</term>
      <listitem>
       <para>
        The secure port that SFCB communications use via HTTPS services.
        This is the default. With this setting, all communications between
        the CIMOM and client applications are encrypted when sent over the
        Internet between servers and workstations. Users must authenticate
        with the client application to reach SFCB server. We recommend that
        you keep this setting. In order for the SFCB CIMOM to communicate
        with the necessary applications, this port must be open on routers
        and firewalls if they are present between the client application and
        the nodes being monitored.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Port 5988 (insecure)</term>
      <listitem>
       <para>
        The insecure port that SFCB communications use via HTTP services.
        This setting is disabled by default. With this setting, all
        communications between the CIMOM and client applications are open
        for review when sent over the Internet between servers and
        workstations by anyone, without any authentication. We recommend
        that you use this setting only when attempting to debug a problem
        with the CIMOM. As soon as the problem is resolved, disable the
        non-secure port option back. In order for the SFCB CIMOM to
        communicate with the necessary applications that require non-secure
        access, this port must be open in routers and firewalls between the
        client application and the nodes being monitored.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <para>
     If you want to change the default port assignments, see
     <xref linkend="sec.wbem.setting.secure.ports"/>.
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.setting.secure.auth">
    <title>Authentication</title>
    <para>
     SFCB supports HTTP basic authentication and authentication based on
     client certificates (HTTP over SSL connections). Basic HTTP
     authentication is enabled by specifying <literal>doBasicAuth</literal>
     =<replaceable>true</replaceable> in the SFCB configuration file (
     <filename>/etc/sfcb/sfcb.cfg</filename> by default). &slsreg;
     installation of SFCB supports Pluggable Authentication Modules (PAM)
     approach; therefore the local root user can authenticate to the SFCB
     CIMOM with local root user credentials.
    </para>
    <para>
     If the <literal>sslClientCertificate</literal> configuration property
     is set to <replaceable>accept</replaceable> or
     <replaceable>require</replaceable>, the SFCB HTTP adapter will request
     a certificate from clients when connecting via HTTP over SSL (HTTPS).
     If <replaceable>require</replaceable> is specified, the client
     <emphasis role="bold">must</emphasis> provide a valid certificate
     (according to the client trust store specified via
     <replaceable>sslClientTrustStore</replaceable>). If the client fails to
     do so, the connection will be rejected by the CIM server.
    </para>
    <para>
     The setting <literal>sslClientCertificate</literal>
     =<replaceable>accept</replaceable> may not be obvious. It is very
     useful if both basic and client certificate authentication are allowed.
     If the client can provide a valid certificate, HTTPS connection
     will be established and the basic authentication procedure will not be
     executed. If this function cannot verify the certificate, the HTTP
     basic authentication will take place instead.
    </para>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.wbem.config">
  <title>SFCB CIMOM Configuration</title>

  <para>
   SFCB is a lightweight implementation of the CIM server, but it is also
   highly configurable. Several options can control its behavior. You can
   control the SFCB server in three ways:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     by setting appropriate environment variables
    </para>
   </listitem>
   <listitem>
    <para>
     by using command line options
    </para>
   </listitem>
   <listitem>
    <para>
     by changing its configuration file
    </para>
   </listitem>
  </itemizedlist>

  <sect2 xml:id="sec.wbem.config.env">
   <title>Environment Variables</title>
   <para>
    Several environment variables directly affect the behavior of SFCB. You
    need to restart the SFCB daemon by <command>systemctl restart
    sfcb</command> for these changes to take effect.
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>PATH</literal>
     </term>
     <listitem>
      <para>
       Specifies the path to the <systemitem>sfcbd</systemitem> daemon and
       utilities.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>LD_LIBRARY_PATH</literal>
     </term>
     <listitem>
      <para>
       Specifies the path to the sfcb runtime libraries. Alternatively, you
       can add this path to the system-wide dynamic loader configuration
       file <filename>/etc/ld.so.conf</filename> .
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>SFCB_PAUSE_PROVIDER</literal>
     </term>
     <listitem>
      <para>
       Specifies the provider name. The SFCB server pauses after the
       provider is loaded for the first time. You can then attach a runtime
       debugger to the provider's process for debugging purposes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>SFCB_PAUSE_CODEC</literal>
     </term>
     <listitem>
      <para>
       Specifies the name of the SFCB codec (currently supports only
       <literal>http</literal>. The SFCB server pauses after the codec is
       loaded for the first time. You can then attach a runtime debugger to
       the process.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>SFCB_TRACE</literal>
     </term>
     <listitem>
      <para>
       Specifies the level of debug messages for SFCB. Valid values are 0
       (no debug messages), or 1 (key debug messages) to 4 (all debug
       messages). Default is 1.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>SFCB_TRACE_FILE</literal>
     </term>
     <listitem>
      <para>
       By default, SFCB outputs its debug messages to standard error output
       (STDERR). Setting this variable causes the debug messages to be
       written to a specified file instead.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>SBLIM_TRACE</literal>
     </term>
     <listitem>
      <para>
       Specifies the level of debug messages for SBLIM providers. Valid
       values are 0 (no debug messages), or 1 (key debug messages) to 4 (all
       debug messages).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>SBLIM_TRACE_FILE</literal>
     </term>
     <listitem>
      <para>
       By default, SBLIM provider outputs its trace messages to STDERR.
       Setting this variable causes the trace messages to be written to a
       specified file instead.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec.wbem.config.cmdline">
   <title>Command Line Options</title>
   <para>
    <systemitem>sfcbd</systemitem>, the SFCB daemon, has several command
    line options that switch particular runtime features on or off. Enter
    these options when SFCB daemon starts.
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>-c, --config-file</literal>=<replaceable>FILE</replaceable>
     </term>
     <listitem>
      <para>
       When SFCB daemon starts, it reads its configuration from
       <filename>/etc/sfcb/sfcb.cfg</filename> by default. With this option,
       you can specify an alternative configuration file.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>-d, --daemon</literal>
     </term>
     <listitem>
      <para>
       Forces sfcbd and its child processes to run in the background.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>-s, --collect-stats</literal>
     </term>
     <listitem>
      <para>
       Turns on runtime statistics collecting. Various sfcbd runtime
       statistics will be written to the <filename>sfcbStat</filename> file
       in the current working directory. By default, no statistics are
       collected.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>-l, --syslog-level</literal>=<replaceable>LOGLEVEL</replaceable>
     </term>
     <listitem>
      <para>
       Specifies the level of verbosity for the system logging facility.
       <replaceable>LOGLEVEL</replaceable> can be one of LOG_INFO,
       LOG_DEBUG, or LOG_ERR, which is the default.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>-k, --color-trace</literal>=<replaceable>LOGLEVEL</replaceable>
     </term>
     <listitem>
      <para>
       Prints trace output in a different color per process for easier
       debugging.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>-t, --trace-components</literal>=<replaceable>NUM</replaceable>
     </term>
     <listitem>
      <para>
       Activates component-level tracing messages, where
       <replaceable>NUM</replaceable> is an OR-ed bitmask integer that
       defines which component to trace. After you specify <option>-t
       ?</option>, it lists all the components and their associated integer
       bitmask:
      </para>
<screen>&prompt.user;sfcbd -t ?
---   Traceable Components:     Int       Hex
---            providerMgr:          1  0x0000001
---            providerDrv:          2  0x0000002
---             cimxmlProc:          4  0x0000004
---             httpDaemon:          8  0x0000008
---                upCalls:         16  0x0000010
---               encCalls:         32  0x0000020
---        ProviderInstMgr:         64  0x0000040
---       providerAssocMgr:        128  0x0000080
---              providers:        256  0x0000100
---            indProvider:        512  0x0000200
---       internalProvider:       1024  0x0000400
---             objectImpl:       2048  0x0000800
---                  xmlIn:       4096  0x0001000
---                 xmlOut:       8192  0x0002000
---                sockets:      16384  0x0004000
---              memoryMgr:      32768  0x0008000
---               msgQueue:      65536  0x0010000
---             xmlParsing:     131072  0x0020000
---         responseTiming:     262144  0x0040000
---              dbpdaemon:     524288  0x0080000
---                    slp:    1048576  0x0100000</screen>
      <para>
       A useful value that reveals the internal functions of sfcbd but does
       not generate too many messages, is <option>-t</option>
       <replaceable>2019</replaceable>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec.wbem.config.confile">
   <title>SFCB Configuration File</title>
   <para>
    SFCB reads its runtime configuration from configuration file
    <filename>/etc/sfcb/sfcb.cfg</filename> after starting up. This behavior
    can be overridden using <option>-c</option> option at start-up.
   </para>
   <para>
    The configuration file contains <option>option</option> :
    <replaceable>value</replaceable> pairs, one per line. When making
    changes to this file, you can use any text editor that saves the file in
    a format that is native to the environment you are using.
   </para>
   <para>
    Any setting that has the options commented out with a number sign (#)
    uses the default setting.
   </para>
   <para>
    The following list of options may not be complete. See the content of
    <filename>/etc/sfcb/sfcb.cfg</filename> and
    <filename>/usr/share/doc/packages/sblim-sfcb/README</filename> for their
    complete list.
   </para>
   <sect3 xml:id="sec.wbem.config.confile.1">
    <title>httpPort</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the local port value that sfcbd should listen to receive HTTP
     (insecure) requests from CIM clients. Default is
     <literal>5988</literal> .
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>httpPort:</literal> <replaceable>port_number</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.2">
    <title>enableHttp</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies whether SFCB should accept HTTP client connections. Default
     is <literal>false</literal> .
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>enableHttp:</literal> <replaceable>option</replaceable>
    </para>
    <informaltable frame="topbot" rowsep="1">
     <tgroup cols="2">
      <thead>
       <row>
        <entry>
         <para>
          Option
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          true
         </para>
        </entry>
        <entry>
         <para>
          Enables HTTP connections.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          false
         </para>
        </entry>
        <entry>
         <para>
          Disables HTTP connections.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.3">
    <title>httpProcs</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the maximum number of simultaneous HTTP client connections
     before new incoming HTTP requests are blocked. Default is
     <literal>8</literal> .
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>httpProcs:</literal>
     <replaceable>max_number_of_connections</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.3.5">
    <title>httpUserSFCB, httpUser</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     These options control what user the HTTP server will run under. If
     <option>httpUserSFCB</option> is <literal>true</literal>, HTTP will run
     under the same user as the SFCB main process. If it is
     <literal>false</literal> the user name specified for
     <option>httpUser</option> will be used. This setting is used for both
     HTTP and HTTPS servers. <option>httpUser</option>
     <emphasis>must</emphasis> be specified if <option>httpUserSFCB</option>
     is set to <literal>false</literal>. the default is
     <literal>true</literal>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>httpUserSFCB:</literal> <replaceable>true</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.3.8">
    <title>httpLocalOnly</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies whether to limit HTTP requests to localhost only. Default is
     <literal>false</literal>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>httpLocalOnly:</literal> <replaceable>false</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.4">
    <title>httpsPort</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the local port value where sfcbd listens for HTTPS requests
     from CIM clients. Default is <literal>5989</literal> .
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>httpsPort:</literal> <replaceable>port_number</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.5">
    <title>enableHttps</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies if SFCB will accept HTTPS client connections. Default is
     <literal>true</literal> .
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>enableHttps:</literal> <replaceable>option</replaceable>
    </para>
    <informaltable frame="topbot" rowsep="1">
     <tgroup cols="2">
      <thead>
       <row>
        <entry>
         <para>
          Option
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          true
         </para>
        </entry>
        <entry>
         <para>
          Enables HTTPS connections.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          false
         </para>
        </entry>
        <entry>
         <para>
          Disables HTTPS connections.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.7">
    <title>httpsProcs</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the maximum number of simultaneous HTTPS client connections
     before new incoming HTTPS requests are blocked. Default is
     <literal>8</literal> .
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>httpsProcs:</literal>
     <replaceable>max_number_of_connections</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.8">
    <title>enableInterOp</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies if SFCB will provide the <emphasis>interop</emphasis>
     namespace for indication support. Default is <literal>true</literal> .
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>enableInterOp:</literal> <replaceable>option</replaceable>
    </para>
    <informaltable frame="topbot" rowsep="1">
     <tgroup cols="2">
      <thead>
       <row>
        <entry>
         <para>
          Option
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          true
         </para>
        </entry>
        <entry>
         <para>
          Enables interop namespace.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          false
         </para>
        </entry>
        <entry>
         <para>
          Disables interop namespace.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.9">
    <title>provProcs</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the maximum number of simultaneous provider processes. After
     this point, if a new incoming request requires loading a new provider,
     then one of the existing providers will first be automatically
     unloaded. Default is <literal>32</literal> .
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>provProcs:</literal>
     <replaceable>max_number_of_procs</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.10">
    <title>doBasicAuth</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Switches basic authentication on or off based on the client user
     identifier before it accepts the request. Default value is
     <literal>true</literal> which means that basic client authentication is
     performed.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>doBasicAuth:</literal> <replaceable>option</replaceable>
    </para>
    <informaltable frame="topbot" rowsep="1">
     <tgroup cols="2">
      <thead>
       <row>
        <entry>
         <para>
          Option
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          true
         </para>
        </entry>
        <entry>
         <para>
          Enables basic authentication.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          false
         </para>
        </entry>
        <entry>
         <para>
          Disables basic authentication.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.11">
    <title>basicAuthLib</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the local library name. The SFCB server loads the library to
     authenticate the client user identifier. Default is
     <literal>sfcBasicPAMAuthentication</literal> .
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>provProcs:</literal>
     <replaceable>max_number_of_procs</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.12">
    <title>useChunking</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     This option switches the use of HTTP/HTTPS <quote>chunking</quote> on
     or off. If switched on, the server will return large volumes of
     response data to the client in smaller <quote>chunks</quote> , rather
     than to buffer the data and send it back all in one chunk. Default is
     <literal>true</literal> .
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>useChunking:</literal> <replaceable>option</replaceable>
    </para>
    <informaltable frame="topbot" rowsep="1">
     <tgroup cols="2">
      <thead>
       <row>
        <entry>
         <para>
          Option
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          true
         </para>
        </entry>
        <entry>
         <para>
          Enables HTTP/HTTPS data chunking.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          false
         </para>
        </entry>
        <entry>
         <para>
          Disables HTTP/HTTPS data chunking.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.13">
    <title>keepaliveTimeout</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the maximum time in seconds that SFCB HTTP process waits
     between two requests on one connection before it terminates. Setting it
     to <literal>0</literal> disables HTTP keep-alive. Default is
     <literal>0</literal>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>keepaliveTimeout:</literal> <replaceable>secs</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.14">
    <title>keepaliveMaxRequest</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the maximum number of consecutive requests on one connection.
     Setting it to <literal>0</literal> disables HTTP keep-alive. Default
     value is <literal>10</literal> .
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>keepaliveMaxRequest:</literal>
     <replaceable>number_of_connections</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.15">
    <title>registrationDir</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the registration directory, which contains the provider
     registration data, the staging area, and the static repository. Default
     is <filename>/var/lib/sfcb/registration</filename> .
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>registrationDir:</literal> <replaceable>dir</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.16">
    <title>providerDirs</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies a space-separated list of directories where SFCB is searching
     for provider libraries. Default is <filename>/usr/lib64 /usr/lib64
     /usr/lib64/cmpi</filename>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>providerDirs:</literal> <replaceable>dir</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.17">
    <title>providerSampleInterval</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the interval in seconds at which the provider manager is
     checking for idle providers. Default is <literal>30</literal>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>providerSampleInterval:</literal>
     <replaceable>secs</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.18">
    <title>providerTimeoutInterval</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the interval in seconds before an idle provider gets unloaded
     by the provider manager. Default is <literal>60</literal>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>providerTimeoutInterval:</literal>
     <replaceable>secs</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.19">
    <title>providerAutoGroup</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     If the provider registration file does not specify any other group, and
     the option is set to <replaceable>true</replaceable>, all providers in
     the same shared library are executed in the same process.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>providerAutoGroup:</literal> <replaceable>option</replaceable>
    </para>
    <informaltable frame="topbot" rowsep="1">
     <tgroup cols="2">
      <thead>
       <row>
        <entry>
         <para>
          Option
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          true
         </para>
        </entry>
        <entry>
         <para>
          Enables grouping of providers.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          false
         </para>
        </entry>
        <entry>
         <para>
          Disables grouping of providers.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.20">
    <title>sslCertificateFilePath</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the name of the file that contains the server certificate.
     The file must be in PEM (Privacy Enhanced Mail, RFC 1421 and RFC 1424)
     format. This file is only required if <literal>enableHttps</literal> is
     set to <literal>true</literal>. Default is
     <filename>/etc/sfcb/server.pem</filename>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>sslCertificateFilePath:</literal>
     <replaceable>path</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.21">
    <title>sslKeyFilePath</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the name of the file that contains the private key for the
     server certificate. The file must be in PEM format and may not be
     protected by passphrase. This file is only required if
     <literal>enableHttps</literal> is set to <literal>true</literal>.
     Default is <filename>/etc/sfcb/file.pem</filename>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>sslKeyFilePath:</literal> <replaceable>path</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.22">
    <title>sslClientTrustStore</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the name of the file that contains either the CA or
     self-signed certificates of the clients. This file must be in PEM
     format and is only required if <literal>sslClientCertificate</literal>
     is set to <literal>accept</literal> or <literal>require</literal>.
     Default is <filename>/etc/sfcb/client.pem</filename>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>sslClientTrustStore:</literal> <replaceable>path</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.23">
    <title>sslClientCertificate</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the way SFCB handles client certificate based authentication.
     If set to <literal>ignore</literal>, it will not request a certificate
     from the client. If set to <literal>accept</literal> it will request a
     certificate from the client but will not fail if the client does not
     present one. If set to <literal>require</literal>, it will refuse the
     client connection if the client does not present a certificate. Default
     value is <literal>ignore</literal>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>sslClientCertificate:</literal>
     <replaceable>option</replaceable>
    </para>
    <informaltable frame="topbot" rowsep="1">
     <tgroup cols="2">
      <thead>
       <row>
        <entry>
         <para>
          Option
         </para>
        </entry>
        <entry>
         <para>
          Description
         </para>
        </entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <para>
          ignore
         </para>
        </entry>
        <entry>
         <para>
          Disables requesting a client certificate.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          accept
         </para>
        </entry>
        <entry>
         <para>
          Disables requesting a client certificate.
         </para>
         <para>
          Will not fail if no certificate is present.
         </para>
        </entry>
       </row>
       <row>
        <entry>
         <para>
          require
         </para>
        </entry>
        <entry>
         <para>
          Refuses the client connection without a valid certificate.
         </para>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.24">
    <title>certificateAuthLib</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the name of the local library to request for the user
     authentication based on client certificate. This is only requested if
     <literal>sslClientCertificate</literal> is not set to
     <literal>ignore</literal>. Default value is
     <filename>sfcCertificateAuthentication</filename>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>certificateAuthLib:</literal> <replaceable>file</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.25">
    <title>traceLevel</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the trace level for SFCB. You can override it by setting
     environment variable <literal>SFCB_TRACE_LEVEL</literal>. Default value
     is <literal>0</literal>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>traceLevel:</literal> <replaceable>num_level</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.26">
    <title>traceMask</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the trace mask for SFCB. you can override it by the command
     line option <option>--trace-components</option>. Default value is
     <literal>0</literal>.
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>traceMask:</literal> <replaceable>mask</replaceable>
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.config.confile.27">
    <title>traceFile</title>
    <bridgehead>Purpose</bridgehead>
    <para>
     Specifies the trace file for SFCB. You can override it by setting
     environment variable <literal>SFCB_TRACE_FILE</literal>. Default value
     is <literal>stderr</literal> (standard error output).
    </para>
    <bridgehead>Syntax</bridgehead>
    <para>
     <literal>traceFile:</literal> <replaceable>output</replaceable>
    </para>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.wbem.advanced">
  <title>Advanced SFCB Tasks</title>

  <para>
   This chapter covers more advanced topics related to SFCB usage. To
   understand them, you need to have basic knowledge of the Linux file
   system and experience with the Linux command line. This chapter includes
   the following tasks:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     Installing CMPI providers
    </para>
   </listitem>
   <listitem>
    <para>
     Testing SFCB
    </para>
   </listitem>
   <listitem>
    <para>
     Using <command>wbemcli</command> CIM client
    </para>
   </listitem>
  </itemizedlist>

  <sect2 xml:id="sec.wbem.advanced.cmpinst">
   <title>Installing CMPI Providers</title>
   <para>
    To install a CMPI provider, you need to make sure that its shared
    library is copied into one of the directories specified by
    <literal>providerDirs</literal> configuration option, see
    <xref linkend="sec.wbem.config.confile.16"/>. The provider must also be
    properly registered using <command>sfcbstage</command> and
    <command>sfcbrepos</command> commands.
   </para>
   <para>
    The provider package is usually prepared for SFCB, so that its
    installation takes care of the proper registration. Most SBLIM providers
    are prepared for SFCB.
   </para>
   <sect3 xml:id="sec.wbem.advanced.cmpinst.crep">
    <title>Class Repository</title>
    <para>
     <emphasis>Class repository</emphasis> is a place where SFCB stores
     information about CIM classes. It usually consists of a directory tree
     comprised of namespace components. Typical CIM namespaces are
     <literal>root/cimv2</literal> or <literal>root/interop</literal>, which
     respectively translate to the class repository directory path on the
     file system
    </para>
    <para>
     <filename>/var/lib/sfcb/registration/repository/root/cimv2</filename>
    </para>
    <para>
     and
    </para>
    <para>
     <filename>/var/lib/sfcb/registration/repository/root/interop</filename>
    </para>
    <para>
     Each namespace directory contains the file
     <filename>classSchemas</filename>. The file has a compiled binary
     representation of all the CIM classes registered under that namespace.
     It also contains necessary information about their CIM superclasses.
    </para>
    <para>
     In addition, each namespace directory may contain a file
     <filename>qualifiers</filename> which contains all qualifiers for the
     namespace. When sfcbd restarts, the class provider will scan the
     directory <filename>/var/lib/sfcb/registration/repository/</filename>
     and all its subdirectories to determine the registered namespaces. Then
     <filename>classSchemas</filename> files are decoded and the class
     hierarchy for each namespace is built.
    </para>
   </sect3>
   <sect3 xml:id="sec.wbem.advanced.cmpinst.classadd">
    <title>Adding New Classes</title>
    <para>
     SFCB cannot make live CIM class manipulations. You need to add, change
     or remove classes offline and restart SFCB service with
     <command>systemctl restart sfcb</command> to register the
     changes.
    </para>
    <para>
     To store providers class and registration information, SFCB uses a
     place called <emphasis>staging area</emphasis>. On &slsreg; systems,
     it is the directory structure under
     <filename>/var/lib/sfcb/stage/</filename>.
    </para>
    <para>
     To add a new provider, you need to:
    </para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       Copy the provider class definition files to the
       <filename>./mofs</filename> subdirectory of staging area directory
       (<filename>/var/lib/sfcb/stage/mofs</filename>).
      </para>
     </listitem>
     <listitem>
      <para>
       Copy a registration file which contains the name of the class or
       classes and type of provider, and the name of the executable library
       file into the <filename>./regs</filename> subdirectory.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     There are two default <quote>mof</quote> (class definition) files in
     the staging directory: <filename>indication.mof</filename> and
     <filename>interop.mof</filename>. MOF files under the root stage
     directory <filename>/var/lib/sfcb/stage/mofs</filename> will be copied
     into each namespace after running <filename>sfcbrepos</filename>
     command. The <filename>interop.mof</filename> will only be compiled
     into the <emphasis>interop</emphasis> namespace.
    </para>
    <para>
     The directory layout may look like the following example:
    </para>
<screen>&prompt.user;ls /var/lib/sfcb/stage
default.reg  mofs  regs</screen>
<screen>&prompt.user;ls /var/lib/sfcb/stage/mofs
indication.mof  root</screen>
<screen>&prompt.user;ls /var/lib/sfcb/stage/mofs/root
cimv2  interop  suse  virt</screen>
<screen>&prompt.user;ls -1 /var/lib/sfcb/stage/mofs/root/cimv2 | less
Linux_ABIParameter.mof
Linux_BaseIndication.mof
Linux_Base.mof
Linux_DHCPElementConformsToProfile.mof
Linux_DHCPEntity.mof
[..]
OMC_StorageSettingWithHints.mof
OMC_StorageVolumeDevice.mof
OMC_StorageVolume.mof
OMC_StorageVolumeStorageSynchronized.mof
OMC_SystemStorageCapabilities.mof</screen>
<screen>&prompt.user;ls -1 /var/lib/sfcb/stage/mofs/root/interop
ComputerSystem.mof
ElementConformsToProfile.mof
HostSystem.mof
interop.mof
Linux_DHCPElementConformsToProfile.mof
[..]
OMC_SMIElementSoftwareIdentity.mof
OMC_SMISubProfileRequiresProfile.mof
OMC_SMIVolumeManagementSoftware.mof
ReferencedProfile.mof
RegisteredProfile.mof</screen>
<screen>&prompt.user;ls -1 /var/lib/sfcb/stage/regs
AllocationCapabilities.reg
Linux_ABIParameter.reg
Linux_BaseIndication.reg
Linux_DHCPGlobal.reg
Linux_DHCPRegisteredProfile.reg
[..]
OMC_Base.sfcb.reg
OMC_CopyServices.sfcb.reg
OMC_PowerManagement.sfcb.reg
OMC_Server.sfcb.reg
RegisteredProfile.reg</screen>
<screen>&prompt.user;cat /var/lib/sfcb/stage/regs/Linux_DHCPRegisteredProfile.reg
[Linux_DHCPRegisteredProfile]
   provider: Linux_DHCPRegisteredProfileProvider
   location: cmpiLinux_DHCPRegisteredProfile
   type: instance
   namespace: root/interop
#
[Linux_DHCPElementConformsToProfile]
   provider: Linux_DHCPElementConformsToProfileProvider
   location: cmpiLinux_DHCPElementConformsToProfile
   type: instance association
   namespace: root/cimv2
#
[Linux_DHCPElementConformsToProfile]
   provider: Linux_DHCPElementConformsToProfileProvider
   location: cmpiLinux_DHCPElementConformsToProfile
   type: instance association
   namespace: root/interop</screen>
    <para>
     SFCB uses a custom provider registration file for each provider.
    </para>
    <note>
     <title>SBLIM Providers Registration Files</title>
     <para>
      All SBLIM providers on the SBLIM Web site already include a
      registration file that is used to generate the .reg file for SFCB.
     </para>
    </note>
    <para>
     The format of SFCB registration file is:
    </para>
<screen>
[&lt;class-name&gt;]
   provider: &lt;provide-name&gt;
   location: &lt;library-name&gt;
   type: [instance] [association] [method] [indication]
   group: &lt;group-name&gt;
   unload: never
   namespace: &lt;namespace-for-class&gt; ...
</screen>
    <para>
     where:
    </para>
    <variablelist>
     <varlistentry>
      <term><literal>&lt;class-name&gt;</literal>
      </term>
      <listitem>
       <para>
        The CIM class name (required)
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>&lt;provider-name&gt;</literal>
      </term>
      <listitem>
       <para>
        The CMPI provider name (required)
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>&lt;location-name&gt;</literal>
      </term>
      <listitem>
       <para>
        The name of the provider library (required)
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>type</literal>
      </term>
      <listitem>
       <para>
        The type of the provider (required). This can be any combination of:
        <literal>instance</literal>, <literal>association</literal>,
        <literal>method</literal> or <literal>indication</literal>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>&lt;group-name&gt;</literal>
      </term>
      <listitem>
       <para>
        Multiple providers can be grouped together and run under a single
        process to further minimize runtime resources. All providers
        registered under the same &lt;group-name&gt; will be executed
        under the same process. By default each provider will be run as a
        separate process.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>unload</literal>
      </term>
      <listitem>
       <para>
        Specifies the unload policy for the provider. Currently the only
        supported option is <option>never</option>, which specifies that the
        provider will not be monitored for idle times and will never be
        unloaded. By default each provider will be unloaded when its idle
        times exceed the value specified in the configuration file.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>namespace</literal>
      </term>
      <listitem>
       <para>
        List of namespaces for which this provider can be executed. This is
        required, although for most providers this will be
        <replaceable>root/cimv2</replaceable>.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <para>
     Once all the class definitions and provider registration files are
     stored in the staging area, you need to rebuild the SFCB class
     repository with the command <command>sfcbrepos</command>
     <option>-f</option>.
    </para>
    <para>
     You can add, change or remove classes this way. After rebuilding the
     class repository, restart SFCB with command <command>systemctl restart
     sfcb</command>.
    </para>
    <para>
     Alternatively, the SFCB package contains a utility that will copy
     provider class mof files and registration files to the correct
     locations in the staging area.
    </para>
    <para>
     <command>sfcbstage</command> <option>-r</option>
     <literal>[provider.reg] [class1.mof] [class2.mof] ...</literal>
    </para>
    <para>
     After running this command you still need to rebuild the class
     repository and restart SFCB service.
    </para>
   </sect3>
  </sect2>

  <sect2 xml:id="sec.wbem.advanced.testing">
   <title>Testing SFCB</title>
   <para>
    The SFCB package includes two testing scripts:
    <command>wbemcat</command> and <command>xmltest</command>.
   </para>
   <para>
    <command>wbemcat</command> sends raw CIM-XML data via HTTP protocol to
    the specified SFCB host (localhost by default) listening on port 5988.
    Then it displays the returned results. The following file contains the
    CIM-XML representation of a standard EnumerateClasses request:
   </para>
<screen>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;CIM CIMVERSION="2.0" DTDVERSION="2.0"&gt;
  &lt;MESSAGE ID="4711" PROTOCOLVERSION="1.0"&gt;
    &lt;SIMPLEREQ&gt;
      &lt;IMETHODCALL NAME="EnumerateClasses"&gt;
        &lt;LOCALNAMESPACEPATH&gt;
          &lt;NAMESPACE NAME="root"/&gt;
          &lt;NAMESPACE NAME="cimv2"/&gt;
        &lt;/LOCALNAMESPACEPATH&gt;
        &lt;IPARAMVALUE NAME="ClassName"&gt;
          &lt;CLASSNAME NAME=""/&gt;
        &lt;/IPARAMVALUE&gt;
        &lt;IPARAMVALUE NAME="DeepInheritance"&gt;
          &lt;VALUE&gt;TRUE&lt;/VALUE&gt;
        &lt;/IPARAMVALUE&gt;
        &lt;IPARAMVALUE NAME="LocalOnly"&gt;
          &lt;VALUE&gt;FALSE&lt;/VALUE&gt;
        &lt;/IPARAMVALUE&gt;
        &lt;IPARAMVALUE NAME="IncludeQualifiers"&gt;
          &lt;VALUE&gt;FALSE&lt;/VALUE&gt;
        &lt;/IPARAMVALUE&gt;
        &lt;IPARAMVALUE NAME="IncludeClassOrigin"&gt;
          &lt;VALUE&gt;TRUE&lt;/VALUE&gt;
        &lt;/IPARAMVALUE&gt;
      &lt;/IMETHODCALL&gt;
    &lt;/SIMPLEREQ&gt;
  &lt;/MESSAGE&gt;
&lt;/CIM&gt;</screen>
   <para>
    Sending this request to SFCB CIMOM returns a list of all supported
    classes for which there is a registered provider. Suppose you save the
    file as <filename>cim_xml_test.xml</filename>.
   </para>
<screen>&prompt.user;wbemcat cim_xml_test.xml | less
HTTP/1.1 200 OK
Content-Type: application/xml; charset="utf-8"
Content-Length: 337565
Cache-Control: no-cache
CIMOperation: MethodResponse

&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;CIM CIMVERSION="2.0" DTDVERSION="2.0"&gt;
&lt;MESSAGE ID="4711" PROTOCOLVERSION="1.0"&gt;
&lt;SIMPLERSP&gt;
&lt;IMETHODRESPONSE NAME="EnumerateClasses"&gt;
[..]
&lt;CLASS NAME="Linux_DHCPParamsForEntity" SUPERCLASS="CIM_Component"&gt;
&lt;PROPERTY.REFERENCE NAME="GroupComponent" REFERENCECLASS="Linux_DHCPEntity"&gt;
&lt;/PROPERTY.REFERENCE&gt;
&lt;PROPERTY.REFERENCE NAME="PartComponent" REFERENCECLASS="Linux_DHCPParams"&gt;
&lt;/PROPERTY.REFERENCE&gt;
&lt;/CLASS&gt;
&lt;/IRETURNVALUE&gt;
&lt;/IMETHODRESPONSE&gt;
&lt;/SIMPLERSP&gt;
&lt;/MESSAGE&gt;
&lt;/CIM&gt;</screen>
   <para>
    The classes listed will vary depending on what providers are installed
    on your system.
   </para>
   <para>
    The second script <command>xmltest</command> is also used to send a raw
    CIM-XML test file to the SFCB CIMOM. It then compares the returned
    results against a previously saved <quote>OK</quote> result file. If
    there does not yet exist a corresponding <quote>OK</quote> file, it will
    be created for later use:
   </para>
<screen>&prompt.user;xmltest cim_xml_test.xml
Running test cim_xml_test.xml ... OK
        Saving response as cim_xml_test.OK
&prompt.root;xmltest cim_xml_test.xml
Running test cim_xml_test.xml ... Passed</screen>
  </sect2>

  <sect2 xml:id="sec.wbem.advanced.wbemcli">
   <title>Command Line CIM Client: wbemcli</title>
   <para>
    In addition to <command>wbemcat</command> and
    <command>xmltest</command>, the SBLIM project includes a more advanced
    command line CIM client <command>wbemcli</command>. The client is used
    to send CIM requests to SFCB server and display returned results. It is
    independent of CIMOM library and can be used with all WBEM compliant
    implementations.
   </para>
   <para>
    For example, if you need to list all the classes implemented by SBLIM
    providers registered to your SFCB, send the
    <quote>EnumerateClasses</quote> (ec) request to SFCB:
   </para>
<screen>&prompt.user;wbemcli -dx ec http://localhost/root/cimv2
To server: &lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;CIM CIMVERSION="2.0" DTDVERSION="2.0"&gt;
&lt;MESSAGE ID="4711" PROTOCOLVERSION="1.0"&gt;&lt;SIMPLEREQ&gt;&lt;IMETHODCALL \
    NAME="EnumerateClasses"&gt;&lt;LOCALNAMESPACEPATH&gt;&lt;NAMESPACE NAME="root"&gt; \
    &lt;/NAMESPACE&gt;&lt;NAMESPACE NAME="cimv2"&gt;&lt;/NAMESPACE&gt; \
    &lt;/LOCALNAMESPACEPATH&gt;
&lt;IPARAMVALUE NAME="DeepInheritance"&gt;&lt;VALUE&gt;TRUE&lt;/VALUE&gt; \
    &lt;/IPARAMVALUE&gt;
&lt;IPARAMVALUE NAME="LocalOnly"&gt;&lt;VALUE&gt;FALSE&lt;/VALUE&gt;&lt;/IPARAMVALUE&gt;
&lt;IPARAMVALUE NAME="IncludeQualifiers"&gt;&lt;VALUE&gt;FALSE&lt;/VALUE&gt; \
    &lt;/IPARAMVALUE&gt;
&lt;IPARAMVALUE NAME="IncludeClassOrigin"&gt;&lt;VALUE&gt;TRUE&lt;/VALUE&gt; \
    &lt;/IPARAMVALUE&gt;
&lt;/IMETHODCALL&gt;&lt;/SIMPLEREQ&gt;
&lt;/MESSAGE&gt;&lt;/CIM&gt;
From server: Content-Type: application/xml; charset="utf-8"
From server: Content-Length: 337565
From server: Cache-Control: no-cache
From server: CIMOperation: MethodResponse
From server: &lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;CIM CIMVERSION="2.0" DTDVERSION="2.0"&gt;
&lt;MESSAGE ID="4711" PROTOCOLVERSION="1.0"&gt;
&lt;SIMPLERSP&gt;
&lt;IMETHODRESPONSE NAME="EnumerateClasses"&gt;
&lt;IRETURNVALUE&gt;
&lt;CLASS NAME="CIM_ResourcePool" SUPERCLASS="CIM_LogicalElement"&gt;
&lt;PROPERTY NAME="Generation" TYPE="uint64"&gt;
&lt;/PROPERTY&gt;
&lt;PROPERTY NAME="ElementName" TYPE="string"&gt;
&lt;/PROPERTY&gt;
&lt;PROPERTY NAME="Description" TYPE="string"&gt;
&lt;/PROPERTY&gt;
&lt;PROPERTY NAME="Caption" TYPE="string"&gt;
&lt;/PROPERTY&gt;
&lt;PROPERTY NAME="InstallDate" TYPE="datetime"&gt;
&lt;/PROPERTY&gt;
[..]
&lt;CLASS NAME="Linux_ReiserFileSystem" SUPERCLASS="CIM_UnixLocalFileSystem"&gt;
&lt;PROPERTY NAME="FSReservedCapacity" TYPE="uint64"&gt;
&lt;/PROPERTY&gt;
&lt;PROPERTY NAME="TotalInodes" TYPE="uint64"&gt;
&lt;/PROPERTY&gt;
&lt;PROPERTY NAME="FreeInodes" TYPE="uint64"&gt;
&lt;/PROPERTY&gt;
&lt;PROPERTY NAME="ResizeIncrement" TYPE="uint64"&gt;
&lt;VALUE&gt;0&lt;/VALUE&gt;
&lt;/PROPERTY&gt;
&lt;PROPERTY NAME="IsFixedSize" TYPE="uint16"&gt;
&lt;VALUE&gt;0&lt;/VALUE&gt;
&lt;/PROPERTY&gt;
[..]</screen>
   <para>
    The <option>-dx</option> option shows you the actual XML sent to SFCB by
    <command>wbemcli</command> and the actual XML received. In the
    above example, the first of many returned classes was
    <literal>CIM_ResourcePool</literal> followed by
    <literal>Linux_ReiserFileSystem</literal>. Similar entries will appear
    for all of the other registered classes.
   </para>
   <para>
    If you omit the <option>-dx</option> option, <command>wbemcli</command>
    will display only a compact representation of the returned data:
   </para>
<screen>&prompt.user;wbemcli ec http://localhost/root/cimv2
localhost:5988/root/cimv2:CIM_ResourcePool Generation=,ElementName=, \
    Description=,Caption=,InstallDate=,Name=,OperationalStatus=, \
    StatusDescriptions=,Status=,HealthState=,PrimaryStatus=, \
    DetailedStatus=,OperatingStatus=,CommunicationStatus=,InstanceID=, \
    PoolID=,Primordial=,Capacity=,Reserved=,ResourceType=, \
    OtherResourceType=,ResourceSubType=, \AllocationUnits=
localhost:5988/root/cimv2:Linux_ReiserFileSystem FSReservedCapacity=, \
    TotalInodes=,FreeInodes=,ResizeIncrement=,IsFixedSize=,NumberOfFiles=, \
    OtherPersistenceType=,PersistenceType=,FileSystemType=,ClusterSize=, \
    MaxFileNameLength=,CodeSet=,CasePreserved=,CaseSensitive=, \
    CompressionMethod=,EncryptionMethod=,ReadOnly=,AvailableSpace=, \
    FileSystemSize=,BlockSize=,Root=,Name=,CreationClassName=,CSName=, \
    CSCreationClassName=,Generation=,ElementName=,Description=,Caption=, \
    InstanceID=,InstallDate=,OperationalStatus=,StatusDescriptions=, \
    Status=,HealthState=,PrimaryStatus=,DetailedStatus=,OperatingStatus= \
    ,CommunicationStatus=,EnabledState=,OtherEnabledState=,RequestedState= \
    ,EnabledDefault=,TimeOfLastStateChange=,AvailableRequestedStates=, \
    TransitioningToState=,PercentageSpaceUse=
    [..]</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.wbem.moreinfo">
  <title>For More Information</title>

  <variablelist>
   <title>For more details about WBEM and SFCB, see the following sources:</title>
   <varlistentry>
    <term><link xlink:href="http://www.dmtf.org"/>
    </term>
    <listitem>
     <para>
      Distributed Management Task Force Web site
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <link xlink:href="http://www.dmtf.org/standards/wbem/"/>
    </term>
    <listitem>
     <para>
      Web-Based Enterprise Management (WBEM) Web site
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <link xlink:href="http://www.dmtf.org/standards/cim/"/>
    </term>
    <listitem>
     <para>
      Common Information Model (CIM) Web site
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <link xlink:href="http://sblim.wiki.sourceforge.net/"/>
    </term>
    <listitem>
     <para>
      Standards Based Linux Instrumentation (SBLIM) Web site
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <link xlink:href="http://sblim.sourceforge.net/wiki/index.php/Sfcb"/>
    </term>
    <listitem>
     <para>
      Small Footprint CIM Broker (SFCB) Web site
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <link xlink:href="http://sblim.sourceforge.net/wiki/index.php/Providers"/>
    </term>
    <listitem>
     <para>
      SBLIM providers packages
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
