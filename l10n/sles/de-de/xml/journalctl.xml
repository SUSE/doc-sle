<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="journalctl.xml" version="5.0" xml:id="cha-journalctl"> <title><command>journalctl</command>: Abfragen des <systemitem class="daemon">systemd</systemitem>-Journals</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker/>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <para>
  <systemitem class="daemon">systemd</systemitem> umfasst ein eigenes Protokollierungssystem, das als <emphasis>Journal</emphasis> bezeichnet wird. Alle Systemereignisse werden in das Journal geschrieben, so dass Sie keinen <systemitem>syslog</systemitem>-basierten Service ausführen müssen.
 </para>
 <para>
  Das Journal selbst ist ein Systemservice und wird mit <systemitem class="daemon">systemd</systemitem> verwaltet. Die vollständige Bezeichnung des Service lautet <literal>systemd-journald.service</literal>. Hier werden Protokolldaten in strukturierten, indizierten Journalen erfasst und gespeichert. Die Daten basieren dabei auf den Protokollinformationen aus dem Kernel, von den Benutzerprozessen, aus der Standardeingabe und aus den Fehlern von Systemdiensten. Der Dienst <literal>systemd-journald</literal> ist standardmäßig aktiviert:
 </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl status systemd-journald
systemd-journald.service - Journal Service
   Loaded: loaded (/usr/lib/systemd/system/systemd-journald.service; static)
   Active: active (running) since Mon 2014-05-26 08:36:59 EDT; 3 days ago
     Docs: man:systemd-journald.service(8)
           man:journald.conf(5)
 Main PID: 413 (systemd-journal)
   Status: "Processing requests..."
   CGroup: /system.slice/systemd-journald.service
           └─413 /usr/lib/systemd/systemd-journald
[...]</screen>
 <sect1 xml:id="sec-journalctl-persistent">
  <title>Festlegen des Journals als permanent</title>

  <para>
   Das Journal speichert die Protokolldaten standardmäßig in <filename>/run/log/journal/</filename>. Das Verzeichnis <filename>/run/</filename> ist naturgemäß flüchtig, weshalb die Protokolldaten beim Neubooten verloren gehen. Um permanente Protokolldaten zu erzielen, muss das Verzeichnis <filename>/var/log/journal/</filename> mit den entsprechenden Angaben zu Eigentümer und Berechtigungen vorhanden sein, damit der systemd-journald-Service die Daten dort speichern kann. So können Sie das Verzeichnis mit <systemitem class="daemon">systemd</systemitem> erstellen und die persistente Protokollierung aktivieren:
  </para>

  <procedure>
   <step>
    <para>
     Öffnen Sie die Datei <filename>/etc/systemd/journald.conf</filename> als <systemitem class="username">root</systemitem> zum Bearbeiten.
    </para>
<screen><prompt role="root">root # </prompt>vi /etc/systemd/journald.conf</screen>
   </step>
   <step>
    <para>
     Heben Sie die Auskommentierung der Zeile auf, die mit <literal>Storage=</literal> beginnt, und ändern Sie sie wie folgt:
    </para>
<screen>[...]
[Journal]
Storage=persistent
#Compress=yes
[...]</screen>
   </step>
   <step>
    <para>
     Speichern Sie die Datei, und starten Sie systemd-journald neu:
    </para>
<screen><prompt role="root">root # </prompt>systemctl restart systemd-journald</screen>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-journalctl-switches">
  <title><command>journalctl:</command>: Nützliche Schalter</title>

  <para>
   In diesem Abschnitt finden Sie einige häufig verwendete, nützliche Optionen, mit denen Sie das Standardverhalten von <command>journalctl</command> optimieren. Alle Schalter sind auf der man-Seite zu <command>journalctl</command> (<command>man 1 journalctl</command>) beschrieben.
  </para>

  <tip>
   <title>Meldungen für eine bestimmte ausführbare Datei</title>
   <para>
    Sollen alle Journaleinträge für eine bestimmte ausführbare Datei angezeigt werden, geben Sie den vollständigen Pfad zu dieser Datei an:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl /usr/lib/systemd/systemd</screen>
  </tip>

  <variablelist>
   <varlistentry>
    <term>-f</term>
    <listitem>
     <para>
      Zeigt lediglich die jüngsten Protokollmeldungen an und gibt neue Protokolleinträge aus, sobald sie zum Journal hinzugefügt werden.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term/>
    <listitem>
     <para>
      Gibt die Meldungen aus und springt an das Ende des Journals, so dass im Pager die aktuellen Einträge sichtbar sind.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>-r</term>
    <listitem>
     <para>
      Gibt die Meldungen des Journals in umgekehrter Reihenfolge aus (die jüngsten Einträge zuerst).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>-k</term>
    <listitem>
     <para>
      Zeigt nur Kernel-Meldungen an. Dies entspricht der Feldzuordnung <literal>_TRANSPORT=kernel</literal> (siehe <xref linkend="sec-journalctl-filter-fields"/>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>-u</term>
    <listitem>
     <para>
      Zeigt nur Meldungen für die angegebene <systemitem class="daemon">systemd</systemitem>-Einheit an. Dies entspricht der Feldzuordnung <literal>_SYSTEMD_UNIT=<replaceable>UNIT</replaceable></literal> (siehe <xref linkend="sec-journalctl-filter-fields"/>).
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl -u apache2
[...]
Jun 03 10:07:11 pinkiepie systemd[1]: Starting The Apache Webserver...
Jun 03 10:07:12 pinkiepie systemd[1]: Started The Apache Webserver.</screen>
    </listitem>
   </varlistentry>
  </variablelist>

  <para/>
 </sect1>
 <sect1 xml:id="sec-journalctl-filter">
  <title>Filtern der Journalausgabe</title>

  <para>
   Wenn Sie <command>journalctl</command> ohne Schalter aufrufen, wird der gesamte Inhalt des Journals angezeigt (die ältesten Einträge an erster Stelle). Die Ausgabe kann mit bestimmten Schaltern und Feldern gefiltert werden.
  </para>

  <sect2 xml:id="sec-journalctl-filter-boot">
   <title>Filtern nach Bootnummer</title>
   <para>
    <command>journalctl</command> kann die Meldungen nach einem bestimmten System-Bootvorgang filtern. Zum Anzeigen einer Liste mit allen verfügbaren Bootvorgängen führen Sie Folgendes aus:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl --list-boots
-1 097ed2cd99124a2391d2cffab1b566f0 Mon 2014-05-26 08:36:56 EDT—Fri 2014-05-30 05:33:44 EDT
 0 156019a44a774a0bb0148a92df4af81b Fri 2014-05-30 05:34:09 EDT—Fri 2014-05-30 06:15:01 EDT</screen>
   <para>
    Die erste Spalte enthält den Boot-Offset: <literal>0</literal> für den aktuellen Bootvorgang, <literal>-1</literal> für den vorangegangenen Bootvorgang, <literal>-2</literal> für den davor erfolgten Bootvorgang usw. Die zweite Spalte zeigt die Boot-ID, gefolgt von den Zeitstempeln für Beginn und Ende des Zeitraums, über den das System nach dem Bootvorgang aktiv war.
   </para>
   <para>
    Alle Meldungen für den aktuellen Bootvorgang anzeigen:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl -b</screen>
   <para>
    Wenn Sie die Journalmeldungen für den vorangegangenen Bootvorgang abrufen möchten, hängen Sie einen Offset-Parameter an. Im folgenden Beispiel werden die Meldungen für den vorangegangenen Bootvorgang ausgegeben:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl -b -1</screen>
   <para>
    Alternativ können Sie die Bootmeldungen nach der Boot-ID auflisten. Verwenden Sie hierzu das Feld _BOOT_ID:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl _BOOT_ID=156019a44a774a0bb0148a92df4af81b</screen>
  </sect2>

  <sect2 xml:id="sec-journalctl-filter-time">
   <title>Filtern nach Zeitraum</title>
   <para>
    Sie können die Ausgabe von <command>journalctl</command> durch Angabe des Start- oder Enddatums filtern. Für Datumsangaben gilt das Format „2014-06-30 9:17:16“. Wenn Sie keine Uhrzeit angeben, wird Mitternacht (0:00 Uhr) angenommen. Wenn die Sekundenangabe fehlt, wird „:00“ angenommen. Wenn Sie kein Datum angeben, wird das aktuelle Datum angenommen. Statt eines numerischen Ausdrucks können Sie die Schlüsselwörter „gestern“, „heute“ oder „morgen“ angeben. Diese Wörter bezeichnen Mitternacht am Tag vor dem aktuellen Tag, am aktuellen Tag bzw. am Tag nach dem aktuellen Tag. Das Schlüsselwort „now“ (jetzt) verweist auf die aktuelle Uhrzeit am heutigen Tag. Auch relative Zeitangaben mit dem Präfix <literal>-</literal> oder <literal>+</literal> sind möglich. Diese Zeitangaben verweisen dann entsprechend auf eine Uhrzeit vor oder nach der aktuellen Uhrzeit.
   </para>
   <para>
    Nur neue Meldungen ab jetzt anzeigen und Ausgabe entsprechend aktualisieren:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl --since "now" -f</screen>
   <para>
    Alle Meldungen ab der letzten Mitternacht bis 3:20 Uhr anzeigen:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl --since "today" --until "3:20"</screen>
  </sect2>

  <sect2 xml:id="sec-journalctl-filter-fields">
   <title>Filtern nach Feldern</title>
   <para>
    Sie können die Ausgabe des Journals nach bestimmten Feldern filtern. Die Syntax für ein abzugleichendes Feld lautet <literal>FELDNAME=FILTERKRITERIUM</literal>, beispielsweise <literal>_SYSTEMD_UNIT=httpd.service</literal>. Wenn Sie mehrere Filterkriterien in einer einzigen Abfrage angeben, werden die Ausgabemeldungen noch stärker gefiltert. Eine Liste der Standardfelder finden Sie auf der man-Seite <command>man 7 systemd.journal-fields</command>.
   </para>
   <para>
    Meldungen anzeigen, die von einer bestimmten Prozess-ID erzeugt wurden:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl _PID=1039</screen>
   <para>
    Meldungen anzeigen, die zu einer bestimmten Benutzer-ID gehören:
   </para>
<screen># journalctl _UID=1000</screen>
   <para>
    Meldungen aus dem Kernel-Ring-Puffer anzeigen (entspricht der Ausgabe von <command>dmesg</command>):
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl _TRANSPORT=kernel</screen>
   <para>
    Meldungen aus der Standard- oder Fehlerausgabe des Services anzeigen:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl _TRANSPORT=stdout</screen>
   <para>
    Nur Meldungen anzeigen, die von einem bestimmten Service erzeugt wurden:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl _SYSTEMD_UNIT=avahi-daemon.service</screen>
   <para>
    Wenn Sie zwei verschiedene Felder angeben, werden nur solche Einträge zurückgegeben, die beide Ausdrücke gleichzeitig erfüllen:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl _SYSTEMD_UNIT=avahi-daemon.service _PID=1488</screen>
   <para>
    Wenn Sie zwei Kriterien für dasselbe Feld angeben, werden alle Einträge zurückgegeben, die einen dieser Ausdrücke erfüllen:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl _SYSTEMD_UNIT=avahi-daemon.service _SYSTEMD_UNIT=dbus.service</screen>
   <para>
    Mit dem Begrenzungszeichen „+“ verbinden Sie zwei Ausdrücke mit einem logischen „OR“. Im folgenden Beispiel werden alle Meldungen aus dem Avahi-Service mit der Prozess-ID 1480 zusammen mit allen Meldungen vom D-Bus-Service gezeigt:
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl _SYSTEMD_UNIT=avahi-daemon.service _PID=1480 + _SYSTEMD_UNIT=dbus.service</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-journalctl-investigate">
  <title>Untersuchen von <systemitem class="daemon">systemd</systemitem>-Fehlern</title>

  <para>
   In diesem Abschnitt wird an einem einfachen Beispiel erläutert, wie Sie die Fehler auffinden und beheben, die <systemitem class="daemon">systemd</systemitem> beim Starten von <command>apache2</command> meldet.
  </para>

  <procedure>
   <step>
    <para>
     Versuchen Sie, den apache2-Service zu starten:
    </para>
<screen># systemctl start apache2
Job for apache2.service failed. See 'systemctl status apache2' and 'journalctl -xn' for details.</screen>
   </step>
   <step>
    <para>
     Prüfen Sie den Status dieses Service:
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl status apache2
apache2.service - The Apache Webserver
   Loaded: loaded (/usr/lib/systemd/system/apache2.service; disabled)
   Active: failed (Result: exit-code) since Tue 2014-06-03 11:08:13 CEST; 7min ago
  Process: 11026 ExecStop=/usr/sbin/start_apache2 -D SYSTEMD -DFOREGROUND \
           -k graceful-stop (code=exited, status=1/FAILURE)</screen>
    <para>
     Die ID des Prozesses, der den Fehler verursacht, lautet 11026.
    </para>
   </step>
   <step>
    <para>
     Rufen Sie die ausführliche Version der Meldungen zur Prozess-ID 11026 ab:
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl -o verbose _PID=11026
[...]
MESSAGE=AH00526: Syntax error on line 6 of /etc/apache2/default-server.conf:
[...]
MESSAGE=Invalid command 'DocumenttRoot', perhaps misspelled or defined by a module
[...]</screen>
   </step>
   <step>
    <para>
     Korrigieren Sie den Schreibfehler in <filename>/etc/apache2/default-server.conf</filename>, starten Sie den apache2-Service, und lassen Sie den Status ausgeben:
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl start apache2 &amp;&amp; systemctl status apache2
apache2.service - The Apache Webserver
   Loaded: loaded (/usr/lib/systemd/system/apache2.service; disabled)
   Active: active (running) since Tue 2014-06-03 11:26:24 CEST; 4ms ago
  Process: 11026 ExecStop=/usr/sbin/start_apache2 -D SYSTEMD -DFOREGROUND
           -k graceful-stop (code=exited, status=1/FAILURE)
 Main PID: 11263 (httpd2-prefork)
   Status: "Processing requests..."
   CGroup: /system.slice/apache2.service
           ├─11263 /usr/sbin/httpd2-prefork -f /etc/apache2/httpd.conf -D [...]
           ├─11280 /usr/sbin/httpd2-prefork -f /etc/apache2/httpd.conf -D [...]
           ├─11281 /usr/sbin/httpd2-prefork -f /etc/apache2/httpd.conf -D [...]
           ├─11282 /usr/sbin/httpd2-prefork -f /etc/apache2/httpd.conf -D [...]
           ├─11283 /usr/sbin/httpd2-prefork -f /etc/apache2/httpd.conf -D [...]
           └─11285 /usr/sbin/httpd2-prefork -f /etc/apache2/httpd.conf -D [...]
</screen>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-journalctl-config">
  <title>Konfiguration von journald</title>

  <para>
   Das Verhalten des systemd-journald-Service lässt sich in <filename>/etc/systemd/journald.conf</filename> festlegen. In diesem Abschnitt werden lediglich die grundlegenden Optionseinstellungen vorgestellt. Eine vollständige Beschreibung der Datei finden Sie auf der man-Seite <command>man 5 journald.conf</command>. Damit die Änderungen in Kraft treten, müssen Sie das Journal wie folgt neu starten:
  </para>

<screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl restart systemd-journald</screen>

  <sect2 xml:id="sec-journalctl-config-systemmaxuse">
   <title>Ändern der Größenbeschränkung für das Journal</title>
   <para>
    Wenn die Journalprotokolldaten an einem persistenten Speicherort gespeichert werden (siehe <xref linkend="sec-journalctl-persistent"/>), belegen sie bis zu 10 % des Dateisystems, auf dem sich <filename>/var/log/journal</filename> befindet. Ist <filename>/var/log/journal</filename> beispielsweise auf einer <filename>/var</filename>-Partition mit einer Kapazität von 30 GB gespeichert, so kann das Journal bis zu 3 GB des Festplattenspeichers belegen. Zum Bearbeiten dieser Größenbeschränkung ändern Sie die Option <option>SystemMaxUse</option> (und heben Sie die Auskommentierung dieser Option auf):
   </para>
<screen>SystemMaxUse=50M</screen>
  </sect2>

  <sect2 xml:id="sec-journalctl-config-ttypath">
   <title>Weiterleiten des Journals an <filename>/dev/ttyX</filename></title>
   <para>
    Sie können das Journal an ein Terminalgerät weiterleiten, so dass Sie an einem bevorzugten Terminalbildschirm (beispielsweise <literal>/dev/tty12</literal>) über Systemmeldungen informiert werden. Ändern Sie die folgenden journald-Optionen:
   </para>
<screen>ForwardToConsole=yes
TTYPath=/dev/tty12</screen>
  </sect2>

  <sect2 xml:id="sec-journalctl-config-forwardtosyslog">
   <title>Weiterleiten des Journals an die Syslog-Funktion</title>
   <para>
    journald ist abwärtskompatibel zu herkömmlichen syslog-Implementierungen wie <systemitem>rsyslog</systemitem>. Prüfen Sie Folgendes:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      rsyslog ist installiert.
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> rpm -q rsyslog
rsyslog-7.4.8-2.16.x86_64</screen>
    </listitem>
    <listitem>
     <para>
      Der rsyslog-Service ist aktiviert.
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl is-enabled rsyslog
enabled</screen>
    </listitem>
    <listitem>
     <para>
      Die Weiterleitung an syslog wird in <filename>/etc/systemd/journald.conf</filename> aktiviert.
     </para>
<screen>ForwardToSyslog=yes</screen>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-journalctl-yast">
  <title>Filtern des <systemitem class="daemon">systemd</systemitem>-Journals mit YaST</title>

  <para>
   Mit dem YaST-Journalmodul filtern Sie das systemd-Journal schnell und einfach (ohne die journalctl-Syntax verwenden zu müssen). Installieren Sie das Modul mit <command>sudo zypper in yast2-journal</command> und starten Sie es dann in YaST mit <menuchoice> <guimenu> System</guimenu>
   <guimenu> systemd Journal</guimenu> </menuchoice>. Alternativ starten Sie das Modul von der Befehlszeile aus mit dem Befehl <command>sudo yast2 journal</command>.
  </para>

  <figure xml:id="fig-journalctl-yast">
   <title>YaST-systemd-Journal</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="yast2_journal.png" width="80%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="yast2_journal.png" width="85%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   Das Modul zeigt die Protokolleinträge in einer Tabelle. Im Suchfeld oben suchen Sie nach Einträgen, die bestimmte Zeichen enthalten, ähnlich wie mit <command>grep</command>. Zum Filtern der Einträge nach Datum/Uhrzeit, Einheit, Datei oder Priorität klicken Sie auf <guimenu>Change filters</guimenu> (Filter ändern) und legen Sie die jeweiligen Optionen fest.
  </para>
 </sect1>
 <sect1 xml:id="sec-journalctl-gnome-logs">
  <title>Abrufen von Protokollen in GNOME</title>
  <para>
   Sie können das Journal mit den <emphasis>GNOME-Protokollen</emphasis> abrufen. Starten Sie dieses Kommando über das Anwendungsmenü. Zum Abrufen von Systemprotokollmeldungen muss dieses Kommando als root ausgeführt werden, beispielsweise mit <command>xdg-su gnome-logs</command>. Dieses Kommando kann mit <keycombo> <keycap function="alt"/>
   <keycap>F2</keycap></keycombo> ausgeführt werden.
  </para>
 </sect1>
</chapter>
