<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE preface
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<preface version="5.0" xml:id="preface-tuning"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>About This Guide</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
    </info>
    <para>
  &productname; is used for a broad range of usage scenarios in
  enterprise and scientific data centers. &suse; has ensured
  &productname; is set up in a way that it accommodates different
  operation purposes with optimal performance. However, &productname;
  must meet very different demands when employed on a number crunching
  server compared to a file server, for example.
 </para>
 <para>
  It is not possible to ship a distribution that is optimized for all
  workloads. Different workloads vary substantially in some aspects. Most
  important among those are I/O access patterns, memory access patterns, and
  process scheduling. A behavior that perfectly suits a certain workload
  might reduce performance of another workload. For example, I/O-intensive
  tasks, such as handling database requests, usually have completely
  different requirements than CPU-intensive tasks, such as video encoding.
  The versatility of Linux makes it possible to configure your system in a
  way that it brings out the best in each usage scenario.
 </para>
 <para>
  This manual introduces you to means to monitor and analyze your system. It
  describes methods to manage system resources and to tune your system. This
  guide does <emphasis>not</emphasis> offer recipes for special scenarios,
  because each server has got its own different demands. It rather enables
  you to thoroughly analyze your servers and make the most out of them.
 </para>
 <variablelist>
<!--
  <varlistentry>
   <term>Understanding the Basics</term>
   <listitem>
    <para>
     How does the kernel handle
     - processes
     - memory management
     - I/O
     - networking
    </para>
   </listitem>
  </varlistentry>
-->
  <varlistentry>
   <term><xref linkend="part-tuning-basics"/></term>
   <listitem>
    <para>
     Tuning a system requires a carefully planned proceeding. Learn which
     steps are necessary to successfully improve your system.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
<!-- System Monitoring -->
   <term><xref linkend="part-tuning-monitoring"/>
   </term>
   <listitem>
    <para>
     Linux offers a large variety of tools to monitor almost every aspect of
     the system. Learn how to use these utilities and how to read and
     analyze the system log files.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
<!-- Kernel Monitoring -->
   <term><xref linkend="part-tuning-kerneltrace"/>
   </term>
   <listitem>
    <para>
     The Linux kernel itself offers means to examine every nut, bolt and
     screw of the system. This part introduces you to SystemTap, a scripting
     language for writing kernel modules that can be used to analyze and
     filter data. Collect debugging information and find bottlenecks by
     using kernel probes and Perf. Last, monitor applications with
     Oprofile.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
<!-- Resource Management -->
   <term><xref linkend="part-tuning-resources"/>
   </term>
   <listitem>
    <para>
     Learn how to set up a tailor-made system fitting exactly the server's
     need. Get to know how to use power management while at the same time
     keeping the performance of a system at a level that matches the current
     requirements.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
<!--  Kernel Tuning -->
   <term><xref linkend="part-tuning-kernel"/>
   </term>
   <listitem>
    <para>
     The Linux kernel can be optimized either by using sysctl, via the
     <filename>/proc</filename> and <filename>/sys</filename> file systems
     or by kernel command line parameters. This part covers tuning the I/O
     performance and optimizing the way how Linux schedules processes. It
     also describes basic principles of memory management and shows how
     memory management can be fine-tuned to suit needs of specific
     applications and usage patterns. Furthermore, it describes how to
     optimize network performance.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
<!--  Handling System Dumps -->
   <term><xref linkend="part-tuning-dumps"/>
   </term>
   <listitem>
    <para>
     This part enables you to analyze and handle application or system
     crashes. It introduces tracing tools such as strace or ltrace and
     describes how to handle system crashes using Kexec and Kdump.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 <tip os="sles;sled">
  <title>Getting the &sle; SDK</title>
  <para>
   The SDK is a module for &sle; and is available via an online channel from
   the &scc;.  Alternatively, go to <link
   os="sles;sled" xlink:href="http://download.suse.com/"/><link
   os="osuse" xlink:href="https://doc.opensuse.org/"/>, search for <literal>&sle;
   Software Development Kit</literal> and download it from there.
   Refer to <xref linkend="cha-add-ons"/> for details.
  </para>
 </tip>
 <xi:include href="common_intro_available_doc_i.xml"/>
 <xi:include href="common_intro_feedback_i.xml"/>
 <xi:include href="common_intro_typografie_i.xml"/>
 <xi:include href="common_intro_lifecycle_support_i.xml" os="sles;sled"/>
</preface>
