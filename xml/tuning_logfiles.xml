<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<!-- fs 2010-05-10:
  TODO:
  * more on logrotate?
  * logger

Syslog, logging general:
http://www.linux-tutorial.info/modules.php?name=MContent&pageid=56
http://www.linux-tutorial.info/modules.php?name=MContent&pageid=59

Logger:
http://tldp.org/LDP/LGNET/148/darin.html
-->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.tuning.logfiles">
 <title>Analyzing and Managing System Log Files</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
    </info>
    <para>
  System log file analysis is one of the most important tasks when analyzing
  the system. In fact, looking at the system log files should be the first
  thing to do when maintaining or troubleshooting a system. &productname;
  automatically logs almost everything that happens on the system in detail.
  Since the move to &systemd;, kernel messages and messages of system
  services registered with &systemd; are logged in &systemd; journal
  (see <xref linkend="cha.journalctl"/>). Other log files (mainly those of
  system applications) are written in plain text and can be easily read
  using an editor or pager. It is also possible to parse them using scripts.
  This allows you to filter their content.
 </para>
 <sect1 xml:id="sec.tuning.logfiles.logs">
  <title>System Log Files in <filename>/var/log/</filename></title>

  <para>
   System log files are always located under the
   <filename>/var/log</filename> directory. The following list presents an
   overview of all system log files from &productname; present after a
   default installation. Depending on your installation scope,
   <filename>/var/log</filename> also contains log files from other services
   and applications not listed here. Some files and directories described
   below are <quote>placeholders</quote> and are only used, when the
   corresponding application is installed. Most log files are only visible
   for the user &rootuser;.
  </para>

  <variablelist>
<!-- fs 2016-11-17:
     The acpid daemon has been dropped with SLE 12; the file is still there,
     but empty

   <varlistentry>
    <term><filename>acpid</filename>
    </term>
    <listitem>
     <para>
      Log of the advanced configuration and power interface event daemon
      (<systemitem class="daemon">acpid</systemitem>), a daemon to notify
      user-space programs of ACPI events.
      <systemitem class="daemon">acpid</systemitem> will log all of its
      activities,  the <systemitem>STDOUT</systemitem> and
      <systemitem>STDERR</systemitem> of any actions to syslog.
     </para>
    </listitem>
    </varlistentry>
-->
   <varlistentry>
    <term><filename>apparmor/</filename>
    </term>
    <listitem>
     <para>
      &aa; log files. For more information about &aa;, see
      <xref linkend="part.apparmor"/>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>audit/</filename>
    </term>
    <listitem>
     <para>
      Logs from the audit framework. See <xref linkend="part.audit"/> for
      details.
     </para>
    </listitem>
   </varlistentry>
<!-- 2014-06-04 tbazant: now part of journald
   <varlistentry>
    <term><filename>boot.msg</filename>
    </term>
    <listitem>
     <para>
      Log of the system init process&mdash;this file contains all boot
      messages from the kernel, the boot scripts and the services started
      during the boot sequence.
     </para>
     <para>
      Check this file to find out whether your hardware has been correctly
      initialized or all services have been started successfully.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>boot.omsg</filename>
    </term>
    <listitem>
     <para>
      Log of the system shutdown process - this file contains all messages
      issued on the last shutdown or reboot.
     </para>
    </listitem>
   </varlistentry>
   -->
   <varlistentry>
    <term><filename>ConsoleKit/</filename>
    </term>
    <listitem>
     <para>
      Logs of the <systemitem class="daemon">ConsoleKit</systemitem> daemon
      (daemon for tracking what users are logged in and how they interact
      with the computer).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>cups/</filename>
    </term>
    <listitem>
     <para>
      Access and error logs of the Common Unix Printing System
      (<systemitem class="daemon">cups</systemitem>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>firewall</filename>
    </term>
    <listitem>
     <para>
      Firewall logs.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>gdm/</filename>
    </term>
    <listitem>
     <para>
      Log files from the &gnome; display manager.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>krb5/</filename>
    </term>
    <listitem>
     <para>
      Log files from the Kerberos network authentication system.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>lastlog</filename>
    </term>
    <listitem>
     <para>
      A database containing information on the last login of each user. Use
      the command <command>lastlog</command> to view. See <command>man 8
      lastlog</command> for more information.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>localmessages</filename>
    </term>
    <listitem>
     <para>
      Log messages of some boot scripts, for example the log of the DHCP
      client.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>mail*</filename>
    </term>
    <listitem>
     <para>
      Mail server (<systemitem class="service">postfix</systemitem>,
      <systemitem class="service">sendmail</systemitem>) logs.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>messages</filename>
    </term>
    <listitem>
     <para>
      This is the default place where all kernel and system log messages go
      and should be the first place (along with
      <filename>/var/log/warn</filename>) to look at in case of problems.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>NetworkManager</filename>
    </term>
    <listitem>
     <para>
      NetworkManager log files.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>news/</filename>
    </term>
    <listitem>
     <para>
      Log messages from a news server.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>chrony/</filename>
    </term>
    <listitem>
     <para>
      Logs from the Network Time Protocol daemon
      (&chrony;).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>pk_backend_zypp*</filename>
    </term>
    <listitem>
     <para>
      PackageKit (with <systemitem class="library">libzypp</systemitem>
      back-end) log files.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>puppet/</filename>
    </term>
    <listitem>
     <para>
      Log files from the data center automation tool puppet.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>samba/</filename>
    </term>
    <listitem>
     <para>
      Log files from Samba, the Windows SMB/CIFS file server.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>warn</filename>
    </term>
    <listitem>
     <para>
      Log of all system warnings and errors. This should be the first place
      (along with the output of the &systemd; journal) to look in case of
      problems.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>wtmp</filename>
    </term>
    <listitem>
     <para>
      Database of all login/logout activities,
      <remark>sknorr, 2014-08-21: why was "runlevel changes" commented out here?
Is this a systemd-related change? Should this then be removed entirely?</remark>
      and remote connections. Use the command <command>last</command> to
      view. See <command>man 1 last</command> for more information.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>Xorg.0.log</filename>
    </term>
    <listitem>
     <para>
      &xvendor; start-up log file. Refer to this in case you have
      problems starting &xvendor;. Copies from previous &xvendor;
      starts are numbered Xorg.<replaceable>?</replaceable>.log.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>YaST2/</filename>
    </term>
    <listitem>
     <para>
      All &yast; log files.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>zypp/</filename>
    </term>
    <listitem>
     <para>
      <systemitem class="library">libzypp</systemitem> log files. Refer to
      these files for the package installation history.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>zypper.log</filename>
    </term>
    <listitem>
     <para>
      Logs from the command line installer <command>zypper</command>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec.tuning.logfiles.view">
  <title>Viewing and Parsing Log Files</title>

  <para>
   To view log files, you can use any text editor. There is also a simple
   &yast; module for viewing the system log available in the &yast;
   control center under <menuchoice> <guimenu>Miscellaneous</guimenu>
   <guimenu>System Log</guimenu> </menuchoice>.
  </para>

  <para>
   For viewing log files in a text console, use the commands
   <command>less</command> or <command>more</command>. Use
   <command>head</command> and <command>tail</command> to view the beginning
   or end of a log file. To view entries appended to a log file in real-time
   use <command>tail</command> <option>-f</option>. For information about
   how to use these tools, see their man pages.
  </para>

  <para>
   To search for strings or regular expressions in log files use
   <command>grep</command>. <command>awk</command> is useful for parsing and
   rewriting log files.
  </para>
 </sect1>
 <sect1 xml:id="sec.tuning.logfiles.logrotate">
  <title>Managing Log Files with <command>logrotate</command></title>

  <para>
   Log files under <filename>/var/log</filename> grow on a daily basis and
   quickly become very large. <command>logrotate</command> is a tool that
   helps you manage log files and their growth. It allows automatic
   rotation, removal, compression, and mailing of log files. Log files can
   be handled periodically (daily, weekly, or monthly) or when exceeding a
   particular size.
  </para>

  <para>
   <command>logrotate</command> is usually run daily by &systemd;,
   and thus usually modifies log files only once a day. However, exceptions
   occur when a log file is modified because of its size, if
   <command>logrotate</command> is run multiple times a day, or if
   <option>--force</option> is enabled.  Use
   <filename>/var/lib/misc/logrotate.status</filename> to find out when a
   particular file was last rotated.
  </para>

  <para>
   The main configuration file of <command>logrotate</command> is
   <filename>/etc/logrotate.conf</filename>. System packages and
   programs that produce log files (for example,
   <systemitem class="resource">apache2</systemitem>) put their own
   configuration files in the <filename>/etc/logrotate.d/</filename>
   directory. The content of <filename>/etc/logrotate.d/</filename> is
   included via <filename>/etc/logrotate.conf</filename>.
  </para>

  <example xml:id="ex.tuning.logfiles.logrotate.config">
   <title>Example for <filename>/etc/logrotate.conf</filename></title>
   <para>
    <remark>
     taroth 2017-12-14: for the sake of using the prompt entities
     (&prompt.user; or &prompt.root;) consistently in our docs:
     please do not mix several example commands within one screen
     and do not use '#' to refer to an example command - this makes
     it impossible to mark the individual commands with a proper
     prompt
    </remark>
   </para>
<screen># see "man logrotate" for details
# rotate log files weekly
weekly

# keep 4 weeks worth of backlogs
rotate 4

# create new (empty) log files after rotating old ones
create

# use date as a suffix of the rotated file
dateext

# uncomment this if you want your log files compressed
#compress

# comment these to switch compression to use gzip or another
# compression scheme
compresscmd /usr/bin/bzip2
uncompresscmd /usr/bin/bunzip2

# RPM packages drop log rotation information into this directory
include /etc/logrotate.d</screen>
  </example>

  <important>
   <title>Avoid Permission Conflicts</title>
   <para>
    The <systemitem>create</systemitem> option pays heed to the modes and
    ownerships of files specified in <filename>/etc/permissions*</filename>.
    If you modify these settings, make sure no conflicts arise.
   </para>
  </important>


<!-- man page info:


   Any number of configuration files may be given on the command line. Later con-
       fig files may override the options given in earlier files, so the order
       in  which  the logrotate configuration files are listed in is important.  Nor-
       mally, a single configuration file which includes any other configuration files which
       are  needed  should  be used.  See below for more information on how to
       use the include directive to accomplish this.  If a directory is  given
       on  the  command line, every file in that directory is used as a config
       file.

       logrotate [-dv] [-f|- -force] [-s| - -state file] config_file+



OPTIONS

       -v     Turn on verbose mode.


       -d     Turns  on  debug mode and implies -v.  In debug mode, no changes
              will be made to the logs or to the logrotate state file.


       -f, - -force
              Tells logrotate to force the rotation, even if it doesn’t  think
              this  is  necessary.   Sometimes this is useful after adding new
              entries to logrotate, or if old log files have been  removed  by
              hand,  as  the  new files will be created, and logging will con-
              tinue correctly.


       -m, - -mail <command>
              Tells logrotate which command to use  when  mailing  logs.  This
              command  should accept two arguments: 1) the subject of the mes-
              sage, and 2) the recipient. The command must then read a message
              on standard input and mail it to the recipient. The default mail
              command is /bin/mail -s.


       -s, - -state <statefile>
              Tells logrotate to use an alternate state file.  This is  useful
              if  logrotate  is being run as a different user for various sets
              of log files.  The default state file is /var/lib/logrotate/sta-
              tus.


       - -usage
              Prints a short usage message.




CONFIGURATION FILE

       logrotate  reads  everything  about the log files it should be handling
       from the series of configuration files specified on the  command  line.
       Each configuration file can set global options (local definitions over-
       ride global ones, and later  definitions  override  earlier  ones)  and
       specify  a  log file  to  rotate. A simple configuration file looks like
       this:

       # sample logrotate configuration file
       compress

       /var/log/messages {
           rotate 5
           weekly
           postrotate
                                     /sbin/killall -HUP syslogd
           endscript
       }

       "/var/log/httpd/access.log" /var/log/httpd/error.log {
           rotate 5
           mail www@my.org
           size=100k
           sharedscripts
           postrotate
                                     /sbin/killall -HUP httpd
           endscript
       }

       /var/log/news/news.crit {
           monthly
           rotate 2
           olddir /var/log/news/old
           missingok
           postrotate
                                     kill -HUP ‘cat /var/run/inn.pid‘
           endscript
           nocompress
       }

       The first few lines set global options; in the example, logs  are  com-
       pressed after they are rotated.  Note that comments may appear anywhere
       in the configuration file as long as the first non-whitespace character on the
       line is a #.

       The next section of the configuration files defined how to handle the log file
       /var/log/messages. The log will go through five weekly rotations before
       being  removed. After the log file has been rotated (but before the old
       version of the log has been compressed), the command /sbin/killall -HUP
       syslogd will be executed.

       The     next     section    defines    the    parameters    for    both
       /var/log/httpd/access.log  and  /var/log/httpd/error.log.    They   are
       rotated whenever it grows over 100k is size, and the old logs files are
       mailed (uncompressed) to www@my.org after going  through  5  rotations,
       rather  then being removed. The sharedscripts means that the postrotate
       script will only be run once(after the old logs have been  compressed),
       not  once  for  each  log which is rotated. Note that the double quotes
       around the first file name at  the  beginning  of  this  section  allows
       logrotate  to rotate logs with spaces in the name. Normal shell quoting
       rules apply, with ’, ", and \ characters supported.

       The last section defines  the  parameters  for  all  of  the  files  in
       /var/log/news.  Each  file is rotated on a monthly basis.  This is con-
       sidered a single rotation directive and if errors occur for  more  then
       one file, the log files are not compressed.

       Please  use  wild cards  with caution.  If you specify *, logrotate will
       rotate all files, including previously rotated ones.  A way around this
       is  to  use  the  olddir  directive  or  a more exact wild card (such as
       *.log).

       Here is more information on the directives which may be included  in  a
       logrotate configuration file:


       compress
              Old  versions  of log files are compressed with gzip by default.
              See also nocompress.


       compresscmd
              Specifies which command to  use  to  compress  log  files.   The
              default is gzip.  See also compress.


       uncompresscmd
              Specifies  which  command  to  use to uncompress log files.  The
              default is gunzip.


       compressext
              Specifies which extension to use on compressed logfiles, if com-
              pression is enabled.  The default follows that of the configured
              compression command.


       compressoptions
              Command line options may be passed to the  compression  program,
              if  one is in use.  The default, for gzip, is "-9" (maximum com-
              pression).


       copy   Make a copy of the log file, but don’t change  the  original  at
              all.   This option can be used, for example, to make a snapshot
              of the current log file, or when some  other  utility  needs  to
              truncate or pare the file.  When this option is used, the create
              option will have no effect, as the old log file stays in  place.


       copytruncate
              Truncate  the  original log file in place after creating a copy,
              instead of moving the old log file and optionally creating a new
              one,  It  can be used when some program cannot be told to close
              its logfile and thus might continue writing (appending)  to  the
              previous log file forever.  Note that there is a very small time
              slice between copying the file and truncating it, so  some  log-
              ging  data  might be lost.  When this option is used, the create
              option will have no effect, as the old log file stays in  place.


       create mode owner group
              Immediately after rotation (before the postrotate script is run)
              the log file is created (with the same name as the log file just
              rotated).   mode  specifies  the  mode for the log file in octal
              (the same as chmod(2)), owner specifies the username  who  will
              own  the  log  file,  and group specifies the group the log file
              will belong to. Any of the log file attributes may  be  omitted,
              in  which  case  those  attributes for the new file will use the
              same values as the original log file for the omitted attributes.
              This option can be disabled using the nocreate option.


       daily  Log files are rotated every day.


       delaycompress
              Postpone  compression of the previous log file to the next rota-
              tion cycle.  This has only effect when used in combination  with
              compress.   It  can be used when some program cannot be told to
              close its logfile and thus might continue writing to the  previ-
              ous log file for some time.


       extension ext
              Log  files  are given the final extension ext after rotation. If
              compression is used, the compression  extension  (normally  .gz)
              appears after ext.


       ifempty
              Rotate  the  log  file  even  if  it  is  empty,  overiding  the
              notifempty option (ifempty is the default).


       include file_or_directory
              Reads the file given as an argument as if it was included inline
              where  the  include  directive appears. If a directory is given,
              most of the files in that directory are read in alphabetic order
              before  processing  of  the  including  file continues. The only
              files which are ignored are files which are  not  regular  files
              (such  as directories and named pipes) and files whose names end
              with one of the taboo extensions, as specified by  the  tabooext
              directive.  The include directive may not appear inside of a log
              file definition.


       mail address
              When a log is rotated out-of-existence, it is mailed to address.
              If  no  mail should be generated by a particular log, the nomail
              directive may be used.


       mailfirst
              When using the mail command, mail the just-rotated file, instead
              of the about-to-expire file.


       maillast
              When  using  the  mail  command,  mail the about-to-expire file,
              instead of the just-rotated file (this is the default).


       missingok
              If the log file is missing, go on to the next one without  issu-
              ing an error message. See also nomissingok.


       monthly
              Log files are rotated the first time logrotate is run in a month
              (this is normally on the first day of the month).


       nocompress
              Old versions of log files are not compressed with gzip. See also
              compress.


       nocopy Do  not copy the original log file and leave it in place.  (this
              overrides the copy option).


       nocopytruncate
              Do not truncate the original log file in place after creating  a
              copy (this overrides the copytruncate option).


       nocreate
              New  log  files  are  not  created  (this  overrides  the create
              option).


       nodelaycompress
              Do not postpone compression of the previous log file to the next
              rotation cycle (this overrides the delaycompress option).


       nomail Don’t mail old log files to any address.


       nomissingok
              If  a  log  file  does  not  exist,  issue an error. This is the
              default.


       noolddir
              Logs are rotated in the same directory the log normally  resides
              in (this overrides the olddir option).


       nosharedscripts
              Run  prerotate  and postrotate scripts for every script which is
              rotated (this is the default, and  overrides  the  sharedscripts
              option).


       notifempty
              Do not rotate the log if it is empty (this overrides the ifempty
              option).


       olddir directory
              Logs are moved into directory for rotation. The  directory  must
              be  on  the  same physical device as the log file being rotated,
              and is assumed to be relative to the directory holding  the  log
              file unless an absolute path name is specified. When this option
              is used all old versions of the log end up in  directory.   This
              option may be overriden by the noolddir option.


       postrotate/endscript
              The  lines  between postrotate and endscript (both of which must
              appear on lines by themselves) are executed after the  log  file
              is  rotated.  These  directives  may only appear inside of a log
              file definition.  See prerotate as well.


       prerotate/endscript
              The lines between prerotate and endscript (both  of  which  must
              appear  on lines by themselves) are executed before the log file
              is rotated and only if the log will actually be  rotated.  These
              directives may only appear inside of a log file definition.  See
              postrotate as well.


       firstaction/endscript
              The lines between firstaction and endscript (both of which  must
              appear  on lines by themselves) are executed once before all log
              files that match the wild carded pattern are rotated, before pre-
              rotate  script is run and only if at least one log will actually
              be rotated. These directives may only appear  inside  of  a  log
              file definition. See lastaction as well.


       lastaction/endscript
              The  lines  between lastaction and endscript (both of which must
              appear on lines by themselves) are executed once after  all  log
              files  that  match  the  wild carded  pattern  are rotated, after
              postrotate script is run  and  only  if  at  least  one  log  is
              rotated.  These  directives may only appear inside of a log file
              definition. See lastaction as well.


       rotate count
              Log files are rotated <count>  times  before  being  removed  or
              mailed to the address specified in a mail directive. If count is
              0, old versions are removed rather then rotated.


       size size
              Log files are rotated when they grow bigger then size bytes.  If
              size  is  followed by M, the size if assumed to be in megabytes.
              If the k is used, the size is in kilobytes. So  size  100,  size
              100k, and size 100M are all valid.

       sharedscripts
              Normally,  prescript and postscript scripts are run for each log
              which is rotated, meaning that a single script may be run multi-
              ple  times for log file entries which match multiple files (such
              as the /var/log/news/* example). If sharedscript  is  specified,
              the scripts are only run once, no matter how many logs match the
              wild carded pattern.  However, if none of the logs in the pattern
              require  rotating,  the  scripts  will  not  be run at all. This
              option overrides the nosharedscripts option and  implies  create
              option.

       start count
              This is the number to use as the base for rotation. For example,
              if you specify 0, the logs will be created with a  .0  extension
              as they are rotated from the original log files.  If you specify
              9, log files will be created with a  .9,  skipping  0-8.   Files
              will  still  be  rotated  the number of times specified with the
              count directive.

       tabooext [+] list
              The current taboo extension list is  changed  (see  the  include
              directive  for information on the taboo extensions). If a + pre-
              cedes the list of extensions, the current taboo  extension  list
              is  augmented,  otherwise  it is replaced. At start-up, the taboo
              extension list contains .rpmorig, .rpmsave, ,v,  .swp,  .rpmnew,
              and ~.

       weekly Log  files  are  rotated if the current weekday is less then the
              weekday of the last rotation or if more then a week  has  passed
              since  the  last rotation. This is normally the same as rotating
              logs on the first day of the week, but it works better if logro-
              tate is not run every night.
FILES

       /var/lib/logrotate.status  Default state file.
       /etc/logrotate.conf        Configuration options.
-->
 </sect1>
 <sect1 xml:id="sec.tuning.logfiles.logwatch">
  <title>Monitoring Log Files with <command>logwatch</command></title>

  <para>
   <command>logwatch</command> is a customizable, pluggable log-monitoring
   script. It parses system logs, extracts the important information and
   presents them in a human readable manner. To use
   <command>logwatch</command>, install the
   <systemitem>logwatch</systemitem> package.
  </para>

  <para>
   <command>logwatch</command> can either be used at the command line to
   generate on-the-fly reports, or via &crond; to regularly create custom
   reports. Reports can either be printed on the screen, saved to a file, or
   be mailed to a specified address. The latter is especially useful when
   automatically generating reports via &crond;.
  </para>

  <para>
   On the command line, you can tell <command>logwatch</command> for which
   service and time span to generate a report and how much detail should be
   included:
  </para>
  <!--<remark>
     taroth 2017-12-14: for the sake of using the prompt entities
     (&prompt.user; or &prompt.root;) consistently in our docs:
     please do not mix several example commands within one screen
     and do not use '#' to refer to an example command - this makes
     it impossible to mark the individual commands with a proper
     prompt
  </remark>-->
<screen><?dbsuse-fo font-size="7pt"?># Detailed report on all kernel messages from yesterday
logwatch --service kernel --detail High --range Yesterday --print

# Low detail report on all sshd events recorded (incl. archived logs)
logwatch --service sshd --detail Low --range All --archives --print

# Mail a report on all smartd messages from May 5th to May 7th to root@localhost
logwatch --service smartd --range 'between 5/5/2005 and 5/7/2005' \
--mailto root@localhost --print
</screen>

  <para>
   The <option>--range</option> option has got a complex syntax&mdash;see
   <command>logwatch</command> <option>--range help</option> for details. A
   list of all services that can be queried is available with the following
   command:
  </para>

<screen>&prompt.user;ls /usr/share/logwatch/default.conf/services/ | sed 's/\.conf//g'</screen>

  <para>
   <command>logwatch</command> can be customized to great detail. However,
   the default configuration should usually be sufficient. The default
   configuration files are located under
   <filename>/usr/share/logwatch/default.conf/</filename>. Never change them
   because they would get overwritten again with the next update. Rather
   place custom configuration in <filename>/etc/logwatch/conf/</filename>
   (you may use the default configuration file as a template, though). A
   detailed HOWTO on customizing <command>logwatch</command> is available at
   <filename>/usr/share/doc/packages/logwatch/HOWTO-Customize-LogWatch</filename>.
   The following configuration files exist:
  </para>

  <variablelist>
   <varlistentry>
    <term><filename>logwatch.conf</filename>
    </term>
    <listitem>
     <para>
      The main configuration file. The default version is extensively
      commented. Each configuration option can be overwritten on the command
      line.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>ignore.conf</filename>
    </term>
    <listitem>
     <para>
      Filter for all lines that should globally be ignored by
      <command>logwatch</command>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>services/*.conf</filename>
    </term>
    <listitem>
     <para>
      The service directory holds configuration files for each service you
      can generate a report for.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>logfiles/*.conf</filename>
    </term>
    <listitem>
     <para>
      Specifications on which log files should be parsed for each service.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec.tuning.logfiles.logger">
  <title>Using <command>logger</command> to Make System Log Entries</title>

  <para>
   <command>logger</command> is a tool for making entries in the system log.
   It provides a shell command interface to the rsyslogd system log module.
   For example, the following line outputs its message in
   <filename>/var/log/messages</filename> or directly in the journal (if no
   logging facility is running):
  </para>

<screen>&prompt.user;logger -t Test "This message comes from $USER"</screen>

  <para>
   Depending on the current user and host name, the log contains a line
   similar to this:
  </para>

<screen>Sep 28 13:09:31 &wsII; Test: This message comes from tux</screen>
 </sect1>
</chapter>
