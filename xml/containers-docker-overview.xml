<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xml:id="cha-docker-overview" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.0"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>&deng; Overview</title>
 <para>
  The &deng; is a lightweight virtualization solution to run multiple virtual
  Linux environments (containers) simultaneously on top of a single Linux
  kernel, without a hypervisor. Containers are isolated using Kernel cgroups
  (<xref linkend="vle-docker-cgroup"/>) and
  <xref linkend="vle-docker-namespace"/>.
 </para>
 <para>
  Full virtualization solutions, such as &xen;, &kvm;, or &libvirt;, are based
  on simulating a complete hardware environment and running multiple operating
  system instances inside these virtual machines. The &deng; provides
  operating-system-level virtualization: a single Linux kernel controls
  multiple isolated containers.
 </para>
 <para>
  The &deng; allows developers and system administrators to manage the complete
  life cycle of images. The &deng; makes it easy to build, ship, and run images
  containing applications.
 </para>
 <para>
  &deng; has the following advantages:
 </para>
 <itemizedlist>
  <listitem>
   <para>
    Isolation of applications through containers.
   </para>
  </listitem>
  <listitem>
   <para>
    Near-native performance, as the &deng; manages allocation of resources in
    real time.
   </para>
  </listitem>
  <listitem>
   <para>
    Control network interfaces and resources available inside containers
    through cgroups.
   </para>
  </listitem>
  <listitem>
   <para>
    Versioning of images.
   </para>
  </listitem>
  <listitem>
   <para>
    Building new images based on existing ones.
   </para>
  </listitem>
  <listitem>
   <para>
    Container orchestration.
   </para>
  </listitem>
 </itemizedlist>
 <para>
  &deng; has the following limitations:
 </para>
 <itemizedlist>
  <listitem>
   <para>
    Containers run on the host system's kernel and cannot use a different
    kernel.
   </para>
  </listitem>
  <listitem>
   <para>
    Only supports Linux applications and not other operating systems.
   </para>
  </listitem>
  <listitem>
   <para>
    &deng; is not a full virtualization stack like &xen;, &kvm;, or &libvirt;.
   </para>
  </listitem>
  <listitem>
   <para>
    Security depends on the host system. Refer to the
    <link xlink:href="http://docs.docker.com/articles/security/">official
    security documentation</link> for more details.
   </para>
  </listitem>
 </itemizedlist>
 <sect1 xml:id="cha-docker-architecture">
  <title>&deng; Architecture</title>

  <para>
   &deng; uses a client/server architecture. You can use the <emphasis>CLI
   client</emphasis> to communicate with the <emphasis>daemon</emphasis>. The
   <emphasis>daemon</emphasis> performs operations with containers and manages
   images locally or in registry. The <emphasis>CLI client</emphasis> can run
   on the same server as the host daemon or on a different machine. The
   <emphasis>CLI client</emphasis> communicates with the
   <emphasis>daemon</emphasis> by using network sockets. The architecture is
   shown in <xref linkend="fig-docker-architecture"/>.
  </para>

  <figure xml:id="fig-docker-architecture">
   <title>The &deng; Architecture</title>
   <mediaobject>
    <imageobject>
     <imagedata fileref="docker_architecture.png" format="PNG" width="70%"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>
</chapter>
