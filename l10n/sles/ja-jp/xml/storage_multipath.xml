<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="storage_multipath.xml" version="5.0" xml:id="cha-multipath" xml:lang="ja"> <title>デバイスのマルチパスI/Oの管理</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker/>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <para>
  本項では、マルチパスI/O (MPIO)を使用して、サーバ/ブロックストレージデバイス間のマルチパスのフェールオーバーおよびパスの負荷分散を管理する方法について説明します。
 </para>
 <sect1 xml:id="sec-multipath-intro">
  <title>マルチパスI/Oの理解</title>

  <para>
   マルチパス処理とは、サーバのホストバスアダプタおよびデバイスのストレージコントローラ間で、複数の物理パスをまたいで、同じ物理または論理ブロックストレージデバイスと通信するサーバの機能です。これは、通常、FC (Fibre Channel)環境またはiSCSI SAN環境で行われます。複数のチャネルが使用可能な際には、内蔵ストレージとのマルチ接続も可能です。
  </para>

  <para>
   Linuxマルチ処理は、接続に耐障害性を与え、アクティブな接続全体.に負荷を分散します。マルチパス処理が設定および実行されていると、自動的に、デバイス接続の障害が特定され、I/Oが代替の接続に再経路指定されます。
  </para>

  <para>
   接続に関しては、多くのトラブルが欠陥のあるアダプタ、ケーブル、またはコントローラが原因で発生します。デバイスにマルチパスI/Oを設定すると、マルチパスドライバがデバイス間のアクティブな接続を監視します。マルチパスドライバは、アクティブなパスのI/Oエラーを検出すると、トラフィックをデバイスの指定セカンダリパスにフェールオーバーします。該当するパスが正常に戻ると、そのパスに制御を戻すことができます。
  </para>
 </sect1>
 <sect1 xml:id="sec-multipath-hardware">
  <title>ハードウェアサポート</title>

  <para>
   マルチパス処理ドライバとツールは、<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>が利用可能なすべてのアーキテクチャをサポートします。また、ほとんどのストレージアレイもサポートします。マルチパスデバイスを格納するストレージアレイは、マルチパス処理用のドライバとツールを使用するために、マルチパス処理をサポートする必要があります。一部のストレージアレイベンダは、独自のマルチパス処理管理ツールを提供しています。ベンダのハードウェアマニュアルを参照して、どのような設定が必要か判別してください。
  </para>

  <sect2 xml:id="sec-multipath-hardware-autodetect">
   <title>マルチパス処理用に自動検出されるストレージアレイ</title>
   <para>
    <filename>multipath-tools</filename>パッケージは、次のようなストレージアレイを自動的に検出します。
   </para>
   <simplelist>
    <member>3PARdata VV</member>
    <member>AIX NVDISK</member>
    <member>AIX VDASD</member>
    <member>APPLE Xserve RAID</member>
    <member>COMPELNT Compellent Vol</member>
    <member>COMPAQ/HP HSV101、HSV111、HSV200、HSV210、HSV300、HSV400、HSV 450</member>
    <member>COMPAQ/HP MSA、HSV</member>
    <member>COMPAQ/HP MSA VOLUME</member>
    <member>DataCore SANmelody</member>
    <member>DDN SAN DataDirector</member>
    <member>DEC HSG80</member>
    <member>DELL MD3000</member>
    <member>DELL MD3000i</member>
    <member>DELL MD32xx</member>
    <member>DELL MD32xxi</member>
    <member>DGC</member>
    <member>EMC Clariion</member>
    <member>EMC Invista</member>
    <member>EMC SYMMETRIX</member>
    <member>EUROLOGC FC2502</member>
    <member>FSC CentricStor</member>
    <member>FUJITSU ETERNUS_DX、DXL、DX400、DX8000</member>
    <member>HITACHI DF</member>
    <member>HITACHI/HP OPEN</member>
    <member>HP A6189A</member>
    <member>HP HSVX700</member>
    <member>HP LOGICAL VOLUME</member>
    <member>HP MSA2012fc、MSA 2212fc、MSA2012i</member>
    <member>HP MSA2012sa、MSA2312 fc/i/sa、MCA2324 fc/i/sa、MSA2000s VOLUME</member>
    <member>HP P2000 G3 FC|P2000G3 FC/iSCSI|P2000 G3 SAS|P2000 G3 iSCSI</member>
    <member>IBM 1722-600</member>
    <member>IBM 1724</member>
    <member>IBM 1726</member>
    <member>IBM 1742</member>
    <member>IBM 1745、1746</member>
    <member>IBM 1750500</member>
    <member>IBM 1814</member>
    <member>IBM 1815</member>
    <member>IBM 1818</member>
    <member>IBM 1820N00</member>
    <member>IBM 2105800</member>
    <member>IBM 2105F20</member>
    <member>IBM 2107900</member>
    <member>IBM 2145</member>
    <member>IBM 2810XIV</member>
    <member>IBM 3303 NVDISK</member>
    <member>IBM 3526</member>
    <member>IBM 3542</member>
    <member>IBM IPR</member>
    <member>IBM Nseries</member>
    <member>IBM ProFibre 4000R</member>
    <member>IBM S/390 DASD ECKD</member>
    <member>IBM S/390 DASD FBA</member>
    <member>Intel Multi-Flex</member>
    <member>LSI/ENGENIO INF-01-00</member>
    <member>NEC DISK ARRAY</member>
    <member>NETAPP LUN</member>
    <member>NEXENTA COMSTAR</member>
    <member>Pillar Axiom</member>
    <member>PIVOT3 RAIGE VOLUME</member>
    <member>SGI IS</member>
    <member>SGI TP9100、TP 9300</member>
    <member>SGI TP9400、TP9500</member>
    <member>STK FLEXLINE 380</member>
    <member>STK OPENstorage D280</member>
    <member>SUN CSM200_R</member>
    <member>SUN LCSM100_[IEFS]</member>
    <member>SUN STK6580、STK6780</member>
    <member>SUN StorEdge 3510、T4</member>
    <member>SUN SUN_6180</member>
   </simplelist>
   <para>
    ただし、他のほとんどのストレージアレイも有効です。ストレージアレイが自動的に検出されると、マルチパス処理のデフォルト設定が適用されます。デフォルト以外の設定を使用したい場合は、手動で<filename>/etc/multipath.conf</filename>ファイルを作成および設定する必要があります。自動検出されないハードウェアでも同じ作業が必要になります。詳細については、「<xref linkend="sec-multipath-conf-file" xrefstyle="SectTitleOnPage"/>」を参照してください。
   </para>
   <para>
    次の点に留意してください。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      自動検出されたすべてのストレージアレイが<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>でテスト済みというわけではありません。<xref linkend="sec-multipath-hardware-tested" xrefstyle="HeadingOnPage"/>も参照してください。
     </para>
    </listitem>
    <listitem>
     <para>
      一部のストレージアレイでは、特定のハードウェアハンドラが必要なことがあります。ハードウェアハンドラは、パスグループの切り替え時とI/Oエラーの処理時に、ハードウェア固有のアクションを実行するカーネルモジュールです。詳細については、「<xref linkend="sec-multipath-hardware-handlers" xrefstyle="HeadingOnPage"/>」を参照してください。
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>/etc/multipath.conf</filename>ファイルを変更したら、そのたびに<command>dracut</command> <option>-f</option>を実行してシステム上に<systemitem>initrd</systemitem>を再作成する必要があります。続いて、実行した変更を有効にするため再起動します。
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-multipath-hardware-tested">
   <title>マルチパス処理サポートについてテスト済みのストレージアレイ</title>
   <para>
    次のベンダのストレージアレイは、<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>でテスト済みです。
   </para>
   <simplelist>
    <member>EMC</member>
    <member>日立</member>
    <member>Hewlett-Packard/Compaq</member>
    <member>IBM</member>
    <member>NetApp</member>
    <member>SGI</member>
   </simplelist>
   <para>
    他のベンダのストレージアレイもほとんど機能するはずです。該当するベンダのマニュアルを参照してください。<filename>multipath-tools</filename>パッケージによって認識されるデフォルトストレージアレイのリストについては、<xref linkend="sec-multipath-hardware-autodetect" xrefstyle="HeadingOnPage"/>を参照してください。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-hardware-handlers">
   <title>特定のハードウェアハンドラを必要とするストレージアレイ</title>
   <para>
    あるパスから他のパスにフェールオーバーするには特別なコマンドが必要なストレージアレイ、または非標準の特別なエラー処理が必要なストレージアレイには、より拡張されたサポートが必要なことがあります。したがって、デバイスマッパーマルチパスサービスには、ハードウェアハンドラ用フックがあります。たとえば、そのようなEMC CLARiiON CXファミリアレイ用ハンドラが1つ、既に提供されています。
   </para>
   <important>
    <title>詳細情報</title>
    <para>
     ハードウェアベンダのマニュアルを参照して、そのハードウェアハンドラをデバイスマッパーマルチパス用にインストールする必要があるかどうか判別してください。
    </para>
   </important>
   <para>
    <command>multipath -t</command>コマンドは、特定のハードウェアハンドラで特別な処理を必要とするストレージアレイの内部テーブルを表示します。ただし、表示されるリストは、サポートされているアレイの包括的なリストではありません。特別な処理を必要とし、<filename>multipath-tools</filename>の開発者がツールの開発中にアクセスしたアレイだけがリストされます。
   </para>
   <important>
    <title>［Exceptions (例外)］</title>
    <para>
     真のアクティブ/アクティブマルチパスサポートをもつアレイは、特別な処理を必要としないので、<command>multipath -t</command>コマンドでは表示されません。
    </para>
   </important>
   <para>
    また、<command>multipath -t</command>テーブルでリストされている場合でも、必ずしも、その特定ハードウェアでSUSE Linux Enterprise Serverがテスト済みということではありません。<phrase role="productname"><phrase os="sles"/></phrase>テスト済みのストレージアレイのリストについては、<xref linkend="sec-multipath-hardware-tested" xrefstyle="HeadingOnPage"/>を参照してください。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-planning">
  <title>マルチパス処理のプラニング</title>

  <para>
   マルチパスI/Oソリューションのプラニング時には、本項のガイドラインに従ってください。
  </para>

  <sect2 xml:id="sec-multipath-planning-prereq">
   <title>前提条件</title>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      マルチパス処理は、デバイスレベルで管理されます。
     </para>
    </listitem>
    <listitem>
     <para>
      マルチパス処理対象のデバイスに使用するストレージアレイで、マルチパス処理がサポートされている必要があります。詳細については、<xref linkend="sec-multipath-hardware" xrefstyle="SectTitleOnPage"/>を参照してください。
     </para>
    </listitem>
    <listitem>
     <para>
      サーバのホストバスアダプタおよびブロックストレージデバイスのバスコントローラ間に複数の物理パスが存在している場合のみ、マルチパス処理を設定する必要があります。論理デバイスのマルチパスは、サーバの見地から設定します。
     </para>
    </listitem>
    <listitem>
     <para>
      一部のストレージアレイについては、アレイの物理および論理デバイスのマルチパス処理を管理するための独自のマルチパス処理ソフトウェアがベンダから提供されます。この場合は、ベンダの指示に従って、それらのデバイスのマルチ処理を設定してください。
     </para>
    </listitem>
    <listitem>
     <para>
      仮想化環境でマルチパス処理を使用する場合、マルチパス処理は、ホストサーバ環境で制御されます。デバイスのマルチパス処理を設定してから、デバイスを仮想ゲストマシンに割り当ててください。
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-disks">
   <title>ディスク管理タスク</title>
   <para>
    マルチパスをもつ物理デバイスまたは論理デバイスのマルチパス処理を設定する前に、まず、次のようにディスク管理タスクを実行してください。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      サードパーティーツールで、物理ディスクを小さな論理ディスクに切り分けます。
     </para>
    </listitem>
    <listitem>
     <para>
      サードパーティーツールで、物理ディスクまたは論理ディスクをパーティションに分割します。稼働中のシステムでパーティションを変更した場合は、DM-MP(Device Mapper Multipath: デバイスマッパーマルチパス)モジュールによるそれら変更の自動的な検出や反映は行われません。DM-MPIOは再初期化する必要があり、それには、通常、再起動が必要です。
     </para>
    </listitem>
    <listitem>
     <para>
      サードパーティーのSANアレイ管理ツールを使用して、ハードウェアRAIDデバイスを作成および設定します。
     </para>
    </listitem>
    <listitem>
     <para>
      サードパーティーのSANアレイ管理ツールを使用して、LUNなどの論理デバイスを作成します。所定のアレイにサポートされている論理デバイスタイプは、アレイベンダによって異なります。
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-raid">
   <title>ソフトウェアRAID</title>
   <para>
    LinuxのソフトウェアRAIDの管理ソフトウェアは、マルチパス処理の上で実行されます。複数のI/Oパスを持ち、ソフトウェアRAIDで使用予定の各デバイスは、まず、マルチパス処理用に設定してから、ソフトウェアRAIDデバイスとして作成する必要があります。マルチパスデバイスは自動検出できません。ソフトウェアRAIDは、その下で実行されているマルチパス処理管理を認識しません。
   </para>
   <para>
    既存のソフトウェアRAID用のマルチパス処理の設定については、<xref linkend="sec-multipath-raid" xrefstyle="SectTitleOnPage"/>を参照してください。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-ha">
   <title>高可用性ソリューション</title>
   <para>
    ストレージリソースのクラスタリング用の高可用性ソリューションは、各ノード上でマルチパス処理サービスをベースとして実行されます。各ノード上の<filename>/etc/multipath.conf</filename>ファイル内の構成設定が、クラスタ全体で同一であるようにしてください。
   </para>
   <para>
    マルチパスデバイスがすべてのデバイス間で同じ名前であるようにしてください。詳細については、<xref linkend="sec-multipath-names-ha"/>を参照してください。
   </para>
   <para>
    LAN上のデバイスをミラーリングするDRBD (Distributed Replicated Block Device)高可用性ソリューションは、マルチパス処理をベースとして実行されます。複数のI/Oパスを持ち、DRDBソリューションで使用予定のデバイスごとに、マルチパス処理用デバイスを設定してから、DRBDを設定する必要があります。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-planning-initrd">
   <title><filename>initrd</filename>とシステム設定との同期を常に維持する</title>
   <para>
    マルチパスを使用する際に最も重要な要件の1つは、ルートファイルシステムと、システムをブートするために必要な他のファイルシステムすべてについて、<filename>initrd</filename>とインストール済みシステムの動作が同じになるようにすることです。システムでマルチパスが有効になっている場合は<filename>initrd</filename>でも有効にする必要があり、その逆も同様です。詳細については<xref linkend="sec-multipath-configuration-start"/>を参照してください。
   </para>
   <para>
    <filename>initrd</filename>とシステムが同期されていない場合、システムは正しくブートせず、起動手順を実行すると緊急シェルが起動します。このようなシナリオを回避または修復する方法については、<xref linkend="sec-multipath-trouble-root"/>を参照してください。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-mpiotools">
  <title>マルチパス管理ツール</title>

  <para>
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>のマルチパス処理のサポートは、Linuxカーネルのデバイスマッパーマルチパスモジュールと<systemitem>multipath-tools</systemitem>ユーザスペースパッケージに基づいています。MDADM (Multiple Devices Administration)ユーティリティ(<command>multipath</command>)を使用すると、マルチパスデバイスの状態を表示できます。
  </para>

  <sect2 xml:id="sec-multipath-mpiotools-dm">
   <title>デバイスマッパーマルチパスモジュール</title>
   <para>
    デバイスマッパーマルチパス(DM-MP)モジュールは、Linuxにマルチパス処理機能を提供します。DM-MPIOは、<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>でのマルチパス処理の推奨ソリューションです。DM-MPIOは、SUSEによって完全にサポートされている製品に付属する唯一のマルチパス処理オプションです。
   </para>
   <para>
    DM-MPIOは、多様なセットアップでマルチパス処理サブシステムを自動設定します。デバイスごとに最大8個のパスの設定がサポートされています。アクティブ/パッシブ(1つのパスがアクティブで、他のパスがパッシブ)またはアクティブ/アクティブ(ラウンドロビン方式の負荷分散で全パスがアクティブ)の構成がサポートされています。
   </para>
   <para>
    DM-MPIOフレームワークは、2つの方法で拡張できます。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      特定のハードウェアハンドラの使用詳細については、「<xref linkend="sec-multipath-hardware-handlers" xrefstyle="HeadingOnPage"/>」を参照してください。
     </para>
    </listitem>
    <listitem>
     <para>
      ラウンドロビンアルゴリズムより高度な負荷分散アルゴリズムの使用.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    DM-MPIOのユーザスペースコンポーネントにより、自動的なパスの検出とグループ化のほか、自動的なパスの再テストが実行されるので、障害が発生したパスは、正常に戻ると自動的に復帰します。これにより、管理者の手間を最低限に抑えることができます。
   </para>
   <para>
    DM-MPIOは、デバイス自体の障害ではなく、デバイスへのパスの障害からシステムを保護します。アクティブなパスの1つが失われると(たとえば、ネットワークアダプタが破損する、光ファイバケーブルが外れるなど)、残りのパスにI/Oをリダイレクトします。アクティブ/パッシブ構成の場合は、パスがパッシブパスの1つにフェールオーバーします。ラウンドロビン式負荷分散構成を使用している場合は、トラフィックの負荷が残りの正常なパス全体に分散されます。すべてのアクティブパスに障害が起きた場合は、アクティブでないセカンダリパスが有効になり、約30秒の遅延でフェールオーバーが開始されます。
   </para>
   <para>
    ディスクアレイに複数のストレージプロセッサがある場合は、アクセスしたいLUNを所有するストレージプロセッサにSANスイッチが接続していることを必ず確認してください。ほとんどのディスクアレイでは、すべてのLUNが両方のストレージプロセッサに属しているので、両方の接続がアクティブです。
   </para>
   <note>
    <title>ストレージプロセッサ</title>
    <para>
     一部のディスクアレイでは、ストレージアレイがストレージプロセッサを介してトラフィックを管理するので、一度に1つのストレージプロセッサだけが提示されます。1つのプロセッサがアクティブとなり、もう1つのプロセッサは障害が発生するまでパッシブとなります。間違ったストレージプロセッサ(パッシブなパスをもつプロセッサ)に接続している場合は、予期されたLUNが表示されなかったり、それらのLUNが表示されてもアクセスしようとするとエラーが発生することがあります。
    </para>
   </note>
   <table>
    <title>ストレージアレイのマルチパスI/O機能</title>
    <tgroup cols="2">
     <colspec colnum="1" colname="1" colwidth="2857*"/>
     <colspec colnum="2" colname="2" colwidth="7144*"/>
     <thead>
      <row>
       <entry>
        <para>
         ストレージアレイの機能
        </para>
       </entry>
       <entry>
        <para>
         説明
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         アクティブ/パッシブコントローラ
        </para>
       </entry>
       <entry>
        <para>
         1つのコントローラはアクティブで、すべてのLUNに対応します。2つ目のコントローラは、スタンバイとして機能します。2つ目のコントローラは、オペレーティングシステムが冗長なパスを認識するように、マルチパスコンポーネントに対するLUNの提示も行います。プライマリコントローラに障害が発生した場合は、セカンダリコントローラが引き継ぎ、すべてのLUNに対応します。
        </para>
        <para>
         一部のアレイでは、LUNをさまざまなコントローラに割り当てることができます。所定のLUNは、そのアクティブコントローラとなる1つのコントローラに割り当てられます。一度に1つのコントローラがあらゆるLUNのディスクI/Oを処理し、2つ目のコントローラがそのLUNのスタンバイコントローラとなります。2つ目のコントローラは、パスの提示もしますが、ディスクI/Oは行えません。そのLUNを使用するサーバは、LUNの割り当て先のコントローラに接続します。LUNのセットに対するプライマリコントローラに障害が発生すると、セカンダリコントローラが引き継ぎ、すべてのLUNに対応します。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         アクティブ/パッシブコントローラ
        </para>
       </entry>
       <entry>
        <para>
         両方のコントローラが、すべてのLUNの負荷を共有し、あらゆるLUNのディスクI/Oを処理できます。1つのコントローラに障害が発生すると、2つ目のコントローラが自動的にすべてのトラフィックを処理します。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         負荷分散
        </para>
       </entry>
       <entry>
        <para>
         デバイスマッパーマルチパスドライバは、自動的に、すべてのアクティブパス全体にトラフィックの負荷を分散します。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         コントローラのフェールオーバー
        </para>
       </entry>
       <entry>
        <para>
         アクティブなコントローラがパッシブなコントローラにフェールオーバーすると、デバイスマッパーマルチパスドライバがホスト/スタンバイ間のパスを自動的に有効にし、それらをプライマリパスにします。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         ブート/ルートデバイスのサポート
        </para>
       </entry>
       <entry>
        <para>
         マルチパス処理は、SUSE Linux Enterprise Server 10以降のルート(<filename>/</filename>)デバイスに対してサポートされます。<phrase role="productname"><phrase os="sles"/></phrase>ホストサーバは、ブートデバイス用の、現在アクティブなコントローラおよびストレージプロセッサに接続する必要があります。
        </para>
        <para>
         マルチパス処理は、SUSE Linux Enterprise Server 11以降の<filename>/boot</filename>デバイスに対してサポートされています。<phrase role="productname"><phrase os="sles"/></phrase>
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <para>
    デバイスマッパーマルチパスは、マルチパスデバイスの各パスを個別のSCSIデバイスとして検出します。SCSIデバイス名は、<filename>/dev/sd<replaceable>N</replaceable></filename>の形式をとります。ここで、<filename><replaceable>N</replaceable></filename>は、デバイスに対して自動生成される文字であり、aで始まり、デバイスの生成に応じてシーケンシャルに発行されます(<filename>/dev/sda</filename>、<filename>/dev/sdb</filename>など)。デバイス数が26を超えると、文字が2つ使用され、<filename>/dev/sdz</filename>の次のデバイスは<filename>/dev/sdaa、その次は</filename>、その次は<filename>/dev/sdab</filename>と続きます。
   </para>
   <para>
    複数のパスが自動的に検出されない場合は、それらを<filename>/etc/multipath.conf</filename>ファイルで手動設定できます。<filename>multipath.conf</filename>ファイルは、システム管理者によって作成および設定されるまで存在しません。詳細については、「<xref linkend="sec-multipath-conf-file" xrefstyle="SectTitleOnPage"/>」を参照してください。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-io-management">
   <title>マルチパスI/O管理ツール</title>
   <para>
    パッケージ<systemitem class="resource">multipath-tools</systemitem>および<systemitem class="resource">kpartx</systemitem>では、自動パス検出とグループ化を扱うツールが提供されています。これらのパッケージは、自動的にパスの定期テストを行うので、障害が発生したパスは、正常に戻ると、自動的に復帰します。これにより、管理者の手間を最低限に抑えることができます。
   </para>
   <table>
    <title>multipath-toolsパッケージに含まれるツール</title>
    <tgroup cols="2">
     <colspec colnum="1" colname="1" colwidth="2857*"/>
     <colspec colnum="2" colname="2" colwidth="7144*"/>
     <thead>
      <row>
       <entry>
        <para>
         ツール
        </para>
       </entry>
       <entry>
        <para>
         説明
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         <command>multipath</command>
        </para>
       </entry>
       <entry>
        <para>
         システムをスキャンしてマルチパスデバイスを検出し、アセンブルします。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <command>multipathd</command>
        </para>
       </entry>
       <entry>
        <para>
         mapsイベントを待機し、<command>multipath</command>を実行します。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <command>kpartx</command>
        </para>
       </entry>
       <entry>
        <para>
         マルチパスデバイス上のパーティションにリニアdevmapをマップします。これにより、デバイス上のパーティションのマルチパスモニタリングを作成することが可能になります。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         <command>mpathpersist</command>
        </para>
       </entry>
       <entry>
        <para>
         デバイスマッパーマルチパスのデバイス.ppcでSCSIの永続的な予約を管理します。
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-mdadm">
   <title>マルチパスデバイスへのMDADMの使用</title>
   <para>
    デフォルトのデバイスハンドラはUdevであり、デバイスは、デバイスノード名ではなく、Worldwide IDによって、システムに自動的に認識されます。これによって、環境設定ファイル(<filename>mdadm.conf</filename>と<filename>lvm.conf)</filename>がマルチパスデバイスを正しく認識しないという、MDADMおよびLVMの旧リリースにあった問題が解決します。
   </para>
   <para>
    LVM2の場合のようにmdadmでは、デバイスノードパスではなく、IDによってデバイスをアクセスする必要があります。したがって、<filename>/etc/mdadm.conf</filename>内の<systemitem>DEVICE</systemitem>エントリを次のように設定してください。
   </para>
<screen>DEVICE /dev/disk/by-id/*</screen>
   <para>
    ユーザフレンドリな名前を使用している場合は、次のようにパスを指定し、マルチパス処理の設定後に、デバイスマッパー名だけがスキャンされるようにします。
   </para>
<screen>DEVICE /dev/disk/by-id/dm-uuid-.*-mpath-.*</screen>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-multipath">
   <title>multipathコマンド</title>
   <para>
    マルチパスデバイスを設定し、管理するには、<command>multipath(8)</command>コマンドを使用します。このコマンドの一般的な構文は、次のようになります。
   </para>
<screen>multipath [-v verbosity_level] [-b bindings_file] [-d] [-h|-l|-ll|-f|-F|-B|-c|-q|-r|-w|-W|-t|-T] [-p failover|multibus|group_by_serial|group_by_prio|group_by_node_name] [<replaceable>DEVICENAME</replaceable>]</screen>
   <para>
    詳細については、<command>man 8 multipath</command>を参照してください。
   </para>
   <bridgehead>一般的な例</bridgehead>
   <variablelist>
    <varlistentry>
     <term>multipath</term>
     <listitem>
      <para>
       すべてのマルチパスデバイスを設定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
       特定のマルチパスデバイスを設定します。
      </para>
      <para>
       <replaceable>DEVICENAME</replaceable>を、<filename>/dev/sdb</filename> (udevにより$DEVNAME変数で表示)または<literal>major:minor</literal>形式などのデバイスノード名で置き換えます。デバイス名は、マルチパスマップ名でも構いません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -f</term>
     <listitem>
      <para>
       マルチパスマップとそのデバイスにマップされたパーティションを選択的に抑制します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -d</term>
     <listitem>
      <para>
       ドライ実行。可能性のあるマルチパスデバイスを表示しますが、デバイスの作成やデバイスマップの更新は行いません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -v2 -d</term>
     <listitem>
      <para>
       ドライ実行で可能性のあるマルチパスデバイスのマルチパスマップ情報を表示します。-v2オプションを使用すると、ローカルディスクのみが表示されます。この冗長レベルでは、kpartxなどの他のツールへのフィード用としてのみ、作成または更新したマルチパスの名前をプリントします。
      </para>
      <para>
       デバイスがすでに存在し、変更がない場合には、出力はありません。設定されているマルチパスデバイスのステータスを見るには、<command>multipath -ll</command>を使用します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -v2 <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
       特定の可能性のあるマルチパスデバイスを設定し、そのマルチパスマップ情報を表示します。この冗長レベルでは、<command>kpartx</command>などの他のツールへのフィード用として、作成または更新したマルチパスの名前だけをプリントします。
      </para>
      <para>
       デバイスがすでに存在し、変更がない場合には、出力はありません。設定されているマルチパスデバイスのステータスを見るには、<command>multipath -ll</command>を使用します。
      </para>
      <para>
       <replaceable>DEVICENAME</replaceable>を、<filename>/dev/sdb</filename> (<command>udev</command>により$DEVNAME変数で表示)または<literal>major:minor</literal>形式などのデバイスノード名で置き換えます。デバイス名は、マルチパスマップ名でも構いません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -v3</term>
     <listitem>
      <para>
       可能性のあるマルチパスデバイスを設定し、それらのマルチパスマップ情報を表示します。この冗長レベルでは、すべての検出されたパス、マルチパス、およびデバイスマップがプリントされます。WWIDおよび<literal>devnode</literal>の両方でブラックリスト化されたデバイスが表示されます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -v3 <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
       特定の可能性のあるマルチパスデバイスを設定し、それらの情報を表示します。-v3オプションを使用すると、フルパスリストが表示されます。この冗長レベルでは、すべての検出されたパス、マルチパス、およびデバイスマップがプリントされます。WWIDおよび<literal>devnode</literal>の両方でブラックリスト化されたデバイスが表示されます。
      </para>
      <para>
       <replaceable>DEVICENAME</replaceable>を、<filename>/dev/sdb</filename> (<command>udev</command>により$DEVNAME変数で表示)または<literal>major:minor</literal>形式などのデバイスノード名で置き換えます。デバイス名は、マルチパスマップ名でも構いません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -ll</term>
     <listitem>
      <para>
       すべてのマルチパスデバイスの状態を表示します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -ll <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
       指定されたマルチパスデバイスのステータスを表示します。
      </para>
      <para>
       <replaceable>DEVICENAME</replaceable>を、<filename>/dev/sdb</filename> (<command>udev</command>により$DEVNAME変数で表示)または<literal>major:minor</literal>形式などのデバイスノード名で置き換えます。デバイス名は、マルチパスマップ名でも構いません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -f</term>
     <listitem>
      <para>
       すべての未使用のマルチパスデバイスマップをフラッシュします。これによって、マルチパスが解消したり、デバイスが削除されることはありません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -f <replaceable>DEVICENAME</replaceable></term>
     <listitem>
      <para>
       指定されたマルチパスデバイスの未使用のマルチパスデバイスマップをフラッシュします。これによって、マルチパスが解消したり、デバイスが削除されることはありません。
      </para>
      <para>
       <replaceable>DEVICENAME</replaceable>を、<filename>/dev/sdb</filename> (<command>udev</command>により$DEVNAME変数で表示)または<literal>major:minor</literal>形式などのデバイスノード名で置き換えます。デバイス名は、マルチパスマップ名でも構いません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -p [ failover | multibus | group_by_serial | group_by_prio | group_by_node_name ]</term>
     <listitem>
      <para>
       次の表に説明されているグループポリシーオプションの1つを指定することにより、グループポリシーを設定します。
      </para>
      <table>
       <title>multipath -pコマンドのグループポリシーオプション</title>
       <tgroup cols="2">
        <colspec colnum="1" colname="1" colwidth="2684*"/>
        <colspec colnum="2" colname="2" colwidth="7319*"/>
        <thead>
         <row>
          <entry>
           <para>
            ポリシーオプション
           </para>
          </entry>
          <entry>
           <para>
            説明
           </para>
          </entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>
           <para>
            failover (フェールオーバー)
           </para>
          </entry>
          <entry>
           <para>
            (デフォルト)優先度グループごとに1つのパス一度に使用できるスパスは1つだけです。
           </para>
          </entry>
         </row>
         <row>
          <entry>
           <para>
            multibus
           </para>
          </entry>
          <entry>
           <para>
            1つの優先度グループ内にすべてのパス
           </para>
          </entry>
         </row>
         <row>
          <entry>
           <para>
            group_by_serial
           </para>
          </entry>
          <entry>
           <para>
            検出されたSCSIシリアル番号(コントローラノードの全世界規模の番号)ごとに1つの優先度グループ
           </para>
          </entry>
         </row>
         <row>
          <entry>
           <para>
            group_by_prio
           </para>
          </entry>
          <entry>
           <para>
            パス優先度値ごとに1つの優先度グループ同じ優先度のパスは同じ優先度グループに属します。優先度は、コールアウトプログラムで決定されます。それらのプログラムは、グローバル、コントローラごと、またはマルチパスごとのオプションとして<filename>/etc/multipath.conf</filename>環境設定ファイルで指定されます。
           </para>
          </entry>
         </row>
         <row>
          <entry>
           <para>
            group_by_node_name
           </para>
          </entry>
          <entry>
           <para>
            ターゲットノード名ごとに1つの優先度グループターゲットノード 名は、<filename> /sys/class/fc_transport/target*/node_name</filename>にフェッチされます。
           </para>
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipath -t</term>
     <listitem>
      <para>
       マルチパスの内部ハードウェアテーブルとアクティブな設定を表示します。設定パラメータの詳細については、<command>man multipath</command>を参照してください。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-multipath-mpiotools-mpathpersist">
   <title>mpathpersistユーティリティ</title>
   <para>
    <command>mpathpersist</command>ユーティリティを使用して、デバイスマッパーマルチパスのデバイスでSCSIの永続的な予約を管理できます。このコマンドの一般的な構文は、次のようになります。
   </para>
<screen>mpathpersist [options] [device]</screen>
   <para>
    詳細については、<command>man 8 mpathpersist</command>を参照してください。
   </para>
   <para>
    このユーティリティを<filename>/etc/multipath.conf</filename>ファイルのサービスアクション予約キー(<literal>reservation_key</literal>属性)と共に使用して、SCSIデバイスの永続的な予約を設定します。この属性はデフォルトでは使用されません。この属性が設定されていない場合、<command>multipathd</command>デーモンは、新しく検出されたパスまたは復元されたパスの永続的な予約があるかどうかを確認しません。
   </para>
<screen>reservation_key &lt;<replaceable>RESERVATION_KEY</replaceable>&gt;</screen>
   <para>
    この属性は<literal>defaults</literal>セクションまたは<literal>multipaths</literal>セクションに追加できます。例:
   </para>
<screen>multipaths {
  multipath {
    wwid   XXXXXXXXXXXXXXXX
    alias      yellow
    reservation_key  0x123abc
  }
}</screen>
   <para>
    永続的な管理の対象にするすべてのマルチパスデバイスに対して<literal>reservation_key</literal>パラメータを設定し、次のコマンドを実行して<systemitem class="daemon">multipathd</systemitem>デーモンを再起動します。
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl restart multipathd</screen>
   <para>
    設定後、<command>mpathpersist</command>コマンドで予約キーを指定できます。
   </para>
   <bridgehead>例</bridgehead>
   <variablelist>
    <varlistentry>
     <term>mpathpersist --out --register --param-sark=123abc --prout-type=5 -d /dev/mapper/mpath9</term>
     <listitem>
      <para>
       <filename>/dev/mapper/mpath9</filename>デバイスのサービスアクション予約キーを登録します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist -i -k -d /dev/mapper/mpath9</term>
     <listitem>
      <para>
       <filename>/dev/mapper/mpath9</filename>デバイスのサービスアクション予約キーを読み込みます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist --out --reserve --param-sark=123abc --prout-type=8 -d /dev/mapper/mpath9</term>
     <listitem>
      <para>
       <filename>/dev/mapper/mpath9</filename>デバイスのサービスアクション予約キーを予約します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>mpathpersist -i -s -d /dev/mapper/mpath9</term>
     <listitem>
      <para>
       <filename>/dev/mapper/mpath9</filename>デバイスの予約状態を読み込みます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-config">
  <title>マルチパス処理用システムの設定</title>

  <para/>

  <sect2 xml:id="sec-multipath-configuration-start">
   <title>マルチパスI/Oサービスの有効化、無効化、起動、および停止</title>
   <para>
    マルチパスサービスを有効にしてブート時に起動するには、次のコマンドを実行します。
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl enable multipathd</screen>
   <para>
    稼働中のシステムでサービスを手動で起動したり、サービスの状態を確認したりするには、次のいずれかのコマンドを入力します。
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl start multipathd
<prompt>tux &gt; </prompt><command>sudo</command> systemctl status multipathd</screen>
   <para>
    現在のセッションでマルチパスサービスを停止して無効にし、システムの次回ブート時にサービスが起動しないようにするには、次のコマンドを実行します。
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl stop multipathd
<prompt>tux &gt; </prompt><command>sudo</command> systemctl disable multipathd</screen>
   <important xml:id="ann-multipath-configuration-initrd">
    <title><systemitem>initrd</systemitem>の再構築</title>
    <para>
     マルチパスサービスを有効または無効にした場合は、<systemitem>initrd</systemitem>の再構築も必要です。そうしないと、システムがブートしなくなるおそれがあります。マルチパスサービスを有効にする場合は、次のコマンドを実行してinitrdの再構築も行います。
    </para>
<screen><prompt>tux &gt; </prompt>dracut --force --add multipath</screen>
    <para>
     マルチパスサービスを無効にする場合は、次のコマンドを実行してinitrdを再構築します。
    </para>
<screen><prompt>tux &gt; </prompt>dracut --force -o multipath</screen>
    <para>
     (オプション)さらに、マルチパスを手動で起動するときにもマルチパスデバイスが設定されないようにする場合は、initrdを再構築する前に、<filename>/etc/multipath.conf</filename>の最後に次の行を追加します。
    </para>
<screen>blacklist {
    wwid ".*"
}</screen>
   </important>
  </sect2>

  <sect2 xml:id="sec-multipath-configuration-sandevs">
   <title>マルチパス処理用SANデバイスの準備</title>
   <para>
    SANデバイスのマルチパスI/Oを設定する前に、必要に応じて、次のようにSANデバイスを準備してください。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      ベンダのツールで、SANデバイスを設定し、ゾーン化します。
     </para>
    </listitem>
    <listitem>
     <para>
      ベンダのツールで、ストレージアレイ上のホストLUNのパーミッションを設定します。
     </para>
    </listitem>
    <listitem>
     <para>
      Linux HBAドライバモジュールをインストールします。モジュールがインストールされると、ドライバがHBAを自動的にスキャンして、ホスト用のパーミッションをもつSANデバイスを検出します。それらのSANデバイスは、以降の設定のため、ホストに提示されます。
     </para>
     <note>
      <title>ネイティブのマルチパス処理を有効化しない</title>
      <para>
       ご使用のHBAドライバのネイティブマルチパス処理が有効化していないことを確認してください。
      </para>
     </note>
     <para>
      詳細については、ベンダの特定マニュアルを参照してください。
     </para>
    </listitem>
    <listitem>
     <para>
      ドライバモジュールがロードされたら、特定アレイのLUNまたはパーティションに割り当てられたデバイスノードを検出します。
     </para>
    </listitem>
    <listitem>
     <para>
      SANデバイスがサーバ上でルートデバイスとして使用される場合は、<xref linkend="sec-multipath-best-practice-san-timeout" xrefstyle="SectTitleOnPage"/>に示されているように、デバイスのタイムアウト設定を変更します。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    HBAドライバがLUNを認識しない場合は、<command>lsscsi</command>を使用して、SCSIデバイスがオペレーティングシステムによって正しく認識されているかどうかチェックできます。LUNがHBAドライバによって認識されない場合は、SANのゾーン化セットアップをチェックします。特に、LUNのマスキングがアクティブであるかどうか、LUNがサーバに正しく割り当てられているかどうかをチェックしてください。
   </para>
   <para>
    LUNがHBAドライバによって認識されても、対応するブロックデバイスが存在しない場合は、カーネルパラメータを追加して、SCSIデバイスのスキャン動作を変更する必要があります(LUNが連続的に番号付けされていないことを示すなど)。詳細については、SUSEナレッジベース(<link xlink:href="https://www.suse.com/support/kb/doc.php?id=3955167"/>)にある<citetitle>TID 3955167: Troubleshooting SCSI (LUN) Scanning Issues</citetitle>を参照してください。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-configuration-partitioning">
   <title>マルチパスデバイスのパーティショニング</title>
   <para>
    複数のパスをもつパーティショニングデバイスは、推奨できませんが、サポートされています。<command>kpartx</command>ツールを使用すると、再起動なしでマルチパスデバイスにパーティションを作成できます。マルチパス処理の設定前に、YaSTのパーティショナ機能またはサードパーティーのパーティショニングツールの使用により、デバイスをパーティショニングすることもできます。
   </para>
   <para>
    マルチパスデバイスはデバイスマッパーデバイスです。コマンドラインツール(parted、kpartx、fdiskなど)を使用してデバイスマッパーデバイスを変更することはできますが、他の層を更新するために必要なudevイベントが生成されるとは限りません。デバイスマッパーデバイスをパーティション化した後、マルチパスマップをチェックして、デバイスマッパーデバイスがマップされていることを確認する必要があります。デバイスが見つからない場合は、マルチパスデバイスを再マップするかサーバを再起動すると、マルチパスマップにある新しいパーティションをすべて検出できます。
   </para>
   <para>
    マルチパスデバイス上にあるパーティションのデバイスマッパーデバイスは、独立したデバイスと同じではありません。デバイス全体を使用するLVM論理ボリュームを作成する場合、パーティションが含まれないデバイスを指定する必要があります。マルチパスパーティションをLVM論理ボリュームのターゲットデバイスとして設定すると、LVMは、ベースを成す物理デバイスがパーティション化されていると認識し、作成に失敗します。SANデバイスを再分割する必要がある場合、SANデバイス上のLUNを分割し、各LUNを別個のマルチパスデバイスとしてサーバに認識させることができます。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-conf-file">
  <title>/etc/multipath.confファイルの作成または修正</title>

  <para>
   <filename>/etc/multipath.conf</filename>ファイルは、作成しない限り、存在しません。マルチパスの設定ファイルを作成して設定をパーソナライズしない限り、<command>multipathd</command>デーモンの実行時にデフォルトのマルチパスデバイス設定が自動的に適用されます。
  </para>

  <important>
   <title><filename>/etc/multipath.conf</filename>からの変更のテストおよび恒久的な適用</title>
   <para>
    <filename>/etc/multipath.conf</filename>ファイルの作成または修正を行った場合、ファイルを保存する際に変更が自動的には適用されません。これにより、変更をコミットする前に、それを検証するためにドライ実行を行うことができます。改訂した設定に満足な場合、<xref linkend="sec-multipath-conf-file-apply"/>の説明にあるようにマルチパスマップを更新できます。
   </para>
  </important>

  <sect2 xml:id="sec-multipath-conf-file-create">
   <title>/etc/multipath.confファイルの作成</title>
   <procedure>
    <step>
     <para>
      次のコマンドを使用した一般的な設定セットで開始します。
     </para>
<screen>multipath -T &gt; /etc/multipath.conf</screen>
     <para>
      これにより、現在のハードウェアに関連する設定がすべて作成されます。
     </para>
    </step>
    <step>
     <para>
      <filename>/etc/multipath.conf</filename>ファイルが作成されます。ファイルの次のセクションが設定に一致しているかどうかを確認してください。
     </para>
     <formalpara>
      <title><literal>デバイス</literal></title>
      <para>
       正しい設定については、SANのベンダーのドキュメントを参照してください。異なるSANには別々の<literal>device</literal>セクションが必要です。
      </para>
     </formalpara>
     <formalpara>
      <title><literal>blacklist</literal></title>
      <para>
       このセクションには、マシンのあらゆる非マルチパスデバイスを含める必要があります。詳細については、<xref linkend="sec-multipath-blacklist"/>を参照してください。
      </para>
     </formalpara>
     <para>
      必要に応じて、設定ファイルにセクションを追加します。簡単な説明は、<xref linkend="sec-multipath-conf-file-sections"/>を参照してください。詳細は、<command>man 5 multipath.conf</command>を実行すると参照できます。
     </para>
    </step>
    <step>
     <para>
      終了したら、<filename>/etc/multipath.conf</filename>を保存し、<xref linkend="sec-multipath-conf-file-verify"/>の説明にあるように設定をテストします。
     </para>
    </step>
    <step>
     <para>
      設定の確認を完了したら、<xref linkend="sec-multipath-conf-file-apply"/>の説明にあるようにこれを適用します。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-sections">
   <title><filename>/etc/multipath.conf</filename>ファイルのセクション</title>
   <para>
    <filename>/etc/multipath.conf</filename>ファイルは、以下のセクションで構成されています。詳細は、<command>man 5 multipath.conf</command>を参照してください。
   </para>
   <variablelist>
    <varlistentry>
     <term>defaults</term>
     <listitem>
      <para>
       マルチパスI/0の全般的デフォルト設定。これらの値は、適切なデバイスセクションまたはマルチパスセクションで値が指定されていない場合に使用されます。詳細については、「<xref linkend="sec-multipath-policies-default" xrefstyle="SectTitleOnPage"/>」を参照してください。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>blacklist</term>
     <listitem>
      <para>
       マルチパスの候補ではないとして破棄するデバイス名の一覧。デバイスは、そのデバイスノード名(<literal>devnode</literal>)、そのWWID (<literal>wwid</literal>)、またはそのベンダまたは製品文字列(<literal>device</literal>)によって識別できます。通常、非マルチパスデバイス(<literal>hpsa</literal>、<literal>fd</literal>、<literal>hd</literal>、<literal>md</literal>、<literal>dm</literal>、<literal>sr</literal>、<literal>scd</literal>、<literal>st</literal>、<literal>ram</literal>、<literal>raw</literal>、<literal>loop</literal>など)は無視できます。詳細と使用例については、<xref linkend="sec-multipath-blacklist" xrefstyle="HeadingOnPage"/>を参照してください。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>blacklist_exceptions</term>
     <listitem>
      <para>
       ブラックリストに記載されている場合でもマルチパスの候補として扱うデバイスのデバイス名の一覧。デバイスは、そのデバイスノード名(<literal>devnode</literal>)、そのWWID (<literal>wwid</literal>)、またはそのベンダまたは製品文字列(<literal>device</literal>)によって識別できます。対象のデバイスを指定するには、ブラックリストで使用したのと同じキーワードを使用する必要があります。たとえば、ブラックリスト内のデバイスに<literal>devnode</literal>キーワードを使用した場合は、<literal>devnode</literal>キーワードを使用して、ブラックリスト例外にあるデバイスの一部を除外します。<literal>devnode</literal>キーワードを使用し、それらの一部のデバイスを<literal>wwid</literal>キーワードを使用して除外することで、デバイスをブラックリストに入れることはできません。詳細と使用例については、<xref linkend="sec-multipath-blacklist" xrefstyle="HeadingOnPage"/>を参照してください。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>multipaths</term>
     <listitem>
      <para>
       個々のマルチパスデバイスの設定を指定します。個別設定をサポートしていない設定を除き、これらの値により、設定ファイルの<literal>defaults</literal>および<literal>devices</literal>セクションで指定された値が上書きされます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>devices</term>
     <listitem>
      <para>
       個々のストレージコントローラの設定を指定します。これらの値により、設定ファイル内の<filename>defaults</filename>セクションで指定された値が上書きされます。デフォルトではサポートされていないストレージアレイを使用している場合は、<literal>devices</literal>サブセクションを作成して、そのデフォルト設定を指定することができます。これらの値は、個々のマルチパスデバイスの設定により上書きが可能です(キーワードでそれが許可されていれば)。
      </para>
      <para>
       詳細については、次のリンクを参照してください。
      </para>
      <itemizedlist mark="bullet" spacing="normal">
       <listitem>
        <para>
         <xref linkend="sec-multipath-names" xrefstyle="SectTitleOnPage"/>
        </para>
       </listitem>
       <listitem>
        <para>
         <xref linkend="sec-multipath-best-practice-zseries" xrefstyle="SectTitleOnPage"/>
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-verify">
   <title>/etc/multipath.confファイルでのマルチパスセットアップの確認</title>
   <para>
    <filename>/etc/multipath.conf</filename>ファイルの作成または修正を行った場合、ファイルを保存する際に変更が自動的には適用されません。セットアップの<quote>ドライ実行</quote>を行って、マルチパスのマップを更新する前に、マルチパスセットアップを確認することができます。
   </para>
   <para>
    サーバのコマンドプロンプトで、次のように入力します。
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> multipath -v2 -d</screen>
   <para>
    このコマンドによりデバイスがスキャンされ、変更をコミットしたときにセットアップがどのようになるかが表示されます。<systemitem class="daemon">/etc/multipath.conf</systemitem>ファイルを修正してドライ実行を行う際に、変更前の(またはデフォルトの)マルチパス設定で、<filename>multipathd</filename>デーモンがすでに実行されていることを前提とします。変更内容に問題がなければ、次の手順に進みます。
   </para>
   <para>
    出力の例を以下に示します。
   </para>
<screen>26353900f02796769
[size=127 GB]
[features="0"]
[hwhandler="1    emc"]

\_ round-robin 0 [first]
  \_ 1:0:1:2 sdav 66:240  [ready ]
  \_ 0:0:1:2 sdr  65:16   [ready ]

\_ round-robin 0
  \_ 1:0:0:2 sdag 66:0    [ready ]
  \_ 0:0:0:2 sdc   8:32   [ready ]
</screen>
   <para>
    パスは、優先度グループでグループ化されます。一度に1つの優先度グループだけがアクティブに使用されます。アクティブ/アクティブ構成をモデル化するには、すべてのパスを同じグループにします。アクティブ/パッシブ構成をモデル化する場合は、並行してアクティブにしないパスを複数の別の優先度グループに振り分けます。これは、通常、デバイス検出時に自動的に行われます。
   </para>
   <para>
    出力として、順序、グループ内でのI/O負荷の分散に使用されるスケジュールポリシー、および各優先度グループのパスが表示されます。また、各パスに対して、その物理アドレス(ホスト:バス:ターゲット:LUN)、デバイスノード名、メジャー:マイナー番号、および状態が表示されます。
   </para>
   <para>
    ドライ実行で冗長レベルの-v3を使用することによって、すべての検出されたパス、マルチパス、およびデバイスマップを表示できます。WWIDおよびデバイスノードの両方でブラックリスト化されたデバイスが表示されます。
   </para>
   <para>
    2つのQlogic HBAをXiotech Magnitude 3000 SANに接続した64ビットSLES 11 SP2サーバでの-v3出力の例を、次に示します。例を短くするため、複数エントリの一部は省略されています。
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> multipath -v3 d
dm-22: device node name blacklisted
&lt; content omitted &gt;
loop7: device node name blacklisted
&lt; content omitted &gt;
md0: device node name blacklisted
&lt; content omitted &gt;
dm-0: device node name blacklisted
sdf: not found in pathvec
sdf: mask = 0x1f
sdf: dev_t = 8:80
sdf: size = 105005056
sdf: subsystem = scsi
sdf: vendor = XIOtech
sdf: product = Magnitude 3D
sdf: rev = 3.00
sdf: h:b:t:l = 1:0:0:2
sdf: tgt_node_name = 0x202100d0b2028da
sdf: serial = 000028DA0014
sdf: getuid= "/lib/udev/scsi_id --whitelisted --device=/dev/%n" (config file default)
sdf: uid = 200d0b2da28001400 (callout)
sdf: prio = const (config file default)
sdf: const prio = 1
[...]
ram15: device node name blacklisted
[...]
===== paths list =====
uuid              hcil    dev dev_t pri dm_st  chk_st  vend/prod/rev
200d0b2da28001400 1:0:0:2 sdf 8:80  1   [undef][undef] XIOtech,Magnitude 3D
200d0b2da28005400 1:0:0:1 sde 8:64  1   [undef][undef] XIOtech,Magnitude 3D
200d0b2da28004d00 1:0:0:0 sdd 8:48  1   [undef][undef] XIOtech,Magnitude 3D
200d0b2da28001400 0:0:0:2 sdc 8:32  1   [undef][undef] XIOtech,Magnitude 3D
200d0b2da28005400 0:0:0:1 sdb 8:16  1   [undef][undef] XIOtech,Magnitude 3D
200d0b2da28004d00 0:0:0:0 sda 8:0   1   [undef][undef] XIOtech,Magnitude 3D
params = 0 0 2 1 round-robin 0 1 1 8:80 1000 round-robin 0 1 1 8:32 1000
status = 2 0 0 0 2 1 A 0 1 0 8:80 A 0 E 0 1 0 8:32 A 0
sdf: mask = 0x4
sdf: path checker = directio (config file default)
directio: starting new request
directio: async io getevents returns 1 (errno=Success)
directio: io finished 4096/0
sdf: state = 2
[...]</screen>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-apply">
   <title>/etc/multipath.confファイルの変更を適用したマルチパスマップの更新</title>
   <para>
    <filename>/etc/multipath.conf</filename>ファイルに対する変更は、<command>multipathd</command>の実行中は有効になりません。変更を行ったら、ファイルを保存して閉じ、次のコマンドを実行して、変更内容を適用してマルチパスマップを更新してください。
   </para>
   <procedure>
    <step>
     <para>
      設定の変更を適用します。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> multipathd reconfigure</screen>
    </step>
    <step>
     <para>
      <command>dracut -f</command>を実行し、システム上に<filename>initrd</filename>イメージを再作成してから、再起動して変更内容を有効にします。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-conf-file-wwid">
   <title>WWIDの生成</title>
   <para>
    異なるパス上のデバイスを識別するため、マルチパスは、各デバイスに対してWorld Wide Identification (WWID)を使用します。2つのデバイスパスのWWIDが同じである場合、それらは同じデバイスを表すものと想定されます。やむを得ない理由がある場合を除き、WWIDの生成方法を変更しないことをお勧めします。詳細については、<command>man multipath.conf</command>を参照してください。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-policies-default">
  <title>ポーリング、待ち行列、およびフェールバック用のデフォルトポリシーの設定</title>

  <para>
   マルチパスI/Oの最終目標は、ストレージシステムとサーバ間のコネクティビティ耐障害性を提供することです。望ましいデフォルトの動作は、サーバがスタンダロンのサーバか、高可用性クラスタ内のノードかによって異なります。
  </para>

  <para>
   スタンドアロンサーバに対してマルチパスI/Oを構成する際は、<literal>no_path_retry</literal>の設定により、サーバのオペレーティングシステムを、I/Oエラーの受信から可能な限り保護することができます。この設定により、メッセージはマルチパスのフェールオーバーが発生するまで待ち行列に入れられ、正常な接続が保たれます。
  </para>

  <para>
   高可用性クラスタ内のノードに対してマルチパスI/Oを構成するときには、マルチパスでリソースのフェールオーバーをトリガするためにI/O障害が報告されるようにして、マルチパスのフェールオーバーが解決されるのを待たなくて済むようにするとよいでしょう。クラスタ環境では、<literal>no_path_retry</literal>設定を、ストレージシステムへの接続が失われた場合に、クラスタノードがクラスタ検証プロセスに関連するI/Oエラー(ハートビート許容値の50%を推奨)を受信するように変更する必要があります。また、パスの障害によるリソースのピンポンを避けるため、マルチパスI/Oのフェールバックをマニュアルに設定するとよいでしょう。
  </para>

  <para>
   <filename>/etc/multipath.conf</filename>ファイルには、ポーリング、待ち行列、およびフェールバックのデフォルト動作を指定できる<command>defaults</command>セクションが含まれています。<command>device</command>セクションで、フィールドが別途指定されていない場合は、そのSAN構成にデフォルト設定が適用されます。
  </para>

  <para>
   デフォルト設定では、以下のようにコンパイルされています。パーソナライズした<filename>/etc/multipath.conf</filename>ファイルを作成して構成することでこれらの値を上書きしない限り、この設定が使用されます。
  </para>

<screen>defaults {
  verbosity 2
#  udev_dir is deprecated in SLES 11 SP3
#  udev_dir              /dev
  polling_interval      5
#  path_selector default value is service-time in SLES 11 SP3
#  path_selector         "round-robin 0"
  path selector         "service-time 0"
  path_grouping_policy  failover
#  getuid_callout is deprecated in SLES 11 SP3 and replaced with uid_attribute
#  getuid_callout        "/lib/udev/scsi_id --whitelisted --device=/dev/%n"
#  uid_attribute is new in SLES 11 SP3
  uid_attribute         "ID_SERIAL"
  prio                  "const"
  prio_args             ""
  features              "0"
  path_checker          "tur"
  alias_prefix          "mpath"
  rr_min_io_rq          1
  max_fds               "max"
  rr_weight             "uniform"
  queue_without_daemon  "yes"
  flush_on_last_del     "no"
  user_friendly_names   "no"
  fast_io_fail_tmo      5
  bindings_file         "/etc/multipath/bindings"
  wwids_file            "/etc/multipath/wwids"
  log_checker_err       "always"

  retain_attached_hw_handler  "no"
  detect_prio           "no"
  failback              "manual"
  no_path_retry         "fail"
  }</screen>

  <para>
   ポーリング、待ち行列、およびフェールバックの詳細については、<xref linkend="sec-multipath-policies-failover" xrefstyle="SectTitleOnPage"/>に記載のパラメータを参照してください。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <xref linkend="vle-polling-interval" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="vle-no-path-retry" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="vle-failback" xrefstyle="HeadingOnPage"/>
    </para>
   </listitem>
  </itemizedlist>

  <para>
   <filename>/etc/multipath.conf</filename>ファイルの変更後、<command>dracut</command> <option>-f</option>を実行してシステム上に<filename>initrd</filename>を再作成してから、サーバを再起動して変更内容を有効にする必要があります。詳細については<xref linkend="sec-multipath-conf-file-apply"/>を参照してください。
  </para>
 </sect1>
 <sect1 xml:id="sec-multipath-blacklist">
  <title>非マルチパスデバイスのブラックリスト化</title>

  <para>
   <filename>/etc/multipath.conf</filename>ファイルに<command>blacklist</command>セクションを含め、すべての非マルチパスデバイスを一覧にできます。WWID (<literal>wwid</literal>キーワード)、デバイス名(<literal>devnode</literal>キーワード)、またはデバイスタイプ(<literal>device</literal>セクション)を使用してデバイスをブラックリスト化できます。<literal>blacklist_exceptions</literal>セクションを使って、<literal>blacklist</literal>セクションで使用している正規表現によってブラックリスト化された特定のデバイスに対してマルチパスを有効にすることもできます。
  </para>

  <note>
   <title>推奨するブラックリスト化方法</title>
   <para>
    デバイスをブラックリスト化する場合に推奨する方法は、<emphasis/>「WWID」または<emphasis/>「ベンダーと製品」です。<emphasis/>「devnode」によるブラックリスト化は推奨しません。デバイスノードは変わる可能性があり、デバイスを常時識別する目的では役に立たないからです。
   </para>
  </note>

  <warning>
   <title>multipath.confの正規表現</title>
   <para>
    <filename>/etc/multipath.conf</filename>では、正規表現は一般に「無効」です。<emphasis/>正規表現は、一般的な文字列を検索する場合にのみ有効です。ただし、マルチパスの標準設定には、すでにさまざまなデバイスとベンダーを表す正規表現が含まれています。正規表現で別の正規表現を検索することはできません。<command>multipath -t</command>で表示される文字列のみを検索するようにしてください。
   </para>
  </warning>

  <para>
   通常、非マルチパスデバイス(<literal>hpsa</literal>、<literal>fd</literal>、<literal>hd</literal>、<literal>md</literal>、<literal>dm</literal>、<literal>sr</literal>、<literal>scd</literal>、<literal>st</literal>、<literal>ram</literal>、<literal>raw</literal>、<literal>loop</literal>など)は無視できます。たとえば、ローカルのSATAハードディスクやフラッシュディスクにはマルチパスはありません。<command>multipath</command>で単一パスデバイスを無視する場合は、それらのデバイスを<command>blacklist</command>セクションに記述します。
  </para>

  <note>
   <title>互換性</title>
   <para>
    キーワード<literal>devnode_blacklist</literal>は廃止され、キーワード<literal>blacklist</literal>に代わりました。
   </para>
   <para>
    SUSE Linux Enterprise Server 12では、glibcで提供されている正規表現が使用されます。任意の文字列に一致させるには、<literal>".</literal>"*"<literal>ではなく*"</literal>を使用する必要があります。
   </para>
  </note>

  <para>
   たとえば、<filename>hpsa</filename>ドライバからローカルデバイスとすべてのアレイを、multipathによる管理から外してブラックリストに載せるには、<command>blacklist</command>セクションを次のように指定します。
  </para>

<screen>blacklist {
      wwid "26353900f02796769"
      devnode "^(ram|raw|loop|fd|md|dm-|sr|scd|st)[0-9]*"
      devnode "^sd[a-z][0-9]*"
}</screen>

  <para>
   アレイ全体でなく、ドライバからのパーティションだけをブラックリスト化することもできます。たとえば、次の正規表現を使用すると、アレイ全体ではなく、ccissドライバからのパーティションだけをブラックリスト化できます。
  </para>

<screen>blacklist {
      devnode "^cciss!c[0-9]d[0-9]*[p[0-9]*]"
}</screen>

  <para>
   特定のデバイスタイプをブラックリスト化するには、ブラックリストに<literal>device</literal>セクションを追加して、キーワード<literal>vendor</literal>および<literal>product</literal>を使用します。
  </para>

<screen>blacklist {
      device {
           vendor  "DELL"
           product ".*"
       }
}</screen>

  <para>
   <literal>blacklist_exceptions</literal>セクションを使って、<literal>blacklist</literal>セクションで使用している正規表現によってブラックリスト化された特定のデバイスに対してマルチパスを有効にできます。WWID (<literal>wwid</literal>キーワード)、デバイス名(<literal>devnode</literal>キーワード)、またはデバイスタイプ(<literal>device</literal>セクション)を使用して例外を追加します。例外は、対応するデバイスをブラックリスト化したときと同じ方法で指定する必要があります。つまり、<literal>wwid</literal>例外は<literal>wwid</literal>ブラックリストに適用され、<literal>devnode</literal>例外は<literal>devnode</literal>ブラックリストに適用され、デバイスタイプ例外はデバイスタイプブラックリストに適用されます。
  </para>

  <para>
   たとえば、同じベンダのデバイスタイプが複数ある場合、目的のデバイスタイプに対してマルチパスを有効にできます。そのベンダのデバイスタイプすべてを<literal>blacklist</literal>セクションに記述してブラックリスト化してから、<literal>blacklist_exceptions</literal>セクションに<literal>device</literal>セクションを追加し、目的のデバイスタイプに対してマルチパスを有効にします。
  </para>

<screen>blacklist {
      devnode "^(ram|raw|loop|fd|md|dm-|sr|scd|st|sda)[0-9]*"
      device {
           vendor  "DELL"
           product ".*"
       }
}

blacklist_exceptions {
      device {
           vendor  "DELL"
           product "MD3220i"
       }
}</screen>

  <para>
   blacklist_exceptionsを使用して、特定のデバイスに対してのみマルチパスを有効にすることもできます。例:
  </para>

<screen>blacklist {
      wwid ".*"
}

blacklist_exceptions {
        wwid "3600d0230000000000e13955cc3751234"
        wwid "3600d0230000000000e13955cc3751235"
}</screen>

  <para>
   <filename>/etc/multipath.conf</filename>ファイルの変更後、<command>dracut</command> <option> -f</option>を実行してシステム上に<filename>initrd</filename>を再作成してから、サーバを再起動して変更内容を有効にする必要があります。詳細については<xref linkend="sec-multipath-conf-file-apply"/>を参照してください。
  </para>

  <para>
   再起動後は、<command>multipath -ll</command>コマンドを発行しても、ローカルデバイスはマルチパスマップにリストされません。
  </para>

  <note>
   <title><literal>find_multipaths</literal>オプションの使用</title>
   <para>
    <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 12 SP2より、マルチパスツールは、<filename>/etc/multipath.conf</filename>の<literal>defaults</literal>セクションでオプション<literal>find_multipaths</literal>をサポートするようになりました。このオプションは、マルチパスと<systemitem class="daemon">multipathd</systemitem>が、パスが1つだけのデバイスにマルチパスマップを設定しないようにします(詳細については、<command>man 5 multipath.conf</command>を参照してください)。特定の設定では、これによって、管理者がローカルSATAディスクなどのブラックリストエントリを作成する手間を省くことができます。
   </para>
   <para>
    <literal>find_multipaths</literal>オプションを使用すると一見便利そうですが、欠点もあります。まず、システムのブートが複雑化して低速になります。見つかったすべてのデバイスについて、そのデバイスに2つ目のパスが存在するかどうかを確認するため、すべてのデバイスが検出されるまでブートロジックが待機しなければならないからです。さらに、ブート時に一部のパスがダウンしていたり、他の理由で不可視になっていたりすると、問題が発生する可能性もあります。つまり、デバイスがシングルパスデバイスとして誤検出されてアクティブ化され、後で他のパスを追加できなくなる可能性があります。
   </para>
   <para>
    <literal>find_multipaths</literal>は、WWIDが一致すれば、<filename>/etc/multipath/wwids</filename>に一覧にされたデバイスをすべてマルチパスデバイスとみなします。これは、<literal>find_multipaths</literal>を初めて有効にする場合に重要です。wwidsファイルには既存のすべてのマルチパスマップ(シングルパスマップを含む)が一覧にされているため、<filename>/etc/multipath/wwids</filename>を削除または編集しない限り、このオプションを有効にしても効果はありません。マルチパスルートファイルシステムを持つSANブートシステムでは、初期RAMディスクとファイルシステムとの間で<filename>/etc/multipath/wwids</filename>の同期が維持されるようにしてください。
   </para>
   <para>
    まとめると、<literal>find_multipaths</literal>を使用すると便利ですが、SUSEは、これまでと同様に適切に設定されたブラックリストとブラックリスト例外を使うデフォルト設定をお勧めします。
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-multipath-names">
  <title>ユーザフレンドリ名または別名の設定</title>

  <para>
   マルチパスデバイスは、そのWWID、ユーザフレンドリな名前、またはそれに割り当てた別名で識別されます。<filename>/dev/sdn</filename>および<filename>/dev/dm-n</filename>の形式のデバイスノード名は、再起動の際に変わる可能性があり、毎回異なるデバイスに割り当てられることになります。デバイスのWWID、ユーザフレンドリ名、および別名は、再起動の際にも変わることなく、デバイスの識別には望ましい方法です。
  </para>

  <important>
   <title>永続的な名前の使用の推奨</title>
   <para>
    <filename>/dev/sdn</filename>および<filename>/dev/dm-n</filename>形式のデバイスノード名は、再起動時に変更される可能性があるので、マルチパスデバイスは、そのWWIDで参照することを推奨します。また、再起動時にデバイスを一意に識別するために、WWIDにマップされたユーザフレンドリ名または別名を使用することもできます。
   </para>
  </important>

  <para>
   次の表では、<filename>/etc/multipath.conf</filename>ファイル内のデバイスに使用できるデバイス名のタイプについて説明しています。<filename>multipath.conf</filename>設定の例については、<filename>/usr/share/doc/packages/multipath-tools/multipath.conf.synthetic</filename>ファイルを参照してください。
  </para>

  <table>
   <title>マルチパスデバイス名のタイプの比較</title>
   <tgroup cols="2">
    <colspec colnum="1" colname="1" colwidth="1667*"/>
    <colspec colnum="2" colname="2" colwidth="8334*"/>
    <thead>
     <row>
      <entry>
       <para>
        名前のタイプ
       </para>
      </entry>
      <entry>
       <para>
        説明
       </para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>
        WWID (デフォルト)
       </para>
      </entry>
      <entry>
       <para>
        シリアルWWID (Worldwide Identifier)は、グローバルに固有または非変更であることを保証されたマルチパスデバイスの識別子です。マルチパス処理で使用されるデフォルト名は、<filename>/dev/disk/by-id</filename>ディレクトリにある論理ユニットのIDです。たとえば、WWIDが<literal>3600508e0000000009e6baa6f609e7908</literal>のデバイスは、<filename>/dev/disk/by-id/scsi-3600508e0000000009e6baa6f609e7908</filename>と記載されています。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        ユーザフレンドリ
       </para>
      </entry>
      <entry>
       <para>
        <filename>/dev/mapper</filename>ディレクトリ内のデバイスマッパーマルチパスのデバイス名は、論理ユニットのIDも参照します。これらのマルチパスデバイス名は、<filename>/dev/mapper/mpath<replaceable>N</replaceable></filename>形式を使用するユーザフレンドリな名前です(たとえば、<filename>/dev/mapper/mpath0</filename>)。これらの名前は、<filename>/var/lib/multipath/bindings</filename>ファイルを使用してUUIDとユーザフレンドリな名前の関連付けを追跡するので、固有かつ永続的です。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        別名
       </para>
      </entry>
      <entry>
       <para>
        別名は、グローバルに固有な名前であり、管理者がマルチパスデバイスに提供します。別名は、WWIDとユーザフレンドリな<filename>/dev/mapper/mpath<replaceable>N</replaceable></filename>名に優先します。
       </para>
       <para>
        user_friendly_nameを使用している場合は、別名をmpath<replaceable>N</replaceable>形式に設定しないでください。mpathN形式にすると、自動的に割り当てられたユーザフレンドリ名と競合し、デバイスノードが正しくなくなる可能性があります。
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   <filename>/etc/multipath.conf</filename>ファイルのグローバルマルチパスオプション<literal>user_friendly_names</literal>は、マルチパスデバイスのユーザフレンドリ名の使用を有効または無効にするために使用されます。このオプションが<literal>no</literal> (デフォルト)に設定されている場合、マルチパスはデバイス名としてWWIDを使用します。このオプションが<literal>yes</literal>に設定されている場合は、<filename>/var/lib/multipath/bindings</filename>ファイルが使用されて、<filename>mpath&lt;<replaceable>N</replaceable>&gt;</filename>形式の永続的で固有の名前が、<filename>/dev/mapper</filename>ディレクトリ内でデバイスに割り当てられます。<literal>/etc/multipath.conf</literal>ファイルの<literal>bindings file</literal>オプションを使用すると、<filename>bindings</filename>ファイルに代替の場所を指定できます。
  </para>

  <para>
   <filename>/etc/multipath.conf</filename>ファイルのグローバルマルチパスオプション<literal>alias</literal>は、デバイスに名前を明示的に割り当てるために使用されます。別名がマルチパスデバイスに設定されている場合は、WWIDまたはユーザフレンドリ名の代わりにその別名が使用されます。
  </para>

  <para>
   <literal>user_friendly_names</literal>オプションの使用は、以下の状況では問題を引き起こす可能性があります。
  </para>

  <variablelist>
   <varlistentry>
    <term>ルートデバイスでマルチパスを使用している場合:</term>
    <listitem>
     <para>
      システムルートデバイスでマルチパスを使用中に、<literal>user_friendly_names</literal>オプションを使用する場合は、 option, the user-friendly settings in the <filename>/var/lib/multipath/bindings</filename>ファイルのユーザフレンドリ設定が<filename>initrd</filename>に組み込まれます。デバイスの追加や削除などで、後でストレージのセットアップを変更した場合は、<filename>initrd</filename>内のバインディング設定と<filename>/var/lib/multipath/bindings</filename>内のバインディング設定に不一致が生じます。
     </para>
     <warning>
      <title>バインディングの不一致</title>
      <para>
       <filename>initrd</filename>と<filename>/var/lib/multipath/bindings</filename>のバインディングが不一致だと、デバイスに間違ったマウントポイントが割り当てられることがあり、その場合は、ファイルシステムが破損し、データが失われます。
      </para>
     </warning>
     <para>
      この問題を回避するには、システムルートデバイスにデフォルトのWWID設定を使用することを推奨します。システムのルートデバイスには、別名を使用してはなりません。デバイス名が異なることがあるため、別名を使用すると、カーネルのコマンドラインを通じてマルチパス処理をシームレスにスイッチオフすることができなくなります。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>別のパーティションから/varをマウントする場合:</term>
    <listitem>
     <para>
      <literal>user_friendly_names</literal>設定ファイルのデフォルトの格納場所は、<filename>/var/lib/multipath/bindings</filename>です。<filename>/var</filename>データがシステムルートデバイス上になく、このデータを別のパーティションからマウントする場合は、マルチパス処理のセットアップ時に<filename>bindings</filename>ファイルを利用できません。
     </para>
     <para>
      <filename>/var/lib/multipath/bindings</filename>ファイルをシステムルートデバイスで使用し、マルチパスで検出できるようにしてください。これは、たとえば、次の手順で実行できます。
     </para>
     <orderedlist spacing="normal">
      <listitem>
       <para>
        <filename>/var/lib/multipath/bindings</filename>ファイルを<filename>/etc/multipath/bindings</filename>に移動します。
       </para>
      </listitem>
      <listitem>
       <para>
        この新しい場所に、/<filename>etc/multipath.conf</filename>の<literal>defaults</literal>セクションにある<literal>bindings_file</literal>オプションを設定します。例:
       </para>
<screen>
defaults {
               user_friendly_names yes
               bindings_file "/etc/multipath/bindings"
}
</screen>
      </listitem>
     </orderedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>マルチパスがinitrdに含まれている場合:</term>
    <listitem>
     <para>
      システムルートデバイスがマルチパス上にない場合でも、マルチパスが<filename>initrd</filename>に含まれることがあります。これは、たとえば、システムルートデバイスがLVM上にある場合に起こります。<literal>user_friendly_names</literal>オプションを使用し、マルチパスが<filename>initrd</filename>内にある場合は、パラメータ<command>multipath=off</command>でブートして問題を回避してください。
     </para>
     <para>
      これにより、システムブート中は、<filename>initrd</filename>内でのみマルチパスが無効になります。システムブート後は、ブートスクリプト<filename>boot.multipath</filename>および<filename>multipathd</filename>によって、マルチパス処理を有効にすることができます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>HAクラスタでマルチパス処理を行う場合:</term>
    <listitem>
     <para>
      詳細については<xref linkend="sec-multipath-names-ha"/>を参照してください。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   ユーザフレンドリな名前を有効にするか、別名を指定する場合:
  </para>

  <procedure>
   <step>
    <para>
     <systemitem class="username">root</systemitem>特権を使用して<filename>/etc/multipath.conf</filename>ファイルをテキストエディタで開きます。
    </para>
   </step>
   <step>
    <para>
     (オプション)<filename>/var/lib/multipath/bindings</filename>ファイルの場所を変更します。
    </para>
    <para>
     代替パスは、マルチパスが代替パスを見つけることができるシステムルートデバイス上に存在する必要があります。
    </para>
    <substeps performance="required">
     <step>
      <para>
       <filename>/var/lib/multipath/bindings</filename>ファイルを<filename>/etc/multipath/bindings</filename>に移動します。
      </para>
     </step>
     <step>
      <para>
       この新しい場所に、/<filename>etc/multipath.conf</filename>の<literal>defaults</literal>セクションにある<literal>bindings_file</literal>オプションを設定します。例:
      </para>
<screen>
defaults {
          user_friendly_names yes
          bindings_file "/etc/multipath/bindings"
}
</screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     (オプション、非推奨)ユーザフレンドリ名の有効にする:
    </para>
    <substeps performance="required">
     <step>
      <para>
       <literal>defaults</literal>セクションとその閉じ括弧を非コメント化します。
      </para>
     </step>
     <step>
      <para>
       <literal>user_friendly_names</literal>オプションを非コメント化し、次に、その値をNoからYesに変更します。
      </para>
      <para>
       例:
      </para>
<screen>## Use user-friendly names, instead of using WWIDs as names.
defaults {
  user_friendly_names yes
}</screen>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     (オプション)<command>alias</command>オプション(<command>multipath</command>セクションにある)を使用して、独自のデバイス名を指定します。
    </para>
    <para>
     例:
    </para>
<screen>## Use alias names, instead of using WWIDs as names.
multipaths {
       multipath {
               wwid           36006048000028350131253594d303030
               alias             blue1
       }
       multipath {
               wwid           36006048000028350131253594d303041
               alias             blue2
       }
       multipath {
               wwid           36006048000028350131253594d303145
               alias             yellow1
       }
       multipath {
               wwid           36006048000028350131253594d303334
               alias             yellow2
       }
}
</screen>
    <important>
     <title>WWNと比較したWWID</title>
     <para>
      <filename>/etc/multipath.conf</filename>ファイル内でデバイスの別名を定義する場合は、必ず各デバイスのWWID (<filename>3600508e0000000009e6baa6f609e7908</filename>など)を使用し、そのWWNは使用しないようにしてください。WWNは、デバイスIDの最初の文字を<filename>0x</filename>で置き換えます(<filename>0x600508e0000000009e6baa6f609e7908</filename>など)。
     </para>
    </important>
   </step>
   <step>
    <para>
     変更内容を保存し、ファイルを閉じます。
    </para>
   </step>
   <step>
    <para>
     <filename>/etc/multipath.conf</filename>ファイルの変更後、<command>dracut</command> <option> -f</option>を実行してシステム上に<filename>initrd</filename>を再作成してから、サーバを再起動して変更内容を有効にする必要があります。詳細については<xref linkend="sec-multipath-conf-file-apply"/>を参照してください。
    </para>
   </step>
  </procedure>

  <para>
   LUNディレクトリ全体を使用する場合は(たとえばSAN機能を使用してストレージのパーティションを行っている場合など)、<command>mkfs</command>、<filename>/etc/fstab</filename>、ご使用のアプリケーションなどに、<filename>/dev/disk/by-id/xxx</filename>という名前を使用することができます。パーティションで分割されたデバイスは、デバイス名の後ろに<filename>_part&lt;n&gt;</filename>が付加されます(<filename>/dev/disk/by-id/xxx_part1</filename>など)。
  </para>

  <para>
   <filename>/dev/disk/by-id</filename>ディレクトリでは、マルチパスのマップ処理がなされたデバイスは、<filename>dm-uuid*</filename>名または別名(<filename>/etc/multipath.conf</filename>ファイル内で別名を割り当てている場合)で表されます。<filename>scsi-</filename>および<filename>wwn-</filename>のデバイス名は、そのデバイスへの物理的パスを表します。
  </para>

  <sect2 xml:id="sec-multipath-names-ha">
   <title>HAクラスタにおけるマルチパスデバイスの名前</title>
   <para>
    以下を行って、マルチパスデバイスがすべてのデバイス間で同じ名前であるようにしてください。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      UUIDと別名を使用して、マルチパスデバイスの名前が、クラスタ内のすべてのノードで同一となるようにします。別名は、すべてのノードにわたって一意である必要があります。<filename>/etc/multipath.conf</filename>ファイルを、ノードからクラスタ内の他のすべてのノードの<filename>/etc/</filename>ディレクトリにコピーします。
     </para>
    </listitem>
    <listitem>
     <para>
      マルチパスがマップされたデバイスを使用する場合は、<filename>dm-uuid*</filename>名または別名を<filename>/dev/disk/by-id</filename>ディレクトリ内で指定し、デバイスの固定パスインスタンスは指定しないようにします。詳細については、「<xref linkend="sec-multipath-names" xrefstyle="SectTitleOnPage"/>」を参照してください。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>user_friendly_names</literal>構成オプションを、無効にしないよう設定します。<literal/>ユーザフレンドリ名はノードに固有ですが、クラスタ内のすべてのノードにおいてデバイスに同じユーザフレンドリ名が割り当てられてはいない可能性があります。
     </para>
    </listitem>
   </itemizedlist>
   <note>
    <title>ユーザフレンドリ名</title>
    <para>
     実際にユーザフレンドリ名を使用する必要がある場合は、以下の操作により、システム定義のユーザフレンドリ名を、クラスタ内のすべてのノードについて同一にすることができます。
    </para>
    <procedure>
     <step>
      <para>
       1つのノード上の<filename>/etc/multipath.conf</filename>ファイル内で、
      </para>
      <orderedlist>
       <listitem>
        <para>
         <literal>user_friendly_names</literal>構成オプションを<literal>yes</literal>に設定して有効にします。
        </para>
        <para>
         マルチパスは、<filename>/var/lib/multipath/bindings</filename>ファイルを使用して、<filename>/dev/mapper</filename>ディレクトリ内で<filename>mpath&lt;<replaceable>N</replaceable>&gt;</filename>の形式で、デバイスに永続的かつ固有の名前を割り当てます。
        </para>
       </listitem>
       <listitem>
        <para>
         (オプション) <literal>bindings</literal>ファイルに対して別の場所を指定するには、<literal>/etc/multipath.conf</literal>ファイルの<literal>defaults</literal>セクションにある、<filename>bindings_file</filename>オプションを設定します。
        </para>
        <para>
         デフォルトの場所は、<filename>/var/lib/multipath/bindings</filename>です。
        </para>
       </listitem>
      </orderedlist>
     </step>
     <step>
      <para>
       ノード上のマルチパスデバイスをすべて設定します。
      </para>
     </step>
     <step>
      <para>
       <filename>/etc/multipath.conf</filename>ファイルを、ノードからクラスタ内の他のすべてのノードの<filename>/etc/</filename>ディレクトリにコピーします。
      </para>
     </step>
     <step>
      <para>
       <filename>bindings</filename>ファイルを、ノードから、クラスタ内の他のすべてのノード上の<filename>bindings_file</filename>パスにコピーします。
      </para>
     </step>
     <step>
      <para>
       <filename>/etc/multipath.conf</filename>ファイルの変更後、<command>dracut</command> <option> -f</option>を実行してシステム上に<filename>initrd</filename>を再作成してから、ノードを再起動して変更内容を有効にする必要があります。詳細については<xref linkend="sec-multipath-conf-file-apply"/>を参照してください。これは、影響を受けるすべてのノードに適用されます。
      </para>
     </step>
    </procedure>
   </note>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-policies-failover">
  <title>パスフェールオーバーのポリシーと優先度の設定</title>

  <para>
   Linuxホスト内で、ストレージコントローラへのパスが複数ある場合は、各パスが別個のブロックデバイスとして表示され、その結果、1つのLUNに複数のブロックデバイスが存在することになります。デバイスマッパーマルチパスサービスは、同じLUN IDをもつ複数のパスワードを検出し、そのIDで新しいマルチパスデバイスを作成します。たとえば、1つの非ゾーン化されたファイバチャネルのスイッチを介して2つのポートでストレージコントローラに接続した2つのHBAをもつホストは、4つのブロックデバイスを認識します(<filename>/dev/sda</filename>、<filename>/dev/sdb</filename>、<filename>/dev/sdc</filename>、<filename>/dev/sdd</filename>)。デバイスマッパーマルチパスサービスは、1つのブロックデバイス<filename>/dev/mpath/mpath1</filename>を作成します。このデバイスは、既に示した4つのブロックデバイスを介してI/Oを再経路指定します。
  </para>

  <para>
   本項では、フェールオーバーのポリシーを指定し、パスの優先順位を設定する方法について説明します。<filename>/etc/multipath.conf</filename>ファイルの変更後、<command>dracut</command> <option> -f</option>を実行してシステム上に<filename>initrd</filename>を再作成してから、サーバを再起動して変更内容を有効にする必要があることに注意してください。詳細については<xref linkend="sec-multipath-conf-file-apply"/>を参照してください。
  </para>

  <sect2 xml:id="sec-multipath-policies-failover-path">
   <title>パスのフェールオーバーポリシーの設定</title>
   <para>
    <command>multipath</command>コマンドを<option>-p</option>オプション付きで使用して、パスフェールオーバーポリシーを設定します。
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> multipath <replaceable>DEVICENAME</replaceable> -p <replaceable>POLICY</replaceable></screen>
   <para>
    次のポリシーオプションの1つで、<replaceable>POLICY</replaceable>を置き換えます。
   </para>
   <table>
    <title>multipath -pコマンドのグループポリシーオプション</title>
    <tgroup cols="2">
     <colspec colnum="1" colname="1" colwidth="2381*"/>
     <colspec colnum="2" colname="2" colwidth="7620*"/>
     <thead>
      <row>
       <entry>
        <para>
         ポリシーオプション
        </para>
       </entry>
       <entry>
        <para>
         説明
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>
        <para>
         failover (フェールオーバー)
        </para>
       </entry>
       <entry>
        <para>
         (デフォルト)優先度グループごとに1つのパス
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         multibus
        </para>
       </entry>
       <entry>
        <para>
         1つの優先度グループ内にすべてのパス
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         group_by_serial
        </para>
       </entry>
       <entry>
        <para>
         検出されたシリアル番号ごとに1つの優先度グループ
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         group_by_prio
        </para>
       </entry>
       <entry>
        <para>
         パス優先度値ごとに1つの優先度グループ優先度は、コールアウトプログラムで決定されます。それらのプログラムは、グローバル、コントローラごと、またはマルチパスごとのオプションとして<filename>/etc/multipath.conf</filename>環境設定ファイルで指定されます。
        </para>
       </entry>
      </row>
      <row>
       <entry>
        <para>
         group_by_node_name
        </para>
       </entry>
       <entry>
        <para>
         ターゲットノード名ごとに1つの優先度グループターゲットノード 名は、<filename> /sys/class/fc_transport/target*/node_name</filename>にフェッチされます。
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect2>

  <sect2 xml:id="sec-multipath-policies-failover-prio">
   <title>フェールオーバーポリシーの設定</title>
   <para>
    デバイスのフェールオーバーポリシーは、手動で、<filename>/etc/multipath.conf</filename>ファイルに入力する必要があります。すべての設定とオプションの例は、<filename>/usr/share/doc/packages/multipath-tools/multipath.conf.annotated</filename>ファイルにあります。
   </para>
   <sect3 xml:id="sec-multipath-policies-failover-prio-info">
    <title>優先度グループと属性の理解</title>
    <para>
     <emphasis>優先度グループ</emphasis>は、同じ物理LUNに属するパスのコレクションです。デフォルトでは、I/Oは、グループ内のすべてのパス全体にラウンドロビン方式で配分されます。<command>multipath</command>コマンドは、SANのpath_grouping_policy設定に基づいてそのSANの各LUNごとに、自動的に優先度グループを作成します。<literal/><command>multipath</command>コマンドは、グループ内のパス数にグループの優先度を掛け合わせて、どのグループがプライマリか決定します。計算された値が最も高いグループがプライマリグループです。プライマリグループ内のすべてのパスが失敗すると、次に値の高い優先度グループがアクティブになります。
    </para>
    <para>
     <emphasis>パス優先度</emphasis>は、パスに割り当てられた整数値です。値が高いほど、優先度が高くなります。パスごとに優先度を割り当てるには、外部プログラムが使用されます。所定のデバイスに関して、同じ優先度のパスが同じ優先度グループに属します。
    </para>
    <para>
     <filename>prio</filename>設定は、<literal>/etc/multipath.conf</literal>ファイルの<literal>defaults{}</literal>または<literal>devices{}</literal>セクションで使用します。<literal>multipath{)</literal>セクションの個別の<literal>multipaths</literal>定義に指定されている場合は、暗黙のうちに無視されます。<literal>prio</literal>行で、Prioritizerが指定されます。Prioritizerが引数を必要とする場合、その引数は2行目の<literal>prio_args</literal>キーワードで指定します。
    </para>
    <bridgehead>デフォルトセクションまたはデバイスセクションのprio設定</bridgehead>
    <variablelist>
     <varlistentry>
      <term><literal>prio</literal></term>
      <listitem>
       <para>
        パス優先度の値を取得するために呼び出すPrioritizerプログラムを指定します。加重は、障害の発生時に使用する次のパスグループを決定するため、それぞれのパスグループに対して合計されます。
       </para>
       <para>
        指定したPrioritizerで引数が必要な場合は、<literal>prio_args</literal>キーワードを使用して、引数を指定します。
       </para>
       <para>
        <literal>prio</literal>キーワードを指定しない場合は、すべてのパスが同等になりますデフォルトの設定は<literal>const</literal>で、<literal>prio_args</literal>の設定には値がありません。
       </para>
<screen>prio "const"
prio_args ""</screen>
       <para>
        Prioritizerのプログラム例には、以下のものがあります。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2907*"/>
         <colspec colnum="2" colname="2" colwidth="7096*"/>
         <thead>
          <row>
           <entry>
            <para>
             Prioritizerプログラム
            </para>
           </entry>
           <entry>
            <para>
             説明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>alua</literal>
            </para>
           </entry>
           <entry>
            <para>
             SCSI-3 ALUA設定に基づいてパス優先度を生成します。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>const</literal>
            </para>
           </entry>
           <entry>
            <para>
             すべてのパスに同じ優先度を生成します。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>emc</literal>
            </para>
           </entry>
           <entry>
            <para>
             EMCアレイのパス優先度を生成します。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>hdc</literal>
            </para>
           </entry>
           <entry>
            <para>
             Hitachi HDS Modularストレージアレイのパス優先度を生成します。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>hp_sw</literal>
            </para>
           </entry>
           <entry>
            <para>
             アクティブ/スタンバイモードのCompaq/HPコントローラのパス優先度を生成します。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>ontap</literal>
            </para>
           </entry>
           <entry>
            <para>
             NetAppアレイのパス優先度を生成します。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>random</literal>
            </para>
           </entry>
           <entry>
            <para>
             パスごとにランダムな優先度を生成します。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>rdac</literal>
            </para>
           </entry>
           <entry>
            <para>
             LSI/Engenio RDACコントローラのパスの優先度を生成します。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>weightedpath</literal>
            </para>
           </entry>
           <entry>
            <para>
             <literal>prio_args</literal>に対する引数内で指定した加重値に基づいて、パス優先度を生成します。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>path_latency</literal>
            </para>
           </entry>
           <entry>
            <para>
             <literal>prio_args</literal>キーワードで設定されているレイテンシアルゴリズムに基づいて、パスの優先度を生成します。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
    </variablelist>
    <bridgehead><literal>prio_args</literal>引数</bridgehead>
    <para>
     これらは、引数を必要とするPrioritizerプログラムの引数です。ほとんどの<literal>prio</literal>プログラムでは、引数は不要です。デフォルト値はありません。値は、<literal>prio</literal>の設定と、Prioritizerが次の引数のいずれかを必要とするかどうかによります。
    </para>
    <variablelist>
     <varlistentry>
      <term>weighted</term>
      <listitem>
       <para>
        フォーム<literal>[hbtl|devname|serial|wwn]</literal>
        <replaceable>REGEX1</replaceable> <replaceable>PRIO1</replaceable>
        <replaceable>REGEX2</replaceable> <replaceable>PRIO2</replaceable>の値が必要です...
       </para>
       <para>
        Regexでは、SCSI H:B:T:L形式(1:0:.:.および*:0:0:.など)を、加重値とともに使用する必要があります。ここで、H、B、T、Lはそれぞれ、デバイスのホスト、バス、ターゲット、およびLUN IDを示します。例:
       </para>
<screen>prio "weightedpath"
prio_args "hbtl 1:.:.:. 2 4:.:.:. 4"</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>devname</term>
      <listitem>
       <para>
        Regexはデバイス名形式です。例: sda, sd.e
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>serial</term>
      <listitem>
       <para>
        Regexはシリアル番号形式です。例: .*J1FR.*324.<command>multipathd show paths format %z</command>コマンドを使用してシリアル番号を検索します。(<command>multipathd show wildcards</command>では、すべての<literal>format</literal>のワイルドカードが表示されます。)
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>alua</term>
      <listitem>
       <para>
        <literal>exclusive_pref_bit</literal>がデバイスに対して設定される場合(<literal>alua exclusive_pref_bit</literal>)、<literal>preferred path</literal>ビットセットを持つパスは常に独自のパスグループ内になります。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>path_latency</term>
      <listitem>
       <para>
        <literal>path_latency</literal>では、リモートとローカルの両方のストレージアレイが同じタイプのハードウェアを使用する場合に、これらのアレイ間のレイテンシを調整します。通常、リモートアレイのレイテンシは高くなるため、レイテンシを調整してそれらを互いに近づけることができます。これには<literal>io_num=<replaceable>20</replaceable> base_num=<replaceable>10</replaceable></literal>という形式の値ペアが必要です。
       </para>
       <para>
        <literal>io_num</literal>は、現在のパスに継続的に送信される読み込みIO数で、平均のパスレイテンシを計算するために使用されます。有効な値は2～200の間の整数です。
       </para>
       <para>
        <literal>base_num</literal>は、異なる優先順位を分割するために使用される対数の基数です。有効な値は2～10の間の整数です。最大平均レイテンシ値は100s、最小は1μsです。たとえば、<literal>base_num=10</literal>の場合、パスはパスレイテンシが &lt;=1 μs、(1 μs, 10 μs]、(10 μs, 100 μs)、(100 μs, 1 ms)、(1 ms, 10 ms)、(10 ms, 100 ms)、(100 ms, 1 s)、(1 s, 10 s)、(10 s, 100 s)、&gt;100 sの優先グループにグループ化されます。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <bridgehead>マルチパス属性</bridgehead>
    <para>
     デバイスに対するマルチパスI/Oの動作を制御するには、マルチパス属性を使用します。すべてのマルチパスデバイスに対して、デフォルトとして属性を指定できます。また、あるマルチパスデバイスにのみ適用する属性を、そのデバイス用のエントリを、マルチパス設定ファイルの<literal>multipaths</literal>セクションで作成することで、指定することもできます。
    </para>
    <variablelist>
     <varlistentry>
      <term><literal>user_friendly_names</literal></term>
      <listitem>
       <para>
        WWID(world-wide ID)を使用するか、または<filename>/var/lib/multipath/bindings</filename>ファイルを使用して永続的で固有な別名を<filename>/dev/mapper/mpathN</filename>形式のマルチパスデバイスに割り当てるか指定します。
       </para>
       <para>
        このオプションは、<literal>devices</literal>セクションおよび<literal>multipaths</literal>セクションで使用できます。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             値
            </para>
           </entry>
           <entry>
            <para>
             説明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>×</literal>
            </para>
           </entry>
           <entry>
            <para>
             (デフォルト) <filename>/dev/disk/by-id/</filename>に示されたWWIDを使用します。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>yes</literal>
            </para>
           </entry>
           <entry>
            <para>
             実際のIDの代わりに、マルチパスデバイスのエイリアスとして、ユーザフレンドリな名前を自動生成します。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vle-failback">
      <term><literal>failback (フェールバック)</literal></term>
      <listitem>
       <para>
        エラーになったパスの回復を監視するかどうか指定し、パスサービス回復後のグループのフェールバックのタイミングを示します。
       </para>
       <para>
        エラーになったパスは、回復すると、この設定に基づいてマルチパス対応パスのリストに戻されます。multipathは、優先度グループを評価し、プライマリパスの優先度がセカンダリパスのそれを超えると、アクティブな優先度グループを変更します。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             値
            </para>
           </entry>
           <entry>
            <para>
             説明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>manual</literal>
            </para>
           </entry>
           <entry>
            <para>
             デフォルト。エラーになったパスの回復は監視されません。管理者が<command>multipath</command>コマンドを実行して、有効なパスと優先度グループを更新します。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>followover</literal>
            </para>
           </entry>
           <entry>
            <para>
             パスグループの最初のパスがアクティブになるときにのみ自動フェールバックを実行します。これにより、別のノードがフェールオーバーを要求したときに、ノードが自動的にフェールバックされないようにします。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>immediate</literal>
            </para>
           </entry>
           <entry>
            <para>
             パスが回復したら、ただちにパスを有効にします。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal><replaceable>N</replaceable></literal>
            </para>
           </entry>
           <entry>
            <para>
             パスが回復したら、<replaceable>N</replaceable>秒後にパスを有効にします。0より大きい整数値を指定してください。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
       <para>
        クラスタ環境内のマルチパスに対するフェールバックの設定は、マルチパスのフェールオーバーのピンポンを避けるため、<literal>manual</literal>にすることを推奨します。
       </para>
<screen>failback "manual"</screen>
       <important>
        <title>検証</title>
        <para>
         フェールバックの設定については、ストレージシステムのベンダに確認するようにしてください。ストレージシステムが異なれば、必要な設定も異なります。
        </para>
       </important>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vle-no-path-retry">
      <term><literal>no_path_retry</literal></term>
      <listitem>
       <para>
        パスの障害時に使用する動作を指定します。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             値
            </para>
           </entry>
           <entry>
            <para>
             説明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal><replaceable>N</replaceable></literal>
            </para>
           </entry>
           <entry>
            <para>
             <command>multipath</command>コマンドで待ち行列が停止し、パスがエラーになるまでの再試行数を指定します。0より大きい整数値を指定してください。
            </para>
            <para>
             クラスタでは、「0」を指定して、待ち行列を回避し、リソースのフェールオーバーを許可することができます。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>fail</literal>
            </para>
           </entry>
           <entry>
            <para>
             即時失敗(待ち行列なし)を指定します。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>queue</literal>
            </para>
           </entry>
           <entry>
            <para>
             待ち行列を停止しません(パスが復帰するまで永久に待機します)。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
       <para>
        クラスタでの作業では、<filename>/etc/multipath.conf</filename>ファイルの再試行設定を、<literal>fail</literal>または<literal>0</literal>にすることを推奨します。これにより、ストレージへの接続が失われた場合に、リソースのフェールオーバーが起こります。そうしないと、メッセージの待ち行列とリソースのフェールオーバーが行えません。
       </para>
<screen>no_path_retry "fail"
no_path_retry "0"</screen>
       <important>
        <title>検証</title>
        <para>
         再試行設定については、ストレージシステムのベンダに確認するようにしてください。ストレージシステムが異なれば、必要な設定も異なります。
        </para>
       </important>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>path_checker</literal></term>
      <listitem>
       <para>
        パスの状態を判別します。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="30%"/>
         <colspec colnum="2" colname="2" colwidth="70%"/>
         <thead>
          <row>
           <entry>
            <para>
             値
            </para>
           </entry>
           <entry>
            <para>
             説明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>directio</literal>
            </para>
           </entry>
           <entry>
            <para>
             直接I/Oを持つ最初のセクタを読み込みます。DASDデバイスの場合、有用です。障害メッセージを<systemitem class="daemon">systemd</systemitem>ジャーナルに記録します(<xref linkend="cha-journalctl"/>を参照してください)。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>tur</literal>
            </para>
           </entry>
           <entry>
            <para>
             デバイスに対してSCSIテストユニットレディコマンドを発行します。これはLUNによってサポートされている場合の推奨設定です。このコマンドは、障害時に、<systemitem class="daemon">systemd</systemitem>ログジャーナルにメッセージを出力しません。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <replaceable>CUSTOM_VENDOR_VALUE</replaceable>
            </para>
           </entry>
           <entry>
            <para>
             一部のSANベンダは、カスタムオプションとしてpath_checkerを提供しています。
            </para>
            <itemizedlist mark="bullet" spacing="normal">
             <listitem>
              <formalpara>
               <title><literal>cciss_tur</literal>:</title>
               <para>
                HP Smart Storage Arrayへのパスの状態をチェックします。
               </para>
              </formalpara>
             </listitem>
             <listitem>
              <formalpara>
               <title><literal>emc_clariion</literal>:</title>
               <para>
                EMC ClariionのEVPDページ0xC0をクエリしてパスの状態を判別します。
               </para>
              </formalpara>
             </listitem>
             <listitem>
              <formalpara>
               <title><literal>hp_sw</literal>:</title>
               <para>
                Active/StandbyファームウェアをもつHPストレージアレイのパスの状態(アップ、ダウン、またはゴースト)をチェックします。
               </para>
              </formalpara>
             </listitem>
             <listitem>
              <formalpara>
               <title><literal>rdac</literal>:</title>
               <para>
                LSI/Engenio RDACストレージコントローラのパスｍｐ状態をチェックします。
               </para>
              </formalpara>
             </listitem>
            </itemizedlist>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>path_grouping_policy</literal></term>
      <listitem>
       <para>
        所定のコントローラがホストとなるマルチパスデバイスのパスグループ化ポリシーを指定します。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             値
            </para>
           </entry>
           <entry>
            <para>
             説明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>フェールオーバー</literal>
            </para>
           </entry>
           <entry>
            <para>
             (デフォルト)一度に1つのパスだけ使用されるように、優先度グループごとに1つのパスが割り当てられます。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>multibus</literal>
            </para>
           </entry>
           <entry>
            <para>
             すべての有効なパスが1つの優先度グループに含まれます。トラフィックが、グループ内のアクティブなパスすべてに渡って負荷分散されます。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>group_by_prio</literal>
            </para>
           </entry>
           <entry>
            <para>
             パス優先度値ごとに、1つの優先度グループが存在します。同じ優先度のパスは同じ優先度グループに属します。優先度は外部プログラムによって割り当てられます。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>group_by_serial</literal>
            </para>
           </entry>
           <entry>
            <para>
             パスがSCSIターゲットシリアル番号(コントローラノードのWWN)でグループ化されます。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>group_by_node_name</literal>
            </para>
           </entry>
           <entry>
            <para>
             ターゲットノード名ごとに1つの優先度グループが割り当てられます。ターゲットノード名は<filename>/sys/class/fc_transport/target*/node_name</filename>にフェッチされます。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>path_selector</literal></term>
      <listitem>
       <para>
        負荷分散に使用するパスセレクタアルゴリズムを指定します。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             値
            </para>
           </entry>
           <entry>
            <para>
             説明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>round-robin 0</literal>
            </para>
           </entry>
           <entry>
            <para>
             優先度グループ内のすべてのアクティブパスに渡るトラフィックの分散に使用される負荷分散アルゴリズム。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>queue-length 0</literal>
            </para>
           </entry>
           <entry>
            <para>
             least-pendingオプションと同様に、パス上で実行中のI/Oの数に基づく、動的負荷分散装置。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>service-time 0</literal>
            </para>
           </entry>
           <entry>
            <para>
             (デフォルト)遅延に従って、パス上のI/Oを調整するサービス時間に基づく負荷分散装置。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>pg_timeout</term>
      <listitem>
       <para>
        パスグループのタイムアウト処理を指定します。値を指定することはできません。内部のデフォルトが設定されています。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="vle-polling-interval">
      <term><literal>polling_interval</literal></term>
      <listitem>
       <para>
        1つのパスチェックサイクルの終了から次回のパスチェックサイクルの開始までの時間を、秒単位で指定します。
       </para>
       <para>
        0より大きい整数値を指定してください。デフォルト値は5です。polling_intervalの設定については、ストレージシステムのベンダに確認するようにしてください。ストレージシステムが異なれば、必要な設定も異なります。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>rr_min_io_rq</literal></term>
      <listitem>
       <para>
        現在のパスグループ内の次のパスに切り替える前に、リクエストベースのデバイス-マッパー-マルチパスを使用して、あるパスへルートするI/Oリクエストの回数を指定します。
       </para>
       <para>
        0より大きい整数値を指定してください。デフォルト値は「1」です。
       </para>
<screen>rr_min_io_rq "1"</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>rr_weight</literal></term>
      <listitem>
       <para>
        パスの重み付けの方法を指定します。
       </para>
       <informaltable>
        <tgroup cols="2">
         <colspec colnum="1" colname="1" colwidth="2642*"/>
         <colspec colnum="2" colname="2" colwidth="7360*"/>
         <thead>
          <row>
           <entry>
            <para>
             値
            </para>
           </entry>
           <entry>
            <para>
             説明
            </para>
           </entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <para>
             <literal>uniform</literal>
            </para>
           </entry>
           <entry>
            <para>
             (デフォルト)すべてのパスが同じラウンドロビン方式の重み付けを持ちます。
            </para>
           </entry>
          </row>
          <row>
           <entry>
            <para>
             <literal>priorities</literal>
            </para>
           </entry>
           <entry>
            <para>
             各パスの重み付けは、パスの優先度にrr_min_io_rq設定値を掛け合わせて決定します。
            </para>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>uid_attribute</literal></term>
      <listitem>
       <para>
        固有のパス識別子を提供するudev属性。デフォルト値は<literal>ID_SERIAL</literal>です。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
   <sect3 xml:id="sec-multipath-policies-failover-rr">
    <title>ラウンドロビン式負荷分散の設定</title>
    <para>
     すべてのパスがアクティブです。一定の秒数または一定数のI/Oトランザクションの後で、シーケンスの次のオープンパスに移動するように、I/Oを設定します。
    </para>
   </sect3>
   <sect3 xml:id="sec-multipath-policies-failover-prio-single">
    <title>単一パスフェールオーバーの設定</title>
    <para>
     優先度が最も高い（最も低い値の)単一パスがトランザクションに対してアクティブになります。他のパスは、フェールオーバーに使用できますが、フェールオーバーの発生までは使用されません。
    </para>
   </sect3>
   <sect3 xml:id="sec-multipath-policies-failover-prio-rr-grouping">
    <title>ラウンドロビン式負荷分散用I/Oパスのグループ化</title>
    <para>
     同じ優先度をもつ複数のパスがアクティブグループを形成します。そのグループのすべてのパスがエラーになると、デバイスが優先度の次に高いグループにフェールオーバーします。グループのすべてのパスが、ラウンドロビン方式の負荷分散で、トラフィックロードを共有します。
    </para>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-multipath-policies-failover-rtpg">
   <title>ターゲットパスグループの報告</title>
   <para>
    SCSIターゲットポートグループの報告(<command>sg_rtpg(8)</command>)コマンドを使用します。詳細については、<command>sg_rtpg(8)</command>のマニュアルページを参照してください。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-root">
  <title>ルートデバイスのマルチパスI/Oの設定</title>

  <para>
   <filename>SUSE Linux Enterprise Server</filename>では、DM-MPIO (デバイスマッパーマルチパスI/O)が使用可能であり、<filename>/boot</filename>と<phrase role="productname"><phrase os="sles">/root</phrase></phrase>に対してサポートされています。また、YaSTインストーラ内のYaSTパーティショナは、インストール中のマルチパスの有効化をサポートします。
  </para>

  <sect2 xml:id="sec-multipath-root-install">
   <title>インストール時にマルチパスI/Oを有効にする</title>
   <para>
    オペレーティングシステムをマルチパスデバイスにインストールするには、マルチパスソフトウェアがインストール時に実行されている必要があります。<systemitem class="daemon">multipathd</systemitem>デーモンは、システムのインストール時に自動的にアクティブになりません。このデーモンは、YaSTパーティショナの<guimenu>マルチパスの設定</guimenu>オプションを使用することによって起動できます。
   </para>
   <sect3 xml:id="sec-multipath-root-install-aa-lun">
    <title>アクティブ/アクティブマルチパスストレージLUNでインストール時にマルチパスI/Oを有効にする</title>
    <procedure>
     <step>
      <para>
       インストール時に<guimenu>推奨されたパーティション分割</guimenu>画面で<guimenu>エキスパートパーティショナ</guimenu>を選択します。
      </para>
     </step>
     <step>
      <para>
       <guimenu>ハードディスク</guimenu>メインアイコンを選択し、<guimenu>設定</guimenu>ボタンをクリックし、最後に、<guimenu>マルチパスの設定</guimenu>を選択します。
      </para>
     </step>
     <step>
      <para>
       multipathを起動します。
      </para>
      <para>
       YaSTがディスクの再スキャンを開始し、利用可能なマルチパスデバイスを表示します(<filename>/dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65</filename>など)。これが、以降の処理すべての対象デバイスになります。
      </para>
     </step>
     <step>
      <para>
       <guimenu>次へ</guimenu>をクリックして、インストールを続行します。
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 xml:id="sec-multipath-root-install-ap-lun">
    <title>アクティブ/パッシブマルチパスストレージLUNでインストール時にマルチパスI/Oを有効にする</title>
    <para>
     <systemitem class="daemon">multipathd</systemitem>デーモンは、システムのインストール時に自動的にアクティブになりません。このデーモンは、YaSTパーティショナの<guimenu>マルチパスの設定</guimenu>オプションを使用することによって起動できます。
    </para>
    <para>
     アクティブ/パッシブマルチパスストレージLUNに対するインストール時にマルチパスI/Oを有効にするには:
    </para>
    <procedure>
     <step>
      <para>
       インストール時に<guimenu>推奨されたパーティション分割</guimenu>画面で<guimenu>エキスパートパーティショナ</guimenu>を選択します。
      </para>
     </step>
     <step>
      <para>
       <guimenu>ハードディスク</guimenu>メインアイコンを選択し、<guimenu>設定</guimenu>ボタンをクリックし、最後に、<guimenu>マルチパスの設定</guimenu>を選択します。
      </para>
     </step>
     <step>
      <para>
       multipathを起動します。
      </para>
      <para>
       YaSTがディスクの再スキャンを開始し、利用可能なマルチパスデバイスを表示します(<filename>/dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65</filename>など)。これが、以降の処理すべての対象デバイスになります。デバイスのパスとUUIDを書き留めてください。後で必要になります。
      </para>
     </step>
     <step>
      <para>
       <guimenu>次へ</guimenu>をクリックして、インストールを続行します。
      </para>
     </step>
     <step>
      <para>
       すべての設定が完了し、インストールが終了すると、YaSTは、ブートローダ情報の書き込みを開始し、システム再起動のカウントダウンを表示します。<guimenu>中止</guimenu>をクリックしてカウンタを中止し、<keycombo><keycap function="control"/><keycap function="alt"/><keycap>&lt;F5&gt;</keycap></keycombo>を押してコンソールにアクセスします。
      </para>
     </step>
     <step>
      <para>
       コンソールを使用して、<filename>/boot/grub/device.map</filename>ファイルの<filename>hd0</filename>エントリにパッシブパスが入力されているかどうか判別します。
      </para>
      <para>
       これは、インストールではアクティブパスとパッシブパスが区別されないので必要です。
      </para>
      <substeps performance="required">
       <step>
        <para role="intro">
         次のように入力して、ルートデバイスを<filename>/mnt</filename>にマウントします。
        </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> mount /dev/disk/by-id/<replaceable>UUID</replaceable>;_part2 /mnt</screen>
        <para>
         例えば、次のように入力して、すべてのフォントについてアンチエイリアスを無効にします。
        </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> mount /dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65_part2 /mnt</screen>
       </step>
       <step>
        <para>
         次のように入力して、ブートデバイスを<filename>/mnt/boot</filename>にマウントします。
        </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> mount /dev/disk/by-id/<replaceable>UUID</replaceable>_part1 /mnt/boot</screen>
        <para>
         例えば、次のように入力して、すべてのフォントについてアンチエイリアスを無効にします。
        </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> mount /dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65_part2 /mnt/boot</screen>
       </step>
       <step>
        <para>
         <filename>/mnt/boot/grub/device.map</filename>ファイルで<filename>hd0</filename>エントリがパッシブパスをポイントしているかどうか判別し、次のいずれかを実行します。
        </para>
        <itemizedlist mark="bullet" spacing="normal">
         <listitem>
          <formalpara>
           <title>アクティブパス:</title>
           <para>
            操作は必要ありません。残りの手順をすべてスキップし、<keycombo><keycap function="control"/><keycap function="alt"/><keycap>&lt;F7&gt;</keycap></keycombo>を押してYaSTグラフィック環境に戻り、インストールを続行します。
           </para>
          </formalpara>
         </listitem>
         <listitem>
          <formalpara>
           <title>パッシブパス:</title>
           <para>
            設定を変更し、ブートローダを再インストールする必要があります。
           </para>
          </formalpara>
         </listitem>
        </itemizedlist>
       </step>
      </substeps>
     </step>
     <step>
      <para role="intro">
       <filename>hd0</filename>エントリがパッシブパスをポイントする場合は、設定を変更し、ブートローダを再インストールします。
      </para>
      <substeps performance="required">
       <step>
        <para role="intro">
         コンソールプロンプトで、次のコマンドを入力します。
        </para>
<screen>
          mount -o bind /dev /mnt/dev
          mount -o bind /sys /mnt/sys
          mount -o bind /proc /mnt/proc
          chroot /mnt</screen>
       </step>
       <step>
        <para role="intro">
         コンソールで、<command>multipath -ll</command>を実行し、その出力をチェックして、アクティブパスを見つけます。
        </para>
        <para>
         パッシブパスには<literal>ghost</literal>フラグが付いています。
        </para>
       </step>
       <step>
        <para>
         <filename>/boot/grub/device.map</filename>ファイルで<literal>hd0</literal>エントリをアクティブパスに変更し、変更内容を保存し、ファイルを閉じます。
        </para>
       </step>
       <step>
        <para>
         次のコマンドを入力して、ブートローダを再インストールします。
        </para>
<screen>grub-install /dev/disk/by-id/<replaceable>UUID</replaceable>_part1 /mnt/boot</screen>
        <para>
         例えば、次のように入力して、すべてのフォントについてアンチエイリアスを無効にします。
        </para>
<screen>grub-install /dev/disk/by-id/dm-uuid-mpath-3600a0b80000f4593000012ae4ab0ae65_part2 /mnt/boot</screen>
       </step>
       <step>
        <para>
         次のコマンドを入力します。
        </para>
<screen>exit
umount /mnt/*
umount /mnt</screen>
       </step>
      </substeps>
     </step>
     <step>
      <para>
       <keycombo><keycap function="control"/><keycap function="alt"/><keycap>&lt;F7&gt;</keycap></keycombo>を押して、YaSTグラフィック環境に戻ります。
      </para>
     </step>
     <step>
      <para>
       <guimenu>OK</guimenu>をクリックして、インストールを再起動します。
      </para>
     </step>
    </procedure>
   </sect3>
  </sect2>

  <sect2 xml:id="sec-multipath-root-enable-existing">
   <title>既存ルートデバイス用マルチパスI/Oの有効化</title>
   <procedure>
    <step>
     <para>
      Linuxをインストールし、1つだけパスをアクティブにします。このパスは、パーティショナで<filename>by-id</filename>シンボリックリンクがリストされるパスがお勧めです。
     </para>
    </step>
    <step>
     <para>
      インストール時に使用した<filename>/disk/disk/by-id</filename>パスを使用してデバイスをマウントします。
     </para>
    </step>
    <step>
     <para>
      <filename>/etc/dracut.conf.d/10-mp.conf</filename>を開くか作成して、次の行を追加します(先立つ空白に注意してください)。
     </para>
<screen>force_drivers+=" dm-multipath"</screen>
    </step>
    <step>
     <para>
      <remark condition="clarity">
       2014-09-05 - fs: Check if the following is still true
      </remark>IBM Zの場合、<command>dracut</command>の実行前に、<filename>/etc/zipl.conf</filename>ファイルを編集して<filename>zipl.conf</filename>内のby-path情報を、<filename>/etc/fstab</filename>で使用されたby-id情報に変更します。
     </para>
    </step>
    <step>
     <para>
      <command>dracut</command> <option>-f</option>を実行して、<filename>initrd</filename>イメージを更新します。
     </para>
    </step>
    <step>
     <para>
      IBM Zの場合は、<command>dracut</command>の実行後、<command>zipl</command>を実行します。
     </para>
    </step>
    <step>
     <para>
      サーバを再起動します。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-root-disable">
   <title>ルートデバイスのマルチパスI/Oの無効化</title>
   <para>
    <literal>multipath=off</literal>をカーネルコマンドラインに追加します。この変更はYaSTのブートローダモジュールで行うことができます。<menuchoice> <guimenu>ブートローダのインストール</guimenu> <guimenu>Kernel Parameters (カーネルパラメータ)</guimenu>
    </menuchoice>の順に開き、両方のコマンドラインにパラメータを追加します。
   </para>
   <para>
    これは、ルートデバイスだけに影響します。他のすべてのデバイスは影響されません。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-raid">
  <title>既存ソフトウェアRAID用マルチパスI/Oの設定</title>

  <para>
   理想的には、デバイスのマルチパス処理を設定してから、それらのデバイスをソフトウェアRAIDデバイスのコンポーネントとして使用してください。ソフトウェアRAIDデバイスの作成後にマルチパス処理を追加した場合は、再起動時に<command>multipath</command>サービスの後でDM-MPIOサービスが開始することがあります。その場合は、マルチパス処理がRAIDに使用できないように見えます。本項の手順を使用すると、すでに存在しているソフトウェアRAIDに対してマルチパス処理を実行できます。
  </para>

  <para>
   たとえば、次のような場合は、ソフトウェアRAID内のデバイスにマルチパス処理を設定する必要があることがあります。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     新規インストールまたはアップグレード時にパーティショニング設定の一部として、新しいソフトウェアRAIDを作成する場合
    </para>
   </listitem>
   <listitem>
    <para>
     マルチパス処理用に設定しなかったデバイスをメンバーデバイスまたはスペアとしてソフトウェアRAIDで使用する場合
    </para>
   </listitem>
   <listitem>
    <para>
     新しいHBAアダプタをサーバに追加するか、またはSAN内でストレージサブシステムを拡張することで、システムを大きくする場合
    </para>
   </listitem>
  </itemizedlist>

  <note>
   <title>前提</title>
   <para>
    以降の説明では、ソフトウェアRAIDデバイスを<filename>/dev/mapper/mpath0</filename>(カーネルによって認識されるデバイス名)と想定しています。<filename>/etc/multipath.conf</filename>ファイルで、ユーザフレンドリ名を有効にしている(<xref linkend="sec-multipath-names" xrefstyle="HeadingOnPage"/>に記載)ことを想定しています。
   </para>
   <para>
    ソフトウェアRAIDのデバイス名の指定は、必ず変更してください。
   </para>
  </note>

  <procedure>
   <step>
    <para role="intro">
     端末コンソールを開きます。
    </para>
    <para>
     特に指示のない限り、この端末を使用して、以降のステップでコマンドを入力します。
    </para>
   </step>
   <step>
    <para>
     ソフトウェアRAIDデバイスが現在マウントされているか、または実行中の場合、デバイスごとに次のコマンドを入力して、デバイスをアンマウントし、停止します。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> umount /dev/mapper/mpath0
<prompt>tux &gt; </prompt><command>sudo</command> mdadm --misc --stop /dev/mapper/mpath0</screen>
   </step>
   <step>
    <para>
     次のように入力して、<command>md</command>サービスを停止します。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl stop mdmonitor</screen>
   </step>
   <step>
    <para>
     次のコマンドを入力することにより、<systemitem class="daemon">multipathd</systemitem>デーモンを起動します。
    </para>
<screen><prompt>tux &gt; </prompt>systemctl start multipathd</screen>
   </step>
   <step>
    <para>
     マルチパス処理サービスの開始後、ソフトウェアRAIDのコンポーネントデバイスが<filename>/dev/disk/by-id</filename>ディレクトリにリストされているかどうか確認します。次のいずれかの操作を行います。
    </para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <formalpara>
       <title>デバイスがリストされている:</title>
       <para>
        デバイス名に、デバイスマッパーマルチパスのデバイス名(<filename>/dev/dm-1</filename>など)へのシンボリックリンクがあるはずです。
       </para>
      </formalpara>
     </listitem>
     <listitem>
      <formalpara>
       <title>デバイスがリストされていない:</title>
       <para>
        次のように入力して、デバイスをフラッシュし、再検出することで、マルチパスサービスにデバイスを認識させます。
       </para>
      </formalpara>
<screen><prompt>tux &gt; </prompt><command>sudo</command> multipath -F
<prompt>tux &gt; </prompt><command>sudo</command> multipath -v0</screen>
      <para>
       これで、デバイスが<filename>/dev/disk/by-id</filename>内にリストされ、デバイスマッパーマルチパスのデバイス名へのシンボリックリンクを持ちます。例:
      </para>
<screen>lrwxrwxrwx 1 root root 10 2011-01-06 11:42 dm-uuid-mpath-36006016088d014007e0d0d2213ecdf11 -&gt; ../../dm-1</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     次のように入力して、<filename>mdmonitor</filename>サービスとRAIDデバイスを再起動します。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl start mdmonitor</screen>
   </step>
   <step>
    <para>
     次のように入力して、ソフトウェアRAIDの状態をチェックします。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> mdadm --detail /dev/mapper/mpath0</screen>
    <para>
     RAIDのコンポーネントデバイスは、そのデバイスマッパーマルチパスのデバイス名(<filename>/dev/disk/by-id</filename>ディレクトリにデバイスのシンボリックリンクとしてリストされている）と一致する必要があります。
    </para>
   </step>
   <step>
    <para>
     ルート(<filename>/</filename>)デバイス、またはそのいずれかの要素(<filename>/var</filename>、<filename>/etc</filename>、<filename>/log</filename>など)がSAN上にあり、ブートするためにマルチパスが必要な場合、<systemitem>initrd</systemitem>を再構築します。
    </para>
<screen><prompt>tux &gt; </prompt>dracut -f --add-multipath</screen>
   </step>
   <step>
    <para>
     サーバを再起動して、変更内容を適用します。
    </para>
   </step>
   <step>
    <para>
     RAIDステータスをチェックして、ソフトウェアRAIDアレイが、マルチパスデバイスの上に正しく示されることを確認します。以下を入力してください。
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> mdadm --detail /dev/mapper/mpath0</screen>
    <para>
     例:
    </para>
    <simplelist>
     <member><literal>メジャーマイナーRaidDevice状態の数</literal></member>
     <member><literal>0 253 0 0アクティブ同期/dev/dm-0</literal></member>
     <member><literal>1 253 1 1アクティブ同期/dev/dm-1</literal></member>
     <member><literal>2 253 2 2アクティブ同期/dev/dm-2</literal></member>
    </simplelist>
   </step>
  </procedure>

  <note>
   <title>マルチパスデバイスでのmdadmの使用</title>
   <para>
    <command>mdadm</command>ツールでは、デバイスのノードパスではなく、IDでデバイスにアクセスする必要があります。詳細については、<xref linkend="sec-multipath-mpiotools-mdadm"/>を参照してください。
   </para>
  </note>
 </sect1>
 <sect1 xml:id="sec-multipath-lvm">
  <title>マルチパスデバイスでのLVM2の使用</title>

  <para>
   マルチパス使用時に、リソースへのすべてのパスがデバイスツリーのデバイスとして存在します。デフォルトでは、LVMは、デバイスツリーの任意のデバイス上にマルチパスデバイスがあるかどうかを確認します。LVMがマルチパスデバイスを検出すると、そのデバイスはマルチパスコンポーネントであるとみなされ、(基盤となっている)デバイスは無視されます。ほとんどの場合はこの動作で問題ありませんが、<filename>/etc/lvm/lvm.conf</filename>で設定を変更できます。multipath_component_detectionを0に設定すると、LVMはマルチパスコンポーネントデバイスをスキャンします。lvm.confのデフォルトのエントリは次のとおりです。
  </para>

<screen>    # By default, LVM2 will ignore devices used as component paths
    # of device-mapper multipath devices.
    # 1 enables; 0 disables.
    multipath_component_detection = 1</screen>
 </sect1>
 <sect1 xml:id="sec-multipath-best-practice">
  <title>ベストプラクティス</title>

  <para/>

  <sect2 xml:id="sec-multipath-best-practice-scandev">
   <title>新規デバイスのスキャン(再起動なし)</title>
   <para>
    ご使用のシステムがマルチパス処理用に設定されており、後からSANにストレージを追加する必要がある場合は、<command>rescan-scsi-bus.sh</command>スクリプトを使用して新しいデバイスをスキャンすることができます。デフォルトでは、このスクリプトは典型的なLUN範囲ですべてのHBAをスキャンします。このコマンドの一般的な構文は、次のようになります。
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> rescan-scsi-bus.sh [options] [host [host ...]]</screen>
   <para>
    ほとんどのストレージサブシステムでは、このスクリプトはオプションを指定しなくても正常に実行されます。ただし、特殊な場合は、次のオプションを1つ以上使用する必要があります。詳細については、<command>rescan-scsi-bus.sh --help</command>を実行してください。
   </para>
   <warning>
    <title>EMC PowerPath環境</title>
    <para>
     EMC PowerPath環境では、SCSIバスをスキャンする場合に、オペレーティングシステムに付属する<filename>rescan-scsi-bus.sh</filename>ユーティリティまたはHBAベンダスクリプトを使用しないでください。ファイルシステムが破損する可能性を避けるため、EMCでは、Linux用EMC PowerPathのベンダマニュアルに記載されている手順に従うよう求めています。
    </para>
   </warning>
   <para>
    次のプロシージャを使用して、システムを再起動せずに、デバイスをスキャンして、マルチパス処理に使用できるようにします。
   </para>
   <procedure>
    <step>
     <para>
      ストレージサブシステムで、ベンダのツールを使用してデバイスを割り当て、そのアクセス制御設定を更新して、Linuxシステムが新しいストレージをアクセスできるようにします。詳細については、ベンダのマニュアルを参照してください。
     </para>
    </step>
    <step>
     <para>
      すべてのターゲットをスキャンしてホストの有無を調べ、LinuxカーネルのSCSIサブシステムのミドルレイヤに新しいデバイスを認識させます。端末コンソールのプロンプトで、次のように入力します。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> rescan-scsi-bus.sh</screen>
     <para>
      セットアップによっては、オプションのパラメータを指定して<command>rescan-scsi-bus.sh</command>を実行しなければならない場合があります。詳細については、<command>rescan-scsi-bus.sh --help</command>を参照してください。
     </para>
    </step>
    <step>
     <para>
      <systemitem class="daemon">systemd</systemitem>ジャーナルでスキャンの進行状況を確認します(詳細については、<xref linkend="cha-journalctl"/>を参照してください)。端末コンソールのプロンプトで、次のように入力します。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl -r</screen>
     <para>
      このコマンドは、ログの最後の行を表示します。例:
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl -r
Feb 14 01:03 kernel: SCSI device sde: 81920000
Feb 14 01:03 kernel: SCSI device sdf: 81920000
Feb 14 01:03 multipathd: sde: path checker registered
Feb 14 01:03 multipathd: sdf: path checker registered
Feb 14 01:03 multipathd: mpath4: event checker started
Feb 14 01:03 multipathd: mpath5: event checker started
Feb 14 01:03:multipathd: mpath4: remaining active paths: 1
Feb 14 01:03 multipathd: mpath5: remaining active paths: 1
[...]</screen>
    </step>
    <step>
     <para>
      前の各手順を繰り返し、新しいデバイスに接続しているLinuxシステム上の他のHBAアダプタを介して、パスを追加します。
     </para>
    </step>
    <step>
     <para>
      <command>multipath</command>コマンドを実行して、DM-MPIO設定用のデバイスを認識します。端末コンソールのプロンプトで、次のように入力します。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> multipath</screen>
     <para>
      これで、新しいデバイスをマルチパス処理用に設定できます。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-scanpart">
   <title>パーティショニングされた新規デバイスのスキャン(再起動なし)</title>
   <para>
    本項の例を使用して、新たに追加したマルチパスLUNを再起動なしで検出します。
   </para>
   <warning>
    <title>EMC PowerPath環境</title>
    <para>
     EMC PowerPath環境では、SCSIバスをスキャンする場合に、オペレーティングシステムに付属する<filename>rescan-scsi-bus.sh</filename>ユーティリティまたはHBAベンダスクリプトを使用しないでください。ファイルシステムが破損する可能性を避けるため、EMCでは、Linux用EMC PowerPathのベンダマニュアルに記載されている手順に従うよう求めています。
    </para>
   </warning>
   <procedure>
    <step>
     <para>
      端末コンソールを開きます。
     </para>
    </step>
    <step>
     <para>
      すべてのターゲットをスキャンしてホストの有無を調べ、LinuxカーネルのSCSIサブシステムのミドルレイヤに新しいデバイスを認識させます。端末コンソールのプロンプトで、次のように入力します。
     </para>
<screen><prompt>tux &gt; </prompt>rescan-scsi-bus.sh</screen>
     <para>
      セットアップによっては、オプションのパラメータを指定して<command>rescan-scsi-bus.sh</command>を実行しなければならない場合があります。詳細については、<command>rescan-scsi-bus.sh --help</command>を参照してください。
     </para>
    </step>
    <step>
     <para>
      次のように入力して、デバイスが認識されていること(リンクに新しいタイムスタンプが付いているかどうかなど)を確認します。
     </para>
<screen><prompt>tux &gt; </prompt>ls -lrt /dev/dm-*</screen>
     <para>
      次のように入力して、<filename>/dev/disk/by-id</filename>内のデバイスを確認することもできます。
     </para>
<screen><prompt>tux &gt; </prompt>ls -l /dev/disk/by-id/</screen>
    </step>
    <step>
     <para>
      次のように入力して、新しいデバイスがログに表示されることを確認します。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> journalctl -r</screen>
    </step>
    <step>
     <para>
      テキストエディタで、デバイスの新しいエイリアス定義を<filename>/etc/multipath.conf</filename>ファイルに追加します(<filename>data_vol3</filename>など)。
     </para>
     <para>
      たとえば、UUIDが<filename>36006016088d014006e98a7a94a85db11</filename>であれば、次の変更を行います。
     </para>
<screen>defaults {
     user_friendly_names   yes
  }
multipaths {
     multipath {
          wwid    36006016088d014006e98a7a94a85db11
          alias  data_vol3
          }
  }</screen>
    </step>
    <step>
     <para>
      次の入力で、デバイスのパーティションテーブルを作成します。
     </para>
<screen><prompt>tux &gt; </prompt>fdisk /dev/disk/by-id/dm-uuid-mpath-&lt;UUID&gt;</screen>
     <para>
      UUIDをデバイスのWWID(<filename>36006016088d014006e98a7a94a85db11</filename>など)で置き換えます。
     </para>
    </step>
    <step>
     <para>
      次のように入力して、udevをトリガします。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> echo 'add' &gt; /sys/block/<replaceable>DM_DEVICE</replaceable>/uevent</screen>
     <para>
      たとえば、<filename>dm-8</filename>上のパーティションに対して、デバイスマッパーデバイスを生成するには、次のように入力します。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> echo 'add' &gt; /sys/block/dm-8/uevent</screen>
    </step>
    <step>
     <para>
      デバイス<filename>/dev/disk/by-id/dm-uuid-mpath-<replaceable>UUID_partN</replaceable></filename>上にファイルシステムを作成します。選択するファイルシステムに応じて、このために<command>mkfs.btrfs</command>
      <command> mkfs.ext3</command>、<command>mkfs.ext4</command>、または<command>mkfs.xfs</command>のいずれかのコマンドを使用できます。詳細については、それぞれのマニュアルページを参照してください。<filename>UUID_partN</filename>を、実際のUUIDおよびパーティション番号(36006016088d014006e98a7a94a85db11_part1など)で置き換えます。
     </para>
    </step>
    <step>
     <para>
      次のコマンドを入力して、新しいパーティションのラベルを作成します。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> tune2fs -L <replaceable>LABELNAME</replaceable> /dev/disk/by-id/dm-uuid-<replaceable>UUID_partN</replaceable>
</screen>
     <para>
      <filename>UUID_partN</filename>を、実際のUUIDおよびパーティション番号(36006016088d014006e98a7a94a85db11_part1など)で置き換えます。<replaceable>LABELNAME</replaceable>は好みのラベルに代えてください。
     </para>
    </step>
    <step>
     <para>
      次の入力で、DM-MPIOを再設定して、エイリアスを読み込ませます。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> multipathd -k'reconfigure'</screen>
    </step>
    <step>
     <para>
      次の入力で、デバイスが<systemitem class="daemon">multipathd</systemitem>によって認識されていることを確認します。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> multipath -ll</screen>
    </step>
    <step>
     <para>
      テキストエディタで、<filename>/etc/fstab</filename>ファイルにマウントエントリを追加します。
     </para>
     <para>
      この時点では、前の手順で作成したエイリアスは、まだ<filename>/dev/disk/by-label</filename>ディレクトリにあります。マウントエントリを<filename>/dev/dm-9</filename>パスに追加した後、次回の再起動の前に、マウントエントリを次のように変更します。
     </para>
<screen>LABEL=<replaceable>LABELNAME</replaceable></screen>
    </step>
    <step>
     <para>
      マウントポイントとして使用するディレクトリを作成し、デバイスをマウントします。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-status">
   <title>マルチパスI/Oステータスの表示</title>
   <para>
    マルチパスI/Oのステータスをクエリすると、マルチパスマップの現在のステータスが出力されます。
   </para>
   <para>
    <command>multipath -l</command>オプションを使用すると、パスチェッカが最後に実行された時点での現行パスステータスが表示されます。ただし、パスチェッカは実行されません。
   </para>
   <para>
    <command>multipath -ll</command>オプションを使用すると、パスチェッカが実行され、パス情報が更新され、最後に、現在のステータス情報が表示されます。このコマンドは、常にパスステータスの最新情報を表示します。
   </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> multipath -ll
3600601607cf30e00184589a37a31d911
[size=127 GB][features="0"][hwhandler="1 emc"]

\_ round-robin 0 [active][first]
  \_ 1:0:1:2 sdav 66:240  [ready ][active]
  \_ 0:0:1:2 sdr  65:16   [ready ][active]

\_ round-robin 0 [enabled]
  \_ 1:0:0:2 sdag 66:0    [ready ][active]
  \_ 0:0:0:2 sdc  8:32    [ready ][active]</screen>
   <para>
    デバイスごとに、デバイスのID、サイズ、機能、およびハードウェアハンドラが表示されます。
   </para>
   <para>
    デバイスへのパスは、自動的に、デバイス検出時に優先度グループとしてグループ化されます。一度に1つの優先度グループだけがアクティブになります。アクティブ/アクティブ構成の場合、すべてのパスが同じグループに属します。アクティブ/パッシブ構成の場合、パッシブパスは別個の優先度グループに属します。
   </para>
   <para>
    グループごとに、次の情報が表示されます。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      ラウンドロビン方式など、グループ内でのI/O負荷の分散に使用されるスケジューリングポリシー
     </para>
    </listitem>
    <listitem>
     <para>
      グループがアクティブか、無効か、または有効か
     </para>
    </listitem>
    <listitem>
     <para>
      最初の(優先度の最も高い)グループかどうか
     </para>
    </listitem>
    <listitem>
     <para>
      グループ内に含まれるパス
     </para>
    </listitem>
   </itemizedlist>
   <para>
    パスごとに、次の情報が表示されます。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      <replaceable>HOST:BUS:TARGET:LUN</replaceable>としての物理アドレス(1:0:1:2など)
     </para>
    </listitem>
    <listitem>
     <para>
      デバイスノード 名(<filename>sda</filename>など)
     </para>
    </listitem>
    <listitem>
     <para>
      メジャー/マイナー番号
     </para>
    </listitem>
    <listitem>
     <para>
      デバイスのステータス
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-io-error">
   <title>エラーになったI/Oの管理</title>
   <para>
    queue_if_no_pathを有効にすることで、すべてのパスで同時に障害が発生した場合は、I/Oをキューに登録するように、マルチパス処理を設定する必要があるかもしれません。設定しておかないと、すべてのパスに障害が発生するとI/Oもすぐに失敗してしまいます。ドライバ、HBA、またはファブリックにスプリアスエラーが発生したというシナリオでは、それらのエラーですべてのパスが失われるI/Oをすべて待ち行列に入れ、エラーを上方にプロパゲートしないように、DM-MPIOを設定してください。
   </para>
   <para>
    マルチパスデバイスをクラスタで使用する場合は、queue_if_no_pathを無効にすることができます。これにより、I/Oがキューに入る代わりに、パスがエラーになり、そのI/Oエラーがエスカレートしてクラスタリソースのフェールオーバーを引き起こします。
   </para>
   <para>
    ただし、queue_if_no_pathを有効にすると、パスが回復しない限り、I/Oがいつまでもキューに留まることになるので、<command>multipathd</command>が実行中であり、シナリオに有効なことを必ず確認してください。確認しておかないと、再起動するまで、またはキューの代わりに手動でフェールオーバーに戻すまで、影響を受けたマルチパスデバイスでI/Oが無限に停止する可能性があります。
   </para>
   <para>
    シナリオをテストするには:
   </para>
   <procedure>
    <step>
     <para>
      端末コンソールを開きます。
     </para>
    </step>
    <step>
     <para>
      次のように入力して、デバイスI/Oに関して、フェールオーバーの代わりに待ち行列処理をアクティブにします。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> dmsetup message <replaceable>DEVICE_ID</replaceable> 0 queue_if_no_path</screen>
     <para>
      <replaceable>DEVICE_ID</replaceable>を実際のデバイスのIDに置き換えます。値0はセクタを表し、セクタ情報が必要でないときに使用されます。
     </para>
     <para>
      たとえば、次のように入力します。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> dmsetup message 3600601607cf30e00184589a37a31d911 0 queue_if_no_path</screen>
    </step>
    <step>
     <para>
      次のように入力して、デバイスI/Oのフェールオーバーに戻ります。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> dmsetup message <replaceable>DEVICE_ID</replaceable> 0 fail_if_no_path</screen>
     <para>
      このコマンドにより、ただちに、待ち行列に入ったすべてのI/Oがエラーになります。
     </para>
     <para>
      <replaceable>DEVICE_ID</replaceable>を実際のデバイスのIDに置き換えます。例えば、次のように入力して、すべてのフォントについてアンチエイリアスを無効にします。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> dmsetup message 3600601607cf30e00184589a37a31d911 0 fail_if_no_path</screen>
    </step>
   </procedure>
   <para>
    待ち行列内のI/Oをすべてのパスがエラーになるシナリオ用に設定するには:
   </para>
   <procedure>
    <step>
     <para>
      端末コンソールを開きます。
     </para>
    </step>
    <step>
     <para>
      <filename>/etc/multipath.conf</filename>ファイルをテキストエディタで開きます。
     </para>
    </step>
    <step>
     <para>
      defaultsセクションとその閉じ括弧を非コメント化した後、次のように<literal>default_features</literal>設定を追加します。
     </para>
<screen>defaults {
  default_features "1 queue_if_no_path"
}</screen>
    </step>
    <step>
     <para>
      <filename>/etc/multipath.conf</filename>ファイルの変更後、<command>dracut</command> <option> -f</option>を実行してシステム上に<filename>initrd</filename>を再作成してから、再起動して変更内容を有効にします。
     </para>
    </step>
    <step>
     <para>
      デバイスI/Oのフェールオーバーに戻る準備ができたら、次のように入力します。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> dmsetup message <replaceable>MAPNAME</replaceable> 0 fail_if_no_path</screen>
     <para>
      <replaceable>MAPNAME</replaceable>を該当デバイスのマップされたエイリアス名またはデバイスIDに置き換えます。値0はセクタを表し、セクタ情報が必要でないときに使用されます。
     </para>
     <para>
      このコマンドにより、待ち行列で待機中のすべてのI/Oがエラーとなり、エラーが呼び出し側アプリケーションにプロパゲートします。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-io-stalled">
   <title>停止したI/Oの解決</title>
   <para>
    すべてパスが同時にエラーとなり、I/Oが待ち行列に入って停止している場合は、次のプロシージャを実行します。
   </para>
   <procedure>
    <step>
     <para>
      端末コンソールのプロンプトで、次のコマンドを入力します。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> dmsetup message <replaceable>MAPNAME</replaceable> 0 fail_if_no_path</screen>
     <para>
      <literal><replaceable>MAPNAME</replaceable></literal>をデバイスの正しいデバイスIDまたはマップされたエイリアス名で置き換えます。値0はセクタを表し、セクタ情報が必要でないときに使用されます。
     </para>
     <para>
      このコマンドにより、待ち行列で待機中のすべてのI/Oがエラーとなり、エラーが呼び出し側アプリケーションにプロパゲートします。
     </para>
    </step>
    <step>
     <para>
      次のコマンドを入力して、待ち行列を再びアクティブにします。
     </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> dmsetup message <replaceable>MAPNAME</replaceable> 0 queue_if_no_path</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-zseries">
   <title>IBM Zデバイスのデフォルト設定</title>
   <para>
    IBM Zデバイスのマルチパス処理に関するテストを実施した結果、<literal>dev_loss_tmo</literal>パラメータをinfinity (2147483647)に、<literal>fast_io_fail_tmo</literal>パラメータを 5秒に設定する必要があることわかりました。IBM Zデバイスを使用している場合は、<filename>/etc/multipath.conf</filename>ファイルを変更して、値を次のように指定します。
   </para>
<screen>defaults {
       dev_loss_tmo 2147483647
       fast_io_fail_tmo 5
}</screen>
   <para>
    <literal>dev_loss_tmo</literal>パラメータは、マルチパスリンクに不良のマーキングがされるまでの秒数を設定します。パスに障害が発生したら、そのパスの現在のI/Oが失敗します。デフォルト値は使用するデバイスドライバによって異なります。ドライバの内部タイムアウトを使用するには、値をゼロ(0)に設定します。「infinity」(2147483647)に設定することもできます。これにより、最大値が2147483647秒(68年)に設定されます。
   </para>
   <para>
    <literal>fast_io_fail_tmo</literal>パラメータは、リンク障害を検出した場合に、I/Oが失敗するまでの待機時間を設定します。ドライバに到達したI/Oは失敗します。ブロックしたキューにI/Oがある場合は、I/Oは<literal>dev_loss_tmo</literal>で指定された時間が経過するまでは失敗せず、キューのブロックが解除されます。
   </para>
   <para>
    <filename>/etc/multipath.conf</filename>ファイルを変更した場合、その変更内容は、マルチパスマップを更新するまで、または<systemitem class="daemon">multipathd</systemitem>デーモンを再起動(<command>systemctl restart multipathd</command>)するまで適用されません。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-netapp">
   <title>NetAppデバイスでのマルチパスの使用</title>
   <para>
    NetAppデバイスでマルチパスを使用する場合は、<filename>/etc/multipath.conf</filename>ファイルで次の設定を行うことを推奨します。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      NetAppデバイスに対してグローバルに、次のパラメータにデフォルト値を設定する。
     </para>
<screen>max_fds max
queue_without_daemon no</screen>
    </listitem>
    <listitem>
     <para>
      ハードウェアテーブル内で、NetAppデバイスに対する次のパラメータにデフォルト値を設定する。
     </para>
<screen>dev_loss_tmo infinity
fast_io_fail_tmo 5
features "3 queue_if_no_path pg_init_retries 50"</screen>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-noflush">
   <title>マルチパスデバイスでの--noflushの使用</title>
   <para>
    マルチパスデバイス上で実行する場合は、オプション<option>--noflush</option>を必ず使用する必要があります。
   </para>
   <para>
    たとえば、テーブルのリロードを行うスクリプトでは、マルチパストポロジ情報が必要なので、再開時に<literal>--noflush</literal>オプションを使用して、残っているI/Oがフラッシュされないようにします。
   </para>
<screen>load
resume --noflush</screen>
  </sect2>

  <sect2 xml:id="sec-multipath-best-practice-san-timeout">
   <title>ルートデバイスがマルチパスの場合のSANタイムアウト設定</title>

   <para>
    マルチパスデバイスにルート(<filename>/</filename>)があるシステムは、すべてのパスに障害が発生し、それらのパスがシステムから削除されると、停止することがあります。これは、ストレージサブシステム(ファイバチャネルストレージアレイなど)から<literal>dev_loss_tmo</literal>タイムアウトを受信するからです。
   </para>
   <para>
    システムデバイスがマルチパスを使用して設定され、マルチパスの<literal>no_path_retry</literal>設定がアクティブな場合は、ストレージサブシステムの<literal>dev_loss_tmo</literal>設定を適宜変更して、すべてのパスがダウンするシナリオでデバイスが削除されないようにする必要があります。<literal>dev_loss_tmo</literal>値をマルチパスの<literal>no_path_retry</literal>設定以上にすることを強くお勧めします。
   </para>
   <para>
    ストレージサブシステムの<literal>dev_los_tmo</literal>の推奨設定は、次のとおりです。
   </para>
<screen>&lt;dev_loss_tmo&gt; = &lt;no_path_retry&gt; * &lt;polling_interval&gt;</screen>
   <para>
    マルチパス値については、次の定義が適用されます。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      <literal>no_path_retry</literal>は、パスが失われたとみなされて入出力のキューイングが停止されるまでのマルチパス入出力の再試行数です。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>polling_interval</literal>は、パッチチェックの間隔(秒単位)です。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    これらの各マルチパス値は、<filename>/etc/multipath.conf</filename>環境設定ファイルから設定する必要があります。詳細については、「<xref linkend="sec-multipath-conf-file" xrefstyle="SectTitleOnPage"/>」を参照してください。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-multipath-trouble">
  <title>MPIOのトラブルシューティング</title>

  <para>
   本項では、MPIOに関するいくつかの既知の問題と、考えられる解決手段について説明します。
  </para>

  <sect2 xml:id="sec-multipath-trouble-grub2">
   <title>マルチパスデバイスへのGRUB2のインストール</title>
   <para>
    Btrfsを使用したレガシBIOSシステムでは、許可がないため<command>grub2-install</command>が失敗する可能性があります。<emphasis/>これを修正するには、<filename>/boot/grub2/<replaceable>SUBDIR</replaceable>/</filename>サブボリュームが読み書き(rw)モードでマウントされるようにしてください。<replaceable>SUBDIR</replaceable>は<literal>x86_64-efi</literal>または<literal>i386-pc</literal>にできます。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-root">
   <title>マルチパスが有効な場合、ブート時にシステムが終了して緊急シェルが起動する</title>
   <para>
    ブート中にシステムが終了して緊急シェルが起動し、次のようなメッセージが表示されます。
   </para>
<screen>[  OK  ] Listening on multipathd control socket.
         Starting Device-Mapper Multipath Device Controller...
[  OK  ] Listening on Device-mapper event daemon FIFOs.
         Starting Device-mapper event daemon...
         Expecting device dev-disk-by\x2duuid-34be48b2\x2dc21...32dd9.device...
         Expecting device dev-sda2.device...
[  OK  ] Listening on udev Kernel Socket.
[  OK  ] Listening on udev Control Socket.
         Starting udev Coldplug all Devices...
         Expecting device dev-disk-by\x2duuid-1172afe0\x2d63c...5d0a7.device...
         Expecting device dev-disk-by\x2duuid-c4a3d1de\x2d4dc...ef77d.device...
[  OK  ] Started Create list of required static device nodes ...current kernel.
         Starting Create static device nodes in /dev...
[  OK  ] Started Collect Read-Ahead Data.
[  OK  ] Started Device-mapper event daemon.
[  OK  ] Started udev Coldplug all Devices.
         Starting udev Wait for Complete Device Initialization...
[  OK  ] Started Replay Read-Ahead Data.
         Starting Load Kernel Modules...
         Starting Remount Root and Kernel File Systems...
[  OK  ] Started Create static devices
[*     ] (1 of 4) A start job is running for dev-disk-by\x2du...(7s / 1min 30s)
[*     ] (1 of 4) A start job is running for dev-disk-by\x2du...(7s / 1min 30s)

...

Timed out waiting for device dev-disk-by\x2duuid-c4a...cfef77d.device.
[DEPEND] Dependency failed for /opt.
[DEPEND] Dependency failed for Local File Systems.
[DEPEND] Dependency failed for Postfix Mail Transport Agent.
Welcome to emergency shell
Give root password for maintenance
(or press Control-D to continue):</screen>
    <para>
     このステージでは、initrd環境から一時的に<command>dracut</command>緊急シェルを使用しています。以下で説明される設定の変更を永続的にするには、インストールされたシステムの環境で実行する必要があります。
    </para>
    <procedure>
     <step>
      <para>
       システムのルート(<filename>/</filename>)ファイルシステムを識別します。<filename>/proc/cmdline</filename>のコンテンツを調べて、<option>root=</option>パラメータを探します。
      </para>
     </step>
     <step>
      <para>
       ルートファイルシステムがマウントされているかどうかを確認します。
      </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> systemctl status sysroot.mount</screen>
      <tip>
       <para>
        <command>dracut</command>はデフォルトで<filename>/sysroot</filename>の下にルートファイルシステムをマウントします。
       </para>
      </tip>
      <para>
       これからは、<filename>/sysroot</filename>の下にルートファイルシステムがマウントされていることを前提とします。
      </para>
     </step>
     <step>
      <para>
       <filename>/sysroot</filename>の下にシステムが必要とするファイルシステムをマウントし、<command>chroot</command>を実行してから、すべてのファイルシステムをマウントします。例:
      </para>
<screen>
<prompt>tux &gt; </prompt><command>sudo</command> for x in proc sys dev run; do mount --bind /$x /sysroot/$x; done
<prompt>tux &gt; </prompt><command>sudo</command> chroot /sysroot /bin/bash
<prompt>tux &gt; </prompt><command>sudo</command> mount -a
</screen>
      <para>
       詳細については、<xref linkend="sec-trouble-data-recover-rescue-access"/>を参照してください。
      </para>
     </step>
     <step>
      <para>
       次の手順で提示されているように、マルチパスまたはdracut設定に変更を行います。変更を含めるように<filename>initrd</filename>を再構築してください。
      </para>
     </step>
     <step>
      <para>
       <command>exit</command>コマンドを入力して<command>chroot</command>環境を終了し、緊急シェルを終了して、<keycombo><keycap function="control"/>
       <keycap>D</keycap></keycombo>を押してサーバを再起動します。
      </para>
     </step>
    </procedure>

   <procedure xml:id="pro-multipath-trouble-root-blacklist">
    <title>緊急シェル: ファイルシステムのブラックリスト化</title>
    <para>
     この修正は、ルートファイルシステムがマルチパス上にないにもかかわらずマルチパスが有効になっている場合に必要です。このようなセットアップの場合、マルチパスはブラックリスト化されていないすべてのデバイスに対してパスを設定しようとします。ルートファイルシステムがあるデバイスは既にマウントされているためマルチパスではアクセスできず、これが失敗の原因になります。この問題を修復するには、<filename>/etc/multipath.conf</filename>でルートデバイスをブラックリスト化して、マルチパスを正しく設定します。
    </para>
    <step>
     <para>
      緊急シェルで<command>multipath -v2</command>を実行し、ルートファイルシステムのデバイスを特定します。この結果、次のような出力が表示されます。
     </para>
<screen><prompt role="root">root # </prompt>multipath -v2
Dec 18 10:10:03 | 3600508b1001030343841423043300400: ignoring map</screen>
     <para>
      <literal>| </literal>～<literal>:</literal>の間の文字列が、ブラックリスト化に必要なWWIDです。
     </para>
    </step>
    <step>
     <para>
      <filename>/etc/multipath.conf</filename>を開いて以下を追加します。
     </para>
<screen>blacklist {
  wwid "<replaceable>WWID</replaceable>"
}</screen>
     <para>
      <replaceable>WWID</replaceable>は、前の手順で取得したIDに置き換えます。詳細については、<xref linkend="sec-multipath-blacklist"/>を参照してください。
     </para>
    </step>
    <step>
     <para>
      次のコマンドを使用して<systemitem>initrd</systemitem>を再構築します。
     </para>
<screen><prompt>tux &gt; </prompt>dracut -f --add-multipath</screen>
    </step>
   </procedure>
   <procedure xml:id="pro-multipath-trouble-root-initrd">
    <title>緊急シェル: <filename>initrd</filename>の再構築</title>
    <para>
     この修正は、［マルチパスの状態］(有効または無効)が<filename>initrd</filename>とシステムの間で異なる場合に必要です。修正するには、<filename>initrd</filename>を再構築します。
    </para>
    <step>
     <para>
      システムでマルチパスが<emphasis/>「有効」になっている場合、次のコマンドを使用し、マルチパスサポートを指定してinitrdを再構築します。
     </para>
<screen><prompt>tux &gt; </prompt>dracut --force --add multipath</screen>
     <para>
      システムでマルチパスが<emphasis/>「無効」になっている場合、次のコマンドを使用し、マルチパスサポートを指定してinitrdを再構築します。
     </para>
<screen><prompt>tux &gt; </prompt>dracut --force -o multipath</screen>
    </step>
   </procedure>
   <procedure xml:id="pro-multipath-trouble-root-drivers">
    <title>緊急シェル: <filename>initrd</filename>の再構築</title>
    <para>
     この修正は、initrdにNetwork Attached Storageアクセス用のドライバが含まれていない場合に必要です。たとえば、マルチパスを設定せずにシステムをインストールした場合や、各ハードウェアを追加または交換する場合などが該当します。
    </para>
    <step>
     <para>
      必要なドライバをファイル<filename>/etc/dracut.conf.d/01-dist.conf</filename>内の変数<envar>force_drivers</envar>に追加します。たとえば、システムに<filename>hpsa</filename>ドライバでアクセスされるRAIDコントローラがあり、qla23xxドライバでアクセスされるQlogicコントローラにマルチパスデバイスが接続されている場合は、次のようなエントリになります。
     </para>
<screen>force_drivers+="hpsa qla23xx"</screen>
    </step>
    <step>
     <para>
      次のコマンドを使用して<systemitem>initrd</systemitem>を再構築します。
     </para>
<screen><prompt>tux &gt; </prompt>dracut -f --add-multipath</screen>
    </step>
    <step>
     <para>
      ネットワークストレージの接続に失敗した場合にシステムが緊急モードでブートしないようにするため、<literal>/etc/fstab</literal>の各エントリにマウントオプション<filename>_netdev</filename>を追加することをお勧めします。
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-prio-fail">
   <title>マルチパス0.4.9以降への更新後に、個別デバイスのprio設定が失敗する</title>
   <para>
    バージョン 0.4.9以降のマルチパスツールでは、<literal>/etc/multipath.conf</literal>ファイルの<literal>defaults{}</literal>セクションまたは<literal>devices{}</literal>セクションの<filename>prio</filename>設定を使用します。キーワード<literal>prio</literal>が、<literal>multipath{)</literal>セクションの個別の<literal>multipaths</literal>定義に指定された場合は、暗黙のうちに無視されます。
   </para>
   <para>
    マルチパスツール0.4.8では、<literal>multipaths{)</literal>セクションの個別の<literal>multipath</literal>定義内のprio設定で、<literal>defaults{}</literal>または<literal>devices{}</literal>セクションの<literal>prio</literal>設定を上書きすることができました。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-prio-argument-fail">
   <title>multipath-tools-0.4.9以降への更新後に、引数を伴うprio設定が失敗する</title>
   <para>
    <filename>multipath-tools-0.4.8</filename>から<filename>multipath-tools-0.4.9</filename>に更新すると、引数を必要とするPrioritizerの場合、<literal>/etc/multipath.conf</literal>ファイル内の<filename>prio</filename>設定が壊れます。multipath-tools-0.4.9では、Prioritizerの指定には<literal>prio</literal>キーワードが使われ、引数を必要とするPrioritizerの指定には、<literal>prio_args</literal>キーワードが使われます。これまでは、Prioritizerとその引数はいずれも、同じ<literal>prio</literal>行で指定していました。
   </para>
   <para>
    たとえば、multipath-tools-0.4.8では、次の行を使用してPrioritizerとその引数を同じ行で指定していました。
   </para>
<screen>prio "weightedpath hbtl [1,3]:.:.+:.+ 260 [0,2]:.:.+:.+ 20"</screen>
   <para>
    multipath-tools-0.4.9以降への更新後は、このコマンドを使用するとエラーになります。メッセージの例を以下に示します。
   </para>
<screen>&lt;Month day hh:mm:ss&gt; | Prioritizer 'weightedpath hbtl [1,3]:.:.+:.+ 260
[0,2]:.:.+:.+ 20' not found in /lib64/multipath</screen>
   <para>
    この問題を解決するには、テキストエディタで、<literal>/etc/multipath.conf</literal>ファイル内の<filename>prio</filename>行を変更します。2つの行を作成して、<filename>prio</filename>行にPrioritizerを指定し、その下の<filename>prio_args</filename>行にPrioritizerの引数を指定します。
   </para>
<screen>prio "weightedpath"
prio_args "hbtl [1,3]:.:.+:.+ 260 [0,2]:.:.+:.+ 20"</screen>
   <para>
    <systemitem class="daemon">sudo systemctl restart multipathd</systemitem>を実行して<command>multipathd</command>デーモンを再起動し、変更を有効にします。
   </para>
  </sect2>

  <sect2 xml:id="sec-multipath-trouble-tids">
   <title>技術情報ドキュメント</title>
   <para>
    SUSE Linux Enterprise ServerのマルチパスI/Oの問題のトラブルシューティングについては、SUSEナレッジベースにある、次のTID (技術情報ドキュメント)を参照してください。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      <link xlink:href="https://www.suse.com/support/kb/doc.php?id=3617600"><citetitle>Using LVM on local and SAN attached devices</citetitle></link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link xlink:href="https://www.suse.com/support/kb/doc.php?id=7007498"><citetitle>Using LVM on Multipath (DM MPIO) Devices</citetitle></link>
     </para>
    </listitem>
    <listitem>
     <para>
      <link xlink:href="https://www.suse.com/support/kb/doc.php?id=7009660"><citetitle>HOWTO: Add, Resize and Remove LUN without restarting SLES</citetitle></link>
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
</chapter>
