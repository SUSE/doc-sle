<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.registry.installation" xml:lang="en">
<title>Hosting Docker Images On-premise</title>
<para><remark>taroth 2016-10-05: hm, wouldn't the following text and the title above
 rather belong behind the section 'Creating Custom Images'
 (docker.building.images)? regarding document structure and logic IMHO it makes
 no sense here because at this point in time, the docs have not even touched the
 topic of creating images yet...</remark>
 What can be done with the custom Docker images I created? How can they be
 shared within my organization? The easiest solution would be to push these
 images to the <link xlink:href="https://hub.docker.com">Docker Hub</link>. By
 default all images pushed to the Docker Hub are public. This is probably fine
 as long as this does not violate your companies policy and your images do not
 contain sensitive data or proprietary software.
</para>
<para>
 If you need to restrict access to your Docker images, there are two
 possibilities:
</para>
<itemizedlist>
 <listitem>
  <para>
   Get a subscription on Docker Hub that unlock private repositories.
  </para>
 </listitem>
 <listitem>
  <para>
   Run an on-site Docker registry where to store all the Docker images used
   by your organization or company and combine them with Portus to secure the
   registry.
  </para>
 </listitem>
</itemizedlist>
<para>
 This chapter describes how to set up an on-site Docker registry and how to
 combine it with Portus.
</para>

<sect1 xml:id="sec.docker.registry.definition">
   <title>What is a Docker Registry?</title>
   <para> The Docker registry is an open source project created by
        Docker Inc. It allows the storage and retrieval of Docker
        images. By running a local instance of the Docker registry it is
        possible to completely avoid usage of the Docker Hub.
         </para>
   <para>
    The Docker registry is also used by the Docker Hub. However, the Docker
    Hub, as seen from the user perspective, is made of the following parts
    at least:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      The user interface (UI): The part that is accessed by users with their
      browser. The UI provides a nice and intuitive way to browse the
      contents of the Docker Hub either manually or by using a search
      feature. It also allows to create organizations made by different
      users.
     </para>
     <para>
      This component is closed source.
     </para>
    </listitem>
    <listitem>
     <para> The authentication component: This is used to protect the
            images stored inside of the Docker Hub. It validates all
            push, pull and search requests.
            </para>
     <para>
      This component is closed source.
     </para>
    </listitem>
    <listitem>
     <para>
      The storage back-end: This is where the Docker images are sent and
      downloaded from. It is provided by the Docker registry.
     </para>
     <para>
      This component is open source.
     </para>
    </listitem>
   </itemizedlist>
  </sect1>

  <sect1 xml:id="sec.docker.registry.installation">
   <title>Installing and Setting Up Docker Registry</title>
   <procedure>
    <step>
     <para>
      Install the <systemitem>docker-distribution-registry</systemitem>
      package:
     </para>
<screen>sudo zypper install docker-distribution-registry</screen>
    </step>
    <step>
     <para>
      To automatically start the Docker registry at boot time:
     </para>
<screen>sudo systemctl enable registry</screen>
    </step>
    <step>
     <para>
      Start the Docker registry:
     </para>
<screen>sudo systemctl start registry</screen>
    </step>
   </procedure>
   <para>
    The Docker registry configuration is defined inside of
    <filename>/etc/registry/config.yml</filename>.
   </para>
   <para>
    With the default configuration the registry listens on ports
    <literal>5000</literal> and stores the Docker images under
    <filename>/var/lib/docker-registry</filename>.
   </para>
   <note>
    <title>Incompatible Versions of Docker and Docker Registry</title>
     <para>
       Docker registry version 2.3 is not compatible with Docker versions older
       than 1.10, because v2 manifests were only introduced with Docker 1.10.
       As Docker and Docker registry can be installed on different boxes, the
       versions might be incompatible. If you experience communication errors
       between Docker and Docker registry, update both to the latest versions.
     </para>
   </note>
<!--
      fcastelli 2015-07-08: TODO: update once we create a TID illustrating the secure setup of
      Docker registry and Portus.
     -->
   <para>
    For more details about Docker registry and its configuration, see the
    official documentation at:
    <link xlink:href="https://docs.docker.com/registry/"/>.
   </para>

  </sect1>

  <sect1 xml:id="sec.docker.registry.limitations">
   <title>Limitations</title>
   <para>
    The Docker registry has two major limitations:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      It lacks any form of authentication. That means everybody with access
      to the Docker registry can push and pull images to it. That also
      includes the possibility to overwrite already existing images.
     </para>
    </listitem>
    <listitem>
     <para>
      There is no way to see which images have been pushed to the Docker
      registry. You can
      <remark>taroth 2015-07-09: maybe replace "can" with
       "need to"?</remark>
      manually take notes of what is being stored inside of it. There is
      also no search functionality, which makes collaboration harder.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    The next section is going to introduce Portus, the solution to all of
    the problems above.
   </para>
 </sect1>
 <sect1 xml:id="sec.docker.portus">
  <title>Portus</title>

  <para>
   Portus is an authentication service and user interface for the Docker
   registry. It is an open source project created by &suse; to address all
   the limitations faced by the local instances of Docker registry.
  </para>

  <para>
   By combining Portus and Docker registry, it is possible to have a secure
   and enterprise ready on-premise version of the Docker Hub.
  </para>

  <para>
    Portus is accessible for &slea;&nbsp;12 customers through the Containers
    module. To install Portus, use the following command:
  </para>

  <screen>sudo zypper in Portus</screen>

  <para>
    In order to configure Portus properly, follow these steps:
  </para>

  <procedure>
    <step>
      <para>
        First of all, you should install Portus's dependencies if you haven't
        already. This is thoroughly documented here:
        <link xlink:href="http://port.us.org/docs/setups/1_rpm_packages.html#portus-dependencies"/>.
        This document will help you to get through the installation process, and
        it will also warn you about some of the common pitfalls.
      </para>
    </step>

    <step>
      <para>
        After installing Portus and its dependencies, you need to configure
        your instance. The initial setup of Portus is explained here:
        <link xlink:href="http://port.us.org/docs/setups/1_rpm_packages.html#initial-setup"/>.
        When you are done with portusctl, you should modify some configurable
        values before using Portus. This is thoroughly explained in this
        documentation page:
        <link xlink:href="http://port.us.org/docs/Configuring-Portus.html"/>.
      </para>
    </step>

    <step>
      <para>
        To apply the configuration changes, restart Apache (this is required
        after each configuration change).
      </para>
    </step>

    <step>
      <para>
        Finally, when entering Portus for the first time, you will be required
        to enter some information about your installed registry. For details, see:
        <link xlink:href="http://port.us.org/docs/setups/1_rpm_packages#the-default-installation.html"/>.
      </para>
    </step>

    <step>
      <para>
        The Portus setup is now complete and you can start using Portus.
      </para>
    </step>
  </procedure>

  <para>
   Currently, Portus is part of &suse;'s Docker offer as a technology
   preview. For more information and documentation about Portus, see:
   <link xlink:href="http://port.us.org/"/>.
  </para>
 </sect1>
</chapter>
