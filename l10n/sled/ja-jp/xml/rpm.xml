<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="rpm.xml" version="5.0" xml:id="sec-rpm"> <title>RPM - パッケージマネージャ</title>

 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker/>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <para>
  RPM (RPM Package Manager)がソフトウェアパッケージを管理するのに使用されます。RPMの主要コマンドは、<command>rpm</command>と<command>rpmbuild</command>です。ユーザ、システム管理者、およびパッケージの作成者は、強力なRPMデータベースでクエリーを行って、インストールされているソフトウェアに関する情報を取得できます。
 </para>

 <para>
  <command>rpm</command>には、ソフトウェアパッケージのインストール、アンインストール、アップデート、RPMデータベースの再構築、RPMベースまたは個別のRPMアーカイブの照会、パッケージの整合性チェック、およびパッケージへの署名の5種類のモードがあります。<command>rpmbuild</command>は、元のソースからインストール可能なパッケージを作成する場合に使用します。
 </para>

 <para>
  インストール可能なRPMアーカイブは、特殊なバイナリ形式でパックされています。それらのアーカイブは、インストールするプログラムファイルとある種のメタ情報で構成されます。メタ情報は、ソフトウェアパッケージを設定するために<command>rpm</command>によってインストール時に使用されるか、または文書化の目的でRPMデータベースに格納されています。通常、RPMアーカイブには拡張子<filename>.rpm</filename>が付けられます。
 </para>

 <tip>
  <title>ソフトウェア開発パッケージ</title>
  <para>
   多くのパッケージにおいて、ソフトウェア開発に必要なコンポーネント(ライブラリ、ヘッダ、インクルードファイルなど)は、別々のパッケージに入れられています。それらの開発パッケージは、最新のGNOMEパッケージのように、ソフトウェアを自分自身でコンパイルする場合にのみ、必要になります。それらのパッケージは、名前の拡張子<literal>-deve</literal>で識別できます(<systemitem class="resource">alsa-devel</systemitem>パッケージ、<systemitem class="resource">gimp-devel</systemitem>パッケージなど)。
  </para>
 </tip>

 <sect2 xml:id="sec-rpm-package-auth">
  <title>パッケージの信頼性の検証</title>
  <para>
   RPMパッケージにはGPG署名があります。RPMパッケージの署名を検証するには、<command>rpm --checksig </command>
   <replaceable>PACKAGE</replaceable>-1.2.3.rpmコマンドを使用して、SUSEまたはその他の信頼できるツールから送信されたパッケージかどうか判別します。これは、インターネットからアップデートパッケージを入手する場合には、特に推奨されます。
  </para>

  <para os="sles;sled">
   オペレーティングシステムの問題を修復する場合、暫定修正(PTF)を実動システムにインストールしなければならない場合があります。SUSEから提供されるパッケージは、特別なPTFキーに照らして署名されています。ただし、SUSE Linux Enterprise 11と異なり、SUSE Linux Enterprise 12システムでは、このキーはデフォルトでインポートされません。キーを手動でインポートするには、次のコマンドを使用します。
  </para>
  <screen os="sles;sled"><prompt>tux &gt; </prompt><command>sudo</command> rpm --import \
/usr/share/doc/packages/suse-build-key/suse_ptf_key.asc</screen>
  <para os="sles;sled">
   キーをインポートしたら、PTFパッケージをシステムにインストールできます。
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-packages-manage">
  <title>パッケージの管理: インストール、アップデート、およびアンインストール</title>
  <para>
   通常RPMアーカイブのインストールはとても簡単です。「<command>rpm -i</command> <replaceable>PACKAGE</replaceable>.rpm」のように入力します。このコマンドで、パッケージをインストールできます。ただし、依存関係が満たされており、他のパッケージとの競合がない場合に限られます。<command>rpm</command>では、依存関係の要件を満たすためにインストールしなければならないパッケージがエラーメッセージで要求されます。バックグラウンドで、RPMデータベースは競合が起きないようにします。ある特定のファイルは、1つのパッケージだけにしか属せません。別のオプションを選択すると、<command>rpm</command>にこれらのデフォルト値を無視させることができますが、この処置を行うのは専門知識のある人に限られます。それ以外の人が行うと、システムの整合性を危うくするリスクが発生し、システムアップデート機能が損なわれる可能性があります。
  </para>
  <para>
   <option>-U</option>または<option>--upgrade</option>と<option>-F</option>または<option>--freshen</option>の各オプションは、パッケージをアップデートするのに使用できます(たとえば、<command>rpm -F </command>
   <replaceable>PACKAGE</replaceable>.rpm)。このコマンドは、古いバージョンのファイルを削除し、新しいファイルをただちにインストールします。2つのバージョン間の違いは、<option>-U</option>がシステムに存在していなかったパッケージをインストールするのに対して、<option>-F</option>がインストールされていたパッケージを単にアップデートする点にあります。アップデートする際、<command>rpm</command>は、以下のストラテジーに基づいて設定ファイルを注意深くアップデートします。
  </para>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     設定ファイルがシステム管理者によって変更されていない場合、<command>rpm</command>は新しいバージョンの適切なファイルをインストールします。システム管理者は、何も行う必要はありません。
    </para>
   </listitem>
   <listitem>
    <para>
     アップデート前にシステム管理者が環境設定ファイルを変更した場合、<command>rpm</command>は拡張子<filename>.rpmorig</filename>または<filename>.rpmsave</filename>(バックアップファイル)で変更されたファイルを保存し、新しいパッケージからバージョンをインストールします。これは、最初にインストールされたファイルと新しいバージョンが異なる場合にのみ実行されます。異なる場合は、バックアップファイル(<filename>.rpmorig</filename>または<filename>.rpmsave</filename>)と新たにインストールされたファイルを比較して、新しいファイルに再度、変更を加えます。後ですべての<filename>.rpmorig</filename>と<filename>.rpmsave</filename>ファイルを削除して、今後のアップデートで問題が起きないようにします。
    </para>
   </listitem>
   <listitem>
    <para>
     設定ファイルがすでに存在しており、<emphasis>また</emphasis><option>noreplace</option>ラベルが<filename>.spec</filename>ファイルで指定されている場合、<filename>.rpmnew</filename>ファイルが作成されます。
    </para>
   </listitem>
  </itemizedlist>
  <para>
   アップデートが終了したら、<filename>.rpmsave</filename>ファイルと<filename>.rpmnew</filename>ファイルは、比較した後、将来のアップデートの妨げにならないように削除する必要があります。ファイルがRPMデータベースで認識されなかった場合、ファイルには拡張子<filename>.rpmorig</filename>が付けられます。
  </para>
  <para>
   認識された場合には、<filename>.rpmsave</filename>が付けられます。言い換えれば、<filename>.rpmorig</filename>は、RPM以外の形式からRPMにアップデートした結果として付けられます。<filename>.rpmsave</filename>は、古いRPMから新しいRPMにアップデートした結果として付けられます。<filename>.rpmnew</filename>は、システム管理者が設定ファイルに変更を加えたかどうかについて、何の情報も提供しません。それらのファイルのリストは、<filename>/var/adm/rpmconfigcheck</filename>にあります。設定ファイルの中には(<filename>/etc/httpd/httpd.conf</filename>など)、操作が継続できるように上書きされないものがあります。
  </para>
  <para>
   <option>-U</option>スイッチは、単に<option>-e</option>オプションでアンインストールして、<option>-i</option>オプションでインストールする操作と同じ<emphasis>ではありません</emphasis>。可能なときは必ず<option>-U</option>を使用します。
  </para>
  <para>
   パッケージを削除するには、「<command>rpm -e</command>
   <replaceable>PACKAGE</replaceable>」と入力します。」と入力します。解決されていない依存関係がない場合にパッケージのみを削除します。他のアプリケーションがTcl/Tkを必要とする限り、Tcl/Tkを削除することは理論的に不可能です。その場合でも、RPMはデータベースに援助を要求します。他の依存関係が<emphasis>ない</emphasis>場合でも、また、どのような理由があってもそのような削除が不可能であれば、<option>--rebuilddb</option>オプションを使用してRPMデータベースを再構築するのがよいでしょう。
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-delta">
  <title>デルタRPMパッケージ</title>
  <para>
   デルタRPMパッケージには、RPMパッケージの新旧バージョン間の違いが含まれています。デルタRPMを古いRPMに適用すると、まったく新しいRPMになります。デルタRPMは、インストールされているRPMとも互換性があるので、古いRPMのコピーを保管する必要はありません。デルタRPMパッケージは、パッチRPMよりもさらに小さく、パッケージをインターネット上で転送するのに便利です。欠点は、デルタRPMが組み込まれたアップデート操作の場合、そのままのRPMまたはパッチRPMに比べて、CPUサイクルの消費が目立って多くなることです。
  </para>
  <para>
   <command>prepdeltarpm</command>および<command>applydelta</command>バイナリは、デルタRPMスイート(<systemitem>deltarpm</systemitem>パッケージ)の一部であり、デルタRPMパッケージの作成と適用に際して役立ちます。次のコマンドを使用して、<filename>new.delta.rpm</filename>というデルタRPMを作成できます。次のコマンドでは、<filename>old.rpm</filename>および<filename>new.rpm</filename>が存在することが前提となります。
  </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> makedeltarpm old.rpm new.rpm new.delta.rpm</screen>
  <para>
   古いパッケージがすでにインストールされていれば、<command>applydeltarpm</command>を使用して、ファイルシステムから新たにRPMを構築できます。
  </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> applydeltarpm new.delta.rpm new.rpm</screen>
  <para>
   ファイルシステムにアクセスすることなく、古いRPMから構築するには、<option>-r</option>オプションを使用します。
  </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> applydeltarpm -r old.rpm new.delta.rpm new.rpm</screen>
  <para>
   技術的な詳細については、<filename>/usr/share/doc/packages/deltarpm/README</filename>を参照してください。
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-query">
  <title> RPM クエリー </title>
  <para>
   <option>-q</option>オプションを使用すると、<command>rpm</command>はクエリを開始し、(<option>-p</option>オプションを追加することにより)RPMアーカイブを検査できるようにして、インストールされたパッケージのRPMデータベースでクエリを行えるようにします。必要な情報の種類を指定する複数のスイッチを使用できます。<xref linkend="tab-rpm-query"/>を参照してください。
  </para>
  <table xml:id="tab-rpm-query">
   <title>基本的なRPMクエリオプション</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry>
       <para>
        <option>-i</option>
       </para>
      </entry>
      <entry>
       <para>
        パッケージ情報
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-l</option>
       </para>
      </entry>
      <entry>
       <para>
        ファイルリスト
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-f FILE</option>
       </para>
      </entry>
      <entry>
       <para>
        ファイル<replaceable>FILE</replaceable>を含むパッケージでクエリーを行います(<replaceable>FILE</replaceable>にはフルパスを指定する必要があります)。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-s</option>
       </para>
      </entry>
      <entry>
       <para>
        ステータス情報を含むファイルリスト(<option>-l</option>を暗示指定)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-d</option>
       </para>
      </entry>
      <entry>
       <para>
        ドキュメントファイルだけをリストします (<literal>-l</literal>を暗示指定)。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-c</option>
       </para>
      </entry>
      <entry>
       <para>
        設定ファイルだけをリストします(<option>-l</option>を暗示指定)。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--dump</option>
       </para>
      </entry>
      <entry>
       <para>
        詳細情報を含むファイルリスト(<option>-l</option>、<option>-c</option>、または<option>-d</option> と共に使用します)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--provides</option>
       </para>
      </entry>
      <entry>
       <para>
        他のパッケージが<option>--requires</option>で要求できるパッケージの機能をリストします。
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--requires</option>, <option>-R</option>
       </para>
      </entry>
      <entry>
       <para>
        パッケージが要求する機能
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--scripts</option>
       </para>
      </entry>
      <entry>
       <para>
        インストールスクリプト(preinstall、postinstall、uninstall)
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   たとえば、コマンド<command>rpm -q -i wget</command>は、<xref linkend="aus-update-rpm-i"/>に示された情報を表示します。
  </para>
  <example xml:id="aus-update-rpm-i">
   <title><command>rpm -q -i wget</command></title>

<screen os="sles;sled"><?dbsuse-fo font-size="0.70em"?>


Name        : wget
Version     : 1.14
Release     : 17.1
Architecture: x86_64
Install Date: Mon 30 Jan 2017 14:01:29 CET
Group       : Productivity/Networking/Web/Utilities
Size        : 2046483
License     : GPL-3.0+
Signature   : RSA/SHA256, Thu 08 Dec 2016 07:48:44 CET, Key ID 70af9e8139db7c82
Source RPM  : wget-1.14-17.1.src.rpm
Build Date  : Thu 08 Dec 2016 07:48:34 CET
Build Host  : sheep09
Relocations : (not relocatable)
Packager    : https://www.suse.com/
Vendor      : SUSE LLC &lt;https://www.suse.com/&gt;
URL         : http://www.gnu.org/software/wget/
Summary     : A Tool for Mirroring FTP and HTTP Servers
Description :
Wget enables you to retrieve WWW documents or FTP files from a server.
This can be done in script files or via the command line.
Distribution: SUSE Linux Enterprise 15
</screen>
  </example>
  <para>
   オプション<option>-f</option>が機能するのは、フルパスで完全なファイル名を指定した場合だけです。必要な数のファイル名を指定します。例:
  </para>
<screen><prompt>tux &gt; </prompt>rpm -q -f /bin/rpm /usr/bin/wget
rpm-4.14.1-lp151.13.10.x86_64
wget-1.19.5-lp151.4.1.x86_64
</screen>
  <para>
   ファイル名の一部分しかわからない場合は、<xref linkend="dat-rpm-search"/>に示すようなシェルスクリプトを使用します。実行するときに、ファイル名の一部を、パラメータとして示されるスクリプトに渡します。
  </para>
  <example xml:id="dat-rpm-search">
   <title>パッケージを検索するスクリプト</title>
<screen>#! /bin/sh
for i in $(rpm -q -a -l | grep $1); do
    echo "\"$i\" is in package:"
    rpm -q -f $i
    echo ""
done</screen>
  </example>
  <para>
   <command>rpm -q --changelog</command>
   <replaceable>PACKAGE</replaceable>コマンドは、特定のパッケージに関する詳細な変更情報を日付順に表示します。
  </para>
  <para>
   インストールされたRPMデータベースを使うと、確認検査を行うことができます。それらの検査は、<option>-V</option>または<option>--verify</option>オプションを使用して開始します。このオプションを使用すると、<command>rpm</command>には、インストールした後で変更されたパッケージ内のすべてのファイルが表示されます。<command>rpm</command>では、8文字の記号を使用して、次の変更に関するいくつかのヒントを提供します。
  </para>
  <table xml:id="tab-rpm-verify">
   <title>RPM確認オプション</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry>
       <para>
        <option>5</option>
       </para>
      </entry>
      <entry>
       <para>
        MD5チェックサム
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>S</option>
       </para>
      </entry>
      <entry>
       <para>
        ファイルサイズ
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>L</option>
       </para>
      </entry>
      <entry>
       <para>
        シンボリックリンク
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>T</option>
       </para>
      </entry>
      <entry>
       <para>
        変更時間
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>D</option>
       </para>
      </entry>
      <entry>
       <para>
        メジャーデバイス番号とマイナーデバイス番号
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>U</option>
       </para>
      </entry>
      <entry>
       <para>
        所有者
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>G</option>
       </para>
      </entry>
      <entry>
       <para>
        グループ
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>M</option>
       </para>
      </entry>
      <entry>
       <para>
        モード (許可とファイルタイプ)
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   設定ファイルの場合は、文字<option>c</option>が表示されます。<filename>/etc/wgetrc</filename> (<systemitem class="resource">wget</systemitem>パッケージ)の変更例を以下に示します。
  </para>
<screen><prompt>tux &gt; </prompt>rpm -V wget
S.5....T c /etc/wgetrc</screen>
  <para>
   RPMデータベースのファイルは、<filename>/var/lib/rpm</filename>に格納されています。パーティション<filename>/usr</filename>のサイズが 1 GBであれば、このデータベースは、完全なアップデート後、およそ 30 MB占有します。データベースが予期していたよりもはるかに大きい場合は、オプション<option>--rebuilddb</option>でデータベースを再構築するようにします。再構築する前に、古いデータベースのバックアップを作成しておきます。<command>cron</command>スクリプトの<command>cron.daily</command>は、データベースのコピー(gzip でパックされる)を毎日作成し、<filename>/var/adm/backup/rpmdb</filename>に格納します。コピー数は<filename>/etc/sysconfig/backup</filename>にある変数<systemitem>MAX_RPMDB_BACKUPS</systemitem>で制御します(デフォルト:<option>5</option>)。1つのバックアップのサイズは、1GBの<filename>/usr</filename>に対しておよそ1MBです。
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-sources">
  <title>ソースパッケージのインストールとコンパイル</title>
  <para>
   すべてのソースパッケージには、拡張子<filename>.src.rpm</filename> (ソース RPM)が付けられています。
  </para>
  <note>
   <title>インストール済みのソースパッケージ</title>
   <para>
    ソースパッケージは、インストールメディアからハードディスクにコピーされ、YaSTを使用して展開できます。ただし、ソースパッケージは、パッケージマネージャでインストール済み(<literal>[i]</literal>)というマークは付きません。これは、ソースパッケージがRPMデータベースに入れられないためです。<emphasis>インストールされた</emphasis>オペレーティングシステムソフトウェアだけがRPMデータベースにリストされます。ソースパッケージを<quote>インストールする</quote>場合、ソースコードだけがシステムに追加されます。
   </para>
  </note>
  <para>
   (<filename>/etc/rpmrc</filename>などのファイルでカスタム設定を指定していない限り)以下のディレクトリが、<filename>/usr/src/packages</filename>の下で<command>rpm</command>と<command>rpmbuild</command>から使用可能でなければなりません。
  </para>
  <variablelist>
   <varlistentry>
    <term><filename>SOURCES</filename>
    </term>
    <listitem>
     <para>
      元のソース(<filename>.tar.bz2</filename>ファイルや<filename>.tar.gz</filename>ファイルなど)用、およびディストリビューション固有の調整(ほとんどの場合<filename>.dif</filename>または<filename>.patch</filename>ファイル)用です。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>SPECS</filename>
    </term>
    <listitem>
     <para>
      <emphasis>ビルド</emphasis>処理 を制御する、メタMakefileに類似した<filename>.spec</filename>ファイル用です。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>BUILD</filename>
    </term>
    <listitem>
     <para>
      すべてのソースは、このディレクトリでアンパック、パッチ、およびコンパイルされます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>RPMS</filename>
    </term>
    <listitem>
     <para>
      完成したバイナリパッケージが格納されます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>SRPMS</filename>
    </term>
    <listitem>
     <para>
      ソースRPMが格納されます。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   YaSTを使ってソースパッケージをインストールすると、必要なすべてのコンポーネントが<filename>/usr/src/packages</filename>にインストールされます。ソースと調整は<filename>SOURCES</filename>、関連する<filename>.spec</filename>ファイルは<filename>SPECS</filename>に格納されます。
  </para>
  <warning>
   <title>システムの整合性</title>
   <para>
    システムコンポーネント(<systemitem class="resource">glibc</systemitem>、<systemitem class="resource">rpm</systemitem>など)で実験を行わないでください。システムが正しく動作しなくなります。
   </para>
  </warning>
  <para>
   次の例は、<filename>wget.src.rpm</filename>パッケージを使用します。ソースパッケージをインストールすると、次のようなファイルが生成されます。
  </para>
<screen>/usr/src/packages/SOURCES/wget-1.19.5.tar.bz2
/usr/src/packages/SOURCES/wgetrc.patch
/usr/src/packages/SPECS/wget.spec</screen>
  <para>
   <command>rpmbuild</command> <option> -b<replaceable>X</replaceable></option>
   <filename>/usr/src/packages/SPECS/wget.spec</filename>コマンドは、コンパイルを開始します。<replaceable>X</replaceable>は、ビルド処理のさまざまな段階に対して使用されるワイルドカードです(詳細については、<option>--help</option>の出力またはRPMのドキュメントを参照してください)。以下に簡単な説明を示します。
  </para>
  <variablelist>
   <varlistentry>
    <term><option>-bp</option>
    </term>
    <listitem>
     <para>
      <filename>/usr/src/packages/BUILD</filename>内のソースを用意します。アンパック、パッチしてください。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bc</option>
    </term>
    <listitem>
     <para>
      <option>-bp</option>と同じですが、コンパイルを実行します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bi</option>
    </term>
    <listitem>
     <para>
      <option>-bp</option>と同じですが、ビルドしたソフトウェアをインストールします。警告:パッケージがBuildRoot機能をサポートしていない場合は、設定ファイルが上書きされることがあります。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bb</option>
    </term>
    <listitem>
     <para>
      <option>-bi</option>と同じですが、バイナリパッケージを作成します。コンパイルに成功すると、バイナリパッケージは、<filename>/usr/src/packages/RPMS</filename>に作成されるはずです。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-ba</option>
    </term>
    <listitem>
     <para>
      <option>-bb</option>と同じですが、ソース RPMを作成します。コンパイルに成功すると、バイナリは<filename>/usr/src/packages/SRPMS</filename>に作成されるはずです。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>--short-circuit</option>
    </term>
    <listitem>
     <para>
      一部のステップをスキップします。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   作成されたバイナリRPMは、<command>rpm</command>
   <option> -i</option>コマンドまたは<command>rpm</command>
   <option> -U</option>コマンドでインストールできます。rpm<command>を使用したインストールは、RPMデータベースに登場します。</command>
  </para>
  <para>
   specファイルの<literal>BuildRoot</literal>ディレクティブは非推奨です。この機能がまだ必要な場合は、回避方法として<option>--buildroot</option>オプションを使用してください。
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-build">
  <title>buildによるRPMパッケージのコンパイル</title>
  <para>
   多くのパッケージにつきものの不都合は、ビルド処理中に不要なファイルが稼働中のシステムに追加されてしまうことです。これを回避するには、パッケージのビルド先の定義済みの環境を作成する<systemitem>build</systemitem>を使用します。このchroot環境を確立するには、<command>build</command> スクリプトが完全なパッケージツリーと共に提供されなければなりません。パッケージツリーは、NFS経由で、またはDVDから ハードディスク上で利用できるようにすることができます。<command>build --rpms</command>
   <replaceable>DIRECTORY</replaceable>で、位置を指定します。<command>rpm</command>と異なり、<command>build</command>コマンドは、ソースディレクトリで<filename>.spec</filename>ファイルを検索します。<filename>/media/dvd</filename>の下でシステムにマウントされているDVDを使用して(上記の例と同様に)<filename>wget</filename>をビルドするには、次のコマンドを<systemitem class="username">root</systemitem>として使用します。
  </para>
<screen><prompt role="root">root # </prompt>cd /usr/src/packages/SOURCES/
<prompt role="root">root # </prompt>mv ../SPECS/wget.spec .
<prompt role="root">root # </prompt>build --rpms /media/dvd/suse/ wget.spec</screen>
  <para>
   これで、最小限の環境が<filename>/var/tmp/build-root</filename>に確立されます。パッケージは、この環境でビルドされます。処理が完了すると、ビルドされたパッケージは<filename>/var/tmp/build-root/usr/src/packages/RPMS</filename>に格納されます。
  </para>
  <para>
   <command>build</command>スクリプトでは、他のオプションも多数使用できます。たとえば、スクリプトがユーザ独自のRPMを処理するようにするには、ビルド環境の初期化を省略するか、<command>rpm</command>コマンドの実行を上記のビルド段階のいずれかに制限します。<command>build </command> <option>--help</option>コマンドと<command>man build</command>コマンドで、詳細な情報が得られます。
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-tools">
  <title>RPMアーカイブとRPMデータベース用のツール</title>
  <para>
   Midnight Commander (<command>mc</command>)は、RPMアーカイブの内容を表示し、それらの一部をコピーできます。アーカイブを仮想ファイルシステムとして表し、Midnight Commanderの通常のメニューオプションを使用できます。<filename>F3</filename>キーを使用して<keycap>HEADER</keycap>を表示します。カーソルキーと<keycap function="enter"/>キーを使ってアーカイブ構造を表示します。<keycap>F5</keycap>キーを使用してアーカイブコンポーネントをコピーします。
  </para>
  <para>
   フル機能のパッケージマネージャをYaSTモジュールとして使用できます詳細については、<xref linkend="cha-yast-software"/>を参照してください。
  </para>

 </sect2>
</sect1>
