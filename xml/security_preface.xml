<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.security">
 <title>Security and Confidentiality</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
  </dm:docmanager>
  <abstract>
   <para>
    This chapter introduces some basic concepts of computer security.
    Threats and basic mitigation techniques are described. The chapter
    also provides links to other chapters, guides and websites with
    further information.
   </para>
  </abstract>
 </info>

 <sect1 xml:id="sec.security.overview">
  <title>Overview</title>
  <para>
   One main characteristics of Linux is its ability to handle multiple
   users at the same time (multiuser) and to allow these users to
   simultaneously perform tasks (multitasking) on the same computer.
   Moreover, the operating system is network transparent. For the user
   it is indistinguishable whether accessed data is stored locally or on
   the network.
  </para>
  <para>
   Due to the multiuser capability, data from different users has to be
   stored separately to guarantee security and privacy. Also important
   is the ability to keep data available in spite of a lost or otherwise
   damaged data medium, for example a hard disk.
  </para>
  <para>
   This chapter is primarily focused on confidentiality and privacy. But
   a comprehensive security concept includes a regularly updated,
   workable, and tested backup. Without this, it can be very hard to get
   the data back&mdash;not only in the case of a hardware defect, but
   also in the case of tampered files due to unauthorized access.
  </para>
  <para>
   Security for computer systems should have a <emphasis>defense in
   depth</emphasis> approach. It is unlikely that any single mitigation
   technique can protect data or systems from unauthorized access. More
   layers of defense make a successful attack much harder. Components
   for a defense in depth can be:
  </para>

  <itemizedlist>
   <listitem>
    <para>Encrypting data, especially passwords</para>
   </listitem>
   <listitem>
    <para>Logging, monitoring and intrusion detection</para>
   </listitem>
   <listitem>
    <para>Firewall</para>
   </listitem>
   <listitem>
    <para>Antivirus scanner</para>
   </listitem>
   <listitem>
    <para>Defined and documented emergency procedures</para>
   </listitem>
   <listitem>
    <para>Backups</para>
   </listitem>
   <listitem>
    <para>Physical security</para>
   </listitem>
   <listitem>
    <para>Audits, security scans and intrusion tests</para>
   </listitem>
  </itemizedlist>

  <para>
   &productname; includes software that addresses the requirements of
   the list above. The following sections provide starting points for
   securing your system.
  </para>
  <para os="sles">
   Find more details about hardening your system in <xref
   linkend="book.hardening" />.
  </para>
 </sect1>

 <sect1 xml:id="sec.security.passwords">
  <title>Passwords</title>
  <para>
   On a Linux system, only hashes of passwords are stored. Hashes are
   one way algorithms that make it easy to encrypt data. At the same
   time, hash algorithms make it very hard, or sometimes even
   practically impossible, to compute the original secret from the
   hash.
  </para>
  <para>
   The hashes are stored in the file <filename>/etc/shadow</filename>,
   which cannot be read by normal users. Because restoring passwords is
   possible with powerful computers, encrypted passwords should not be
   visible to regular users.
  </para>
  <para>
   Passwords should be longer than 8 characters. Passwords should not
   be in previously breached corpora, solely made up of words found in
   dictionaries, or easy to guess character patterns.
  </para>
  <para>
   The <emphasis>National Institute of Standards and
   Technology</emphasis> (<emphasis>NIST</emphasis>) publishes a
   guideline for passwords, which is available at <link
   xlink:href="https://pages.nist.gov/800-63-3/sp800-63b.html#sec5"
   />
  </para>
  <para>
   For details about how to set a password policy, see <xref
   linkend="sec.security.yast_security.password" />. For general
   information about authentication on Linux, see <xref
   linkend="part.auth" />.
  </para>
 </sect1>

 <sect1 xml:id="sec.security.integrity">
  <title>System Integrity</title>
  <para>
   If it is possible to physically access a computer, the firmware and
   boot process can be manipulated to gain access as soon as an
   authorized person boots the machine. Physically locking the server
   room already is a good start, but additional measures should be
   taken. Also, not all computers can be locked in rooms.
  </para>
  <para>
   Configure your system so it cannot be booted from a removable
   device, either by removing the drives entirely or by setting a
   UEFI password and configuring the UEFI to allow booting from a
   hard disk only. To make the boot procedure more tamper resistant,
   enable the UEFI <emphasis>secure boot</emphasis> feature.
   Normally, a Linux system is started by a boot loader, allowing you
   to pass additional options to the booted kernel. Prevent others
   from using such parameters during boot by setting an additional
   password for the boot loader. This is crucial to your system's
   security. Not only does the kernel itself run with &rootuser;
   permissions, but it is also the first authority to grant
   &rootuser; permissions at system start-up. For more details about
   secure boot, refer to <xref linkend="cha.uefi"/>. For more details
   about setting a password in the boot loader, refer to
   <xref linkend="sec.grub2.password"/>. You can also enable hard disk
   encryption. For details, see <xref linkend="cha.security.cryptofs"
   />.
  </para>
  <para>
   Use AIDE to detect any changes in your system configuration. For
   details, see <xref linkend="cha.aide" />.
  </para>
 </sect1>

 <sect1 xml:id="sec.security.file_access">
  <title>File Access</title>
  <para>
   Due to the <emphasis>everything is a file</emphasis> approach in
   Linux, file permissions are important for controlling access to most
   resources. Hence, not only access to classical files but also access
   to hardware can be managed by file permissions. By default, most
   hardware devices are only accessible for &rootuser;. However, some
   devices, for example serial ports, can be accessible for normal
   users.
  </para>
  <para>
   As a general rule, always work with the most restrictive
   privileges possible for a given task. For example, it is
   definitely not necessary to be &rootuser; to read or write e-mail.
   If the mail program has a bug, this bug could be exploited for an
   attack that acts with exactly the permissions of the program when
   it was started. By following the above rule, minimize the possible
   damage.
  </para>
  <para>
   For details, see <xref linkend="sec.security.acls.traditional" /> and
   <xref linkend="sec.security.acls.intro" />.
  </para>
  <para>
   &aa; <phrase os="osuse;sles">and SELinux allow</phrase><phrase
   os="sled">allows</phrase> you to set constrains for applications and
   users. For details, see <xref linkend="part.apparmor" /><phrase
   os="sles;osuse"> and <xref linkend="part.selinux" /></phrase>.
  </para>
  <para>
   If there is a chance that hard disks can be accessed outside of the
   installed operating system, for example by booting a live system or
   removing the hardware, encrypt the data. &productname; allows you to
   encrypt partitions containing data and the operating system. For
   details, see <xref linkend="cha.security.cryptofs" />.
  </para>
 </sect1>

 <sect1 xml:id="sec.security.network">
  <title>Networking</title>
  <para>
   Securing network services is a crucial task. It is useful to secure
   as many layers of the <emphasis>OSI model</emphasis> as possible.
   First, physical access to critical networks should be limited, for
   example by removing any publicly accessible Ethernet ports. If the
   physical network cannot be secured, use a VPN to create a secure
   virtual network.
  </para>
  <para>
   Next, all communication should be authenticated and encrypted with
   up-to-date cryptographic algorithms on the transportation or
   application layer. Consider that a breach of one communication
   channel could potentially be used to breach other channels and
   systems. For example, if the DNS service can be somehow compromised,
   HTTP(S) requests can be redirected to malicious hosts.
  </para>
  <para>
   &productname; provides many options for securing your network:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Use &yast; to create X509 certificates. These certificates can be
     used for encryption and authentication of many services.
     You can set up your own <emphasis>certificate authority</emphasis>
     (<emphasis>CA</emphasis>) and use it as a source of trust in your
     network. For details, see <xref linkend="cha.security.yast_ca" />.
    </para>
   </listitem>
   <listitem>
    <para>
     Usually, at least parts of networks are exposed to the public
     internet. Reduce attack surfaces by closing ports with firewall
     rules and by uninstalling or at least disabling not required
     services. For details, see <xref linkend="cha.security.firewall"
     />.
    </para>
   </listitem>
   <listitem>
    <para>
     Use OpenVPN to secure communication channels over insecure
     physical networks. For details, see <xref
     linkend="cha.security.vpnserver" />.
    </para>
   </listitem>
   <listitem>
    <para>
     Use strong authentication for network services. For details, see
     <xref linkend="part.auth" />.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="sec.security.vulnerabilities">
  <title>Software Vulnerabilities</title>
  <para>
   Software vulnerabilities are a class of software bugs that can be
   exploited by attackers to obtain unauthorized access to data or use
   attacked systems in unintended ways. Especially for remote services,
   for example HTTP servers, vulnerabilities can be very critical. In
   current computer environments, vulnerabilities have to be expected.
   Usually it is the obligation of programmers to fix these issues when
   they become known. It is then the administrators task to quickly and
   safely install provided updates to protect the systems.
  </para>
  <para>
   Vulnerabilities are usually announced on centralized
   databases, for example the <emphasis>National Vulnerability
   Database</emphasis>, which is maintained by the US government.
   You can subscribe to feeds to stay informed about newly
   discovered vulnerabilities. In some cases the problems induced by
   the bugs can be mitigated until a software update is provided.
   Vulnerabilities are assigned a <emphasis>Common Vulnerabilities
   and Exposures</emphasis> (<emphasis>CVE</emphasis>) number and a
   <emphasis>Common Vulnerability Scoring System</emphasis>
   (<emphasis>CVSS</emphasis>) score. The score helps identifying
   the severity of vulnerabilities.
  </para>
  <para>
   &suse; provides a feed of security advisories. It is available at
   <link xlink:href="https://www.suse.com/en-us/support/update/" />.
   There is also a list of security updates by CVE number available at
   <link xlink:href="https://www.suse.com/en-us/security/cve/" />.
  </para>
  <para>
   In general, administrators should be prepared for severe
   vulnerabilities in their systems. This includes hardening all
   computers as far as possible. Also, we recommend to have predefined
   procedures in place for quickly installing updates for severe
   vulnerabilities.
  </para>
  <para>
   To reduce the damage of possible attacks, use restrictive file
   permissions. See <xref linkend= "sec.security.acls.traditional" />.
   &suse; provides a guide to harden &productname;.<phrase
   os="sles">For details, see <xref
   linkend="book.hardening"/>.</phrase>
  </para>
  <para>
   Other useful links:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <link
     xlink:href="http://lists.opensuse.org/opensuse-security-announce/"/>
     , mailing list with &opensuse; security announcements.
    </para>
   </listitem>
   <listitem>
    <para><link
     xlink:href="https://nvd.nist.gov/home"
    />, the National Vulnerability Database</para>
   </listitem>
   <listitem>
    <para><link
     xlink:href="https://cve.mitre.org/"
    />, MITRE's CVE database</para>
   </listitem>
   <listitem>
    <para><link
    xlink:href="https://www.bsi.bund.de/DE/Service/Aktuell/Cert_Bund_Meldungen/cert_bund_meldungen_node.html"
    />, <emphasis>German Federal Office for Information
    Security</emphasis> vulnerability feed</para>
   </listitem>
   <listitem>
    <para>
    <link
    xlink:href="https://www.first.org/cvss/"
    />, Information about the Common Vulnerability Scoring System
    </para>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="sec.security.malware">
  <title>Malware</title>
  <para>
   <emphasis>Malware</emphasis> refers to software that is intended to
   interrupt the normal functioning of a computer or steal data. This
   includes viruses, worms, ransomware or rootkits. Sometimes malware
   uses software vulnerabilities to attack a computer. However, in many
   cases it is accidentally executed by a user, especially when
   installing third party software from unknown sources. &productname;
   provides an extensive list of programs (packages) in its download
   repositories. This reduces the need to download third party
   software. All packages provided by &suse; are signed. The package
   manager of &productname; checks the signatures of packages after the
   download to verify their integrity.
  </para>
  <para>
   The command <command>rpm</command>&nbsp;<option>--checksig
   <replaceable>RPM_FILE</replaceable></option> shows whether the
   checksum and the signature of an uninstalled package are correct.
   Find the key on the first CD of the distribution and on most key
   servers worldwide.
  </para>
  <para>
   You can use the &clamav; antivirus software to detect malware on your
   system. &clamav; can be integrated into several services, for example
   mail servers or HTTP proxies. This can be used to filter malware
   before it arrives at the user.
  </para>
  <para>
   Restrictive user privileges can reduce the risk for of accidental
   code execution.
  </para>
 </sect1>

 <sect1 xml:id="sec.security.tips">
  <title>Important Security Tips</title>

  <para>
   The following tips are a quick summary of the sections above:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     Stay informed about the latest security issues. Get and install
     the updated packages recommended by security announcements as
     quickly as possible.
    </para>
   </listitem>
   <listitem>
    <para>
     Avoid using &rootuser; privileges whenever possible. Set
     restrictive file permissions.
    </para>
   </listitem>
   <listitem>
    <para>
     Only use encrypted protocols for network communication.
    </para>
   </listitem>
   <listitem>
    <para>
     Disable any network services you do not absolutely require.
    </para>
   </listitem>
   <listitem>
    <para>
     Conduct regular security audits. For example, scan your network for
     open ports.
    </para>
   </listitem>
   <listitem>
    <para>
     Monitor the integrity of files on your systems with
     <literal>AIDE</literal> (Advanced Intrusion Detection
     Environment).
    </para>
   </listitem>
   <listitem>
    <para>
     Take proper care when installing any third-party software.
    </para>
   </listitem>
   <listitem>
    <para>
     Check all your backups regularly.
    </para>
   </listitem>
   <listitem>
    <para>
     Check your log files. Write a small script to search for
     suspicious entries.
    </para>
   </listitem>
   <listitem>
    <para>
     Configure the firewall to block all ports that are not explicitly
     whitelisted.
    </para>
   </listitem>
   <listitem>
    <para>
     Design your security measures to be redundant: a message seen
     twice is much better than no message.
    </para>
   </listitem>
   <listitem>
    <para>
     Use encryption where possible, for example for hard disks of mobile
     computers.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec.security.general.report">
  <title>Reporting Security Issues</title>

  <para>
   If you discover a security-related problem, first check the
   available update packages. If no update is available, write an
   e-mail to <email>security@suse.de</email>. Include a detailed
   description of the problem and the version number of the package
   concerned. &suse; will try to send a reply when possible. We
   encourage to encrypt e-mails with GPG.
  </para>

  <para>
   You can find a current version of the SUSE GPG key on
   <link xlink:href="https://www.suse.com/support/security/contact/"/>.
  </para>
 </sect1>
</chapter>
