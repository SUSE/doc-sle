<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="adm_sudo.xml" version="5.0" xml:id="cha-adm-sudo">
 <title>sudo
</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  ファイルの変更やスーパユーザのみが許可されているタスクを実行するために、多くのコマンドとシステムユーティリティは、<systemitem class="username">root</systemitem>として実行する必要があります。セキュリティ上の理由のため、および危険なコマンドが偶発的に実行されるのを回避するため、通常は<systemitem class="username">root</systemitem>として直接ログインしないことをお勧めします。代わりに、通常の特権のないユーザとして、<command>sudo</command>コマンドを使用し、昇格された特権付きでコマンドを実行することをお勧めします。
 </para>
 <para>
  <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>では、<command>sudo</command>は、suと同様に機能するようデフォルトで設定されています。ただし、<command>sudo</command>を使用することで、ユーザは、他のユーザの特権を自由に設定し、それらの特権を使用してコマンドを実行できるようになります。このコマンドを使用して、指定の特権を持つ役割を特定のユーザとグループに割り当てることができます。たとえば、<systemitem class="groupname">users</systemitem>グループのメンバーが、<systemitem class="username">wilber</systemitem>の特権でコマンドを実行できるようにすることができます。コマンドへのアクセス権は、コマンドオプションの指定を禁止するなどしてさらに制限できます。suでは、PAMを使用した認証で常に<systemitem class="username">root</systemitem>パスワードを必要としますが、<command>sudo</command>では、ユーザの資格情報を使用して認証するように設定できます。これにより、セキュリティがより強化されます。<systemitem class="username">root</systemitem>パスワードを共有する必要がなくなるからです。たとえば、<systemitem class="groupname">users</systemitem>グループのメンバーが、<systemitem class="username">wilber</systemitem>として<command>frobnicate</command>コマンドを実行することを許可できますが、その際に、引数の指定を禁止する制限を付けることができます。このコマンドを使用して、指定の機能を持つ役割を特定のユーザとグループに割り当てることができます。
 </para>
 <sect1 xml:id="sec-adm-sudo-usage">
  <title><command>sudo</command>の基本的な使用方法</title>

  <para>
   <command>sudo</command>は簡単に使用できて、非常に強力なコマンドです。
  </para>

  <sect2 xml:id="sec-adm-sudo-usage-cmd">
   <title>単一コマンドの実行</title>
   <para>
    標準ユーザとしてログインしている場合、コマンドの前に<command>sudo</command>を追加することで、任意のコマンドを<systemitem class="username">root</systemitem>として実行できます。その際、rootパスワードの入力が要求され、認証に成功すると、コマンドが<systemitem class="username">root</systemitem>として実行されます。
   </para>
<screen>
<prompt>tux &gt; </prompt><command>id -un</command><co xml:id="co-sudo-usage-id"/>
tux
<prompt>tux &gt; </prompt><command>sudo id -un</command>
root's password:<co xml:id="co-sudo-usage-pw"/>
root
<prompt>tux &gt; </prompt><command>id -un</command>
tux<co xml:id="co-sudo-usage-after"/>
<prompt>tux &gt; </prompt><command>sudo id -un</command>
<co xml:id="co-sudo-usage-nopw"/>
root
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-usage-id">
     <para>
      <command>id -un</command>コマンドは、現在のユーザのログイン名を出力します。
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-pw">
     <para>
      入力時には、パスワードは表示されません(クリアテキストとしてだけでなく、黒丸としても表示されません)。
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-after">
     <para>
      <command>sudo</command>で始まるコマンドのみが、昇格された特権で実行されます。<command>sudo</command>接頭辞なしで同じコマンドを実行した場合は、再度現在のユーザの特権で実行されます。
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-nopw">
     <para>
      限られた時間に、<systemitem class="username">root</systemitem>パスワードを繰り返し入力する必要がなくなります。
     </para>
    </callout>
   </calloutlist>
   <tip>
    <title>I/Oリダイレクト</title>
    <para>
     I/Oリダイレクトは、多くのユーザが期待している動作と異なります。
    </para>
<screen>
<prompt>tux &gt; </prompt>sudo echo s &gt; /proc/sysrq-trigger
bash: /proc/sysrq-trigger: Permission denied
<prompt>tux &gt; </prompt>sudo cat &lt; /proc/1/maps
bash: /proc/1/maps: Permission denied
</screen>
    <para>
     昇格された特権で実行されるのは<command>echo</command>/<command>cat</command>バイナリのみで、リダイレクトは、ユーザのシェルでユーザ特権を使用して実行されます。<xref linkend="sec-sudo-shell"/>で説明しているようにシェルを起動することも、<command>dd</command>ユーティリティを使用することもできます。
    </para>
<screen>
echo s | sudo dd of=/proc/sysrq-trigger
sudo dd if=/proc/1/maps | cat 
</screen>
   </tip>
  </sect2>

  <sect2 xml:id="sec-sudo-shell">
   <title>シェルの起動</title>
   <para>
    すべてのコマンドの前に<command>sudo</command>を追加するのは煩わしい場合があります。シェルは<command>sudo bash</command>コマンドとして指定できますが、組み込まれたメカニズムのいずれかを使用してシェルを起動することをお勧めします。
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>sudo -s (&lt;command&gt;)</literal>
     </term>
     <listitem>
      <para>
       <envar>SHELL</envar>環境変数で指定したシェル、またはターゲットユーザのデフォルトのシェルを起動します。コマンドを指定した場合は、コマンドが(<option>-c</option>オプション付き)でシェルに渡されます。そうでない場合は、シェルが対話モードで実行されます。
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:/home/tux # </prompt>exit
<prompt>tux:~ &gt; </prompt>
</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>sudo -i (&lt;command&gt;)</literal>
     </term>
     <listitem>
      <para>
       <option>-s</option>と同様ですが、シェルをログインシェルとして起動します。つまり、シェルの起動ファイル(<filename>.profile</filename>など)は処理され、現在の作業ディレクトリはターゲットユーザのホームディレクトリに設定されます。
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:~ # </prompt>exit
<prompt>tux:~ &gt; </prompt>
            </screen>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec-adm-sudo-usage-env">
   <title>環境変数</title>
   <para>
    デフォルトでは、<command>sudo</command>は環境変数を伝達しません。
   </para>
<screen>
<prompt>tux &gt; </prompt>ENVVAR=test env | grep ENVVAR
ENVVAR=test
<prompt>tux &gt; </prompt>ENVVAR=test sudo env | grep ENVVAR
root's password:
<co xml:id="co-sudo-env-novar"/>
<prompt>tux &gt; </prompt>
      </screen>
   <calloutlist>
    <callout arearefs="co-sudo-env-novar">
     <para>
      空白の出力は、<command>sudo</command>で実行したコマンドのコンテキストに<envar>ENVVAR</envar>環境変数が存在しなかったことを示しています。
     </para>
    </callout>
   </calloutlist>
   <para>
    この動作は、<literal>env_reset</literal>オプションで変更できます。<xref linkend="tab-adm-sudo-options"/>を参照してください。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-sudo-conf">
  <title><command>sudo</command>の設定</title>

  <para>
   <command>sudo</command>は、さまざまな設定が可能な、柔軟なツールです。
  </para>

  <note>
   <title>sudoからのロックアウト</title>
   <para>
    誤って<command>sudo</command>からロックアウトした場合は、<command>su -</command>と<systemitem class="username">root</systemitem>パスワードを使用してルートシェルを取得してください。エラーを修正するには、<command>visudo</command>を実行します。
   </para>
  </note>

  <sect2 xml:id="sec-sudo-conf-edit">
   <title>設定ファイルの編集</title>
   
   <para>
    <command>sudo</command>向けの主なポリシー設定ファイルは、<filename>/etc/sudoers</filename>です。ポリシー設定ファイル内のエラーが原因で、システムからロックアウトされてしまう可能性があるため、編集に<command>visudo</command>を使用することを強くお勧めします。このコマンドは、開いているファイルが同時に変更されるのを防ぎ、構文エラーがないかどうかも変更の保存前に確認します。
   </para>
   <para>
    その名前が示唆するのとは異なり、<envar>EDITOR</envar>環境変数を次のように設定して、vi以外のエディタを使用することもできます。
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo</screen>
   <para>
    ただし、<filename>/etc/sudoers</filename>ファイル自体はシステムパッケージで提供されるため、アップデート時に変更内容が失われてしまう可能性があります。そのため、カスタム設定は、<filename>/etc/sudoers.d/</filename>ディレクトリ内のファイルに対して行うことをお勧めします。そこにあるファイルは自動的にインクルードされるからです。対象のサブディレクトリでファイルを作成または編集するには、次のコマンドを実行します。
   </para>
<screen>sudo visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <para>
    または、別のエディタ(<command>nano</command>など)を使用します。
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <note>
    <title><filename>/etc/sudoers.d</filename>内の無視されるファイル</title>
    <para>
     <filename>/etc/sudoers.d</filename>をインクルードするために使用される<filename>/etc/sudoers</filename>の<literal>#includedir</literal>コマンドでは、<literal>~</literal>(チルダ)で終わるファイルや<literal>.</literal>(ドット)を含むファイルが無視されます。
    </para>
   </note>
   <para>
    <command>visudo</command>コマンドの詳細については、<command>man 8 visudo</command>を実行してください。
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-syntax">
   <title>基本的なsudoersの設定構文</title>
   <para>
    sudoersの設定ファイルには、2種類のオプション(文字列とフラグ)があります。文字列には任意の値を含めることができますが、フラグはONかOFFのいずれかのみです。sudoersの設定ファイルの最も重要な構文構造を次に示します。
   </para>
<screen>
# Everything on a line after a # gets ignored <co xml:id="co-sudo-syntax-comment"/>
Defaults !insults # Disable the insults flag <co xml:id="co-sudo-syntax-flag"/>
Defaults env_keep += "DISPLAY HOME" # Add DISPLAY and HOME to env_keep
tux ALL = NOPASSWD: /usr/bin/frobnicate, PASSWD: /usr/bin/journalctl <co xml:id="co-sudo-syntax-rule"/>
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-syntax-comment">
     <para>
      例外が2つあります。<literal>#include</literal>と<literal>#includedir</literal>は通常のコマンドです。数値を続けた場合は、UIDを指定します。
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-flag">
     <para>
      指定のフラグをONに設定するには、<literal>!</literal>を削除します。
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-rule">
     <para>
      詳細については、<xref linkend="sec-sudo-conf-rule"/>を参照してください。
     </para>
    </callout>
   </calloutlist>
   <table xml:id="tab-adm-sudo-options">
    <title>有用なフラグとオプション</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>
        <para>
         オプション名
        </para>
       </entry>
       <entry>
        <para>
         説明
        </para>
       </entry>
       <entry>
        <para>
         例
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>targetpw</literal>
       </entry>
       <entry>
        <para>
         このフラグは、呼び出し元のユーザが、ターゲットユーザのパスワード(ON)(<systemitem class="username">root</systemitem>など)と、呼び出し元のユーザのパスワード(OFF)のいずれを要求されるかを決定します。
        </para>
       </entry>
       <entry>
<screen>Defaults targetpw # Turn targetpw flag ON</screen>
       </entry>
      </row>
      <row>
       <entry><literal>rootpw</literal>
       </entry>
       <entry>
        <para>
         設定すると、<command>sudo</command>がターゲットユーザの代わりに<systemitem class="username">root</systemitem>パスワードか、コマンドを呼び出したユーザのパスワードを要求します。デフォルトは［オフ］です。
        </para>
       </entry>
       <entry>
<screen>Defaults !rootpw # Turn rootpw flag OFF</screen>
       </entry>
      </row>
      <row>
       <entry><literal>env_reset</literal>
       </entry>
       <entry>
        <para>
         設定すると、<command>sudo</command>が、<envar>TERM</envar>、<envar>PATH</envar>、
<envar>HOME</envar>、<envar>MAIL</envar>、<envar>SHELL</envar>、
<envar>LOGNAME</envar>、<envar>USER</envar>、<envar>USERNAME</envar>、
および<envar>SUDO_*</envar>が指定された最小限の環境を作成します。また、<literal>env_keep</literal>に列挙されている変数は、呼び出し元の環境からインポートされます。デフォルトは［ON］です。
        </para>
       </entry>
       <entry>
<screen>Defaults env_reset # Turn env_reset flag ON</screen>
       </entry>
      </row>
      <row>
       <entry><literal>env_keep</literal>
       </entry>
       <entry>
        <para>
         <literal>env_reset</literal>フラグがONの場合に保持する環境変数の一覧。
        </para>
       </entry>
       <entry>
<screen>
# Set env_keep to contain EDITOR and PROMPT
Defaults env_keep = "EDITOR PROMPT"
Defaults env_keep += "JRE_HOME" # Add JRE_HOME
Defaults env_keep -= "JRE_HOME" # Remove JRE_HOME
</screen>
       </entry>
      </row>
      <row>
       <entry><literal>env_delete</literal>
       </entry>
       <entry>
        <para>
         <literal>env_reset</literal>フラグがOFFの場合に削除する環境変数の一覧。
        </para>
       </entry>
       <entry>
<screen>
# Set env_delete to contain EDITOR and PROMPT
Defaults env_delete = "EDITOR PROMPT"
Defaults env_delete += "JRE_HOME" # Add JRE_HOME
Defaults env_delete -= "JRE_HOME" # Remove JRE_HOME
</screen>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <para>
    <literal>Defaults</literal>トークンを使用することで、ユーザ、ホスト、およびコマンドのコレクションのエイリアスを作成することもできます。さらに、一連のユーザのみを対象としてオプションを適用することができます。
   </para>
   <para>
    <filename>/etc/sudoers</filename>設定ファイルの詳細については、<command>man 5 sudoers</command>を参照してください。
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-rule">
   <title>sudoersのルール</title>
   <para>
    sudoersの設定のルールは非常に複雑な場合があるため、このセクションでは、基本的なルールのみを説明します。各ルールは、基本的なスキームに従います(<literal>[]</literal>はオプション部分を示しています)。
   </para>
<screen>
#Who      Where         As whom      Tag                What
User_List Host_List = [(User_List)] [NOPASSWD:|PASSWD:] Cmnd_List
</screen>
   <variablelist>
    <title>sudoersのルールの構文</title>
    <varlistentry>
     <term><literal>User_List</literal>
     </term>
     <listitem>
      <para>
       1つ以上の(<literal>,</literal>で区切られた)識別子。ユーザ名、<literal>%GROUPNAME</literal>形式のグループ、<literal>#UID</literal>形式のユーザIDを指定します。否定は、<literal>!</literal>接頭辞で示せます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Host_List</literal>
     </term>
     <listitem>
      <para>
       1つ以上の(<literal>,</literal>で区切られた)識別子。(完全修飾された)ホスト名またはIPアドレスのいずれかを指定します。否定は、<literal>!</literal>接頭辞で示せます。通常、<literal>Host_List</literal>には<literal>ALL</literal>を選択します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>NOPASSWD:|PASSWD:</literal>
     </term>
     <listitem>
      <para>
       <literal>NOPASSWD:</literal>の後に、<literal>CMDSPEC</literal>と一致するコマンドを実行すると、パスワードは要求されません。
      </para>
      <para>
       デフォルトは、<literal>PASSWD</literal>です。NOPASSWDとPASSWDの両方が同じ行に存在する場合にのみPASSWDを明示的に指定する必要があります。
      </para>
<screen>tux ALL = PASSWD: /usr/bin/foo, NOPASSWD: /usr/bin/bar</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Cmnd_List</literal>
     </term>
     <listitem>
      <para>
       1つ以上の(<literal>,</literal>で区切られた)指定子。実行ファイルへのパスの後に、使用可能な引数を指定するか、何も指定しません。
      </para>
<screen>
/usr/bin/foo     # Anything allowed
/usr/bin/foo bar # Only "/usr/bin/foo bar" allowed
/usr/bin/foo ""  # No arguments allowed
</screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    <literal>ALL</literal>は、<literal>User_List</literal>、<literal>Host_List</literal>、および<literal>Cmnd_List</literal>としても使用できます。
   </para>
   <para>
    パスワードを入力しなくても、<systemitem class="username">tux</systemitem>がすべてのコマンドをrootとして実行できるようにするルールは次のとおりです。
   </para>
<screen>tux ALL = NOPASSWD: ALL</screen>
   <para>
    <systemitem class="username">tux</systemitem>が<command>systemctl restart apache2</command>を実行できるようにするルールは次のとおりです。
   </para>
<screen>tux ALL = /usr/bin/systemctl restart apache2</screen>
   <para>
    <systemitem class="username">tux</systemitem>が<command>wall</command>を<systemitem>admin</systemitem>として引数なしで実行できるようにするルールは次のとおりです。
   </para>
<screen>tux ALL = (admin) /usr/bin/wall ""</screen>
   <warning>
    <title>危険な構造</title>
    <para>
     次のような構造は、
    </para>
<screen>ALL ALL = ALL</screen>
    <para>
     <literal>Defaults targetpw</literal>なしでは使用<emphasis>できません</emphasis>。そうしないと、だれでも<systemitem class="username">root</systemitem>としてコマンドを実行できるようになってしまいます。
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-sudo-usecases">
  <title>一般的な用途</title>

  <para>
   簡単なセットアップやデスクトップ環境では、たいていの場合はデフォルトの設定でも十分ですが、カスタム設定を使用すると便利な場合もあります。
  </para>

  <sect2 xml:id="sec-sudo-usecases-userpw">
   <title><systemitem class="username">root</systemitem>パスワードなしの<command>sudo</command>の使用</title>
   <para>
    これは、特殊な制限(<quote>ユーザXは、<systemitem class="username">root</systemitem></quote>としてのみコマンドYを実行できる)がある場合は不可能なことです。それ以外の場合も、コマンドの実行権限にある程度の区別を付けることが推奨されます。慣例では、<systemitem class="groupname">wheel</systemitem>グループのメンバーは、すべてのコマンドをrootとして<command>sudo</command>で実行できます。
   </para>
   <procedure>
    <step>
     <para>
      <systemitem class="groupname">wheel</systemitem>グループに自分自身を追加します。
     </para>
     <para>
      自分のユーザアカウントがまだ<systemitem class="groupname">wheel</systemitem>グループのメンバーでない場合は、<command>sudo usermod -a -G wheel <replaceable>USERNAME</replaceable></command>を実行してログアウトした後、再度ログインして追加します。<command>groups <replaceable>USERNAME</replaceable></command>を実行して、変更が成功したことを確認します。
     </para>
    </step>
    <step>
     <para>
      呼び出し元のユーザのパスワード(デフォルト)を使用して認証します。
     </para>
     <para>
      <command>visudo</command>(<xref linkend="sec-sudo-conf-edit"/>を参照)を使用して<filename>/etc/sudoers.d/userpw</filename>ファイルを作成し、次の文を追加します。
     </para>
<screen>Defaults !targetpw</screen>
    </step>
    <step>
     <para>
      新しいデフォルトのルールを選択します。
     </para>
     <para>
      ユーザにパスワードの再入力を求めるかどうかによって、<filename>/etc/sudoers</filename>の特定行のコメントを解除し、デフォルトのルールをコメントアウトします。
     </para>
<screen>
## Uncomment to allow members of group wheel to execute any command
# %wheel ALL=(ALL) ALL

## Same thing without a password
# %wheel ALL=(ALL) NOPASSWD: ALL
</screen>
    </step>
    <step>
     <para>
      デフォルトのルールにより厳しい制約を設けます。
     </para>
     <para>
      <filename>/etc/sudoers</filename>の、すべてを許可するルールをコメントアウトするか、削除します。
     </para>
<screen>ALL     ALL=(ALL) ALL   # WARNING! Only use this together with 'Defaults targetpw'!</screen>
     <warning>
      <title>sudoersの危険なルール</title>
      <para>
       このステップは忘れないでください。忘れると、「すべての」ユーザが「すべての」コマンドを<systemitem class="username">root</systemitem>として実行できるようになってしまいます。
      </para>
     </warning>
    </step>
    <step>
     <para>
      設定をテストします。
     </para>
     <para>
      <command>sudo</command>を、<systemitem class="groupname">wheel</systemitem>のメンバーとして、またはメンバー以外として実行してみてください。
     </para>
<screen>
<prompt>tux:~ &gt; </prompt>groups
users wheel
<prompt>tux:~ &gt; </prompt>sudo id -un
tux's password:
root
<prompt>wilber:~ &gt; </prompt>groups
users
<prompt>wilber:~ &gt; </prompt>sudo id -un
wilber is not in the sudoers file.  This incident will be reported.
          </screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-sudo-usecases-xorg">
   <title>X.Orgアプリケーションでの<command>sudo</command>の使用</title>
   <para>
    グラフィカルアプリケーションを<command>sudo</command>で起動すると、次のエラーが発生します。
   </para>
<screen>
<prompt>tux &gt; </prompt>sudo xterm
xterm: Xt error: Can't open display: %s
xterm: DISPLAY is not set
      </screen>
   <para>
    YaSTによって、グラフィカルインタフェースの代わりにncursesインタフェースが選択されます。
   </para>
   <para>
    <command>sudo</command>で開始したアプリケーションでX.Orgを使用するには、<envar>DISPLAY</envar>環境変数および<envar>XAUTHORITY</envar>環境変数を伝達する必要があります。これらの環境変数を設定するには、<filename>/etc/sudoers.d/xorg</filename>ファイル(<xref linkend="sec-sudo-conf-edit"/>を参照)を作成して、次の行を追加します。
   </para>
<screen>Defaults env_keep += "DISPLAY XAUTHORITY"</screen>
   <para>
    まだ設定されていない場合は、<envar>XAUTHORITY</envar>変数を次のように設定します。
   </para>
<screen>export XAUTHORITY=~/.Xauthority</screen>
   <para>
    これで、X.Orgアプリケーションを通常どおり実行できます。
   </para>
<screen>sudo yast2</screen>

  </sect2>
 </sect1>
 <sect1 xml:id="sec-adm-sudo-moreinfo">
  <title>詳細情報</title>

  <para>
   使用可能なコマンドラインスイッチに関する簡単な概要は、<command>sudo --help</command>を実行して参照できます。解説およびその他の重要な情報は<command>man 8 sudo</command>マニュアルページ、設定に関する説明は<command>man 5 sudoers</command>マニュアルページで参照できます。
  </para>
 </sect1>
</chapter>
