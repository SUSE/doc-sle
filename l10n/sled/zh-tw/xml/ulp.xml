<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ulp.xml" version="5.0" xml:id="cha-ulp" xml:lang="zh-tw">
  <title>使用者空間即時修補</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
    <abstract>
      <para>
        本章介紹使用者空間即時修補的基本原理和用法。
      </para>
    </abstract>
  </info>
  <sect1 xml:id="sec-ulp">
    <title>關於使用者空間即時修補</title>

    

    

    <para>
      使用者空間即時修補 (ULP) 是指在不中斷執行中程序的情況下，將修補程式套用至該程序所用程式庫的過程。每次以即時修補程式的形式提供安全性修正程式時，在套用即時修補程式後，客戶服務的安全性即會得到保障，而無需重新啟動相關程序。
    </para>

    <para>
      使用做為 <systemitem>libpulp</systemitem> 一部分的 <systemitem>ulp</systemitem> 工具來執行即時修補操作。<systemitem>libpulp</systemitem> 是一個由 <systemitem>libpulp.so</systemitem> 程式庫和 <command>ulp</command> 二進位檔案組成的架構。該二進位檔案用於使程式庫可即時修補，以及套用即時修補程式。
    </para>

    <tip>
      <para>
        您可以透過 <command>sudo</command> 機制，以一般使用者或特權使用者身分執行 <command>ulp</command> 指令。區別在於透過 <command>sudo</command> 執行 <command>ulp</command>，您可以檢視 <systemitem class="username">root</systemitem> 所執行程序或修補程序的資訊。
      </para>
    </tip>

    <sect2 xml:id="sec-ulp-prereqs">
      <title>先決條件</title>
      <para>
        若要使 ULP 正常運作，必須符合兩個要求。
      </para>
      <itemizedlist>
        
        <listitem os="sles;sled">
          <para>
            執行以下指令在系統上安裝 ULP：
          </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper in libpulp0 libpulp-tools</screen>
        </listitem>
        <listitem>
          <para>
            必須在載入 <systemitem>libpulp.so.0</systemitem> 程式庫之前啟動具有所需即時修補支援的應用程式。請參閱 <xref linkend="sec-ulp-libpulp"/>，以取得詳細資料。
          </para>
        </listitem>
      </itemizedlist>
    </sect2>

    <sect2 xml:id="sec-ulp-supported-libs">
      <title>受支援的程式庫</title>
      <para>
        目前僅支援 <systemitem>glibc</systemitem> 和 <systemitem>openssl</systemitem> (<systemitem>openssl1_1</systemitem>)。其他套件將在它們準備好即時修補後可用。若要接收 <systemitem>glibc</systemitem> 和 <systemitem>openssl</systemitem> 即時修補程式，請安裝 <package>glibc-livepatches</package> 和 <package>openssl-livepatches</package> 套件：
      </para>
<screen os="sled;sles"><prompt>&gt; </prompt>zypper install glibc-livepatches openssl-livepatches</screen>

      
    </sect2>

    <sect2 xml:id="sec-ulp-libpulp">
      <title>使用 <systemitem>libpulp</systemitem></title>
      <para>
        若要實現對某個應用程式的即時修補，您需要在啟動該應用程式時預先載入 <systemitem>libpulp.so.0</systemitem> 程式庫：
      </para>
<screen><prompt>&gt; </prompt>LD_PRELOAD=/usr/lib64/libpulp.so.0 <replaceable>APPLICATION_CMD</replaceable></screen>
      <sect3 xml:id="sec-ulp-livepatch-check">
        <title>檢查程式庫是否可即時修補</title>
        <para>
          若要檢查程式庫是否可即時修補，請使用以下指令：
        </para>
<screen><prompt>&gt; </prompt>ulp livepatchable <replaceable>PATH_TO_LIBRARY</replaceable></screen>
      </sect3>
      <sect3 xml:id="sec-ulp-livepatch-container-check">
        <title>檢查 <filename>.so</filename> 檔案是否為即時修補程式容器</title>
        <para>
          如果共用物件 (<filename>.so</filename>) 包含內嵌於其中的 ULP 修補程式描述，則表示其為即時修補程式容器。您可以使用以下指令驗證它：
        </para>
<screen><prompt>&gt; </prompt>readelf -S <replaceable>SHARED_OBJECT</replaceable> | grep .ulp</screen>
        <para>
          如果輸出顯示共用物件中有 <literal>.ulp</literal> 和 <literal>.ulp.rev</literal> 區段，則表示其為即時修補程式容器。
        </para>
      </sect3>
      <sect3 xml:id="sec-ulp-apply-livepatch">
        <title>套用即時修補程式</title>
        <para>
          可以使用 <command>ulp trigger</command> 指令套用即時修補程式，例如：
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> <replaceable>LIVEPATCH</replaceable>.so</screen>
        <para>
          以執行中程序 (使用要修補的程式庫) 的程序 ID 取代 <literal>PID</literal>，以實際的即時修補程式檔案取代 <literal>LIVEPATCH.so</literal>。該指令會傳回以下狀態訊息之一：
        </para>
        <variablelist>
          <varlistentry>
            <term>SUCCESS</term>
            <listitem>
              <para>
                即時修補操作成功完成。
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>SKIPPED</term>
            <listitem>
              <para>
                已跳過該修補程式，因為它不適用於程序中載入的任何程式庫。
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ERROR</term>
            <listitem>
              <para>
                發生錯誤，您可以檢查 <systemitem>libpulp</systemitem> 內部訊息緩衝區以獲得更多資訊。如需詳細資訊，請參閱<xref linkend="sec-ulp-internal-messages"/>。
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>
          您也可以使用萬用字元來套用多個即時修補程式，例如：
        </para>
<screen><prompt>&gt; </prompt>ulp trigger '*.so'</screen>
        <para>
          該指令會嘗試將目前資料夾中的每個修補程式套用至已載入 <systemitem>libpulp</systemitem> 程式庫的每個程序。如果修補程式不適合該程序，則會自動跳過該修補程式。最後，該工具會顯示它成功將多少個修補程式套用至多少個程序。
        </para>
      </sect3>
      <sect3 xml:id="sec-ulp-revert-livepatch">
        <title>還原即時修補程式</title>
        <para>
          您可以使用 <command>ulp trigger</command> 指令還原即時修補程式。可以透過兩種方式還原即時修補程式。您可以使用 <option>--revert</option> 參數傳遞即時修補程式容器，以回復即時修補程式：
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> --revert <replaceable>LIVEPATCH</replaceable>.so</screen>
        <para>
          或者，您也可以移除與特定程式庫關聯的所有修補程式，例如：
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> --revert-all=<replaceable>LIBRARY</replaceable></screen>
        <para>
          在該範例中，<replaceable>LIBRARY</replaceable> 指的是實際的程式庫，例如 <systemitem>libcrypto.so.1.1</systemitem>。
        </para>
        <para>
          當原始即時修補程式的原始碼不可用時，後一種方法可能很有用。或者，您希望在目標應用程式仍在執行安全代碼時，移除特定的舊修補程式並套用新修補程式，例如：
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable>  --revert-all=libcrypto.so.1.1 new_livepatch2.so</screen>
      </sect3>
      <sect3 xml:id="sec-ulp-verify-patches">
        <title>檢視套用的修補程式</title>
        <para>
          您可以執行以下指令來驗證已為哪些應用程式套用即時修補程式：
        </para>
<screen><prompt>&gt; </prompt>ulp patches</screen>
        <para>
          輸出會顯示可即時修補的程式庫和程式中載入的修補程式，以及修補程式解決的錯誤：
        </para>
<screen>PID: 10636, name: test
  Livepatchable libraries:
    in /lib64/libc.so.6:
      livepatch: libc_livepatch1.so
        bug labels: jsc#SLE-0000
    in /usr/lib64/libpulp.so.0:</screen>
        <para>
          您還可以查看即時修補程式修補的功能：
        </para>
<screen><prompt>&gt; </prompt>ulp dump <replaceable>LIVEPATCH.so</replaceable></screen>
      </sect3>
      <sect3 xml:id="sec-ulp-internal-messages">
        <title>檢視內部訊息佇列</title>
        <para>
          來自 <systemitem>libpulp.so</systemitem> 的記錄訊息儲存在程式庫內的緩衝區中，除非使用者提出要求，否則它們不會顯示。若要顯示這些訊息，請執行：
        </para>
<screen><prompt>&gt; </prompt>ulp messages -p <replaceable>PID</replaceable></screen>
      </sect3>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-ulp-info">
    <title>更多資訊</title>

    <para>
      專案的 <link xlink:href="https://github.com/SUSE/libpulp">Git
      repository</link> 中提供了有關 <systemitem>libpulp</systemitem> 的更多資訊。
    </para>
  </sect1>
</chapter>
