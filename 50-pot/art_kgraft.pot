msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-08-18 23:26+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Put one translator per line, in the form NAME <EMAIL>, YEAR1, YEAR2
msgctxt "_"
msgid "translator-credits"
msgstr ""

#. (itstool) path: article/title
#: xml/art_kgraft.xml:14
msgid "Live Kernel Patching Using kGraft"
msgstr ""

#. (itstool) path: article/subtitle
#: xml/art_kgraft.xml:15
msgid "<phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase> <phrase role=\"productnumber\"><phrase os=\"osuse\">42.3</phrase><phrase os=\"sles;sled;slerte\">12 SP3</phrase></phrase>"
msgstr ""

#. (itstool) path: info/productname
#: xml/art_kgraft.xml:21
msgid "<phrase role=\"productname\"><phrase os=\"osuse\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os=\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>"
msgstr ""

#. (itstool) path: info/productnumber
#: xml/art_kgraft.xml:22
msgid "<phrase role=\"productnumber\"><phrase os=\"osuse\">42.3</phrase><phrase os=\"sles;sled;slerte\">12 SP3</phrase></phrase>"
msgstr ""

#. (itstool) path: abstract/para
#: xml/art_kgraft.xml:24
msgid "This document describes the basic principles of the kGraft live patching technology and provides usage guidelines for the SLE Live Patching service."
msgstr ""

#. (itstool) path: abstract/para
#: xml/art_kgraft.xml:29
msgid "kGraft is a live patching technology for runtime patching of the Linux kernel, without stopping the kernel. This maximizes system uptime, and thus system availability, which is important for mission-critical systems. By allowing dynamic patching of the kernel, the technology also encourages users to install critical security updates without deferring them to a scheduled downtime."
msgstr ""

#. (itstool) path: abstract/para
#: xml/art_kgraft.xml:37
msgid "A kGraft patch is a kernel module, intended for replacing whole functions in the kernel. kGraft primarily offers in-kernel infrastructure for integration of the patched code with base kernel code at runtime."
msgstr ""

#. (itstool) path: abstract/para
#: xml/art_kgraft.xml:43
msgid "SLE Live Patching is a service provided on top of regular SUSE Linux Enterprise Server maintenance. kGraft patches distributed through SLE Live Patching supplement regular SLES maintenance updates. Common update stack and procedures can be used for SLE Live Patching deployment."
msgstr ""

#. (itstool) path: sect1/title
#: xml/art_kgraft.xml:53
msgid "Advantages of kGraft"
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:55
msgid "Live kernel patching using kGraft is especially useful for quick response in emergencies (when serious vulnerabilities are known and should be fixed when possible or there are serious system stability issues with a known fix). It is not used for scheduled updates where time is not critical."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:63
msgid "Typical use cases for kGraft include systems like memory databases with huge amounts of RAM, where boot-up times of 15 minutes or more are no exception, large simulations that need weeks or months without a restart, or infrastructure building blocks providing continuous service to a large number of consumers."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:71
msgid "The main advantage of kGraft is that it never requires stopping the kernel, not even for a short time period."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:76
msgid "A kGraft patch is a <filename>.ko</filename> kernel module in a KMP RPM package. It is inserted into the kernel using the <command>insmod</command> command when the RPM package is installed or updated. kGraft replaces whole functions in the kernel, even if they are being executed. An updated kGraft module can replace an existing patch if necessary."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:85
msgid "kGraft is also leanâ€”it contains only a small amount of code, because it leverages other standard Linux technologies."
msgstr ""

#. (itstool) path: sect1/title
#: xml/art_kgraft.xml:91
msgid "Low-level Function of kGraft"
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:93
msgid "kGraft uses the ftrace infrastructure to perform patching. The following describes the implementation on the x86-64 architecture."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:98
msgid "To patch a kernel function, kGraft needs some space at the start of the function to insert a jump to a new function. This space is allocated during kernel compilation by GCC with function profiling turned on. In particular, a 5-byte call instruction is injected to the start of kernel functions. When such instrumented kernel is booting, profiling calls are replaced by 5-byte NOP (no operation) instructions."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:107
msgid "After patching starts, the first byte is replaced by the INT3 (breakpoint) instruction. This ensures atomicity of the 5-byte instruction replacement. The other four bytes are replaced by the address to the new function. Finally, the first byte is replaced by the JMP (long jump) opcode."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:115
msgid "Inter-processor non-maskable interrupts (IPI NMI) are used throughout the process to flush speculative decoding queues of other CPUs in the system. This allows switching to the new function without ever stopping the kernel, not even for a very short moment. The interruptions by IPI NMIs can be measured in microseconds and are not considered service interruptions as they happen while the kernel is running in any case."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:124
msgid "Callers are never patched. Instead, callees' NOPs are replaced by a JMP to the new function. JMP instructions remain forever. This takes care of function pointers, including in structures, and does not require saving any old data for the possibility of un-patching."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:131
msgid "However, these steps alone would not be good enough: since the functions would be replaced non-atomically, a new fixed function in one part of the kernel could still be calling an old function elsewhere or vice versa. If the semantics of the function interfaces changed in the patch, chaos would ensue."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:139
msgid "Thus, until all functions are replaced, kGraft uses an approach based on trampolines and similar to RCU (read-copy-update), to ensure a consistent view of the world to each user space thread, kernel thread and kernel interrupt. A per-thread flag is set on each kernel entry and exit. This way, an old function would always call another old function and a new function always a new one. Once all processes have the \"new universe\" flag set, patching is complete, trampolines can be removed and the code can operate at full speed without performance impact other than an extra-long jump for each patched function."
msgstr ""

#. (itstool) path: sect1/title
#: xml/art_kgraft.xml:152
msgid "Installing kGraft Patches"
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:154
msgid "This section describes the activation of the SUSE Linux Enterprise Live Patching extension and the installation of kGraft patches."
msgstr ""

#. (itstool) path: sect2/title
#: xml/art_kgraft.xml:160
msgid "Activation of SLE Live Patching"
msgstr ""

#. (itstool) path: sect2/para
#: xml/art_kgraft.xml:161
msgid "To activate SLE Live Patching on your system, follow these steps:"
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:166
msgid "If your SLES system is not yet registered, register it. Registration can be done during the system installation or later using the YaST <guimenu>Product Registration</guimenu> module (<command>yast2 registration</command>). After registration, click <guimenu>Yes</guimenu> to see the list of available online updates."
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:173
msgid "If your SLES system is already registered, but SLE Live Patching is not yet activated, open the YaST <guimenu>Product Registration</guimenu> module (<command>yast2 registration</command>) and click <guimenu>Select Extensions</guimenu>."
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:181
msgid "Select <guimenu>SUSE Linux Enterprise Live Patching 12</guimenu> in the list of available extensions and click <guimenu>Next</guimenu>."
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:187
msgid "Confirm the license terms and click <guimenu>Next</guimenu>."
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:192
msgid "Enter the SLE Live Patching registration code and click <guimenu>Next</guimenu>."
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:198
msgid "Check the <guimenu>Installation Summary</guimenu> and selected <guimenu>Patterns</guimenu>. The pattern <systemitem>Live Patching</systemitem> should be selected for installation."
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:205
msgid "Click <guimenu>Accept</guimenu> to complete the installation. This will install the base kGraft components on your system together with the initial live patch."
msgstr ""

#. (itstool) path: sect2/title
#: xml/art_kgraft.xml:215
msgid "Updating System"
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:218
msgid "SLE Live Patching updates are distributed in a form that allows using standard SLE update stack for patch application. The initial live patch can be updated using <command>zypper patch</command>, YaST2 Online Update or equivalent method."
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:226
msgid "The kernel is patched automatically during the package installation. However, invocations of the old kernel functions are not completely eliminated until all sleeping processes wake up and get out of the way. This can take a considerable amount of time. Despite this, sleeping processes that use the old kernel functions are not considered a security issue. Nevertheless, in the current version of kGraft, it is not possible to apply another kGraft patch until all processes cross the kernel space to user space boundary to use patched functions from the previous patch."
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:237
msgid "To see the global status of patching, check the flag in <filename>/sys/kernel/kgraft/in_progress</filename>. The value <literal>1</literal> signifies the existence of sleeping processes that still need to be woken (the patching is still in progress). The value <literal>0</literal> signifies that all processes are using solely the patched functions and patching has finished already. Alternatively, use the <command>kgr status</command> command to obtain the same information."
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:247
msgid "The flag can be checked on a per-process basis too. Check the number in <filename>/proc/<replaceable>PROCESS_NUMBER</replaceable>/kgr_in_progress</filename> for each process individually. Again, the value <literal>1</literal> signifies sleeping process that still needs to be woken. Alternatively, use the <command>kgr blocking</command> command to output the list of sleeping processes."
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:258
msgid "It is up to the system administrator to decide how to deal with the sleeping processes. One possibility is to wait, another possibility is to send a SIGSTOP signal followed by a SIGCONT signal to all the sleeping processes. It can be achieved easily using the <command>kgr poke</command> command. Running processes are not interrupted."
msgstr ""

#. (itstool) path: sect1/title
#: xml/art_kgraft.xml:272
msgid "Removing a kGraft Patch"
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:274
msgid "To remove a kGraft patch, use the following procedure:"
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:287
msgid "First remove the patch itself using zypper:"
msgstr ""

#. (itstool) path: step/screen
#: xml/art_kgraft.xml:290
#, no-wrap
msgid ""
"\n"
"    zypper rm kgraft-patch-<replaceable>3_12_32-25-default</replaceable>\n"
"   "
msgstr ""

#. (itstool) path: step/para
#: xml/art_kgraft.xml:295
msgid "Then reboot the machine."
msgstr ""

#. (itstool) path: sect1/title
#: xml/art_kgraft.xml:302
msgid "Stuck Kernel Execution Threads"
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:304
msgid "Kernel threads need to be prepared to handle kGraft. Third-party software may not be completely ready for kGraft adoption and its kernel modules may spawn kernel execution threads. These threads will block the patching process indefinitely. As an emergency measure kGraft offers the possibility to force finishing of the patching process without waiting for all execution threads to cross the safety checkpoint. This can be achieved by writing <literal>0</literal> into <filename>/sys/kernel/kgraft/in_progress</filename>. Consult SUSE Support before performing this procedure."
msgstr ""

#. (itstool) path: sect1/title
#: xml/art_kgraft.xml:333
msgid "The <command>kgr</command> Tool"
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:335
msgid "Several kGraft management tasks can be simplified with the <command>kgr</command> tool. The available commands are:"
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/art_kgraft.xml:342
msgid "<command>kgr status</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/art_kgraft.xml:345
msgid "Displays the overall status of kGraft patching (<literal>ready</literal> or <literal>in_progress</literal>)."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/art_kgraft.xml:354
msgid "<command>kgr patches</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/art_kgraft.xml:357
msgid "Displays the list of loaded kGraft patches."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/art_kgraft.xml:363
msgid "<command>kgr blocking</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/art_kgraft.xml:366
msgid "Lists processes that are preventing kGraft patching from finishing. By default just the PIDs are listed. Specifying <option>-v</option> prints out command lines if available. Another <option>-v</option> displays also stack traces."
msgstr ""

#. (itstool) path: varlistentry/term
#: xml/art_kgraft.xml:375
msgid "<command>kgr poke</command>"
msgstr ""

#. (itstool) path: listitem/para
#: xml/art_kgraft.xml:378
msgid "Sends SIGSTOP and SIGCONT to all processess that are blocking kGraft patching from finishing."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:386
msgid "For detailed information, see <command>man kgr</command>."
msgstr ""

#. (itstool) path: sect1/title
#: xml/art_kgraft.xml:391
msgid "Scope of kGraft Technology"
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:393
msgid "kGraft is based on replacing functions. Data structure alteration can be accomplished only indirectly with kGraft. As a result, changes to kernel data structure require special care and, if the change is too large, rebooting might be required. kGraft also might not be able to handle situations where one compiler is used to compile the old kernel and another compiler is used for compiling the patch."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:402
msgid "Because of the way kGraft works, support for third-party modules that are spawning kernel threads is limited."
msgstr ""

#. (itstool) path: sect1/title
#: xml/art_kgraft.xml:411
msgid "Scope of SLE Live Patching"
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:413
msgid "Fixes for SUSE CVSS (Common Vulnerability Scoring System) level 6+ vulnerabilities and bug fixes related to system stability or data corruption will be shipped in the scope of SLE Live Patching. It might not be possible to produce a live patch for all kinds of fixes fulfilling the above criteria. SUSE reserves the right to skip fixes where production of a kernel live patch is unviable because of technical reasons. For more information on CVSS, which is the base for the SUSE CVSS rating, see <link xlink:href=\"http://nvd.nist.gov/cvss.cfm/\"/>."
msgstr ""

#. (itstool) path: sect1/title
#: xml/art_kgraft.xml:425
msgid "Interaction with the Support Processes"
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:427
msgid "In the course of resolving a technical difficulty with SUSE Support, you may receive a so-called Program Temporary Fix (PTF). PTFs may be issued for various packages including those forming the base of SLE Live Patching."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:434
msgid "kGraft PTFs complying with the conditions described in the previous section can be installed as usual and SUSE will ensure that the system in question does not need to be rebooted and that future live updates are applied cleanly."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:441
msgid "PTFs issued for the base kernel disrupt the live patching process. First, installing the PTF kernel means a reboot as the kernel cannot be replaced as a whole at runtime. Second, another reboot is needed to replace the PTF with any regular maintenance updates for which the live patches are issued."
msgstr ""

#. (itstool) path: sect1/para
#: xml/art_kgraft.xml:449
msgid "PTFs for other packages in SLE Live Patching can be treated like regular PTFs with the usual guarantees."
msgstr ""

