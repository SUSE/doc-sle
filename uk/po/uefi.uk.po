msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-08-18 22:19+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Put one translator per line, in the form NAME <EMAIL>, YEAR1, YEAR2
msgctxt "_"
msgid "translator-credits"
msgstr "translator-credits"

#. (itstool) path: chapter/title
#: xml/uefi.xml:22
msgid "UEFI (Unified Extensible Firmware Interface)"
msgstr "UEFI (Unified Extensible Firmware Interface)"

#. (itstool) path: docmanager/translation
#: xml/uefi.xml:26
msgid "yes"
msgstr "yes"

#. (itstool) path: chapter/para
#: xml/uefi.xml:29
msgid ""
"UEFI (Unified Extensible Firmware Interface) is the interface between the "
"firmware that comes with the system hardware, all the hardware components of "
"the system, and the operating system."
msgstr ""
"UEFI (Unified Extensible Firmware Interface) is the interface between the "
"firmware that comes with the system hardware, all the hardware components of "
"the system, and the operating system."

#. (itstool) path: chapter/para
#: xml/uefi.xml:34
msgid ""
"UEFI is becoming more and more available on PC systems and thus is replacing "
"the traditional PC-BIOS. UEFI, for example, properly supports 64-bit systems "
"and offers secure booting (<quote>Secure Boot</quote>, firmware version "
"2.3.1c or better required), which is one of its most important features. "
"Lastly, with UEFI a standard firmware will become available on all x86 "
"platforms."
msgstr ""
"UEFI is becoming more and more available on PC systems and thus is replacing "
"the traditional PC-BIOS. UEFI, for example, properly supports 64-bit systems "
"and offers secure booting (<quote>Secure Boot</quote>, firmware version "
"2.3.1c or better required), which is one of its most important features. "
"Lastly, with UEFI a standard firmware will become available on all x86 "
"platforms."

#. (itstool) path: chapter/para
#: xml/uefi.xml:42
msgid "UEFI additionally offers the following advantages:"
msgstr "UEFI additionally offers the following advantages:"

#. (itstool) path: listitem/para
#: xml/uefi.xml:47
msgid ""
"Booting from large disks (over 2 TiB) with a GUID Partition Table (GPT)."
msgstr ""
"Booting from large disks (over 2 TiB) with a GUID Partition Table (GPT)."

#. (itstool) path: listitem/para
#: xml/uefi.xml:52
msgid "CPU-independent architecture and drivers."
msgstr "CPU-independent architecture and drivers."

#. (itstool) path: listitem/para
#: xml/uefi.xml:57
msgid "Flexible pre-OS environment with network capabilities."
msgstr "Flexible pre-OS environment with network capabilities."

#. (itstool) path: listitem/para
#: xml/uefi.xml:62
msgid ""
"CSM (Compatibility Support Module) to support booting legacy operating "
"systems via a PC-BIOS-like emulation."
msgstr ""
"CSM (Compatibility Support Module) to support booting legacy operating "
"systems via a PC-BIOS-like emulation."

#. (itstool) path: chapter/para
#: xml/uefi.xml:68
msgid ""
"For more information, see <link xlink:href=\"http://en.wikipedia.org/wiki/"
"Unified_Extensible_Firmware_Interface\"/>. The following sections are not "
"meant as a general UEFI overview; these are only hints about how some "
"features are implemented in <phrase role=\"productname\"><phrase os=\"osuse"
"\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</"
"phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os="
"\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>."
msgstr ""
"For more information, see <link xlink:href=\"http://en.wikipedia.org/wiki/"
"Unified_Extensible_Firmware_Interface\"/>. The following sections are not "
"meant as a general UEFI overview; these are only hints about how some "
"features are implemented in <phrase role=\"productname\"><phrase os=\"osuse"
"\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</"
"phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os="
"\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>."

#. (itstool) path: sect1/title
#: xml/uefi.xml:75
msgid "Secure Boot"
msgstr "Secure Boot"

#. (itstool) path: sect1/para
#: xml/uefi.xml:79
msgid ""
"In the world of UEFI, securing the bootstrapping process means establishing "
"a chain of trust. The <quote>platform</quote> is the root of this chain of "
"trust; in the context of <phrase role=\"productname\"><phrase os=\"osuse"
"\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</"
"phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os="
"\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>, the "
"mainboard and the on-board firmware could be considered the <quote>platform</"
"quote>. In other words, it is the hardware vendor, and the chain of trust "
"flows from that hardware vendor to the component manufacturers, the OS "
"vendors, etc."
msgstr ""
"In the world of UEFI, securing the bootstrapping process means establishing "
"a chain of trust. The <quote>platform</quote> is the root of this chain of "
"trust; in the context of <phrase role=\"productname\"><phrase os=\"osuse"
"\">openSUSE Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</"
"phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os="
"\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>, the "
"mainboard and the on-board firmware could be considered the <quote>platform</"
"quote>. In other words, it is the hardware vendor, and the chain of trust "
"flows from that hardware vendor to the component manufacturers, the OS "
"vendors, etc."

#. (itstool) path: sect1/para
#: xml/uefi.xml:87
msgid ""
"The trust is expressed via public key cryptography. The hardware vendor puts "
"a so-called Platform Key (PK) into the firmware, representing the root of "
"trust. The trust relationship with operating system vendors and others is "
"documented by signing their keys with the Platform Key."
msgstr ""
"The trust is expressed via public key cryptography. The hardware vendor puts "
"a so-called Platform Key (PK) into the firmware, representing the root of "
"trust. The trust relationship with operating system vendors and others is "
"documented by signing their keys with the Platform Key."

#. (itstool) path: sect1/para
#: xml/uefi.xml:94
msgid ""
"Finally, security is established by requiring that no code will be executed "
"by the firmware unless it has been signed by one of these <quote>trusted</"
"quote> keys—be it an OS boot loader, some driver located in the flash memory "
"of some PCI Express card or on disk, or be it an update of the firmware "
"itself."
msgstr ""
"Finally, security is established by requiring that no code will be executed "
"by the firmware unless it has been signed by one of these <quote>trusted</"
"quote> keys—be it an OS boot loader, some driver located in the flash memory "
"of some PCI Express card or on disk, or be it an update of the firmware "
"itself."

#. (itstool) path: sect1/para
#: xml/uefi.xml:102
msgid ""
"To use Secure Boot, you need to have your OS loader signed with a key "
"trusted by the firmware, and you need the OS loader to verify that the "
"kernel it loads can be trusted."
msgstr ""
"To use Secure Boot, you need to have your OS loader signed with a key "
"trusted by the firmware, and you need the OS loader to verify that the "
"kernel it loads can be trusted."

#. (itstool) path: sect1/para
#: xml/uefi.xml:108
msgid ""
"Key Exchange Keys (KEK) can be added to the UEFI key database. This way, you "
"can use other certificates, as long as they are signed with the private part "
"of the PK."
msgstr ""
"Key Exchange Keys (KEK) can be added to the UEFI key database. This way, you "
"can use other certificates, as long as they are signed with the private part "
"of the PK."

#. (itstool) path: sect2/title
#: xml/uefi.xml:118
msgid ""
"Implementation on <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE "
"Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</"
"phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os="
"\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>"
msgstr ""
"Implementation on <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE "
"Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</"
"phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os="
"\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>"

#. (itstool) path: sect2/para
#: xml/uefi.xml:119
msgid "Microsoft’s Key Exchange Key (KEK) is installed by default."
msgstr "Microsoft’s Key Exchange Key (KEK) is installed by default."

#. (itstool) path: note/title
#: xml/uefi.xml:123
msgid "GUID Partitioning Table (GPT) Required"
msgstr "GUID Partitioning Table (GPT) Required"

#. (itstool) path: note/para
#: xml/uefi.xml:124
msgid ""
"The Secure Boot feature is enabled by default on UEFI/x86_64 installations. "
"You can find the <guimenu>Enable Secure Boot Support</guimenu> option in the "
"<guimenu>Boot Code Options</guimenu> tab of the <guimenu>Boot Loader "
"Settings</guimenu> dialog. It supports booting when the secure boot is "
"activated in the firmware, while making it possible to boot when it is "
"deactivated."
msgstr ""
"The Secure Boot feature is enabled by default on UEFI/x86_64 installations. "
"You can find the <guimenu>Enable Secure Boot Support</guimenu> option in the "
"<guimenu>Boot Code Options</guimenu> tab of the <guimenu>Boot Loader "
"Settings</guimenu> dialog. It supports booting when the secure boot is "
"activated in the firmware, while making it possible to boot when it is "
"deactivated."

#. (itstool) path: figure/title
#: xml/uefi.xml:133
msgid "Secure Boot Support"
msgstr "Secure Boot Support"

#. (itstool) path: imageobject/imagedata
#. This is a reference to an external file such as an image or video. When
#. the file changes, the md5 hash will change to let you know you need to
#. update your localized copy. The msgstr is not used at all. Set it to
#. whatever you like once you have updated your copy of the file.
#: xml/uefi.xml:136 xml/uefi.xml:139
msgctxt "_"
msgid "external ref='yast2_bootloader_boot_code_efi.png' md5='__failed__'"
msgstr "external ref='yast2_bootloader_boot_code_efi.png' md5='__failed__'"

#. (itstool) path: note/para
#: xml/uefi.xml:143
msgid ""
"The Secure Boot feature requires that a GUID Partitioning Table (GPT) "
"replaces the old partitioning with a Master Boot Record (MBR). If YaST "
"detects EFI mode during the installation, it will try to create a GPT "
"partition. UEFI expects to find the EFI programs on a FAT-formatted EFI "
"System Partition (ESP)."
msgstr ""
"The Secure Boot feature requires that a GUID Partitioning Table (GPT) "
"replaces the old partitioning with a Master Boot Record (MBR). If YaST "
"detects EFI mode during the installation, it will try to create a GPT "
"partition. UEFI expects to find the EFI programs on a FAT-formatted EFI "
"System Partition (ESP)."

#. (itstool) path: sect2/para
#: xml/uefi.xml:152
msgid ""
"Supporting UEFI Secure Boot essentially requires having a boot loader with a "
"digital signature that the firmware recognizes as a trusted key. That key is "
"trusted by the firmware a priori, without requiring any manual intervention."
msgstr ""
"Supporting UEFI Secure Boot essentially requires having a boot loader with a "
"digital signature that the firmware recognizes as a trusted key. That key is "
"trusted by the firmware a priori, without requiring any manual intervention."

#. (itstool) path: sect2/para
#: xml/uefi.xml:158
msgid ""
"There are two ways of getting there. One is to work with hardware vendors to "
"have them endorse a SUSE key, which SUSE then signs the boot loader with. "
"The other way is to go through Microsoft’s Windows Logo Certification "
"program to have the boot loader certified and have Microsoft recognize the "
"SUSE signing key (that is, have it signed with their KEK). By now, SUSE got "
"the loader signed by UEFI Signing Service (that is Microsoft in this case)."
msgstr ""
"There are two ways of getting there. One is to work with hardware vendors to "
"have them endorse a SUSE key, which SUSE then signs the boot loader with. "
"The other way is to go through Microsoft’s Windows Logo Certification "
"program to have the boot loader certified and have Microsoft recognize the "
"SUSE signing key (that is, have it signed with their KEK). By now, SUSE got "
"the loader signed by UEFI Signing Service (that is Microsoft in this case)."

#. (itstool) path: figure/title
#: xml/uefi.xml:170
msgid "UEFI: Secure Boot Process"
msgstr "UEFI: Secure Boot Process"

#. (itstool) path: imageobject/imagedata
#. This is a reference to an external file such as an image or video. When
#. the file changes, the md5 hash will change to let you know you need to
#. update your localized copy. The msgstr is not used at all. Set it to
#. whatever you like once you have updated your copy of the file.
#: xml/uefi.xml:173 xml/uefi.xml:176
msgctxt "_"
msgid "external ref='uefi-secure-boot-mok2.png' md5='__failed__'"
msgstr "external ref='uefi-secure-boot-mok2.png' md5='__failed__'"

#. (itstool) path: sect2/para
#: xml/uefi.xml:180
msgid ""
"At the implementation layer, SUSE uses the <systemitem>shim</systemitem> "
"loader which is installed by default. It is a smart solution that avoids "
"legal issues, and simplifies the certification and signing step "
"considerably. The <systemitem>shim</systemitem> loader’s job is to load a "
"boot loader such as GRUB 2 and verify it; this boot loader in turn will load "
"kernels signed by a SUSE key only. <phrase os=\"sles;sled\">SUSE provides "
"this functionality since SLE11 SP3 on fresh installations with UEFI Secure "
"Boot enabled.</phrase>"
msgstr ""
"At the implementation layer, SUSE uses the <systemitem>shim</systemitem> "
"loader which is installed by default. It is a smart solution that avoids "
"legal issues, and simplifies the certification and signing step "
"considerably. The <systemitem>shim</systemitem> loader’s job is to load a "
"boot loader such as GRUB 2 and verify it; this boot loader in turn will load "
"kernels signed by a SUSE key only. <phrase os=\"sles;sled\">SUSE provides "
"this functionality since SLE11 SP3 on fresh installations with UEFI Secure "
"Boot enabled.</phrase>"

#. (itstool) path: sect2/para
#: xml/uefi.xml:190
msgid "There are two types of trusted users:"
msgstr "There are two types of trusted users:"

#. (itstool) path: listitem/para
#: xml/uefi.xml:195
msgid ""
"First, those who hold the keys. The Platform Key (PK) allows almost "
"everything. The Key Exchange Key (KEK) allows all a PK can except changing "
"the PK."
msgstr ""
"First, those who hold the keys. The Platform Key (PK) allows almost "
"everything. The Key Exchange Key (KEK) allows all a PK can except changing "
"the PK."

#. (itstool) path: listitem/para
#: xml/uefi.xml:202
msgid ""
"Second, anyone with physical access to the machine. A user with physical "
"access can reboot the machine, and configure UEFI."
msgstr ""
"Second, anyone with physical access to the machine. A user with physical "
"access can reboot the machine, and configure UEFI."

#. (itstool) path: sect2/para
#: xml/uefi.xml:208
msgid "UEFI offers two types of variables to fulfill the needs of those users:"
msgstr ""
"UEFI offers two types of variables to fulfill the needs of those users:"

#. (itstool) path: listitem/para
#: xml/uefi.xml:213
msgid ""
"The first is the so-called <quote>Authenticated Variables</quote>, which can "
"be updated from both within the boot process (the so-called Boot Services "
"Environment) and the running OS. This can be done only when the new value of "
"the variable is signed with the same key that the old value of the variable "
"was signed with. And they can only be appended to or changed to a value with "
"a higher serial number."
msgstr ""
"The first is the so-called <quote>Authenticated Variables</quote>, which can "
"be updated from both within the boot process (the so-called Boot Services "
"Environment) and the running OS. This can be done only when the new value of "
"the variable is signed with the same key that the old value of the variable "
"was signed with. And they can only be appended to or changed to a value with "
"a higher serial number."

#. (itstool) path: listitem/para
#: xml/uefi.xml:223
msgid ""
"The second is the so-called <quote>Boot Services Only Variables</quote>. "
"These variables are accessible to any code that runs during the boot "
"process. After the boot process ends and before the OS starts, the boot "
"loader must call the <literal>ExitBootServices</literal> call. After that, "
"these variables are no longer accessible, and the OS cannot touch them."
msgstr ""
"The second is the so-called <quote>Boot Services Only Variables</quote>. "
"These variables are accessible to any code that runs during the boot "
"process. After the boot process ends and before the OS starts, the boot "
"loader must call the <literal>ExitBootServices</literal> call. After that, "
"these variables are no longer accessible, and the OS cannot touch them."

#. (itstool) path: sect2/para
#: xml/uefi.xml:233
msgid ""
"The various UEFI key lists are of the first type, as this allows online "
"updating, adding, and blacklisting of keys, drivers, and firmware "
"fingerprints. It is the second type of variable, the <quote>Boot Services "
"Only Variable</quote>, that helps to implement Secure Boot in a secure and "
"open source-friendly manner, and thus compatible with GPLv3."
msgstr ""
"The various UEFI key lists are of the first type, as this allows online "
"updating, adding, and blacklisting of keys, drivers, and firmware "
"fingerprints. It is the second type of variable, the <quote>Boot Services "
"Only Variable</quote>, that helps to implement Secure Boot in a secure and "
"open source-friendly manner, and thus compatible with GPLv3."

#. (itstool) path: sect2/para
#: xml/uefi.xml:241
msgid ""
"SUSE starts with <systemitem>shim</systemitem>—a small and simple EFI boot "
"loader signed by SUSE and Microsoft."
msgstr ""
"SUSE starts with <systemitem>shim</systemitem>—a small and simple EFI boot "
"loader signed by SUSE and Microsoft."

#. (itstool) path: sect2/para
#: xml/uefi.xml:245
msgid "This allows <systemitem>shim</systemitem> to load and execute."
msgstr "This allows <systemitem>shim</systemitem> to load and execute."

#. (itstool) path: sect2/para
#: xml/uefi.xml:248
msgid ""
"<systemitem>shim</systemitem> then goes on to verify that the boot loader it "
"wants to load is trusted. In a default situation <systemitem>shim</"
"systemitem> will use an independent SUSE certificate embedded in its body. "
"In addition, <systemitem>shim</systemitem> will allow to <quote>enroll</"
"quote> additional keys, overriding the default SUSE key. In the following, "
"we call them <quote>Machine Owner Keys</quote> or MOKs for short."
msgstr ""
"<systemitem>shim</systemitem> then goes on to verify that the boot loader it "
"wants to load is trusted. In a default situation <systemitem>shim</"
"systemitem> will use an independent SUSE certificate embedded in its body. "
"In addition, <systemitem>shim</systemitem> will allow to <quote>enroll</"
"quote> additional keys, overriding the default SUSE key. In the following, "
"we call them <quote>Machine Owner Keys</quote> or MOKs for short."

#. (itstool) path: sect2/para
#: xml/uefi.xml:259
msgid ""
"Next the boot loader will verify and then boot the kernel, and the kernel "
"will do the same on the modules."
msgstr ""
"Next the boot loader will verify and then boot the kernel, and the kernel "
"will do the same on the modules."

#. (itstool) path: sect2/title
#: xml/uefi.xml:266
msgid "MOK (Machine Owner Key)"
msgstr "MOK (Machine Owner Key)"

#. (itstool) path: sect2/para
#: xml/uefi.xml:276
msgid ""
"If the user (<quote>machine owner</quote>) wants to replace any components "
"of the boot process, Machine Owner Keys (MOKs) are to be used. The "
"<systemitem>mokutils</systemitem> tool will help with signing components and "
"managing MOKs."
msgstr ""
"If the user (<quote>machine owner</quote>) wants to replace any components "
"of the boot process, Machine Owner Keys (MOKs) are to be used. The "
"<systemitem>mokutils</systemitem> tool will help with signing components and "
"managing MOKs."

#. (itstool) path: sect2/para
#: xml/uefi.xml:282
msgid ""
"The enrollment process begins with rebooting the machine and interrupting "
"the boot process (for example, pressing a key) when <systemitem>shim</"
"systemitem> loads. <systemitem>shim</systemitem> will then go into "
"enrollment mode, allowing the user to replace the default SUSE key with keys "
"from a file on the boot partition. If the user chooses to do so, "
"<systemitem>shim</systemitem> will then calculate a hash of that file and "
"put the result in a <quote>Boot Services Only</quote> variable. This allows "
"<systemitem>shim</systemitem> to detect any change of the file made outside "
"of Boot Services and thus avoid tampering with the list of user-approved "
"MOKs."
msgstr ""
"The enrollment process begins with rebooting the machine and interrupting "
"the boot process (for example, pressing a key) when <systemitem>shim</"
"systemitem> loads. <systemitem>shim</systemitem> will then go into "
"enrollment mode, allowing the user to replace the default SUSE key with keys "
"from a file on the boot partition. If the user chooses to do so, "
"<systemitem>shim</systemitem> will then calculate a hash of that file and "
"put the result in a <quote>Boot Services Only</quote> variable. This allows "
"<systemitem>shim</systemitem> to detect any change of the file made outside "
"of Boot Services and thus avoid tampering with the list of user-approved "
"MOKs."

#. (itstool) path: sect2/para
#: xml/uefi.xml:294
msgid ""
"All of this happens during boot time—only verified code is executing now. "
"Therefore, only a user present at the console can use the machine owner's "
"set of keys. It cannot be malware or a hacker with remote access to the OS "
"because hackers or malware can only change the file, but not the hash stored "
"in the <quote>Boot Services Only</quote> variable."
msgstr ""
"All of this happens during boot time—only verified code is executing now. "
"Therefore, only a user present at the console can use the machine owner's "
"set of keys. It cannot be malware or a hacker with remote access to the OS "
"because hackers or malware can only change the file, but not the hash stored "
"in the <quote>Boot Services Only</quote> variable."

#. (itstool) path: sect2/para
#: xml/uefi.xml:301
msgid ""
"The boot loader, after having been loaded and verified by <systemitem>shim</"
"systemitem>, will call back to <systemitem>shim</systemitem> when it wants "
"to verify the kernel—to avoid duplication of the verification code. "
"<systemitem>Shim</systemitem> will use the same list of MOKs for this and "
"tell the boot loader whether it can load the kernel."
msgstr ""
"The boot loader, after having been loaded and verified by <systemitem>shim</"
"systemitem>, will call back to <systemitem>shim</systemitem> when it wants "
"to verify the kernel—to avoid duplication of the verification code. "
"<systemitem>Shim</systemitem> will use the same list of MOKs for this and "
"tell the boot loader whether it can load the kernel."

#. (itstool) path: sect2/para
#: xml/uefi.xml:309
msgid ""
"This way, you can install your own kernel or boot loader. It is only "
"necessary to install a new set of keys and authorize them by being "
"physically present during the first reboot. Because MOKs are a list and not "
"not a single MOK, you can make <systemitem>shim</systemitem> trust keys from "
"several vendors, allowing dual- and multi-boot from the boot loader."
msgstr ""
"This way, you can install your own kernel or boot loader. It is only "
"necessary to install a new set of keys and authorize them by being "
"physically present during the first reboot. Because MOKs are a list and not "
"not a single MOK, you can make <systemitem>shim</systemitem> trust keys from "
"several vendors, allowing dual- and multi-boot from the boot loader."

#. (itstool) path: sect2/title
#: xml/uefi.xml:319
msgid "Booting a Custom Kernel"
msgstr "Booting a Custom Kernel"

#. (itstool) path: sect2/para
#: xml/uefi.xml:320
msgid ""
"The following is based on <link xlink:href=\"http://en.opensuse.org/openSUSE:"
"UEFI#Booting_a_custom_kernel\"/>."
msgstr ""
"The following is based on <link xlink:href=\"http://en.opensuse.org/openSUSE:"
"UEFI#Booting_a_custom_kernel\"/>."

#. (itstool) path: sect2/para
#: xml/uefi.xml:324
msgid ""
"Secure Boot does not prevent you from using a self-compiled kernel. You must "
"sign it with your own certificate and make that certificate known to the "
"firmware or MOK."
msgstr ""
"Secure Boot does not prevent you from using a self-compiled kernel. You must "
"sign it with your own certificate and make that certificate known to the "
"firmware or MOK."

#. (itstool) path: step/para
#: xml/uefi.xml:331
msgid "Create a custom X.509 key and certificate used for signing:"
msgstr "Create a custom X.509 key and certificate used for signing:"

#. (itstool) path: step/screen
#: xml/uefi.xml:334
#, no-wrap
msgid ""
"openssl req -new -x509 -newkey rsa:2048 -keyout key.asc \\\n"
"  -out cert.pem -nodes -days 666 -subj \"/CN=$USER/\""
msgstr ""
"openssl req -new -x509 -newkey rsa:2048 -keyout key.asc \\\n"
"  -out cert.pem -nodes -days 666 -subj \"/CN=$USER/\""

#. (itstool) path: step/para
#: xml/uefi.xml:336
msgid ""
"For more information about creating certificates, see <link xlink:href="
"\"http://en.opensuse.org/openSUSE:"
"UEFI_Image_File_Sign_Tools#Create_Your_Own_Certificate\"/>."
msgstr ""
"For more information about creating certificates, see <link xlink:href="
"\"http://en.opensuse.org/openSUSE:"
"UEFI_Image_File_Sign_Tools#Create_Your_Own_Certificate\"/>."

#. (itstool) path: step/para
#: xml/uefi.xml:343
msgid "Package the key and the certificate as a PKCS#12 structure:"
msgstr "Package the key and the certificate as a PKCS#12 structure:"

#. (itstool) path: step/screen
#: xml/uefi.xml:346
#, no-wrap
msgid ""
"openssl pkcs12 -export -inkey key.asc -in cert.pem \\\n"
"  -name kernel_cert -out cert.p12"
msgstr ""
"openssl pkcs12 -export -inkey key.asc -in cert.pem \\\n"
"  -name kernel_cert -out cert.p12"

#. (itstool) path: step/para
#: xml/uefi.xml:350
msgid "Generate an NSS database for use with <command>pesign</command>:"
msgstr "Generate an NSS database for use with <command>pesign</command>:"

#. (itstool) path: step/screen
#: xml/uefi.xml:353
#, no-wrap
msgid "certutil -d . -N"
msgstr "certutil -d . -N"

#. (itstool) path: step/para
#: xml/uefi.xml:356
msgid ""
"Import the key and the certificate contained in PKCS#12 into the NSS "
"database:"
msgstr ""
"Import the key and the certificate contained in PKCS#12 into the NSS "
"database:"

#. (itstool) path: step/screen
#: xml/uefi.xml:360
#, no-wrap
msgid "pk12util -d . -i cert.p12"
msgstr "pk12util -d . -i cert.p12"

#. (itstool) path: step/para
#: xml/uefi.xml:363
msgid ""
"<quote>Bless</quote> the kernel with the new signature using "
"<command>pesign</command>:"
msgstr ""
"<quote>Bless</quote> the kernel with the new signature using "
"<command>pesign</command>:"

#. (itstool) path: step/screen
#: xml/uefi.xml:367
#, no-wrap
msgid ""
"pesign -n . -c kernel_cert -i arch/x86/boot/bzImage \\\n"
"  -o vmlinuz.signed -s"
msgstr ""
"pesign -n . -c kernel_cert -i arch/x86/boot/bzImage \\\n"
"  -o vmlinuz.signed -s"

#. (itstool) path: step/para
#: xml/uefi.xml:371
msgid "List the signatures on the kernel image:"
msgstr "List the signatures on the kernel image:"

#. (itstool) path: step/screen
#: xml/uefi.xml:374
#, no-wrap
msgid "pesign -n . -S -i vmlinuz.signed"
msgstr "pesign -n . -S -i vmlinuz.signed"

#. (itstool) path: step/para
#: xml/uefi.xml:375
msgid ""
"At that point, you can install the kernel in <filename>/boot</filename> as "
"usual. Because the kernel now has a custom signature the certificate used "
"for signing needs to be imported into the UEFI firmware or MOK."
msgstr ""
"At that point, you can install the kernel in <filename>/boot</filename> as "
"usual. Because the kernel now has a custom signature the certificate used "
"for signing needs to be imported into the UEFI firmware or MOK."

#. (itstool) path: step/para
#: xml/uefi.xml:382
msgid ""
"Convert the certificate to the DER format for import into the firmware or "
"MOK:"
msgstr ""
"Convert the certificate to the DER format for import into the firmware or "
"MOK:"

#. (itstool) path: step/screen
#: xml/uefi.xml:386
#, no-wrap
msgid "openssl x509 -in cert.pem -outform der -out cert.der"
msgstr "openssl x509 -in cert.pem -outform der -out cert.der"

#. (itstool) path: step/para
#: xml/uefi.xml:389
msgid "Copy the certificate to the ESP for easier access:"
msgstr "Copy the certificate to the ESP for easier access:"

#. (itstool) path: step/screen
#: xml/uefi.xml:392
#, no-wrap
msgid "sudo cp cert.der /boot/efi/"
msgstr "sudo cp cert.der /boot/efi/"

#. (itstool) path: step/para
#: xml/uefi.xml:395
msgid "Use <command>mokutil</command> to launch the MOK list automatically."
msgstr "Use <command>mokutil</command> to launch the MOK list automatically."

#. (itstool) path: step/para
#: xml/uefi.xml:402
msgid "Import the certificate to MOK:"
msgstr "Import the certificate to MOK:"

#. (itstool) path: step/screen
#: xml/uefi.xml:405
#, no-wrap
msgid "mokutil --root-pw --import cert.der"
msgstr "mokutil --root-pw --import cert.der"

#. (itstool) path: step/para
#: xml/uefi.xml:406
msgid ""
"The <option>--root-pw</option> option enables usage of the <systemitem class="
"\"username\">root</systemitem> user directly."
msgstr ""
"The <option>--root-pw</option> option enables usage of the <systemitem class="
"\"username\">root</systemitem> user directly."

#. (itstool) path: step/para
#: xml/uefi.xml:412
msgid "Check the list of certificates that are prepared to be enrolled:"
msgstr "Check the list of certificates that are prepared to be enrolled:"

#. (itstool) path: step/screen
#: xml/uefi.xml:415
#, no-wrap
msgid "mokutil --list-new"
msgstr "mokutil --list-new"

#. (itstool) path: step/para
#: xml/uefi.xml:418
msgid ""
"Reboot the system; <systemitem>shim</systemitem> should launch MokManager. "
"You need to enter the <systemitem class=\"username\">root</systemitem> "
"password to confirm the import of the certificate to the MOK list."
msgstr ""
"Reboot the system; <systemitem>shim</systemitem> should launch MokManager. "
"You need to enter the <systemitem class=\"username\">root</systemitem> "
"password to confirm the import of the certificate to the MOK list."

#. (itstool) path: step/para
#: xml/uefi.xml:425
msgid "Check if the newly imported key was enrolled:"
msgstr "Check if the newly imported key was enrolled:"

#. (itstool) path: step/screen
#: xml/uefi.xml:428
#, no-wrap
msgid "mokutil --list-enrolled"
msgstr "mokutil --list-enrolled"

#. (itstool) path: step/para
#: xml/uefi.xml:435
msgid ""
"Alternatively, this is the procedure if you want to launch MOK manually:"
msgstr ""
"Alternatively, this is the procedure if you want to launch MOK manually:"

#. (itstool) path: step/para
#: xml/uefi.xml:439
msgid "Reboot"
msgstr "Reboot"

#. (itstool) path: step/para
#: xml/uefi.xml:444
msgid "In the GRUB 2 menu press the '<literal>c</literal>' key."
msgstr "In the GRUB 2 menu press the '<literal>c</literal>' key."

#. (itstool) path: step/para
#: xml/uefi.xml:449
msgid "Type:"
msgstr "Type:"

#. (itstool) path: step/screen
#: xml/uefi.xml:452
#, no-wrap
msgid ""
"chainloader $efibootdir/MokManager.efi\n"
"boot"
msgstr ""
"chainloader $efibootdir/MokManager.efi\n"
"boot"

#. (itstool) path: step/para
#: xml/uefi.xml:456
msgid "Select <guimenu>Enroll key from disk</guimenu>."
msgstr "Select <guimenu>Enroll key from disk</guimenu>."

#. (itstool) path: step/para
#: xml/uefi.xml:461
msgid ""
"Navigate to the <filename>cert.der</filename> file and press <keycap "
"function=\"enter\"/>."
msgstr ""
"Navigate to the <filename>cert.der</filename> file and press <keycap "
"function=\"enter\"/>."

#. (itstool) path: step/para
#: xml/uefi.xml:467
msgid ""
"Follow the instructions to enroll the key. Normally this should be pressing "
"'<literal>0</literal>' and then '<literal>y</literal>' to confirm."
msgstr ""
"Follow the instructions to enroll the key. Normally this should be pressing "
"'<literal>0</literal>' and then '<literal>y</literal>' to confirm."

#. (itstool) path: step/para
#: xml/uefi.xml:472
msgid ""
"Alternatively, the firmware menu may provide ways to add a new key to the "
"Signature Database."
msgstr ""
"Alternatively, the firmware menu may provide ways to add a new key to the "
"Signature Database."

#. (itstool) path: sect2/title
#: xml/uefi.xml:508
msgid "Using Non-Inbox Drivers"
msgstr "Using Non-Inbox Drivers"

#. (itstool) path: sect2/para
#: xml/uefi.xml:509
msgid ""
"There is no support for adding non-inbox drivers (that is, drivers that do "
"not come with <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE "
"Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</"
"phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os="
"\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>) "
"during installation with Secure Boot enabled. The signing key used for "
"SolidDriver/PLDP is not trusted by default."
msgstr ""
"There is no support for adding non-inbox drivers (that is, drivers that do "
"not come with <phrase role=\"productname\"><phrase os=\"osuse\">openSUSE "
"Leap</phrase><phrase os=\"sles\">SUSE Linux Enterprise Server</"
"phrase><phrase os=\"sled\">SUSE Linux Enterprise Desktop</phrase><phrase os="
"\"slerte\">SUSE Linux Enterprise Real Time Extension</phrase></phrase>) "
"during installation with Secure Boot enabled. The signing key used for "
"SolidDriver/PLDP is not trusted by default."

#. (itstool) path: sect2/para
#: xml/uefi.xml:514
msgid ""
"It is possible to install third party drivers during installation with "
"Secure Boot enabled in two different ways. In both cases:"
msgstr ""
"It is possible to install third party drivers during installation with "
"Secure Boot enabled in two different ways. In both cases:"

#. (itstool) path: listitem/para
#: xml/uefi.xml:520
msgid ""
"Add the needed keys to the firmware database via firmware/system management "
"tools before the installation. This option depends on the specific hardware "
"you are using. Consult your hardware vendor for more information."
msgstr ""
"Add the needed keys to the firmware database via firmware/system management "
"tools before the installation. This option depends on the specific hardware "
"you are using. Consult your hardware vendor for more information."

#. (itstool) path: listitem/para
#: xml/uefi.xml:528
msgid ""
"Use a bootable driver ISO from <link xlink:href=\"https://drivers.suse.com/"
"\"/> or your hardware vendor to enroll the needed keys in the MOK list at "
"first boot."
msgstr ""
"Use a bootable driver ISO from <link xlink:href=\"https://drivers.suse.com/"
"\"/> or your hardware vendor to enroll the needed keys in the MOK list at "
"first boot."

#. (itstool) path: sect2/para
#: xml/uefi.xml:535
msgid ""
"To use the bootable driver ISO to enroll the driver keys to the MOK list, "
"follow these steps:"
msgstr ""
"To use the bootable driver ISO to enroll the driver keys to the MOK list, "
"follow these steps:"

#. (itstool) path: step/para
#: xml/uefi.xml:541
msgid "Burn the ISO image above to an empty CD/DVD medium."
msgstr "Burn the ISO image above to an empty CD/DVD medium."

#. (itstool) path: step/para
#: xml/uefi.xml:546
msgid ""
"Start the installation using the new CD/DVD medium, having the standard "
"installation media at hand or a URL to a network installation server."
msgstr ""
"Start the installation using the new CD/DVD medium, having the standard "
"installation media at hand or a URL to a network installation server."

#. (itstool) path: step/para
#: xml/uefi.xml:551
msgid ""
"If doing a network installation, enter the URL of the network installation "
"source on the boot command line using the <option>install=</option> option."
msgstr ""
"If doing a network installation, enter the URL of the network installation "
"source on the boot command line using the <option>install=</option> option."

#. (itstool) path: step/para
#: xml/uefi.xml:556
msgid ""
"If doing installation from optical media, the installer will first boot from "
"the driver kit and then ask to insert the first installation disk of the "
"product."
msgstr ""
"If doing installation from optical media, the installer will first boot from "
"the driver kit and then ask to insert the first installation disk of the "
"product."

#. (itstool) path: step/para
#: xml/uefi.xml:563
msgid "An initrd containing updated drivers will be used for installation."
msgstr "An initrd containing updated drivers will be used for installation."

#. (itstool) path: sect2/para
#: xml/uefi.xml:568
msgid ""
"For more information, see <link xlink:href=\"https://drivers.suse.com/doc/"
"Usage/Secure_Boot_Certificate.html\"/>."
msgstr ""
"For more information, see <link xlink:href=\"https://drivers.suse.com/doc/"
"Usage/Secure_Boot_Certificate.html\"/>."

#. (itstool) path: sect2/title
#: xml/uefi.xml:576
msgid "Features and Limitations"
msgstr "Features and Limitations"

#. (itstool) path: sect2/para
#: xml/uefi.xml:577
msgid "When booting in Secure Boot mode, the following features apply:"
msgstr "When booting in Secure Boot mode, the following features apply:"

#. (itstool) path: listitem/para
#: xml/uefi.xml:582
msgid ""
"Installation to UEFI default boot loader location, a mechanism to keep or "
"restore the EFI boot entry."
msgstr ""
"Installation to UEFI default boot loader location, a mechanism to keep or "
"restore the EFI boot entry."

#. (itstool) path: listitem/para
#: xml/uefi.xml:588
msgid "Reboot via UEFI."
msgstr "Reboot via UEFI."

#. (itstool) path: listitem/para
#: xml/uefi.xml:593
msgid ""
"Xen hypervisor will boot with UEFI when there is no legacy BIOS to fall back "
"to."
msgstr ""
"Xen hypervisor will boot with UEFI when there is no legacy BIOS to fall back "
"to."

#. (itstool) path: listitem/para
#: xml/uefi.xml:599
msgid "UEFI IPv6 PXE boot support."
msgstr "UEFI IPv6 PXE boot support."

#. (itstool) path: listitem/para
#: xml/uefi.xml:604
msgid ""
"UEFI videomode support, the kernel can retrieve video mode from UEFI to "
"configure KMS mode with the same parameters."
msgstr ""
"UEFI videomode support, the kernel can retrieve video mode from UEFI to "
"configure KMS mode with the same parameters."

#. (itstool) path: listitem/para
#: xml/uefi.xml:610
msgid "UEFI booting from USB devices is supported."
msgstr "UEFI booting from USB devices is supported."

#. (itstool) path: sect2/para
#: xml/uefi.xml:615
msgid "When booting in Secure Boot mode, the following limitations apply:"
msgstr "When booting in Secure Boot mode, the following limitations apply:"

#. (itstool) path: listitem/para
#: xml/uefi.xml:620
msgid ""
"To ensure that Secure Boot cannot be easily circumvented, some kernel "
"features are disabled when running under Secure Boot."
msgstr ""
"To ensure that Secure Boot cannot be easily circumvented, some kernel "
"features are disabled when running under Secure Boot."

#. (itstool) path: listitem/para
#: xml/uefi.xml:627
msgid "Boot loader, kernel, and kernel modules must be signed."
msgstr "Boot loader, kernel, and kernel modules must be signed."

#. (itstool) path: listitem/para
#: xml/uefi.xml:632
msgid "Kexec and Kdump are disabled."
msgstr "Kexec and Kdump are disabled."

#. (itstool) path: listitem/para
#: xml/uefi.xml:637
msgid "Hibernation (suspend on disk) is disabled."
msgstr "Hibernation (suspend on disk) is disabled."

#. (itstool) path: listitem/para
#: xml/uefi.xml:642
msgid ""
"Access to <filename>/dev/kmem</filename> and <filename>/dev/mem</filename> "
"is not possible, not even as root user."
msgstr ""
"Access to <filename>/dev/kmem</filename> and <filename>/dev/mem</filename> "
"is not possible, not even as root user."

#. (itstool) path: listitem/para
#: xml/uefi.xml:648
msgid ""
"Access to the I/O port is not possible, not even as root user. All X11 "
"graphical drivers must use a kernel driver."
msgstr ""
"Access to the I/O port is not possible, not even as root user. All X11 "
"graphical drivers must use a kernel driver."

#. (itstool) path: listitem/para
#: xml/uefi.xml:654
msgid "PCI BAR access through sysfs is not possible."
msgstr "PCI BAR access through sysfs is not possible."

#. (itstool) path: listitem/para
#: xml/uefi.xml:659
msgid "<literal>custom_method</literal> in ACPI is not available."
msgstr "<literal>custom_method</literal> in ACPI is not available."

#. (itstool) path: listitem/para
#: xml/uefi.xml:664
msgid "debugfs for asus-wmi module is not available."
msgstr "debugfs for asus-wmi module is not available."

#. (itstool) path: listitem/para
#: xml/uefi.xml:669
msgid ""
"the <literal>acpi_rsdp</literal> parameter does not have any effect on the "
"kernel."
msgstr ""
"the <literal>acpi_rsdp</literal> parameter does not have any effect on the "
"kernel."

#. (itstool) path: sect1/title
#: xml/uefi.xml:691
msgid "For More Information"
msgstr "For More Information"

#. (itstool) path: listitem/para
#: xml/uefi.xml:695
msgid ""
"<link xlink:href=\"http://www.uefi.org\"/> —UEFI home page where you can "
"find the current UEFI specifications."
msgstr ""
"<link xlink:href=\"http://www.uefi.org\"/> —UEFI home page where you can "
"find the current UEFI specifications."

#. (itstool) path: listitem/para
#: xml/uefi.xml:701
msgid ""
"Blog posts by Olaf Kirch and Vojtěch Pavlík (the chapter above is heavily "
"based on these posts):"
msgstr ""
"Blog posts by Olaf Kirch and Vojtěch Pavlík (the chapter above is heavily "
"based on these posts):"

#. (itstool) path: listitem/para
#: xml/uefi.xml:724
msgid ""
"<link xlink:href=\"http://en.opensuse.org/openSUSE:UEFI\"/> —UEFI with "
"openSUSE."
msgstr ""
"<link xlink:href=\"http://en.opensuse.org/openSUSE:UEFI\"/> —UEFI with "
"openSUSE."
