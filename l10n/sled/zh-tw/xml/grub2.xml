<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="grub2.xml" version="5.0" xml:id="cha-grub2">
 <title>開機載入程式 GRUB 2</title>
 <info>
  <abstract>
   <para>
    本章介紹如何設定 <phrase role="productname"><phrase os="sled">SUSE® Linux Enterprise Desktop</phrase></phrase> 中使用的開機載入程式 GRUB 2。<phrase os="sled;sles">GRUB 是傳統 GRUB 開機載入程式 (現在稱做<quote>GRUB Legacy</quote>) 的後繼產品。從 <phrase role="productname"><phrase os="sled">SUSE® Linux Enterprise Desktop</phrase></phrase> 12 版本開始，就已使用 GRUB 2 做為預設的開機載入程式。</phrase>產品中提供了一個 YaST 模組來進行最重要的設定。整個開機程序簡述於<xref linkend="cha-boot"/>。如需關於 UEFI 機器安全開機支援的詳細資料，請參閱<xref linkend="cha-uefi"/>。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="sec-grub2-new-features">
  <title>GRUB Legacy 與 GRUB 2 之間的主要差異</title>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     組態儲存在不同的檔案中。
    </para>
   </listitem>
   <listitem>
    <para>
     支援更多的檔案系統 (例如 Btrfs)。
    </para>
   </listitem>
   <listitem>
    <para>
     可以直接讀取 LVM 或 RAID 裝置上儲存的檔案。
    </para>
   </listitem>
   <listitem>
    <para>
     使用者介面可翻譯，並可以改變主題。
    </para>
   </listitem>
   <listitem>
    <para>
     包含一套用於載入模組的機制，以支援諸如檔案系統等的其他功能。
    </para>
   </listitem>
   <listitem>
    <para>
     自動搜尋及產生其他核心與作業系統 (例如 Windows) 的開機項目。
    </para>
   </listitem>
   <listitem>
    <para>
     包含一個類似於 Bash 的精簡主控台。
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec-grub2-file-structure">
  <title>組態檔案結構</title>

  <para>
   GRUB 2 的組態以下列檔案為基礎：
  </para>

  <variablelist>
   <varlistentry>
    <term><filename>/boot/grub2/grub.cfg</filename>
    </term>
    <listitem>
     <para>
      此檔案包含 GRUB 2 功能表項目的組態。它取代了 GRUB Legacy 中的 <filename>menu.lst</filename>。不要編輯 <filename>grub.cfg</filename> — 它是由指令 <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> 自動產生的。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/boot/grub2/custom.cfg</filename>
    </term>
    <listitem>
     <para>
      這個可選用檔案在開機時由 <filename>grub.cfg</filename> 直接獲取，可用於將自訂項目新增至開機功能表。從 <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase> <phrase os="sles;sled">12 SP2</phrase> 開始，使用 <command>grub-once</command> 時也將剖析這些項目。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/etc/default/grub</filename>
    </term>
    <listitem>
     <para>
      此檔案控制 GRUB 2 的使用者設定，通常包含背景和主題等其他環境設定。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/etc/grub.d/</filename> 下的程序檔
    </term>
    <listitem>
     <para>
      在執行 <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> 指令期間，系統會讀取此目錄中的程序檔。主要組態檔案 <filename>/boot/grub/grub.cfg</filename> 中整合了這些程序檔的指示。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="vle-grub2-sysconfig">
    <term><filename>/etc/sysconfig/bootloader</filename>
    </term>
    <listitem>
     <para>
      此組態檔案儲存一些基本設定，例如開機載入程式類型，以及是否要啟用 UEFI 安全開機支援。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename arch="x86_64">/boot/grub2/x86_64-efi</filename>、<filename arch="power">/boot/grub2/power-ieee1275</filename>
    </term>
    <listitem>
     <para>
      這些組態檔案包含特定於架構的選項。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   GRUB 2 可以透過多種方式控制。現有組態啟動項目，可以從圖形功能表選取 (開頭顯示畫面)。組態從基於其他組態檔案編譯的檔案 <filename>/boot/grub2/grub.cfg</filename> 載入 (參閱下文)。所有 GRUB 2 組態檔案都視為系統檔案，編輯這些組態檔案需要有 <systemitem class="username">root</systemitem> 權限。
  </para>

  <note>
   <title>啟用組態變更</title>
   <para>
    手動編輯 GRUB 2 組態檔案後，您需要執行 <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> 才能啟用變更。但使用 YaST 變更組態時就不需要如此，因為 YaST 會自動執行 此指令。
   </para>
  </note>

  <sect2 xml:id="sec-grub2-cfg">
   <title><filename>/boot/grub2/grub.cfg</filename> 檔案</title>
   <para>
    帶有開機功能表的圖形開頭顯示畫面以 GRUB 2 組態檔案 <filename>/boot/grub2/grub.cfg</filename> 為基礎，它包含關於可以透過功能表開機之所有分割區或作業系統的資訊。
   </para>
   <para>
    系統每次開機時，GRUB 2 會直接從檔案系統載入功能表檔案。因此，在變更組態檔案後不需要重新安裝 GRUB 2。安裝或移除核心後，系統會自動重建 <filename>grub.cfg</filename>。
   </para>
   <para>
    <filename>grub.cfg</filename> 是執行 <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> 指令時，從檔案 <filename>/etc/default/grub</filename> 及 <filename>/etc/grub.d/</filename> 目錄中的程序檔編譯的。因此，切勿手動編輯該檔案，而應該編輯相關的來源檔案，或者依照<xref linkend="sec-grub2-yast2-config"/>中所述，使用 YaST 的<guimenu>開機載入程式</guimenu>模組來修改組態。
   </para>
  </sect2>

  <sect2 xml:id="sec-grub2-etc-default-grub">
   <title><filename>/etc/default/grub</filename> 檔案</title>
   <para>
    此檔案包含 GRUB 2 的更多一般選項，例如，顯示功能表的時間，或者要開機的預設作業系統。若要列出所有可用選項，請查看以下指令的輸出：
   </para>
<screen><prompt>&gt; </prompt>grep "export GRUB_DEFAULT" -A50 /usr/sbin/grub2-mkconfig | grep GRUB_</screen>
   <para>
    除了已定義的變數外，使用者還可以引入自己的變數，日後在 <filename>/etc/grub.d</filename> 目錄下的程序檔內使用。
   </para>
   <para>
    編輯 <filename>/etc/default/grub</filename> 後，請使用 <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> 更新主組態檔案。</para>
   <note>
    <title>範圍</title>
    <remark>
     Do we really still have Xen-specific kernels? - sknorr, 2017-05-08
    </remark>
    <para>
     此檔案中設定的所有選項都是會影響所有開機項目的一般選項。透過 GRUB_*_XEN_* 組態選項可以設定 Xen 核心或 Xen 監管程式的特定選項。如需詳細資訊，請參閱下文。
    </para>
   </note>
   <variablelist>
    <varlistentry>
     <term><literal>GRUB_DEFAULT</literal>
     </term>
     <listitem>
      <para>
       設定預設會啟動的開機功能表項目。它的值可以是數值、功能表項目的完整名稱，或者<quote>saved</quote>。
      </para>
      <para>
       <literal>GRUB_DEFAULT=2</literal> 會啟動第三個 (從零開始計數) 開機功能表項目。
      </para>
      <para>
       <literal>GRUB_DEFAULT=&quot;2&gt;0&quot;</literal> 會啟動第三個頂層功能表項目的第一個子功能表項目。
      </para>
      <para>
       <literal>GRUB_DEFAULT=&quot;Example boot menu entry&quot;</literal> 會啟動名為<quote>Example boot menu entry</quote>的功能表項目。
      </para>
      <para>
       <literal>GRUB_DEFAULT=saved</literal> 會將 <command>grub2-once</command> 或 <command>grub2-set-default</command> 指令指定的項目開機。<command>grub2-reboot</command> 只設定下一次重新開機的預設開機項目，而 <command>grub2-set-default</command> 設定發生變更之前的預設開機項目。<command>grub2-editenv list</command> 列出下一個開機項目。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_HIDDEN_TIMEOUT</literal>
     </term>
     <listitem>
      <para>
       等待使用者按某個鍵的指定秒數。在此期間，除非使用者按下某個鍵，否則不顯示功能表。如果使用者在指定的時間內未按任何鍵，控制權將移交給 <literal>GRUB_TIMEOUT</literal>。<literal>GRUB_HIDDEN_TIMEOUT=0</literal> 首先會檢查是否按下了 <keycap function="shift"/>，如果是，則顯示開機功能表，否則會立即啟動預設的功能表項目。如果 GRUB 2 只識別了一個可開機作業系統，則預設行為就是如此。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_HIDDEN_TIMEOUT_QUIET</literal>
     </term>
     <listitem>
      <para>
       如果指定 <literal>false</literal>，那麼當啟動了 <literal>GRUB_HIDDEN_TIMEOUT</literal> 功能時，系統會在一個空白螢幕上顯示倒數計時器。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_TIMEOUT</literal>
     </term>
     <listitem>
      <para>
       在自動啟動預設開機項目之前，開機功能表顯示的時間期限，以秒為單位。如果按下某個鍵，則會取消逾時，GRUB 2 將等待您手動完成選擇。如果指定 <literal>GRUB_TIMEOUT=-1</literal>，則在您手動選取開機項目之前，功能表會一直顯示。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_LINUX</literal>
     </term>
     <listitem>
      <para>
       此行中的項目將新增到正常和復原模式之開機項目的末尾。使用它可以將核心參數新增至開機項目。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_LINUX_DEFAULT</literal>
     </term>
     <listitem>
      <para>
       與 <literal>GRUB_CMDLINE_LINUX</literal> 一樣，但只能在正常模式下附加項目。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_LINUX_RECOVERY</literal>
     </term>
     <listitem>
      <para>
       與 <literal>GRUB_CMDLINE_LINUX</literal> 一樣，但只能在復原模式下附加項目。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_LINUX_XEN_REPLACE</literal>
     </term>
     <listitem>
      <para>
       此項目將徹底取代所有 Xen 開機項目的 <literal>GRUB_CMDLINE_LINUX</literal> 參數。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_LINUX_XEN_REPLACE_DEFAULT</literal>
     </term>
     <listitem>
      <para>
       與 <literal>GRUB_CMDLINE_LINUX_XEN_REPLACE</literal> 一樣，但它只會取代 <literal>GRUB_CMDLINE_LINUX_DEFAULT</literal> 的參數。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_XEN</literal>
     </term>
     <listitem>
      <para>
       此項目只為 Xen 客體核心指定核心參數 — 工作原理與 <literal>GRUB_CMDLINE_LINUX</literal> 相同。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_CMDLINE_XEN_DEFAULT</literal>
     </term>
     <listitem>
      <para>
       與 <literal>GRUB_CMDLINE_XEN</literal> 一樣 — 工作原理與 <literal>GRUB_CMDLINE_LINUX_DEFAULT</literal> 相同。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_TERMINAL</literal>
     </term>
     <listitem>
      <para>
       啟用並指定輸入/輸出終端機裝置。可以是 <literal>console</literal> (PC BIOS 和 EFI 主控台)、<literal>serial</literal> (序列終端機)、<literal>ofconsole</literal> (開放韌體主控台) 或預設值 <literal>gfxterm</literal> (圖形模式輸出)。用引號括住所需的多個選項可以啟用多個裝置，例如 <literal>GRUB_TERMINAL=&quot;console serial&quot;</literal>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_GFXMODE</literal>
     </term>
     <listitem>
      <para>
       <literal>gfxterm</literal> 圖形終端機使用的解析度。請注意，您只能使用您的圖形卡 (VBE) 支援的模式。預設值為「auto」，即嘗試選取偏好的解析度。在 GRUB 2 指令行中輸入 <command>videoinfo</command> 可顯示 GRUB 2 可使用的螢幕解析度。當 GRUB 2 開機功能表螢幕顯示時，輸入 <keycap>c</keycap> 可存取指令行。
      </para>
      <para>
       您還可以在解析度設定後面附加一個值來指定色彩深度，例如 <literal>GRUB_GFXMODE=1280x1024x24</literal>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_BACKGROUND</literal>
     </term>
     <listitem>
      <para>
       設定 <literal>gfxterm</literal> 圖形終端機的背景影像。該影像必須是 GRUB 2 在開機時可讀的檔案，並且必須以 <literal>.png</literal>、<literal>.tga</literal>、<literal>.jpg</literal> 或 <literal>.jpeg</literal> 字尾結尾。必要時，系統會縮放該影像以適合螢幕大小。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>GRUB_DISABLE_OS_PROBER</literal>
     </term>
     <listitem>
      <para>
       如果將此選項設定為 <literal>true</literal>，將會停用自動搜尋其他作業系統的功能。系統只會偵測 <filename>/boot/</filename> 中的核心影像，以及 <filename>/etc/grub.d/</filename> 中您自己的程序檔內的選項。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>SUSE_BTRFS_SNAPSHOT_BOOTING</literal>
     </term>
     <listitem>
      <para>
       如果將此選項設定為 <literal>true</literal>，GRUB 2 可直接開機至 Snapper 快照。如需詳細資訊，請參閱 <xref linkend="sec-snapper-snapshot-boot"/>。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    如需選項的完整清單，請參閱 <link xlink:href="http://www.gnu.org/software/grub/manual/grub.html#Simple-configuration">GNU GRUB 手冊</link>。
   </para>
  </sect2>

  <sect2 xml:id="sec-grub2-etc-grub-d">
   <title><filename>/etc/grub.d</filename> 中的程序檔</title>
   <para>
    在執行 <command>grub2-mkconfig -o /boot/grub2/grub.cfg</command> 指令期間，系統會讀取此目錄中的程序檔。程序檔中的指令會整合到 <filename>/boot/grub2/grub.cfg</filename> 中。<filename>grub.cfg</filename> 中功能表項目的順序由此目錄中檔案的執行順序來決定。具有前置編號的檔案先執行，從最小的編號開始。<filename>00_header</filename> 在 <filename>10_linux</filename> 之前執行，而後者又在 <filename>40_custom</filename> 之前執行。如果存在採用字母名稱的檔案，這些檔案將在採用編號命名的檔案之後執行。在執行 <command>grub2-mkconfig</command> 期間，只有可執行檔才能在 <filename>grub.cfg</filename> 中產生輸出。依預設，<filename>/etc/grub.d</filename> 目錄中的所有檔案都是可執行檔。
   </para>
   <tip>
    <title>將自訂內容永久儲存在 <filename>grub.cfg</filename> 中</title>
    <para>
     由於每次執行 <command>grub2-mkconfig</command> 時都會重新編譯 <filename>/boot/grub2/grub.cfg</filename>，因此所有自訂內容都會遺失。如果要將您的行直接插入到 <filename>/boot/grub2/grub.cfg</filename> 中，並且希望在執行 <command>grub2-mkconfig</command> 之後它們不會遺失，請將這些行插入到下面兩行之間
    </para>
    <screen>### BEGIN /etc/grub.d/90_persistent ###</screen>
    <para>
     和
    </para>
    <screen>### END /etc/grub.d/90_persistent ###</screen>
    <para>
     <filename>90_persistent</filename> 程序檔可確保此類內容會保留下來。
    </para>
    <para>
     下面列出了最重要的程序檔：
    </para>
   </tip>
   <variablelist>
    <varlistentry>
     <term><filename>00_header</filename>
     </term>
     <listitem>
      <para>
       設定環境變數，例如系統檔案位置、顯示設定、主題和以前儲存的項目。它還可以輸入 <filename>/etc/default/grub</filename> 中儲存的優先設定。通常，您不需要變更此檔案。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>10_linux</filename>
     </term>
     <listitem>
      <para>
       識別根裝置上的 Linux 核心，並建立相關的功能表項目，其中包括關聯的復原模式選項 (如果已啟用)。主功能表頁面中只顯示最新核心，其他核心包含在子功能表中。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>30_os-prober</filename>
     </term>
     <listitem>
      <para>
       此程序檔使用 <command>os-prober</command> 來搜尋 Linux 和其他作業系統，並將結果列於 GRUB 2 功能表中。其中有些區段用於識別其他特定作業系統，例如 Windows 或 macOS。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><filename>40_custom</filename>
     </term>
     <listitem>
      <para>
       使用此檔案可以方便地在 <filename>grub.cfg</filename> 中包含自訂開機項目。切勿變更開頭的 <literal>exec tail -n +3 $0</literal> 部分。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    處理順序依據前置編號確定，編號最小的程序檔最先執行。如果多個程序檔的前置編號相同，則按整個名稱的字母順序來決定執行順序。
   </para>
   <tip>
    <title><filename>/boot/grub2/custom.cfg</filename></title>
    <para>
     如果您建立了 <filename>/boot/grub2/custom.cfg</filename> 並在其中填入了內容，系統會在開機時自動將它包含到 <filename>/boot/grub2/grub.cfg</filename> 中，放置在 <filename>40_custom</filename> 的後面。
    </para>
   </tip>
  </sect2>

  <sect2 xml:id="sec-grub2-map">
   <title>BIOS 磁碟機與 Linux 裝置之間的映射</title>
   <para>
    在 GRUB Legacy 中，<filename>device.map</filename> 組態檔案用於依據 BIOS 磁碟機代號衍生 Linux 裝置名稱。不一定總能猜對 BIOS 磁碟機與 Linux 裝置之間的映射。例如，如果在 BIOS 組態中交換了 IDE 和 SCSI 驅動器的開機順序，那麼 GRUB Legacy 就會使用錯誤的順序。
   </para>
   <para>
    GRUB 2 在產生 <filename>grub.cfg</filename> 時使用裝置 ID 字串 (UUID) 或檔案系統標籤，因此避免了此問題。GRUB 2 公用程式會即時建立一個暫存裝置對應，這通常足以滿足需要，在單磁碟系統中更是如此。
   </para>
   <para>
    但是，如果您需要覆寫 GRUB 2 的自動裝置對應機制，請建立自訂對應檔案 <filename>/boot/grub2/device.map</filename>。下面的範例將變更映射，使 <literal>DISK 3</literal> 成為開機磁碟。請注意，GRUB 2 分割區編號以 <literal>1</literal> 開始，而不是像 GRUB Legacy 中那樣以 <literal>0</literal> 開始。
   </para>
<screen>(hd1)  /dev/disk-by-id/<replaceable>DISK3 ID</replaceable>
(hd2)  /dev/disk-by-id/<replaceable>DISK1 ID</replaceable>
(hd3)  /dev/disk-by-id/<replaceable>DISK2 ID</replaceable></screen>
  </sect2>

  <sect2 xml:id="sec-grub2-menu-change">
   <title>在開機程序期間編輯功能表項目</title>
   <para>
    當系統由於組態錯誤而不再能夠開機時，如果能夠直接編輯功能表項目，就會很有幫助。使用功能表編輯器還可以在不變更系統組態的情況下測試新設定。
   </para>
   <procedure>
    <step>
     <para>
      在圖形開機功能表中，使用方向鍵選取要編輯的項目。
     </para>
    </step>
    <step>
     <para>
      按 <keycap>E</keycap> 開啟文字型編輯器。
     </para>
    </step>
    <step>
     <para>
      使用方向鍵移到您要編輯的行。
     </para>
     <figure xml:id="fig-grub2-boot-editor">
      <title>GRUB 2 開機編輯器</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="grub2_edit_config.png" width="75%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="grub2_edit_config.png" width="75%"/>
       </imageobject>
      </mediaobject>
     </figure>
     <para>
      現在，您可以採取以下兩種做法：
     </para>
     <substeps performance="required">
      <step>
       <para>
        將用空格分隔的參數新增到以 <literal>linux</literal> 或 <literal>linuxefi</literal> 開頭的行的末尾，以編輯核心參數。<link xlink:href="https://en.opensuse.org/Linuxrc"/> 上提供了完整的參數清單。
       </para>
      </step>
      <step>
       <para>
        或者編輯一般選項，以變更核心版本等。按 <keycap function="tab"/> 鍵會顯示所有可能的補齊建議。
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      按 <keycap>F10</keycap> 使用您所做的變更啟動系統，或者按 <keycap function="escape"/> 放棄編輯，並返回 GRUB 2 功能表。
     </para>
    </step>
   </procedure>
   <para>
    透過這種方式進行的變更只會套用到目前的開機過程，而不會永久儲存。
   </para>
   <important>
    <title>開機程序期間的鍵盤配置</title>
    <para>
     US 鍵盤配置是啟動時唯一可以使用的鍵盤配置。請參閱<xref linkend="fig-trouble-install-keyboard-us"/>。
    </para>
   </important>
   <note arch="x86_64">
    <title>安裝媒體中的開機載入程式</title>
    <para>
     在使用傳統 BIOS 的系統上，安裝媒體的開機載入程式仍是 GRUB Legacy。若要新增開機參數，請選取一項，然後開始輸入。在安裝開機項目中新增的內容將永久儲存在安裝的系統中。
    </para>
   </note>
   
  </sect2>

  <sect2 xml:id="sec-grub2-password">
   <title>設定開機密碼</title>
   <para>
    即使在作業系統開機之前，GRUB 2 也支援對檔案系統的存取。沒有 root 權限的使用者可以存取 Linux 系統中的檔案，而在系統開機後，他們將無權存取這些檔案。若要阻擋此類型的存取，或防止使用者啟動特定的功能表項目，請設定開機密碼。
   </para>
   <important>
    <title>開機需要密碼</title>
    <para>
     如果設定了開機密碼，則每次開機時都需要輸入該密碼，這意味著系統不會自動開機。
    </para>
   </important>
   <para>
    按如下步驟設定開機密碼。或者使用 YaST (<xref linkend="vle-grub2-yast2-boot-password"/>)。
   </para>
   <procedure>
    <step>
     <para>
      使用 <command>grub2-mkpasswd-pbkdf2</command> 來加密密碼：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> grub2-mkpasswd-pbkdf2
Password: ****
Reenter password: ****
PBKDF2 hash of your password is grub.pbkdf2.sha512.10000.9CA4611006FE96BC77A...
</screen>
    </step>
    <step>
     <para>
      將產生的字串連同 <command>set superusers</command> 指令一起貼到檔案 <filename>/etc/grub.d/40_custom</filename> 中。
     </para>
<screen>set superusers="root"
password_pbkdf2 root grub.pbkdf2.sha512.10000.9CA4611006FE96BC77A...</screen>
    </step>
    <step>
     <para>
      若要將變更輸入主要組態檔案中，請執行：
     </para>
     <screen><prompt>&gt; </prompt><command>sudo</command> grub2-mkconfig -o /boot/grub2/grub.cfg</screen>
    </step>
   </procedure>
   <para>
    在重新開機後，當您嘗試啟動某個功能表項目時，系統會提示您輸入使用者名稱和密碼。輸入 <literal>root</literal> 以及您在執行 <command>grub2-mkpasswd-pbkdf2</command> 指令期間輸入的密碼。如果身分證明正確，系統將啟動選定的開機項目。
   </para>
   <para>
    如需詳細資訊，請參閱 <link xlink:href="https://www.gnu.org/software/grub/manual/grub.html#Security"/>。
   </para>
  </sect2>
  <sect2 xml:id="sec-grub2-authorization">
   <title>開機功能表項目的授權存取權限</title>
   <para>
    您可以將 GRUB 2 設定為允許根據授權層級存取開機功能表項目。您可以設定多個受密碼保護的使用者帳戶，並為其指定不同功能表項目的存取權限。若要在 GRUB 2 中設定授權，請執行以下步驟：
   </para>
   <procedure>
    <step>
     <para>
      為要在 GRUB 2 中使用的每個使用者帳戶建立並加密一個密碼。依<xref linkend="sec-grub2-password"/>所述使用 <command>grub2-mkpasswd-pbkdf2</command> 指令。
     </para>
    </step>
    <step>
     <para>
      刪除 <filename>/etc/grub.d/10_linux</filename> 檔案。這樣可以防止輸出預設的 GRUB 2 功能表項目。
     </para>
    </step>
    <step>
     <para>
      編輯 <filename>/boot/grub2/custom.cfg</filename> 檔案，並以手動方式新增自訂功能表項目。下面的範本是一個範例，請調整該範本，以使其更適合您的使用案例：
     </para>
<screen>
set superusers=admin
password admin <replaceable>ADMIN_PASSWORD</replaceable>
password maintainer <replaceable>MAINTAINER_PASSWORD</replaceable>

menuentry 'Operational mode' {
  insmod ext2
  set root=hd0,1
  echo 'Loading Linux ...'
  linux /boot/vmlinuz root=/dev/vda1 $GRUB_CMDLINE_LINUX_DEFAULT $GRUB_CMDLINE_LINUX mode=operation
  echo 'Loading Initrd ...'
  initrd /boot/initrd
}

menuentry 'Maintenance mode' --users maintainer {
  insmod ext2
  set root=hd0,1
  echo 'Loading Linux ...'
  linux /boot/vmlinuz root=/dev/vda1 $GRUB_CMDLINE_LINUX_DEFAULT $GRUB_CMDLINE_LINUX mode=maintenance
  echo 'Loading Initrd ...'
  initrd /boot/initrd
}
</screen>
    </step>
    <step>
     <para>
      將變更輸入至主要組態檔案中：
     </para>
     <screen><prompt>&gt; </prompt><command>sudo</command> grub2-mkconfig -o /boot/grub2/grub.cfg</screen>
    </step>
   </procedure>
   <para>
    在上面的範例中：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      GRUB 2 功能表包含以下兩個項目：<guimenu>操作模式</guimenu>和<guimenu>維護模式</guimenu>。
     </para>
    </listitem>
    <listitem>
     <para>
      如果未指定使用者，則兩個開機功能表項目都可以存取，但任何人都無法存取 GRUB 2 指令行，或編輯現有功能表項目。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>admin</literal> 使用者可以存取 GRUB 2 指令行以及編輯現有的功能表項目。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>maintenance</literal> 使用者可以選取復原功能表項目。
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <xi:include href="grub2_yast_i.xml"/>
 
 <sect1 xml:id="sec-grub2-commands">
  <title>實用的 GRUB 2 指令</title>

  <variablelist>
   <varlistentry xml:id="vle-grub2-mkconfig">
    <term><command>grub2-mkconfig</command>
    </term>
    <listitem>
     <para>
      依據 <filename>/etc/default/grub</filename> 以及 <filename>/etc/grub.d/</filename> 中的程序檔產生新的 <filename>/boot/grub2/grub.cfg</filename>。
     </para>
     <example>
      <title>grub2-mkconfig 用法</title>
<screen>grub2-mkconfig -o /boot/grub2/grub.cfg</screen>
     </example>
     <tip>
      <title>語法檢查</title>
      <para>
       執行不帶任何參數的 <command>grub2-mkconfig</command> 會將組態列印至 STDOUT 以供使用者檢查。在寫入 <filename>/boot/grub2/grub.cfg</filename> 後使用 <xref linkend="vle-grub2-script-check"/> 可以檢查其語法。
      </para>
     </tip>
     <important>
      <title><command>grub2-mkconfig</command> 無法修復 UEFI 安全開機表</title>
      <para>
       如果您使用的是 UEFI 安全開機，而您的系統無法再正常連接 GRUB 2，則您可能需要另外重新安裝 Shim 並重新產生 UEFI 開機表。為此請使用：
      </para>
<screen><prompt role="root"># </prompt>shim-install --config-file=/boot/grub2/grub.cfg</screen>
     </important>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="vle-grub2-mkrescue">
    <term><command>grub2-mkrescue</command></term>
    <listitem>
     <para>
      為安裝的 GRUB 2 組態建立一個可開機的救援影像。
     </para>
     <example>
      <title>grub2-mkrescue 用法</title>
<screen>grub2-mkrescue -o save_path/name.iso iso</screen>
     </example>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="vle-grub2-script-check">
    <term><command>grub2-script-check</command>
    </term>
    <listitem>
     <para>
      檢查指定檔案中有無語法錯誤。
     </para>
     <example>
      <title>grub2-script-check 用法</title>
<screen>grub2-script-check /boot/grub2/grub.cfg</screen>
     </example>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>grub2-once</command>
    </term>
    <listitem>
     <para>
      僅設定下次開機的預設開機項目。若要取得可用開機項目的清單，請使用 <option>--list</option> 選項。
     </para>
     <example>
      <title>grub2-once 用法</title>
<screen>grub2-once number_of_the_boot_entry</screen>
     </example>
     <tip>
      <title><command>grub2-once</command> 說明</title>
      <para>
       不使用任何選項呼叫該程式可以取得所有可能選項的完整清單。
      </para>
     </tip>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-grub2-info">
  <title>更多資訊</title>

  <para>
   如需關於 GRUB 2 更進一步的資訊，請參閱 <link xlink:href="https://www.gnu.org/software/grub/"/>。另請參閱 <command>grub</command> info 頁面。<phrase os="sles;sled">您也可以在「技術資訊搜尋」中搜尋關鍵字<quote>GRUB 2</quote>，取得關於特殊問題的資訊，網址是 <link xlink:href="https://www.suse.com/support"/>。</phrase>
  </para>
 </sect1>
</chapter>
