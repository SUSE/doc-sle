<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="yast2_ncurses.xml" version="5.0" xml:id="cha-yast-text">

 <title>文字模式的 YaST</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  本章適用對象為未在其系統上執行 X 伺服器，且依賴以文字為基礎的安裝工具的系統管理員及進階使用者。它提供了一些基本資訊，說明如何在文字模式中啟動與操作 YaST。
 </para>
 <para>
  文字模式下的 YaST 使用 ncurses 程式庫來提供簡單的虛擬圖形使用者介面。依預設，ncurses 程式庫已安裝。若要執行 YaST，終端模擬器的大小不能小於 80x25 個字元。
 </para>
 <figure xml:id="fig-yast2-ncurses">
  <title>文字模式中的 YaST 主視窗</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="yast2_ncurses_main.png" width="70%"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="yast2_ncurses_main.png" width="75%"/>
   </imageobject>
  </mediaobject>
 </figure>
 <para>
  在文字模式中啟動 YaST 時，會顯示 YaST 控制中心 (請參閱<xref linkend="fig-yast2-ncurses" xrefstyle="select:label nopage"/>)。主要視窗包含 3 個區域。左框架內包含各種模組所屬的類別。此框架在 YaST 啟動時處於使用中狀態，因此會以白色的粗框線標示。使用中的類別處於選取狀態。右框架內包含作用中類別可以使用的各個模組的綜覽。下方框架中有<guimenu>說明</guimenu>按鈕與<guimenu>結束</guimenu>按鈕。
 </para>
 <para>
  啟動 YaST 控制中心時，會自動選取<guimenu>軟體</guimenu>類別。您可以使用 <keycap function="down"/> 與 <keycap function="up"/> 來變更類別。若要從類別中選取模組，可以使用 <keycap function="right"/> 啟動右框架，然後使用 <keycap function="down"/> 和 <keycap function="up"/> 選取模組。您可以按住方向鍵不放來捲動可用模組清單。選取模組後，按 <keycap function="enter"/> 將其啟動。
 </para>
 <para>
  模組中的各個按鈕或選項欄位中，都有一個反白顯示的字母 (預設為黃色)。您可以使用 <keycombo action="press"><keycap function="alt"/><keycap>反白的字母</keycap></keycombo>直接選取按鈕，而不必再使用 <keycap function="tab"/> 導覽至該處。按 <keycombo action="press"><keycap function="alt"/><keycap>Q</keycap></keycombo> 或選取<guimenu>結束</guimenu>並按 <keycap function="enter"/> 可離開 YaST 控制中心。
 </para>
 <tip>

  <title>重新整理 YaST 對話方塊</title>
  <para>
   如果 YaST 對話方塊遭毀損或破壞 (例如在調整視窗大小時)，請按 <keycombo action="press"><keycap function="control"/><keycap>L</keycap></keycombo> 重新整理並還原其內容。
  </para>
 </tip>

 <sect1 xml:id="sec-yast-navi-ncurses-modul">
  <title>在模組中瀏覽</title>

  <para>
   以下對 YaST 模組中控制元素的描述假設所有的功能鍵及 <keycap function="alt"/> 按鍵組合都起作用，且未被指定不同的全域功能。如需有關可能的例外狀況的資訊，請參閱<xref linkend="sec-yast-ncurses-tasten"/>。
  </para>

  <variablelist>
   <varlistentry>
    <term>在按鈕與選項清單中瀏覽</term>
    <listitem>
     <para>
      使用 <keycap function="tab"/> 可以在按鈕與包含選項清單的框架之間進行瀏覽。若要反向瀏覽，請使用 <keycombo action="press"> <keycap function="alt"/>
      <keycap function="tab"/> </keycombo> 組合或 <keycombo action="press">
      <keycap function="shift"/> <keycap function="tab"/> </keycombo> 組合。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>在選項清單中瀏覽</term>
    <listitem>
     <para>
      在作用中且包含選項清單的框架中，您可以使用方向鍵 (<keycap function="up"/> 和 <keycap function="down"/>)，以便在其中的個別元素之間進行瀏覽。如果框架中個別項目超出其寬度，您可以使用 <keycombo action="press"><keycap function="shift"/>
      <keycap function="right"/></keycombo> 或 <keycombo action="press">
      <keycap function="shift"/> <keycap function="left"/></keycombo> 以水平方式向右捲動或向左捲動。或者使用 <keycombo action="press"> <keycap function="control"/> <keycap>E</keycap>
      </keycombo> 或 <keycombo action="press"> <keycap function="control"/>
      <keycap>A</keycap> </keycombo>。如果使用 <keycap function="right"/> 或 <keycap function="left"/> 導致作用中的框架或目前的選項清單發生變更 (如同在控制中心內)，您也可以使用此按鍵組合。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>按鈕、圓形按鈕以及核取方塊</term>
    <listitem>
     <para>
      如果要選取有空白方括號 (核取方塊) 的按鈕，或是有空白括號 (選項圓鈕) 的按鈕，請按 <keycap function="space"/> 或 <keycap function="enter"/>。或者，也可以直接使用 <keycombo action="press">
      <keycap function="alt"/> <keycap>反白的字母</keycap></keycombo> 選取選項圓鈕與核取方塊。在此狀況中，您不需按 <keycap function="enter"/> 來做確認。如果您使用 <keycap function="tab"/> 瀏覽至某個項目，按 <keycap function="enter"/> 即可執行所選取的動作或啟用個別的功能表項目。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>功能鍵</term>
    <listitem>
     <para>
      功能鍵 (<keycap>F1</keycap> ... <keycap>F12</keycap>) 可讓您快速存取各種按鈕。YaST 螢幕底部的行中顯示了可用的功能鍵組合 (<literal>F<replaceable>X</replaceable></literal>)。因為不同的模組提供不同的按鈕 (<guimenu>詳細資料</guimenu>、<guimenu>資訊</guimenu>、<guimenu>新增</guimenu>、<guimenu>刪除</guimenu>等等)，所以各個功能鍵實際對應的按鈕視作用中的 YaST 模組而有所不同。您可以將 <keycap>F10</keycap> 當作<guimenu>接受</guimenu>、<guimenu>確定</guimenu>、<guimenu>下一步</guimenu>以及<guimenu>完成</guimenu>來使用。按 <keycap>F1</keycap> 可存取 YaST 說明。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>在 ncurses 模式中使用導覽樹狀結構</term>
    <listitem>
     <para>
      某些 YaST 模組使用視窗左側的導覽樹狀結構來選取組態對話方塊。使用方向鍵 (<keycap function="up"/> 和 <keycap function="down"/>) 可以在樹狀結構中進行導覽。使用 <keycap function="space"/> 可以開啟或關閉樹狀結構中的項目。在 ncurses 模式中，於導覽樹狀結構中選取後必須按 <keycap function="enter"/> 才能顯示選取的對話方塊。這樣做的目的是為了在導覽樹狀結構時省去費時的重新描繪程序。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>在軟體安裝模組中選取軟體</term>
    <listitem>
     <para>
      使用左側的過濾器可以限制顯示的套件數量。已安裝的套件標有字母 <literal>i</literal>。若要變更套件的狀態，請按 <keycap function="space"/> 或 <keycap function="enter"/>。或者，也可以使用<guimenu>動作</guimenu>功能表選取所需的狀態變更 (安裝、刪除、更新、禁用或鎖定)。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <figure xml:id="fig-yast2-ncurses-inst">
   <title>軟體安裝模組</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="yast2_ncurses_inst.png" width="70%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="yast2_ncurses_inst.png" width="75%"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>

 <sect1 xml:id="sec-yast-ncurses-advanced-hotkeys">
  <title>進階按鍵組合</title>
  <para>文字模式的 YaST 具有一套進階按鍵組合。</para>
  <variablelist>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="shift"/><keycap>F1</keycap></keycombo>
    </term>
    <listitem>
     <para>
      顯示進階快速鍵清單。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="shift"/><keycap>F4</keycap></keycombo>
    </term>
    <listitem>
     <para>
      變更色彩綱要。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="control"/><keycap>\</keycap></keycombo>
    </term>
    <listitem>
     <para>
      結束應用程式。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="control"/><keycap>L</keycap></keycombo>
    </term>
    <listitem>
     <para>
      重新整理螢幕。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="control"/><keycap>D</keycap></keycombo>
     <keycap>F1</keycap>
    </term>
    <listitem>
     <para>
      顯示進階快速鍵清單。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="control"/><keycap>D</keycap></keycombo>
     <keycombo action="press"><keycap function="shift"/><keycap> D</keycap></keycombo>
    </term>
    <listitem>
     <para>
      以螢幕擷取畫面的形式將對話方塊傾印到記錄檔案。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <keycombo action="press"><keycap function="control"/><keycap>D</keycap></keycombo>
     <keycombo action="press"><keycap function="shift"/><keycap>Y</keycap></keycombo>
    </term>
    <listitem>
     <para>
      開啟 YDialogSpy 以查看工具樹階層。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 <sect1 xml:id="sec-yast-ncurses-tasten">
  <title>組合鍵的限制</title>

  <para>
   如果您的視窗管理員使用了全部的 <keycap function="alt"/> 組合，則 YaST 中的 <keycap function="alt"/> 組合可能無效。像是 <keycap function="alt"/> 或 <keycap function="shift"/> 等鍵也可能事先已由終端機的設定所佔用。
  </para>

  <variablelist>
   <varlistentry>
    <term>使用 <keycap function="escape"/> 取代 <keycap function="alt"/>
    </term>
    <listitem>
     <para>
      您可以使用 <keycap function="escape"/> 來取代 <keycap function="alt"/>，而不使用 <keycap function="alt"/>。例如，<keycombo action="seq">
      <keycap function="escape"/><keycap>H</keycap></keycombo> 可取代 <keycombo action="press">
      <keycap function="alt"/><keycap>H</keycap></keycombo>。(先按 <keycap function="escape"/>，<emphasis>然後</emphasis>按 <keycap>H</keycap>。)
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term> 您可以使用 <keycombo action="press"><keycap function="control"/><keycap>F</keycap></keycombo> 與 <keycombo action="press"><keycap function="control"/><keycap>B</keycap></keycombo> 來往前瀏覽和往後瀏覽
    </term>
    <listitem>
     <para>
      如果 <keycap function="alt"/> 和 <keycap function="shift"/> 組合已先由視窗管理員或終端機所佔用，則請使用 <keycombo action="press"> <keycap function="control"/>
      <keycap>F</keycap></keycombo> 組合 (往前) 與 <keycombo action="press">
      <keycap function="control"/><keycap>B</keycap></keycombo> 組合 (往後) 來代替。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>功能鍵的限制</term>
    <listitem>
     <para>
      功能鍵 (<keycap>F1</keycap> ... <keycap>F12</keycap>) 也用於執行多種功能。有些特定的功能鍵可能已由終端機所佔用，無法供 YaST 使用。不過，在純文字主控台中，應該都可以使用各種的 <keycap function="alt"/> 組合鍵與功能鍵。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec-yast-ncurses-commands">
  <title>YaST 指令行選項</title>

  <para>
   除文字模式介面之外，YaST 還提供了純指令行介面。若要取得 YaST 指令行選項的清單，請輸入︰
  </para>

<screen>yast -h</screen>

  <sect2 xml:id="sec-yast-ncurses-modulaufruf">
   <title>啟動個別模組</title>
   <para>
    如果要節省時間，您可以直接啟動個別的 YaST 模組。若要啟動模組，請輸入︰
   </para>
<screen>yast &lt;module_name&gt;</screen>
   <para>
    使用 <command>yast -l</command> 或 <command>yast --list</command>，則可以檢視一個清單，其中包含您系統中所有可用的模組名稱。例如，使用 <command>yast lan</command> 可啟動網路模組。
   </para>
  </sect2>

  <sect2 xml:id="sec-yast-ncurses-cmdl">
   <title>透過指令行安裝套件</title>
   <para>
    如果您知道套件名稱，並且此套件是由某個使用中的安裝儲存庫所提供，則可以使用指令行選項 <option>-i</option> 來安裝套件︰
   </para>
<screen>yast -i &lt;package_name&gt;</screen>
   <para>
    或
   </para>
<screen>yast --install &lt;package_name&gt;</screen>
   <para>
    <replaceable>PACKAGE_NAME</replaceable> 可以是透過相依項檢查安裝的單個簡短套件名稱 (例如 <systemitem class="resource">gvim</systemitem>)，也可以是並非透過相依項檢查安裝的 RPM 套件的完整路徑。
   </para>
   <para>
    如果您需要包含 YaST 無法提供的功能，以指令行為基礎的軟體管理公用程式，可以考慮使用 Zypper。此公用程式使用相同的軟體管理程式庫，此程式庫也是 YaST 套件管理員的基礎。<xref linkend="sec-zypper"/>中介紹了 Zypper 的基本用法。
   </para>
  </sect2>

  <sect2 xml:id="sec-yast-ncurses-modulaufruf-installing">
   <title>YaST 模組的指令行參數</title>
   <para>
    為使用程序檔中的 YaST 功能，YaST 提供了可支援個別模組的指令行。並不是所有模組都有指令行支援。若要顯示某模組的可用選項，請輸入︰
   </para>
<screen>yast &lt;module_name&gt; help</screen>
   <para>
    如果某模組未提供指令行支援，則此模組將在文字模式中啟動，並且系統會顯示以下訊息︰
   </para>
<screen>This YaST module does not support the command line interface.</screen>
  </sect2>
 </sect1>
</chapter>
