<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ulp.xml" version="5.0" xml:id="cha-ulp" xml:lang="zh-cn">
  <title>用户空间实时修补</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
    <abstract>
      <para>
        本章介绍用户空间实时修补的基本原理和用法。
      </para>
    </abstract>
  </info>
  <sect1 xml:id="sec-ulp">
    <title>关于用户空间实时修补</title>

    

    

    <para>
      用户空间实时修补 (ULP) 是指在不中断正在运行的进程的情况下，将补丁应用到该进程所使用的库的过程。每次以实时补丁的形式提供安全修复程序时，在应用实时补丁后，客户服务的安全性即会得到保障，而无需重启动相关进程。
    </para>

    <para>
      实时修补操作使用作为 <systemitem>libpulp</systemitem> 的一部分的 <systemitem>ulp</systemitem> 工具来执行。<systemitem>libpulp</systemitem> 是一个由 <systemitem>libpulp.so</systemitem> 库和 <command>ulp</command> 二进制文件组成的框架。该二进制文件用于使库可实时修补以及应用实时补丁。
    </para>

    <tip>
      <para>
        您可以通过 <command>sudo</command> 机制以普通用户或特权用户身份运行 <command>ulp</command> 命令。区别在于通过 <command>sudo</command> 运行 <command>ulp</command>，您可以查看 <systemitem class="username">root</systemitem> 所运行的进程或修补进程的信息。
      </para>
    </tip>

    <sect2 xml:id="sec-ulp-prereqs">
      <title>先决条件</title>
      <para>
        要使 ULP 正常工作，必须满足两个要求。
      </para>
      <itemizedlist>
        
        <listitem os="sles;sled">
          <para>
            运行以下命令在系统上安装 ULP：
          </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper in libpulp0 libpulp-tools</screen>
        </listitem>
        <listitem>
          <para>
            必须在加载 <systemitem>libpulp.so.0</systemitem> 库之前启动具有所需实时修补支持的应用程序。有关详细信息，请参见<xref linkend="sec-ulp-libpulp"/>。
          </para>
        </listitem>
      </itemizedlist>
    </sect2>

    <sect2 xml:id="sec-ulp-supported-libs">
      <title>支持的库</title>
      <para>
        目前仅支持 <systemitem>glibc</systemitem> 和 <systemitem>openssl</systemitem> (<systemitem>openssl1_1</systemitem>)。其他软件包将在它们准备好实时修补后可用。要接收 <systemitem>glibc</systemitem> 和 <systemitem>openssl</systemitem> 实时补丁，请安装 <package>glibc-livepatches</package> 和 <package>openssl-livepatches</package> 软件包：
      </para>
<screen os="sled;sles"><prompt>&gt; </prompt>zypper install glibc-livepatches openssl-livepatches</screen>

      
    </sect2>

    <sect2 xml:id="sec-ulp-libpulp">
      <title>使用 <systemitem>libpulp</systemitem></title>
      <para>
        要实现对某个应用程序的实时修补，您需要在启动该应用程序时预加载 <systemitem>libpulp.so.0</systemitem> 库：
      </para>
<screen><prompt>&gt; </prompt>LD_PRELOAD=/usr/lib64/libpulp.so.0 <replaceable>APPLICATION_CMD</replaceable></screen>
      <sect3 xml:id="sec-ulp-livepatch-check">
        <title>检查库是否可实时修补</title>
        <para>
          要检查库是否可实时修补，请使用以下命令：
        </para>
<screen><prompt>&gt; </prompt>ulp livepatchable <replaceable>PATH_TO_LIBRARY</replaceable></screen>
      </sect3>
      <sect3 xml:id="sec-ulp-livepatch-container-check">
        <title>检查 <filename>.so</filename> 文件是否为实时补丁容器</title>
        <para>
          如果共享对象 (<filename>.so</filename>) 包含嵌入其中的 ULP 补丁描述，则表示其为实时补丁容器。您可以使用以下命令验证它：
        </para>
<screen><prompt>&gt; </prompt>readelf -S <replaceable>SHARED_OBJECT</replaceable> | grep .ulp</screen>
        <para>
          如果输出显示共享对象中有 <literal>.ulp</literal> 和 <literal>.ulp.rev</literal> 部分，则表示其为实时补丁容器。
        </para>
      </sect3>
      <sect3 xml:id="sec-ulp-apply-livepatch">
        <title>应用实时补丁</title>
        <para>
          可以使用 <command>ulp trigger</command> 命令应用实时补丁，例如：
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> <replaceable>LIVEPATCH</replaceable>.so</screen>
        <para>
          以正在运行的进程（使用了要修补的库）的进程 ID 替换 <literal>PID</literal>，以实际的实时补丁文件替换 <literal>LIVEPATCH.so</literal>。该命令会返回以下状态消息之一：
        </para>
        <variablelist>
          <varlistentry>
            <term>SUCCESS</term>
            <listitem>
              <para>
                实时修补操作成功。
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>SKIPPED</term>
            <listitem>
              <para>
                已跳过该补丁，因为它不适用于进程中加载的任何库。
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ERROR</term>
            <listitem>
              <para>
                发生错误，您可以检查 <systemitem>libpulp</systemitem> 内部消息缓冲区以获得更多信息。有关更多信息，请参见<xref linkend="sec-ulp-internal-messages"/>。
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>
          您也可以使用通配符来应用多个实时补丁，例如：
        </para>
<screen><prompt>&gt; </prompt>ulp trigger '*.so'</screen>
        <para>
          该命令会尝试将当前文件夹中的每个补丁应用到已加载 <systemitem>libpulp</systemitem> 库的每个进程。如果补丁不适合该进程，则会自动跳过该补丁。最后，该工具会显示它成功地将多少个补丁应用到多少个进程。
        </para>
      </sect3>
      <sect3 xml:id="sec-ulp-revert-livepatch">
        <title>还原实时补丁</title>
        <para>
          您可以使用 <command>ulp trigger</command> 命令还原实时补丁。可以通过两种方法还原实时补丁。您可以使用 <option>--revert</option> 开关传递实时补丁容器来还原实时补丁：
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> --revert <replaceable>LIVEPATCH</replaceable>.so</screen>
        <para>
          或者，您也可以去除与特定库关联的所有补丁，例如：
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> --revert-all=<replaceable>LIBRARY</replaceable></screen>
        <para>
          在示例中，<replaceable>LIBRARY</replaceable> 指的是实际的库，例如 <systemitem>libcrypto.so.1.1</systemitem>。
        </para>
        <para>
          当原始实时补丁的源代码不可用时，后一种方法可能很有用。或者，您希望在目标应用程序仍在运行安全代码时去除特定的旧补丁并应用新补丁，例如：
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable>  --revert-all=libcrypto.so.1.1 new_livepatch2.so</screen>
      </sect3>
      <sect3 xml:id="sec-ulp-verify-patches">
        <title>查看应用的补丁</title>
        <para>
          您可以运行以下命令来验证已为哪些应用程序应用实时补丁：
        </para>
<screen><prompt>&gt; </prompt>ulp patches</screen>
        <para>
          输出会显示可实时修补的库和程序中加载的补丁，以及补丁解决的 bug：
        </para>
<screen>PID: 10636, name: test
  Livepatchable libraries:
    in /lib64/libc.so.6:
      livepatch: libc_livepatch1.so
        bug labels: jsc#SLE-0000
    in /usr/lib64/libpulp.so.0:</screen>
        <para>
          您还可以查看实时补丁修补的功能：
        </para>
<screen><prompt>&gt; </prompt>ulp dump <replaceable>LIVEPATCH.so</replaceable></screen>
      </sect3>
      <sect3 xml:id="sec-ulp-internal-messages">
        <title>查看内部消息队列</title>
        <para>
          来自 <systemitem>libpulp.so</systemitem> 的日志消息存储在库内的缓冲区中，除非用户请求，否则不会显示。要显示这些消息，请运行：
        </para>
<screen><prompt>&gt; </prompt>ulp messages -p <replaceable>PID</replaceable></screen>
      </sect3>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-ulp-info">
    <title>更多信息</title>

    <para>
      项目的 <link xlink:href="https://github.com/SUSE/libpulp">Git
      repository</link> 中提供了有关 <systemitem>libpulp</systemitem> 的更多信息。
    </para>
  </sect1>
</chapter>
