<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="adm_sudo.xml" version="5.0" xml:id="cha-adm-sudo">
  <title>Conceitos básicos sobre o <command>sudo</command></title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>
  <para>
    A execução de determinados comandos exige privilégios de root. No entanto, por questões de segurança e para evitar erros, não é recomendado efetuar login como <systemitem class="username">root</systemitem>. Uma abordagem mais segura é efetuar login como usuário comum e, em seguida, utilizar o <command>sudo</command> para executar comandos com privilégios elevados.
  </para>
  <para>
    No <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase>, o <command>sudo</command> é configurado para funcionar de modo parecido com o <command>su</command>. No entanto, o <command>sudo</command> oferece um mecanismo flexível que permite aos usuários executar comandos com privilégios de qualquer outro usuário. Isso pode ser usado para atribuir funções com privilégios específicos a determinados usuários e grupos. Por exemplo, é possível permitir que os membros do grupo <systemitem class="groupname">users</systemitem> executem um comando com os privilégios do usuário <systemitem class="username">wilber</systemitem>. É possível restringir ainda mais o acesso ao comando quando você não permite nenhuma opção de comando. Enquanto o su sempre requer senha de <systemitem class="username">root</systemitem> para autenticação com PAM, o <command>sudo</command> pode ser configurado para autenticar com suas próprias credenciais. Isso significa que os usuários não precisam compartilhar a senha de <systemitem class="username">root</systemitem>, o que reforça a segurança.
  </para>
  <sect1 xml:id="sec-adm-sudo-usage">
    <title>Uso básico do <command>sudo</command></title>

    <para>
      O capítulo a seguir apresenta uma introdução ao uso básico do <command>sudo</command>.
    </para>

    <sect2 xml:id="sec-adm-sudo-usage-cmd">
      <title>Executando um único comando</title>
      <para>
        Como usuário comum, você pode executar qualquer comando como <systemitem class="username">root</systemitem> inserindo <command>sudo</command> antes do comando. Isso solicitará que você forneça a senha de root. Se a autenticação for bem-sucedida, o comando será executado como <systemitem class="username">root</systemitem>:
      </para>
<screen>
<prompt>&gt; </prompt><command>id -un</command><co xml:id="co-sudo-usage-id"/>
tux
<prompt>&gt; </prompt><command>sudo</command> <command>id -un</command>
root's password:<co xml:id="co-sudo-usage-pw"/>
root
<prompt>&gt; </prompt><command>id -un</command>
tux<co xml:id="co-sudo-usage-after"/>
<prompt>&gt; </prompt><command>sudo</command> <command>id -un</command>
<co xml:id="co-sudo-usage-nopw"/>
root
</screen>
      <calloutlist>
        <callout arearefs="co-sudo-usage-id">
          <para>
            O comando <command>id -un</command> imprime o nome de login do usuário atual.
          </para>
        </callout>
        <callout arearefs="co-sudo-usage-pw">
          <para>
            A senha não aparece ao ser digitada, nem como texto sem criptografia nem como caracteres de mascaramento.
          </para>
        </callout>
        <callout arearefs="co-sudo-usage-after">
          <para>
            Apenas os comandos que começam com <command>sudo</command> são executados com privilégios elevados.
          </para>
        </callout>
        <callout arearefs="co-sudo-usage-nopw">
          <para>
            Os privilégios elevados são mantidos por um determinado período, portanto, você não precisa inserir a senha de <systemitem class="username">root</systemitem> novamente.
          </para>
        </callout>
      </calloutlist>
      <tip>
        <title>Redirecionamento de E/S</title>
        <para>
          Ao usar o <command>sudo</command>, o redirecionamento de E/S não funciona:
        </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> echo s &gt; /proc/sysrq-trigger
bash: /proc/sysrq-trigger: Permission denied
<prompt>&gt; </prompt><command>sudo</command> cat &lt; /proc/1/maps
bash: /proc/1/maps: Permission denied
</screen>
        <para>
          No exemplo acima, apenas os comandos <command>echo</command> e <command>cat</command> são executados com privilégios elevados. O redirecionamento é realizado pelo shell do usuário com os privilégios do usuário. Para realizar o redirecionamento com privilégios elevados, inicie um shell conforme explicado na <xref linkend="sec-sudo-shell"/> ou use o utilitário <command>dd</command>:
        </para>
<screen>
echo s | sudo dd of=/proc/sysrq-trigger
sudo dd if=/proc/1/maps | cat 
</screen>
      </tip>
    </sect2>

    <sect2 xml:id="sec-sudo-shell">
      <title>Iniciando um shell</title>
      <para>
        Nem sempre é prático usar o <command>sudo</command> toda vez para executar um comando com privilégios elevados. Embora você possa usar o comando <command>sudo
        bash</command>, é recomendável usar um dos mecanismos incorporados para iniciar um shell:
      </para>
      <variablelist>
        <varlistentry>
          <term><literal>sudo -s (&lt;command&gt;)</literal></term>
          <listitem>
            <para>
              Inicia um shell especificado pela variável de ambiente <envar>SHELL</envar> ou o shell padrão do usuário de destino. Se um comando for especificado, ele será passado para o shell (com a opção <option>-c</option>). Do contrário, o shell será executado no modo interativo.
            </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -s
root's password:
<prompt>root:/home/tux # </prompt>exit
<prompt>tux:~ &gt; </prompt>
</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>sudo -i (&lt;command&gt;)</literal></term>
          <listitem>
            <para>
              Semelhante a <option>-s</option>, mas inicia o shell como um shell de login. Isso significa que os arquivos de inicialização do shell (<filename>.profile</filename> etc.) são processados, e o diretório de trabalho atual é definido como o diretório pessoal do usuário de destino.
            </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:~ # </prompt>exit
<prompt>tux:~ &gt; </prompt>
            </screen>
          </listitem>
        </varlistentry>
      </variablelist>
      <tip>
        <title>Variáveis de ambiente</title>
        <para>
          Por padrão, o <command>sudo</command> não propaga as variáveis de ambiente. É possível mudar esse comportamento com a opção <literal>env_reset</literal> (consulte <xref linkend="tab-adm-sudo-options"/>).
        </para>
      </tip>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-sudo-conf">
    <title>Configurando <command>sudo</command></title>

    <para>
      O <command>sudo</command> oferece uma ampla variedade de opções configuráveis.
    </para>

    <note>
      <title>Comando sudo bloqueado</title>
      <para>
        Se você se bloqueou por engano fora do <command>sudo</command>, use <command>su
        -</command> e a senha de <systemitem class="username">root</systemitem> para iniciar um shell de root. Para corrigir o erro, execute <command>visudo</command>.
      </para>
    </note>
    
    <warning>
      <title>As configurações de exemplo são apenas para fins de demonstração</title>
      <para>
        As regras de exemplo descritas abaixo são estritamente para fins de demonstração. Use-as para entender a sintaxe geral dos arquivos de configuração do <command>sudo</command>. Não as utilize em configurações reais, pois elas não refletem a complexidade desses ambientes.
      </para>
    </warning>
    <sect2 xml:id="sudo-creating-custom-configuration-bp">
      <title>Melhores práticas de configuração do <command>sudo</command></title>
      <para>
        Antes de começar, veja a seguir algumas regras básicas para manter as configurações do <command>sudo</command>:
      </para>
      <variablelist>
        <varlistentry>
          <term>Sempre usar o <command>visudo</command> para editar arquivos de configuração do <command>sudo</command></term>
          <listitem>
            <para>
              Quaisquer mudanças na configuração do <command>sudo</command> devem ser feitas usando o comando <command>visudo</command>. <command>visudo</command> é uma ferramenta personalizada que permite editar os arquivos de configuração do <command>sudo</command> e executar verificações de sintaxe básicas, garantindo que a configuração permaneça intacta e funcional. Uma configuração do <command>sudo</command> inválida pode fazer com que o usuário seja bloqueado do próprio sistema.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Sempre criar configurações personalizadas em <filename>/etc/sudoers.d/</filename></term>
          <listitem>
            <para>
              As configurações personalizadas devem residir em <filename>/etc/sudoers.d/</filename> para serem extraídas pelo <command>sudo</command>. As definições nos arquivos de configuração personalizada têm prioridade sobre aquelas na configuração padrão em <filename>/etc/sudoers</filename>. 
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Sempre prestar atenção à ordem de leitura das configurações</term>
          <listitem>
            <para>
              Para garantir que as configurações personalizadas sejam lidas na ordem correta, use números como prefixo. Inclua zeros à esquerda para estabelecer a ordem de leitura dos arquivos. Por exemplo, <filename>01_myfirstconfig</filename> é analisado antes de <filename>10_myotherconfig</filename>. Se uma diretiva tiver sido definida em um arquivo que foi lido antes de outro arquivo que contém informações conflitantes, a diretiva que foi lida por último será aplicada. 
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Sempre usar nomes de arquivo descritivos</term>
          <listitem>
            <para>
              Use nomes de arquivo que indiquem o que o arquivo de configuração faz. Isso ajuda você a reconhecer a ação planejada da configuração do <command>sudo</command>.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <sect2 xml:id="sudo-creating-custom-config-single-user">
      <title>Criar um arquivo de configuração específico do usuário</title>
      <para>
        Crie um arquivo de configuração do <command>sudo</command> que permita a um usuário comum (<systemitem class="username">tux</systemitem>) usar o comando <command>useradd</command> com sua própria senha, em vez da senha de <systemitem class="username">root</systemitem>. 
      </para>
      <example xml:id="ex-sudo-custom-config-user">
        <title>Criar um arquivo de configuração específico do usuário</title>
        <procedure>
          <step>
            <para>
              Como administrador do sistema (<systemitem class="username">root</systemitem>), crie um arquivo de configuração personalizado que inclua as novas diretivas específicas do usuário iniciando o <command>visudo</command>. Use a numeração e um nome descritivo:
            </para>
            <screen>
  <prompt role="root"># </prompt><command>visudo -f /etc/sudoers.d/02_usermanagement</command>
            </screen>
          </step>
          <step>
            <para>
              Crie uma regra que permita ao <systemitem class="username">tux</systemitem> executar o binário <command>/usr/sbin/useradd</command> em todo o ambiente ao qual esta configuração do <command>sudo</command> será aplicada:
            </para>
            <screen>
  tux<co xml:id="co-who"/> ALL<co xml:id="co-where"/> = /usr/sbin/useradd<co xml:id="co-what"/>
            </screen>
            <calloutlist>
              <callout arearefs="co-who">
                <para>
                  Especifique o usuário ou grupo. Liste os usuários por nome ou <literal>#UID</literal> e os grupos por <literal>%GROUPNAME</literal>. Separe vários itens com vírgulas. Para negar entradas, use <literal>!</literal>.
                </para>
              </callout>
              <callout arearefs="co-where">
                <para>
                  Especifique um ou vários hosts (separados por vírgulas). Use nomes de host (completos e qualificados) ou endereços IP. Adicione <literal>ALL</literal> para impor essa configuração globalmente a todos os hosts. Use <literal>!</literal> para negações.
                </para>
              </callout>
              <callout arearefs="co-what">
                <para>
                  Especifique um ou vários executáveis (separados por vírgulas). Ao especificá-los, lembre-se das seguintes regras:
                </para>
                <variablelist>
                  <varlistentry>
                    <term><command>/usr/sbin/useradd</command></term>
                    <listitem>
                      <para>
                        Sem nenhuma opção adicional inserida, isso permite a execução de todos os comandos <command>useradd</command> possíveis.
                      </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term><command>/usr/sbin/useradd -c</command></term>
                    <listitem>
                      <para>
                        Se você especificar claramente uma opção, ela será a única permitida. Nada mais estará disponível para o usuário indicado acima.
                      </para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term><command>/usr/sbin/useradd ""</command></term>
                    <listitem>
                      <para>
                        Esse procedimento apenas permitirá que o usuário invoque um simples <command>useradd</command> sem nenhuma opção. 
                      </para>
                    </listitem>
                  </varlistentry>
                </variablelist>
                <para>
                  No exemplo acima, você talvez queira permitir todas as opções e os subcomandos ou limitá-los a alguns por motivos de segurança, mas proibir um usuário de especificar qualquer opção não faz sentido nesse contexto.
                </para>
              </callout>
            </calloutlist>
          </step>
          <step>
            <para>
              Para permitir que o usuário insira a própria senha em vez da senha de <systemitem class="username">root</systemitem>, adicione a seguinte linha:
            </para>
            <screen>Defaults:tux !targetpw
            </screen>
            <para>
              Quando ativo, esse flag exige que o usuário insira a senha do usuário de destino, ou seja, <systemitem class="username">root</systemitem>. Esse flag está habilitado por padrão em qualquer sistema <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase>. Para negá-lo, use <literal>!</literal> para exigir que o usuário insira apenas a própria senha em vez da senha de <systemitem class="username">root</systemitem>.
            </para>
          </step>
          <step>
            <para>
              Grave a configuração, saia do editor e abra um segundo shell para testar se o <command>sudo</command> está seguindo sua nova configuração.
            </para>
          </step>
        </procedure>
      </example>
    </sect2>

    <sect2 xml:id="sudo-creating-custom-config-group">
      <title>Criar configurações personalizadas agrupando itens</title>
      <para>
        Modifique a configuração de <xref linkend="ex-sudo-custom-config-user"/> para que um grupo de usuários nomeados possa executar o comando <command>useradd</command> sem a necessidade da senha de <systemitem class="username">root</systemitem>. Além disso, adicione <command>usermod</command> e <command>userdel</command> à lista de comandos disponíveis para esse grupo.
      </para>
      <example xml:id="ex-sudo-custom-config-group">
        <title>Criar configurações personalizadas agrupando itens</title>
        <procedure>
          <step>
            <para>
              Para modificar a configuração de exemplo, abra-a como administrador do sistema com o <command>visudo</command>:
            </para>
            <screen><prompt role="root"># </prompt><command>visudo /etc/sudoers.d/02_usermanagement</command>
            </screen>
          </step>
          <step>
            <para>
              Adicione outros usuários à regra em uma lista separada por vírgulas:
            </para>
            <screen>tux, wilber ALL = /usr/sbin/useradd
            </screen>
          </step>
          <step>
            <para>
              Para permitir que os usuários relacionados executem uma lista de comandos, especifique os comandos como uma lista separada por vírgulas:
            </para>
            <screen>tux, wilber ALL = /usr/sbin/useradd, /usr/sbin/usermod, /usr/sbin/userdel
            </screen>
          </step>
          <step>
            <para>
              Para permitir que os usuários listados insiram a própria senha em vez da senha de <systemitem class="username">root</systemitem>, adicione a seguinte linha:
            </para>
            <screen>Defaults:tux, wilber !targetpw
            </screen>
            <para>
              Quando ativo, esse flag exige que os usuários listados insiram a senha do usuário de destino, ou seja, <systemitem class="username">root</systemitem>. Esse flag está habilitado por padrão em qualquer sistema <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase>. Para negá-lo, use <literal>!</literal> para exigir que os usuários listados insiram apenas a própria senha em vez da senha de <systemitem class="username">root</systemitem>.
            </para>
          </step>
          <step>
            <para>
              Grave a configuração, saia do editor e abra um segundo shell para testar se o <command>sudo</command> está seguindo sua nova configuração.
            </para>
          </step>
        </procedure>
      </example>
    </sect2>

    <sect2 xml:id="sudo-creating-custom-config-aliases">
      <title>Simplificar as configurações aplicando álias</title>
      <para>
        Use álias para simplificar ainda mais a configuração personalizada de <xref linkend="ex-sudo-custom-config-group"/>. O agrupamento de itens ajuda até certo ponto, mas o uso de álias globais para usuários, comandos e hosts é a maneira mais eficiente de manter a configuração do <command>sudo</command> clara e simples.
      </para>
      <para>
        O uso de álias e grupos em vez de listas é uma maneira muito melhor de administrar as mudanças na configuração. Se um usuário sair, basta removê-lo da declaração global <literal>User_Alias</literal> no arquivo de desclaração do álias, em vez de vasculhar todos os arquivos de configuração personalizados separados. O mesmo procedimento se aplica a qualquer outro tipo de álias (<literal>Host_Alias</literal>, <literal>Cmnd_Alias</literal> e <literal>Runas_Alias</literal>).
      </para>
      <example xml:id="ex-sudo-custom-config-alias">
        <title>Simplificar as configurações aplicando álias</title>
        <procedure>
          <step>
            <para>
              Crie um novo arquivo para armazenar suas definições de álias globais:
            </para>
            <screen><prompt role="root"># </prompt><command>visudo /etc/sudoers.d/01_aliases</command>
  </screen>
          </step>
          <step>
            <para>
              Adicione a seguinte linha para criar o álias <literal>TEAMLEADERS</literal>:
            </para>
            <screen>User_Alias    TEAMLEADERS = tux, wilber
            </screen>
          </step>
          <step>
            <para>
              Adicione a seguinte linha para criar o álias <literal>USERMANAGEMENT</literal>:
            </para>
            <screen>Cmnd_Alias    USERMANAGEMENT = /usr/sbin/useradd, /usr/sbin/usermod, /usr/sbin/userdel
            </screen>
          </step>
          <step>
            <para>
              Grave suas mudanças e saia do <command>visudo</command>.
            </para>
          </step>
          <step>
            <para>
              Como administrador do sistema, inicie o <command>visudo</command> para editar o arquivo de configuração de exemplo:
            </para>
            <screen><prompt role="root"># </prompt><command>visudo -f /etc/sudoers.d/02_usermanagement</command>
            </screen>
          </step>
          <step>
            <para>
              Apague e substitua a regra anterior pela seguinte regra que usa os álias que você acabou de definir acima:
            </para>
            <screen>TEAMLEADERS ALL = USERMANAGEMENT
            </screen>
          </step>
          <step>
            <para>
              Para permitir que todos os usuários definidos por <literal>User_Alias</literal> insiram a própria senha em vez da senha de <systemitem class="username">root</systemitem>, adicione a seguinte linha:
            </para>
            <screen>Defaults:TEAMLEADERS !targetpw</screen>
          </step>
          <step>
            <para>
              Grave a configuração, saia do editor e abra um segundo shell para testar se o <command>sudo</command> está seguindo sua nova configuração.
            </para>
          </step>
        </procedure>
      </example>
    </sect2>

    <sect2 xml:id="sec-sudo-conf-syntax">
      <title>Sintaxe de configuração básica do sudoers</title>
      <para>
        Os arquivos de configuração sudoers contêm dois tipos de opções: strings e flags. Enquanto as strings podem conter qualquer valor, os flags podem ser ON ou OFF. Veja a seguir as construções de sintaxe mais importantes para os arquivos de configuração sudoers:
      </para>
<screen>
# Everything on a line after # is ignored <co xml:id="co-sudo-syntax-comment"/>
Defaults !insults # Disable the insults flag <co xml:id="co-sudo-syntax-flag"/>
Defaults env_keep += "DISPLAY HOME" # Add DISPLAY and HOME to env_keep
tux ALL = NOPASSWD: /usr/bin/frobnicate, PASSWD: /usr/bin/journalctl <co xml:id="co-sudo-syntax-rule"/>
</screen>
      <calloutlist>
        <callout arearefs="co-sudo-syntax-comment">
          <para>
            Há duas exceções: <literal>#include</literal> e <literal>#includedir</literal> são comandos regulares.
          </para>
        </callout>
        <callout arearefs="co-sudo-syntax-flag">
          <para>
            Remova o caractere <literal>!</literal> para definir o flag desejado como ON.
          </para>
        </callout>
        <callout arearefs="co-sudo-syntax-rule">
          <para>
            Consulte <xref linkend="sec-sudo-conf-rule"/>.
          </para>
        </callout>
      </calloutlist>
      <variablelist xml:id="tab-adm-sudo-options">
        <title>Opções e flags úteis</title>
        <varlistentry>
          <term><literal>targetpw</literal></term>
          <listitem>
            <para>
              Esse flag controla se o usuário que faz a chamada deve digitar a senha do usuário de destino (ON) (por exemplo <systemitem class="username">root</systemitem>) ou do usuário que faz a chamada (OFF).
            </para>
<screen>Defaults targetpw # Turn targetpw flag ON</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>rootpw</literal></term>
          <listitem>
            <para>
              Se definido, o <command>sudo</command> solicitará a senha de <systemitem class="username">root</systemitem>. O padrão é OFF.
            </para>
<screen>Defaults !rootpw # Turn rootpw flag OFF</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>env_reset</literal></term>
          <listitem>
            <para>
              Se definido, <command>sudo</command> constrói um ambiente mínimo com <envar>TERM</envar>, <envar>PATH</envar>, <envar>HOME</envar>, <envar>MAIL</envar>, <envar>SHELL</envar>, <envar>LOGNAME</envar>, <envar>USER</envar>, <envar>USERNAME</envar> e <envar>SUDO_*</envar>. Além disso, as variáveis listadas em <literal>env_keep</literal> serão importadas do ambiente de chamada. O padrão é ON.
            </para>
<screen>Defaults env_reset # Turn env_reset flag ON</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>env_keep</literal></term>
          <listitem>
            <para>
              Lista de variáveis de ambiente para manter quando o flag <literal>env_reset</literal> é ON.
            </para>
<screen>
# Set env_keep to contain EDITOR and PROMPT
Defaults env_keep = "EDITOR PROMPT"
Defaults env_keep += "JRE_HOME" # Add JRE_HOME
Defaults env_keep -= "JRE_HOME" # Remove JRE_HOME
</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>env_delete</literal></term>
          <listitem>
            <para>
              Lista de variáveis de ambiente para remover quando o flag <literal>env_reset</literal> é OFF.
            </para>
<screen>
# Set env_delete to contain EDITOR and PROMPT
Defaults env_delete = "EDITOR PROMPT"
Defaults env_delete += "JRE_HOME" # Add JRE_HOME
Defaults env_delete -= "JRE_HOME" # Remove JRE_HOME
</screen>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
        É possível também usar o token <literal>Defaults</literal> para criar álias para uma coleção de usuários, hosts e comandos. Além disso, é possível aplicar uma opção apenas a um conjunto específico de usuários.
      </para>
      <para>
        Para obter informações detalhadas sobre os arquivos de configuração sudoers, consulte <command>man 5
        sudoers</command>.
      </para>
    </sect2>

    <sect2 xml:id="sec-sudo-conf-rule">
      <title>Regras básicas do sudoers</title>
      <para>
        Cada regra segue o esquema abaixo (<literal>[]</literal> marca as partes opcionais):
      </para>
<screen>
#Who      Where         As whom      Tag                What
User_List Host_List = [(User_List)] [NOPASSWD:|PASSWD:] Cmnd_List
</screen>
      <variablelist>
        <title>Sintaxe da regra do sudoers</title>
        <varlistentry>
          <term><literal>User_List</literal></term>
          <listitem>
            <para>
              Um ou vários identificadores (separados por vírgula): um nome de usuário, um grupo no formato <literal>%GROUPNAME</literal> ou um ID de usuário no formato <literal>#UID</literal>. A negação pode ser especificada com o prefixo <literal>!</literal>.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>Host_List</literal></term>
          <listitem>
            <para>
              Um ou vários identificadores (separados por vírgula): um nome (completo) do host ou um endereço IP. A negação pode ser especificada com o prefixo <literal>!</literal>. <literal>ALL</literal> é a opção comum para <literal>Host_List</literal>.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>NOPASSWD:|PASSWD:</literal></term>
          <listitem>
            <para>
              Não é solicitada uma senha para o usuário ao executar comandos correspondentes a <literal>Cmd_List</literal> após <literal>NOPASSWD:</literal>.
            </para>
            <para>
              <literal>PASSWD</literal> é o padrão. Ele precisa ser especificado apenas quando ambos <literal>PASSWD</literal> e <literal>NOPASSWD</literal> estão na mesma linha:
            </para>
<screen>tux ALL = PASSWD: /usr/bin/foo, NOPASSWD: /usr/bin/bar</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>Cmnd_List</literal></term>
          <listitem>
            <para>
              Um ou vários especificadores (separados por vírgula): um caminho para um executável, seguido de um argumento opcional permitido.
            </para>
<screen>
/usr/bin/foo     # Anything allowed
/usr/bin/foo bar # Only "/usr/bin/foo bar" allowed
/usr/bin/foo ""  # No arguments allowed
</screen>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>
        <literal>ALL</literal> pode ser usado como <literal>User_List</literal>, <literal>Host_List</literal> e <literal>Cmnd_List</literal>.
      </para>
      <para>
        Uma regra que permite que o <systemitem class="username">tux</systemitem> execute todos os comandos como root sem digitar uma senha:
      </para>
<screen>tux ALL = NOPASSWD: ALL</screen>
      <para>
        Uma regra que permite que o <systemitem class="username">tux</systemitem> execute <command>systemctl restart
        apache2</command>:
      </para>
<screen>tux ALL = /usr/bin/systemctl restart apache2</screen>
      <para>
        Uma regra que permite que o <systemitem class="username">tux</systemitem> execute <command>wall</command> como <systemitem>admin</systemitem> sem argumentos:
      </para>
<screen>tux ALL = (admin) /usr/bin/wall ""</screen>
      <warning>
        <title>Regras não seguras</title>
        <para>
          <emphasis>Não</emphasis> use regras como <literal>ALL ALL =
          ALL</literal> sem <literal>Defaults targetpw</literal>. Do contrário, qualquer pessoa pode executar comandos como <systemitem class="username">root</systemitem>.
        </para>
      </warning>
      <important>
        <title>Winbind e sudo</title>
        <para>
          Ao especificar o nome do grupo no arquivo <filename>sudoers</filename>, use o nome do domínio NetBIOS em vez do domínio Kerberos, por exemplo:
        </para>
<screen><replaceable>%DOMAIN</replaceable>\\<replaceable>GROUP_NAME</replaceable> ALL = (ALL) ALL</screen>
        <para>
          Ao usar o winbindd, lembre-se de que o formato também depende da opção <option>winbind separator</option> no arquivo <filename>smb.conf</filename>. O padrão é <literal>\</literal>. Por exemplo, se ele for mudado para <literal>+</literal>, o formato da conta no arquivo <filename>sudoers</filename> deverá ser <literal>DOMAIN+GROUP_NAME</literal>.
        </para>
      </important>
    </sect2>
  </sect1>

  <sect1 xml:id="sec-sudo-usecases-xorg">
    <title>Usando o <command>sudo</command> com aplicativos X.Org</title>
    <para>
      Normalmente, ocorre o seguinte erro ao iniciar aplicativos gráficos com <command>sudo</command>:
    </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> xterm
xterm: Xt error: Can't open display: %s
xterm: DISPLAY is not set
</screen>
    <para>
      Uma solução alternativa simples é usar o xhost para permitir temporariamente que o usuário root acesse a sessão X do usuário local. Para fazer isso, execute o seguinte comando:
    </para>
<screen>xhost si:localuser:root</screen>
    <para>
      O comando a seguir remove o acesso concedido:
    </para>
<screen>xhost -si:localuser:root</screen>
    <warning>
      <title>Possível problema de segurança</title>
      <para>
        A execução de aplicativos gráficos com privilégios de root tem implicações de segurança. É recomendável habilitar o acesso de root para um aplicativo gráfico apenas como uma exceção. Também é recomendável revogar o acesso de root concedido logo após fechar o aplicativo gráfico.
      </para>
    </warning>
  </sect1>
  <sect1 xml:id="sec-adm-sudo-moreinfo">
    <title>Mais informações</title>

    <para>
      O comando <command>sudo --help</command> oferece uma breve visão geral das opções de linha de comando disponíveis. O comando <command>man sudoers</command> fornece informações detalhadas sobre o <filename>sudoers</filename> e sua configuração.
    </para>
  </sect1>
</chapter>
