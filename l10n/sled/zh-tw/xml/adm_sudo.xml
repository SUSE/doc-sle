<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="adm_sudo.xml" version="5.0" xml:id="cha-adm-sudo"> <title><command>sudo</command> 基本知識</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker/>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <para>
  執行某些指令需要 root 特權。但是，出於安全及避免出錯考量，我們不建議您以 <systemitem class="username">root</systemitem> 身分登入。更安全的做法是先以一般使用者身分登入，再使用 <command>sudo</command> 以提升的特權來執行指令。
 </para>
 <para>
  在 <phrase role="productname"><phrase os="sled">SUSE Linux Enterprise Desktop</phrase></phrase> 上，<command>sudo</command> 設定為與 <command>su</command> 的運作方式類似。但是，<command>sudo</command> 提供了一種靈活機制，可讓使用者使用其他任何使用者的特權執行指令。此舉可以將具有特定權限的角色指定給某些使用者和群組。例如，可以允許 <systemitem class="groupname">users</systemitem> 群組的成員以 <systemitem class="username">wilber</systemitem> 使用者的特權執行指令。您可以透過禁止任何指令選項，來進一步限制對指令的存取。su 始終要求必須提供 <systemitem class="username">root</systemitem> 密碼才能使用 PAM 進行驗證，但 <command>sudo</command> 可以設定為使用您自己的身分證明進行驗證。這表示使用者無需共用 <systemitem class="username">root</systemitem> 密碼，因而提高了安全性。
 </para>
 <sect1 xml:id="sec-adm-sudo-usage">
  <title><command>sudo</command> 基本用法</title>

  <para>
   以下章節將會介紹 <command>sudo</command> 的基本用法。
  </para>

  <sect2 xml:id="sec-adm-sudo-usage-cmd">
   <title>執行單個指令</title>
   <para>
    做為一般使用者，您可以在指令前加上 <command>sudo</command> 來以 <systemitem class="username">root</systemitem> 身分執行任何指令。系統會提示您提供 root 密碼。如果驗證成功，便會以 <systemitem class="username">root</systemitem> 身分執行指令：
   </para>
<screen>
<prompt>tux &gt; </prompt><command>id -un</command><co xml:id="co-sudo-usage-id"/>
tux
<prompt>tux &gt; </prompt><command>sudo</command> <command>id -un</command>
root's password:<co xml:id="co-sudo-usage-pw"/>
root
<prompt>tux &gt; </prompt><command>id -un</command>
tux<co xml:id="co-sudo-usage-after"/>
<prompt>tux &gt; </prompt><command>sudo</command> <command>id -un</command>
<co xml:id="co-sudo-usage-nopw"/>
root
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-usage-id">
     <para>
      <command>id -un</command> 指令會列印目前使用者的登入名稱。
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-pw">
     <para>
      輸入期間不會顯示密碼 (無論是純文字還是遮罩字元均不顯示)。
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-after">
     <para>
      只有以 <command>sudo</command> 開頭的指令才會以提升的特權執行。
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-nopw">
     <para>
      提升的權限會持續一段時間，因此您不必再次提供 <systemitem class="username">root</systemitem>。密碼。
     </para>
    </callout>
   </calloutlist>
   <tip>
    <title>I/O 重新導向</title>
    <para>
     使用 <command>sudo</command> 時，I/O 重新導向不起作用：
    </para>
<screen>
<prompt>tux &gt; </prompt><command>sudo</command> echo s &gt; /proc/sysrq-trigger
bash: /proc/sysrq-trigger: Permission denied
<prompt>tux &gt; </prompt><command>sudo</command> cat &lt; /proc/1/maps
bash: /proc/1/maps: Permission denied
</screen>
    <para>
     在上面的範例中，只有 <command>echo</command> 和 <command>cat</command> 指令才以提升的特權執行。重新導向將由使用者的外圍程序以使用者特權執行。若要以提升的特權執行重新導向，請如<xref linkend="sec-sudo-shell"/>中所述啟動外圍程序，或使用 <command>dd</command> 公用程式：
    </para>
<screen>
echo s | sudo dd of=/proc/sysrq-trigger
sudo dd if=/proc/1/maps | cat 
</screen>
   </tip>
  </sect2>

  <sect2 xml:id="sec-sudo-shell">
   <title>啟動外圍程序</title>
   <para>
    使用 <command>sudo</command> 來以提升的特權執行指令的做法並不總是可行。雖然可以使用 <command>sudo bash</command> 指令，但還是建議您使用以下其中一種內建機制來啟動外圍程序：
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>sudo -s (&lt;指令&gt;)</literal>
     </term>
     <listitem>
      <para>
       啟動由 <envar>SHELL</envar> 環境變數所指定的外圍程序或目標使用者的預設外圍程序。如果指定了某個指令，該指令將被傳送到外圍程序(使用 <option>-c</option> 選項)。否則，外圍程序將以互動式模式執行。
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -s
root's password:
<prompt>root:/home/tux # </prompt>exit
<prompt>tux:~ &gt; </prompt>
</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>sudo -i (&lt;指令&gt;)</literal>
     </term>
     <listitem>
      <para>
       與 <option>-s</option> 類似，但會做為登入外圍程序啟動外圍程序。這表示系統會處理該外圍程式的啟動檔案 (<filename>.profile</filename> 等)，並會將目前的工作目錄設定為目標使用者的主目錄。
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:~ # </prompt>exit
<prompt>tux:~ &gt; </prompt>
            </screen>
     </listitem>
    </varlistentry>
   </variablelist>
     <tip>
   <title>環境變數</title>
   <para>
    <command>sudo</command> 依預設不會傳播環境變數。使用 <literal>env_reset</literal> 選項會導致行為發生變化，請參閱<xref linkend="tab-adm-sudo-options"/>。
   </para>
  </tip>
  </sect2>

 </sect1>
 <sect1 xml:id="sec-sudo-conf">
  <title>設定 <command>sudo</command></title>

  <para>
   <command>sudo</command> 提供了各種可設定的選項。
  </para>

  <note>
   <title>因鎖定而無法使用 sudo</title>
   <para>
    如果您不小心將自己鎖定在 <command>sudo</command> 之外，則可以使用 <command>su -</command> 和 <systemitem class="username">root</systemitem> 密碼來啟動 root 外圍程序。若要修復該錯誤，請執行 <command>visudo</command>。
   </para>
  </note>

  <sect2 xml:id="sec-sudo-conf-edit">
   <title>編輯組態檔案</title>
   <para>
    <command>sudo</command> 的主要規則組態檔案為 <filename>/etc/sudoers</filename>。如果該檔案的格式錯誤，您可能便無法進入系統，因此強烈建議您使用 <command>visudo</command> 來進行編輯。visudo 可以防止發生編輯衝突，並會在儲存修改內容之前檢查語法錯誤。
   </para>
   <para>
    您可以透過設定 <envar>EDITOR</envar> 環境變數來使用 vi 以外的另一種編輯器，例如：
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo</screen>
   <para>
    請注意，<filename>/etc/sudoers</filename> 檔案是由系統套件提供的，直接在該檔案中進行修改可能會中斷更新。因此，建議將自訂組態存入 <filename>/etc/sudoers.d/</filename> 目錄下的檔案中。使用以下指令建立或編輯檔案：
   </para>
<screen>sudo visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <para>
    以下指令使用另一種編輯器 (在本例中為 <command>nano</command>) 開啟檔案：
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <note>
    <title><filename>/etc/sudoers.d</filename> 中忽略的檔案</title>
    <para>
     <filename>/etc/sudoers</filename> 中的 <literal>#includedir</literal> 指令會忽略以 <literal>~</literal> (波狀符號) 字元結尾或包含 <literal>.</literal> (點) 字元的檔案。
    </para>
   </note>
   <para>
    如需 <command>visudo</command> 指令的詳細資訊，請執行 <command>man 8 visudo</command>。
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-syntax">
   <title>sudoers 組態的基本語法</title>
   <para>
    sudoers 組態檔案包含兩種類型的選項：字串和旗標。其中，字串可以包含任何值，旗標可以開啟或關閉。sudoers 組態檔案最重要的語法建構為：
   </para>
<screen>
# Everything on a line after # is ignored <co xml:id="co-sudo-syntax-comment"/>
Defaults !insults # Disable the insults flag <co xml:id="co-sudo-syntax-flag"/>
Defaults env_keep += "DISPLAY HOME" # Add DISPLAY and HOME to env_keep
tux ALL = NOPASSWD: /usr/bin/frobnicate, PASSWD: /usr/bin/journalctl <co xml:id="co-sudo-syntax-rule"/>
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-syntax-comment">
     <para>
      存在兩個例外：<literal>#include</literal> 和 <literal>#includedir</literal> 是一般指令。
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-flag">
     <para>
      移除 <literal>! </literal> 字元可將所需旗標設定為 ON。
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-rule">
     <para>
      請參閱<xref linkend="sec-sudo-conf-rule"/>。
     </para>
    </callout>
   </calloutlist>

   <variablelist xml:id="tab-adm-sudo-options"><title>有用的旗標和選項</title>
   <varlistentry>
    <term>
     <literal>targetpw</literal>
    </term>
    <listitem>
     <para>
      此旗標控制呼叫使用者是否需要輸入密碼。如果要求輸入目標使用者 (例如 <systemitem class="username">root</systemitem>) 的密碼則為開啟，如果要求輸入其自己的密碼則為關閉。
     </para>
<screen>Defaults targetpw # Turn targetpw flag ON</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <literal>rootpw</literal>
    </term>
    <listitem>
      <para>
       如果設定，<command>sudo</command> 將提示輸入 <systemitem class="username">root</systemitem> 密碼。預設值為 OFF。
      </para>
<screen>Defaults !rootpw # Turn rootpw flag OFF</screen>
    </listitem>
   </varlistentry>
     <varlistentry>
    <term>
     <literal>env_reset</literal>
    </term>
    <listitem>
      <para>
       如果設定，<command>sudo</command> 會建構一個包含 <envar>TERM</envar>、<envar>PATH</envar>、<envar>HOME</envar>、<envar>MAIL</envar>、<envar>SHELL</envar>、<envar>LOGNAME</envar>、<envar>USER</envar>、<envar>USERNAME</envar> 和 <envar>SUDO_*</envar> 的精簡環境。此外，會從呼叫環境輸入 <literal>env_keep</literal> 中列出的變數。預設為開啟。
      </para>
<screen>Defaults env_reset # Turn env_reset flag ON</screen>
     </listitem>
     </varlistentry>
       <varlistentry>
    <term>
     <literal>env_keep</literal>
    </term>
    <listitem>
      <para>
       當 <literal>env_reset</literal> 旗標為開啟時要保留的一系列環境變數。
      </para>
<screen>
# Set env_keep to contain EDITOR and PROMPT
Defaults env_keep = "EDITOR PROMPT"
Defaults env_keep += "JRE_HOME" # Add JRE_HOME
Defaults env_keep -= "JRE_HOME" # Remove JRE_HOME
</screen>
    </listitem>
       </varlistentry>
         <varlistentry>
    <term>
     <literal>env_delete</literal>
    </term>
    <listitem>
      <para>
       當 <literal>env_reset</literal> 旗標為關閉時要移除的一系列環境變數。
      </para>
<screen>
# Set env_delete to contain EDITOR and PROMPT
Defaults env_delete = "EDITOR PROMPT"
Defaults env_delete += "JRE_HOME" # Add JRE_HOME
Defaults env_delete -= "JRE_HOME" # Remove JRE_HOME
</screen>
     </listitem>
  </varlistentry>
   </variablelist>

   <para>
    <literal>Defaults</literal> 記號還可用於建立使用者、主機和指令三者之集合的別名。除此之外，還可以將某選項僅套用到一組特定的使用者。
   </para>
   <para>
    如需 <filename>/etc/sudoers</filename> 組態檔案的詳細資訊，請諮詢 <command>man 5 sudoers</command>。
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-rule">
   <title>基本 sudoers 規則</title>
   <para>
    每個規則都遵循以下規劃 (<literal>[]</literal> 表示可選部分)：
   </para>
<screen>
#Who      Where         As whom      Tag                What
User_List Host_List = [(User_List)] [NOPASSWD:|PASSWD:] Cmnd_List
</screen>
   <variablelist>
    <title>sudoers 規則語法</title>
    <varlistentry>
     <term><literal>User_List</literal>
     </term>
     <listitem>
      <para>
       一或多個 (用逗號分隔) 識別碼：使用者名稱、以 <literal>%GROUPNAME</literal> 格式表示的群組，或是以 <literal>#UID</literal> 格式表示的使用者 ID。可以使用 <literal>! </literal> 字首來否定。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Host_List</literal>
     </term>
     <listitem>
      <para>
       一或多個 (用逗號分隔) 識別碼：完全合格的主機名稱或 IP 位址。可以使用 <literal>! </literal> 字首來否定。<literal>Host_List</literal> 的常用選項為 <literal>ALL</literal>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>NOPASSWD:|PASSWD:</literal>
     </term>
     <listitem>
      <para>
       如果使用者在 <literal>NOPASSWD:</literal> 之後執行的指令與 <literal>Cmd_List</literal> 相符，系統不會提示使用者輸入密碼。
      </para>
      <para>
       <literal>PASSWD</literal> 是預設選項。僅當 <literal>PASSWD</literal> 和 <literal>NOPASSWD</literal> 位於同一行時，才需要指定此選項：
      </para>
<screen>tux ALL = PASSWD: /usr/bin/foo, NOPASSWD: /usr/bin/bar</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Cmnd_List</literal>
     </term>
     <listitem>
      <para>
       一或多個 (用逗號分隔) 指定元：可執行檔的路徑，後跟允許使用的可選引數。
      </para>
<screen>
/usr/bin/foo     # Anything allowed
/usr/bin/foo bar # Only "/usr/bin/foo bar" allowed
/usr/bin/foo ""  # No arguments allowed
</screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    <literal>ALL</literal> 可以用作 <literal>User_List</literal>、<literal>Host_List</literal> 和 <literal>Cmnd_List</literal>。
   </para>
   <para>
    允許 <systemitem class="username">tux</systemitem> 在無需輸入密碼的情況下以 root 身分執行所有指令的規則：
   </para>
<screen>tux ALL = NOPASSWD: ALL</screen>
   <para>
    允許 <systemitem class="username">tux</systemitem> 執行 <command>systemctl restart apache2</command> 的規則：
   </para>
<screen>tux ALL = /usr/bin/systemctl restart apache2</screen>
   <para>
    允許 <systemitem class="username">tux</systemitem> 在不帶任何引數的情況下以 <systemitem>admin</systemitem> 身分執行 <command>wall</command> 的規則：
   </para>
<screen>tux ALL = (admin) /usr/bin/wall ""</screen>
   <warning>
    <title>不安全的規則</title>
    <para>
     <emphasis>不要</emphasis>使用不帶 <literal>Defaults targetpw</literal> 的 <literal>ALL ALL = ALL</literal> 等規則。否則，任何人都能夠以 <systemitem class="username">root</systemitem> 身分執行指令。
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-sudo-usecases">
  <title><command>sudo</command> 使用案例</title>

  <para>
   雖然預設組態可適用於標準使用情境，但您仍可依據特定需求自訂預設組態。
  </para>

  <sect2 xml:id="sec-sudo-usecases-userpw">
   <title>在無需提供 <systemitem class="username">root</systemitem> 密碼的情況下使用 <command>sudo</command></title>
   <para>
    依設計，<systemitem class="groupname">wheel</systemitem> 群組的成員可以用 root 身分執行所有帶有 <command>sudo</command> 的指令。下面的程序介紹如何將使用者帳戶新增至 <systemitem class="groupname">wheel</systemitem> 群組。
   </para>
   <procedure>
    <step>
     <para>
      將您的使用者帳戶新增至 <systemitem class="groupname">wheel</systemitem> 群組。
     </para>
     <para>
      如果您的使用者帳戶還不是 <systemitem class="groupname">wheel</systemitem> 群組的成員，請使用 <command>sudo usermod -a -G wheel <replaceable>USERNAME</replaceable></command> 指令新增。登出然後重新登入即可啟用變更。執行 <command>groups <replaceable>USERNAME</replaceable></command> 指令以驗證變更是否成功。
     </para>
    </step>
    <step>
     <para>
      使用使用者帳戶的普通密碼進行驗證。
     </para>
     <para>
      使用 <command>visudo</command> 指令建立檔案 <filename>/etc/sudoers.d/userpw</filename> (請參閱<xref linkend="sec-sudo-conf-edit"/>) 並新增以下內容：
     </para>
<screen>Defaults !targetpw</screen>
    </step>
    <step>
     <para>
      選取新的預設規則。
     </para>
     <para>
      依據是否希望使用者重新輸入其密碼，在 <filename>/etc/sudoers</filename> 中取消備註相應的行，並將預設規則設定為備註。
     </para>
<screen>
## Uncomment to allow members of group wheel to execute any command
# %wheel ALL=(ALL) ALL

## Same thing without a password
# %wheel ALL=(ALL) NOPASSWD: ALL
</screen>
    </step>
    <step>
     <para>
      對預設規則設定更多限制.
     </para>
     <para>
      移除 <filename>/etc/sudoers</filename> 中的 allow-everything 規則或設定為備註：
     </para>
<screen>ALL     ALL=(ALL) ALL   # WARNING! Only use this together with 'Defaults targetpw'!</screen>
     <warning>
      <title>sudoers 中可造成嚴重後果的規則</title>
      <para>
       請勿跳過此步驟。否則<emphasis>任何</emphasis>使用者都能以 <systemitem class="username">root</systemitem> 身分執行<emphasis>任何</emphasis>指令！
      </para>
     </warning>
    </step>
    <step>
     <para>
      測試組態.
     </para>
     <para>
      以 <systemitem class="groupname">wheel</systemitem> 成員身分和非成員身分執行 <command>sudo</command>。
     </para>
<screen>
<prompt>tux:~ &gt; </prompt>groups
users wheel
<prompt>tux:~ &gt; </prompt>sudo id -un
tux's password:
root
<prompt>wilber:~ &gt; </prompt>groups
users
<prompt>wilber:~ &gt; </prompt>sudo id -un
wilber is not in the sudoers file.  This incident will be reported.
</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-sudo-usecases-xorg">
   <title>對 X.Org 應用程式使用 <command>sudo</command></title>
   <para>
    使用 <command>sudo</command> 啟動圖形應用程式通常會導致以下錯誤：
   </para>
<screen>
<prompt>tux &gt; </prompt><command>sudo</command> xterm
xterm: Xt error: Can't open display: %s
xterm: DISPLAY is not set
</screen>
   <para>
    一種簡單的解決方式是使用 xhost 來暫時允許 root 使用者存取本地使用者的 X 工作階段。可使用以下指令完成此動作：
   </para>
<screen>xhost si:localuser:root</screen>
   <para>
    以下指令可移除授予的存取權：
   </para>
<screen>xhost -si:localuser:root</screen>
   <warning>
    <title>潛在安全問題</title>
    <para>
     以 root 特權執行圖形應用程式存在安全隱患。建議僅在例外的情況下，才啟用對圖形應用程式的 root 存取權。另外，建議在關閉圖形應用程式後，立即撤銷授予的 root 存取權。
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-adm-sudo-moreinfo">
  <title>更多資訊</title>
  <para>
   <command>sudo --help</command> 指令提供可用指令行選項的簡要綜覽，而 <command>man sudoers</command> 指令則會提供有關 sudoers 及其組態設定的詳細資訊。<filename/>
  </para>
 </sect1>
</chapter>
