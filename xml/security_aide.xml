<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-aide">
 <title>Intrusion detection with &aide;</title>
 <info>
      <abstract>
        <para>
    Securing your systems is a mandatory task for any mission-critical
    system administrator. Because it is impossible to always guarantee that
    the system is not compromised, it is very important to do extra checks
    regularly (for example with
    <systemitem class="daemon">cron</systemitem>) to ensure that the system
    is still under your control. This is where &aide;, the
    <emphasis>Advanced Intrusion Detection Environment</emphasis>, comes
    into play.
   </para>
      </abstract>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
    </info>
    <sect1 xml:id="sec-aide-why">
  <title>Why use &aide;?</title>

  <para>
   An easy check that often can reveal unwanted changes can be done by means
   of RPM. The package manager has a built-in verify function that checks
   all the managed files in the system for changes. To verify of all files,
   run the command <command>rpm -Va</command>. However, this command will
   also display changes in configuration files and you will need to do some
   filtering to detect important changes.
  </para>

  <para>
   An additional problem to the method with RPM is that an intelligent
   attacker will modify <command>rpm</command> itself to hide any changes
   that might have been done by some kind of root-kit which allows the
   attacker to mask its intrusion and gain root privilege. To solve this,
   you should implement a secondary check that can also be run completely
   independent of the installed system.
  </para>
 </sect1>
 <sect1 xml:id="sec-aide-setup">
  <title>Setting up an &aide; database</title>

  <important>
   <title>Initialize &aide; database after installation</title>
   <para>
    Before you install your system, verify the checksum of your medium (see
    <xref linkend="sec-installation-troubleshooting-checking-media"/>) to make sure you do not use
    a compromised source. After you have installed the system, initialize
    the &aide; database. To make sure that all went well during and
    after the installation, do an installation directly on the console,
    without any network attached to the computer. Do not leave the computer
    unattended or connected to any network before &aide; creates its
    database.
   </para>
  </important>

  <para>
   AIDE is not installed by default on &productname;. To install it,
   either use <menuchoice><guimenu>Computer</guimenu> <guimenu>Install
   Software</guimenu></menuchoice>, or enter <literal>zypper install
   aide</literal> on the command line as &rootuser;.
  </para>

  <para>
   To tell &aide; which attributes of which files should be checked, use
   the <filename>/etc/aide.conf</filename> configuration file. It must be
   modified to become the actual configuration. The first section handles
   general parameters like the location of the &aide; database file. More
   relevant for local configurations are the <systemitem>Custom
   Rules</systemitem> and the <systemitem>Directories and Files</systemitem>
   sections. A typical rule looks like the following:
  </para>

<screen>Binlib     = p+i+n+u+g+s+b+m+c+md5+sha1</screen>

  <para>
   After defining the variable <literal>Binlib</literal>, the respective
   check boxes are used in the files section. Important options include the
   following:
  </para>

  <table xml:id="tab-aide-options">
   <title>Important &aide; check boxes</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>
       <para>
        Option
       </para>
      </entry>
      <entry>
       <para>
        Description
       </para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>
        p
       </para>
      </entry>
      <entry>
       <para>
        Check for the file permissions of the selected files or directories.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        i
       </para>
      </entry>
      <entry>
       <para>
        Check for the inode number. Every file name has a unique inode
        number that should not change.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        n
       </para>
      </entry>
      <entry>
       <para>
        Check for the number of links pointing to the relevant file.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        u
       </para>
      </entry>
      <entry>
       <para>
        Check if the owner of the file has changed.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        g
       </para>
      </entry>
      <entry>
       <para>
        Check if the group of the file has changed.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        s
       </para>
      </entry>
      <entry>
       <para>
        Check if the file size has changed.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        b
       </para>
      </entry>
      <entry>
       <para>
        Check if the block count used by the file has changed.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        m
       </para>
      </entry>
      <entry>
       <para>
        Check if the modification time of the file has changed.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        c
       </para>
      </entry>
      <entry>
       <para>
        Check if the files access time has changed.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        S
       </para>
      </entry>
      <entry>
       <para>
        Check for a changed file size.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        I
       </para>
      </entry>
      <entry>
       <para>
        Ignore changes of the file name.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        md5
       </para>
      </entry>
      <entry>
       <para>
        Check if the md5 checksum of the file has changed. We recommend
        to use sha256 or sha512.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        sha1
       </para>
      </entry>
      <entry>
       <para>
        Check if the sha1 (160 Bit) checksum of the file has changed. We
        recommend to use sha256 or sha512.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        sha256
       </para>
      </entry>
      <entry>
       <para>
        Check if the sha256 checksum of the file has changed.
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        sha512
       </para>
      </entry>
      <entry>
       <para>
        Check if the sha512 checksum of the file has changed.
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   This is a configuration that checks for all files in
   <filename>/sbin</filename> with the options defined in
   <literal>Binlib</literal> but omits the
   <filename>/sbin/conf.d/</filename> directory:
  </para>

<screen>/sbin  Binlib
!/sbin/conf.d</screen>

  <para>
   To create the &aide; database, proceed as follows:
  </para>

  <procedure xml:id="pro-aide-setup-db">
   <step>
    <para>
     Open <filename>/etc/aide.conf</filename>.
    </para>
   </step>
   <step>
    <para>
     Define which files should be checked with which check boxes. For a
     complete list of available check boxes, see
     <filename>/usr/share/doc/packages/aide/manual.html</filename>. The
     definition of the file selection needs some knowledge about regular
     expressions. Save your modifications.
    </para>
   </step>
   <step>
    <para>
     To check whether the configuration file is valid, run:
    </para>
<screen>&prompt.root;aide --config-check</screen>
    <para>
     Any output of this command is a hint that the configuration is not
     valid. For example, if you get the following output:
    </para>
<screen>&prompt.root;aide --config-check
35:syntax error:!
35:Error while reading configuration:!
Configuration error</screen>
    <para>
     The error is to be expected in line 36 of
     <filename>/etc/aide.conf</filename>. Note that the error message
     contains the last successfully read line of the configuration file.
    </para>
   </step>
   <step>
    <para>
     Initialize the &aide; database. Run the command:
    </para>
<screen>&prompt.root;aide -i</screen>
   </step>
   <step>
    <para>
     Copy the generated database to a save location like a CD-R or DVD-R, a
     remote server or a flash disk for later use.
    </para>
    <important>
     <title/>
     <para>
      This step is essential as it avoids compromising your database. It is
      recommended to use a medium which can be written only once to prevent
      the database being modified. <emphasis>Never</emphasis> leave the
      database on the computer which you want to monitor.
     </para>
    </important>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-aide-check">
  <title>Local &aide; checks</title>

  <para>
   To perform a file system check, proceed as follows:
  </para>

  <procedure>
   <step>
    <para>
     Rename the database:
    </para>
<screen>&prompt.root;mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db</screen>
   </step>
   <step>
    <para>
     After any configuration change, you always need to re-initialize the
     &aide; database and subsequently move the newly generated database.
     It is also a good idea to make a backup of this database. See
     <xref linkend="sec-aide-setup"/> for more information.
    </para>
   </step>
   <step>
    <para>
     Perform the check with the following command:
    </para>
<screen>&prompt.root;aide --check</screen>
   </step>
  </procedure>

  <para>
   If the output is empty, everything is fine. If &aide; found changes,
   it displays a summary of changes, for example:
  </para>

<screen>&prompt.root;aide --check
AIDE found differences between database and filesystem!!

Summary:
  Total number of files:        1992
  Added files:                  0
  Removed files:                0
  Changed files:                1 </screen>

  <para>
   To learn about the actual changes, increase the verbose level of the
   check with the parameter <literal>-V</literal>. For the previous example,
   this could look like the following:
  </para>

<screen>&prompt.root;aide --check -V
AIDE found differences between database and filesystem!!
Start timestamp: 2009-02-18 15:14:10

Summary:
  Total number of files:        1992
  Added files:                  0
  Removed files:                0
  Changed files:                1


---------------------------------------------------
Changed files:
---------------------------------------------------

changed: /etc/passwd

--------------------------------------------------
Detailed information about changes:
---------------------------------------------------


File: /etc/passwd
  Mtime    : 2009-02-18 15:11:02              , 2009-02-18 15:11:47
  Ctime    : 2009-02-18 15:11:02              , 2009-02-18 15:11:47</screen>

  <para>
   In this example, the file <filename>/etc/passwd</filename> was touched to
   demonstrate the effect.
  </para>
 </sect1>
 <sect1 xml:id="sec-aide-independent">
  <title>System independent checking</title>

  <para>
   To avoid risk, it is advisable to also run the &aide; binary from a
   trusted source. This excludes the risk that some attacker also modified
   the aide binary to hide its traces.
  </para>

  <para>
   To accomplish this task, &aide; must be run from a rescue system that
   is independent of the installed system. With &productname; it is
   relatively easy to extend the rescue system with arbitrary programs, and
   thus add the needed functionality.
  </para>

  <para>
   Before you can start using the rescue system, you need to provide two
   packages to the system. These are included with the same syntax as you
   would add a driver update disk to the system. For a detailed description
   about the possibilities of linuxrc that are used for this purpose, see
   <link xlink:href="http://en.opensuse.org/SDB:Linuxrc"/>. In the
   following, one possible way to accomplish this task is discussed.
  </para>

  <procedure>
   <title>Starting a rescue system with &aide;</title>
   <step>
    <para>
     Provide an FTP server as a second machine.
    </para>
   </step>
   <step>
    <para>
     Copy the packages <systemitem>aide</systemitem> and
     <systemitem>mhash</systemitem> to the FTP server directory, in our case
     <filename>/srv/ftp/</filename>. Replace the placeholders
     <replaceable>ARCH</replaceable> and <replaceable>VERSION</replaceable>
     with the corresponding values:
    </para>
<screen>&prompt.root;cp DVD1/suse/<replaceable>ARCH</replaceable>/aide<replaceable>VERSION</replaceable>.<replaceable>ARCH</replaceable>.rpm /srv/ftp
&prompt.root;cp DVD1/suse/<replaceable>ARCH</replaceable>/mhash<replaceable>VERSION</replaceable>.<replaceable>ARCH</replaceable>.rpm /srv/ftp</screen>
   </step>
   <step>
    <para>
     Create an info file <filename>/srv/ftp/info.txt</filename> that
     provides the needed boot parameters for the rescue system:
    </para>
<screen>dud:ftp://&ftpname;/aide<replaceable>VERSION</replaceable>.<replaceable>ARCH</replaceable>.rpm
dud:ftp://&ftpname;/mhash<replaceable>VERSION</replaceable>.<replaceable>ARCH</replaceable>.rpm</screen>
    <para>
     Replace your FTP domain name, <replaceable>VERSION</replaceable> and
     <replaceable>ARCH</replaceable> with the values used on your system.
    </para>
   </step>
   <step>
    <para>
     Restart the server that needs to go through an &aide; check with the
     Rescue system from your DVD. Add the following string to the boot
     parameters:
    </para>
<screen>info=ftp://&ftpname;/info.txt</screen>
    <para>
     This parameter tells <command>linuxrc</command> to also read in all
     information from the <filename>info.txt</filename> file.
    </para>
   </step>
  </procedure>

  <para>
   After the rescue system has booted, the &aide; program is ready for
   use.
  </para>
 </sect1>
 <sect1 xml:id="sec-aide-more">
  <title>For more information</title>

  <para>
   Information about &aide; is available at the following places:
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     The home page of &aide;:
     <link xlink:href="http://aide.sourceforge.net"/>
    </para>
   </listitem>
   <listitem>
    <para>
     In the documented template configuration
     <filename>/etc/aide.conf</filename>.
    </para>
   </listitem>
   <listitem>
    <para>
     In several files below
     <filename>/usr/share/doc/packages/aide</filename> after installing the
     <systemitem>aide</systemitem> package.
    </para>
   </listitem>
   <listitem>
    <para>
     On the &aide; user mailing list at
     <link xlink:href="https://www.ipi.fi/mailman/listinfo/aide"/>.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
</chapter>
