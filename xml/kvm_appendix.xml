<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<appendix xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="app.kvm">
 <title>Appendix</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          </dm:bugtracker>
      </dm:docmanager>
    </info>
    <para/>
 <sect1 xml:id="app.kvm.virtio_install" condition="kvm4x86" os="sles;sled">
  <title>Installing Paravirtualized Drivers</title>

  <para/>

  <sect2 xml:id="app.kvm.virtio_install.windows">
   <title>Installing virtio Drivers for Microsoft Windows*</title>
   <para os="sles">
    &suse; has developed virtio-based drivers for Windows, which are
    available in the Virtual Machine Driver Pack (VMDP). See
    <link xlink:href="http://www.suse.com/products/vmdriverpack/"/> for more
    information on the VMDP. Installation instructions are now available in
    a dedicated official documentation.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="app.kvm.certificates">
  <title>Generating x509 Client/Server Certificates</title>

  <para>
   To be able to create x509 client and server certificates you
   need to issue them by a Certificate Authority (CA). It is recommended to
   set up an independent CA that only issues certificates for
   <systemitem class="library">libvirt</systemitem>.
  </para>

  <procedure>
   <step>
    <para>
     Set up a CA as described in
     <xref linkend="sec.security.yast_ca.module.rootca"/>.
    </para>
   </step>
   <step>
    <para>
     Create a server and a client certificate as described in
     <xref linkend="sec.security.yast_ca.module.clientserver"/>. The Common
     Name (CN) for the server certificate must be the fully qualified host
     name, while the Common Name for the client certificate can be freely
     chosen. For all other fields stick with the defaults suggested by
     &yast;.
    </para>
    <para>
     Export the client and server certificates to a temporary location (for
     example, <filename>/tmp/x509/</filename>) by performing the following
     steps:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Select the certificate on the <guimenu>certificates</guimenu> tab.
      </para>
     </step>
     <step>
      <para>
       Choose <menuchoice> <guimenu>Export</guimenu> <guimenu>Export to
       File</guimenu> <guimenu>Certificate and the Key Unencrypted in PEM
       Format</guimenu> </menuchoice>, provide the <guimenu>Certificate
       Password</guimenu> and the full path and the file name under
       <guimenu>File Name</guimenu>, for example,
       <filename>/tmp/x509/server.pem</filename> or
       <filename>/tmp/x509/client.pem</filename>.
      </para>
     </step>
     <step>
      <para>
       Open a terminal and change to the directory where you have saved the
       certificate and issue the following commands to split it into
       certificate and key (this example splits the server key):
      </para>
<screen>&prompt.user;csplit -z -f s_ server.pem '/-----BEGIN/' '{1}'
       mv s_00 servercert.pem
       mv s_01 serverkey.pem</screen>
     </step>
     <step>
      <para>
       Repeat the procedure for each client and server certificate you want to
       export.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Finally export the CA certificate by performing the following steps:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Switch to the <guimenu>Description</guimenu> tab.
      </para>
     </step>
     <step>
      <para>
       Choose <menuchoice> <guimenu>Advanced</guimenu> <guimenu>Export to
       File</guimenu> <guimenu>Only the Certificate in PEM Format</guimenu>
       </menuchoice> and enter the full path and the file name under
       <guimenu>File Name</guimenu>, for example,
       <filename>/tmp/x509/cacert.pem</filename>.
      </para>
     </step>
    </substeps>
   </step>
  </procedure>
 </sect1>
</appendix>
