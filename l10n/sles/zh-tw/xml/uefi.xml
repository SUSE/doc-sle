<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="uefi.xml" version="5.0" xml:id="cha-uefi">

 <title>UEFI (整合可延伸韌體介面)</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  UEFI (整合可延伸韌體介面) 是系統硬體隨附的韌體、系統的所有硬體元件與作業系統之間的介面。
 </para>
 <para>
  UEFI 在 PC 系統上的應用越來越廣泛，正逐漸取代傳統的 PC-BIOS。例如，UEFI 可正確支援 64 位元系統並提供安全開機 (<quote>安全開機</quote>，需要 2.3.1c 版或更高版本的韌體)，這是它最重要的功能之一。最後，所有 x86 平台上藉由 UEFI 都將可以使用標準韌體。
 </para>
 <para>
  UEFI 另外還提供下列優勢：
 </para>
 <itemizedlist mark="bullet" spacing="normal">
  <listitem>
   <para>
    從具有 GUID 分割區表 (GPT) 的大型磁碟 (超過 2 TiB) 開機。
   </para>
  </listitem>
  <listitem>
   <para>
    獨立於 CPU 的結構和驅動程式。
   </para>
  </listitem>
  <listitem>
   <para>
    具有網路功能的彈性作業系統前環境。
   </para>
  </listitem>
  <listitem>
   <para>
    CSM (相容性支援模組) 可支援透過類似於 PC-BIOS 模擬功能將舊版作業系統開機。
   </para>
  </listitem>
 </itemizedlist>
 <para>
  如需詳細資訊，請參閱 <link xlink:href="http://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface"/>。下列各節並不是一般性的 UEFI 綜覽，只是有關如何在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 中實作某些功能的提示。
 </para>
 <sect1 xml:id="sec-uefi-secboot">
  <title>安全開機</title>



  <para>
   在 UEFI 的領域里，保護開機程序即表示建立一條信任鏈。<quote>平台</quote>是此信任鏈的根；在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 環境中，可將主機板和板載韌體視為<quote>平台</quote>。換言之，它就是硬體廠商，信任鏈從硬體廠商流向元件廠商、作業系統廠商等。
  </para>

  <para>
   信任透過公用金鑰加密來表示。硬體廠商將所謂的「平台金鑰 (PK)」放入韌體中，表示信任的根。與作業系統廠商及其他的信任關係透過使用「平台金鑰」簽署其金鑰加以記錄。
  </para>

  <para>
   最後，要求任何程式碼必須由其中一個<quote>信任</quote>金鑰簽署後，韌體才將執行程式碼，以此構建安全性 — 可以是作業系統開始載入程式、位於某些 PCI Express 卡之快閃式記憶體內或磁碟上的一些驅動程式，也可以是韌體本身的更新。
  </para>

  <para>
   若要使用安全開機，您需要以韌體信任的金鑰簽署您的作業系統載入程式，並且需要作業系統載入程式驗證其載入的核心是否可信。
  </para>

  <para>

   金鑰交換金鑰 (KEK) 可新增至 UEFI 金鑰資料庫。這樣一來，您便可以使用其他證書，只要這些證書是以 PK 的私密部分簽署的即可。

  </para>

  <sect2 xml:id="sec-uefi-secboot-sle">
   <title>在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 上實作</title>
   <para>
    預設會安裝 Microsoft 的金鑰交換金鑰 (KEK)。
   </para>
   <note>
    <title>需要 GUID 分割區表 (GPT)</title>
    <para>
     預設已在 UEFI/x86_64 安裝中啟用安全開機功能。可以在<guimenu>開機載入程式設定</guimenu>對話方區塊的<guimenu>開機碼選項</guimenu>索引標籤中找到<guimenu>啟用安全開機支援</guimenu>選項。該選項支援在韌體中啟用安全開機後開機，同時也支援在停用安全開機後開機。
    </para>
    <figure>
     <title>安全開機支援</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_bootloader_boot_code_efi.png" width="70%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="yast2_bootloader_boot_code_efi.png" width="70%"/>
      </imageobject>
     </mediaobject>
    </figure>
    <para>
     安全開機功能要求 GUID 分割區表 (GPT) 以主開機記錄 (MBR) 取代舊分割區。如果 YaST 在安裝期間偵測到 EFI 模式，它將會嘗試建立 GPT 分割區。UEFI 需要在 FAT 格式 EFI 系統分割區 (ESP) 上找到 EFI 程式。
    </para>
   </note>

   <para>
    若要支援 UEFI 安全開機，需要有開機載入程式，且韌體認可其數位簽名是可信金鑰。該金鑰需要先天為韌體所信任 (無需任何手動介入)。
   </para>
   <para>
    實現此目的方法有兩種。一種方法是與硬體廠商協作，讓他們簽署一個 SUSE 金鑰，隨後 SUSE 會使用它來簽署開機載入程式。另一種方法是執行 Microsoft 的 Windows Logo Certification 程式認證開機載入程式，並讓 Microsoft 辨識 SUSE 簽署金鑰 (即，使用其 KEK 進行簽署)。目前，SUSE 透過 UEFI 簽署服務 (在此範例中為 Microsoft) 來簽署載入程式。
   </para>

   <figure xml:id="fig-uefi-secure-boot-mok2">
    <title>UEFI：安全開機程序</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="uefi-secure-boot-mok2.png" width="50%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="uefi-secure-boot-mok2.png" width="80%"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    SUSE 在實作層使用預設安裝的 <systemitem>shim</systemitem> 載入程式。這是一個智慧型解決方案，它可避免法律問題並大大簡化了認證和簽署步驟。<systemitem>shim</systemitem> 載入程式的工作是載入開機載入程式 (例如 GRUB 2) 並對它進行驗證；此開機載入程式接著會僅載入 SUSE 金鑰簽署的核心。<phrase os="sles;sled">SUSE 從全新安裝的 SLE11 SP3 開始提供此功能，並啟用 UEFI 安全開機。</phrase>
   </para>
   <para>
    信任使用者的類型有兩種：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      第一種是擁有金鑰的使用者。平台金鑰 (PK) 幾乎允許所有作業。金鑰交換金鑰 (KEK) 允許 PK 允許的所有作業，變更 PK 除外。
     </para>
    </listitem>
    <listitem>
     <para>
      第二種是擁有實際存取機器權限的任何人。擁有實際存取機器權限的使用者可以將機器重新開機並設定 UEFI。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    UEFI 提供兩種類型的變數來滿足那些使用者的需求：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      第一類變數即<quote>已驗證的變數</quote>，它們可從開機程序 (即「開機服務環境」) 和執行中作業系統中更新。僅當簽署變數新值的金鑰是用於簽署變數舊值的相同金鑰時，才能進行更新。並且它們只能附加至或變更為序號更高的值。
     </para>
    </listitem>
    <listitem>
     <para>
      第二種稱為<quote>僅開機服務變數</quote>。開機程序期間執行的所有程式碼都可以存取這些變數。在開機程序結束之後並在作業系統啟動之前，開機載入程式必須呼叫 <literal>ExitBootServices</literal> 呼叫。此後，這些變數無法再存取，且作業系統無法更改它們。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    各種 UEFI 金鑰清單屬於第一種類型，因為此類型允許線上更新與新增金鑰、驅動程式和韌體指紋，以及將它們列入黑名單。第二類變數即<quote>僅開機服務變數</quote>。該類變數可協助您以安全且支援開放原始碼的方式實作安全開機，因此符合 GPLv3 要求。
   </para>
   <para>
    SUSE 首先啟動 <systemitem>shim</systemitem>，它是一個小而簡單的 EFI 開機載入程式，由 SUSE 和 Microsoft 簽署。
   </para>
   <para>
    這允許 <systemitem>shim</systemitem> 載入並執行。
   </para>
   <para>
    <systemitem>shim</systemitem> 隨後會繼續驗證它要載入的開機載入程式是否受信任。在預設情況下，<systemitem>shim</systemitem> 將會使用內嵌於其主體的獨立 SUSE 證書。此外，<systemitem>shim</systemitem> 將允許<quote>註冊</quote>額外的金鑰，並覆寫預設的 SUSE 金鑰。在下文中，我們稱它們為<quote>機器擁有者金鑰</quote>，或簡稱為 MOK。
   </para>
   <para>
    接著，開機載入程式會在驗證核心後將其開機，核心繼而將對模組執行同樣的操作。
   </para>
  </sect2>

  <sect2 xml:id="sec-uefi-secboot-mok">
   <title>MOK (機器擁有者金鑰)</title>
   
   <para>
   若要取代特定核心、驅動程式或開機過程中的其他元件，需要使用電腦擁有者金鑰 (MOK)。<systemitem>mokutil</systemitem> 工具可協助您管理 MOK。
   </para>
   <para>
   您可以使用 <systemitem>mokutil</systemitem> 建立 MOK 註冊要求。該要求儲存在名為 <systemitem>MokNew</systemitem> 的 UEFI 執行時 (RT) 變數中。在下次開機期間，<systemitem>shim</systemitem> 開機載入程式會偵測 <systemitem>MokNew</systemitem> 並載入 <systemitem>MokManager</systemitem>，這將為您提供幾個選項。您可以使用<guimenu>從磁碟註冊金鑰</guimenu>和<guimenu>從磁碟註冊雜湊</guimenu>選項來將金鑰新增至 MokList。使用<guimenu>註冊 MOK</guimenu> 選項可從 <systemitem>MokNew</systemitem> 變數複製金鑰。
   </para>
   <para>
   通常會在 shim 無法載入 <systemitem>grub2</systemitem> 並退回到載入 MokManager 時執行從磁碟註冊金鑰。由於 <systemitem>MokNew</systemitem> 尚不存在，您可以選擇在 UEFI 分割區上尋找金鑰。 
   </para>
  </sect2>

  <sect2 xml:id="sec-uefi-secboot-custom">
   <title>將自訂核心開機</title>
   <para>
    下文以 <link xlink:href="https://en.opensuse.org/openSUSE:UEFI#Booting_a_custom_kernel"/> 為基礎。
   </para>
   <para>
    安全開機不會阻止您使用自我編譯的核心。您必須使用您自己的證書簽署該核心，並讓韌體或 MOK 知道該證書。
   </para>
   <procedure>
    <step>
     <para>
      建立用於簽署的自訂 X.509 金鑰和證書：
     </para>
<screen>openssl req -new -x509 -newkey rsa:2048 -keyout key.asc \
  -out cert.pem -nodes -days 666 -subj "/CN=$USER/"</screen>
     <para>

      如需建立證書的詳細資訊，請參閱 <link xlink:href="https://en.opensuse.org/openSUSE:UEFI_Image_File_Sign_Tools#Create_Your_Own_Certificate"/>。
     </para>
    </step>
    <step>
     <para>
      將金鑰和證書封裝成 PKCS#12 結構：
     </para>
<screen><prompt>&gt; </prompt>openssl pkcs12 -export -inkey key.asc -in cert.pem \
  -name kernel_cert -out cert.p12</screen>
    </step>
    <step>
     <para>
      產生 NSS 資料庫以與 <command>pesign</command> 配合使用：
     </para>
<screen><prompt>&gt; </prompt>certutil -d . -N</screen>
    </step>
    <step>
     <para>
      將 PKCS#12 中包含的金鑰和證書輸入到 NSS 資料庫中：
     </para>
<screen><prompt>&gt; </prompt>pk12util -d . -i cert.p12</screen>
    </step>
    <step>
     <para>
      使用 <command>pesign</command> 以新簽名<quote>保護</quote>核心：
     </para>
<screen><prompt>&gt; </prompt>pesign -n . -c kernel_cert -i arch/x86/boot/bzImage \
  -o vmlinuz.signed -s</screen>
    </step>
    <step>
     <para>
      列出核心影像上的簽名：
     </para>
<screen><prompt>&gt; </prompt>pesign -n . -S -i vmlinuz.signed</screen>
     <para>
      此時，您可以如一般方式在 <filename>/boot</filename> 中安裝核心。因為核心現在已有自訂簽名，所以需要將用於簽署的證書輸入到 UEFI 韌體或 MOK 中。
     </para>
    </step>
    <step>
     <para>
      將證書轉換為 DER 格式以便輸入到韌體或 MOK 中：
     </para>
<screen><prompt>&gt; </prompt>openssl x509 -in cert.pem -outform der -out cert.der</screen>
    </step>
    <step>
     <para>
      將證書複製到 ESP 以方便存取：
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> cp cert.der /boot/efi/</screen>
    </step>
    <step>
     <para>
      使用 <command>mokutil</command> 自動啟動 MOK 清單。
     </para>
     <stepalternatives>
      <step>
       <substeps>
        <step>
         <para>
          將證書輸入到 MOK 中：
         </para>
<screen><prompt>&gt; </prompt>mokutil --root-pw --import cert.der</screen>
         <para>
          <option>--root-pw</option> 選項可讓 <systemitem class="username">root</systemitem> 使用者直接使用。
         </para>
        </step>
        <step>
         <para>
          檢查準備就緒、即待註冊的證書清單：
         </para>
<screen><prompt>&gt; </prompt>mokutil --list-new</screen>
        </step>
        <step>
         <para>
          將系統重新開機；<systemitem>shim</systemitem> 應會啟動 MokManager。您需要輸入 <systemitem class="username">root</systemitem> 密碼以確認將證書輸入到 MOK 清單中。
         </para>
        </step>
        <step>
         <para>
          檢查是否已註冊新輸入的金鑰。
         </para>
<screen><prompt>&gt; </prompt>mokutil --list-enrolled</screen>
        </step>
       </substeps>
      </step>
      <step>
       <substeps>
        <step>
         <para>
          或者，如果要手動啟動 MOK，請按照下面的程序操作：
         </para>
         <para>
          重新開機
         </para>
        </step>
        <step>
         <para>
          在 GRUB 2 功能表中，按「<literal>c</literal>」鍵。
         </para>
        </step>
        <step>
         <para>
          類型:
         </para>
<screen>chainloader $efibootdir/MokManager.efi
boot</screen>
        </step>
        <step>
         <para>
          選取<guimenu>從磁碟註冊金鑰</guimenu>。
         </para>
        </step>
        <step>
         <para>
          導覽到 <filename>cert.der</filename> 檔案並按 <keycap function="enter"/>。
         </para>
        </step>
        <step>
         <para>
          遵循指示註冊金鑰。一般情況下，應按「<literal>0</literal>」後再按「<literal>y</literal>」進行確認。
         </para>
         <para>
          或者，韌體功能表可能提供將新金鑰新增至簽名資料庫的方法。
         </para>
        </step>
       </substeps>
      </step>
     </stepalternatives>
    </step>
   </procedure>


  </sect2>

  <sect2 xml:id="sec-uefi-secboot-non-inbox">
   <title>使用非內建驅動程式</title>
   <para>
    在啟用安全開機的情況下進行安裝的過程中，不支援新增非現成驅動程式 (即，不是 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 隨附的驅動程式)。預設不信任用於 SolidDriver/PLDP 的簽署金鑰。
   </para>
   <para>
    您可以透過兩種不同的方式，在啟用安全開機的情況下在安裝期間安裝協力廠商驅動程式。在這兩種情況下，都要：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      在安裝之前，透過韌體或系統管理工具將需要的金鑰新增至韌體資料庫。此選項取決於您具體所用的硬體。如需詳細資訊，請諮詢您的硬體廠商。
     </para>
    </listitem>
    <listitem>
     <para>
      使用 <link xlink:href="https://drivers.suse.com/"/> 上或您的硬體廠商提供的可開機驅動程式 ISO，於第一次開機時在 MOK 清單中註冊需要的金鑰。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    若要使用可開機驅動程式 ISO 在 MOK 清單中註冊驅動程式金鑰，請執行以下步驟：
   </para>
   <procedure>
    <step>
     <para>
      將上述 ISO 影像燒錄到空白 CD/DVD 媒體中。
     </para>
    </step>
    <step>
     <para>
      使用新的 CD/DVD 媒體開始安裝，並準備好標準的安裝媒體或網路安裝伺服器的 URL。
     </para>
     <para>
      如果您要進行網路安裝，請使用 <option>install=</option> 選項在指令行上輸入網路安裝來源的 URL。
     </para>
     <para>
      如果您是從光學媒體安裝，安裝程式會先從驅動程式套件開機，然後要求插入產品的第一張安裝光碟。
     </para>
    </step>
    <step>
     <para>
      安裝時將會使用包含已更新驅動程式的 initrd。
     </para>
    </step>
   </procedure>
   <para>
    如需詳細資訊，請參閱 <link xlink:href="https://drivers.suse.com/doc/Usage/Secure_Boot_Certificate.html"/>。
   </para>
  </sect2>

  <sect2 xml:id="sec-uefi-secboot-feats">

   <title>功能和限制</title>
   <para>
    以安全開機模式開機時，將會套用以下功能：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      安裝到 UEFI 預設的開機載入程式位置，這是為了保留或還原 EFI 開機項目而採用的機制。
     </para>
    </listitem>
    <listitem>
     <para>
      透過 UEFI 重新開機。
     </para>
    </listitem>
    <listitem>
     <para>
      如果沒有可回復到的傳統的 BIOS，Xen 監管程式將使用 UEFI 開機。
     </para>
    </listitem>
    <listitem>
     <para>
      支援 UEFI IPv6 PXE 開機。
     </para>
    </listitem>
    <listitem>
     <para>
      UEFI 支援視訊模式，核心可以從 UEFI 取回視訊模式，以使用相同的參數設定 KMS 模式。
     </para>
    </listitem>
    <listitem>
     <para>
      UEFI 支援從 USB 裝置開機。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    以安全開機模式開機時，必須遵守以下限制：
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      為了確保無法輕易規避安全開機，當在安全開機模式下執行時，系統會停用部分核心功能。
     </para>
    </listitem>

    <listitem>
     <para>
      必須簽署開機載入程式、核心和核心模組。
     </para>
    </listitem>
    <listitem>
     <para>
      將會停用 Kexec 和 Kdump。
     </para>
    </listitem>
    <listitem>
     <para>
      將會停用休眠 (暫停磁碟上的作業)。
     </para>
    </listitem>
    <listitem>
     <para>
      無法存取 <filename>/dev/kmem</filename> 和 <filename>/dev/mem</filename>，即使以 root 使用者身分也不行。
     </para>
    </listitem>
    <listitem>
     <para>
      無法存取 I/O 埠，即使以 root 使用者身分也不行。所有 X11 圖形驅動程式都必須使用核心驅動程式。
     </para>
    </listitem>
    <listitem>
     <para>
      不允許透過 sysfs 存取 PCI BAR。
     </para>
    </listitem>
    <listitem>
     <para>
      無法使用 ACPI 中的 <literal>custom_method</literal>。
     </para>
    </listitem>
    <listitem>
     <para>
      無法使用適用於 asus-wmi 模組的 debugfs。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>acpi_rsdp</literal> 參數對核心沒有任何影響。
     </para>
    </listitem>
   </itemizedlist>

  </sect2>
 </sect1>
 <sect1 xml:id="sec-uefi-moreinfo">
  <title>更多資訊</title>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <link xlink:href="https://www.uefi.org"/> — UEFI 首頁，您可在其中找到最新的 UEFI 規格。
    </para>
   </listitem>
   <listitem>
    <para>
     Olaf Kirch 和 Vojtěch Pavlík 發佈的部落格文章 (上述章節主要取自這些文章)：
    </para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       <link xlink:href="https://www.suse.com/c/uefi-secure-boot-plan/"/>
      </para>
     </listitem>
     <listitem>
      <para>
       <link xlink:href="https://www.suse.com/c/uefi-secure-boot-overview/"/>
      </para>
     </listitem>
     <listitem>
      <para>
       <link xlink:href="https://www.suse.com/c/uefi-secure-boot-details/"/>
      </para>
     </listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="https://en.opensuse.org/openSUSE:UEFI"/> — UEFI 與 openSUSE。
    </para>
   </listitem>
  </itemizedlist>
 </sect1>

</chapter>
