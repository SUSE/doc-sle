<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="sle_update_preparation.xml" version="5.0" xml:id="cha-update-preparation">
 <title>准备升级</title>
 <info>
  <abstract>
   <para>
    在开始升级过程之前，请确保您的系统已准备妥当。除了其他工作以外，准备工作还包括备份数据和查看发行说明。下一章将指导您完成这些步骤。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>是</dm:translation>
  </dm:docmanager>
 </info>
<remark>jufa 2021-02-09: suggestion to give this chapter a facelift: 
 Chapter 3: Preparing the upgrade - Intro - Procedure w check system version,
 release notes, back-up, listing packages, create proposal</remark>
 <sect1 xml:id="sec-update-preparation-update">
  <title>确保当前系统是最新的</title>
  <para>
   <remark>jufa 2021-02-09: add what to do if the system is older? check what
    is meant with patch level. check if update path is supported,
    link to sec-upgrade-path-supported</remark>仅支持从最新的增补级别升级系统。运行 <command>zypper patch</command> 或启动 YaST 模块 <guimenu>Online-Update</guimenu>，以确保已安装最新的系统更新。
  </para>
 </sect1>

 <sect1 xml:id="sec-update-preparation-relnotes">
  <title>阅读发行说明</title>
  <para>
   有关所有更改、新功能和已知问题的列表，请参见<link xlink:href="https://www.suse.com/releasenotes/">发行说明</link>。安装媒体上的 <filename>docu</filename> 目录中也提供了发行说明。
  </para>
   <para>
   发行说明通常只包含两个连续的版本之间的更改。如果您跳过了一个或多个服务包，另请检查所跳过服务包的发行说明。
  </para>
  <para>
   检查发行说明以了解：
  </para>
  <itemizedlist>
   <listitem>
    <para>
     您的硬件是否有特殊的注意事项；
    </para>
   </listitem>
   <listitem>
    <para>
     所用的任何软件包是否已发生重大更改；
    </para>
   </listitem>
   <listitem>
    <para>
     是否需要对您的安装实施特殊预防措施。
    </para>
   </listitem>
  </itemizedlist>

 </sect1>
 <sect1 xml:id="sec-update-preparation-backup">
  <title>创建备份</title>
  <para>
   升级前，将现有配置文件复制到独立媒体（例如磁带设备、可卸硬盘等）以备份数据。这主要适用于储存在 <filename>/etc</filename> 中的文件以及 <filename>/var</filename> 和 <filename>/opt</filename> 中的一些目录和文件。最好将 <filename>/home</filename>（<envar>HOME</envar> 目录）中的用户数据也写入备份媒体。
  </para>
  <para>
   以 <systemitem class="username">root</systemitem> 身份备份所有数据。只有 <systemitem class="username">root</systemitem> 对所有本地文件具有足够的权限。
  </para>
  <para>
   <remark>jufa 2021-02-09: check if backup function still exists and how it
    works. rework para accordingly: alternative for data back up</remark>如果您已在 YaST 中选择<guimenu>更新现有系统</guimenu>作为安装模式，则可以选择在以后的某个时间执行（系统）备份。您可以选择包含所有已修改的文件以及 <filename>/etc/sysconfig</filename> 目录中的文件。但是，此备份尚不完整，因为缺少了上述所有其他重要目录。在 <filename>/var/adm/backup</filename> 目录中查找备份。
  </para>
 </sect1>
 <sect1 xml:id="sec-update-preparation-packagelist">
  <title>列出已安装的软件包和储存库</title>
  <para>
   <remark>jufa 2021-02-08: explain importance and purposeof this list.
    Clarify if requirement or suggestion?
    Used for reverting changes or to set-up new system?</remark>在全新安装某个新的主要 SLE 版本或还原到旧版本时（举例而言），您可以保存已安装软件包的列表。
  </para>
  <note>
   <para>
    <remark>jufa: check if manual editing isstill relevant 2021-02-09</remark>请注意，并非所有已安装的软件包或使用的储存库在 SUSE Linux Enterprise 的较新版本中都可用。有些软件包或储存库可能已被重命名，有些可能已被取代。还有可能提供的一些软件包只是用于旧版，而默认会使用另一个替代它的软件包。因此，可能需要手动编辑一些文件。您可使用任何文本编辑器进行编辑。
   </para>
  </note>

  <procedure>
   <step>
    <para>
     创建包含全部所用储存库列表的文件 <filename>repositories.bak.repo</filename>：
    </para>
    <screen><prompt role="root">root # </prompt><command>zypper</command> lr -e repositories.bak</screen>
   </step>
   <step>
    <para>
    另外，创建包含所有已安装软件包的列表的文件 <filename>installed-software.bak</filename>：</para>
    <screen><prompt role="root">root # </prompt><command>rpm</command> -qa --queryformat '%{NAME}\n' &gt;
     installed-software.bak</screen>
   </step>
   <step>
   <para>
   备份这两个文件。使用以下命令可恢复储存库和已安装的软件包：
  </para>
  <screen><prompt role="root">root # </prompt><command>zypper</command> ar repositories.bak.repo
<prompt role="root">root # </prompt><command>zypper</command> install $(cat installed-software.bak)
  </screen>
    <note xml:id="note-update-prep-backup-package-amount">
     <title>更新到新的主要版本后，软件包数量会相应增加</title>
     <para>
      升级到新主要版本的系统 (SLE <replaceable>X+1</replaceable>) 包含的软件包可能会比初始系统 (SLE <replaceable>X</replaceable>) 的多，也会比选择相同模式执行的 SLE <replaceable>X+1</replaceable> 全新安装所包含的软件包多。原因如下：
     </para>
     <itemizedlist>
      <listitem>
       <para>
        软件包经过拆分，以便用户能以更高的粒度选择软件包。例如，SLE 11 上的 37 个 <package>texlive</package> 软件包已拆分成 SLE 15 上的 3000 多个软件包。
       </para>
      </listitem>
      <listitem>
       <para>
        拆分某个软件包后，在升级过程中会安装所有新软件包，以与旧版本保持相同的功能。但是，SLE <replaceable>X+1</replaceable> 全新安装的新默认设置可能不会安装所有软件包。
       </para>
      </listitem>
      <listitem>
       <para>
        出于兼容原因，可能会保留 SLE <replaceable>X</replaceable> 中的旧软件包。
       </para>
      </listitem>
      <listitem>
       <para>
        软件包依赖项和模式范围可能已发生变化。
       </para>
      </listitem>
     </itemizedlist>
    </note>
   </step>
  </procedure>
 </sect1>

 <sect1 os="sles" xml:id="sec-update-preparation-sle11">
  <title>从 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 11 SP4 升级</title>
  <para>
   如果您在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 11 SP4 上使用的是 MySQL、PostgreSQL 或基于 Java MD5 的证书，请按以下各节所述准备系统。此外，请务必查看本章的其他各节，以了解其他需要执行的准备工作。
  </para>

  <sect2 xml:id="sec-update-preparation-sle11-postgresql">
   <title>迁移 PostgreSQL 数据库</title>
   
   <para>
    如果您在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 11 上使用的是 PostgreSQL 数据库，则需要升级数据库。有关详细信息，请参见<xref linkend="sec-update-preparation-postgresql"/>。
   </para>
  </sect2>

  <sect2 xml:id="sec-update-preparation-sle11-mariadb">
   <title>迁移 MySQL 数据库</title>
   <remark>toms 2015-09-03: already reviewed by Ondrej and Kristýna.</remark>
   <para>
    从 SUSE Linux Enterprise 12 开始，SUSE 已从 MySQL 转移到 MariaDB。在开始任何升级操作之前，强烈建议您备份数据库。
   </para>
   <para>
    要进行数据库迁移，请执行以下操作：
   </para>
   <procedure>
    <step>
     <para>
      登录到 SUSE Linux Enterprise 11 计算机。
     </para>
    </step>
    <step>
     <para>
      创建转储文件：
     </para>
     <screen><prompt role="root">root # </prompt><command>mysqldump</command> -u root -p --all-databases &gt; mysql_backup.sql</screen>
     <para>
      默认情况下，<command>mysqldump</command> 不会转储 <literal>INFORMATION_SCHEMA</literal> 或 <literal>performance_schema</literal> 数据库。有关详细信息，请参见 <link xlink:href="https://dev.mysql.com/doc/refman/5.5/en/mysqldump.html"/>。
     </para>
    </step>
    <step>
     <para>
      将您的转储文件、配置文件 <filename>/etc/my.cnf</filename> 以及 <filename>/etc/mysql/</filename> 目录储存在安全位置，以供日后调查（<emphasis>不要</emphasis>用于安装！）。
     </para>
    </step>
    <step>
     <para>
      执行 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 升级。升级后，以前的配置文件 <filename>/etc/my.cnf</filename> 仍将保持不变。新配置保存在 <filename>/etc/my.cnf.rpmnew</filename> 文件中。
     </para>
    </step>
    <step>
     <para>
      根据需要配置 MariaDB 数据库。<emphasis>不要</emphasis>使用以前的配置文件和目录，只是将其用作提醒，并对其进行改编。
     </para>
    </step>
    <step>
     <para>
      确保启动 MariaDB 服务器：
     </para>
     <screen><prompt role="root">root # </prompt><command>systemctl</command> start mariadb</screen>
     <para>
      如果您希望每次引导时都启动 MariaDB 服务器，请启用以下服务：
     </para>
     <screen><prompt role="root">root # </prompt><command>systemctl</command> enable mariadb</screen>
    </step>
    <step>
     <para>
      通过连接数据库来校验 MariaDB 是否正常运行：
     </para>
     <screen><prompt role="root">root # </prompt><command>mariadb</command> -u root -p</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-update-preparation-sle11-ssl">
   <title>创建用于 Java 应用程序的非 MD5 服务器证书</title>
   <remark>toms 2016-07-27: from bsc#970153, c#24</remark>
   <remark>jufa 2021-02-09: FIXME check if still relevant, check which versions are affected</remark>
   <para>
    从 SP1 更新到 SP2 期间，在安全性修复时禁用了基于 MD5 的证书。如果您之前创建的证书是 MD5 证书，请执行以下步骤重新创建证书：
   </para>
   <procedure>
    <step>
     <para>
      打开终端窗口并以 <systemitem class="username">root</systemitem> 身份登录。
     </para>
    </step>
    <step>
     <para>
      创建一个私用密钥：
     </para>
     <screen><prompt role="root">root # </prompt><command>openssl</command> genrsa -out server.key 1024</screen>
     <para>
      如果需要强度更高的密钥，请将 <literal>1024</literal> 替换为更大的数字，例如 <literal>4096</literal>。
     </para>
    </step>
    <step>
     <para>
      创建证书签名请求 (CSR)：
     </para>
     <screen><prompt role="root">root # </prompt><command>openssl</command> req -new -key server.key -out server.csr</screen>
    </step>
    <step>
     <para>
      对证书自我签名：
     </para>
     <screen><prompt role="root">root # </prompt><command>openssl</command> x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</screen>
    </step>
    <step>
     <para>
      创建 PEM 文件：
     </para>
     <screen><prompt role="root">root # </prompt><command>cat</command> server.key server.crt &gt; server.pem</screen>
    </step>
    <step>
     <para>将 <filename>server.crt</filename>、<filename>server.csr</filename>、<filename>server.key</filename> 和 <filename>server.pem</filename> 文件放在可在其中找到密钥的相应目录中。例如，对于 Tomcat，此目录为 <filename>/etc/tomcat/ssl/</filename>。
     </para>
    </step>
   </procedure>
  </sect2>

 </sect1>

 <sect1 os="sles" xml:id="sec-update-preparation-postgresql">
  <title>迁移 PostgreSQL 数据库</title>
  <para>
   
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> <phrase role="productnumber"><phrase os="sles;sled">15 SP3</phrase></phrase> 随附 PostgreSQL 数据库版本 10、12 和 13。虽然默认版本是版本 13，但我们仍会通过 <literal>Legacy</literal> 模块提供版本 10 和 12，以便您可以从 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 的早期版本升级。
  </para>
  <para>
   由于需要完成数据库的迁移工作，因此无法使用自动升级过程。您需要手动执行从一个版本到另一个版本的迁移。
  </para>
  <para>
   迁移过程通过使用 <command>pg_upgrade</command> 命令执行，这种方法可替代传统的转储和重新装载。与<quote>转储和重新装载</quote>方法相比，<command>pg_upgrade</command> 可缩短迁移所需的时间。
  </para>
  <para>
   每个 PostgreSQL 版本的程序文件储存在不同版本的相关目录中。例如，版本 9.6 的程序文件储存在 <filename>/usr/lib/postgresql96/</filename> 中；版本 10 的储存在 <filename>/usr/lib/postgresql10/</filename> 中；版本 12 的储存在 <filename>/usr/lib/postgres12/</filename> 中。请注意，PostgreSQL 主要版本 9.6 与 10 的版本控制策略有所不同。有关详细信息，请参见<link xlink:href="https://www.postgresql.org/support/versioning/"/>。
  </para>
  <important>
   <title>从 SLE 11 升级</title>
    <para>
     从 SLE 11 升级时，<systemitem>postgresql94</systemitem> 将被卸装，不可用于将数据库迁移到更高的 PostgreSQL 版本。因此，在这种情况下，请确保先迁移 PostgreSQL 数据库，<emphasis>然后</emphasis>再升级系统。
   </para>
  </important>
  <para>
   以下过程描述如何将数据库从版本 9.6 迁移到版本 10。使用不同的版本作为起始或目标时，请相应地替换版本号。
  </para>
  <para>
   要进行数据库迁移，请执行以下操作：
  </para>
  <procedure>
   <step>
    <para>
     确保满足以下先决条件：
    </para>
    <itemizedlist>
     <listitem>
      <para>
       如果尚未通过维护更新将旧 PostgreSQL 版本的任何软件包升级到最新版本，请执行该操作。
      </para>
     </listitem>
     <listitem>
      <para>
       创建现有数据库的备份。
      </para>
     </listitem>
     <listitem>
      <para>
       安装新 PostgreSQL 主要版本的软件包。对于 SLE15 SP3，这意味着要安装
       <package>postgresql10-server</package>
       及其依赖的所有软件包。
      </para>
     </listitem>
     <listitem>
      <para>
       安装软件包
       <package>postgresql10-contrib，</package>
       其中包含命令 <command>pg_upgrade</command>。
      </para>
     </listitem>
     <listitem>
      <para>
       确保 PostgreSQL 数据区域（默认为 <filename>/var/lib/pgsql/data</filename>）中有足够的可用空间。如果空间不足，请对每个数据库使用以下 SQL 命令，以尝试减少大小（这可能需要花费很长时间！）：
      </para>
      <screen>VACUUM FULL</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     使用以下任一命令停止 PostgreSQL 服务器：
    </para>
<screen><prompt role="root">root # </prompt><command>/usr/sbin/rcpostgresql</command> stop</screen>
   <para>或</para>
<screen><prompt role="root">root # </prompt>systemctl stop postgresql.service</screen>
   <para>（取决于要用作升级起始版本的 SLE 版本）。</para>
   </step>
   <step>
    <para>
     重命名旧数据目录：
    </para>
    <screen><prompt role="root">root # </prompt><command>mv</command> /var/lib/pgsql/data /var/lib/pgsql/data.old</screen>
   </step>
   <step>
    <para>
     使用 <command>initdb</command> 手动初始化新的数据库实例，或者启动再停止 PostgreSQL 让数据库实例自动初始化：
    </para>
<screen><prompt role="root">root # </prompt><command>/usr/sbin/rcpostgresql</command> start
<prompt role="root">root # </prompt><command>/usr/sbin/rcpostgresql</command> stop</screen>
    <para>或</para>
<screen><prompt role="root">root # </prompt>systemctl start postgresql.service
<prompt role="root">root # </prompt>systemctl stop postgresql.service</screen>
    <para>（取决于要用作升级起始版本的 SLE 版本）。</para>
   </step>
   <step>
    <para>
     如果您在旧版本中更改了配置文件，请考虑将这些更改转移到新配置文件。可能受影响的文件包括 <filename>postgresql.auto.conf</filename>、<filename>postgresql.conf</filename>、<filename>pg_hba.conf</filename> 和 <filename>pg_ident.conf</filename>。这些文件的旧版本位于 <filename>/var/lib/pgsql/data.old/</filename> 中，新版本可在 <filename>/var/lib/pgsql/data</filename> 中找到。
    </para>
    <para>
     请注意，不建议复制旧配置文件，因为这可能会重写新选项、新默认值和更改的注释。
    </para>
   </step>
   <step>
    <para>
     以 <systemitem class="username">postgres</systemitem> 用户身份启动迁移过程：
    </para>
    <screen><prompt role="root">root # </prompt>su - postgres
postgres &gt; <command>pg_upgrade</command> \
 --old-datadir "/var/lib/pgsql/data.old" \
 --new-datadir "/var/lib/pgsql/data" \
 --old-bindir "/usr/lib/postgresql96/bin/" \
 --new-bindir "/usr/lib/postgresql10/bin/"</screen>
   </step>
   <step>
    <para>
     使用以下任一命令启动新数据库实例：
    </para>
<screen><prompt role="root">root # </prompt><command>/usr/sbin/rcpostgresql</command> start</screen>
    <para>或</para>
<screen><prompt role="root">root # </prompt>systemctl start postgresql.service</screen>
    <para>（取决于要用作升级起始版本的 SLE 版本）。</para>
   </step>
   <step>
    <para>
     检查迁移是否成功。测试范围取决于用例，没有任何普通的工具可以自动完成此步骤。
    </para>
   </step>
   <step>
    <para>
     去除所有旧 PostgreSQL 软件包和旧数据目录：
    </para>
<screen><prompt role="root">root # </prompt><command>zypper</command> search -s postgresql96 | xargs zypper rm -u
<prompt role="root">root # </prompt><command>rm</command> -rf /var/lib/pgsql/data.old</screen>
   </step>
  </procedure>
  <para>
   有关升级数据库或使用逻辑复制等替代方法的详细信息，请参见 <link xlink:href="https://www.postgresql.org/docs/10/upgrading.html"/> 上的官方 PostgreSQL 文档。
  </para>
 </sect1>

 <sect1 xml:id="sec-update-preparation-vms">
  <title>关闭虚拟机 Guest</title>
  <para>
   如果您的计算机充当 KVM 或 Xen 的 VM 主机服务器，请确保在更新之前关闭所有正在运行的 VM Guest。否则，更新后您可能无法访问 guest。
  </para>
 </sect1>

 <sect1 xml:id="sec-update-preparation-rmt">
  <title>调整 SMT 客户端设置</title>
  <para>
   如果您要升级的计算机已注册为 SMT 服务器的客户端，请注意以下事项：
  </para>
  <para>
   检查主机上的 <command>clientSetup4SMT.sh</command> 脚本版本是否是最新的。较旧版 SMT 的 <command>clientSetup4SMT.sh</command> 无法管理 SMT 12 客户端。如果您在 SMT 服务器上定期应用软件补丁，那么位于 <filename>&lt;SMT 主机名&gt;/repo/tools/clientSetup4SMT.sh</filename> 处的 <command>clientSetup4SMT.sh</command> 始终都是最新版本。
  </para>
  <para>
   如果将计算机升级到更高版本的 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 失败，请按<xref linkend="pro-sec-update-prep-smt-de-register" xrefstyle="select:label"/>中所述从 SMT 服务器中取消注册该计算机。然后重启动升级过程。</para>
  <procedure xml:id="pro-sec-update-prep-smt-de-register">
   <title>从 SMT 服务器中取消注册 SUSE Linux Enterprise 客户端</title>
    <step>
     <para>
      登录客户端计算机。
     </para>
    </step>
    <step>
    <para>以下步骤根据客户端的当前操作系统而异：</para>
    <itemizedlist>
     <listitem>
      <para>
       对于 SUSE Linux Enterprise 11，请执行以下命令：
      </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> suse_register -E
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/SUSEConnect
<prompt>tux &gt; </prompt><command>sudo</command> rm -rf /etc/zypp/credentials.d/*
<prompt>tux &gt; </prompt><command>sudo</command> rm -rf /etc/zypp/repos.d/*
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/zypp/services.d/*
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /var/cache/SuseRegister/*
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/suseRegister*
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /var/cache/SuseRegister/lastzmdconfig.cache
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/zmd/deviceid
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/zmd/secret</screen>
     </listitem>
     <listitem>
      <para>
       对于 SUSE Linux Enterprise 12，请执行以下命令：
      </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> SUSEConnect --de-register
<prompt>tux &gt; </prompt><command>sudo</command> SUSEConnect --cleanup
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/SUSEConnect
<prompt>tux &gt; </prompt><command>sudo</command> rm -rf /etc/zypp/credentials.d/*
<prompt>tux &gt; </prompt><command>sudo</command> rm -rf /etc/zypp/repos.d/*
<prompt>tux &gt; </prompt><command>sudo</command> rm -f /etc/zypp/services.d/*</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>
     登录 SMT 服务器。
    </para>
   </step>
   <step>
    <para>
     列出所有客户端注册，以检查是否已成功取消注册该客户端：
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> smt-list-registrations</screen>
   </step>
   <step>
    <para>
     如果该客户端的主机名仍旧列在此命令的输出中，请从第一列获取该客户端的<literal>唯一 ID</literal>。（可能列出了该客户端的多个 ID。）
    </para>
   </step>
   <step>
    <para>
     删除此客户端的注册：
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> smt-delete-registration -g <replaceable>UNIQUE_ID</replaceable></screen>
   </step>
    <step>
    <para>
     如果列出了该客户端的多个 ID，请针对每个唯一 ID 重复上述步骤。
    </para>
   </step>
   <step>
    <para>
     重新运行以下命令，以检查现在是否已成功取消注册该客户端：
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> smt-list-registrations</screen>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec-update-preparation-disk">
  <title>磁盘空间</title>

  <para>
   从旧版本到新版本，软件的大小有增长的趋势。因此，在进行更新之前，请查看可用分区空间。如果您怀疑磁盘空间不足，请先备份数据，再通过调整分区大小等方法来增大可用空间。对于每个分区应该具有多少空间，没有一般的经验可以借鉴。空间要求取决于特定的分区配置文件和选定的软件。
  </para>

  <note>
   <title>在 YaST 中自动检查是否有足够空间</title>
   <para>
    在更新过程中，YaST 会检查可用磁盘空间的容量，并在安装大小可能超出可用空间时向用户显示警告。在该情况下，执行更新会导致<emphasis>系统不可用</emphasis>！只有在您完全了解自己要进行的操作的情况下（通过事先测试），才能跳过警告继续更新。
   </para>
  </note>
  
  <sect2 xml:id="sec-update-preparation-disk-space">
   <title>检查非 Btrfs 文件系统上的磁盘空间</title>
   <para>
    使用 <command>df</command> 命令可列出可用磁盘空间。例如，在<xref linkend="ex-update-df"/>中，根分区为 <filename>/dev/sda3</filename>（作为 <filename>/</filename> 装入）。
   </para>
   <example xml:id="ex-update-df">
    <title>使用 <command>df -h</command> 列示信息</title>

<screen os="sles">Filesystem     Size  Used Avail Use% Mounted on
/dev/sda3       74G   22G   53G  29% /
tmpfs          506M     0  506M   0% /dev/shm
/dev/sda5      116G  5.8G  111G   5% /home
/dev/sda1       44G    4G   40G   9% /data</screen>
   </example>
  </sect2>

  <sect2 xml:id="sec-update-preparation-disk-btrfs-on-root">
   <title>检查 Btrfs 根文件系统上的磁盘空间</title>
   
   <para>
     在 Btrfs 文件系统上，<command>df</command> 的输出可能有误导性，因为除了原始数据分配的空间以外，Btrfs 文件系统还会为元数据分配并使用空间。
    </para>
    <para>
     因此，即使看上去仍有大量的可用空间，Btrfs 文件系统也可能会报告空间不足。发生这种情况时，为元数据分配的全部空间都已用尽。<phrase os="sles">有关如何检查 Btrfs 文件系统上已用和可用空间的细节，请参阅<xref linkend="sec-filesystems-major-btrfs-suse-space"/>。</phrase>有关详细信息，请参见 <command>man 8 btrfs-filesystem</command> 和 <link xlink:href="https://btrfs.wiki.kernel.org/index.php/FAQ"/>。
   </para>
   <para>
    如果您在计算机上使用 Btrfs 作为根文件系统，请确保有足够的可用空间。检查所有装入分区上的可用空间。在最坏的情况下，升级进程需要将当前根文件系统的所有磁盘空间（不含 <filename>/.snapshot</filename>）用于存放新快照。
   </para>
   <para>
    下列建议已证实值得采纳：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      包含 Btrfs 在内的所有文件系统需有足够的可用磁盘空间用于下载和安装大型 RPM。旧 RPM 的空间只会在新 RPM 安装之后释放。
     </para>
    </listitem>
    <listitem>
     <para>
      对于包含快照的 Btrfs，至少需要有当前安装任务所需的可用空间。建议提供两倍于当前安装大小的可用空间。
     </para>
     <para>
      如果没有足够的可用空间，您可以尝试使用 <command>snapper</command> 删除旧快照：
     </para>
<screen><prompt role="root">root # </prompt><command>snapper</command> list
<prompt role="root">root # </prompt><command>snapper</command> delete NUMBER</screen>
     <para>
      但这种做法并不总是有用。在迁移之前，大多数快照只会占用极少的空间。
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="sec-autoyast-profiles" os="sles">
  <title>AutoYaST 配置文件中的更改（从 SLE 12 到 15）</title>
  <para>
   要了解如何迁移 AutoYaST 配置文件，请参见<xref linkend="appendix-ay-12vs15"/>。
  </para>
 </sect1>

 <sect1 xml:id="sec-update-preparation-smt-to-rmt" os="sles">
  <title>升级订阅管理工具 (SMT) 服务器</title>
  <para>
   对于运行 SMT 的服务器，需要执行特殊的升级过程。请参见《<citetitle>Repository Management Tool Guide</citetitle>》中的<xref linkend="cha-rmt-migrate"/>。
  </para>
 </sect1>
 <sect1 xml:id="sec-update-preparation-multiversion">
  <title>暂时禁用内核多版本支持</title>
  <para>
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 允许您在 <filename>/etc/zypp/zypp.conf</filename> 中启用相应设置来安装多个内核版本。为了升级到某个服务包，需要暂时禁用对此功能的支持。当更新成功完成后，可以重新启用多版本支持。要禁用多版本支持，请对 <filename>/etc/zypp/zypp.conf</filename> 中的相应行加上注释。结果应类似如下内容：
  </para>
<screen>#multiversion = provides:multiversion(kernel)
#multiversion.kernels = latest,running</screen>
  <para>
   要在成功更新后重新激活此功能，请去除注释符号。有关多版本支持的详细信息，请参见<xref linkend="sec-tuning-multikernel-enable"/>。
  </para>
 </sect1>
 <sect1 xml:id="sec-update-preparation-zseries" os="sles">
  <title>在 IBM Z 上升级</title>
  <para>在 IBM Z 上升级 SUSE Linux Enterprise 安装需要设置 <command>Upgrade=1</command> 内核参数（例如，通过 parmfile）。请参见<xref linkend="sec-appdendix-parm" xrefstyle="HeadingOnPage"/>。
  </para>
 </sect1>
 <sect1 xml:id="sec-update-preparation-ppc" os="sles" arch="power">
  <title>IBM POWER：启动 X 服务器</title>
  <para>
   在 SLES 12 for IBM POWER 上，显示管理器配置为默认不启动本地 X 服务器。SLES 12 SP1 上的设置则相反，显示管理器现在会启动 X 服务器。
  </para>
  <para>
   为了避免升级期间出现问题，<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 设置不会自动更改。如果想要在升级后让显示管理器启动 X 服务器，请按如下所示在 <filename>/etc/sysconfig/displaymanager</filename> 中更改 <envar>DISPLAYMANAGER_STARTS_XSERVER</envar> 的设置：
  </para>
  <screen>DISPLAYMANAGER_STARTS_XSERVER="yes"</screen>
 </sect1>
</chapter>
