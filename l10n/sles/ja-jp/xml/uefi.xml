<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="uefi.xml" version="5.0" xml:id="cha-uefi">

 <title>UEFI (Unified Extensible Firmware Interface)</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  UEFI (Unified Extensible Firmware Interface) は、システムハードウェアに付属のファームウェア、システムのすべてのハードウェアコンポーネント、およびオペレーティングシステムの間のインタフェースです。
 </para>
 <para>
  UEFIは、従来のPC-BIOSに代わって、PCで幅広く利用されるようになっています。たとえば、UEFIは64ビットシステムを適切にサポートし、最も重要な機能の1つである安全なブート(<quote>セキュアブート</quote>、ファームウェアバージョン2.3.1c以降が必要)を提供します。最後に、UEFIを使用すると、すべてのx86プラットフォームで標準のファームウェアが利用可能になります。
 </para>
 <para>
  さらに、UEFIには以下の利点があります。
 </para>
 <itemizedlist mark="bullet" spacing="normal">
  <listitem>
   <para>
    GUIDパーティションテーブル(GPT)を使う大きなディスク(2 TiB以上)からのブート。
   </para>
  </listitem>
  <listitem>
   <para>
    CPUに依存しないアーキテクチャおよびドライバ。
   </para>
  </listitem>
  <listitem>
   <para>
    ネットワーク機能を持つ柔軟なプレOS環境。
   </para>
  </listitem>
  <listitem>
   <para>
    PC-BIOSライクなエミュレーション経由でレガシーオペレーティングシステムのブートをサポートするCSM(Compatibiity Support Module)。
   </para>
  </listitem>
 </itemizedlist>
 <para>
  詳細については、<link xlink:href="http://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface"/>を参照してください。以降のセクションは、UEFIの一般的な概要を示すものではなく、特定の機能が<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>にどのように実装されているかを示すヒントです。
 </para>
 <sect1 xml:id="sec-uefi-secboot">
  <title>セキュアブート</title>



  <para>
   UEFIの世界では、ブートストラッププロセスの保護とは、信頼チェーンの確立を意味します。<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>との関連では、<quote>プラットフォーム</quote>はこの信頼チェーンのルートであり、マザーボードおよびオンボードファームウェアが<quote>プラットフォーム</quote>とみなされます。別の言い方をすれば、ハードウェアベンダー、およびそのハードウェアベンダーからコンポーネントの製造元やOSベンダーなどにつながる信頼チェーンです。
  </para>

  <para>
   信頼は公開鍵の暗号で表されます。ハードウェアベンダーは、ファームウェアにいわゆるプラットフォームキー(PK)を設定し、信頼のルートを表します。オペレーティングシステムベンダーなどとの信頼関係は、このプラットフォームキーを使ってキーに署名することによって文書化されます。
  </para>

  <para>
   最後に、これらの<quote>信頼された</quote>キーのいずれかで署名されていない限りファームウェアがコード(OSブートローダも、PCI Expressカードやディスクのフラッシュメモリに保存されたドライバも、ファームウェアのアップデートも)を実行できないようにすることによって、セキュリティが確立されます。
  </para>

  <para>
   セキュアブートを使用するには、ファームウェアによって信頼されたキーで署名されたOSローダが必要であり、読み込むカーネルが信頼できることを検証するためにOSローダが必要です。
  </para>

  <para>

   キー交換キー(KEK)をUEFIキーデータベースに追加できます。この方法で、PKのプライベート部分で署名されている限り、他の証明書を使用できます。

  </para>

  <sect2 xml:id="sec-uefi-secboot-sle">
   <title><phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>への実装</title>
   <para>
    Microsoftのキー交換キー(KEK)がデフォルトでインストールされます。
   </para>
   <note>
    <title>GUIDパーティションテーブル(GPT)が必要</title>
    <para>
     セキュアブート機能は、UEFI/x86_64インストール環境ではデフォルトで有効になっています。<guimenu>Enable Secure Boot Support(セキュアブートサポートの有効化)</guimenu>オプションは、<guimenu>ブートローダの設定</guimenu>ダイアログの<guimenu>Boot Code Options(ブートコードオプション)</guimenu>タブにあります。ファームウェアでセキュアブートが有効になっている場合のブート、および無効になっている場合のブートもサポートします。
    </para>
    <figure>
     <title>セキュアブートサポート</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_bootloader_boot_code_efi.png" width="70%"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="yast2_bootloader_boot_code_efi.png" width="70%"/>
      </imageobject>
     </mediaobject>
    </figure>
    <para>
     セキュアブート機能を使用するには、マスタブートレコード(MBR)を使用した古いパーティションをGUIDパーティションテーブル(GPT)に置換する必要があります。YaSTは、インストール時にEFIモードを検出すると、GPTパーティションの作成を試みます。UEFIでは、FATフォーマットのEFIシステムパーティション(ESP)上でEFIプログラムが見つかるものと想定されます。
    </para>
   </note>

   <para>
    UEFIセキュアブートに対応するには、ブートローダがデジタル署名されており、ファームウェアがそのデジタル署名を信頼されたキーとして認識することが必要です。このキーはファームウェアによってあらかじめ信頼されているので、手動での操作は不要です。
   </para>
   <para>
    これには2つの方法があります。1つは、ハードウェアベンダーにSUSEキーを署名してもらい、SUSEがその署名を使ってブートローダに署名する方法です。もう1つは、MicrosoftのWindows Logo Certificationプログラムを利用してブートローダの認定を受け、MicrosoftにSUSE署名キーを認識してもらう(つまり、MicrosoftのKEKを使って署名してもらう)方法です。これで、SUSEは、UEFI署名サービス(この場合はMicrosoft)によって署名されたローダを入手できます。
   </para>

   <figure xml:id="fig-uefi-secure-boot-mok2">
    <title>UEFIのセキュアブートプロセス</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="uefi-secure-boot-mok2.png" width="50%"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="uefi-secure-boot-mok2.png" width="80%"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    実装層で、SUSEは、デフォルトでインストールされている<systemitem>shim</systemitem>ローダを使用します。法的な問題を回避するスマートなソリューションであり、証明書と署名に関する手順を大きく簡素化します。<systemitem>shim</systemitem>ローダの処理は、GRUB 2などのブートローダをロードすることです。次にこのブートローダが、SUSEキーのみで署名されたカーネルをロードします。<phrase os="sles;sled">SUSEは、UEFIセキュアブートが有効化されたSLE11 SP3の新規インストールで、この機能を提供します。</phrase>
   </para>
   <para>
    信頼ユーザには2種類あります。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      1つ目は、キーを保持するユーザです。プラットフォームキー(PK)によって、ほとんどすべてのことが許可されます。キー交換キー(KEK)では、PKの変更を除き、PKに可能なすべてのことが許可されます。
     </para>
    </listitem>
    <listitem>
     <para>
      2つ目は、マシンに物理的にアクセスできる任意のユーザです。物理的にアクセスできるユーザは、マシンを再起動したりUEFIを設定したりできます。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    UEFIには、これらのユーザのニーズを満たすため、2種類の変数があります。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      1つ目はいわゆる<quote>認証された変数</quote>で、ブートプロセス(いわゆるブートサービス環境)と実行中のOSの両方からアップデートできます。これは、変数の新しい値が、その変数の古い値が署名されたときと同じキーで署名されている場合にのみ実行できます。また、この変数は、より大きなシリアル番号を持つ値にのみ追加または変更できます。
     </para>
    </listitem>
    <listitem>
     <para>
      2つ目は、<quote>ブートサービス専用変数</quote>と呼ばれるものです。この変数は、ブートプロセス中に動作する任意のコードにアクセスできます。ブートプロセスの終了後、OSが起動する前に、ブートローダは<literal>ExitBootServices</literal>コールを呼び出す必要があります。その後、これらの変数にはアクセスできなくなり、OSはこれらに触れられません。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    さまざまなUEFIキーリストは1つ目のタイプなので、オンラインでの更新、追加、および、キー/ドライバ/ファームウェアの指紋のブラックリスト登録ができます。セキュアブートの実装に役立つのは、2つ目の<quote>Boot Service Only Variable (ブートサービス専用変数)</quote>です。これは、安全かつオープンソースで使いやすくなっており、GPL v3と互換性があるためです。
   </para>
   <para>
    SUSEは<systemitem>shim</systemitem> (SUSEとMicrosoftが署名した小型でシンプルなEFIブートローダ)から始まります。
   </para>
   <para>
    これによって<systemitem>shim</systemitem>のロードおよび実行が可能になります。
   </para>
   <para>
    <systemitem>shim</systemitem>は、続いて、ロードしようとしているブートローダが信頼されていることを確認します。デフォルトで、<systemitem>shim</systemitem>は、本体に組み込まれている独自のSUSE証明書を使用します。また、<systemitem>shim</systemitem>は、追加のキーを<quote>登録</quote>してデフォルトのSUSEキーを上書きできます。以下、これらを<quote>マシン所有者キー</quote>、または省略してMOKと呼びます。
   </para>
   <para>
    次に、ブートローダはカーネルを検証および起動し、カーネルがモジュールで同じことを実行します。
   </para>
  </sect2>

  <sect2 xml:id="sec-uefi-secboot-mok">
   <title>Machine Owner Key(マシン所有者キー、MOK)</title>
   
   <para>
   ブートプロセスの一部である特定のカーネル、ドライバ、または他のコンポーネントを置き換えるには、マシン所有者キー(MOK)を使用する必要があります。<systemitem>mokutil</systemitem>ツールはMOKを管理するのに役立ちます。
   </para>
   <para>
   <systemitem>mokutil</systemitem>を使用してMOK登録要求を作成できます。要求は、<systemitem>MokNew</systemitem>と呼ばれるUEFIランタイム(RT)変数に保存されます。次のブート時に、<systemitem>shim</systemitem>ブートローダは<systemitem>MokNew</systemitem>を検出し、<systemitem>MokManager</systemitem>をロードします。これにより、いくつかのオプションが表示されます。<guimenu>Enroll key from disk (ディスクからキーを登録)</guimenu>および<guimenu>Enroll hash from disk (ディスクからハッシュを登録)</guimenu>オプションを使用して、MoListにキーを追加することができます。<guimenu>Enroll MOK (MOKを登録)</guimenu>オプションを使用して、<systemitem>MokNew</systemitem>変数からキーをコピーします。
   </para>
   <para>
   ディスクからのキーの登録は通常、シムが<systemitem>grub2</systemitem>のロードに失敗し、MokManagerのロードにフォールバックしたときに行われます。<systemitem>MokNew</systemitem>はまだ存在しないため、UEFIパーティションでキーを検索するオプションがあります。 
   </para>
  </sect2>

  <sect2 xml:id="sec-uefi-secboot-custom">
   <title>カスタムカーネルのブート</title>
   <para>
    以下は<link xlink:href="https://en.opensuse.org/openSUSE:UEFI#Booting_a_custom_kernel"/>にもとづいています。
   </para>
   <para>
    セキュアブートでは、セルフコンパイルカーネルを使用できます。ただし、独自の証明書を使って署名し、その証明書をファームウェアまたはMOKに知らせる必要があります。
   </para>
   <procedure>
    <step>
     <para>
      カスタムのX.509キー、および署名に使用される証明書を作成します。
     </para>
<screen>openssl req -new -x509 -newkey rsa:2048 -keyout key.asc \
  -out cert.pem -nodes -days 666 -subj "/CN=$USER/"</screen>
     <para>

      証明書の作成の詳細については、<link xlink:href="https://en.opensuse.org/openSUSE:UEFI_Image_File_Sign_Tools#Create_Your_Own_Certificate"/>を参照してください。
     </para>
    </step>
    <step>
     <para>
      PKCS#12形式でキーと証明書をパッケージ化します。
     </para>
<screen><prompt>&gt; </prompt>openssl pkcs12 -export -inkey key.asc -in cert.pem \
  -name kernel_cert -out cert.p12</screen>
    </step>
    <step>
     <para>
      <command>pesign</command>とともに使用するNSSデータベースを生成します。
     </para>
<screen><prompt>&gt; </prompt>certutil -d . -N</screen>
    </step>
    <step>
     <para>
      PKCS#12に含まれるキーおよび証明書をNSSデータベースにインポートします。
     </para>
<screen><prompt>&gt; </prompt>pk12util -d . -i cert.p12</screen>
    </step>
    <step>
     <para>
      <command>pesign</command>を使用して、新しい署名でカーネルを<quote>bless</quote>します。
     </para>
<screen><prompt>&gt; </prompt>pesign -n . -c kernel_cert -i arch/x86/boot/bzImage \
  -o vmlinuz.signed -s</screen>
    </step>
    <step>
     <para>
      カーネルイメージの署名をリスト表示します。
     </para>
<screen><prompt>&gt; </prompt>pesign -n . -S -i vmlinuz.signed</screen>
     <para>
      その時点で、通常通り<filename>/boot</filename>にカーネルをインストールできます。カーネルにはカスタム署名があるため、署名に使用された証明書をUEFIファームウェアまたはMOKにインポートする必要があります。
     </para>
    </step>
    <step>
     <para>
      ファームウェアまたはMOKにインポートするため、証明書をDERフォーマットに変換します。
     </para>
<screen><prompt>&gt; </prompt>openssl x509 -in cert.pem -outform der -out cert.der</screen>
    </step>
    <step>
     <para>
      よりアクセスしやすくするため、証明書をESPにコピーします。
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> cp cert.der /boot/efi/</screen>
    </step>
    <step>
     <para>
      <command>mokutil</command>を使用して自動的にMOKリストを起動します。
     </para>
     <stepalternatives>
      <step>
       <substeps>
        <step>
         <para>
          証明書をMOKにインポートします。
         </para>
<screen><prompt>&gt; </prompt>mokutil --root-pw --import cert.der</screen>
         <para>
          <option>--root-pw</option>オプションにより、<systemitem class="username">root</systemitem>ユーザを直接使用できます。
         </para>
        </step>
        <step>
         <para>
          これから登録する証明書のリストを確認します。
         </para>
<screen><prompt>&gt; </prompt>mokutil --list-new</screen>
        </step>
        <step>
         <para>
          システムを再起動します。<systemitem>shim</systemitem>によってMokManagerが起動されるはずです。<systemitem class="username">root</systemitem>パスワードを入力して、MOKリストに証明書をインポートすることを確認してください。
         </para>
        </step>
        <step>
         <para>
          新しくインポートしたキーが登録されたかどうかを確認します。
         </para>
<screen><prompt>&gt; </prompt>mokutil --list-enrolled</screen>
        </step>
       </substeps>
      </step>
      <step>
       <substeps>
        <step>
         <para>
          また、MOKを手動で起動する場合は以下の手順を実行します。
         </para>
         <para>
          再起動
         </para>
        </step>
        <step>
         <para>
          GRUB 2メニューで<literal>c</literal>キーを押します。
         </para>
        </step>
        <step>
         <para>
          タイプ:
         </para>
<screen>chainloader $efibootdir/MokManager.efi
boot</screen>
        </step>
        <step>
         <para>
          <guimenu>Enroll key from disk</guimenu>を選択します。
         </para>
        </step>
        <step>
         <para>
          <filename>cert.der</filename>ファイルに移動して&lt;<keycap function="enter"/>&gt;キーを押します。
         </para>
        </step>
        <step>
         <para>
          指示に従ってキーを登録します。通常、「<literal>0</literal>」を押してから「<literal>y</literal>」を押して確認します。
         </para>
         <para>
          また、ファームウェアメニューに、署名データベースに新しいキーを追加する方法が用意されている場合があります。
         </para>
        </step>
       </substeps>
      </step>
     </stepalternatives>
    </step>
   </procedure>


  </sect2>

  <sect2 xml:id="sec-uefi-secboot-non-inbox">
   <title>Inbox以外のドライバの使用</title>
   <para>
    セキュアブートを有効にしたインストールでは、Inbox以外のドライバ(<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>に付属していないドライバ)の追加がサポートされません。SolidDriver/PLDPで使用される署名キーは、デフォルトでは信頼されていません。
   </para>
   <para>
    セキュアブートを有効にしたインストールでは、サードパーティドライバを2つの方法でインストールできます。いずれの方法でも以下を行います。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      インストール前にファームウェア/システム管理ツールを使用して、必要なキーをファームウェアデータベースに追加します。このオプションは、使用している特定のハードウェアによって異なります。詳細については、ハードウェアベンダーに問い合わせてください。
     </para>
    </listitem>
    <listitem>
     <para>
      <link xlink:href="https://drivers.suse.com/"/>またはハードウェアベンダーから入手したブート可能なドライバISOを使用して、初回ブート時に必要なキーをMOKリストに登録します。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    ブート可能なドライバISOを使用してドライバキーをMOKリストに登録するには、次の手順に従います。
   </para>
   <procedure>
    <step>
     <para>
      空のCD/DVDメディアに上記のISOイメージを書き込みます。
     </para>
    </step>
    <step>
     <para>
      この新しいCD/DVDメディアを使用してインストールを開始します。その際には、標準のインストールメディア、またはネットワークインストールサーバへのURLを用意しておきます。
     </para>
     <para>
      ネットワークインストールを行う場合、ブートコマンドラインで<option>install=</option>オプションを使用して、ネットワークインストールソースのURLを入力します。
     </para>
     <para>
      光学メディアからインストールする場合、インストーラが最初にドライバキットからブートされた後、製品の最初のインストールディスクを挿入するように要求されます。
     </para>
    </step>
    <step>
     <para>
      アップデートされたドライバを含むinitrdが、インストールに使用されます。
     </para>
    </step>
   </procedure>
   <para>
    詳細については、<link xlink:href="https://drivers.suse.com/doc/Usage/Secure_Boot_Certificate.html"/>を参照してください。
   </para>
  </sect2>

  <sect2 xml:id="sec-uefi-secboot-feats">

   <title>機能と制限</title>
   <para>
    セキュアブートモードでブートする場合、次の機能が適用されます。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      UEFIのデフォルトのブートローダがある場所へのインストール。これは、EFIブートエントリを維持または復元するメカニズムです。
     </para>
    </listitem>
    <listitem>
     <para>
      UEFIを介して再起動する。
     </para>
    </listitem>
    <listitem>
     <para>
      フォールバック先のレガシーBIOSがない場合、XenハイバーバイザはUEFIを使用してブートする。
     </para>
    </listitem>
    <listitem>
     <para>
      UEFI IPv6 PXEブートのサポート。
     </para>
    </listitem>
    <listitem>
     <para>
      UEFIビデオモードのサポート。カーネルはUEFIからビデオモードを取得して、同じパラメータでKMSモードを設定できます。
     </para>
    </listitem>
    <listitem>
     <para>
      USBデバイスからのUEFIブートがサポートされる。
     </para>
    </listitem>
   </itemizedlist>
   <para>
    セキュアブートモードでブートする場合、次の制限が適用されます。
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      セキュアブートを簡単に回避できないようにするため、セキュアブートで実行する場合は一部のカーネル機能が無効になっています。
     </para>
    </listitem>

    <listitem>
     <para>
      ブートローダ、カーネル、およびカーネルモジュールが署名されている必要があります。
     </para>
    </listitem>
    <listitem>
     <para>
      KexecおよびKdumpは無効になっています。
     </para>
    </listitem>
    <listitem>
     <para>
      ハイバネーション(ディスクの休止)は無効になっています。
     </para>
    </listitem>
    <listitem>
     <para>
      ルートユーザであっても、<filename>/dev/kmem</filename>および<filename>/dev/mem</filename>にアクセスできません。
     </para>
    </listitem>
    <listitem>
     <para>
      ルートユーザであっても、I/Oポートにアクセスできません。すべてのX11グラフィカルドライバはカーネルドライバを使用する必要があります。
     </para>
    </listitem>
    <listitem>
     <para>
      sysfs経由でPCI BARにアクセスすることはできません。
     </para>
    </listitem>
    <listitem>
     <para>
      ACPIの<literal>custom_method</literal>は使用できません。
     </para>
    </listitem>
    <listitem>
     <para>
      asus-vmiモジュールに対してdebufgsを使用できません。
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>acpi_rsdp</literal>パラメータはカーネルに影響を及ぼしません。
     </para>
    </listitem>
   </itemizedlist>

  </sect2>
 </sect1>
 <sect1 xml:id="sec-uefi-moreinfo">
  <title>詳細情報</title>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <link xlink:href="https://www.uefi.org"/> —UEFIのホームページです。現在のUEFI仕様が掲載されています。
    </para>
   </listitem>
   <listitem>
    <para>
     Olaf Kirch氏およびVojtěch Pavlík氏によるブログ記事(上の章の内容はこれらの記事に基づいています)。
    </para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       <link xlink:href="https://www.suse.com/c/uefi-secure-boot-plan/"/>
      </para>
     </listitem>
     <listitem>
      <para>
       <link xlink:href="https://www.suse.com/c/uefi-secure-boot-overview/"/>
      </para>
     </listitem>
     <listitem>
      <para>
       <link xlink:href="https://www.suse.com/c/uefi-secure-boot-details/"/>
      </para>
     </listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="https://en.opensuse.org/openSUSE:UEFI"/> —UEFIとopenSUSEに関するページです。
    </para>
   </listitem>
  </itemizedlist>
 </sect1>

</chapter>
