<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="ulp.xml" version="5.0" xml:id="cha-ulp" xml:lang="pt-br">
  <title>Aplicação de patches dinâmicos no espaço do usuário</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
    <abstract>
      <para>
        Este capítulo descreve os princípios básicos e o uso de patches dinâmicos no espaço do usuário.
      </para>
    </abstract>
  </info>
  <sect1 xml:id="sec-ulp">
    <title>Sobre a aplicação de patches dinâmicos no espaço do usuário</title>

    

    

    <para>
      A aplicação de patches dinâmicos no espaço do usuário (ULP, User Space Live Patching) refere-se ao processo de aplicar patches às bibliotecas usadas por um processo em execução sem o interromper. Sempre que uma correção de segurança estiver disponível como um patch dinâmico, os serviços do cliente serão protegidos após a aplicação do patch dinâmico sem reiniciar os processos.
    </para>

    <para>
      As operações de aplicação de patches dinâmicos são executadas usando a ferramenta <systemitem>ulp</systemitem>, que faz parte do <systemitem>libpulp</systemitem>. <systemitem>libpulp</systemitem> é uma estrutura que consiste na biblioteca <systemitem>libpulp.so</systemitem> e no binário <command>ulp</command>, que torna as bibliotecas atualizáveis por patch dinâmico e aplica patches dinâmicos.
    </para>

    <tip>
      <para>
        Você pode executar o comando <command>ulp</command> como um usuário normal ou como um usuário privilegiado por meio do mecanismo <command>sudo</command>. A diferença é que a execução do <command>ulp</command> pelo <command>sudo</command> permite ver informações dos processos ou os processos de patch executados pelo <systemitem class="username">root</systemitem>.
      </para>
    </tip>

    <sect2 xml:id="sec-ulp-prereqs">
      <title>Pré-requisitos</title>
      <para>
        Para que a ULP funcione, é necessário cumprir dois requisitos.
      </para>
      <itemizedlist>
        
        <listitem os="sles;sled">
          <para>
            Instale a ULP no sistema executando:
          </para>
<screen><prompt>&gt; </prompt><command>sudo</command> zypper in libpulp0 libpulp-tools</screen>
        </listitem>
        <listitem>
          <para>
            Os aplicativos com suporte ao patch dinâmico desejado devem ser iniciados pré-carregando a biblioteca <systemitem>libpulp.so.0</systemitem>. Consulte a <xref linkend="sec-ulp-libpulp"/> para obter mais detalhes.
          </para>
        </listitem>
      </itemizedlist>
    </sect2>

    <sect2 xml:id="sec-ulp-supported-libs">
      <title>Bibliotecas suportadas</title>
      <para>
        Atualmente, apenas <systemitem>glibc</systemitem> e <systemitem>openssl</systemitem> (<systemitem>openssl1_1</systemitem>) são suportadas. Pacotes adicionais estarão disponíveis após serem preparados para aplicação de patches dinâmicos. Para receber os patches dinâmicos <systemitem>glibc</systemitem> e <systemitem>openssl</systemitem>, instale ambos os pacotes <package>glibc-livepatches</package> e <package>openssl-livepatches</package>:
      </para>
<screen os="sled;sles"><prompt>&gt; </prompt>zypper install glibc-livepatches openssl-livepatches</screen>

      
    </sect2>

    <sect2 xml:id="sec-ulp-libpulp">
      <title>Usando <systemitem>libpulp</systemitem></title>
      <para>
        Para habilitar o patch dinâmico em um aplicativo, você precisa pré-carregar a biblioteca <systemitem>libpulp.so.0</systemitem> ao iniciar o aplicativo:
      </para>
<screen><prompt>&gt; </prompt>LD_PRELOAD=/usr/lib64/libpulp.so.0 <replaceable>APPLICATION_CMD</replaceable></screen>
      <sect3 xml:id="sec-ulp-livepatch-check">
        <title>Verificando se uma biblioteca é atualizável por patch dinâmico</title>
        <para>
          Para verificar se uma biblioteca é atualizável por patch dinâmico, use o seguinte comando:
        </para>
<screen><prompt>&gt; </prompt>ulp livepatchable <replaceable>PATH_TO_LIBRARY</replaceable></screen>
      </sect3>
      <sect3 xml:id="sec-ulp-livepatch-container-check">
        <title>Verificando se um arquivo <filename>.so</filename> é um container de patches dinâmicos</title>
        <para>
          Um objeto compartilhado (<filename>.so</filename>) é um container de patches dinâmicos se incorporar a descrição do patch ULP. Você pode verificá-lo com o seguinte comando:
        </para>
<screen><prompt>&gt; </prompt>readelf -S <replaceable>SHARED_OBJECT</replaceable> | grep .ulp</screen>
        <para>
          Se a saída mostrar que há seções <literal>.ulp</literal> e <literal>.ulp.rev</literal> no objeto compartilhado, ele será um contêiner de patches dinâmicos.
        </para>
      </sect3>
      <sect3 xml:id="sec-ulp-apply-livepatch">
        <title>Aplicando patches dinâmicos</title>
        <para>
          Os patches dinâmicos são aplicados usando o comando <command>ulp trigger</command>, por exemplo:
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> <replaceable>LIVEPATCH</replaceable>.so</screen>
        <para>
          Substitua <literal>PID</literal> pelo ID do processo em execução que usa a biblioteca que será corrigida, e <literal>LIVEPATCH.so</literal> pelo arquivo de patch dinâmico real. O comando retorna uma das seguintes mensagens de status:
        </para>
        <variablelist>
          <varlistentry>
            <term>Êxito</term>
            <listitem>
              <para>
                A operação de patch dinâmico foi bem-sucedida.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>IGNORADO</term>
            <listitem>
              <para>
                O patch foi ignorado porque não foi projetado para nenhuma biblioteca carregada no processo.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>ERRO</term>
            <listitem>
              <para>
                Ocorreu um erro, e você pode recuperar mais informações inspecionando o buffer interno de mensagens <systemitem>libpulp</systemitem>. Consulte a <xref linkend="sec-ulp-internal-messages"/> para obter mais informações.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>
          Também é possível aplicar vários patches dinâmicos usando curingas, por exemplo:
        </para>
<screen><prompt>&gt; </prompt>ulp trigger '*.so'</screen>
        <para>
          O comando tenta aplicar todos os patches da pasta atual a todos os processos que têm a biblioteca <systemitem>libpulp</systemitem> carregada. Se o patch não for adequado ao processo, ele será automaticamente ignorado. No final, a ferramenta mostra quantos patches ela aplicou com êxito a quantos processos.
        </para>
      </sect3>
      <sect3 xml:id="sec-ulp-revert-livepatch">
        <title>Revertendo patches dinâmicos</title>
        <para>
          Você pode usar o comando <command>ulp trigger</command> para reverter patches dinâmicos. Há duas maneiras de reverter patches dinâmicos. Você pode reverter um patch dinâmico usando o switch <option>--revert</option> e especificando o contêiner de patches dinâmicos:
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> --revert <replaceable>LIVEPATCH</replaceable>.so</screen>
        <para>
          Se preferir, remova todos os patches associados a uma biblioteca específica, por exemplo:
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable> --revert-all=<replaceable>LIBRARY</replaceable></screen>
        <para>
          No exemplo, <replaceable>LIBRARY</replaceable> refere-se à biblioteca real, como <systemitem>libcrypto.so.1.1</systemitem>.
        </para>
        <para>
          A última abordagem pode ser útil quando o código-fonte do patch dinâmico original não está disponível. Ou você deseja remover um patch antigo específico e aplicar um novo enquanto o aplicativo de destino ainda está executando um código seguro, por exemplo:
        </para>
<screen><prompt>&gt; </prompt>ulp trigger -p <replaceable>PID</replaceable>  --revert-all=libcrypto.so.1.1 new_livepatch2.so</screen>
      </sect3>
      <sect3 xml:id="sec-ulp-verify-patches">
        <title>Ver os patches aplicados</title>
        <para>
          É possível verificar quais aplicativos têm patches dinâmicos executando:
        </para>
<screen><prompt>&gt; </prompt>ulp patches</screen>
        <para>
          A saída mostra quais bibliotecas são atualizáveis por patch dinâmico e os patches carregados nos programas, além dos bugs que o patch soluciona:
        </para>
<screen>PID: 10636, name: test
  Livepatchable libraries:
    in /lib64/libc.so.6:
      livepatch: libc_livepatch1.so
        bug labels: jsc#SLE-0000
    in /usr/lib64/libpulp.so.0:</screen>
        <para>
          Também é possível ver quais funções são corrigidas pelo patch dinâmico:
        </para>
<screen><prompt>&gt; </prompt>ulp dump <replaceable>LIVEPATCH.so</replaceable></screen>
      </sect3>
      <sect3 xml:id="sec-ulp-internal-messages">
        <title>Ver fila de mensagens internas</title>
        <para>
          As mensagens de registro de <systemitem>libpulp.so</systemitem> são armazenadas em um buffer dentro da biblioteca e não são exibidas, a menos que solicitadas pelo usuário. Para mostrar essas mensagens, execute:
        </para>
<screen><prompt>&gt; </prompt>ulp messages -p <replaceable>PID</replaceable></screen>
      </sect3>
    </sect2>
  </sect1>
  <sect1 xml:id="sec-ulp-info">
    <title>Mais informações</title>

    <para>
      Há mais informações sobre o <systemitem>libpulp</systemitem> disponíveis no <link xlink:href="https://github.com/SUSE/libpulp">Git
      repository</link> do projeto.
    </para>
  </sect1>
</chapter>
