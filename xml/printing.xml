<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.print">
 <title>Printer Operation</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info><indexterm>
 <primary>printing</primary></indexterm>
 <para>
  &productnamereg; supports printing with many types of printers, including
  remote network printers. Printers can be configured manually or with &yast;.
  For configuration instructions, refer to <xref linkend="sec.yast.hw.print"/>.
  Both graphical and command line utilities are available for starting and
  managing print jobs. If your printer does not work as expected, refer to
  <xref linkend="sec.print.prob"/>.
 </para>
 <para>
  CUPS (Common Unix Printing System) is the standard print system in
  &productname;.
 </para>
 <para>
  Printers can be distinguished by interface, such as USB or network, and
  printer language. When buying a printer, make sure that the printer has an
  interface that is supported (USB, Ethernet, or Wi-Fi) and a suitable printer
  language. Printers can be categorized on the basis of the following three
  classes of printer languages:
 </para>
 <variablelist>
  <varlistentry>
   <term>PostScript Printers</term>
   <listitem>
    <para>
     PostScript is the printer language in which most print jobs in Linux and
     Unix are generated and processed by the internal print system. If
     PostScript documents can be processed directly by the printer and do not
     need to be converted in additional stages in the print system, the number
     of potential error sources is reduced.
    </para>
    <para>
     Currently PostScript is being replaced by PDF as the standard print job
     format. PostScript+PDF printers that can directly print PDF (in addition
     to PostScript) already exist. For traditional PostScript printers PDF
     needs to be converted to PostScript in the printing workflow.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>Standard Printers (Languages Like PCL and ESC/P)</term>
   <listitem>
    <para>
     In the case of known printer languages, the print system can convert
     PostScript jobs to the respective printer language with Ghostscript. This
     processing stage is called interpreting. The best-known languages are PCL
     (which is mostly used by HP printers and their clones) and ESC/P (which is
     used by Epson printers). These printer languages are usually supported by
     Linux and produce an adequate print result. Linux may not be able to
     address some special printer functions. Except for HP and Epson, there are
     currently no printer manufacturers who develop Linux drivers and make them
     available to Linux distributors under an open source license.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="sec.print.prep.gdi">
   <term>Proprietary Printers (Also Called GDI Printers)</term>
   <listitem>
    <para>
     These printers do not support any of the common printer languages. They
     use their own undocumented printer languages, which are subject to change
     when a new edition of a model is released. Usually only Windows drivers
     are available for these printers. See <xref linkend="sec.print.gdi"/>
     for more information.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 <para>
  Before you buy a new printer, refer to the following sources to check how
  well the printer you intend to buy is supported:
 </para>
 <variablelist>
  <varlistentry>
   <term><link xlink:href="http://www.linuxfoundation.org/OpenPrinting/"/>
   </term>
   <listitem>
    <para>
     The OpenPrinting home page with the printer database. The database shows
     the latest Linux support status. However, a Linux distribution can only
     integrate the drivers available at production time. Accordingly, a printer
     currently rated as <quote>perfectly supported</quote> may not have had
     this status when the latest &productname; version was released. Thus, the
     databases may not necessarily indicate the correct status, but only
     provide an approximation.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><link xlink:href="http://pages.cs.wisc.edu/~ghost/"/>
   </term>
   <listitem>
    <para>
     The Ghostscript Web page.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><filename>/usr/share/doc/packages/ghostscript/catalog.devices</filename>
   </term>
   <listitem>
    <para>
     List of built-in Ghostscript drivers.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 <sect1 xml:id="sec.print.workflow">
  <title>The CUPS Workflow</title>

  <para>
   The user creates a print job. The print job consists of the data to print
   plus information for the spooler. This includes the name of the printer or the
   name of the print queue, and optionally, information for the filter, such as
   printer-specific options.
  </para>

  <para>
   At least one dedicated print queue exists for every printer. The spooler
   holds the print job in the queue until the desired printer is ready to
   receive data. When the printer is ready, the spooler sends the data through
   the filter and back-end to the printer.
  </para>

  <para>
   The filter converts the data generated by the application that is printing
   (usually PostScript or PDF, but also ASCII, JPEG, etc.) into
   printer-specific data (PostScript, PCL, ESC/P, etc.). The features of the
   printer are described in the PPD files. A PPD file contains printer-specific
   options with the parameters needed to enable them on the printer. The filter
   system makes sure that options selected by the user are enabled.
  </para>

  <para>
   If you use a PostScript printer, the filter system converts the data into
   printer-specific PostScript. This does not require a printer driver. If you
   use a non-PostScript printer, the filter system converts the data into
   printer-specific data. This requires a printer driver suitable for your
   printer. The back-end receives the printer-specific data from the filter
   then passes it to the printer.
  </para>
 </sect1>
 <sect1 xml:id="sec.print.method">
  <title>Methods and Protocols for Connecting Printers</title>

  <para>
   There are various possibilities for connecting a printer to the system. The
   configuration of CUPS does not distinguish between a local printer and a
   printer connected to the system over the network. For more information about
   the printer connection, read the article <emphasis>CUPS in a
   Nutshell</emphasis> at
   <link
   xlink:href="http://en.opensuse.org/SDB:CUPS_in_a_Nutshell"/>.
  </para>

  <para arch="zseries" os="sles">
   Printers and similar devices provided by the z/VM that connect locally with
   the IBM &zseries; mainframes are not supported by CUPS. On these platforms,
   printing is only possible over the network. The cabling for network printers
   must be installed according to the instructions of the printer manufacturer.
  </para>

  <warning>
   <title>Changing Cable Connections in a Running System</title>
   <para>
    When connecting the printer to the machine, do not forget that only USB
    devices can be plugged in or unplugged during operation. To avoid damaging
    your system or printer, shut down the system before changing any
    connections that are not USB.
   </para>
  </warning>
 </sect1>
 <sect1 xml:id="sec.print.software">
  <title>Installing the Software</title>

  <para>
   PPD (PostScript printer description) is the computer language that describes
   the properties, like resolution, and options, such as the availability of a
   duplex unit. These descriptions are required for using various printer
   options in CUPS. Without a PPD file, the print data would be forwarded to
   the printer in a <quote>raw</quote> state, which is usually not desired.
  </para>

  <para>
   To configure a PostScript printer, the best approach is to get a suitable
   PPD file. Many PPD files are available in the packages
   <systemitem>manufacturer-PPDs</systemitem> and
   <systemitem>OpenPrintingPPDs-postscript</systemitem>. See
   <xref linkend="sec.print.special.ppd"/> and
   <xref linkend="sec.print.prob.ppd"/>.
  </para>

  <para>
   New PPD files can be stored in the directory
   <filename>/usr/share/cups/model/</filename> or added to the print system
   with &yast; as described in <xref linkend="sec.yast.hw.print.local.get_ppd"/>.
   Subsequently, the PPD file can be selected during the printer setup.
  </para>

  <para>
   Be careful if a printer manufacturer wants you to install entire software
   packages. This kind of installation may result in the loss of the
   support provided by &productname;. Also, print commands may work
   differently and the system may no longer be able to address devices of other
   manufacturers. For this reason, the installation of manufacturer software is
   not recommended.
  </para>
 </sect1>
 <sect1 xml:id="sec.print.net">
  <title>Network Printers</title>

  <para>
   A network printer can support various protocols, some even concurrently.
   Although most of the supported protocols are standardized, some
   manufacturers modify the standard. Manufacturers then provide drivers for
   only a few operating systems. Unfortunately, Linux drivers are rarely
   provided. The current situation is such that you cannot act on the
   assumption that every protocol works smoothly in Linux. Therefore, you may
   need to experiment with various options to achieve a functional
   configuration.
  </para>

<!--  fs: 2008-10-08:
     wrong place. This would be suitable for a cups server section
  <important>
   <title>Remote Access Settings</title>
   <para>
    By default, the cupsd only listens on internal network interfaces
    (<systemitem>localhost</systemitem>). When setting up a CUPS network
    server you need to adjust the <literal>Listen</literal> directive in
    <filename>/etc/cups/cupsd.conf</filename> to listen to the outer network.
   </para>
  </important>
-->

  <para>
   CUPS supports the <systemitem>socket</systemitem>,
   <systemitem>LPD</systemitem>, <systemitem>IPP</systemitem> and
   <systemitem>smb</systemitem> protocols.
  </para>

  <variablelist>
   <varlistentry>
    <term>socket</term>
    <listitem>
     <para>
      <emphasis>Socket</emphasis> refers to a connection in which the plain
      print data is sent directly to a TCP socket. Some socket port numbers
      that are commonly used are <option>9100</option> or <option>35</option>.
      The device URI (uniform resource identifier) syntax is:
      socket://<replaceable>IP.OF.THE.PRINTER</replaceable>:<replaceable>PORT</replaceable>,
      for example: <systemitem>socket://&subnetII;.202:9100/</systemitem>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>LPD (Line Printer Daemon)</term>
    <listitem>
     <para>
      The LPD protocol is described in RFC&nbsp;1179. Under this protocol, some
      job-related data, such as the ID of the print queue, is sent before the
      actual print data is sent. Therefore, a print queue must be specified
      when configuring the LPD protocol. The implementations of diverse printer
      manufacturers are flexible enough to accept any name as the print queue.
      If necessary, the printer manual should indicate what name to use. LPT,
      LPT1, LP1 or similar names are often used. The port number for an LPD
      service is <option>515</option>. An example device URI is
      <systemitem>lpd://&subnetII;.202/LPT1</systemitem>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>IPP (Internet Printing Protocol)</term>
    <listitem>
     <para>
      IPP is a relatively new protocol (1999) based on the HTTP protocol. With
      IPP, more job-related data is transmitted than with the other protocols.
      CUPS uses IPP for internal data transmission. The name of the print queue
      is necessary to configure IPP correctly. The port number for IPP is
      <literal>631</literal>. Example device URIs are
      <systemitem>ipp://&subnetII;.202/ps</systemitem> and
      <systemitem>ipp://&subnetII;.202/printers/ps</systemitem>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>SMB (Windows Share)</term>
    <listitem>
     <para>
      CUPS also supports printing on printers connected to Windows shares. The
      protocol used for this purpose is SMB. SMB uses the port numbers
      <option>137</option>, <option>138</option> and <option>139</option>.
      Example device URIs are
      <systemitem>smb://user:password@workgroup/&smbname;/printer</systemitem>,
      <systemitem>smb://user:password@&smbname;/printer</systemitem>, and
      <systemitem>smb://&smbname;/printer</systemitem>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   The protocol supported by the printer must be determined before
   configuration. If the manufacturer does not provide the needed information,
   the command <command>nmap</command> (which comes with the
   <systemitem>nmap</systemitem> package) can be used to ascertain the
   protocol. <command>nmap</command> checks a host for open ports. For example:
  </para>

<screen>nmap -p 35,137-139,515,631,9100-10000 <replaceable>IP.OF.THE.PRINTER</replaceable></screen>
 </sect1>
 <sect1 xml:id="sec.print.net.config_cmdl">
  <title>Configuring CUPS with Command Line Tools</title>

  <para>
   CUPS can be configured with command line tools like
   <command>lpinfo</command>, <command>lpadmin</command> and
   <command>lpoptions</command>. You need a device URI consisting of a
   back-end, such as USB, and parameters. To determine valid device URIs on
   your system use the command <command>lpinfo -v | grep ":/"</command>:
  </para>

<screen># lpinfo -v | grep ":/"
direct usb://ACME/FunPrinter%20XL
network socket://&cupsip;</screen>

  <para>
   With <command>lpadmin</command> the CUPS server administrator can add,
   remove or manage print queues. To add a print queue, use the following
   syntax:
  </para>

<screen>lpadmin -p <replaceable>QUEUE</replaceable> -v <replaceable>DEVICE-URI</replaceable> -P <replaceable>PPD-FILE</replaceable> -E</screen>

  <para>
   Then the device (<option>-v</option>) is available as
   <replaceable>QUEUE</replaceable> (<option>-p</option>), using the specified
   PPD file (<option>-P</option>). This means that you must know the PPD file
   and the device URI to configure the printer manually.
  </para>

  <para>
   Do not use <option>-E</option> as the first option. For all CUPS commands,
   <option>-E</option> as the first argument sets use of an encrypted
   connection. To enable the printer, <option>-E</option> must be used as shown
   in the following example:
  </para>

<screen>lpadmin -p ps -v usb://ACME/FunPrinter%20XL -P \
/usr/share/cups/model/Postscript.ppd.gz -E</screen>

  <para>
   The following example configures a network printer:
  </para>

<screen>lpadmin -p ps -v socket://&subnetII;.202:9100/ -P \
/usr/share/cups/model/Postscript-level1.ppd.gz -E</screen>

  <para>
   For more options of <command>lpadmin</command>, see the man page of
   <systemitem>lpadmin(8)</systemitem>.
  </para>

  <para>
   During printer setup, certain options are set as default. These options can
   be modified for every print job (depending on the print tool used). Changing
   these default options with &yast; is also possible. Using command line
   tools, set default options as follows:
  </para>

  <procedure>
   <step>
    <para>
     First, list all options:
    </para>
<screen>lpoptions -p <replaceable>QUEUE</replaceable> -l</screen>
    <para>
     Example:
    </para>
<screen>Resolution/Output Resolution: 150dpi *300dpi 600dpi</screen>
    <para>
     The activated default option is identified by a preceding asterisk
     (<literal>*</literal>).
    </para>
   </step>
   <step>
    <para>
     Change the option with <command>lpadmin</command>:
    </para>
<screen>lpadmin -p <replaceable>QUEUE</replaceable> -o Resolution=600dpi</screen>
   </step>
   <step>
    <para>
     Check the new setting:
    </para>
<screen>lpoptions -p <replaceable>QUEUE</replaceable> -l

Resolution/Output Resolution: 150dpi 300dpi *600dpi</screen>
   </step>
  </procedure>

  <para>
   When a normal user runs <command>lpoptions</command>, the settings are
   written to <filename>~/.cups/lpoptions</filename>. However,
   <systemitem class="username">root</systemitem> settings are written to
   <filename>/etc/cups/lpoptions</filename>.
  </para>
 </sect1>
 <sect1 xml:id="sec.print.appl.commandline">
  <title>Printing from the Command Line</title><indexterm>

  <primary>printing</primary>

  <secondary>command line</secondary></indexterm><indexterm>

  <primary>commands</primary>

  <secondary>lp</secondary></indexterm>

  <para>
   To print from the command line, enter <command>lp -d</command>
   <replaceable>QUEUENAME</replaceable> <replaceable>FILENAME</replaceable>,
   substituting the corresponding names for
   <replaceable>QUEUENAME</replaceable> and
   <replaceable>FILENAME</replaceable>.
  </para>

  <para>
   Some applications rely on the <command>lp</command> command for printing. In
   this case, enter the correct command in the application's print dialog,
   usually without specifying <replaceable>FILENAME</replaceable>, for example,
   <command>lp -d</command> <replaceable>QUEUENAME</replaceable>.
  </para>
 </sect1>
 <sect1 xml:id="sec.print.special">
  <title>Special Features in &productname;</title>

  <para>
   Several CUPS features have been adapted for &productname;. Some of the most
   important changes are covered here.
  </para>

  <sect2 xml:id="sec.print.special.cupsfire">
   <title>CUPS and Firewall</title>
   <para>
    After having performed a default installation of &productname;,
    &susefirewall; is active and the network interfaces are configured to be in
    the <literal>External Zone</literal> which blocks incoming traffic. More
    information about the &susefirewall; configuration is available in
    <xref linkend="sec.security.firewall.SuSE"/> and at
    <link xlink:href="http://en.opensuse.org/SDB:CUPS_and_SANE_Firewall_settings"/>.
   </para>
   <sect3 xml:id="sec.print.special.cupsfire.client">
    <title>CUPS Client</title>
    <para>
     Normally, a CUPS client runs on a regular workstation located in a trusted
     network environment behind a firewall. In this case it is recommended to
     configure the network interface to be in the <literal>Internal
     Zone</literal>, so the workstation is reachable from within the network.
    </para>
   </sect3>
   <sect3 xml:id="sec.print.special.cupsfire.server">
    <title>CUPS Server</title>
    <para>
     If the CUPS server is part of a trusted network environment protected by a
     firewall, the network interface should be configured to be in the
     <literal>Internal Zone</literal> of the firewall. It is not recommended to
     set up a CUPS server in an untrusted network environment unless you ensure
     that it is protected by special firewall rules and secure settings in
     the CUPS configuration.
    </para>
   </sect3>
  </sect2>

  <sect2 xml:id="sec.print.special.browsing">
   <title>Browsing for Network Printers</title>
   <para>
    CUPS servers regularly announce the availability and status information of
    shared printers over the network. Clients can access this information to
    display a list of available printers in printing dialogs, for example. This
    is called <quote>browsing</quote>.
   </para>
   <para>
    CUPS servers announce their print queues over the network either via the
    traditional CUPS browsing protocol or via Bonjour/DNS-SD. To be able to
    browse network print queues, the service
    <systemitem class="daemon">cups-browsed</systemitem> needs to run on all
    clients that print via CUPS servers.
    <systemitem class="daemon">cups-browsed</systemitem> is not started by
    default. To start it for the active session, use <command>sudo systemctl
    start cups-browsed</command>. To ensure it is automatically started after
    booting, enable it with <command>sudo systemctl enable
    cups-browsed</command> on all clients.
   </para>
   <para>
    In case browsing does not work after having started
    <systemitem class="daemon">cups-browsed</systemitem>, the CUPS server(s)
    probably announce the network print queues via Bonjour/DNS-SD. In this case
    you need to additionally install the package
    <systemitem class="resource">avahi</systemitem> and start the associated
    service with <command>sudo systemctl start avahi-daemon</command> on all
    clients.
   </para>
  </sect2>

  <sect2 xml:id="sec.print.special.ppd">
   <title>PPD Files in Various Packages</title>
   <para>
    The &yast; printer configuration sets up the queues for CUPS using the PPD
    files installed in <filename>/usr/share/cups/model</filename>. To find the
    suitable PPD files for the printer model, &yast; compares the vendor and
    model determined during hardware detection with the vendors and models in
    all PPD files. For this purpose, the &yast; printer configuration generates
    a database from the vendor and model information extracted from the PPD
    files.
   </para>
   <para>
    The configuration using only PPD files and no other information sources has
    the advantage that the PPD files in
    <filename>/usr/share/cups/model</filename> can be modified freely. For
    example, if you have PostScript printers the PPD files can be copied
    directly to <filename>/usr/share/cups/model</filename> (if they do not
    already exist in the <systemitem>manufacturer-PPDs</systemitem> or
    <systemitem>OpenPrintingPPDs-postscript</systemitem> packages) to achieve
    an optimum configuration for your printers.
   </para>
   <para>
    Additional PPD files are provided by the following packages:
   </para>
   <itemizedlist mark="bullet" spacing="normal">
    <listitem>
     <para>
      gutenprint: the Gutenprint driver and its matching PPDs
     </para>
    </listitem>
    <listitem>
     <para>
      splix: the SpliX driver and its matching PPDs
     </para>
    </listitem>
    <listitem>
     <para>
      OpenPrintingPPDs-ghostscript: PPDs for Ghostscript built-in drivers
     </para>
    </listitem>
    <listitem>
     <para>
      OpenPrintingPPDs-hpijs: PPDs for the HPIJS driver for non-HP printers
     </para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.print.prob">
  <title>Troubleshooting</title>

  <para>
   The following sections cover some of the most frequently encountered printer
   hardware and software problems and ways to solve or circumvent these
   problems. Among the topics covered are GDI printers, PPD files and port
   configuration. Common network printer problems, defective printouts, and
   queue handling are also addressed.
  </para>

  <sect2 xml:id="sec.print.gdi">
   <title>Printers without Standard Printer Language Support</title><indexterm>
   <primary>printing</primary>
   <secondary>GDI printers</secondary></indexterm>
   <para>
    These printers do not support any common printer language and can only be
    addressed with special proprietary control sequences. Therefore they can
    only work with the operating system versions for which the manufacturer
    delivers a driver. GDI is a programming interface developed by Microsoft*
    for graphics devices. Usually the manufacturer delivers drivers only for
    Windows, and since the Windows driver uses the GDI interface these printers
    are also called <emphasis>GDI printers</emphasis>. The actual problem is
    not the programming interface, but that these printers can only be
    addressed with the proprietary printer language of the respective printer
    model.
   </para>
   <para>
    Some GDI printers can be switched to operate either in GDI mode or in one
    of the standard printer languages. See the manual of the printer whether
    this is possible. Some models require special Windows software to do the
    switch (note that the Windows printer driver may always switch the printer
    back into GDI mode when printing from Windows). For other GDI printers
    there are extension modules for a standard printer language available.
   </para>
   <para>
    Some manufacturers provide proprietary drivers for their printers. The
    disadvantage of proprietary printer drivers is that there is no guarantee
    that these work with the installed print system or that they are suitable
    for the various hardware platforms. In contrast, printers that support a
    standard printer language do not depend on a special print system version
    or a special hardware platform.
   </para>
   <para>
    Instead of spending time trying to make a proprietary Linux driver work, it
    may be more cost-effective to purchase a printer which supports a standard
    printer language (preferably PostScript). This would solve the driver
    problem once and for all, eliminating the need to install and configure
    special driver software and obtain driver updates that may be required
    because of new developments in the print system.
   </para>
  </sect2>

  <sect2 xml:id="sec.print.prob.ppd">
   <title>No Suitable PPD File Available for a PostScript Printer</title>
   <para>
    If the <systemitem>manufacturer-PPDs</systemitem> or
    <systemitem>OpenPrintingPPDs-postscript</systemitem> packages do not
    contain a suitable PPD file for a PostScript printer, it should be possible
    to use the PPD file from the driver CD of the printer manufacturer or
    download a suitable PPD file from the Web page of the printer manufacturer.
   </para>
   <para>
    If the PPD file is provided as a zip archive (.zip) or a self-extracting
    zip archive (<filename>.exe</filename>), unpack it with
    <command>unzip</command>. First, review the license terms of the PPD file.
    Then use the <command>cupstestppd</command> utility to check if the PPD
    file complies with <quote>Adobe PostScript Printer Description File Format
    Specification, version 4.3.</quote> If the utility returns
    <quote>FAIL,</quote> the errors in the PPD files are serious and are likely
    to cause major problems. The problem spots reported by
    <command>cupstestppd</command> should be eliminated. If necessary, ask the
    printer manufacturer for a suitable PPD file.
   </para>
  </sect2>

  <sect2 xml:id="sec.print.prob.netconnect">
   <title>Network Printer Connections</title><indexterm>
   <primary>printing</primary>
   <secondary>network</secondary></indexterm><indexterm>
   <primary>printing</primary>
   <secondary>troubleshooting</secondary>
   <tertiary>network</tertiary></indexterm>
   <para/>
   <variablelist>
    <varlistentry>
     <term>Identifying Network Problems</term>
     <listitem>
      <para>
       Connect the printer directly to the computer. For test purposes,
       configure the printer as a local printer. If this works, the problems
       are related to the network.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Checking the TCP/IP Network</term>
     <listitem>
      <para>
       The TCP/IP network and name resolution must be functional.
      </para>
     </listitem>
    </varlistentry>
<!-- fs 2008-10-08: only relevant for CUPS server, commenting for now
    <varlistentry>
     <term>Checking the Remote Accessibility</term>
     <listitem>
      <para>
       By default, the cupsd only listens on internal network interfaces
       (<systemitem>localhost</systemitem>). Check whether the
       <literal>Listen</literal> directive(s) in
       <filename>/etc/cups/cupsd.conf</filename> allow access from the
       outer network:
      </para>
<screen>Listen &subnetII;,*:631</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Checking the Firewall Settings</term>
     <listitem>
      <para>
       A CUPS server either needs to be in the internal firewall zone or, when
       being in the external zone, must be able to send and receive data on
       the UDP and TCP port 631.
      </para>
     </listitem>
    </varlistentry>
-->
    <varlistentry>
     <term>Checking a Remote <command>lpd</command>
     </term>
     <listitem>
      <para>
       Use the following command to test if a TCP connection can be established
       to <command>lpd</command> (port <literal>515</literal>) on
       <replaceable>HOST</replaceable>:
      </para>
<screen>netcat -z <replaceable>HOST</replaceable> 515 &amp;&amp; echo ok || echo failed</screen>
      <para>
       If the connection to <command>lpd</command> cannot be established,
       <command>lpd</command> may not be active or there may be basic network
       problems.
      </para>
      <para>
       Provided that the respective
       <command>lpd</command> is active and the host accepts queries, run the following command as <systemitem
       class="username">root</systemitem> to query a status report for
       <replaceable>QUEUE</replaceable> on remote
       <replaceable>HOST</replaceable>:
      </para>
<screen>echo -e "\004queue" \
| netcat -w 2 -p 722 <replaceable>HOST</replaceable> 515</screen>
      <para>
       If <command>lpd</command> does not respond, it may not be active or
       there may be basic network problems. If <command>lpd</command> responds,
       the response should show why printing is not possible on the
       <literal>queue</literal> on <literal>host</literal>. If you receive a
       response like that shown in <xref linkend="aus.d.lpd"/>, the problem is
       caused by the remote <command>lpd</command>.
      </para>
      <example xml:id="aus.d.lpd">
       <title>Error Message from <command>lpd</command></title>
<screen>lpd: your host does not have line printer access
lpd: queue does not exist
printer: spooling disabled
printer: printing disabled</screen>
      </example>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Checking a Remote <command>cupsd</command>
     </term>
     <listitem>
      <para>
       A CUPS network server can broadcast its queues by default every 30
       seconds on UDP port <literal>631</literal>. Accordingly, the following
       command can be used to test whether there is a broadcasting CUPS network
       server in the network. Make sure to stop your local CUPS daemon before
       executing the command.
      </para>
<screen>netcat -u -l -p 631 &amp; PID=$! ; sleep 40 ; kill $PID</screen>
      <para>
       If a broadcasting CUPS network server exists, the output appears as
       shown in <xref linkend="aus.d.bcast"/>.
      </para>
      <example xml:id="aus.d.bcast">
       <title>Broadcast from the CUPS Network Server</title>
<screen>ipp://&subnetII;.202:631/printers/queue</screen>
      </example>
      <para arch="zseries" os="sles">
       Take into account that IBM &zseries; Ethernet devices do not receive
       broadcasts by default.
      </para>
      <para>
       The following command can be used to test if a TCP connection can be
       established to <command>cupsd</command> (port <literal>631</literal>) on
       <replaceable>HOST</replaceable>:
      </para>
<screen>netcat -z <replaceable>HOST</replaceable> 631 &amp;&amp; echo ok || echo failed</screen>
      <para>
       If the connection to <command>cupsd</command> cannot be established,
       <command>cupsd</command> may not be active or there may be basic network
       problems. <command>lpstat -h</command> <replaceable>HOST</replaceable>
       -l -t returns a (possibly very long) status report for all queues on
       <replaceable>HOST</replaceable>, provided the respective
       <command>cupsd</command> is active and the host accepts queries.
      </para>
      <para>
       The next command can be used to test if the
       <replaceable>QUEUE</replaceable> on <replaceable>HOST</replaceable>
       accepts a print job consisting of a single carriage-return character.
       Nothing should be printed. Possibly, a blank page may be ejected.
      </para>
<screen>echo -en "\r" \
| lp -d queue -h <replaceable>HOST</replaceable></screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      Troubleshooting a Network Printer or Print Server Machine
     </term>
     <listitem>
      <para>
       Spoolers running in a print server machine sometimes cause problems when
       they need to deal with multiple print jobs. Since this is caused by the
       spooler in the print server machine, there no way to resolve this issue. As
       a work-around, circumvent the spooler in the print server machine by
       addressing the printer connected to the print server machine directly with
       the TCP socket. See <xref linkend="sec.print.net"/>.
      </para>
      <para>
       In this way, the print server machine is reduced to a converter between the
       various forms of data transfer (TCP/IP network and local printer
       connection). To use this method, you need to know the TCP port on the
       print server machine. If the printer is connected to the print server machine
       and turned on, this TCP port can usually be determined with the
       <command>nmap</command> utility from the <systemitem>nmap</systemitem>
       package some time after the print server machine is powered up. For example,
       <command>nmap&nbsp;</command> <replaceable>IP-address</replaceable> may
       deliver the following output for a print server machine:
      </para>
<screen>Port       State       Service
23/tcp     open        telnet
80/tcp     open        http
515/tcp    open        printer
631/tcp    open        cups
9100/tcp   open        jetdirect</screen>
      <para>
       This output indicates that the printer connected to the print server machine
       can be addressed via TCP socket on port <literal>9100</literal>. By
       default, <command>nmap</command> only checks several commonly known
       ports listed in <filename>/usr/share/nmap/nmap-services</filename>. To
       check all possible ports, use the command <command>nmap
       -p&nbsp;</command>
       <replaceable>FROM_PORT</replaceable>-<replaceable>TO_PORT</replaceable>&nbsp;<replaceable>IP_ADDRESS</replaceable>.
       This may take some time. For further information, refer to the man page
       of <command>nmap</command>.
      </para>
      <para>
       Enter a command like
      </para>
<screen>echo -en "\rHello\r\f" | netcat -w 1 IP-address port
cat file | netcat -w 1 IP-address port</screen>
      <para>
       to send character strings or files directly to the respective port to
       test if the printer can be addressed on this port.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec.print.prob.defective_printouts">
   <title>Defective Printouts without Error Message</title>
   <para>
    For the print system, the print job is completed when the CUPS back-end
    completes the data transfer to the recipient (printer). If further
    processing on the recipient fails (for example, if the printer is not able
    to print the printer-specific data) the print system does not notice this.
    If the printer cannot print the printer-specific data, select a PPD file
    that is more suitable for the printer.
   </para>
  </sect2>

  <sect2 xml:id="sec.print.prob.disabled_queues">
   <title>Disabled Queues</title>
   <para>
    If the data transfer to the recipient fails entirely after several
    attempts, the CUPS back-end, such as <literal>USB</literal> or
    <literal>socket</literal>, reports an error to the print system (to
    <command>cupsd</command>). The back-end determines how many unsuccessful
    attempts are appropriate until the data transfer is reported as impossible.
    As further attempts would be in vain, <command>cupsd</command> disables
    printing for the respective queue. After eliminating the cause of the
    problem, the system administrator must re-enable printing with the command
    <command>cupsenable</command>.
   </para>
  </sect2>

  <sect2 xml:id="sec.print.prob.deleting_jobs">
   <title>CUPS Browsing: Deleting Print Jobs</title>
   <para>
    If a CUPS network server broadcasts its queues to the client hosts via
    browsing and a suitable local <command>cupsd</command> is active on the
    client hosts, the client <command>cupsd</command> accepts print jobs from
    applications and forwards them to the <command>cupsd</command> on the
    server. When <command>cupsd</command> on the server accepts a print job, it
    is assigned a new job number. Therefore, the job number on the client host
    is different from the job number on the server. As a print job is usually
    forwarded immediately, it cannot be deleted with the job number on the
    client host This is because the client <command>cupsd</command> regards the
    print job as completed when it has been forwarded to the server
    <command>cupsd</command>.
   </para>
   <para>
    To delete the print job on the server, use a
    command such as <command>lpstat -h &cupsname; -o</command> to determine the
    job number on the server. This assumes that the server has not already
    completed the print job (that is, sent it completely to the printer). Use
    the obtained job
    number to delete the print job on the server as follows:
   </para>
<screen>cancel -h &cupsname; <replaceable>QUEUE-JOBNUMBER</replaceable></screen>
  </sect2>

  <sect2 xml:id="sec.print.prob.brokenjobs">
   <title>Defective Print Jobs and Data Transfer Errors</title>
   <para>
    If you switch the printer off or shut down the computer during the printing
    process, print jobs remain in the queue. Printing resumes when the computer
    (or the printer) is switched back on. Defective print jobs must be removed
    from the queue with <command>cancel</command>.
   </para>
   <para>
    If a print job is corrupted or an error occurs in the communication between
    the host and the printer, the printer cannot process the data correctly and
    prints numerous sheets of paper with
    unintelligible characters. To
    fix the problem, follow these steps:
   </para>
   <procedure>
    <step>
     <para>
      To stop printing, remove all paper from ink jet printers or open the
      paper trays of laser printers. High-quality printers have a button for
      canceling the current printout.
     </para>
    </step>
    <step>
     <para>
      The print job may still be in the queue, because jobs are only removed
      after they are sent completely to the printer. Use <command>lpstat
      -o</command> or <command>lpstat -h &cupsname; -o</command> to check which
      queue is currently printing. Delete the print job with
      <command>cancel</command>
      <replaceable>QUEUE</replaceable>-<replaceable>JOBNUMBER</replaceable> or
      <command>cancel -h &cupsname;</command>
      <replaceable>QUEUE</replaceable>-<replaceable>JOBNUMBER</replaceable>.
     </para>
    </step>
    <step>
     <para>
      Some data may still be transferred to the printer even though the print
      job has been deleted from the queue. Check if a CUPS back-end process is
      still running for the respective queue and terminate it.
     </para>
    </step>
    <step>
     <para>
      Reset the printer completely by switching it off for some time. Then
      insert the paper and turn on the printer.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec.print.prob.debugging">
   <title>Debugging CUPS</title>
   <para>
    Use the following generic procedure to locate problems in CUPS:
   </para>
   <procedure>
    <step>
     <para>
      Set <command>LogLevel debug</command> in
      <filename>/etc/cups/cupsd.conf</filename>.
     </para>
    </step>
    <step>
     <para>
      Stop <command>cupsd</command>.
     </para>
    </step>
    <step>
     <para>
      Remove <filename>/var/log/cups/error_log*</filename> to avoid having to
      search through very large log files.
     </para>
    </step>
    <step>
     <para>
      Start <command>cupsd</command>.
     </para>
    </step>
    <step>
     <para>
      Repeat the action that led to the problem.
     </para>
    </step>
    <step>
     <para>
      Check the messages in <filename>/var/log/cups/error_log*</filename> to
      identify the cause of the problem.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec.print.prob.more_information">
   <title>For More Information</title>
   <para>
    In-depth information about printing on &suse; Linux is presented in the
    openSUSE Support Database at <link
    xlink:href="http://en.opensuse.org/Portal:Printing"/>. <phrase
    os="sles;sled">Solutions to many specific problems are presented in the
    SUSE Knowledgebase (<link
    xlink:href="http://www.suse.com/support/"/>). Locate the relevant articles
    with a text search for <literal>CUPS</literal>.</phrase>
   </para>
  </sect2>
 </sect1>
</chapter>
