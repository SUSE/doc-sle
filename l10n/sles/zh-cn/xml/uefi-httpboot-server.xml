<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="uefi-httpboot-server.xml" version="5.0" xml:id="cha-deployment-prep-uefi-httpboot">
 <title>设置 UEFI HTTP 引导服务器</title>
 <info>
  <abstract>
   <para>
    本章介绍如何设置和配置 UEFI HTTP 引导服务器。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>是</dm:translation>
  </dm:docmanager>
 </info>
 <sect1 xml:id="httpboot-intro">
  <title>简介</title>

  <para>
   HTTP 引导结合了 DHCP、DNS 和 HTTP，可让您通过网络引导和部署系统。HTTP 引导可用作 PXE 的高性能替代功能。HTTP 引导允许通过 HTTP 从 URI 引导服务器，从而可从本地网络外部的服务器快速传输大型文件，例如 Linux 内核和根文件系统。
  </para>

  <sect2 xml:id="httpboot-client">
   <title>配置客户端计算机</title>
   <para>
    根据您的特定硬件在物理客户端计算机上启用 HTTP 引导。有关如何在特定计算机上启用 HTTP 引导的更多信息，请参见相关文档。
   </para>
  </sect2>

  <sect2 xml:id="httpboot-preparation">
   <title>准备</title>
   <para>
    例如，此处所述的设置使用 192.168.111.0/24 (IPv4) 和 2001:db8:f00f:cafe::/64 (IPv6) IP 子网，服务器 IP 地址为 192.168.111.1(IPv4) 和 2001:db8:f00f:cafe::1/64 (IPv6)。请根据您的特定设置调整这些值。
   </para>
   <para>
    在计划用作 HTTP 引导服务器的计算机上安装以下软件包： <package>dhcp-server</package>、
    <package>apache2</package> (或 <package>lighttpd</package>), 和
    <package>dnsmasq</package>。
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="httpboot-configure-server">
  <title>配置服务器</title>

  <sect2 xml:id="httpboot-dns-server">
   <title>DNS 服务器</title>
   <para>
    虽然配置 DNS 服务器是可选步骤，但这可让您为 HTTP 引导服务器指派一个用户友好的名称。要设置 DNS 服务器，请在 <filename>/etc/dnsmasq.conf</filename> 文件中添加以下内容：
   </para>
<screen>interface=eth0
addn-hosts=/etc/dnsmasq.d/hosts.conf</screen>
   <para>
    向 <filename>/etc/dnsmasq.d/hosts.conf</filename> 文件中的 IP 地址指派域名：
   </para>
<screen>192.168.111.1 www.httpboot.local
2001:db8:f00f:cafe::1 www.httpboot.local</screen>
   <para>
    启动 DNS 服务器。
   </para>
<screen>systemctl start dnsmasq</screen>
   <note>
    <title>使用 <phrase role="productname">shim</phrase> 引导加载程序</title>
    <para>
     由于 UEFI 2.7 中的某个变化，我们建议使用 SLE 15 或更新版本中的 shim 引导加载程序，以避免该附加 DNS 节点可能导致的错误。
    </para>
   </note>
   <sect3 xml:id="httpboot-dhcpv4-server">
    <title>配置 DHCPv4 服务器</title>
    <para>
     设置 DHCP 服务器之前，需在 <filename>/etc/sysconfig/dhcpd</filename> 中指定服务器的网络接口：
    </para>
<screen>DHCPD_INTERFACE="eth0"
DHCPD6_INTERFACE="eth0"</screen>
    <para>
     这样一来，DHCP 服务器就只会在 <literal>eth0</literal> 接口上提供服务。
    </para>
    <para>
     要设置同时用于 PXE 引导和 HTTP 引导的 DHCPv4 服务器，请在 <filename>/etc/dhcpd.conf</filename> 文件中添加以下配置：
    </para>
<screen>option domain-name-servers 192.168.111.1;
option routers 192.168.111.1;
default-lease-time 14400;
ddns-update-style none;
  subnet 192.168.111.0 netmask 255.255.255.0 {
    range dynamic-bootp 192.168.111.100 192.168.111.120;
    default-lease-time 14400;
    max-lease-time 172800;
    class "pxeclients"{
      match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
      next-server 192.168.111.1;
      filename "/bootx64.efi";
    }
    class "httpclients" {
      match if substring (option vendor-class-identifier, 0, 10) = "HTTPClient";
      option vendor-class-identifier "HTTPClient";
      filename "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi";
    }
}</screen>
    <para>
     请注意，DHCPv4 服务器必须使用 <literal>HTTPClient</literal> 参数来表示供应商类别 ID，因为客户端使用该参数来标识 HTTP 引导服务。
    </para>
    <para>
     启动 DHCP 守护程序：
    </para>
    <para>
     <literal>systemctl start dhcpd</literal>
    </para>
   </sect3>
   <sect3 xml:id="httpboot-dhcpv6-server">
    <title>配置 DHCPv6 服务器</title>
    <para>
     要设置 DHCPv6 服务器，请在 <filename>/etc/dhcpd6.conf</filename> 中添加以下配置：
    </para>
<screen>option dhcp6.bootfile-url code 59 = string;
option dhcp6.vendor-class code 16 = {integer 32, integer 16, string};
subnet6 2001:db8:f00f:cafe::/64 {
        range6 2001:db8:f00f:cafe::42:10 2001:db8:f00f:cafe::42:99;
        option dhcp6.bootfile-url "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi";
        option dhcp6.name-servers 2001:db8:f00f:cafe::1;
        option dhcp6.vendor-class 0 10 "HTTPClient";
}</screen>
    <para>
     此配置定义引导 URL 的类型、供应商类别和其他必需的选项。与 DHCPv4 设置类似，需要提供引导 URL，该 URL 必须包含 IPv6 地址。还需要指定供应商类别选项。在 DHCPv6 中，它由企业编号和供应商类别数据（长度和内容）组成。由于 HTTP 引导驱动程序会忽略企业编号，因此可将其设为 <literal>0</literal>。供应商类别数据的内容必须是 <literal>HTTPClient</literal>；否则，客户端将会忽略该服务。
    </para>
    <para>
     较旧的 HTTP 引导实施不遵循 <link xlink:href="https://tools.ietf.org/html/rfc3315">RFC 3315</link>，需要使用不同的配置：
    </para>
<screen>option dhcp6.bootfile-url code 59 = string;
option dhcp6.vendor-class code 16 = string;
        subnet6 2001:db8:f00f:cafe::/64 {
        range6 2001:db8:f00f:cafe::42:10 2001:db8:f00f:cafe::42:99;
        option dhcp6.bootfile-url "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi;
	option dhcp6.name-servers 2001:db8:f00f:cafe::1;
	option dhcp6.vendor-class "HTTPClient";
}</screen>
    <para>
     启动 <literal>dhcpv6</literal> 守护程序。
    </para>
<screen>systemctl start dhcpd6</screen>
    <sect4 xml:id="httpboot-dhcpv6-pxe-server">
     <title>设置同时用于 PXE 引导和 HTTP 引导的 DHCPv6 服务器</title>
     <para>
      使用以下配置可以配置同时用于 PXE 引导和 HTTP 引导的 DHCPv6 服务器：
     </para>
<screen>option dhcp6.bootfile-url code 59 = string;
option dhcp6.vendor-class code 16 = {integer 32, integer 16, string};

subnet6 2001:db8:f00f:cafe::/64 {
        range6 2001:db8:f00f:cafe::42:10 2001:db8:f00f:cafe::42:99;

        class "PXEClient" {
	        match substring (option dhcp6.vendor-class, 6, 9);
	}

        subclass "PXEClient" "PXEClient" {
	        option dhcp6.bootfile-url "tftp://[2001:db8:f00f:cafe::1]/bootloader.efi";
	}

	class "HTTPClient"; {
	        match substring (option dhcp6.vendor-class, 6, 10);
	}

	subclass "HTTPClient" "HTTPClient" {
	        option dhcp6.bootfile-url "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi";
		option dhcp6.name-servers 2001:db8:f00f:cafe::1;
		option dhcp6.vendor-class 0 10 "HTTPClient";
	}
}</screen>
     <para>
      您也可以按如下所示将供应商类别与特定体系结构相匹配：
     </para>
<screen>class "HTTPClient" {
        match substring (option dhcp6.vendor-class, 6, 21);
	}

subclass "HTTPClient" "HTTPClient":Arch:00016 {
        option dhcp6.bootfile-url "http://www.httpboot.local/sle/EFI/BOOT/bootx64.efi";
	option dhcp6.name-servers 2001:db8:f00f:cafe::1;
	option dhcp6.vendor-class 0 10 "HTTPClient";
}</screen>
     <para>
      在此示例中，<literal>HTTPClient:Arch:00016</literal> 表示 AMD64/Intel 64 HTTP 引导客户端。此配置允许服务器同时为不同的体系结构提供服务。
     </para>
    </sect4>
    <sect4 xml:id="httpboot-firewall">
     <title>配置防火墙</title>
     <para>
      如果防火墙中的 RP 过滤器丢弃了 DHCPv6 数据包，请检查其日志。如果日志中包含 <literal>rpfilter_DROP</literal> 项，请在 <filename>/etc/firewalld/firewalld.conf</filename> 中使用以下配置禁用该过滤器：
     </para>
     <para>
      <literal>IPv6_rpfilter=no</literal>
     </para>
    </sect4>
   </sect3>
   <sect3 xml:id="httpboot-tftp-server">
    <title>部署 TFTP 服务器（可选）</title>
    <para>
     要同时为 PXE 引导和 HTTP 引导提供支持，请部署 TFTP 服务器。安装 <package>tftp</package> 并启动服务：
    </para>
<screen> systemctl start tftp.socket
systemctl start tftp.service</screen>
    <para>
     还需要安装用于 PXE 引导的特定
     <package>tftpboot-installation</package> 软件包。运行 <command>zypper se tftpboot</command> 命令以列出可用的 <package>tftp-installation</package> 软件包，然后安装所需系统版本和体系结构的软件包，例如
     <package>tftpboot-installation-SLE-15-SP3-x86_64</package> 例如，
     <package os="sles;sled">tftpboot-installation-SLE-<replaceable>VERSION</replaceable>-x86_64</package>
     （将 <replaceable>VERSION</replaceable> 替换为实际版本）。将 <filename os="sles;sled">SLE-<replaceable>VERSION</replaceable>-x86_64</filename> 目录的内容复制到 TFTP 服务器的根目录中：
    </para>


    <para>
     有关详细信息，请参见 <filename os="sles;sled">/usr/share/tftpboot-installation/SLE-<replaceable>VERSION</replaceable>-x86_64/README</filename>
    </para>
   </sect3>
   <sect3 xml:id="httpboot-http-server">
    <title>设置 HTTP 服务器</title>
    <para>
     将第一个系统 ISO 映像的所有内容复制到 <filename os="sles;sled">/srv/www/htdocs/sle/</filename> 目录中。然后编辑 <filename os="sles;sled">/srv/www/htdocs/sle/grub.cfg</filename> 文件。使用下面的示例作为参考：
    </para>
<screen>timeout=60
default=1

menuentry 'Installation IPv4' --class opensuse --class gnu-linux --class gnu --class os {
    set gfxpayload=keep
    echo 'Loading kernel ...'
    linuxefi /sle/boot/x86_64/loader/linux install=http://www.httpboot.local/sle
    echo 'Loading initial ramdisk ...'
    initrdefi /sle/boot/x86_64/loader/initrd
}

menuentry 'Installation IPv6' --class opensuse --class gnu-linux --class gnu --class os {
    set gfxpayload=keep
    echo 'Loading kernel ...'
    linuxefi /sle/boot/x86_64/loader/linux install=install=http://www.httpboot.local/sle ipv6only=1 ifcfg=*=dhcp6,DHCLIENT6_MODE=managed
    echo 'Loading initial ramdisk ...'
    initrdefi /sle/boot/x86_64/loader/initrd
}</screen>
    <sect4 xml:id="httpboot-lighttpd">
     <title>配置 lighttpd</title>
     <para>
      要在 lighttpd 中同时启用 IPv4 和 IPv6 支持，请按以下所示修改 <filename>/etc/lighttpd/lighttpd.conf</filename>：
     </para>
<screen>##
## Use IPv6?
##
#server.use-ipv6 = "enable"
$SERVER["socket"] == "[::]:80" {  }</screen>
     <para>
      启动 <literal>lighttpd</literal> 守护程序：
     </para>
<screen>systemctl start lighttpd</screen>
    </sect4>
    <sect4 xml:id="httpboot-apache2">
     <title>配置 apache2</title>
     <para>
      Apache 不需要额外的配置。启动 <literal>apache2</literal> 守护程序：
     </para>
<screen>systemctl start apache2</screen>
    </sect4>
   </sect3>
   <sect3 xml:id="httpboot-http-server-ssl-support">
    <title>为 HTTP 服务器启用 SSL 支持（可选）</title>
    <para>
     要使用 HTTPS 引导，您需要将现有服务器证书转换为 <literal>DER</literal> 格式，并将其注册到客户端固件中。
    </para>
    <para>
     假设您的服务器上已安装了证书，请使用以下命令将其转换为 <literal>DER</literal> 格式，以用于客户端：
    </para>
<screen>openssl x509 -in <replaceable>CERTIFICATE</replaceable>.crt -outform der -out <replaceable>CERTIFICATE</replaceable>.der</screen>
    <sect4 xml:id="httpboot-enroll-certificate-physical-machine">
     <title>将服务器证书注册到客户端固件中</title>
     <para>
      注册已转换证书的确切过程取决于客户端固件的具体实施。对于某些硬件，您需要使用包含证书的外部储存设备，通过固件 UI 手动注册证书。支持 Redfish 的计算机可以远程注册证书。有关注册证书的详细信息，请参见特定硬件的相应文档。
     </para>
    </sect4>
    <sect4 xml:id="httpboot-ssl-lighttpd">
     <title>在 lighttpd 中启用 SSL 支持</title>
     <para>
      由于 lighttpd 需要私用密钥和证书储存在同一个文件中，请使用以下命令整合这些数据：
     </para>
<screen>cat <replaceable>CERTIFICATE</replaceable>.crt server.key &gt; <replaceable>CERTIFICATE</replaceable>.pem</screen>
     <para>
      将 <filename><replaceable>CERTIFICATE</replaceable>.pem</filename> 复制到 <filename>/etc/ssl/private/</filename> 目录中。
     </para>
<screen>cp server-almighty.pem /etc/ssl/private/
chown -R root:lighttpd /etc/ssl/private/server-almighty.pem
chmod 640 /etc/ssl/private/server-almighty.pem</screen>
     <para>
      确保 <literal>mod_openssl</literal> 列在 <filename>/etc/lighttpd/modules.conf</filename> 文件的 <literal>server.modules</literal> 部分，例如：
     </para>
<screen>server.modules = (
  "mod_access",
  "mod_openssl",
)</screen>
     <para>
      将下面几行添加到 <filename>/etc/lighttpd/lighttpd.conf</filename> 中的 <literal>SSL Support</literal> 部分：
     </para>
<screen># IPv4
$SERVER["socket"] == ":443" {
    ssl.engine                 = "enable"
    ssl.pemfile                = "/etc/ssl/private/server-almighty.pem"
}
# IPv6
$SERVER["socket"] == "[::]:443" {
    ssl.engine                 = "enable"
    ssl.pemfile                = "/etc/ssl/private/server-almighty.pem"
}</screen>
     <para>
      重启动 lighttpd 以激活 SSL 支持：
     </para>
<screen>systemctl restart lighttpd</screen>
    </sect4>
    <sect4 xml:id="http-ssl-apache">
     <title>在 Apache 中启用 SSL 支持</title>
     <para>
      打开 <filename>/etc/sysconfig/apache2</filename> 文件，并按如下所示添加 SSL 标志：
     </para>
<screen>APACHE_SERVER_FLAGS="SSL"</screen>
     <para>
      请确保 <literal>ssl</literal> 模块列在 <literal>APACHE_MODULES</literal> 中，例如：
     </para>
     <para>
      接下来，将私用密钥和证书复制到 <filename>/etc/apache2/</filename> 目录中。
     </para>
<screen>cp server.key /etc/apache2/ssl.key/
chown wwwrun /etc/apache2/ssl.key/server.key
chmod 600 /etc/apache2/ssl.key/server.key
cp server.crt /etc/apache2/ssl.crt/</screen>
     <para>
      创建 ssl vhost 配置。
     </para>
<screen>cd /etc/apache2/vhosts.d
cp vhost-ssl.template vhost-ssl.conf</screen>
     <para>
      编辑 <filename>/etc/apache2/vhosts.d/vhost-ssl.conf</filename> 以更改私用密钥和证书：
     </para>
<screen>SSLCertificateFile /etc/apache2/ssl.crt/server.crt
 SSLCertificateKeyFile /etc/apache2/ssl.key/server.key</screen>
     <para>
      重启动 apache 以激活 SSL 支持：
     </para>
<screen>systemctl restart apache2</screen>
    </sect4>
    <sect4 xml:id="httpboot-modify-dhcp-configuration">
     <title>修改 DHCP 配置</title>
     <para>
      在 <filename>dhcpd.conf/dhcpd6.conf</filename> 中，将 <literal>http://</literal> 前缀替换为 <literal>https://</literal>，然后重启动 DHCP 服务器。
     </para>
<screen>systemctl restart dhcpd
systemctl restart dhcpd6</screen>
    </sect4>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="httpboot-client-boot">
  <title>通过 HTTP 引导引导客户端</title>

  <para>
   如果固件已支持 HTTP 引导，请插入电缆并选择正确的引导选项。
  </para>
 </sect1>
</chapter>
