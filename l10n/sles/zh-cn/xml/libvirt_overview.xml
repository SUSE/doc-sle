<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="libvirt_overview.xml" version="5.0" xml:id="cha-libvirt-overview">
  <title><systemitem class="library">libvirt</systemitem> 守护程序</title>
  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>
  <para>
    访问 KVM 或 Xen 的 <systemitem class="library">libvirt</systemitem> 部署需要在主机上安装并激活一个或多个守护程序。<systemitem class="library">libvirt</systemitem> 提供两个守护程序部署选项：一体化守护程序或模块化守护程序。<systemitem class="library">libvirt</systemitem> 始终提供单个一体化守护程序 <systemitem class="daemon">libvirtd</systemitem>。该守护程序包含主要超级管理程序驱动程序，以及用于存储的所有支持性次要驱动程序，例如用于网络、节点设备和管理的驱动程序。一体化 <systemitem class="daemon">libvirtd</systemitem> 还为外部客户端提供安全的远程访问。如果使用模块化守护程序，每个驱动程序将在自身的守护程序中运行，使用户能够自定义其 <systemitem class="library">libvirt</systemitem> 部署。默认已启用一体化守护程序，但可以通过管理相应的 <systemitem class="daemon">systemd</systemitem> 服务文件将部署切换到模块化守护程序。
  </para>
  <para>
    在需要最低程度的 <systemitem class="library">libvirt</systemitem> 支持的方案中，模块化守护程序部署非常有用。例如，如果 <systemitem class="library">libvirt</systemitem> 不提供虚拟机存储和网络，则不需要 <package>libvirt-daemon-driver-storage</package> 和 <package>libvirt-daemon-driver-network</package> 类型的软件包。Kubernetes 是一个极端的示例，它会处理所有网络、存储、cgroup 和名称空间集成等方面的任务。对于 Kubernetes，只需安装提供 <systemitem class="daemon">virtqemud</systemitem> 的 <package>libvirt-daemon-driver-QEMU</package> 软件包即可。模块化守护程序允许配置仅包含用例所需组件的自定义 <systemitem class="library">libvirt</systemitem> 部署。
  </para>
  <sect1 xml:id="libvirt-monolithic-daemon">
    <title>启动和停止一体化守护程序</title>

    <para>
      一体化守护程序称为 <systemitem class="daemon">libvirtd</systemitem>，它是通过 <filename>/etc/libvirt/libvirtd.conf</filename> 配置的。可使用多个 <systemitem class="daemon">systemd</systemitem> 单元文件来管理 <systemitem class="daemon">libvirtd</systemitem>：
    </para>

    <itemizedlist>
      <listitem>
        <para>
          <emphasis>libvirtd.service</emphasis> - 用于启动 <systemitem class="daemon">libvirtd</systemitem> 的主 <systemitem class="daemon">systemd</systemitem> 单元文件。如果 VM 配置为在主机引导时启动，我们建议也将 <filename>libvirtd.service</filename> 配置为在引导时启动。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>libvirtd.socket</emphasis> - 与主读写 UNIX 套接字 <filename>/var/run/libvirt/libvirt-sock</filename> 对应的单元文件。我们建议在引导时启用此单元。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>libvirtd-ro.socket</emphasis> - 与主只读 UNIX 套接字 <filename>/var/run/libvirt/libvirt-sock-ro</filename> 对应的单元文件。我们建议在引导时启用此单元。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>libvirtd-admin.socket</emphasis> - 与管理 UNIX 套接字 <filename>/var/run/libvirt/libvirt-admin-sock</filename> 对应的单元文件。我们建议在引导时启用此单元。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>libvirtd-tcp.socket</emphasis> - 与用于进行非 TLS 远程访问的 TCP 16509 端口对应的单元文件。在管理员已配置适当的身份验证机制之前，不应将此单元配置为在引导时启动。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>libvirtd-tls.socket</emphasis> - 与用于进行非 TLS 远程访问的 TCP 16509 端口对应的单元文件。在管理员已部署 x509 证书并选择性地配置适当的身份验证机制之前，不应将此单元配置为在引导时启动。
        </para>
      </listitem>
    </itemizedlist>

    <para>
      使用 <systemitem class="daemon">systemd</systemitem> 套接字激活时，将不再遵循 <filename>libvirtd.conf</filename> 中的某些配置设置。必须通过系统单元文件控制这些设置：
    </para>

    <itemizedlist>
      <listitem>
        <para>
          <emphasis>listen_tcp</emphasis> - 通过启动 <filename>libvirtd-tcp.socket</filename> 单元文件启用 TCP 套接字。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>listen_tls</emphasis> - 通过启动 <filename>libvirtd-tls.socket</filename> 单元文件启用 TLS 套接字。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>tcp_port</emphasis> - 非 TLS TCP 套接字的端口，通过 <filename>libvirtd-tcp.socket</filename> 单元文件中的 <option>ListenStream</option> 参数进行控制。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>tls_port</emphasis> - TLS TCP 套接字的端口，通过 <filename>libvirtd-tls.socket</filename> 单元文件中的 <option>ListenStream</option> 参数进行控制。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>listen_addr</emphasis> - 要监听的 IP 地址，通过 <filename>libvirtd-tcp.socket</filename> 或 <filename>libvirtd-tls.socket</filename> 单元文件中的 <option>ListenStream</option> 参数独立控制。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>unix_sock_group</emphasis> - UNIX 套接字组拥有者，通过 <filename>libvirtd.socket</filename> 和 <filename>libvirtd-ro.socket</filename> 单元文件中的 <option>SocketGroup</option> 参数进行控制。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>unix_sock_ro_perms</emphasis> - 只读 UNIX 套接字权限，通过 <filename>libvirtd-ro.socket</filename> 单元文件中的 <option>SocketMode</option> 参数进行控制。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>unix_sock_rw_perms</emphasis> - 读写 UNIX 套接字权限，通过 <filename>libvirtd.socket</filename> 单元文件中的 <option>SocketMode</option> 参数进行控制。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>unix_sock_admin_perms</emphasis> - 管理员 UNIX 套接字权限，通过 <filename>libvirtd-admin.socket</filename> 单元文件中的 <option>SocketMode</option> 参数进行控制。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>unix_sock_dir</emphasis> - 在其中创建所有 UNIX 套接字的目录，通过任意 <filename>libvirtd.socket</filename>、<filename>libvirtd-ro.socket</filename> 和 <filename>libvirtd-admin.socket</filename> 单元文件中的 <option>ListenStream</option> 参数独立控制。
        </para>
      </listitem>
    </itemizedlist>

    <important>
      <title>有冲突的服务：<systemitem class="daemon">libvirtd</systemitem> 和 <systemitem class="daemon">xendomains</systemitem></title>
      <para>
        如果 <systemitem class="daemon">libvirtd</systemitem> 无法启动，请检查是否装载了 <systemitem class="daemon">xendomains</systemitem> 服务：
      </para>
<screen><prompt>&gt; </prompt>systemctl is-active xendomains active</screen>
      <para>
        如果该命令返回 <literal>active</literal>，您需要停止 <systemitem class="daemon">xendomains</systemitem>，然后才可以启动 <systemitem class="daemon">libvirtd</systemitem> 守护程序。如果您希望在重引导后也要启动 <systemitem class="daemon">libvirtd</systemitem>，另外还需禁止 <systemitem class="daemon">xendomains</systemitem> 自动启动。禁用该服务：
      </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> systemctl stop xendomains
<prompt>&gt; </prompt><command>sudo</command> systemctl disable xendomains
<prompt>&gt; </prompt><command>sudo</command> systemctl start libvirtd
</screen>
      <para>
        <systemitem class="daemon">xendomains</systemitem> 和 <systemitem class="daemon">libvirtd</systemitem> 提供相同的服务，如果同时使用，可能会互相干扰。例如，<systemitem class="daemon">xendomains</systemitem> 可能会尝试启动已由 <systemitem class="daemon">libvirtd</systemitem> 启动的 domU。
      </para>
    </important>
  </sect1>
  <sect1 xml:id="libvirt-modular-daemon">
    <title>启动和停止模块化守护程序</title>

    <para>
      模块化守护程序按照它们运行的驱动程序命名，其软件集为 <quote>virt<replaceable>DRIVER</replaceable>d</quote>。它们是通过文件 <filename>/etc/libvirt/virt<replaceable>DRIVER</replaceable>d.conf</filename> 配置的。SUSE 支持 virtqemud 和 virtxend 超级管理程序守护程序，以及所有支持性的次要守护程序：
    </para>

    <itemizedlist>
      <listitem>
        <para>
          <emphasis>virtnetworkd</emphasis> - 提供 <systemitem class="library">libvirt</systemitem> 虚拟网络管理 API 的虚拟网络管理守护程序。例如，virtnetworkd 可用于在主机上创建供虚拟机使用的 NAT 虚拟网络。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>virtnodedevd</emphasis> - 主机物理设备管理守护程序，提供 <systemitem class="library">libvirt</systemitem> 的节点设备管理 API。例如，virtnodedevd 可用于从主机分离供虚拟机使用的 PCI 设备。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>virtnwfilterd</emphasis> - 提供 <systemitem class="library">libvirt</systemitem> 防火墙管理 API 的主机防火墙管理守护程序。例如，virtnwfilterd 可用于为虚拟机配置网络流量过滤规则。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>virtsecretd</emphasis> - 提供 <systemitem class="library">libvirt</systemitem> 机密管理 API 的主机机密管理守护程序。例如，virtsecretd 可用于存储与 LUK 卷关联的密钥。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>virtstorged</emphasis> - 提供 <systemitem class="library">libvirt</systemitem> 存储管理 API 的主机存储管理守护程序。virtstorged 可用于创建存储池，并基于这些池创建卷。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>virtinterfaced</emphasis> - 主机 NIC 管理守护程序，提供 <systemitem class="library">libvirt</systemitem> 的主机网络接口管理 API。例如，virtinterfaced 可用于在主机上创建绑定的网络设备。SUSE 不建议使用 <systemitem class="library">libvirt</systemitem> 的接口管理 API，最好使用 wicked 或 NetworkManager 等默认网络工具。建议禁用 virtinterfaced。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>virtproxyd</emphasis> - 充当传统 <systemitem class="daemon">libvirtd</systemitem> 套接字与模块化守护程序套接字之间的连接代理的守护程序。如果使用模块化 <systemitem class="library">libvirt</systemitem> 部署，virtproxyd 将允许远程客户端访问类似于一体化 <systemitem class="daemon">libvirtd</systemitem> 的 <systemitem class="library">libvirt</systemitem> API。连接到一体化 <systemitem class="daemon">libvirtd</systemitem> 套接字的本地客户端也可以使用 virtproxyd。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>virtlogd</emphasis> - 用于从虚拟机控制台管理日志的守护程序。一体化 <systemitem class="daemon">libvirtd</systemitem> 也使用 virtlogd。一体化守护程序和 virtqemud <systemitem class="daemon">systemd</systemitem> 单元文件需要 virtlogd，因此无需显式启动 virtlogd。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>virtlockd</emphasis> - 用于管理针对虚拟机资源（例如磁盘）持有的锁的守护程序。一体化 <systemitem class="daemon">libvirtd</systemitem> 也使用 virtlockd。一体化守护程序、virtqemud 和 virtxend <systemitem class="daemon">systemd</systemitem> 单元文件需要 virtlockd，因此无需显式启动 virtlockd。
        </para>
      </listitem>
    </itemizedlist>

    <para>
      <systemitem class="library">libvirt</systemitem> 包含两个模块化守护程序：virtlockd 和 virtlogd，一体化 <systemitem class="daemon">libvirtd</systemitem> 也使用这两个守护程序。
    </para>

    <para>
      默认情况下，模块化守护程序监听 <filename>/var/run/libvirt/virt<replaceable>DRIVER</replaceable>d-sock</filename> 和 <filename>/var/run/libvirt/virt<replaceable>DRIVER</replaceable>d-sock-ro</filename> Unix 域套接字上的连接。客户端库偏向于使用这些套接字而不是传统的 <filename>/var/run/libvirt/libvirtd-sock</filename>。virtproxyd 守护程序适用于需要传统 <systemitem class="daemon">libvirtd</systemitem> 套接字的远程客户端或本地客户端。
    </para>

    <para>
      与一体化守护程序一样，模块化守护程序是通过多个 <systemitem class="daemon">systemd</systemitem> 单元文件管理的：
    </para>

    <itemizedlist>
      <listitem>
        <para>
          <emphasis>virt<replaceable>DRIVER</replaceable>d.service</emphasis> - 用于启动 virt<replaceable>DRIVER</replaceable>d 守护程序的主单元文件。如果 VM 配置为在主机引导时启动，我们建议也将服务配置为在引导时启动。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>virt<replaceable>DRIVER</replaceable>d.socket</emphasis> - 与主读写 UNIX 套接字 <filename>/var/run/libvirt/virt<replaceable>DRIVER</replaceable>d-sock</filename> 对应的单元文件。默认情况下，我们建议在引导时启动此套接字。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>virt<replaceable>DRIVER</replaceable>d-ro.socket</emphasis> - 与主只读 UNIX 套接字 <filename>/var/run/libvirt/virt<replaceable>DRIVER</replaceable>d-sock-ro</filename> 对应的单元文件。默认情况下，我们建议在引导时启动此套接字。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>virt<replaceable>DRIVER</replaceable>d-admin.socket</emphasis> - 与管理 UNIX 套接字 <filename>/var/run/libvirt/virt<replaceable>DRIVER</replaceable>d-admin-sock</filename> 对应的单元文件。默认情况下，我们建议在引导时启动此套接字。
        </para>
      </listitem>
    </itemizedlist>

    <para>
      使用 <systemitem class="daemon">systemd</systemitem> 套接字激活时，将不再遵循 virt<replaceable>DRIVER</replaceable>d.conf 中的多个配置设置。必须通过系统单元文件控制这些设置：
    </para>

    <itemizedlist>
      <listitem>
        <para>
          <emphasis>unix_sock_group</emphasis> - UNIX 套接字组拥有者，通过 <filename>virt<replaceable>DRIVER</replaceable>d.socket</filename> 和 <filename>virt<replaceable>DRIVER</replaceable>d-ro.socket</filename> 单元文件中的 <option>SocketGroup</option> 参数进行控制。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>unix_sock_ro_perms</emphasis> - 只读 UNIX 套接字权限，通过 <filename>virt<replaceable>DRIVER</replaceable>d-ro.socket</filename> 单元文件中的 <option>SocketMode</option> 参数进行控制。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>unix_sock_rw_perms</emphasis> - 读写 UNIX 套接字权限，通过 <filename>virt<replaceable>DRIVER</replaceable>d.socket</filename> 单元文件中的 <option>SocketMode</option> 参数进行控制。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>unix_sock_admin_perms</emphasis> - 管理员 UNIX 套接字权限，通过 <filename>virt<replaceable>DRIVER</replaceable>d-admin.socket</filename> 单元文件中的 <option>SocketMode</option> 参数进行控制。
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>unix_sock_dir</emphasis> - 在其中创建所有 UNIX 套接字的目录，通过任意 <filename>virt<replaceable>DRIVER</replaceable>d.socket</filename>、<filename>virt<replaceable>DRIVER</replaceable>d-ro.socket</filename> 和 <filename>virt<replaceable>DRIVER</replaceable>d-admin.socket</filename> 单元文件中的 <option>ListenStream</option> 参数独立控制。
        </para>
      </listitem>
    </itemizedlist>
  </sect1>
  <sect1 xml:id="libvirt-switch-daemons">
    <title>切换到模块化守护程序</title>

    <para>
      需要更改多个服务才能从一体化守护程序切换到模块化守护程序。在守护程序选项之间切换之前，建议停止或逐出所有正在运行的虚拟机。
    </para>

    <procedure>
      <step>
        <para>
          停止一体化守护程序及其套接字
        </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> systemctl stop libvirtd.service
<prompt>&gt; </prompt><command>sudo</command> systemctl stop libvirtd{,-ro,-admin}.socket
</screen>
      </step>
      <step>
        <para>
          禁止将来启动一体化守护程序
        </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> systemctl disable libvirtd.service
<prompt>&gt; </prompt><command>sudo</command> systemctl disable libvirtd{,-ro,-admin}.socket
</screen>
      </step>
      <step>
        <para>
          启用 KVM 或 Xen 的新守护程序，包括必需的次要驱动程序。以下示例启用 KVM 的 QEMU 驱动程序，以及所有必需的次要驱动程序：
        </para>
<screen>
for drv in qemu network nodedev nwfilter secret storage
do
 <prompt>&gt; </prompt><command>sudo</command> systemctl enable virt${drv}d.service
 <prompt>&gt; </prompt><command>sudo</command> systemctl enable virt${drv}d{,-ro,-admin}.socket
done
</screen>
      </step>
      <step>
        <para>
          启动同一组守护程序的套接字
        </para>
<screen>
for drv in qemu network nodedev nwfilter secret storage
do
 <prompt>&gt; </prompt><command>sudo</command> systemctl start virt${drv}d{,-ro,-admin}.socket
done
</screen>
      </step>
      <step>
        <para>
          如果需要支持从远程主机进行连接，必须启用并启动 virtproxyd 守护程序：
        </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> systemctl enable virtproxyd.service
<prompt>&gt; </prompt><command>sudo</command> systemctl enable virtproxyd{,-ro,-admin}.socket
<prompt>&gt; </prompt><command>sudo</command> systemctl start virtproxyd{,-ro,-admin}.socket
</screen>
      </step>
    </procedure>
  </sect1>
</chapter>
