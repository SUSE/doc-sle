<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha.squid">
 <title>Squid Caching Proxy Server</title>
 <info>
  <abstract>
   <para>
    Squid is a widely-used caching proxy server for Linux and Unix platforms.
    This means that it stores requested Internet objects, such as data on a Web
    or FTP server, on a machine that is closer to the requesting workstation
    than the server. It can be set up in multiple hierarchies to assure optimal
    response times and low bandwidth usage, even in modes that are transparent
    to end users.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>
 <para>
  Squid acts as a caching proxy server. It redirects object requests from
  clients (in this case, from Web browsers) to the server. When the requested
  objects arrive from the server, it delivers the objects to the client and
  keeps a copy of them in the hard disk cache. An advantage of caching is that
  several clients requesting the same object can be served from the hard disk
  cache. This enables clients to receive the data much faster than from the
  Internet. This procedure also reduces the network traffic.
 </para>
 <para>
  Along with actual caching, Squid offers a wide range of features:
 </para>
 <itemizedlist>
  <listitem>
   <para>
    Distributing load over intercommunicating hierarchies of proxy servers
   </para>
  </listitem>
  <listitem>
   <para>
    Defining strict access control lists for all clients accessing the proxy
    server
   </para>
  </listitem>
  <listitem>
   <para>
    Allowing or denying access to specific Web pages using other applications
   </para>
  </listitem>
  <listitem>
   <para>
    Generating statistics about frequently-visited Web pages for the assessment
    of surfing habits
   </para>
  </listitem>
 </itemizedlist>
 <para>
  Squid is not a generic proxy server. It normally proxies only HTTP
  connections. It supports the protocols FTP, Gopher, SSL, and WAIS, but it
  does not support other Internet protocols, such as the news protocol, or
  video conferencing protocols. Because Squid only supports the UDP protocol to
  provide communication between different caches, many multimedia programs are
  not supported.
 </para>
 <sect1 xml:id="sec.squid.cacheinfos">
  <title>Some Facts about Proxy Servers</title>

  <para>
   As a caching proxy server, Squid can be used in several ways. When combined
   with a firewall, it can help with security. Multiple proxies can be used
   together. It can also determine what types of objects should be cached and
   for how long.
  </para>

  <sect2 xml:id="sec.squid.security">
   <title>Squid and Security</title>
   <para>
    It is possible to use Squid together with a firewall to secure internal
    networks from the outside. The firewall denies all clients access to
    external services except Squid. All Web connections must be established by
    the proxy server. With this configuration, Squid completely controls Web
    access.
   </para>
   <para>
    If the firewall configuration includes a demilitarized zone (DMZ), the
    proxy server should operate within this zone.
    <xref linkend="sec.squid.proxyconfigtrans"/> describes how to implement a
    <emphasis>transparent</emphasis> proxy. This simplifies the configuration
    of the clients, because in this case, they do not need any information
    about the proxy server.
   </para>
  </sect2>

  <sect2 xml:id="sec.squid.morecaches">
   <title>Multiple Caches</title>
   <para>
    Several instances of Squid can be configured to exchange objects between
    them. This reduces the total system load and increases the chances of
    retrieving an object from the local network. It is also possible to
    configure cache hierarchies, so a cache can forward object requests to
    sibling caches or to a parent cache&mdash;causing it to request objects
    from another cache in the local network, or directly from the source.
   </para>
   <para>
    Choosing the appropriate topology for the cache hierarchy is very
    important, because it is not desirable to increase the overall traffic on
    the network. For a very large network, it would make sense to configure a
    proxy server for every subnet and connect them to a parent proxy server,
    which in turn is connected to the caching proxy server of the ISP.
   </para>
   <para>
    All this communication is handled by ICP (Internet cache protocol) running
    on top of the UDP protocol. Data transfers between caches are handled using
    HTTP (hypertext transmission protocol) based on TCP.
   </para>
   <para>
    To find the most appropriate server from which to request objects, a cache
    sends an ICP request to all sibling proxies. The sibling proxies answer
    these requests via ICP responses. If the object was detected, they use the
    code <literal>HIT</literal>, if not, they use <literal>MISS</literal>.
   </para>
   <para>
    If multiple <literal>HIT</literal> responses were found, the proxy server
    decides from which server to download, depending on factors such as which
    cache sent the fastest answer or which one is closer. If no satisfactory
    responses are received, the request is sent to the parent cache.
    <remark>Is timestamp a factor? - sknorr, 2016-06-24</remark>
   </para>
   <note>
    <title>How Squid Avoids Duplication of Objects</title>
    <para>
     To avoid duplication of objects in different caches in the network, other
     ICP protocols are used, such as CARP (cache array routing protocol) or
     HTCP (hypertext cache protocol). The more objects maintained in the
     network, the greater the possibility of finding the desired object.
    </para>
   </note>
  </sect2>

  <sect2 xml:id="sec.squid.latching">
   <title>Caching Internet Objects</title>
   <para>
    Many objects available in the network are not static, such as dynamically
    generated pages and TLS/SSL-encrypted content. Objects like these are not
    cached because they change each time they are accessed.
    <remark>Squid can now decrypt TLS traffic with plugins. Not sure whether
     that is then stored or not. Also, not sure how/whether to get this
     information in here. - sknorr, 2016-06-24
    </remark>
   </para>
   <para>
    To determine how long objects should remain in the cache, objects are
    assigned one of several states. Web and proxy servers find out the status
    of an object by adding headers to these objects, such as <quote>Last
    modified</quote> or <quote>Expires</quote> and the corresponding date.
    Other headers specifying that objects must not be cached can be used as
    well.
   </para>
   <para>
    Objects in the cache are normally replaced, because of a lack of free disk
    space, using algorithms such as LRU (last recently used). This means that
    the proxy expunges those objects that have not been requested for the
    longest time.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.squid.sysneeds">
  <title>System Requirements</title>

  <para>
   System requirements largely depend on the maximum network load that the
   system must bear. Therefore, examine load peaks, as during those times, load
   might be more than four times the day's average. When in doubt, slightly
   overestimate the system's requirements. Having Squid working close to the
   limit of its capabilities can lead to a severe loss in quality of service.
   The following sections point to system factors in order of significance:
  </para>

<!-- Source: http://wiki.squid-cache.org/BestOsForSquid#Tuning_for_More -->

  <orderedlist>
   <listitem>
    <para>
     RAM size
    </para>
   </listitem>
   <listitem>
    <para>
     CPU speed/physical CPU cores
    </para>
   </listitem>
   <listitem>
    <para>
     Size of the disk cache
    </para>
   </listitem>
   <listitem>
    <para>
     Hard disks/SSDs and their architecture
    </para>
   </listitem>
  </orderedlist>

  <sect2 xml:id="sec.squid.ram">
   <title>RAM</title>
   <para>
    The amount of memory (RAM) required by Squid directly correlates with the
    number of objects in the cache. Random access memory is much faster than a
    hard disk/SSD. Therefore, it is very important to have sufficient memory
    for the Squid process, because system performance is dramatically reduced
    if the swap disk is used.
   </para>
   <para>
    Squid also stores cache object references and frequently requested objects
    in the main memory to speed up retrieval of this data. In addition to that,
    there is other data that Squid needs to keep in memory, such as a table
    with all the IP addresses handled, an exact domain name cache, the most
    frequently requested objects, access control lists, buffers, and more.
   </para>
  </sect2>

  <sect2 xml:id="sec.squid.cpu">
   <title>CPU</title>
   <para>
    Squid is tuned to work best with lower processor core counts (4&ndash;8
    physical cores), with each providing high performance. Technologies
    providing virtual cores such as hyperthreading can hurt performance.
   </para>
   <para>
    To make the best use of multiple CPU cores, it is necessary to set up
    multiple worker threads writing to different caching devices. By default,
    multi-core support is mostly disabled.
   </para>
  </sect2>

  <sect2 xml:id="sec.squid.sysneeds.cache_size">
   <title>Size of the Disk Cache</title>
   <para>
    In a small cache, the probability of a <literal>HIT</literal> (finding the
    requested object already located there) is small, because the cache is
    easily filled and less requested objects are replaced by newer ones. If,
    for example, 1&nbsp;GB is available for the cache and the users use up only
    10&nbsp;MB per day surfing, it would take more than one hundred days to
    fill the cache.
   </para>
   <para>
    The easiest way to determine the necessary cache size is to consider the
    maximum transfer rate of the connection. With a 1&nbsp;Mbit/s connection,
    the maximum transfer rate is 128&nbsp;KB/s. If all this traffic ended up in
    the cache, in one hour it would add up to 460&nbsp;MB. Assuming that all
    this traffic is generated in only eight working hours, it would reach
    3.6&nbsp;GB in one day. Because the connection is normally not used to its
    upper volume limit, it can be assumed that the total data volume handled by
    the cache is approximately 2&nbsp;GB. Hence, in this example, 2&nbsp;GB of
    disk space is required for Squid to keep one day's worth of browsing data
    cached.
   </para>
  </sect2>

  <sect2 xml:id="sec.squid.sysneeds.disk">
   <title>Hard Disk/SSD Architecture</title>
<!-- http://wiki.squid-cache.org/SquidFaq/RAID -->
   <para>
    Speed plays an important role in the caching process, so this factor
    deserves special attention. For hard disks/SSDs, this parameter is
    described as <emphasis>random seek time</emphasis> or <emphasis>random read
    performance</emphasis>, measured in milliseconds. Because the data blocks
    that Squid reads from or writes to the hard disk/SSD tend to be small, the
    seek time/read performance of the hard disk/SSD is more important than its
    data throughput.
   </para>
   <para>
    For use as a proxy server, hard disks with high rotation speeds or SSDs are
    the best choice. When using hard disks, it can be better to use multiple
    smaller hard disks, each with a single cache directory to avoid excessive
    read times.
   </para>
   <para>
    Using a RAID system allows increasing reliability at expense of speed.
    However, for performance reasons, avoid (software) RAID5 and similar
    settings.
   </para>
   <para>
    File system choice is usually not decisive. However, using the mount option
    <literal>noatime</literal> can improve performance&mdash;Squid provides its
    own time stamps and thus does not need the file system to track access
    times.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.squid.start">
  <title>Basic Usage of Squid</title>

  <para>
   If not already installed, install the package <package>squid</package> .
   <systemitem>squid</systemitem> is not among the packages installed by
   default on &productnamereg;.
  </para>

  <para>
   Squid is already preconfigured in &productname;, you can start it directly
   after the installation. To ensure a smooth start-up, the network should be
   configured in a way that at least one name server and the Internet can be
   reached. Problems can arise if a dial-up connection is used with a dynamic
   DNS configuration. In this case, at least the name server should be
   specified, because Squid does not start if it does not detect a DNS server
   in <filename>/var/run/netconfig/resolv.conf</filename>.
  </para>

  <sect2 xml:id="sec.squid.start.commands">
   <title>Starting Squid</title>
   <para>
    To start Squid, use:
   </para>
<screen>&prompt.sudo;<command>systemctl start squid</command></screen>
   <para>
    If you want Squid to start when the system boots up, enable the service
    with <command>systemctl enable squid</command>.
   </para>
  </sect2>

  <sect2 xml:id="sec.squid.check">
   <title>Checking Whether Squid Is Working</title>
   <para>
    To check whether Squid is running, choose one of the following ways:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Using <command>systemctl</command>:
     </para>
<screen>&prompt.user;<command>systemctl status squid</command></screen>
     <para>
      The output of this command should indicate that Squid is
      <literal>loaded</literal> and <literal>active (running)</literal>.
     </para>
    </listitem>
    <listitem>
     <para>
      Using Squid itself:
     </para>
<screen>&prompt.sudo;<command>squid -k check | echo $?</command></screen>
     <para>
      The output of this command should be <literal>0</literal>, but may
      contain additional warnings or messages.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    To test the functionality of Squid on the local system, choose one of the
    following ways:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      To test, you can use <command>squidclient</command>, a command-line tool
      that can output the response to a Web request, similar to
      <command>wget</command> or <command>curl</command>.
     </para>
     <para>
      Unlike those tools, <command>squidclient</command> will automatically
      connect to the default proxy setup of Squid,
      <literal>localhost:3128</literal>. However, if you changed the
      configuration of Squid, you need to configure
      <command>squidclient</command> to use different settings using command
      line options. For more information, see <command>squidclient
      --help</command>.
     </para>
     <example xml:id="ex.squidclient.request">
      <title>A Request With <command>squidclient</command></title>
<screen>&prompt.user;<command>squidclient http://www.example.org</command>
HTTP/1.1 200 OK
Cache-Control: max-age=604800
Content-Type: text/html
Date: Fri, 22 Jun 2016 12:00:00 GMT
Expires: Fri, 29 Jun 2016 12:00:00 GMT
Last-Modified: Fri, 09 Aug 2013 23:54:35 GMT
Server: ECS (iad/182A)
Vary: Accept-Encoding
X-Cache: HIT
x-ec-custom-error: 1
Content-Length: 1270
X-Cache: MISS from moon<co xml:id="co.squid.miss"/>
X-Cache-Lookup: MISS from moon:3128
Via: 1.1 moon (squid/3.5.16)<co xml:id="co.squid.via"/>
Connection: close

<![CDATA[<!doctype html>
<html>
<head>
    <title>Example Domain</title>
[...]
</body>
</html>]]></screen>
      <para>
       The output shown in <xref linkend="ex.squidclient.request"/> can be
       split into two parts:
      </para>
      <orderedlist>
       <listitem>
        <para>
         The protocol headers of the response: the lines before the blank line.
        </para>
       </listitem>
       <listitem>
        <para>
         The actual content of the response: the lines after the blank line.
        </para>
       </listitem>
      </orderedlist>
      <para>
       To verify that Squid is used, refer to the selected header lines:
      </para>
      <calloutlist>
       <callout arearefs="co.squid.miss">
        <para>
         The value of the header <literal>X-Cache</literal> tells you that the
         requested document was not in the Squid cache
         (<literal>MISS</literal>) of the computer
         <systemitem>moon</systemitem>.
        </para>
        <para>
         The example above contains two <literal>X-Cache</literal> lines. You
         can ignore the first <literal>X-Cache</literal> header. It is produced
         by the internal caching software of the originating Web server.
        </para>
       </callout>
       <callout arearefs="co.squid.via">
        <para>
         The value of the header <literal>Via</literal> tells you the HTTP
         version, the name of the computer, and the version of Squid in use.
        </para>
       </callout>
      </calloutlist>
     </example>
    </listitem>
    <listitem>
     <para>
      Using a browser: Set up <option>localhost</option> as the proxy and
      <option>3128</option> as the port. You can then load a page and check the
      response headers in the <guimenu>Network</guimenu> panel of the browser's
      <emphasis>Inspector</emphasis> or <emphasis>Developer Tools</emphasis>.
      The headers should be reproduced similarly to the way shown in
      <xref linkend="ex.squidclient.request"/>.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    To allow users from the local system and other systems to access Squid and
    the Internet, change the entry in the configuration files
    <filename>/etc/squid/squid.conf</filename> from <option>http_access deny
    all</option> to <option>http_access allow all</option>. However, in doing
    so, consider that Squid is made completely accessible to anyone by this
    action. Therefore, define ACLs (access control lists) that control access
    to the proxy server. After modifying the configuration file, Squid must be
    reloaded or restarted. For more information on ACLs, see
    <xref linkend="sec.squid.acl"/>.
   </para>
   <para>
    If Squid quits after a short period of time even though it was started
    successfully, check whether there is a faulty name server entry or whether
    the <filename>/var/run/netconfig/resolv.conf</filename> file is missing.
    Squid logs the cause of a start-up failure in the file
    <filename>/var/log/squid/cache.log</filename>.
   </para>
  </sect2>

  <sect2 xml:id="sec.squid.stop">
   <title>Stopping, Reloading, and Restarting Squid</title>
   <para>
    To reload Squid, choose one of the following ways:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Using <command>systemctl</command>:
     </para>
<screen>&prompt.sudo;<command>systemctl</command> reload squid</screen>
     <para>
      or
     </para>
<screen>&prompt.sudo;<command>systemctl</command> restart squid</screen>
    </listitem>
    <listitem>
     <para>
      Using &yast;:
     </para>
     <para>
      In the Squid module, click the <guimenu>Save Settings and Restart Squid
      Now</guimenu> button.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    To stop Squid, choose one of the following ways:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Using <command>systemctl</command>:
     </para>
<screen>&prompt.sudo;<command>systemctl</command> stop squid</screen>
    </listitem>
    <listitem>
     <para>
      Using &yast;
     </para>
     <para>
      In the Squid module click the <guimenu>Stop Squid Now</guimenu>. button.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Shutting down Squid can take a while, because Squid waits up to half a
    minute before dropping the connections to the clients and writing its data
    to the disk (see <option>shutdown_lifetime</option> option in
    <filename>/etc/squid/squid.conf</filename>),
   </para>
   <warning>
    <title>Terminating Squid</title>
    <para>
     Terminating Squid with <command>kill</command> or
     <command>killall</command> can damage the cache. To be able to restart
     Squid, damaged caches must be deleted.
    </para>
   </warning>
  </sect2>

  <sect2 xml:id="sec.squid.remove">
   <title>Removing Squid</title>
   <para>
    Removing Squid from the system does not remove the cache hierarchy and log
    files. To remove these, delete the <filename>/var/cache/squid</filename>
    directory manually.
   </para>
  </sect2>

  <sect2 xml:id="sec.squid.start.local_dns">
   <title>Local DNS Server</title>
   <para>
    Setting up a local DNS server makes sense even if it does not manage its
    own domain. It then simply acts as a caching-only name server and is also
    able to resolve DNS requests via the root name servers without requiring
    any special configuration (see <xref linkend="sec.dns.bind"/>). How this
    can be done depends on whether you chose dynamic DNS during the
    configuration of the Internet connection.
   </para>
   <variablelist>
    <varlistentry xml:id="vle.squid.dynamicdns">
     <term>Dynamic DNS</term>
     <listitem>
      <para>
       Normally, with dynamic DNS, the DNS server is set by the provider during
       the establishment of the Internet connection and the local
       <filename>/var/run/netconfig/resolv.conf</filename> file is adjusted
       automatically. This behavior is controlled in the
       <filename>/etc/sysconfig/network/config</filename> file with the
       <constant>NETCONFIG_DNS_POLICY</constant> sysconfig variable. Set
       <constant>NETCONFIG_DNS_POLICY</constant> to <constant>""</constant>
       with the &yast; sysconfig editor.
      </para>
      <para>
       Then, add the local DNS server in the
       <filename>/var/run/netconfig/resolv.conf</filename> file with the IP
       address <systemitem class="ipaddress">127.0.0.1</systemitem> for
       <systemitem class="domainname">localhost</systemitem>. This way, Squid
       can always find the local name server when it starts.
      </para>
      <remark>FIXME ke: check it. Do you have to set more variables?</remark>
      <para>
       To make the provider's name server accessible, specify it in the
       configuration file <filename>/etc/named.conf</filename> under
       <systemitem>forwarders</systemitem> along with its IP address. With
       dynamic DNS, this can be achieved automatically when establishing the
       connection by setting the sysconfig variable
       <constant>NETCONFIG_DNS_POLICY</constant> to <constant>auto</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Static DNS</term>
     <listitem>
      <para>
       With static DNS, no automatic DNS adjustments take place while
       establishing a connection, so there is no need to change any sysconfig
       variables. However, you must specify the local DNS server in the file
       <filename>/var/run/netconfig/resolv.conf</filename> as described in
       <xref linkend="vle.squid.dynamicdns"/>. Additionally, the provider's
       static name server must be specified manually in the
       <filename>/etc/named.conf</filename> file under
       <systemitem>forwarders</systemitem> along with its IP address.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <tip>
    <title>DNS and Firewall</title>
    <para>
     If you have a firewall running, make sure DNS requests can pass it.
    </para>
   </tip>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.squid.yast">
  <title>The &yast; Squid Module</title>

  <para>
   The &yast; Squid module contains the following tabs:
  </para>

  <variablelist>
   <varlistentry>
    <term><guimenu>Start-Up</guimenu></term>
    <listitem>
     <para>
      Specifies how Squid is started and which Firewall port is open on which
      interfaces.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>HTTP Ports</guimenu></term>
    <listitem>
     <para>
      Define all ports where Squid will listen for HTTP requests from clients.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Refresh Patterns</guimenu></term>
    <listitem>
     <para>
      Defines how Squid treats objects in the cache.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Cache Settings</guimenu></term>
    <listitem>
     <para>
      Defines settings in regard to cache memory, maximum and minimum object
      size, and more.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Cache Directory</guimenu></term>
    <listitem>
     <para>
      Defines the top-level directory where Squid stores all cache swap files.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Access Control</guimenu></term>
    <listitem>
     <para>
      Controls the access to the Squid server via ACL groups.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Logging and Timeout</guimenu></term>
    <listitem>
     <para>
      Define paths to access, cache, and cache store log files in addition with
      connection timeouts and client lifetime.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Miscellaneous</guimenu></term>
    <listitem>
     <para>
      Sets language and mail address of administrator.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="sec.squid.configfile">
  <title>The Squid Configuration File</title>

  <para>
   All Squid proxy server settings are made in the
   <filename>/etc/squid/squid.conf</filename> file. To start Squid for the
   first time, no changes are necessary in this file, but external clients are
   initially denied access. The proxy is available for
   <systemitem
   class="domainname">localhost</systemitem>. The default port
   is <option>3128</option>. The preinstalled configuration file
   <filename>/etc/squid/squid.conf</filename> provides detailed information
   about the options and many examples.
  </para>

  <para>
   Many entries are commented and therefore begin with the comment character
   <literal>#</literal>. The relevant specifications can be found at the end of
   the line. The given values usually correlate with the default values, so
   removing the comment signs without changing any of the parameters usually
   has no effect. If possible, leave the commented lines as they are and insert
   the options along with the modified values in the line below. This way, the
   default values may easily be recovered and compared with the changes.
  </para>

  <tip>
   <title>Adapting the Configuration File After an Update</title>
   <para>
    If you have updated from an earlier Squid version, it is recommended to
    edit the new <filename>/etc/squid/squid.conf</filename> and only apply the
    changes made in the previous file.
   </para>
   <para>
    Sometimes, Squid options are added, removed, or modified. Therefore, if you
    try to use the old <filename>squid.conf</filename>, Squid might stop
    working properly.
   </para>
  </tip>

  <sect2 xml:id="sec.squid.configfile.general">
   <title>General Configuration Options</title>
   <para>
    The following is a list of a selection of configuration options for Squid.
    It is not exhaustive. The Squid package contains a full, lightly documented
    list of options in <filename>/etc/squid/squid.conf.documented</filename>.
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>http_port <replaceable>PORT</replaceable></literal></term>
     <listitem>
      <para>
       This is the port on which Squid listens for client requests. The default
       port is <option>3128</option>, but <option>8080</option> is also common.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>cache_peer <replaceable>HOST_NAME</replaceable> <replaceable>TYPE</replaceable> <replaceable>PROXY_PORT</replaceable> <replaceable>ICP_PORT</replaceable></literal></term>
     <listitem>
      <para>
       This option allows creating a network of caches that work together. The
       cache peer is a computer that also hosts a network cache and stands in a
       relationship to your own. The type of relationship is specified as the
       <replaceable>TYPE</replaceable>. The type can either be
       <literal>parent</literal> or <literal>sibling</literal>.
      </para>
      <para>
       As the <replaceable>HOST_NAME</replaceable>, specify the name or IP
       address of the proxy server to use. For
       <replaceable>PROXY_PORT</replaceable>, specify the port number for use
       in a browser (usually <option>8080</option>). Set
       <replaceable>ICP_PORT</replaceable> to <option>7</option> or, if the ICP
       port of the parent is not known and its use is irrelevant to the
       provider, to <option>0</option>.
      </para>
      <para>
       To make Squid behave like a Web browser instead of like a proxy server,
       prohibit the use of the ICP protocol. You can do so by appending the
       options <option>default</option> and <option>no-query</option>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>cache_mem <replaceable>SIZE</replaceable></literal></term>
     <listitem>
      <para>
       This option defines the amount of memory Squid can use for very popular
       replies. The default is <option>8 MB</option>. This does not specify the
       memory usage of Squid and may be exceeded.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>cache_dir <replaceable>STORAGE_TYPE</replaceable> <replaceable>CACHE_DIRECTORY</replaceable> <replaceable>CACHE_SIZE</replaceable> <replaceable>LEVEL_1_DIRECTORIES</replaceable> <replaceable>LEVEL_2_DIRECTORIES</replaceable></literal></term>
     <listitem>
      <para>
       The option <literal>cache_dir</literal> defines the directory for the
       disk cache. In the default configuration on &productname;, Squid does
       not create a disk cache.
      </para>
      <para>
       The placeholder <replaceable>STORAGE_TYPE</replaceable> can be one of
       the following:
      </para>
      <itemizedlist>
       <listitem>
        <para>
         Directory-based storage types: <literal>ufs</literal>,
         <literal>aufs</literal> (the default), <literal>diskd</literal>. All
         three are variations of the storage format <literal>ufs</literal>.
         However, while <literal>ufs</literal> runs as part of the core Squid
         thread, <literal>aufs</literal> runs in a separate thread, and
         <literal>diskd</literal> uses a separate process. This means that the
         latter two types avoid blocking Squid because of disk I/O.
        </para>
       </listitem>
       <listitem>
        <para>
         Database-based storage systems: <literal>rock</literal>. This storage
         format relies on a single database file, in which each object takes up
         one or more memory units of a fixed size (<quote>slots</quote>).
        </para>
       </listitem>
      </itemizedlist>
      <para>
       In the following, only the parameters for storage types based on
       <literal>ufs</literal> will be discussed. <literal>rock</literal> has
       somewhat different parameters.
      </para>
      <para>
       The <replaceable>CACHE_DIRECTORY</replaceable> is the directory for the
       disk cache. By default, that is <filename>/var/cache/squid</filename>.
       <replaceable>CACHE_SIZE</replaceable> is the maximum size of that
       directory in megabytes; by default, this is set to 100&nbsp;MB. Set it
       to between 50% and a maximum of 80% of available disk space.
      </para>
      <para>
       The final two values, <replaceable>LEVEL_1_DIRECTORIES</replaceable> and
       <replaceable>LEVEL_2_DIRECTORIES</replaceable> specify how many
       subdirectories are created in the
       <replaceable>CACHE_DIRECTORY</replaceable>. By default, 16
       subdirectories are created at the first level below
       <replaceable>CACHE_DIRECTORY</replaceable> and 256 within each of these.
       These values should only be increased with caution, because creating too
       many directories can lead to performance problems.
      </para>
      <para>
       If you have several disks that share a cache, specify several
       <option>cache_dir</option> lines.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>cache_access_log <replaceable>LOG_FILE</replaceable></option></term>
     <term><option>cache_log <replaceable>LOG_FILE</replaceable></option></term>
     <term><option>cache_store_log <replaceable>LOG_FILE</replaceable></option></term>
     <listitem>
      <para>
       These three options specify the paths where Squid logs all its actions.
       Normally, nothing needs to be changed here. If Squid is burdened by
       heavy usage, it might make sense to distribute the cache and the log
       files over several disks.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>client_netmask <replaceable>NETMASK</replaceable></option></term>
     <listitem>
      <para>
       This option allows masking IP addresses of clients in the log files by
       applying a subnet mask. For example, to set the last digit of the IP
       address to <literal>0</literal>, specify
       <systemitem class="netmask">255.255.255.0</systemitem>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>ftp_user <replaceable>E-MAIL</replaceable></option></term>
     <listitem>
      <para>
       This option allows setting the password that Squid should use for
       anonymous FTP login. Specify a valid e-mail address here, because some
       FTP servers check these for validity.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>cache_mgr <replaceable>E-MAIL</replaceable></option></term>
     <listitem>
      <para>
       If it unexpectedly crashes, Squid sends a message to this e-mail
       address. The default is <emphasis>webmaster</emphasis>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>logfile_rotate <replaceable>VALUE</replaceable></option></term>
     <listitem>
      <para>
       If you run <command>squid</command>&nbsp;<option>-k rotate</option>,
       <command>squid</command> can rotate log files. The files are numbered in
       this process and, after reaching the specified value, the oldest file is
       overwritten. The default value is <option>10</option> which rotates log
       files with the numbers 0 to 9.
      </para>
      <para>
       However, on &productname;, rotating log files is performed automatically
       using <systemitem class="daemon">logrotate</systemitem> and the
       configuration file <filename>/etc/logrotate.d/squid</filename>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>append_domain <replaceable>DOMAIN</replaceable></option></term>
     <listitem>
      <para>
       Use <emphasis>append_domain</emphasis> to specify which domain to append
       automatically when none is given. Usually, your own domain is specified
       here, so specifying <emphasis>www</emphasis> in the browser accesses
       your own Web server.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>forwarded_for <replaceable>STATE</replaceable></option></term>
     <listitem>
      <para>
       If this option is set to <literal>on</literal>, it adds a line to the
       header similar to this:
      </para>
<screen>X-Forwarded-For: &exampleclientip;</screen>
      <para>
       If you set this option to <literal>off</literal>, Squid removes the IP
       address and the system name of the client from HTTP requests.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>negative_ttl <replaceable>TIME</replaceable></option></term>
     <term><option>negative_dns_ttl <replaceable>TIME</replaceable></option></term>
     <listitem>
      <para>
       If these options are set, Squid will cache some types of failures, such
       as <literal>404</literal> responses. It will then refuse to issue new
       requests, even if the resource would be available then.
      </para>
      <para>
       By default, <option>negative_ttl</option> is set to
       <literal>0</literal>, <option>negative_dns_ttl</option> is set to
       <literal>1 minutes</literal>.
<!-- [sic] the "minutes" unit is part of the setting, thus apparently
       needs the s at the end. -->
       This means that negative responses to Web requests are not cached by
       default, while negative responses to DNS requests are cached for 1
       minute.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>never_direct allow <replaceable>ACL_NAME</replaceable></option></term>
     <listitem>
      <para>
       To prevent Squid from taking requests directly from the Internet, use
       the option <literal>never_direct</literal> to force connection to
       another proxy server. This must have previously been specified in
       <option>cache_peer</option>. If <literal>all</literal> is specified as
       the <replaceable>ACL_NAME</replaceable>, all requests are forwarded
       directly to the <literal>parent</literal>. This can be necessary, for
       example, if you are using a provider that dictates the use of its
       proxies or denies its firewall direct Internet access.
      </para>
      <remark>
       Last sentence sounds as if from another era... Does it still make sense?
       - sknorr, 2016-07-07
      </remark>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec.squid.acl">
   <title>Options for Access Controls</title>
   <para>
    Squid provides a detailed system for controlling the access to the proxy
    server. These Access Control Lists (ACL) are lists with rules that are
    processed sequentially. ACLs must be defined before they can be used. Some
    default ACLs, such as <literal>all</literal> and
    <literal>localhost</literal>, already exist. However, the mere definition
    of an ACL does not mean that it is actually applied. This only happens when
    there is a corresponding <option>http_access</option> rule.
   </para>
   <para>
    The syntax for the option <option>acl</option> is as follows:
   </para>
<screen>acl <replaceable>ACL_NAME</replaceable> <replaceable>TYPE</replaceable> <replaceable>DATA</replaceable></screen>
   <para>
    The placeholders within this syntax stand for the following:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      The name <replaceable>ACL_NAME</replaceable> can be chosen arbitrarily.
     </para>
    </listitem>
    <listitem>
     <para>
      For <replaceable>TYPE</replaceable>, select from a variety of different
      options which can be found in the <literal>ACCESS CONTROLS</literal>
      section in the <filename>/etc/squid/squid.conf</filename> file.
     </para>
    </listitem>
    <listitem>
     <para>
      The specification for <replaceable>DATA</replaceable> depends on the
      individual ACL type, for example host names, IP addresses, or URLs, and
      can also be read from a file.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    To add rules in the &yast; squid module, open the module and click the
    <guimenu>Access Control</guimenu> tab. Click <guimenu>Add</guimenu> under
    the ACL Groups list and enter the name of your rule, the type, and its
    parameters.
   </para>
   <para>
    For more information on types of ACL rules, see the Squid documentation at
    <link xlink:href="http://www.squid-cache.org/Versions/v3/3.5/cfgman/acl.html"/>.
   </para>
   <example xml:id="ex.squid.school">
    <title>Defining ACL Rules</title>
<screen>
acl mysurfers srcdomain .example.com <co xml:id="co.squid.school.surfer"/>
acl teachers src 192.168.1.0/255.255.255.0 <co xml:id="co.squid.school.teacher"/>
acl students src 192.168.7.0-192.168.9.0/255.255.255.0 <co xml:id="co.squid.school.student"/>
acl lunch time MTWHF 12:00-15:00 <co xml:id="co.squid.school.time"/>
</screen>
    <calloutlist>
     <callout arearefs="co.squid.school.surfer">
      <para>
       This ACL defines <literal>mysurfers</literal> as all users coming from
       within <literal>.example.com</literal> (as determined by a reverse
       lookup for the IP).
      </para>
     </callout>
     <callout arearefs="co.squid.school.teacher">
      <para>
       This ACL defines <literal>teachers</literal> as the users of computers
       with IP addresses starting with <literal>192.168.1.</literal>.
      </para>
     </callout>
     <callout arearefs="co.squid.school.student">
      <para>
       This ACL defines <literal>students</literal> as the users of the
       computer with IP addresses starting with <literal>192.168.7.</literal>,
       <literal>192.168.8.</literal>, or <literal>192.168.9.</literal>.
      </para>
     </callout>
     <callout arearefs="co.squid.school.time">
      <para>
       This ACL defines <literal>lunch</literal> as a time on the days Monday
       through Friday between noon and 3 p.m.
      </para>
     </callout>
    </calloutlist>
   </example>
   <variablelist>
    <varlistentry>
     <term>http_access allow <replaceable>ACL_NAME</replaceable></term>
     <listitem>
      <para>
       <option>http_access</option> defines who is allowed to use the proxy
       server and who can access what on the Internet. For this, ACLs must be
       defined. <literal>localhost</literal> and <literal>all</literal> have
       already been defined above for which you can deny or allow access via
       <literal>deny</literal> or <literal>allow</literal>. A list containing
       any number of <option>http_access</option> entries can be created,
       processed from top to bottom. Depending on which occurs first, access is
       allowed or denied to the respective URL. The last entry should always be
       <option>http_access deny all</option>. In the following example,
       <literal>localhost</literal> has free access to everything while all
       other hosts are denied access completely:
      </para>
<screen>
http_access allow localhost
http_access deny all
</screen>
      <para>
       In another example using these rules, the group
       <systemitem class="groupname">teachers</systemitem> always has access to
       the Internet. The group
       <systemitem class="groupname">students</systemitem> only has access
       between Monday and Friday during lunch time:
      </para>
<screen>
http_access deny localhost
http_access allow teachers
http_access allow students lunch time
http_access deny all
</screen>
      <para>
       For readability, within the configuration file
       <filename>/etc/squid/squid.conf</filename>, specify all
       <option>http_access</option> options as a block.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>url_rewrite_program <replaceable>PATH</replaceable></option></term>
     <listitem>
      <para>
       With this option, specify a URL rewriter.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>auth_param basic program <replaceable>PATH</replaceable></option></term>
     <listitem>
      <para>
       If users must be authenticated on the proxy server, set a corresponding
       program, such as <filename>/usr/sbin/pam_auth</filename>. When accessing
       <command>pam_auth</command> for the first time, the user sees a login
       window in which they need to specify a user name and a password. In
       addition, you need an ACL, so only clients with a valid login can use
       the Internet:
      </para>
<screen>
acl password proxy_auth REQUIRED

http_access allow password
http_access deny all
</screen>
      <para>
       In the <option>acl proxy_auth</option> option, using
       <literal>REQUIRED</literal> means that all valid user names are
       accepted. <literal>REQUIRED</literal> can also be replaced with a list
       of permitted user names.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>ident_lookup_access allow <replaceable>ACL_NAME</replaceable></option></term>
     <listitem>
      <para>
       With this option, have an ident request run to find each user's identity
       for all clients defined by an ACL of the type <literal>src</literal>.
       Alternatively, use this for all clients, apply the predefined ACL
       <literal>all</literal> as the <replaceable>ACL_NAME</replaceable>.
      </para>
      <para>
       All clients covered by <option>ident_lookup_access</option> must run an
       ident daemon. On Linux, you can use
       <systemitem class="daemon">pidentd</systemitem> (package
       <package>pidentd</package> ) as the ident daemon. For other operating
       systems, free software is usually available. To ensure that only clients
       with a successful ident lookup are permitted, define a corresponding
       ACL:
      </para>
<screen>
acl identhosts ident REQUIRED

http_access allow identhosts
http_access deny all
</screen>
      <para>
       In the <option>acl identhosts ident</option> option, using
       <literal>REQUIRED</literal> means that all valid user names are
       accepted. <literal>REQUIRED</literal> can also be replaced with a list
       of permitted user names.
      </para>
      <para>
       Using <literal>ident</literal> can slow down access time, because ident
       lookups are repeated for each request.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="sec.squid.proxyconfigtrans">
  <title>Configuring a Transparent Proxy</title>

  <para>
   A transparent proxy intercepts and answers the requests of the Web browser,
   so the Web browser receives the requested pages without knowing where they
   are coming from. As the name indicates, the entire process is transparent to
   the user.
  </para>

  <para>
   The usual way of working with proxy servers is as follows: the Web browser
   sends requests to a certain port of the proxy server and the proxy always
   provides these required objects, regardless of whether they are in its
   cache. However, in some cases the transparent proxy mode of Squid makes
   sense:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     If, for security reasons, it is recommended that all clients use a proxy
     server to surf the Internet.
    </para>
   </listitem>
   <listitem>
    <para>
     If all clients must use a proxy server, regardless of whether they are
     aware of it.
    </para>
   </listitem>
   <listitem>
    <para>
     If the proxy server in a network is moved, but the existing clients need
     to retain their old configuration.
    </para>
   </listitem>
  </itemizedlist>

  <procedure xml:id="pro.squid.transparent.cli">
   <title>Squid as a Transparent Proxy Server (Command Line)</title>
   <step>
    <para>
     In <filename>/etc/squid/squid.conf</filename>, on the line of the option
     <option>http_port</option> add the parameter
     <literal>transparent</literal>. You should then have 2 lines:
    </para>
<screen>http_port 3128
http_port 3128 transparent</screen>
   </step>
   <step>
    <para>
     Restart Squid:
    </para>
<screen>&prompt.sudo;<command>systemctl restart squid</command></screen>
   </step>
   <step xml:id="st.squid.transparent.cli.fwrules">
    <para>
     Set up the firewall to redirect HTTP traffic to the port given in
     <option>http_proxy</option>. In the example above it is port 3128. Then
     reload the firewall configuration. This assumes that the zone
     <literal>internal</literal> is assigned to your LAN interface.
    </para>
<screen>&prompt.sudo;<command>firewall-cmd</command> --permanent --zone=internal \
    --add-forward-port=port=80:proto=tcp:toport=3128:toaddr=<replaceable>LAN_IP</replaceable>
&prompt.sudo;<command>firewall-cmd</command> --permanent --zone=internal --add-port=3128/tcp
&prompt.sudo;<command>firewall-cmd</command> --reload</screen>
    <para>
     Replace <replaceable>LAN_IP</replaceable> with the IP address of your LAN
     interface or the interface Squid is listening on.
    </para>
   </step>
   <step>
    <para>
     To verify that everything is working properly, check the Squid log files
     in <filename>/var/log/squid/access.log</filename>.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.squid.cachemgr">
  <title>Using the Squid Cache Manager CGI Interface (<systemitem class="resource">cachemgr.cgi</systemitem>)</title>

  <para>
   The Squid cache manager CGI interface (<filename>cachemgr.cgi</filename>) is
   a CGI utility for displaying statistics about the memory usage of a running
   Squid process. It is also a convenient way to manage the cache and view
   statistics without logging the server.
  </para>

  <procedure xml:id="pro.squid.setup.cachemgr">
   <title>Setting up <systemitem class="resource">cachemgr.cgi</systemitem></title>
   <step>
    <para>
     Make sure the Apache Web server is running on your system. Configure
     Apache as described in <xref linkend="cha.apache2"/>. In particular, see
     <xref linkend="sec.apache2.cgi"/>. To check whether Apache is already
     running, use:
    </para>
<screen>&prompt.sudo;<command>systemctl status apache2</command></screen>
    <para>
     If <literal>inactive</literal> is shown, you can start Apache with the
     &productname; default settings:
    </para>
<screen>&prompt.sudo;<command>systemctl start apache2</command></screen>
   </step>
   <step>
    <para>
     Now enable <systemitem class="resource">cachemgr.cgi</systemitem> in
     Apache. To do so, create a configuration file for a
     <literal>ScriptAlias</literal>.
    </para>
    <para>
     Create the file in the directory <filename>/etc/apache2/conf.d</filename>
     and name it <filename>cachemgr.conf</filename>. In it, add the following:
    </para>
<screen>ScriptAlias /squid/cgi-bin/ /usr/lib64/squid/

&lt;Directory "/usr/lib64/squid/"&gt;
Options +ExecCGI
AddHandler cgi-script .cgi
Require host <replaceable>HOST_NAME</replaceable>
&lt;/Directory&gt;
</screen>
    <para>
     Replace <replaceable>HOST_NAME</replaceable> with the host name of the
     computer you want to access
     <systemitem class="resource">cachemgr.cgi</systemitem> from. This allows
     only your computer to access
     <systemitem class="resource">cachemgr.cgi</systemitem>. To allow access
     from anywhere, use <literal>Require all granted</literal> instead.
    </para>
   </step>
   <step>
    <itemizedlist>
     <listitem>
      <para>
       If Squid and your Apache Web server run on the same computer, there
       should be no changes that need to be made to
       <filename>/etc/squid/squid.conf</filename>. However, verify that
       <filename>/etc/squid/squid.conf</filename> contains the following lines:
      </para>
<screen>
http_access allow manager localhost
http_access deny manager
  </screen>
      <para>
       These lines allow you to access the manager interface from your own
       computer (<literal>localhost</literal>) but not from elsewhere.
      </para>
     </listitem>
     <listitem>
      <para>
       If Squid and your Apache Web server run on different computers, you need
       to add extra rules to allow access from the CGI script to Squid. Define
       an ACL for your server (replace <replaceable>WEB_SERVER_IP</replaceable>
       with the IP address of your Web server):
      </para>
<screen>
acl webserver src <replaceable>WEB_SERVER_IP</replaceable>/255.255.255.255
</screen>
      <para>
       Make sure the following rules are in the configuration file. Compared to
       the default configuration, only the rule in the middle is new. However,
       the sequence is important.
      </para>
<screen>
http_access allow manager localhost
http_access allow manager webserver
http_access deny manager
</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step performance="optional">
    <para>
     Optionally, you can configure one or more passwords for
     <systemitem class="resource">cachemgr.cgi</systemitem>. This also allows
     access to more actions such as closing the cache remotely or viewing more
     information about the cache. For this, configure the options
     <option>cache_mgr</option> and <option>cachemgr_passwd</option> with one
     or more password for the manager and a list of allowed actions.
    </para>
    <para>
     For example, to explicitly enable viewing the index page, the menu,
     60-minute average of counters without authentication, to enable toggling
     offline mode using the password <literal>secretpassword</literal>, and to
     completely disable everything else, use the following configuration:
    </para>
<screen>
cache_mgr user
cachemgr_passwd none index menu 60min
cachemgr_passwd secretpassword offline_toggle
cachemgr_passwd disable all
</screen>
    <para>
     <option>cache_mgr</option> defines a user name. <option>cache_mgr</option>
     defines which actions are allowed using which password.
    </para>
    <para>
     The keywords <literal>none</literal> and <literal>disable</literal> are
     special: <literal>none</literal> removes the need for a password,
     <literal>disable</literal> disables functionality outright.
    </para>
    <para>
     The full list of actions can be best seen after logging in to
     <systemitem class="resource">cachemgr.cgi</systemitem>. To find out how
     the operation needs to be referenced in the configuration file, see the
     string after <literal>&amp;operation=</literal> in the URL of the action
     page. <literal>all</literal> is a special keyword meaning all actions.
    </para>
   </step>
   <step>
    <para>
     Reload Squid and Apache after the configuration file changes:
    </para>
<screen>&prompt.sudo;<command>systemctl reload squid</command></screen>
   </step>
   <step>
    <para>
     To view the statistics, go to the
     <systemitem class="resource">cachemgr.cgi</systemitem> page that you set
     up before. For example, it could be
     <literal>http://webserver.example.org/squid/cgi-bin/cachemgr.cgi</literal>.
    </para>
    <para>
     Choose the right server, and, if set, specify user name and password. Then
     click <guimenu>Continue</guimenu> and browse through the different
     statistics.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.squid.calamaris">
  <title>Cache Report Generation with Calamaris</title>

  <para>
   Calamaris is a Perl script used to generate reports of cache activity in
   ASCII or HTML format. It works with native Squid access log files. The
   Calamaris home page is located at
   <link xlink:href="http://cord.de/calamaris-english"/>. This tool does not
   belong to the &productname; default installation scope&mdash;to use it,
   install the <systemitem>calamaris</systemitem> package.
  </para>

  <para>
   Log in as <systemitem class="username">root</systemitem>, then enter:
  </para>

<screen>&prompt.root;cat access1.log [access2.log access3.log] | calamaris <replaceable>OPTIONS</replaceable> &gt; reportfile</screen>

  <para>
   When using more than one log file, make sure they are chronologically
   ordered, with older files listed first. This can be achieved by either
   listing the files one after the other as in the example above, or by using
   <filename>access{1..3}.log</filename>.
  </para>

  <para>
   <command>calamaris</command> takes the following options:
  </para>

  <variablelist>
   <varlistentry>
    <term><option>-a</option></term>
    <listitem>
     <para>
      output all available reports
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-w</option></term>
    <listitem>
     <para>
      output as HTML report
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-l</option></term>
    <listitem>
     <para>
      include a message or logo in report header
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   More information about the various options can be found in the program's
   manual page with <command>man</command>&nbsp;<option>calamaris</option>.
  </para>

  <para>
   A typical example is:
  </para>

<screen>
&prompt.root;cat access.log.{10..1} access.log | calamaris -a -w \
&gt; /usr/local/httpd/htdocs/Squid/squidreport.html
</screen>

  <para>
   This puts the report in the directory of the Web server. Apache is required
   to view the reports.
  </para>
 </sect1>
 <sect1 xml:id="sec.squid.moreinfo">
  <title>For More Information</title>

  <para>
   Visit the home page of Squid at
   <link xlink:href="http://www.squid-cache.org/"/>. Here, find the
   <quote>Squid User Guide</quote> and a very extensive collection of FAQs on
   Squid.
  </para>

  <para>
   In addition, mailing lists are available for Squid at
   <link xlink:href="http://www.squid-cache.org/Support/mailing-lists.html"/>.
  </para>
 </sect1>
</chapter>
