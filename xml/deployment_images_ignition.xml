<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter version="5.0" xml:id="cha-images-ignition"
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Configuring with Ignition</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker></dm:bugtracker>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
  <abstract>
   <para>
    This chapter provides details about the Ignition provisioning tool that is
    used to set up a machine. Here you'll learn how to provide required
    configuration files used for the machine definition.
   </para>
  </abstract>
 </info>
 <sect1 xml:id="sec-about-ignition">
  <title>About Ignition</title>

  <para>
   Ignition is a provisioning tool that enables you to configure a system
   according to your specification on the first boot. When the system is booted
   for the first time, Ignition is loaded as part of an
   <filename>initramfs</filename> and searches for a configuration file within
   a specific directory (on a USB flash disk or you can provide a URL). All
   changes are performed before kernel switches from the temporal file system
   to the real root file system (before the <literal>switch_root</literal>
   command is issued).
  </para>

  <para>
   Ignition uses a configuration file in the JSON format. The file is called
   <filename>config.ign</filename>. For the purpose of better human readability
   you can create a YAML file and convert this file to JSON. For details refer
   to <xref linkend="sec-converting-config"/>.
  </para>
 </sect1>
 <sect1 xml:id="sec-ignition-configuration">
  <title><literal>config.ign</literal></title>

  <para>
   When installing on a bare metal, the configuration file
   <filename>config.ign</filename> must reside in the
   <filename>ignition</filename> sub directory on the configuration media
   labeled <literal>ignition</literal>. The directory structure must look as
   follows:
  </para>

<screen>
&lt;root directory&gt;
└── ignition
    └── config.ign

 </screen>

  <para>
   In case you intend to configure a QEMU/KVM virtual machine, provide the path
   to the <filename>config.ign</filename> as an attribute of the
   <command>qemu</command> command. For example:
  </para>

<screen>
-fw_cfg name=opt/com.coreos/config,file=<replaceable>PATH_TO_config.ign</replaceable>
 </screen>

  <para>
   The <filename>config.ign</filename> contains various data
   types&mdash;objects, strings, integers, booleans and lists of objects. For a
   complete specification refer to
   <link xlink:href="https://coreos.github.io/ignition/configuration-v3_3/">Ignition
   specification v3.3.0</link>.
  </para>

  <para>
   The <literal>version</literal> attribute is mandatory and in case of
   &slema;, its value must be set either to <literal>3.3.0</literal> or to any
   lower version. Otherwise Ignition will fail.
  </para>

  <para>
   If you want to log in to your system as root, you must at least include a
   password for &rootuser;. Though it is recommended to establish access via
   SSH keys. In case you want to configure a password, make sure to use a
   secure one. In case you use a randomly generated password, use at least 10
   characters. If you create your password manually, use even more than 10
   characters and combine uppercase and lowercase letters, and numbers.
  </para>

  <sect2 xml:id="sec-converting-config">
   <title>Converting YAML <literal>fcc</literal> file to JSON <literal>ign</literal></title>
   <para>
    To make the Ignition configuration more human-readable, you can use a two
    phase configuration. At first you prepare your configuration in YAML as a
    <literal>fcc</literal> file and then you transpile these configuration to
    JSON. The transpilation can be done by the <literal>butane</literal> tool.
   </para>
   <para>
    During the transpilation <literal>butane</literal> also verifies syntax of
    the YAML file to catch potential errors in the structure. For the latest
    version of <literal>butane</literal> tool add a repository:
   </para>
<screen>
&prompt.sudo; zypper ar -f \
  https://download.opensuse.org/repositories/devel:/kubic:/ignition/<replaceable>DISTRIBUTION</replaceable>/ \
  devel_kubic_ignition
 </screen>
   <para>
    where <replaceable>DISTRIBUTION</replaceable> is one of the following
    (depending on your distribution):
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <literal>openSUSE_Tumbleweed</literal>
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>openSUSE_Leap_$release_number</literal>
     </para>
    </listitem>
    <listitem>
     <para>
      <literal>15.3</literal>
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Now you can install the <literal>butane</literal> tool:
   </para>
<screen>
&prompt.sudo; zypper in butane
 </screen>
   <para>
    Now you can invoke <literal>butane</literal> by running:
   </para>
<screen>
&prompt.user; butane -p -o config.ign config.fcc
 </screen>
   <para>
    where:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <filename>config.fcc</filename> is the path to the YAML configuration
      file
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>config.ign</filename> is the path to the output JSON
      configuration file
     </para>
    </listitem>
    <listitem>
     <para>
      The <option>-p</option> command option adds lines breaks to the output
      file and thus makes it more readable.
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="sec-ignition-examples">
   <title>YAML configuration examples</title>
   <para>
    This section will provide you with some common examples of the Ignition
    configuration in the YAML format.
   </para>
   <note>
    <title>The <literal>version</literal> attribute is mandatory</title>
    <para>
     Each <filename>config.fcc</filename> must include version&mdash;1.4.0 or
     lower that is then converted to the corresponding Ignition specification.
    </para>
   </note>
   <sect3 xml:id="sec-ignition-storage">
    <title>Storage configuration</title>
    <para>
     The <literal>storage</literal> attribute is used to configure partitions,
     RAID, define file systems, create files, etc. To define partitions, use
     the <literal>disks</literal> attribute. The <literal>filesystem</literal>
     attribute is used to format partitions and define mount points of
     particular partitions. The <literal>files</literal> attribute can be used
     to create files in the file system. Each of the mentioned attributes is
     described in following sections.
    </para>
    <sect4 xml:id="sec-storage-disks">
     <title>The <literal>disks</literal> attribute</title>
     <para>
      The <literal>disks</literal> attributes is a list of devices that enables
      you to define partitions on these devices. The <literal>disks</literal>
      attribute must contain at least one <literal>device</literal>, other
      attributes are optional. The following example will use a single virtual
      device and divide the disk into four partitions:
     </para>
<screen>
variant: fcos
version: 1.0.0
storage:
  disks:
    - device:	"/dev/vda"
      wipeTable: true
      partitions: 
      	- label: root
      	  number: 1
      	  typeGuid: 4F68BCE3-E8CD-4DB1-96E7-FBCAF984B709
      	- label: boot
      	  number: 2
      	  typeGuid: BC13C2FF-59E6-4262-A352-B275FD6F7172
        - label: swap
      	  number: 3
      	  typeGuid: 0657FD6D-A4AB-43C4-84E5-0933C84B4F4F
      	- label: home
      	  number: 4
      	  typeGuid: 933AC7E1-2EB4-4F13-B844-0E14E2AEF915
 </screen>
    </sect4>
    <sect4 xml:id="sec-storage-raid">
     <title>The <literal>raid</literal> attribute</title>
     <para>
      The <literal>raid</literal> is a list of RAID arrays. The following
      attributes of <literal>raid</literal> are mandatory:
     </para>
     <variablelist>
      <varlistentry>
       <term>level</term>
       <listitem>
        <para>
         a level of the particular RAID array (linear, raid0, raid1, raid2,
         raid3, raid4, raid5, raid6)
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>devices</term>
       <listitem>
        <para>
         a list of devices in the array referenced by their absolute paths
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>name</term>
       <listitem>
        <para>
         a name that will be used for the md device
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
<screen>
variant: fcos
version: 1.0.0
storage:
	- raid: data
	  name: system
	  level: raid1
	  devices: "/dev/sda", "/dev/sdb"
	  	
 </screen>
    </sect4>
    <sect4 xml:id="sec-storage-filesystem">
     <title>The <literal>filesystem</literal> attribute</title>
     <para>
      <literal>filesystem</literal> must contain the following attributes:
     </para>
     <variablelist>
      <varlistentry>
       <term>device</term>
       <listitem>
        <para>
         the absolute path to the device, typically <literal>/dev/sda</literal>
         in case of physical disk
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>format</term>
       <listitem>
        <para>
         the file system format (btrfs, ext4, xfs, vfat or swap)
        </para>
        <note>
         <para>
          In case of &slema;, the <literal>root</literal> file system must be
          formatted to btrfs.
         </para>
        </note>
       </listitem>
      </varlistentry>
     </variablelist>
     <para>
      The following example demonstrates using the
      <literal>filesystem</literal> attribute. The <filename>/opt</filename>
      directory will be mounted to the <literal>/dev/sda1</literal> partition,
      which is formatted to btrfs. The partition table will not be erased.
     </para>
<screen>
variant: fcos
version: 1.0.0
storage:
  filesystems:
    - path: /opt
      device: "/dev/sda1"
      format: btrfs
      wipe_filesystem: false
 </screen>
    </sect4>
    <sect4 xml:id="sec-storage-files">
     <title>The <literal>files</literal> attribute</title>
     <para>
      You can use the <literal>files</literal> attribute to create any files on
      your machine. Bear in mind that if you want to create files outside the
      <xref linkend="sec-default-partitioning" xrefstyle="template:default mounted directories"/>,
      you need to define the directories by using the
      <literal>filesystem</literal> attribute.
     </para>
     <para>
      In the following example a host name is created by using the
      <literal>files</literal> attribute. The file
      <filename>/etc/hostname</filename> will be created with the
      <emphasis>slemicro-1</emphasis> host name:
     </para>
<screen>
variant: fcos
version: 1.0.0
storage:
  files:
    - path: /etc/hostname
      mode: 0644
      overwrite: true
      contents:
        inline: "slemicro-1"
 </screen>
    </sect4>
    <sect4 xml:id="sec-storage-directories">
     <title>The <literal>directories</literal> attribute</title>
     <para>
      The <literal>directories</literal> attribute is a list of directories
      that will be created in the file system. The
      <literal>directories</literal> attribute must contain at least one
      <literal>path</literal> attribute.
     </para>
<screen>
variant: fcos
version: 1.0.0
storage:
  directories:
  	- path: /home/tux/
  	  user: 
  	   - name: tux  	
 </screen>
    </sect4>
   </sect3>
   <sect3 xml:id="sec-ignition-users">
    <title>Users administration</title>
    <para>
     For adding users the <literal>passwd</literal> attribute is used. If you
     intend to log in to your system, create &rootuser; and set the
     &rootuser;'s password and/or add the SSH key to the Ignition
     configuration. You need to hash the &rootuser; password, by using for
     example the <command>openssl</command> command:
    </para>
<screen>
 openssl passwd -6
 </screen>
    <para>
     The command creates a hash of the password you chose. Use this hash as the
     value of the <literal>password_hash</literal> attribute.
    </para>
<screen>
 variant: fcos
version: 1.1.0
 passwd:
  users:
   - name: root
     password_hash: "$6$PfKm6Fv5WbqOvZ0C$g4kByYM.D2B5GCsgluuqDNL87oeXiHqctr6INNNmF75WPGgkLn9O9uVx4iEe3UdbbhaHbTJ1vpZymKWuDIrWI1"
     ssh_authorized_keys:
       - ssh-rsa long...key user@host
 </screen>
    <para>
     The <literal>users</literal> attribute must contain at least one
     <literal>name</literal> attribute. <literal>ssh_authorized_keys</literal>
     is a list of ssh keys for the user.
    </para>
   </sect3>
   <sect3 xml:id="sec-ignition-systemd">
    <title>Enabling <literal>systemd</literal> services</title>
    <para>
     You can enable &systemd; services by specifying them in the
     <literal>systemd</literal> attribute.
    </para>
<screen>
variant: fcos
version: 1.0.0
	systemd
	 units:
	  - name: sshd.service
      	    enabled: true
 </screen>
    <para>
     The <literal>name</literal> must be the exact name of a service to be
     enabled (including the suffix).
    </para>
   </sect3>
  </sect2>
 </sect1>
</chapter>
