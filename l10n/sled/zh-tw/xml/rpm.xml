<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="rpm.xml" version="5.0" xml:id="sec-rpm"> <title>RPM - 套件管理員</title>

 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker/>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <para>
  RPM (RPM 套件管理員) 用於管理軟體套件。主要指令為 <command>rpm</command> 及 <command>rpmbuild</command>。使用者、系統管理員和套件建立者可以在功能強大的 RPM 資料庫中查詢已安裝軟體的詳細資訊。
 </para>

 <para>
  <command>rpm</command> 有五種模式：安裝、解除安裝 (或更新) 軟體套件、重建 RPM 資料庫、查詢 RPM 庫或個別的 RPM 歸檔、對套件執行完整性檢查，以及簽署套件。<command>rpmbuild</command> 可用於建立初始來源的可安裝套件。
 </para>

 <para>
  可安裝的 RPM 歸檔以特殊二進位格式包裝封裝。這些歸檔由要安裝的程式檔和 <command>rpm</command> 在安裝期間用來設定軟體套件或儲存在 RPM 資料庫中供記錄之用的特定中繼資訊所組成。RPM 歸檔的副檔名通常為 <filename>.rpm</filename>。
 </para>

 <tip>
  <title>軟體開發套件</title>
  <para>
   對於數個套件，軟體開發所需的元件 (程式庫、標頭、Include 檔案等) 已分別封裝在不同的套件中。只有在您想要自行編譯軟體 (例如，最新的 GNOME 套件) 時，才需要這些開發套件。根據副檔名 <literal>-devel</literal> 即可識別出這些套件，例如 <systemitem class="resource">alsa-devel</systemitem> 和 <systemitem class="resource">gimp-devel</systemitem> 套件。
  </para>
 </tip>

 <sect2 xml:id="sec-rpm-package-auth">
  <title>驗證套件真實性</title>
  <para>
   RPM 套件具有 GPG 簽名。若要驗證 RPM 套件的簽名，請使用 <command>rpm --checksig </command>
   <replaceable>PACKAGE</replaceable>-1.2.3.rpm 指令來確定該套件是來自 SUSE 還是另一個可信機構。特別建議在從網際網路更新套件時使用此指令。
  </para>

  <para os="sles;sled">
   修復作業系統中的問題時，您可能需要將問題暫時修復 (PTF) 安裝到線上系統中。SUSE 提供的套件已使用特殊 PTF 金鑰簽署。但是，與 SUSE Linux Enterprise 11 相比，在 SUSE Linux Enterprise 12 系統上，預設不會輸入此金鑰。若要手動輸入該金鑰，請使用以下指令：
  </para>
  <screen os="sles;sled"><prompt>tux &gt; </prompt><command>sudo</command> rpm --import \
/usr/share/doc/packages/suse-build-key/suse_ptf_key.asc</screen>
  <para os="sles;sled">
   輸入該金鑰後，您可以在系統上安裝 PTF 套件。
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-packages-manage">
  <title>管理套件：安裝、更新和解除安裝</title>
  <para>
   一般而言，安裝 RPM 歸檔很簡單，只需執行：<command>rpm -i</command> <replaceable>PACKAGE</replaceable>.rpm。使用此指令可安裝套件，但是必須滿足其相依性條件，而且不能與其他套件衝突。如果 <command>rpm</command> 要求要安裝的套件必須符合相依性要求，會顯示錯誤訊息。RPM 資料庫會在背景確定未產生衝突，亦即特定檔案僅可屬於一個套件。藉由選擇不同選項，您可以強迫 <command>rpm</command> 忽略這些預設，但只有進階使用者才可以這樣做。否則，會危及系統完整性，還可能危害更新系統的能力。
  </para>
  <para>
   選項 <option>-U</option> 或 <option>--upgrade</option> 以及 <option>-F</option> 或 <option>--freshen</option> 可用於更新套件 (例如，<command>rpm -F </command>
   <replaceable>PACKAGE</replaceable>.rpm)。此指令會移除舊版的檔案，並立刻安裝新檔案。兩個版本之間的差別是：<option>-U</option> 會安裝先前系統中沒有的套件，而 <option>-F</option> 僅更新先前安裝的套件。在更新時，<command>rpm</command> 會使用下列策略小心地更新組態檔：
  </para>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     如果系統管理員未變更組態檔，<command>rpm</command> 會安裝新版本的相應檔案。系統管理員不需要做任何動作。
    </para>
   </listitem>
   <listitem>
    <para>
     如果更新前系統管理員曾變更組態檔案，則 <command>rpm</command> 會以副檔名 <filename>.rpmorig</filename> 或 <filename>.rpmsave</filename> (備份檔案) 儲存變更的檔案，並安裝新套件中的版本。僅當原先安裝的檔案和較新的版本不同時，才執行此操作。在這種情況下，請比較備份檔案 (<filename>.rpmorig</filename> 或 <filename>.rpmsave</filename>) 與新安裝的檔案，然後再對新檔案做一次變更。之後，請刪除所有 <filename>.rpmorig</filename> 和 <filename>.rpmsave</filename> 檔案，以免日後的更新出現問題。
    </para>
   </listitem>
   <listitem>
    <para>
     如果組態檔已存在，<emphasis>且</emphasis>如果在 <filename>.spec</filename> 檔案中指定了 <option>noreplace</option> 標籤，便會出現 <filename>.rpmnew</filename> 檔案。
    </para>
   </listitem>
  </itemizedlist>
  <para>
   在更新之後，應該在比較完 <filename>.rpmsave</filename> 和 <filename>.rpmnew</filename> 之後將它們移除，才不會妨礙未來的更新。如果 RPM 資料庫之前無法辨識檔案，會指定 <filename>.rpmorig</filename> 副檔名。
  </para>
  <para>
   否則，會使用 <filename>.rpmsave</filename>。換言之，<filename>.rpmorig</filename> 是在將外來格式更新為 RPM 後產生的。<filename>.rpmsave</filename> 是在將舊版 RPM 更新為新版 RPM 後產生的。<filename>.rpmnew</filename> 不會透露任何關於系統管理員是否曾對組態檔案做過任何變更的資訊。可在 <filename>/var/adm/rpmconfigcheck</filename> 找到這些檔案的清單。部分組態檔 (如 <filename>/etc/httpd/httpd.conf</filename>) 不會覆寫以允許後續操作。
  </para>
  <para>
   <option>-U</option> 參數的作用並<emphasis>不</emphasis>完全等同於使用 <option>-e</option> 選項進行解除安裝，以及使用 <option>-i</option> 選項進行安裝，它還有其他作用。如果可能，請使用 <option>-U</option>。
  </para>
  <para>
   若要移除套件，請輸入 <command>rpm -e</command>
   <replaceable>PACKAGE</replaceable>。此指令只在不存在未解決的相依性問題時才會刪除套件。只要其他應用程式還需要它，理論上無法刪除 Tcl/Tk。即使是這種情況下，RPM 還是可從資料庫呼叫以得到協助。如果由於某種原因無法進行這樣的刪除操作 (即使<emphasis>不</emphasis>存在其他相依性問題)，或許可以使用選項 <option>--rebuilddb</option> 來重建 RPM 資料庫。
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-delta">
  <title>增量 RPM 套件</title>
  <para>
   增量 RPM 套件包含舊版與新版 RPM 套件之間的差異。將增量 RPM 套用到舊版 RPM 上會產生一個全新的 RPM。但是您不需要取得舊版的 RPM，因為增量 RPM 也可以和安裝的 RPM 配合使用。增量 RPM 套件的大小比修補程式 RPM 還小，這一特點有利於透過網際網路傳送更新套件。缺點是使用增量 RPM 的更新作業會比一般或修補程式 RPM 消耗更多的 CPU 週期。
  </para>
  <para>
   <command>makedeltarpm</command> 和 <command>applydelta</command> 二進位檔案屬於增量 RPM 套裝軟體 (<systemitem>deltarpm</systemitem> 套件) 的一部分，可協助您建立並套用增量 RPM 套件。您可以使用下列指令建立名稱為 <filename>new.delta.rpm</filename> 的增量 RPM。下列指令假設 <filename>old.rpm</filename> 和 <filename>new.rpm</filename> 都已存在：
  </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> makedeltarpm old.rpm new.rpm new.delta.rpm</screen>
  <para>
   如果已經安裝舊套件，使用 <command>applydeltarpm</command> 即可從檔案系統重新建構新 RPM：
  </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> applydeltarpm new.delta.rpm new.rpm</screen>
  <para>
   若不要存取檔案系統，而要從舊 RPM 產生新 RPM，請使用 <option>-r</option> 選項：
  </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> applydeltarpm -r old.rpm new.delta.rpm new.rpm</screen>
  <para>
   如需技術詳細資訊，請參閱 <filename>/usr/share/doc/packages/deltarpm/README</filename>。
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-query">
  <title> RPM 查詢 </title>
  <para>
   <option>rpm</option> 指令在使用 <command>-q</command> 選項時會啟動查詢，以便檢查 RPM 歸檔 (藉由新增選項 <option>-p</option>)，並查詢所安裝套件的 RPM 資料庫。有多個切換參數可用於指定所需的資訊類型。請參閱<xref linkend="tab-rpm-query"/>。
  </para>
  <table xml:id="tab-rpm-query">
   <title>基本 RPM 查詢選項</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry>
       <para>
        <option>-i</option>
       </para>
      </entry>
      <entry>
       <para>
        套件資訊
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-l</option>
       </para>
      </entry>
      <entry>
       <para>
        檔案清單
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-f FILE</option>
       </para>
      </entry>
      <entry>
       <para>
        查詢包含 <replaceable>FILE</replaceable> 檔案的套件 (完整的路徑必須以 <replaceable>FILE</replaceable> 指定)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-s</option>
       </para>
      </entry>
      <entry>
       <para>
        含有狀態資訊的檔案清單 (隱含 <option>-l</option>)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-d</option>
       </para>
      </entry>
      <entry>
       <para>
        只列出文件檔案 (隱含 <literal>-l</literal>)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-c</option>
       </para>
      </entry>
      <entry>
       <para>
        只列出組態檔案 (隱含 <option>-l</option>)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--dump</option>
       </para>
      </entry>
      <entry>
       <para>
        含有完整詳細資訊的檔案清單 (與 <option>-l</option>、<option>-c</option> 或 <option>-d</option> 配合使用)
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--provides</option>
       </para>
      </entry>
      <entry>
       <para>
        列出另一個套件可以使用 <option>--requires</option> 要求的套件功能
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--requires</option>、<option>-R</option>
       </para>
      </entry>
      <entry>
       <para>
        套件所需的功能
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>--scripts</option>
       </para>
      </entry>
      <entry>
       <para>
        安裝程序檔 (預先安裝、後續安裝、解除安裝)
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   例如，<command>rpm -q -i wget</command> 指令可顯示如 <xref linkend="aus-update-rpm-i"/> 中所示的資訊。
  </para>
  <example xml:id="aus-update-rpm-i">
   <title><command>rpm -q -i wget</command></title>

<screen os="sles;sled"><?dbsuse-fo font-size="0.70em"?>


Name        : wget
Version     : 1.14
Release     : 17.1
Architecture: x86_64
Install Date: Mon 30 Jan 2017 14:01:29 CET
Group       : Productivity/Networking/Web/Utilities
Size        : 2046483
License     : GPL-3.0+
Signature   : RSA/SHA256, Thu 08 Dec 2016 07:48:44 CET, Key ID 70af9e8139db7c82
Source RPM  : wget-1.14-17.1.src.rpm
Build Date  : Thu 08 Dec 2016 07:48:34 CET
Build Host  : sheep09
Relocations : (not relocatable)
Packager    : https://www.suse.com/
Vendor      : SUSE LLC &lt;https://www.suse.com/&gt;
URL         : http://www.gnu.org/software/wget/
Summary     : A Tool for Mirroring FTP and HTTP Servers
Description :
Wget enables you to retrieve WWW documents or FTP files from a server.
This can be done in script files or via the command line.
Distribution: SUSE Linux Enterprise 15
</screen>
  </example>
  <para>
   只有在您指令完整檔案名稱及完整路徑時，選項 <option>-f</option> 才會有作用。盡可能提供很多檔案名稱。例如：
  </para>
<screen><prompt>tux &gt; </prompt>rpm -q -f /bin/rpm /usr/bin/wget
rpm-4.14.1-lp151.13.10.x86_64
wget-1.19.5-lp151.4.1.x86_64
</screen>
  <para>
   如果只知道檔案名稱的一部分，可使用<xref linkend="dat-rpm-search"/>中所示的外圍程序檔。執行時，可將部份檔案名稱當作參數傳給程序檔。
  </para>
  <example xml:id="dat-rpm-search">
   <title>搜尋套件的程序檔</title>
<screen>#! /bin/sh
for i in $(rpm -q -a -l | grep $1); do
    echo "\"$i\" is in package:"
    rpm -q -f $i
    echo ""
done</screen>
  </example>
  <para>
   <command>rpm -q --changelog</command>
   <replaceable>PACKAGE</replaceable> 指令會顯示有關特定套件的詳細變更資訊清單，並依日期排序。
  </para>
  <para>
   藉由安裝的 RPM 資料庫，可執行驗證檢查。這些檢查可以使用 <option>-V</option> 或 <option>--verify</option> 來啟動。將 <command>rpm</command> 與此選項配合使用，將顯示套件中自安裝後已變更的所有檔案。<command>rpm</command> 使用八位字元符號來提供有關以下變更的提示：
  </para>
  <table xml:id="tab-rpm-verify">
   <title>RPM 驗證選項</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry>
       <para>
        <option>5</option>
       </para>
      </entry>
      <entry>
       <para>
        MD5 檢查總數
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>S</option>
       </para>
      </entry>
      <entry>
       <para>
        檔案大小
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>L</option>
       </para>
      </entry>
      <entry>
       <para>
        符號連結
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>T</option>
       </para>
      </entry>
      <entry>
       <para>
        修改時間
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>D</option>
       </para>
      </entry>
      <entry>
       <para>
        主要和次要的裝置編號
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>U</option>
       </para>
      </entry>
      <entry>
       <para>
        擁有者
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>G</option>
       </para>
      </entry>
      <entry>
       <para>
        群組
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>M</option>
       </para>
      </entry>
      <entry>
       <para>
        模式 (權限和檔案類型)
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   如果是組態檔，會印出字母 <option>c</option>。例如，若 <filename>/etc/wgetrc</filename> (<systemitem class="resource">wget</systemitem> 套件) 有變更：
  </para>
<screen><prompt>tux &gt; </prompt>rpm -V wget
S.5....T c /etc/wgetrc</screen>
  <para>
   RPM 資料庫的檔案放在 <filename>/var/lib/rpm</filename>。如果分割區 <filename>/usr</filename> 的大小為 1 GB，此資料庫將佔用 30 MB 左右的空間，尤其是在完整更新之後。如果資料庫遠大於預期，使用選項 <option>--rebuilddb</option> 來重建資料庫很有用。在執行之前，請備份舊的資料庫。<command>cron</command> 程序檔 <command>cron.daily</command> 會對資料庫做每日備份 (以 gzip 封裝)，並將備份儲存在 <filename>/var/adm/backup/rpmdb</filename> 中。副本數量由 <filename>/etc/sysconfig/backup</filename> 中的變數 <systemitem>MAX_RPMDB_BACKUPS</systemitem> (預設值：<option>5</option>) 控制。單一備份的大小大約是 1 GB 的 <filename>/usr</filename> 備份成 1 MB。
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-sources">
  <title>安裝和編譯來源套件</title>
  <para>
   所有來源套件均帶有副檔名 <filename>.src.rpm</filename> (來源 RPM)。
  </para>
  <note>
   <title>安裝的來源套件</title>
   <para>
    來源套件可從安裝媒體複製到硬碟，並用 YaST 解壓縮。但是，在套件管理員中，它們不會被標示為已安裝 (<literal>[i]</literal>)。這是因為來源套件沒有輸入 RPM 資料庫中。只有<emphasis>已安裝的</emphasis>作業系統軟體會列在 RPM 資料庫中。您在<quote>安裝</quote>來源套件時，僅會將原始程式碼新增到系統中。
   </para>
  </note>
  <para>
   在 <filename>/usr/src/packages</filename> 中必須可以找到 <command>rpm</command> 和 <command>rpmbuild</command> 的下列目錄 (除非您在如 <filename>/etc/rpmrc</filename> 的檔案中指定自訂設定)：
  </para>
  <variablelist>
   <varlistentry>
    <term><filename>SOURCES</filename>
    </term>
    <listitem>
     <para>
      存放原始來源 (<filename>.tar.bz2</filename> 或 <filename>.tar.gz</filename> 檔案等) 和特定於套裝作業系統的調整 (多為 <filename>.diff</filename> 或 <filename>.patch</filename> 檔案)
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>SPECS</filename>
    </term>
    <listitem>
     <para>
      用於 <filename>.spec</filename> 檔案，和中繼 Makefile 相似，可控制 <emphasis>build</emphasis> 程序
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>BUILD</filename>
    </term>
    <listitem>
     <para>
      所有來源均在此目錄中解壓縮、修補和編譯
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>RPMS</filename>
    </term>
    <listitem>
     <para>
      儲存完整二進位套件的地方
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>SRPMS</filename>
    </term>
    <listitem>
     <para>
      此處為來源 RPM
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   當您使用 YaST 安裝來源套件時，所有需要的元件都會安裝在 <filename>/usr/src/packages</filename> 中：<filename>SOURCES</filename> 中的來源和調整以及 <filename>SPECS</filename> 中的相關 <filename>.spec</filename> 文件。
  </para>
  <warning>
   <title>系統完整性</title>
   <para>
    不要以系統元件 (<systemitem class="resource">glibc</systemitem>、<systemitem class="resource">rpm</systemitem> 等) 進行試驗，因為這樣做會影響系統的穩定性。
   </para>
  </warning>
  <para>
   以下範例使用 <filename>wget.src.rpm</filename> 套件。安裝來源套件之後，會獲得類似下列清單中所列的檔案：
  </para>
<screen>/usr/src/packages/SOURCES/wget-1.19.5.tar.bz2
/usr/src/packages/SOURCES/wgetrc.patch
/usr/src/packages/SPECS/wget.spec</screen>
  <para>
   <command>rpmbuild</command> <option> -b<replaceable>X</replaceable></option>
   <filename> /usr/src/packages/SPECS/wget.spec</filename> 可開始編譯。<replaceable>X</replaceable> 代表建立程序各種階段的萬用字元 (請參閱 <option>--help</option> 的輸出或 RPM 文件以取得詳細資訊)。以下僅為簡略的說明：
  </para>
  <variablelist>
   <varlistentry>
    <term><option>-bp</option>
    </term>
    <listitem>
     <para>
      在 <filename>/usr/src/packages/BUILD</filename> 中準備來源：解壓縮和修補。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bc</option>
    </term>
    <listitem>
     <para>
      執行與 <option>-bp</option> 相同動作，但是會額外編譯。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bi</option>
    </term>
    <listitem>
     <para>
      執行與 <option>-bp</option> 相同的動作，但是會額外安裝建立的軟體。警告：如果套件不支援 BuildRoot 功能，您可能會覆寫組態檔。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-bb</option>
    </term>
    <listitem>
     <para>
      執行與 <option>-bi</option> 相同的動作，但是會額外建立二進位套件。如果編譯成功，二進位應該在 <filename>/usr/src/packages/RPMS</filename>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>-ba</option>
    </term>
    <listitem>
     <para>
      執行與 <option>-bb</option> 相同的動作，但是會額外建立來源 RPM。如果編譯成功，二進位應該在 <filename>/usr/src/packages/SRPMS</filename>。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><option>--short-circuit</option>
    </term>
    <listitem>
     <para>
      略過部分步驟。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   現在可使用 <command>rpm </command>
   <option>-i</option> (最好使用 <command>rpm </command>
   <option>-U</option>) 來安裝所建立的二進位 RPM。使用 <command>rpm</command> 來安裝會讓它出現在 RPM 資料庫中。
  </para>
  <para>
   請記住，規格檔案中的 <literal>BuildRoot</literal> 指令已棄用。如果您仍然需要此功能，請使用 <option>--buildroot</option> 選項做為因應措施。
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-build">
  <title>使用 build 編譯 RPM 套件</title>
  <para>
   許多套件中都包含不想要的檔案，它們會在 build 程序中增到執行系統中，因為導致危險產生。若要避免此狀況，可以使用 <systemitem>build</systemitem>，它會建立要在其中建置套件的定義環境。若要建立此 chroot 環境，必須提供 <command>build</command> 程序檔與完整的套件樹狀結構。此樹狀結構可在硬碟上、透過 NFS 或從 DVD 取得。使用 <command>build --rpms</command>
   <replaceable>DIRECTORY</replaceable> 設定位置。與 <command>rpm</command> 不同，<command>build</command> 指令在來源目錄中尋找 <filename>.spec</filename> 檔。若要以掛接在系統的 <filename>/media/dvd</filename> 之下的 DVD 建立 <filename>wget</filename> (如上面的範例)，請以 <systemitem class="username">root</systemitem> 身分執行下列指令：
  </para>
<screen><prompt role="root">root # </prompt>cd /usr/src/packages/SOURCES/
<prompt role="root">root # </prompt>mv ../SPECS/wget.spec .
<prompt role="root">root # </prompt>build --rpms /media/dvd/suse/ wget.spec</screen>
  <para>
   之後，系統便會在 <filename>/var/tmp/build-root</filename> 中建立一個最小的環境。套件將於此環境中建立。完成時，結果套件位於 <filename>/var/tmp/build-root/usr/src/packages/RPMS</filename> 中。
  </para>
  <para>
   <command>build</command> 程序檔提供其他多個選項。例如，讓程序檔偏好使用您自己的 RPM、省略建置環境的啟始化，或將 <command>rpm</command> 指令限制在上述某個階段。可使用 <command>build </command> <option>--help</option> 以及參閱 <command>build</command> man 頁面來存取其他資訊。
  </para>
 </sect2>

 <sect2 xml:id="sec-rpm-tools">
  <title>用於 RPM 歸檔和 RPM 資料庫的工具</title>
  <para>
   Midnight Commander (<command>mc</command>) 可顯示 RPM 歸檔的內容，並複製部分內容。它將歸檔以虛擬檔案系統呈現，提供 Midnight Commander 的所有常見功能表選項。使用 <keycap>F3</keycap> 可顯示 <filename>HEADER</filename>。使用游標和 <keycap function="enter"/> 可檢視歸檔結構。使用 <keycap>F5</keycap> 可複製歸檔元件。
  </para>
  <para>
   具有完整功能的套件管理員是以 YaST 模組的方式提供。如需詳細資料，請參閱<xref linkend="cha-yast-software"/>。
  </para>

 </sect2>
</sect1>
