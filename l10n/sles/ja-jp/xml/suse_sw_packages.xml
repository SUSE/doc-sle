<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="suse_sw_packages.xml" version="5.0" xml:id="sec-suse-packages">
 <title>特殊ソフトウェアパッケージに関する情報</title>

 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <para>
  次の章では、次のツールに関する基本情報を提供します。<systemitem class="resource">bash</systemitem>、<systemitem class="resource">cron</systemitem>、<systemitem class="resource">logrotate</systemitem>、<systemitem class="resource">locate</systemitem>、<systemitem class="resource">ulimit</systemitem>、および<systemitem class="resource">free</systemitem>。

 </para>

 <sect2 xml:id="sec-suse-packages-bash">
  <title><systemitem class="resource">bash</systemitem>パッケージと<filename>/etc/profile</filename></title>
  <para>
   Bashはデフォルトのシステムシェルです。ログインシェルとして使用する場合には、いくつかの初期化ファイルを読み込みます。Bashは、各ファイルを次の順序で処理します。
  </para>
  <orderedlist spacing="normal">
   <listitem>
    <para>
     <filename>/etc/profile</filename>
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>~/.profile</filename>
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>/etc/bash.bashrc</filename>
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>~/.bashrc</filename>
    </para>
   </listitem>
  </orderedlist>
  <para>
   <filename>~/.profile</filename>または<filename>~/.bashrc</filename>に、カスタム設定を行います。これらのファイルを正しく処理するには、基本設定ファイル<filename>/etc/skel/.profile</filename>または<filename>/etc/skel/.bashrc</filename>を、ユーザのホームディレクトリにコピーする必要があります。更新後、<filename>/etc/skel</filename>から設定ファイルをコピーすることをお勧めします。次のシェルコマンドを実行して、既存の個人別設定が失われるのを防止します。
  </para>
<screen><prompt>&gt; </prompt>mv ~/.bashrc ~/.bashrc.old
<prompt>&gt; </prompt>cp /etc/skel/.bashrc ~/.bashrc
<prompt>&gt; </prompt>mv ~/.profile ~/.profile.old
<prompt>&gt; </prompt>cp /etc/skel/.profile ~/.profile</screen>
  <para>
   それから、個人的な調整点を、<literal>*.old</literal>ファイルから書き戻します。
  </para>
 </sect2>

 <sect2 xml:id="sec-suse-packages-cron">
  <title><phrase>cron</phrase>パッケージ</title>
  <para>
   <systemitem class="daemon">cron</systemitem>を使用すると、事前に定義された時間にバックグラウンドでコマンドを自動的に実行できます。<systemitem class="daemon">cron</systemitem>は特別な形式のタイムテーブルを使用し、ツールには複数のデフォルトのタイムテーブルが付属しています。必要に応じて、ユーザはカスタムテーブルを指定することもできます。
  </para>
  <para>
   cronテーブルは、<filename>/var/cron/tabs</filename>にあります。<filename>/etc/crontab</filename>はシステム全体のcronテーブルとして機能します。ユーザ名を入力して、タイムテーブルの後、コマンドの前に直接コマンドを実行するようにします。<xref linkend="ex-suse-packages-cron"/>では、<systemitem class="username">root</systemitem>が入力されています。<filename>/etc/cron.d</filename>にあるパッケージ固有のテーブルも同じ形式です。<command>cron</command>のマニュアルページを参照してください(<command>man cron</command>使用)。
  </para>
  <example xml:id="ex-suse-packages-cron">
   <title>/etc/crontab内のエントリ</title>
<screen>1-59/5 * * * *   root   test -x /usr/sbin/atrun &amp;&amp; /usr/sbin/atrun</screen>
  </example>
  <para>
   <filename>/etc/crontab</filename>を、<command>crontab -e</command>コマンドで編集することはできません。これは、エディタに直接ロードして、変更し、保存する必要があります。
  </para>
  <para>
   複数のパッケージによりシェルスクリプトが<filename>/etc/cron.hourly</filename>、<filename>/etc/cron.daily</filename>、<filename>/etc/cron.weekly</filename>、および<filename>/etc/cron.monthly</filename>の各ディレクトリにインストールされます。これらの実行は、<filename>/usr/lib/cron/run-crons</filename>によって制御されます。<filename>/usr/lib/cron/run-crons</filename>は、 15分おきにメインテーブル(<filename>/etc/crontab</filename>)から実行されます。これにより、無視されていたプロセスが、適切な時刻に実行されることが保証されます。
  </para>
  <para>
   <filename>hourly</filename>、<filename>daily</filename>、または他の特定の周期の管理スクリプトをカスタム時間で実行するには、<filename>/etc/crontab</filename>のエントリを使用して、定期的にタイムスタンプファイルを削除します(<xref linkend="ex-suse-packages-cron-time"/>を参照してください。そこでは、<filename>hourly</filename>という名前の付いているファイルが毎時59分に、<filename>daily</filename>という名前の付いているファイルが毎日午前2時14分に削除されるようになっています)。
  </para>
  <example xml:id="ex-suse-packages-cron-time">
   <title>/etc/crontab: タイムスタンプファイルの削除</title>
<screen>59 *  * * *     root  rm -f /var/spool/cron/lastrun/cron.hourly
14 2  * * *     root  rm -f /var/spool/cron/lastrun/cron.daily
29 2  * * 6     root  rm -f /var/spool/cron/lastrun/cron.weekly
44 2  1 * *     root  rm -f /var/spool/cron/lastrun/cron.monthly</screen>
  </example>
  <para>
   または、<literal>/etc/sysconfig/cron</literal>の<filename>DAILY_TIME</filename>を<filename>cron.daily</filename>を起動する時刻に設定します。<literal>MAX_NOT_RUN</literal>の設定では、ユーザが長時間、指定した<literal>DAILY_TIME</literal>にコンピュータを起動しなくても、毎日のタスクの実行がトリガされるようにします。<literal>MAX_NOT_RUN</literal>の最大値は14日です。
  </para>
 </sect2>

 <sect2 xml:id="sec-suse-packages-cronstatus">
  <title>cronステータスメッセージの停止</title>
  <para>
   cronステータスメッセージによって大量の電子メールが生成されるのを避けるため、新しいインストールでは、<filename>/etc/sysconfig/cron</filename>のデフォルト値<literal>SEND_MAIL_ON_NO_ERROR</literal>が「<literal>no</literal>」に設定されています。cronのマニュアルページで説明されているように、この設定が「<literal>no</literal>」になっていても、cronのデータ出力は引き続き<literal>MAILTO</literal>アドレスに送信されます。
  </para>
  <para>
   アップデートの場合は、ニーズに合わせてこれらの値を設定することをお勧めします。
  </para>
 </sect2>

 <xi:include href="suse_logfiles.xml"/>

 <sect2 xml:id="sec-suse-locate">
  <title><command>locate</command>コマンド</title>

  <para>
   ファイルをすばやく検索するためのコマンド<command>locate</command>は、標準のインストール済みソフトウェアには含まれていません。必要に応じて、<systemitem>findutils-locate</systemitem>の後継パッケージである<systemitem>mlocate</systemitem>パッケージをインストールします。<systemitem class="daemon">updatedb</systemitem>プロセスは、毎晩、またはシステムをブートしてから約15分で自動的に起動します。
  </para>
 </sect2>

 <sect2 xml:id="sec-suse-ulimit">
  <title><command>ulimit</command>コマンド</title>
  <para>
   <command>ulimit</command>(<emphasis>user limits</emphasis>)コマンドを使用すると、システムリソースの使用量に制限を設定して、それを表示できます。<command>ulimit</command>はアプリケーションが使用できるメモリの制限に特に役立ちます。これを使用して、アプリケーションがシステムリソースを過剰に使用して速度が低下したり、オペレーティングシステムをハングさせたりすることを防止できます。
  </para>
  <para>
   <command>ulimit</command>コマンドには、さまざまなオプションがあります。メモリの使用量を制限するには、<xref linkend="tab-suse-packages-ulimit"/>に示すオプションを使用します。
  </para>
  <table xml:id="tab-suse-packages-ulimit">
   <title><command>ulimit</command>: ユーザのためのリソースの設定</title>

   <tgroup cols="2">
    <tbody>
     <row>
      <entry>
       <para>
        <option>-m</option>
       </para>
      </entry>
      <entry>
       <para>
        最大常駐セットサイズ
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-v</option>
       </para>
      </entry>
      <entry>
       <para>
        シェルが使用できる仮想メモリの最大量
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-s</option>
       </para>
      </entry>
      <entry>
       <para>
        最大スタックサイズ
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-c</option>
       </para>
      </entry>
      <entry>
       <para>
        作成されるコアファイルの最大サイズ
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        <option>-a</option>
       </para>
      </entry>
      <entry>
       <para>
        すべての現在の制限値の報告
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   システム全体のデフォルトエントリは、<filename>/etc/profile</filename>で設定されます。このファイルを直接編集することはお勧めしません。システムをアップグレードすると変更内容が上書きされるためです。システム全体のプロファイル設定をカスタマイズするには、<filename>/etc/profile.local</filename>を使用します。ユーザごとの設定は、<filename>~<replaceable>USER</replaceable>/.profile</filename>で行う必要があります。
  </para>
  <example xml:id="ex-u-ulimit-bashrc">
   <title><command>ulimit</command>: <filename>~/.bashrc</filename>中の設定</title>
<screen># Limits maximum resident set size (physical memory):
ulimit -m 98304

# Limits of virtual memory:
ulimit -v 98304</screen>
  </example>
  <para>
   メモリ割り当ては、KB単位で指定する必要があります。詳細については、<command>man bash</command>コマンドでマニュアルページを参照してください。
  </para>
  <important>
   <title><command>ulimit</command>のサポート</title>
   <para>
    すべてのシェルが<command>ulimit</command>ディレクティブをサポートするわけではありません。PAM (<literal>pam_limits</literal>など)は、<command>ulimit</command>の代わりに使用できる包括的な調整手段を提供しています。
   </para>
  </important>
 </sect2>

 <sect2 xml:id="sec-suse-free">
  <title><command>free</command>コマンド</title>
  <para>
   <command>free</command>コマンドは、空いている物理メモリ、使用済み物理メモリ、システム内のスワップ領域のほか、カーネルによって消費されたバッファとキャッシュの合計量を表示します。<emphasis>利用可能な RAM</emphasis>という概念は、統一的なメモリ管理が生まれる以前の遺物です。<emphasis>空きメモリは悪いメモリ</emphasis>というスローガンは、Linux にぴったりです。結果として、Linuxでは、空きメモリや未使用メモリを実質的に発生させず、キャッシュの量を調整するよう努力が重ねられてきました。
  </para>
  <para>
   カーネルは、アプリケーションやユーザデータについての直接的な情報を持っていません。その代わりにカーネルは、<emphasis>ページキャッシュ</emphasis>のアプリケーションとユーザデータを管理します。メモリが不足すると、その一部はスワップパーティションかファイルに書き込まれ、そこから<command>mmap</command>コマンドで読み込まれます(<command>man mmap</command>コマンドでmanページを参照)。
  </para>
  <para>
   カーネルには、たとえば、ネットワークアクセスに使用されたキャッシュが格納されている<emphasis>slabキャッシュ</emphasis>などの別のキャッシュがあります。これが<filename>/proc/meminfo</filename>のカウンタ間の違いになります。全部ではありませんが、これらのキャッシュのほとんどは、<filename>/proc/slabinfo</filename>でアクセスできます。
  </para>
  <para>
   ただし、目的が現在のRAM使用量である場合は、<filename>/proc/meminfo</filename>で情報を見つけてください。
  </para>
 </sect2>

 <sect2 xml:id="sec-suse-manpages">
  <title>manページとinfoページ</title>
  <para>
   一部のGNUアプリケーション(tarなど)では、manページが提供されなくなりました。manページが用意されていたコマンドについては、<option>--help</option>オプションを使用して簡単な概要を表示するか、詳細な手順を説明するページを使用します。infoは、GNUのハイパーテキストシステムです。このシステムについての説明は、「<command>info</command> <option> info</option>」と入力してください。Info ページは、「<command>emacs</command> <option> -f info</option>」コマンドを入力してEmacsを起動するか、コンソールで直接「<command>info</command>」と入力します。あるいは、tkinfo、xinfo、またはヘルプシステムを使用して、infoページを表示できます。
  </para>
 </sect2>



 <sect2 xml:id="sec-suse-packages-man">
  <title><command>man</command>コマンドを使用したマニュアルページの選択</title>
  <para>
   マニュアルページを読み込むには、「<command>man</command>
   <replaceable>MAN_PAGE</replaceable>」を入力します。同じ名前でさまざまなセクションに存在するマニュアルページは、対応するセクション番号とともに一覧表示されます。表示するマニュアルページを選択します。セクション番号を数秒内に入力しないと、最初のマニュアルページが表示されます。
  </para>
  <para>
   これをデフォルトのシステム動作に戻すには、<filename>~/.bashrc</filename>などのシェル初期化ファイルで<literal>MAN_POSIXLY_CORRECT=1</literal>を設定します。
  </para>
 </sect2>

 <xi:include href="suse_emacs.xml"/>
</sect1>
