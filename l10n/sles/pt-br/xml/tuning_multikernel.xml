<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="tuning_multikernel.xml" version="5.0" xml:id="cha-tuning-multikernel">
 <title>Instalando várias versões do kernel</title>
 <info>
  <abstract>
   <para>
    O <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> suporta a instalação paralela de várias versões do kernel. Ao instalar um segundo kernel, uma entrada de boot e um initrd são automaticamente criados, dessa forma, nenhuma outra configuração manual é necessária. Ao reinicializar a máquina, o kernel recém-adicionado fica disponível como mais um parâmetro de boot.
   </para>

   <para>
    Usando esta funcionalidade, você pode testar as atualizações do kernel com segurança e sempre realizar fallback para o kernel anterior comprovado. Para isso, não use as ferramentas de atualização (como a Atualização Online do YaST ou o applet de atualização). Em vez disso, siga o processo descrito neste capítulo.
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker/>
   <dm:translation>sim</dm:translation>
  </dm:docmanager>
 </info>
 <warning os="sles;sled">

  <title>Direito a suporte</title>
  <para>
   Fique ciente de você perde todo o seu direto a suporte para a máquina ao instalar um kernel autocompilado ou de terceiros. Somente os kernels distribuídos com o <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> e os kernels disponibilizados pelos canais de atualização oficiais do <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> são suportados.
  </para>
 </warning>
 <tip>
  <title>Verificar o kernel de configuração do carregador de boot</title>
  <para>
   É recomendável verificar a configuração do carregador de boot após a instalação de outro kernel para definir a entrada de boot padrão de sua escolha. Consulte a <xref linkend="sec-grub2-yast2-config"/> para obter mais informações.
  </para>
 </tip>
 <sect1 xml:id="sec-tuning-multikernel-enable">
  <title>Habilitando e configurando suporte multiversão</title>



  <para>
   A instalação de várias versões de um pacote de software (suporte multiversão) está habilitada por padrão a partir do <phrase os="sles;sled">SUSE Linux Enterprise Server 12</phrase>. Para verificar essa configuração, faça o seguinte:
  </para>

  <procedure>
   <step>
    <para>
     Abra <filename>/etc/zypp/zypp.conf</filename> como <systemitem class="username">root</systemitem> no editor de sua escolha.
    </para>
   </step>
   <step>
    <para>
     Pesquise pela string <literal>multiversion</literal> (multiversão). Se a multiversão estiver habilitada para todos os pacotes do kernel compatíveis com esse recurso, a seguinte linha aparecerá sem comentários:
    </para>
<screen>multiversion = provides:multiversion(kernel)</screen>
   </step>
   <step>
    <para>
     Para restringir o suporte multiversão a determinados tipos de kernel, adicione os nomes dos pacotes como uma lista separada por vírgula à opção <literal>multiversion</literal> em <filename>/etc/zypp/zypp.conf</filename>, por exemplo
    </para>
<screen>multiversion = kernel-default,kernel-default-base,kernel-source
</screen>
   </step>
   <step>
    <para>
     Grave as mudanças feitas.
    </para>
   </step>
  </procedure>

  <warning>
   <title>Pacotes de módulos do kernel (KMP)</title>
   <para>
    Verifique se os módulos do kernel necessários (Pacotes de Módulos do Kernel) distribuídos pelo fornecedor também foram instalados para o novo kernel atualizado. O processo de atualização do kernel não avisa sobre eventuais módulos do kernel que estiverem faltando, porque os requisitos do pacote ainda estão sendo atendidos pelo kernel antigo mantido no sistema.
   </para>
  </warning>

  <sect2 xml:id="sec-tuning-multikernel-enable-keep">
   <title>Apagando kernels não usados automaticamente</title>
   <para>
    Quando novos kernels são testados com frequência com o suporte multiversão habilitado, o menu de boot torna-se rapidamente confuso. Como a partição <filename>/boot</filename> normalmente tem espaço limitado, você também pode ter problemas com overflow de <filename>/boot</filename>. Embora seja possível apagar as versões não usadas do kernel manualmente com o YaST ou o Zypper (conforme descrito a seguir), você também pode configurar o <systemitem class="library">libzypp</systemitem> para apagar automaticamente os kernels que não são mais usados. Por padrão, nenhum kernel é apagado.
   </para>
   <procedure>
    <step>
     <para>
      Abra <filename>/etc/zypp/zypp.conf</filename> como <systemitem class="username">root</systemitem> no editor de sua escolha.
     </para>
    </step>
    <step>
     <para>
      Pesquise pela string <literal>multiversion.kernels</literal> e ative esta opção removendo o comentário da linha. Esta opção usa uma lista separada por vírgula dos seguintes valores:
     </para>
     <formalpara>
      <title><literal><replaceable>5.3.18-53.3</replaceable></literal>:</title>
      <para>
       manter o kernel com o número de versão especificado
      </para>
     </formalpara>
     <formalpara>
      <title><literal>mais recente</literal>:</title>
      <para>
       manter o kernel com o número de versão mais alto
      </para>
     </formalpara>
     <formalpara>
      <title><literal>latest-N</literal>:</title>
      <para>
       manter o kernel com o Nth número de versão mais alto
      </para>
     </formalpara>
     <formalpara>
      <title><literal>em execução</literal>:</title>
      <para>
       manter o kernel em execução
      </para>
     </formalpara>
     <formalpara>
      <title><literal>oldest</literal>:</title>
      <para>
       manter o kernel com o número de versão mais baixo (o número originalmente incluído no <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>)
      </para>
     </formalpara>
     <formalpara>
      <title><literal>oldest+N</literal>:</title>
      <para>
       manter o kernel com o Nth número de versão mais baixo
      </para>
     </formalpara>
     <para>
      Veja a seguir alguns exemplos
     </para>
     <variablelist>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,running</literal>
       </term>
       <listitem>
        <para>
         Manter o kernel mais recente e o que estiver em execução. Isso é o mesmo que não habilitar o recurso multiversão, com a exceção de que o kernel antigo será removido <emphasis>após a próxima reinicialização</emphasis>, e não logo após a instalação.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>multiversion.kernels = latest,latest-1,running </literal>
       </term>
       <listitem>
        <para>
         Manter os dois últimos kernels e o que estiver em execução.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal> multiversion.kernels = latest,running,<replaceable>5.3.18-53.3 </replaceable></literal>
       </term>
       <listitem>
        <para>
         Manter o kernel mais recente, o que estiver em execução e <replaceable>5.3.18-53.3</replaceable>.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
     <tip>
      <title>Manter o kernel em execução</title>
      <para>
       Exceto se você usa uma configuração especial, sempre mantenha o kernel marcado como <literal>running</literal> (em execução).
      </para>
      <para>
       Se você não fizer isso, ele será apagado durante a atualização. Por sua vez, isso significa que todos os módulos do kernel em execução também serão apagados e não poderão mais ser carregados.
      </para>
      <para>
       Se você decidir não manter o kernel em execução, sempre reinicialize logo após um upgrade do kernel para evitar problemas com os módulos.
      </para>
     </tip>
    </step>
   </procedure>
  </sect2>
  <sect2 xml:id="sec-tuning-multikernel-deleteoldkernel">
   <title>Caso de uso: Apagando um kernel antigo apenas depois da reinicialização</title>
   <para>
    É importante garantir que o kernel antigo seja apagado apenas depois que o sistema é reinicializado com êxito com o novo kernel.
   </para>
   <para>
    Mude a seguinte linha em <filename>/etc/zypp/zypp.conf</filename>:
   </para>
<screen>multiversion.kernels = latest,running</screen>
   <para>
    Os parâmetros anteriores pedem para o sistema manter o kernel mais recente e o que está em execução apenas se eles forem diferentes.
   </para>
  </sect2>

  <sect2 xml:id="sec-tuning-multikernel-fallback">
   <title>Caso de uso: Mantendo kernels mais antigos como fallback</title>
   <para>
    Convém manter uma ou mais versões de kernel para ter um ou mais kernels <quote>sobressalentes</quote>.
   </para>
   <para>
    Isso pode ser útil se você precisa de kernels para testes. Se alguma coisa der errado (por exemplo, sua máquina não for inicializada), você ainda poderá usar uma ou mais versões de kernel reconhecidamente boas.
   </para>
   <para>
    Mude a seguinte linha em <filename>/etc/zypp/zypp.conf</filename>:
   </para>
<screen>multiversion.kernels = latest,latest-1,latest-2,running</screen>
   <para>
    Quando você reinicializa o sistema após a instalação de um novo kernel, o sistema mantém três kernels: o atual (configurado como <literal>latest,running</literal>) e os dois antecessores imediatos (configurados como <literal>latest-1</literal> e <literal>latest-2</literal>).
   </para>
  </sect2>

  <sect2 xml:id="sec-tuning-multikernel-specificversion">
   <title>Caso de uso: Mantendo uma versão específica do kernel</title>
   <para>
    Você faz atualizações de sistema regulares e instala novas versões de kernel. Porém, você também está compilando sua própria versão do kernel e deseja garantir que o sistema a mantenha.
   </para>
   <para>
    Mude a seguinte linha em <filename>/etc/zypp/zypp.conf</filename>:
   </para>
<screen>multiversion.kernels = latest,5.3.18-53.3,running</screen>
   <para>
    Quando você reinicializa o sistema após a instalação de um novo kernel, o sistema mantém dois kernels: o kernel novo em execução (configurado como <literal>latest,running</literal>) e o seu próprio kernel compilado (configurado como <literal>5.3.18-53.3</literal>).
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-tuning-multikernel-yast">
  <title>Instalando/Removendo várias versões do kernel com o YaST</title>
  <para>
   Você pode instalar ou remover vários kernels com YaST:
  </para>
  <procedure>
   <step>
    <para>
     Inicie o YaST e abra o gerenciador de software em <menuchoice>
      <guimenu>Software</guimenu>  <guimenu>Gerenciamento de Software</guimenu>
     </menuchoice>.
    </para>
   </step>
   <step>
    <para>
     Liste todos os pacotes capazes de fornecer várias versões escolhendo <menuchoice>  <guimenu>Ver</guimenu>  <guimenu>Grupos de Pacotes</guimenu>
      <guimenu>Pacotes Multiversão</guimenu> </menuchoice>.
    </para>
    <figure>
     <title>Gerenciador de software do YaST: exibição multiversão</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="yast2_sw_multiversion.png" width="90%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="yast2_sw_multiversion.png" width="90%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     Selecione um pacote e abra a guia <guimenu>Versão</guimenu> no painel inferior à esquerda.
    </para>
   </step>
   <step>
    <para>
     Para instalar um pacote, clique na caixa de seleção ao lado dele. Uma marca de seleção verde indica que ele está selecionado para instalação.
    </para>
    <para>
     Para remover um pacote já instalado (indicado com uma marca de seleção branca), clique na caixa de seleção ao lado dele até um <literal>X</literal> vermelho indicar que ele está selecionado para remoção.
    </para>
   </step>
   <step>
    <para>
     Clique em <guimenu>Aceitar</guimenu> para iniciar a instalação.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec-tuning-multikernel-zypper">
  <title>Instalando/Removendo várias versões do kernel com o Zypper</title>
  <para>
   Você pode instalar ou remover vários kernels com o <command>zypper</command>:
  </para>
  <procedure>
   <step>
    <para>
     Use o comando <command>zypper se -s 'kernel*'</command> para exibir uma lista de todos os pacotes de kernel disponíveis:
    </para>
<screen><?dbsuse-fo font-size="7pt"?>


S  | Name                 | Type    | Version           | Arch   | Repository
---+----------------------+---------+-------------------+--------+---------------------------------
i+ | kernel-default       | package | 5.3.18-53.3       | x86_64 | (System Packages)
i+ | kernel-default       | package | 5.3.18-54.2       | x86_64 | SLE-Module-Basesystem15-SP3-Pool
   | kernel-default-base  | package | 5.3.18-54.2.16.15 | x86_64 | SLE-Module-Basesystem15-SP3-Pool
   | kernel-default-devel | package | 5.3.18-54.2       | x86_64 | SLE-Module-Basesystem15-SP3-Pool
   | kernel-devel         | package | 5.3.18-54.2       | noarch | SLE-Module-Basesystem15-SP3-Pool
i  | kernel-firmware      | package | 20210208-2.4      | noarch | SLE-Module-Basesystem15-SP3-Pool
   | kernel-macros        | package | 5.3.18-54.2       | noarch | SLE-Module-Basesystem15-SP3-Pool
   | kernel-preempt       | package | 5.3.18-54.2       | x86_64 | SLE-Module-Basesystem15-SP3-Pool
</screen>
   </step>
   <step>
    <para>
     Especifique a versão exata ao instalar:
    </para>
<screen><prompt>tux &gt; </prompt><command>sudo</command> zypper in kernel-default-5.3.18-53.3</screen>
   </step>
   <step>
    <para>
     Ao desinstalar um kernel, use os comandos <command>zypper se -si 'kernel*'</command> para listar todos os kernels instalados e o <command>zypper rm</command> <replaceable> NOMEDOPACOTE-VERSÃO</replaceable> para remover o pacote.
    </para>
   </step>
  </procedure>
 </sect1>
 
</chapter>
