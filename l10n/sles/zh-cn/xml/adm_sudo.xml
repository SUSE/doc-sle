<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="adm_sudo.xml" version="5.0" xml:id="cha-adm-sudo"> <title><command>sudo</command> 基本知识</title>
 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker/>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
    </info>
    <para>
  运行某些命令需要 root 特权。但是，出于安全原因及避免出错考虑，我们不建议以 <systemitem class="username">root</systemitem> 身份登录。更安全的做法是先以普通用户身份登录，再使用 <command>sudo</command> 以提升的特权来运行命令。
 </para>
 <para>
  在 <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 上，<command>sudo</command> 配置为与 <command>su</command> 的工作方式类似。但是，<command>sudo</command> 提供了一种灵活机制，可让用户使用其他任何用户的特权运行命令。这样，便可为某些用户和组指派具有特定特权的角色。例如，可以允许组 <systemitem class="groupname">users</systemitem> 的成员使用用户 <systemitem class="username">wilber</systemitem> 的特权运行命令。您可以通过禁止任何命令选项，来进一步限制对命令的访问。虽然 su 始终需要 <systemitem class="username">root</systemitem> 口令才能使用 PAM 进行身份验证，但是您可以将 <command>sudo</command> 配置为使用您自己的身份凭证进行身份验证。这意味着用户无需共享 <systemitem class="username">root</systemitem> 口令，因而提高了安全性。
 </para>
 <sect1 xml:id="sec-adm-sudo-usage">
  <title><command>sudo</command> 基本用法</title>

  <para>
   以下章节将会介绍 <command>sudo</command> 的基本用法。
  </para>

  <sect2 xml:id="sec-adm-sudo-usage-cmd">
   <title>运行单个命令</title>
   <para>
    作为普通的用户，您可以在命令前加上 <command>sudo</command> 来以 <systemitem class="username">root</systemitem> 身份运行任何命令。系统会提示您提供 root 口令。如果身份验证成功，便会以 <systemitem class="username">root</systemitem> 身份运行命令：
   </para>
<screen>
<prompt>tux &gt; </prompt><command>id -un</command><co xml:id="co-sudo-usage-id"/>
tux
<prompt>tux &gt; </prompt><command>sudo</command> <command>id -un</command>
root's password:<co xml:id="co-sudo-usage-pw"/>
root
<prompt>tux &gt; </prompt><command>id -un</command>
tux<co xml:id="co-sudo-usage-after"/>
<prompt>tux &gt; </prompt><command>sudo</command> <command>id -un</command>
<co xml:id="co-sudo-usage-nopw"/>
root
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-usage-id">
     <para>
      <command>id -un</command> 命令会打印当前用户的登录名。
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-pw">
     <para>
      在输入过程中不会显示口令，无论是明文还是屏蔽字符都不显示。
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-after">
     <para>
      只有以 <command>sudo</command> 开头的命令才会以提升的特权运行。
     </para>
    </callout>
    <callout arearefs="co-sudo-usage-nopw">
     <para>
      提升的特权会持续一段时间，因此您不必再次提供 <systemitem class="username">root</systemitem>口令。
     </para>
    </callout>
   </calloutlist>
   <tip>
    <title>I/O 重定向</title>
    <para>
     使用 <command>sudo</command> 时，I/O 重定向不起作用：
    </para>
<screen>
<prompt>tux &gt; </prompt><command>sudo</command> echo s &gt; /proc/sysrq-trigger
bash: /proc/sysrq-trigger: Permission denied
<prompt>tux &gt; </prompt><command>sudo</command> cat &lt; /proc/1/maps
bash: /proc/1/maps: Permission denied
</screen>
    <para>
     在上面的示例中，只有 <command>echo</command> 和 <command>cat</command> 命令才以提升的特权运行。重定向将由用户的外壳以用户特权执行。要以提升的特权执行重定向，请根据<xref linkend="sec-sudo-shell"/>中所述启动外壳，或使用 <command>dd</command> 实用程序：
    </para>
<screen>
echo s | sudo dd of=/proc/sysrq-trigger
sudo dd if=/proc/1/maps | cat 
</screen>
   </tip>
  </sect2>

  <sect2 xml:id="sec-sudo-shell">
   <title>启动外壳</title>
   <para>
    使用 <command>sudo</command> 来以提升的特权运行命令的做法并不总是可行。虽然可以使用 <command>sudo bash</command> 命令，但还是建议您使用以下其中一种内置机制来启动外壳：
   </para>
   <variablelist>
    <varlistentry>
     <term><literal>sudo -s (&lt;命令&gt;)</literal>
     </term>
     <listitem>
      <para>
       启动 <envar>SHELL</envar> 环境变量所指定的外壳或目标用户的默认外壳。如果指定了某个命令，该命令将被传递到外壳（使用 <option>-c</option> 选项）。否则，外壳将以交互模式运行。
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -s
root's password:
<prompt>root:/home/tux # </prompt>exit
<prompt>tux:~ &gt; </prompt>
</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>sudo -i (&lt;命令&gt;)</literal>
     </term>
     <listitem>
      <para>
       与 <option>-s</option> 类似，但会作为登录外壳启动外壳。也就是说，系统会对外壳的启动文件（<filename>.profile</filename> 等）进行处理，并会将当前的工作目录设置为目标用户的主目录。
      </para>
<screen>
<prompt>tux:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:~ # </prompt>exit
<prompt>tux:~ &gt; </prompt>
            </screen>
     </listitem>
    </varlistentry>
   </variablelist>
     <tip>
   <title>环境变量</title>
   <para>
    默认情况下，<command>sudo</command> 不会传播环境变量。可以使用 <literal>env_reset</literal> 选项更改此行为（请参见<xref linkend="tab-adm-sudo-options"/>）。
   </para>
  </tip>
  </sect2>

 </sect1>
 <sect1 xml:id="sec-sudo-conf">
  <title>配置 <command>sudo</command></title>

  <para>
   <command>sudo</command> 提供各种可配置的选项。
  </para>

  <note>
   <title>无法使用 sudo</title>
   <para>
    如果您不小心将自己锁定在 <command>sudo</command> 之外，则可以使用 <command>su -</command> 和 <systemitem class="username">root</systemitem> 口令来启动 root 外壳。要修复该错误，请运行 <command>visudo</command>。
   </para>
  </note>

  <sect2 xml:id="sec-sudo-conf-edit">
   <title>编辑配置文件</title>
   <para>
    <command>sudo</command> 的主要策略配置文件为 <filename>/etc/sudoers</filename>。如果该文件的格式错误，您可能会无法进入系统，因此强烈建议您使用 <command>visudo</command> 来进行编辑。visudo 可以防止发生编辑冲突，并会在保存修改内容之前检查语法错误。
   </para>
   <para>
    您可以通过设置 <envar>EDITOR</envar> 环境变量来使用 vi 以外的另一种编辑器，例如：
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo</screen>
   <para>
    请记住，<filename>/etc/sudoers</filename> 文件是由系统软件包提供的，直接在该文件中进行修改可能会中断更新。因此，建议您将自定义配置放到 <filename>/etc/sudoers.d/</filename> 目录下的文件中。使用以下命令创建或编辑文件：
   </para>
<screen>sudo visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <para>
    以下命令使用另一种编辑器（在本例中为 <command>nano</command>）打开文件：
   </para>
<screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <note>
    <title><filename>/etc/sudoers.d</filename> 中忽略的文件</title>
    <para>
     <filename>/etc/sudoers</filename> 中的 <literal>#includedir</literal> 指令会忽略以 <literal>~</literal>（波浪线）字符结尾或包含 <literal>.</literal>（点）字符的文件。
    </para>
   </note>
   <para>
    关于 <command>visudo</command> 命令的详细信息，请运行 <command>man 8 visudo</command>。
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-syntax">
   <title>sudoers 基本配置语法</title>
   <para>
    sudoers 配置文件包含两种类型的选项：字符串和标志。字符串可以包含任何值，而标志则只能在“ON”或“OFF”之间切换。sudoers 配置文件最重要的语法构造如下：
   </para>
<screen>
# Everything on a line after # is ignored <co xml:id="co-sudo-syntax-comment"/>
Defaults !insults # Disable the insults flag <co xml:id="co-sudo-syntax-flag"/>
Defaults env_keep += "DISPLAY HOME" # Add DISPLAY and HOME to env_keep
tux ALL = NOPASSWD: /usr/bin/frobnicate, PASSWD: /usr/bin/journalctl <co xml:id="co-sudo-syntax-rule"/>
</screen>
   <calloutlist>
    <callout arearefs="co-sudo-syntax-comment">
     <para>
      存在两个例外：<literal>#include</literal> 和 <literal>#includedir</literal> 是普通命令。
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-flag">
     <para>
      去除 <literal>! </literal> 字符可将所需标志设置为 ON。
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-rule">
     <para>
      请参见<xref linkend="sec-sudo-conf-rule"/>。
     </para>
    </callout>
   </calloutlist>

   <variablelist xml:id="tab-adm-sudo-options"><title>有用的标志和选项</title>
   <varlistentry>
    <term>
     <literal>targetpw</literal>
    </term>
    <listitem>
     <para>
      此标志控制调用用户是需要输入目标用户（例如 <systemitem class="username">root</systemitem>）的口令 (ON) 还是需要输入调用用户的口令 (OFF)。
     </para>
<screen>Defaults targetpw # Turn targetpw flag ON</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <literal>rootpw</literal>
    </term>
    <listitem>
      <para>
       如果设置，<command>sudo</command> 将提示输入 <systemitem class="username">root</systemitem> 口令。默认值为 OFF。
      </para>
<screen>Defaults !rootpw # Turn rootpw flag OFF</screen>
    </listitem>
   </varlistentry>
     <varlistentry>
    <term>
     <literal>env_reset</literal>
    </term>
    <listitem>
      <para>
       如果设置，<command>sudo</command> 会构造一个包含 <envar>TERM</envar>、<envar>PATH</envar>、<envar>HOME</envar>、<envar>MAIL</envar>、<envar>SHELL</envar>、<envar>LOGNAME</envar>、<envar>USER</envar>、<envar>USERNAME</envar> 和 <envar>SUDO_*</envar> 的最小环境。此外，会从调用环境导入 <literal>env_keep</literal> 中列出的变量。默认值为“ON”。
      </para>
<screen>Defaults env_reset # Turn env_reset flag ON</screen>
     </listitem>
     </varlistentry>
       <varlistentry>
    <term>
     <literal>env_keep</literal>
    </term>
    <listitem>
      <para>
       <literal>env_reset</literal> 标志设为“ON”时要保留的环境变量列表。
      </para>
<screen>
# Set env_keep to contain EDITOR and PROMPT
Defaults env_keep = "EDITOR PROMPT"
Defaults env_keep += "JRE_HOME" # Add JRE_HOME
Defaults env_keep -= "JRE_HOME" # Remove JRE_HOME
</screen>
    </listitem>
       </varlistentry>
         <varlistentry>
    <term>
     <literal>env_delete</literal>
    </term>
    <listitem>
      <para>
       <literal>env_reset</literal> 标志设为“OFF”时要去除的环境变量列表。
      </para>
<screen>
# Set env_delete to contain EDITOR and PROMPT
Defaults env_delete = "EDITOR PROMPT"
Defaults env_delete += "JRE_HOME" # Add JRE_HOME
Defaults env_delete -= "JRE_HOME" # Remove JRE_HOME
</screen>
     </listitem>
  </varlistentry>
   </variablelist>

   <para>
    还可以使用 <literal>Defaults</literal> 令牌为用户、主机和命令集合创建别名。并且，可以仅将选项应用到特定用户集。
   </para>
   <para>
    关于 <filename>/etc/sudoers</filename> 配置文件的详细信息，请参见 <command>man 5 sudoers</command>。
   </para>
  </sect2>

  <sect2 xml:id="sec-sudo-conf-rule">
   <title>基本 sudoers 规则</title>
   <para>
    每个规则都遵循以下模式（<literal>[]</literal> 标记的是可选部分）：
   </para>
<screen>
#Who      Where         As whom      Tag                What
User_List Host_List = [(User_List)] [NOPASSWD:|PASSWD:] Cmnd_List
</screen>
   <variablelist>
    <title>sudoers 规则语法</title>
    <varlistentry>
     <term><literal>User_List</literal>
     </term>
     <listitem>
      <para>
       一个或多个（用逗号分隔）标识符：用户名、格式为 <literal>%GROUPNAME</literal> 的组或格式为 <literal>#UID</literal> 的用户 ID。可以使用 <literal>! </literal> 前缀.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Host_List</literal>
     </term>
     <listitem>
      <para>
       一个或多个（用逗号分隔）标识符：（完全限定的）主机名或 IP 地址。可以使用 <literal>! </literal> 前缀.<literal>Host_List</literal> 的常用选项为 <literal>ALL</literal>。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>NOPASSWD:|PASSWD:</literal>
     </term>
     <listitem>
      <para>
       如果用户在 <literal>NOPASSWD:</literal> 后面运行的命令与 <literal>Cmd_List</literal> 匹配，系统不会提示用户输入口令。
      </para>
      <para>
       <literal>PASSWD</literal> 是默认选项。仅当 <literal>PASSWD</literal> 和 <literal>NOPASSWD</literal> 位于同一行时，才需要指定此选项：
      </para>
<screen>tux ALL = PASSWD: /usr/bin/foo, NOPASSWD: /usr/bin/bar</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Cmnd_List</literal>
     </term>
     <listitem>
      <para>
       一个或多个（用逗号分隔）说明符：可执行文件的路径，后跟允许使用的可选参数。
      </para>
<screen>
/usr/bin/foo     # Anything allowed
/usr/bin/foo bar # Only "/usr/bin/foo bar" allowed
/usr/bin/foo ""  # No arguments allowed
</screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    <literal>ALL</literal> 可以用作 <literal>User_List</literal>、<literal>Host_List</literal> 和 <literal>Cmnd_List</literal>。
   </para>
   <para>
    允许 <systemitem class="username">tux</systemitem> 在无需输入口令的情况下以 root 身份运行所有命令的规则：
   </para>
<screen>tux ALL = NOPASSWD: ALL</screen>
   <para>
    允许 <systemitem class="username">tux</systemitem> 运行 <command>systemctl restart apache2</command> 的规则：
   </para>
<screen>tux ALL = /usr/bin/systemctl restart apache2</screen>
   <para>
    允许 <systemitem class="username">tux</systemitem> 在不带参数的情况下以 <systemitem>admin</systemitem> 身份运行 <command>wall</command> 的规则：
   </para>
<screen>tux ALL = (admin) /usr/bin/wall ""</screen>
   <warning>
    <title>不安全的规则</title>
    <para>
     <emphasis>不要</emphasis>使用不带 <literal>Defaults targetpw</literal> 的 <literal>ALL ALL = ALL</literal> 之类规则。否则，任何人都能够以 <systemitem class="username">root</systemitem> 身份运行命令。
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-sudo-usecases">
  <title><command>sudo</command> 用例</title>

  <para>
   虽然默认配置适用于标准的使用方案，您仍可以根据特定需求自定义默认配置。
  </para>

  <sect2 xml:id="sec-sudo-usecases-userpw">
   <title>在无需提供 <systemitem class="username">root</systemitem> 口令的情况下使用 <command>sudo</command></title>
   <para>
    根据设计，组 <systemitem class="groupname">wheel</systemitem> 的成员能以 root 身份运行所有带有 <command>sudo</command> 的命令。下面的过程介绍如何将用户帐户添加到 <systemitem class="groupname">wheel</systemitem> 组。
   </para>
   <procedure>
    <step>
     <para>
      将您的用户帐户添加到 <systemitem class="groupname">wheel</systemitem> 组。
     </para>
     <para>
      如果您的用户帐户还不是 <systemitem class="groupname">wheel</systemitem> 组的成员，请使用 <command>sudo usermod -a -G wheel <replaceable>USERNAME</replaceable></command> 命令添加。注销然后重新登录即可启用更改。运行 <command>groups <replaceable>USERNAME</replaceable></command> 命令以校验更改是否成功。
     </para>
    </step>
    <step>
     <para>
      使用用户帐户的普通口令进行身份验证。
     </para>
     <para>
      使用 <command>visudo</command> 命令创建文件 <filename>/etc/sudoers.d/userpw</filename>（请参见<xref linkend="sec-sudo-conf-edit"/>）并添加以下内容：
     </para>
<screen>Defaults !targetpw</screen>
    </step>
    <step>
     <para>
      选择新默认规则。
     </para>
     <para>
      根据是否想要用户重新输入口令，取消对 <filename>/etc/sudoers</filename> 中相应行的注释，并将默认规则注释掉。
     </para>
<screen>
## Uncomment to allow members of group wheel to execute any command
# %wheel ALL=(ALL) ALL

## Same thing without a password
# %wheel ALL=(ALL) NOPASSWD: ALL
</screen>
    </step>
    <step>
     <para>
      提高默认规则的限制性.
     </para>
     <para>
      将 <filename>/etc/sudoers</filename> 中允许一切操作的规则注释掉或去除：
     </para>
<screen>ALL     ALL=(ALL) ALL   # WARNING! Only use this together with 'Defaults targetpw'!</screen>
     <warning>
      <title>sudoers 中的危险规则</title>
      <para>
       请勿跳过此步骤。否则<emphasis>任何</emphasis>用户都能以 <systemitem class="username">root</systemitem> 身份执行<emphasis>任何</emphasis>命令！
      </para>
     </warning>
    </step>
    <step>
     <para>
      测试配置.
     </para>
     <para>
      以 <systemitem class="groupname">wheel</systemitem> 的成员和非成员身份运行 <command>sudo</command>。
     </para>
<screen>
<prompt>tux:~ &gt; </prompt>groups
users wheel
<prompt>tux:~ &gt; </prompt>sudo id -un
tux's password:
root
<prompt>wilber:~ &gt; </prompt>groups
users
<prompt>wilber:~ &gt; </prompt>sudo id -un
wilber is not in the sudoers file.  This incident will be reported.
</screen>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec-sudo-usecases-xorg">
   <title>对 X.Org 应用程序使用 <command>sudo</command></title>
   <para>
    使用 <command>sudo</command> 启动图形应用程序通常会导致以下错误：
   </para>
<screen>
<prompt>tux &gt; </prompt><command>sudo</command> xterm
xterm: Xt error: Can't open display: %s
xterm: DISPLAY is not set
</screen>
   <para>
    一种简单的解决方法是使用 xhost 来暂时允许 root 用户访问本地用户的 X 会话。可使用以下命令完成此操作：
   </para>
<screen>xhost si:localuser:root</screen>
   <para>
    以下命令可去除授予的访问权限：
   </para>
<screen>xhost -si:localuser:root</screen>
   <warning>
    <title>潜在安全问题</title>
    <para>
     以 root 特权运行图形应用程序存在安全隐患。建议仅在例外的情况下，才启用对图形应用程序的 root 访问权限。另外，建议在关闭图形应用程序后，立即撤消授予的 root 访问权限。
    </para>
   </warning>
  </sect2>
 </sect1>
 <sect1 xml:id="sec-adm-sudo-moreinfo">
  <title>更多信息</title>
  <para>
   <command>sudo --help</command> 命令提供可用命令行选项的简要概述，而 <command>man sudoers</command> 命令则会提供有关 sudoers 及其配置的详细信息。<filename/>
  </para>
 </sect1>
</chapter>
